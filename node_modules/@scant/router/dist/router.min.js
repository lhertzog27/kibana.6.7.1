/*!
 * @scant/router v0.1.0
 * (c) 2018-present Joe Fleming (https://github.com/w33ble)
 * Released under the MIT License.
 */
!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("url-pattern")):"function"==typeof define&&define.amd?define(["url-pattern"],e):r.router=e(r.Path)}(this,function(r){"use strict";r=r&&r.hasOwnProperty("default")?r.default:r;var e=function(r,e){return"object"===r?"object"==typeof e&&null!=e&&!Array.isArray(e):"array"===r?Array.isArray(e):"null"===r?null===e:"unset"===r?null==e:typeof e===r},n=function(r){return/^\//.test(r)},t=function(){};var a=function(r){if(!e("object",r))return!1;var n,t,a=e("unset",r.action)||e("function",r.action),i=e("unset",r.children)||e("array",r.children),o=e("unset",r.meta)||e("object",r.meta);return n=r,t="path",Object.prototype.hasOwnProperty.call(n,t)&&a&&i&&o},i=function(r,e){if(void 0===e&&(e=""),!n(r))return!1;var t=""+e.replace(/\/$/,"")+r;return t.length>1?t.replace(/\/$/,""):t},o=function(r){var e=r.match(/^(\/[^?#\s]*)(\?[^#\s]*)?(#[^\s]*)?$/);if(!e)throw new Error("Failed to extract pathname: "+r);return{url:e[0],pathname:e[1],search:e[2],hash:e[3]}},u=function(r){return{path:r.path,name:r.name,meta:r.meta}};return function(s,c){if(void 0===c&&(c={}),!e("array",s))throw new Error("An array of route objects is required");var f=c.useHash?"#":c.useHashBang?"#!":"",h=n(c.basepath)?i(c.basepath):"",p={configs:[],parsers:[],names:[]};function m(r){return p.parsers.reduce(function(e,n,t){if(!1!==e)return e;var a=n.match(r);return a?Object.assign({},p.configs[t],{params:a,index:t}):e},!1)}return s.forEach(function(n){(function n(o,u){if(void 0===u&&(u=""),!a(o))throw new Error("Route definition is invalid: "+JSON.stringify(o));var s=i(o.path,u);if(!1===s)throw new Error("Route's path is invalid: "+o.path);return e("array",o.children)?o.children.reduce(function(r,e){return r.concat(n(e,s))},[]):[{name:o.name,path:s,meta:o.meta||{},action:o.action||t,parser:new r(s,{segmentNameCharset:"a-zA-Z0-9_-",segmentValueCharset:"a-zA-Z0-9-_~ %."})}]})(n).forEach(function(r){var e=r.parser,n=function(r,e){var n={};for(var t in r)e.indexOf(t)>=0||Object.prototype.hasOwnProperty.call(r,t)&&(n[t]=r[t]);return n}(r,["parser"]);if(null!=n.name&&p.names.includes(n.name))throw new Error("Route with name '"+n.name+"' already defined, names must be unique");p.parsers.push(e),p.configs.push(n),p.names.push(n.name)})}),{match:function(r){var e=m(o(r).pathname);return!1!==e&&u(e)},parse:function(r){return new Promise(function(e,n){var t,a,i;return t=o(r),!1===(a=m(t.pathname))?n(new Error("No matching route found: "+r)):(Object.keys(a.params).forEach(function(r){var e=parseFloat(a.params[r]);Number.isNaN(e)||(a.params[r]=e)}),i={location:t,params:a.params,match:u(a),router:this},Promise.resolve(a.action(i)).then(function(r){try{return e(i)}catch(r){return n(r)}}.bind(this),n))}.bind(this))},create:function(r,e){if(void 0===e&&(e={}),null==r)return!1;if(n(r))return""+f+h+r;if(!p.names.includes(r))return!1;var t=p.configs.findIndex(function(e){return e.name===r});try{var a=p.parsers[t].stringify(e);return""+f+h+a}catch(r){throw r.message="Route can not be created, "+r.message,r}}}}});
//# sourceMappingURL=router.min.js.map
