"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_isempty_1 = __importDefault(require("lodash.isempty"));
const github_1 = require("../lib/github");
const cliService_1 = require("./cliService");
async function initSteps(options) {
    const [owner, repoName] = options.upstream.split('/');
    github_1.setAccessToken(options.accessToken);
    try {
        const author = options.all ? null : options.username;
        const commits = options.sha
            ? [await cliService_1.getCommitBySha(owner, repoName, options.sha)]
            : await cliService_1.getCommitsByPrompt(owner, repoName, author, options.multipleCommits);
        const branches = !lodash_isempty_1.default(options.branches)
            ? options.branches
            : await cliService_1.getBranchesByPrompt(options.branchChoices, options.multipleBranches);
        await cliService_1.maybeSetupRepo(owner, repoName, options.username);
        await cliService_1.doBackportVersions(owner, repoName, commits, branches, options.username, options.labels);
    }
    catch (e) {
        cliService_1.handleErrors(e);
    }
}
exports.initSteps = initSteps;
