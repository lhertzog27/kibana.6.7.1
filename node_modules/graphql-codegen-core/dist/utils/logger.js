"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var winston = require("winston");
var winston_1 = require("winston");
var ts_log_1 = require("ts-log");
var chalk_1 = require("chalk");
var logger;
function getLogger() {
    return logger || ts_log_1.dummyLogger;
}
exports.getLogger = getLogger;
useWinstonLogger();
function setLogger(newLogger) {
    logger = newLogger;
}
exports.setLogger = setLogger;
function setSilentLogger() {
    logger = ts_log_1.dummyLogger;
}
exports.setSilentLogger = setSilentLogger;
function useWinstonLogger() {
    if (logger && logger.levels) {
        // Winston already set
        return;
    }
    var winstonLogger = winston_1.createLogger({
        transports: [
            new winston.transports.Console({
                level: 'info',
                format: winston.format.combine(winston.format.timestamp({
                    format: 'HH:mm:ss.SSS'
                }), winston.format.printf(function (info) {
                    if (info.level === 'error') {
                        return chalk_1.default.redBright((info.message || '') + "\n" + (info.meta && Object.keys(info.meta).length ? JSON.stringify(info.meta) : ''));
                    }
                    return info.timestamp + " - " + info.level + ": " + (info.message ? info.message : '') + " " + (info.meta && Object.keys(info.meta).length ? JSON.stringify(info.meta) : '');
                }))
            })
        ]
    });
    winstonLogger.trace = winstonLogger.silly.bind(winstonLogger);
    logger = winstonLogger;
}
exports.useWinstonLogger = useWinstonLogger;
//# sourceMappingURL=logger.js.map