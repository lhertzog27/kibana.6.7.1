{"version":3,"file":"createHashStateHistory.js","sources":["src/createHashStateHistory.js"],"sourcesContent":["/* eslint no-use-before-define: 0 */\nimport locationUtils from 'history/LocationUtils';\nimport PathUtils from 'history/PathUtils';\nimport _createTransitionManager from 'history/createTransitionManager';\nimport DOMUtils from 'history/DOMUtils';\n\nconst { createLocation, locationsAreEqual } = locationUtils;\nconst {\n  addLeadingSlash,\n  stripLeadingSlash,\n  stripTrailingSlash,\n  hasBasename,\n  stripBasename,\n  createPath,\n} = PathUtils;\nconst {\n  canUseDOM,\n  addEventListener,\n  removeEventListener,\n  getConfirmation,\n  supportsGoWithoutReloadUsingHash,\n  supportsHistory,\n} = DOMUtils;\n\n// goofy hack to handle cjs and esm differences in build\nconst createTransitionManager = Object.hasOwnProperty.call(_createTransitionManager, 'default')\n  ? _createTransitionManager.default\n  : _createTransitionManager;\n\nfunction warning(condition, message) {\n  if (condition) return;\n  // eslint-disable-next-line no-console\n  console.warn(message);\n}\n\nfunction invariant(condition, message) {\n  if (condition) return;\n  throw new Error(`Invariant failed: ${message || ''}`);\n}\n\nconst PopStateEvent = 'popstate';\nconst HashChangeEvent = 'hashchange';\n\nconst getHistoryState = () => {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n};\n\nconst HashPathCoders = {\n  hashbang: {\n    encodePath: path => (path.charAt(0) === '!' ? path : `!/${stripLeadingSlash(path)}`),\n    decodePath: path => (path.charAt(0) === '!' ? path.substr(1) : path),\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash,\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash,\n  },\n};\n\nconst getHashPath = () => {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  const { href } = window.location;\n  const hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nconst pushHashPath = path => {\n  window.location.hash = path;\n};\n\nconst replaceHashPath = path => {\n  const hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(\n    `${window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0)}#${path}`\n  );\n};\n\nconst createHashStateHistory = (props = {}) => {\n  invariant(canUseDOM, 'Hash history needs a DOM');\n\n  const globalHistory = window.history;\n  const canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  const canUseHistory = supportsHistory();\n\n  const { getUserConfirmation = getConfirmation, hashType = 'slash', keyLength = 6 } = props;\n\n  const basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  const { encodePath, decodePath } = HashPathCoders[hashType];\n\n  const getDOMLocation = () => {\n    const { key, state } = getHistoryState();\n    let path = decodePath(getHashPath());\n\n    warning(\n      !basename || hasBasename(path, basename),\n      `${'You are attempting to use a basename on a page whose URL path does not begin ' +\n        'with the basename. Expected path \"'}${path}\" to begin with \"${basename}\".`\n    );\n\n    if (basename) path = stripBasename(path, basename);\n\n    return createLocation(path, state, key);\n  };\n\n  const createKey = () =>\n    Math.random()\n      .toString(36)\n      .substr(2, keyLength);\n\n  const transitionManager = createTransitionManager();\n\n  const setState = nextState => {\n    Object.assign(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  let forceNextPop = false;\n  let ignorePath = null;\n\n  const handleHashChange = () => {\n    const path = getHashPath();\n    const encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      const location = getDOMLocation();\n      const prevLocation = history.location;\n\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  const handlePop = location => {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      const action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, ok => {\n        if (ok) {\n          setState({ action, location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  const revertPop = fromLocation => {\n    const toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    let toIndex = allPaths.lastIndexOf(createPath(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    let fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    const delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  const path = getHashPath();\n  const encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  const initialLocation = getDOMLocation();\n  let allPaths = [createPath(initialLocation)];\n\n  // Public interface\n\n  const createHref = location => `#${encodePath(basename + createPath(location))}`;\n\n  // eslint-disable-next-line no-shadow\n  const push = (path, state) => {\n    const action = 'PUSH';\n    const location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, ok => {\n      if (!ok) return;\n\n      // eslint-disable-next-line no-shadow\n      const path = createPath(location);\n      // eslint-disable-next-line no-shadow\n      const encodedPath = encodePath(basename + path);\n\n      if (canUseHistory) {\n        // eslint-disable-next-line no-shadow\n        const { key, state } = location;\n        const href = createHref(location);\n        globalHistory.pushState({ key, state }, null, href);\n      } else {\n        // legacy fallback\n        ignorePath = path;\n\n        const hashChanged = getHashPath() !== encodedPath;\n\n        if (hashChanged) {\n          // We cannot tell if a hashchange was caused by a PUSH, so we'd\n          // rather setState here and ignore the hashchange. The caveat here\n          // is that other hash histories in the page will consider it a POP.\n          warning(\n            false,\n            'Hash history cannot PUSH the same path; a new entry will not be added to the history stack'\n          );\n\n          setState();\n        } else {\n          warning(\n            state === undefined,\n            'Browser history cannot push state in browsers that do not support HTML5 history, state is ignored'\n          );\n        }\n\n        pushHashPath(encodedPath);\n      }\n\n      const prevIndex = allPaths.lastIndexOf(createPath(history.location));\n      const nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n      nextPaths.push(path);\n      allPaths = nextPaths;\n\n      setState({ action, location });\n    });\n  };\n\n  // eslint-disable-next-line no-shadow\n  const replace = (path, state) => {\n    const action = 'REPLACE';\n    const location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, ok => {\n      if (!ok) return;\n\n      // eslint-disable-next-line no-shadow\n      const path = createPath(location);\n      // eslint-disable-next-line no-shadow\n      const encodedPath = encodePath(basename + path);\n\n      if (canUseHistory) {\n        // eslint-disable-next-line no-shadow\n        const { key, state } = location;\n        const href = createHref(location);\n        globalHistory.replaceState({ key, state }, null, href);\n      } else {\n        // legacy fallback\n\n        warning(\n          state === undefined,\n          'Browser history cannot push state in browsers that do not support HTML5 history, state is ignored'\n        );\n\n        const hashChanged = getHashPath() !== encodedPath;\n\n        if (hashChanged) {\n          // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n          // rather setState here and ignore the hashchange. The caveat here\n          // is that other hash histories in the page will consider it a POP.\n          ignorePath = path;\n          replaceHashPath(encodedPath);\n        }\n      }\n\n      const prevIndex = allPaths.indexOf(createPath(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action, location });\n    });\n  };\n\n  const go = n => {\n    warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n\n    globalHistory.go(n);\n  };\n\n  const goBack = () => go(-1);\n\n  const goForward = () => go(1);\n\n  let listenerCount = 0;\n\n  const checkDOMListeners = delta => {\n    listenerCount += delta;\n    const eventType = canUseHistory ? PopStateEvent : HashChangeEvent;\n\n    if (listenerCount === 1) {\n      addEventListener(window, eventType, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, eventType, handleHashChange);\n    }\n  };\n\n  let isBlocked = false;\n\n  const block = (prompt = false) => {\n    const unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return () => {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  const listen = listener => {\n    const unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return () => {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  const history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref,\n    push,\n    replace,\n    go,\n    goBack,\n    goForward,\n    block,\n    listen,\n  };\n\n  return history;\n};\n\nexport default createHashStateHistory;\n"],"names":["createLocation","locationUtils","locationsAreEqual","addLeadingSlash","PathUtils","stripLeadingSlash","stripTrailingSlash","hasBasename","stripBasename","createPath","canUseDOM","DOMUtils","addEventListener","removeEventListener","getConfirmation","supportsGoWithoutReloadUsingHash","supportsHistory","createTransitionManager","Object","hasOwnProperty","call","_createTransitionManager","default","warning","condition","message","console","warn","invariant","Error","PopStateEvent","HashChangeEvent","getHistoryState","window","history","state","e","HashPathCoders","hashbang","encodePath","path","charAt","decodePath","substr","noslash","slash","getHashPath","href","location","hashIndex","indexOf","substring","pushHashPath","hash","replaceHashPath","replace","slice","createHashStateHistory","props","globalHistory","canGoWithoutReload","canUseHistory","getUserConfirmation","hashType","keyLength","basename","getDOMLocation","key","createKey","Math","random","toString","transitionManager","setState","nextState","assign","length","notifyListeners","action","forceNextPop","ignorePath","handleHashChange","encodedPath","prevLocation","handlePop","confirmTransitionTo","ok","revertPop","fromLocation","toLocation","toIndex","allPaths","lastIndexOf","fromIndex","delta","go","initialLocation","createHref","push","pushState","hashChanged","undefined","prevIndex","nextPaths","replaceState","n","goBack","goForward","listenerCount","checkDOMListeners","eventType","isBlocked","block","prompt","unblock","setPrompt","listen","listener","unlisten","appendListener"],"mappings":"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"}