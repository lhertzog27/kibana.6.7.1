{"version":3,"file":"createHashStateHistory.mjs","sources":["src/createHashStateHistory.js"],"sourcesContent":["/* eslint no-use-before-define: 0 */\nimport locationUtils from 'history/LocationUtils';\nimport PathUtils from 'history/PathUtils';\nimport _createTransitionManager from 'history/createTransitionManager';\nimport DOMUtils from 'history/DOMUtils';\n\nconst { createLocation, locationsAreEqual } = locationUtils;\nconst {\n  addLeadingSlash,\n  stripLeadingSlash,\n  stripTrailingSlash,\n  hasBasename,\n  stripBasename,\n  createPath,\n} = PathUtils;\nconst {\n  canUseDOM,\n  addEventListener,\n  removeEventListener,\n  getConfirmation,\n  supportsGoWithoutReloadUsingHash,\n  supportsHistory,\n} = DOMUtils;\n\n// goofy hack to handle cjs and esm differences in build\nconst createTransitionManager = Object.hasOwnProperty.call(_createTransitionManager, 'default')\n  ? _createTransitionManager.default\n  : _createTransitionManager;\n\nfunction warning(condition, message) {\n  if (condition) return;\n  // eslint-disable-next-line no-console\n  console.warn(message);\n}\n\nfunction invariant(condition, message) {\n  if (condition) return;\n  throw new Error(`Invariant failed: ${message || ''}`);\n}\n\nconst PopStateEvent = 'popstate';\nconst HashChangeEvent = 'hashchange';\n\nconst getHistoryState = () => {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n};\n\nconst HashPathCoders = {\n  hashbang: {\n    encodePath: path => (path.charAt(0) === '!' ? path : `!/${stripLeadingSlash(path)}`),\n    decodePath: path => (path.charAt(0) === '!' ? path.substr(1) : path),\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash,\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash,\n  },\n};\n\nconst getHashPath = () => {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  const { href } = window.location;\n  const hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nconst pushHashPath = path => {\n  window.location.hash = path;\n};\n\nconst replaceHashPath = path => {\n  const hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(\n    `${window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0)}#${path}`\n  );\n};\n\nconst createHashStateHistory = (props = {}) => {\n  invariant(canUseDOM, 'Hash history needs a DOM');\n\n  const globalHistory = window.history;\n  const canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  const canUseHistory = supportsHistory();\n\n  const { getUserConfirmation = getConfirmation, hashType = 'slash', keyLength = 6 } = props;\n\n  const basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  const { encodePath, decodePath } = HashPathCoders[hashType];\n\n  const getDOMLocation = () => {\n    const { key, state } = getHistoryState();\n    let path = decodePath(getHashPath());\n\n    warning(\n      !basename || hasBasename(path, basename),\n      `${'You are attempting to use a basename on a page whose URL path does not begin ' +\n        'with the basename. Expected path \"'}${path}\" to begin with \"${basename}\".`\n    );\n\n    if (basename) path = stripBasename(path, basename);\n\n    return createLocation(path, state, key);\n  };\n\n  const createKey = () =>\n    Math.random()\n      .toString(36)\n      .substr(2, keyLength);\n\n  const transitionManager = createTransitionManager();\n\n  const setState = nextState => {\n    Object.assign(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  let forceNextPop = false;\n  let ignorePath = null;\n\n  const handleHashChange = () => {\n    const path = getHashPath();\n    const encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      const location = getDOMLocation();\n      const prevLocation = history.location;\n\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  const handlePop = location => {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      const action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, ok => {\n        if (ok) {\n          setState({ action, location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  const revertPop = fromLocation => {\n    const toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    let toIndex = allPaths.lastIndexOf(createPath(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    let fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    const delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  const path = getHashPath();\n  const encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  const initialLocation = getDOMLocation();\n  let allPaths = [createPath(initialLocation)];\n\n  // Public interface\n\n  const createHref = location => `#${encodePath(basename + createPath(location))}`;\n\n  // eslint-disable-next-line no-shadow\n  const push = (path, state) => {\n    const action = 'PUSH';\n    const location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, ok => {\n      if (!ok) return;\n\n      // eslint-disable-next-line no-shadow\n      const path = createPath(location);\n      // eslint-disable-next-line no-shadow\n      const encodedPath = encodePath(basename + path);\n\n      if (canUseHistory) {\n        // eslint-disable-next-line no-shadow\n        const { key, state } = location;\n        const href = createHref(location);\n        globalHistory.pushState({ key, state }, null, href);\n      } else {\n        // legacy fallback\n        ignorePath = path;\n\n        const hashChanged = getHashPath() !== encodedPath;\n\n        if (hashChanged) {\n          // We cannot tell if a hashchange was caused by a PUSH, so we'd\n          // rather setState here and ignore the hashchange. The caveat here\n          // is that other hash histories in the page will consider it a POP.\n          warning(\n            false,\n            'Hash history cannot PUSH the same path; a new entry will not be added to the history stack'\n          );\n\n          setState();\n        } else {\n          warning(\n            state === undefined,\n            'Browser history cannot push state in browsers that do not support HTML5 history, state is ignored'\n          );\n        }\n\n        pushHashPath(encodedPath);\n      }\n\n      const prevIndex = allPaths.lastIndexOf(createPath(history.location));\n      const nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n      nextPaths.push(path);\n      allPaths = nextPaths;\n\n      setState({ action, location });\n    });\n  };\n\n  // eslint-disable-next-line no-shadow\n  const replace = (path, state) => {\n    const action = 'REPLACE';\n    const location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, ok => {\n      if (!ok) return;\n\n      // eslint-disable-next-line no-shadow\n      const path = createPath(location);\n      // eslint-disable-next-line no-shadow\n      const encodedPath = encodePath(basename + path);\n\n      if (canUseHistory) {\n        // eslint-disable-next-line no-shadow\n        const { key, state } = location;\n        const href = createHref(location);\n        globalHistory.replaceState({ key, state }, null, href);\n      } else {\n        // legacy fallback\n\n        warning(\n          state === undefined,\n          'Browser history cannot push state in browsers that do not support HTML5 history, state is ignored'\n        );\n\n        const hashChanged = getHashPath() !== encodedPath;\n\n        if (hashChanged) {\n          // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n          // rather setState here and ignore the hashchange. The caveat here\n          // is that other hash histories in the page will consider it a POP.\n          ignorePath = path;\n          replaceHashPath(encodedPath);\n        }\n      }\n\n      const prevIndex = allPaths.indexOf(createPath(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action, location });\n    });\n  };\n\n  const go = n => {\n    warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n\n    globalHistory.go(n);\n  };\n\n  const goBack = () => go(-1);\n\n  const goForward = () => go(1);\n\n  let listenerCount = 0;\n\n  const checkDOMListeners = delta => {\n    listenerCount += delta;\n    const eventType = canUseHistory ? PopStateEvent : HashChangeEvent;\n\n    if (listenerCount === 1) {\n      addEventListener(window, eventType, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, eventType, handleHashChange);\n    }\n  };\n\n  let isBlocked = false;\n\n  const block = (prompt = false) => {\n    const unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return () => {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  const listen = listener => {\n    const unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return () => {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  const history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref,\n    push,\n    replace,\n    go,\n    goBack,\n    goForward,\n    block,\n    listen,\n  };\n\n  return history;\n};\n\nexport default createHashStateHistory;\n"],"names":["createLocation","locationUtils","locationsAreEqual","addLeadingSlash","PathUtils","stripLeadingSlash","stripTrailingSlash","hasBasename","stripBasename","createPath","canUseDOM","DOMUtils","addEventListener","removeEventListener","getConfirmation","supportsGoWithoutReloadUsingHash","supportsHistory","createTransitionManager","Object","hasOwnProperty","call","_createTransitionManager","default","warning","condition","message","console","warn","invariant","Error","PopStateEvent","HashChangeEvent","getHistoryState","window","history","state","e","HashPathCoders","hashbang","encodePath","path","charAt","decodePath","substr","noslash","slash","getHashPath","href","location","hashIndex","indexOf","substring","pushHashPath","hash","replaceHashPath","replace","slice","createHashStateHistory","props","globalHistory","canGoWithoutReload","canUseHistory","getUserConfirmation","hashType","keyLength","basename","getDOMLocation","key","createKey","Math","random","toString","transitionManager","setState","nextState","assign","length","notifyListeners","action","forceNextPop","ignorePath","handleHashChange","encodedPath","prevLocation","handlePop","confirmTransitionTo","ok","revertPop","fromLocation","toLocation","toIndex","allPaths","lastIndexOf","fromIndex","delta","go","initialLocation","createHref","push","pushState","hashChanged","undefined","prevIndex","nextPaths","replaceState","n","goBack","goForward","listenerCount","checkDOMListeners","eventType","isBlocked","block","prompt","unblock","setPrompt","listen","listener","unlisten","appendListener"],"mappings":"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"}