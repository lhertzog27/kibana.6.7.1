{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/table_vis/public/table_vis_controller.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/table_vis/public/table_vis_controller.js","mtime":1567631711641},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('ui/modules');\n\nvar _lodash = require('lodash');\n\n// get the kibana/table_vis module, and make sure that it requires the \"kibana\" module if it\n// didn't already\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _module = _modules.uiModules.get('kibana/table_vis', ['kibana']);\n\n// add a controller to tha module, which will transform the esResponse into a\n// tabular format that we can pass to the table directive\n_module.controller('KbnTableVisController', function ($scope) {\n  var uiStateSort = $scope.uiState ? $scope.uiState.get('vis.params.sort') : {};\n  (0, _lodash.assign)($scope.vis.params.sort, uiStateSort);\n\n  $scope.sort = $scope.vis.params.sort;\n  $scope.$watchCollection('sort', function (newSort) {\n    $scope.uiState.set('vis.params.sort', newSort);\n  });\n\n  /**\n   * Recreate the entire table when:\n   * - the underlying data changes (esResponse)\n   * - one of the view options changes (vis.params)\n   */\n  $scope.$watch('renderComplete', function () {\n\n    var tableGroups = $scope.tableGroups = null;\n    var hasSomeRows = $scope.hasSomeRows = null;\n\n    if ($scope.esResponse) {\n      tableGroups = $scope.esResponse;\n\n      hasSomeRows = tableGroups.tables.some(function haveRows(table) {\n        if (table.tables) return table.tables.some(haveRows);\n        return table.rows.length > 0;\n      });\n    }\n\n    $scope.hasSomeRows = hasSomeRows;\n    if (hasSomeRows) {\n      $scope.tableGroups = tableGroups;\n    }\n    $scope.renderComplete();\n  });\n});",null]}