{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/index.js","mtime":1567631711573},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.destroyIndexPatternList = undefined;\nexports.updateIndexPatternList = updateIndexPatternList;\n\nvar _management = require('ui/management');\n\nvar _index_pattern_list = require('ui/management/index_pattern_list');\n\nvar _index_pattern_creation = require('ui/management/index_pattern_creation');\n\nrequire('./create_index_pattern_wizard');\n\nrequire('./edit_index_pattern');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _modules = require('ui/modules');\n\nvar _index = require('./index.html');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _saved_objects = require('ui/saved_objects');\n\nvar _feature_catalogue = require('ui/registry/feature_catalogue');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _i18n2 = require('ui/i18n');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _index_pattern_list2 = require('./index_pattern_list');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * software distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar INDEX_PATTERN_LIST_DOM_ELEMENT_ID = 'indexPatternListReact';\n\nfunction updateIndexPatternList($scope, indexPatternCreationOptions, defaultIndex, indexPatterns) {\n  var node = document.getElementById(INDEX_PATTERN_LIST_DOM_ELEMENT_ID);\n  if (!node) {\n    return;\n  }\n\n  (0, _reactDom.render)(_react2.default.createElement(\n    _i18n2.I18nContext,\n    null,\n    _react2.default.createElement(_index_pattern_list2.IndexPatternList, {\n      indexPatternCreationOptions: indexPatternCreationOptions,\n      defaultIndex: defaultIndex,\n      indexPatterns: indexPatterns\n    })\n  ), node);\n}\n\nvar destroyIndexPatternList = exports.destroyIndexPatternList = function destroyIndexPatternList() {\n  var node = document.getElementById(INDEX_PATTERN_LIST_DOM_ELEMENT_ID);\n  node && (0, _reactDom.unmountComponentAtNode)(node);\n};\n\nvar indexPatternsResolutions = {\n  indexPatterns: function indexPatterns(Private) {\n    var savedObjectsClient = Private(_saved_objects.SavedObjectsClientProvider);\n\n    return savedObjectsClient.find({\n      type: 'index-pattern',\n      fields: ['title', 'type'],\n      perPage: 10000\n    }).then(function (response) {\n      return response.savedObjects;\n    });\n  }\n};\n\n// add a dependency to all of the subsection routes\n_routes2.default.defaults(/management\\/kibana\\/(indices|index)/, {\n  resolve: indexPatternsResolutions\n});\n\n// wrapper directive, which sets some global stuff up like the left nav\n_modules.uiModules.get('apps/management').directive('kbnManagementIndices', function ($route, config, kbnUrl, Private) {\n  return {\n    restrict: 'E',\n    transclude: true,\n    template: _index2.default,\n    link: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee($scope) {\n        var indexPatternListProvider, indexPatternCreationProvider, indexPatternCreationOptions, renderList;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                indexPatternListProvider = Private(_index_pattern_list.IndexPatternListFactory)();\n                indexPatternCreationProvider = Private(_index_pattern_creation.IndexPatternCreationFactory)();\n                _context.next = 4;\n                return indexPatternCreationProvider.getIndexPatternCreationOptions(function (url) {\n                  $scope.$evalAsync(function () {\n                    return kbnUrl.change(url);\n                  });\n                });\n\n              case 4:\n                indexPatternCreationOptions = _context.sent;\n\n                renderList = function renderList() {\n                  $scope.indexPatternList = $route.current.locals.indexPatterns.map(function (pattern) {\n                    var id = pattern.id;\n                    var tags = indexPatternListProvider.getIndexPatternTags(pattern, $scope.defaultIndex === id);\n\n                    return {\n                      id: id,\n                      title: pattern.get('title'),\n                      url: kbnUrl.eval('#/management/kibana/indices/{{id}}', { id: id }),\n                      active: $scope.editingId === id,\n                      default: $scope.defaultIndex === id,\n                      tag: tags && tags.length ? tags[0] : null\n                    };\n                  }).sort(function (a, b) {\n                    if (a.default) {\n                      return -1;\n                    }\n                    if (b.default) {\n                      return 1;\n                    }\n                    if (a.title < b.title) {\n                      return -1;\n                    }\n                    if (a.title > b.title) {\n                      return 1;\n                    }\n                    return 0;\n                  }) || [];\n\n                  updateIndexPatternList($scope, indexPatternCreationOptions, $scope.defaultIndex, $scope.indexPatternList);\n                };\n\n                $scope.$on('$destroy', destroyIndexPatternList);\n                $scope.editingId = $route.current.params.indexPatternId;\n                $scope.$watch('defaultIndex', function () {\n                  return renderList();\n                });\n                config.bindToScope($scope, 'defaultIndex');\n                $scope.$apply();\n\n              case 11:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function link(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return link;\n    }()\n  };\n});\n\n_management.management.getSection('kibana').register('indices', {\n  display: _i18n.i18n.translate('kbn.management.indexPattern.sectionsHeader', { defaultMessage: 'Index Patterns' }),\n  order: 0,\n  url: '#/management/kibana/indices/'\n});\n\n_feature_catalogue.FeatureCatalogueRegistryProvider.register(function () {\n  return {\n    id: 'index_patterns',\n    title: _i18n.i18n.translate('kbn.management.indexPatternHeader', { defaultMessage: 'Index Patterns' }),\n    description: _i18n.i18n.translate('kbn.management.indexPatternLabel', { defaultMessage: 'Manage the index patterns that help retrieve your data from Elasticsearch.' }),\n    icon: 'indexPatternApp',\n    path: '/app/kibana#/management/kibana/indices',\n    showOnHomePage: true,\n    category: _feature_catalogue.FeatureCatalogueCategory.ADMIN\n  };\n});",null]}