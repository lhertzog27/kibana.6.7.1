{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/timelion/public/vis/timelion_request_handler.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/timelion/public/vis/timelion_request_handler.js","mtime":1567631711653},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TimelionRequestHandlerProvider = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _esQuery = require('@kbn/es-query');\n\nvar _timezone = require('ui/vis/lib/timezone');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TimelionRequestHandlerProvider = function TimelionRequestHandlerProvider(Private, Notifier, $http, config) {\n  var timezone = Private(_timezone.timezoneProvider)();\n\n  var notify = new Notifier({\n    location: 'Timelion'\n  });\n\n  return {\n    name: 'timelion',\n    handler: function handler(_ref) {\n      var timeRange = _ref.timeRange,\n          filters = _ref.filters,\n          query = _ref.query,\n          visParams = _ref.visParams;\n\n\n      return new Promise(function (resolve, reject) {\n        var expression = visParams.expression;\n        if (!expression) return;\n        var esQueryConfigs = (0, _esQuery.getEsQueryConfig)(config);\n        var httpResult = $http.post('../api/timelion/run', {\n          sheet: [expression],\n          extended: {\n            es: {\n              filter: (0, _esQuery.buildEsQuery)(undefined, [query], filters, esQueryConfigs)\n            }\n          },\n          time: _lodash2.default.extend(timeRange, {\n            interval: visParams.interval,\n            timezone: timezone\n          })\n        }).then(function (resp) {\n          return resp.data;\n        }).catch(function (resp) {\n          throw resp.data;\n        });\n\n        httpResult.then(function (resp) {\n          resolve(resp);\n        }).catch(function (resp) {\n          var err = new Error(resp.message);\n          err.stack = resp.stack;\n          notify.error(err);\n          reject(err);\n        });\n      });\n    }\n  };\n}; /*\n    * Licensed to Elasticsearch B.V. under one or more contributor\n    * license agreements. See the NOTICE file distributed with\n    * this work for additional information regarding copyright\n    * ownership. Elasticsearch B.V. licenses this file to you under\n    * the Apache License, Version 2.0 (the \"License\"); you may\n    * not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *    http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing,\n    * software distributed under the License is distributed on an\n    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    * KIND, either express or implied.  See the License for the\n    * specific language governing permissions and limitations\n    * under the License.\n    */\n\nexports.TimelionRequestHandlerProvider = TimelionRequestHandlerProvider;",null]}