{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/region_map/public/region_map_visualization.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/region_map/public/region_map_visualization.js","mtime":1567631711641},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nexports.RegionMapsVisualizationProvider = RegionMapsVisualizationProvider;\n\nrequire('plugins/kbn_vislib_vis_types/controls/vislib_basic_options');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _base_maps_visualization = require('../../tile_map/public/base_maps_visualization');\n\nvar _choropleth_layer = require('./choropleth_layer');\n\nvar _choropleth_layer2 = _interopRequireDefault(_choropleth_layer);\n\nvar _truncated_colormaps = require('ui/vislib/components/color/truncated_colormaps');\n\nvar _tooltip_formatter = require('./tooltip_formatter');\n\nvar _tooltip_formatter2 = _interopRequireDefault(_tooltip_formatter);\n\nrequire('ui/vis/map/service_settings');\n\nvar _notify = require('ui/notify');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction RegionMapsVisualizationProvider(Private, config, i18n) {\n\n  var tooltipFormatter = Private(_tooltip_formatter2.default);\n  var BaseMapsVisualization = Private(_base_maps_visualization.BaseMapsVisualizationProvider);\n\n  return function (_BaseMapsVisualizatio) {\n    _inherits(RegionMapsVisualization, _BaseMapsVisualizatio);\n\n    function RegionMapsVisualization(container, vis) {\n      _classCallCheck(this, RegionMapsVisualization);\n\n      var _this = _possibleConstructorReturn(this, (RegionMapsVisualization.__proto__ || Object.getPrototypeOf(RegionMapsVisualization)).call(this, container, vis));\n\n      _this._vis = _this.vis;\n      _this._choroplethLayer = null;\n      return _this;\n    }\n\n    _createClass(RegionMapsVisualization, [{\n      key: 'render',\n      value: function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(esResponse, status) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _get(RegionMapsVisualization.prototype.__proto__ || Object.getPrototypeOf(RegionMapsVisualization.prototype), 'render', this).call(this, esResponse, status);\n\n                case 2:\n                  if (!this._choroplethLayer) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 5;\n                  return this._choroplethLayer.whenDataLoaded();\n\n                case 5:\n                case 'end':\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function render(_x, _x2) {\n          return _ref.apply(this, arguments);\n        }\n\n        return render;\n      }()\n    }, {\n      key: '_updateData',\n      value: function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(table) {\n          var results, termColumn, valueColumn, metricsAgg;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  this._chartData = table;\n                  results = void 0;\n\n                  if (!table || !table.rows.length || table.columns.length !== 2) {\n                    results = [];\n                  } else {\n                    termColumn = table.columns[0].id;\n                    valueColumn = table.columns[1].id;\n\n                    results = table.rows.map(function (row) {\n                      var term = row[termColumn];\n                      var value = row[valueColumn];\n                      return { term: term, value: value };\n                    });\n                  }\n\n                  if (!this._vis.params.selectedJoinField && this._vis.params.selectedLayer) {\n                    this._vis.params.selectedJoinField = this._vis.params.selectedLayer.fields[0];\n                  }\n\n                  if (this._vis.params.selectedLayer) {\n                    _context2.next = 6;\n                    break;\n                  }\n\n                  return _context2.abrupt('return');\n\n                case 6:\n\n                  this._updateChoroplethLayerForNewMetrics(this._vis.params.selectedLayer.name, this._vis.params.selectedLayer.attribution, this._vis.params.showAllShapes, results);\n                  metricsAgg = _lodash2.default.first(this._vis.getAggConfig().bySchemaName.metric);\n\n                  this._choroplethLayer.setMetrics(results, metricsAgg);\n                  this._setTooltipFormatter();\n\n                  this._kibanaMap.useUiStateFromVisualization(this._vis);\n\n                case 11:\n                case 'end':\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        function _updateData(_x3) {\n          return _ref2.apply(this, arguments);\n        }\n\n        return _updateData;\n      }()\n    }, {\n      key: '_updateParams',\n      value: function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n          var visParams;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return _get(RegionMapsVisualization.prototype.__proto__ || Object.getPrototypeOf(RegionMapsVisualization.prototype), '_updateParams', this).call(this);\n\n                case 2:\n                  visParams = this.vis.params;\n\n                  if (!visParams.selectedJoinField && visParams.selectedLayer) {\n                    visParams.selectedJoinField = visParams.selectedLayer.fields[0];\n                  }\n\n                  if (!(!visParams.selectedJoinField || !visParams.selectedLayer)) {\n                    _context3.next = 6;\n                    break;\n                  }\n\n                  return _context3.abrupt('return');\n\n                case 6:\n\n                  this._updateChoroplethLayerForNewProperties(visParams.selectedLayer.name, visParams.selectedLayer.attribution, this._vis.params.showAllShapes);\n                  this._choroplethLayer.setJoinField(visParams.selectedJoinField.name);\n                  this._choroplethLayer.setColorRamp(_truncated_colormaps.truncatedColorMaps[visParams.colorSchema].value);\n                  this._choroplethLayer.setLineWeight(visParams.outlineWeight);\n                  this._setTooltipFormatter();\n\n                case 11:\n                case 'end':\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function _updateParams() {\n          return _ref3.apply(this, arguments);\n        }\n\n        return _updateParams;\n      }()\n    }, {\n      key: '_updateChoroplethLayerForNewMetrics',\n      value: function _updateChoroplethLayerForNewMetrics(name, attribution, showAllData, newMetrics) {\n        if (this._choroplethLayer && this._choroplethLayer.canReuseInstanceForNewMetrics(name, showAllData, newMetrics)) {\n          return;\n        }\n        return this._recreateChoroplethLayer(name, attribution, showAllData);\n      }\n    }, {\n      key: '_updateChoroplethLayerForNewProperties',\n      value: function _updateChoroplethLayerForNewProperties(name, attribution, showAllData) {\n        if (this._choroplethLayer && this._choroplethLayer.canReuseInstance(name, showAllData)) {\n          return;\n        }\n        return this._recreateChoroplethLayer(name, attribution, showAllData);\n      }\n    }, {\n      key: '_recreateChoroplethLayer',\n      value: function _recreateChoroplethLayer(name, attribution, showAllData) {\n        var _this2 = this;\n\n        this._kibanaMap.removeLayer(this._choroplethLayer);\n\n        if (this._choroplethLayer) {\n          this._choroplethLayer = this._choroplethLayer.cloneChoroplethLayerForNewData(name, attribution, this.vis.params.selectedLayer.format, showAllData, this.vis.params.selectedLayer.meta, this.vis.params.selectedLayer);\n        } else {\n          this._choroplethLayer = new _choropleth_layer2.default(name, attribution, this.vis.params.selectedLayer.format, showAllData, this.vis.params.selectedLayer.meta, this.vis.params.selectedLayer);\n        }\n\n        this._choroplethLayer.on('select', function (event) {\n\n          if (!_this2._isAggReady()) {\n            //even though we have maps data available and have added the choropleth layer to the map\n            //the aggregation may not be available yet\n            return;\n          }\n\n          var rowIndex = _this2._chartData.rows.findIndex(function (row) {\n            return row[0] === event;\n          });\n          _this2._vis.API.events.filter({ table: _this2._chartData, column: 0, row: rowIndex, value: event });\n        });\n\n        this._choroplethLayer.on('styleChanged', function (event) {\n          var shouldShowWarning = _this2._vis.params.isDisplayWarning && config.get('visualization:regionmap:showWarnings');\n          if (event.mismatches.length > 0 && shouldShowWarning) {\n            _notify.toastNotifications.addWarning({\n              title: i18n('regionMap.visualization.unableToShowMismatchesWarningTitle', {\n                defaultMessage: 'Unable to show {mismatchesLength} {oneMismatch, plural, one {result} other {results}} on map',\n                values: {\n                  mismatchesLength: event.mismatches.length,\n                  oneMismatch: event.mismatches.length > 1 ? 0 : 1\n                }\n              }),\n              text: i18n('regionMap.visualization.unableToShowMismatchesWarningText', {\n                defaultMessage: 'Ensure that each of these term matches a shape on that shape\\'s join field: {mismatches}',\n                values: {\n                  mismatches: event.mismatches ? event.mismatches.join(', ') : ''\n                }\n              })\n            });\n          }\n        });\n\n        this._kibanaMap.addLayer(this._choroplethLayer);\n      }\n    }, {\n      key: '_isAggReady',\n      value: function _isAggReady() {\n        return this._vis.getAggConfig().bySchemaName.segment && this._vis.getAggConfig().bySchemaName.segment[0];\n      }\n    }, {\n      key: '_setTooltipFormatter',\n      value: function _setTooltipFormatter() {\n        var metricsAgg = _lodash2.default.first(this._vis.getAggConfig().bySchemaName.metric);\n        if (this._isAggReady()) {\n          var fieldName = this._vis.getAggConfig().bySchemaName.segment[0].makeLabel();\n          this._choroplethLayer.setTooltipFormatter(tooltipFormatter, metricsAgg, fieldName);\n        } else {\n          this._choroplethLayer.setTooltipFormatter(tooltipFormatter, metricsAgg, null);\n        }\n      }\n    }]);\n\n    return RegionMapsVisualization;\n  }(BaseMapsVisualization);\n}",null]}