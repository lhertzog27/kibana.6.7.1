{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/doc/controllers/doc.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/doc/controllers/doc.js","mtime":1567631711565},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nrequire('ui/notify');\n\nrequire('ui/courier');\n\nrequire('ui/doc_viewer');\n\nrequire('ui/index_patterns');\n\nvar _index = require('../index.html');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _modules = require('ui/modules');\n\nvar _timefilter = require('ui/timefilter');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar app = _modules.uiModules.get('apps/doc', ['kibana/notify', 'kibana/courier', 'kibana/index_patterns']);\n\nvar resolveIndexPattern = {\n  indexPattern: function indexPattern(indexPatterns, savedSearches, $route) {\n    return indexPatterns.get($route.current.params.indexPattern);\n  }\n};\n\n_routes2.default.when('/doc/:indexPattern/:index/:type/:id', {\n  template: _index2.default,\n  resolve: resolveIndexPattern\n}).when('/doc/:indexPattern/:index/:type', {\n  template: _index2.default,\n  resolve: resolveIndexPattern\n});\n\napp.controller('doc', function ($scope, $route, es) {\n\n  _timefilter.timefilter.disableAutoRefreshSelector();\n  _timefilter.timefilter.disableTimeRangeSelector();\n\n  // Pretty much only need this for formatting, not actually using it for fetching anything.\n  $scope.indexPattern = $route.current.locals.indexPattern;\n\n  var computedFields = $scope.indexPattern.getComputedFields();\n\n  es.search({\n    index: $route.current.params.index,\n    body: {\n      query: {\n        ids: {\n          type: $route.current.params.type,\n          values: [$route.current.params.id]\n        }\n      },\n      stored_fields: computedFields.storedFields,\n      _source: true,\n      script_fields: computedFields.scriptFields,\n      docvalue_fields: computedFields.docvalueFields\n    }\n  }).then(function (resp) {\n    if (resp.hits) {\n      if (resp.hits.total < 1) {\n        $scope.status = 'notFound';\n      } else {\n        $scope.status = 'found';\n        $scope.hit = resp.hits.hits[0];\n      }\n    }\n  }).catch(function (err) {\n    if (err.status === 404) {\n      $scope.status = 'notFound';\n    } else {\n      $scope.status = 'error';\n      $scope.resp = err;\n    }\n  });\n});",null]}