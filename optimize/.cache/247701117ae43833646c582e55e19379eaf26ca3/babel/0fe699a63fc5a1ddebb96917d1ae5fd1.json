{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/control/filter_manager/phrase_filter_manager.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/control/filter_manager/phrase_filter_manager.js","mtime":1567631711532},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PhraseFilterManager = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _filter_manager = require('./filter_manager.js');\n\nvar _esQuery = require('@kbn/es-query');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar PhraseFilterManager = exports.PhraseFilterManager = function (_FilterManager) {\n  _inherits(PhraseFilterManager, _FilterManager);\n\n  function PhraseFilterManager(controlId, fieldName, indexPattern, queryFilter) {\n    _classCallCheck(this, PhraseFilterManager);\n\n    return _possibleConstructorReturn(this, (PhraseFilterManager.__proto__ || Object.getPrototypeOf(PhraseFilterManager)).call(this, controlId, fieldName, indexPattern, queryFilter));\n  }\n\n  /**\n   * Convert phrases into filter\n   *\n   * @param {array} phrases\n   * @return {object} query filter\n   *   single phrase: match query\n   *   multiple phrases: bool query with should containing list of match_phrase queries\n   */\n\n\n  _createClass(PhraseFilterManager, [{\n    key: 'createFilter',\n    value: function createFilter(phrases) {\n      var newFilter = void 0;\n      if (phrases.length === 1) {\n        newFilter = (0, _esQuery.buildPhraseFilter)(this.indexPattern.fields.byName[this.fieldName], phrases[0], this.indexPattern);\n      } else {\n        newFilter = (0, _esQuery.buildPhrasesFilter)(this.indexPattern.fields.byName[this.fieldName], phrases, this.indexPattern);\n      }\n      newFilter.meta.controlledBy = this.controlId;\n      return newFilter;\n    }\n  }, {\n    key: 'getValueFromFilterBar',\n    value: function getValueFromFilterBar() {\n      var _this2 = this;\n\n      var kbnFilters = this.findFilters();\n      if (kbnFilters.length === 0) {\n        return;\n      }\n\n      var values = kbnFilters.map(function (kbnFilter) {\n        return _this2._getValueFromFilter(kbnFilter);\n      }).filter(function (value) {\n        return value != null;\n      });\n\n      if (values.length === 0) {\n        return;\n      }\n\n      return values.reduce(function (accumulator, currentValue) {\n        return accumulator.concat(currentValue);\n      }, []);\n    }\n\n    /**\n     * Extract filtering value from kibana filters\n     *\n     * @param {object} kbnFilter\n     * @return {Array.<string>} array of values pulled from filter\n     */\n\n  }, {\n    key: '_getValueFromFilter',\n    value: function _getValueFromFilter(kbnFilter) {\n      var _this3 = this;\n\n      // bool filter - multiple phrase filters\n      if (_lodash2.default.has(kbnFilter, 'query.bool.should')) {\n        return _lodash2.default.get(kbnFilter, 'query.bool.should').map(function (kbnFilter) {\n          return _this3._getValueFromFilter(kbnFilter);\n        }).filter(function (value) {\n          if (value) {\n            return true;\n          }\n          return false;\n        });\n      }\n\n      // scripted field filter\n      if (_lodash2.default.has(kbnFilter, 'script')) {\n        return _lodash2.default.get(kbnFilter, 'script.script.params.value');\n      }\n\n      // single phrase filter\n      if (_lodash2.default.has(kbnFilter, ['query', 'match', this.fieldName])) {\n        return _lodash2.default.get(kbnFilter, ['query', 'match', this.fieldName, 'query']);\n      }\n\n      // single phrase filter from bool filter\n      if (_lodash2.default.has(kbnFilter, ['match_phrase', this.fieldName])) {\n        return _lodash2.default.get(kbnFilter, ['match_phrase', this.fieldName]);\n      }\n    }\n  }]);\n\n  return PhraseFilterManager;\n}(_filter_manager.FilterManager);",null]}