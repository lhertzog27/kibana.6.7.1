{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/chrome/directives/kbn_chrome.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/directives/kbn_chrome.js","mtime":1567631711711},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.kbnChromeProvider = kbnChromeProvider;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _modules = require('../../modules');\n\nvar _state_hashing = require('../../state_management/state_hashing');\n\nvar _notify = require('../../notify');\n\nvar _sub_url_route_filter = require('./sub_url_route_filter');\n\nvar _i18n = require('../../i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction kbnChromeProvider(chrome, internals) {\n\n  _modules.uiModules.get('kibana').directive('kbnChrome', function () {\n    return {\n      template: function template() {\n        var $content = (0, _jquery2.default)(require('./kbn_chrome.html'));\n        var $app = $content.find('.application');\n\n        if (internals.rootController) {\n          $app.attr('ng-controller', internals.rootController);\n        }\n\n        if (internals.rootTemplate) {\n          $app.removeAttr('ng-view');\n          $app.html(internals.rootTemplate);\n        }\n\n        return $content;\n      },\n\n\n      controllerAs: 'chrome',\n      controller: function controller($scope, $rootScope, Private, config) {\n        config.watch('k7design', function (val) {\n          return $scope.k7design = val;\n        });\n\n        var getUnhashableStates = Private(_state_hashing.getUnhashableStatesProvider);\n        var subUrlRouteFilter = Private(_sub_url_route_filter.SubUrlRouteFilterProvider);\n\n        function updateSubUrls() {\n          var urlWithHashes = window.location.href;\n          var urlWithStates = (0, _state_hashing.unhashUrl)(urlWithHashes, getUnhashableStates());\n          internals.trackPossibleSubUrl(urlWithStates);\n        }\n\n        function onRouteChange($event) {\n          if (subUrlRouteFilter($event)) {\n            updateSubUrls();\n          }\n        }\n\n        $rootScope.$on('$routeChangeSuccess', onRouteChange);\n        $rootScope.$on('$routeUpdate', onRouteChange);\n        updateSubUrls(); // initialize sub urls\n\n        // Notifications\n        $scope.notifList = _notify.notify._notifs;\n\n        // Non-scope based code (e.g., React)\n\n        // Banners\n        _reactDom2.default.render(_react2.default.createElement(\n          _i18n.I18nContext,\n          null,\n          _react2.default.createElement(_notify.GlobalBannerList, {\n            banners: _notify.banners.list,\n            subscribe: _notify.banners.onChange\n          })\n        ), document.getElementById('globalBannerList'));\n\n        return chrome;\n      }\n    };\n  });\n}",null]}