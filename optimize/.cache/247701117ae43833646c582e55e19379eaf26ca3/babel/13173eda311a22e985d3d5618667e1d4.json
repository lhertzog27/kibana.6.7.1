{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/vega/public/vega_view/vega_map_view.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/vega/public/vega_view/vega_map_view.js","mtime":1567631711657},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VegaMapView = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _kibana_map = require('ui/vis/map/kibana_map');\n\nvar _vegaLib = require('vega-lib');\n\nvar vega = _interopRequireWildcard(_vegaLib);\n\nvar _vega_base_view = require('./vega_base_view');\n\nvar _vega_map_layer = require('./vega_map_layer');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar VegaMapView = exports.VegaMapView = function (_VegaBaseView) {\n  _inherits(VegaMapView, _VegaBaseView);\n\n  function VegaMapView() {\n    _classCallCheck(this, VegaMapView);\n\n    return _possibleConstructorReturn(this, (VegaMapView.__proto__ || Object.getPrototypeOf(VegaMapView)).apply(this, arguments));\n  }\n\n  _createClass(VegaMapView, [{\n    key: '_initViewCustomizations',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var mapConfig, baseMapOpts, limitMinZ, limitMaxZ, tmsServices, mapStyle, validate, minZoom, maxZoom, _ref2, zoom, vegaMapLayer, vegaView;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                mapConfig = this._parser.mapConfig;\n                baseMapOpts = void 0;\n                limitMinZ = 0;\n                limitMaxZ = 25;\n\n                if (!(mapConfig.mapStyle !== false)) {\n                  _context.next = 20;\n                  break;\n                }\n\n                _context.next = 7;\n                return this._serviceSettings.getTMSServices();\n\n              case 7:\n                tmsServices = _context.sent;\n\n                if (this._$container) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 10:\n                mapStyle = mapConfig.mapStyle === 'default' ? 'road_map' : mapConfig.mapStyle;\n\n                baseMapOpts = tmsServices.find(function (s) {\n                  return s.id === mapStyle;\n                });\n                _context.t0 = _extends;\n                _context.next = 15;\n                return this._serviceSettings.getUrlTemplateForTMSLayer(baseMapOpts);\n\n              case 15:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  url: _context.t1\n                };\n                _context.t3 = baseMapOpts;\n                baseMapOpts = (0, _context.t0)(_context.t2, _context.t3);\n\n                if (!baseMapOpts) {\n                  this.onWarn(_i18n.i18n.translate('vega.mapView.mapStyleNotFoundWarningMessage', {\n                    defaultMessage: '{mapStyleParam} was not found',\n                    values: { mapStyleParam: '\"mapStyle\": ' + JSON.stringify(mapStyle) }\n                  }));\n                } else {\n                  limitMinZ = baseMapOpts.minZoom;\n                  limitMaxZ = baseMapOpts.maxZoom;\n                }\n\n              case 20:\n                validate = function validate(name, value, dflt, min, max) {\n                  if (value === undefined) {\n                    value = dflt;\n                  } else if (value < min) {\n                    _this2.onWarn(_i18n.i18n.translate('vega.mapView.resettingPropertyToMinValueWarningMessage', {\n                      defaultMessage: 'Resetting {name} to {min}',\n                      values: { name: '\"' + name + '\"', min: min }\n                    }));\n                    value = min;\n                  } else if (value > max) {\n                    _this2.onWarn(_i18n.i18n.translate('vega.mapView.resettingPropertyToMaxValueWarningMessage', {\n                      defaultMessage: 'Resetting {name} to {max}',\n                      values: { name: '\"' + name + '\"', max: max }\n                    }));\n                    value = max;\n                  }\n                  return value;\n                };\n\n                minZoom = validate('minZoom', mapConfig.minZoom, limitMinZ, limitMinZ, limitMaxZ);\n                maxZoom = validate('maxZoom', mapConfig.maxZoom, limitMaxZ, limitMinZ, limitMaxZ);\n\n                if (minZoom > maxZoom) {\n                  this.onWarn(_i18n.i18n.translate('vega.mapView.minZoomAndMaxZoomHaveBeenSwappedWarningMessage', {\n                    defaultMessage: '{minZoomPropertyName} and {maxZoomPropertyName} have been swapped',\n                    values: {\n                      minZoomPropertyName: '\"minZoom\"',\n                      maxZoomPropertyName: '\"maxZoom\"'\n                    }\n                  }));\n                  _ref2 = [maxZoom, minZoom];\n                  minZoom = _ref2[0];\n                  maxZoom = _ref2[1];\n                }\n                zoom = validate('zoom', mapConfig.zoom, 2, minZoom, maxZoom);\n\n                // let maxBounds = null;\n                // if (mapConfig.maxBounds) {\n                //   const b = mapConfig.maxBounds;\n                //   maxBounds = L.latLngBounds(L.latLng(b[1], b[0]), L.latLng(b[3], b[2]));\n                // }\n\n                this._kibanaMap = new _kibana_map.KibanaMap(this._$container.get(0), {\n                  zoom: zoom, minZoom: minZoom, maxZoom: maxZoom,\n                  center: [mapConfig.latitude, mapConfig.longitude],\n                  zoomControl: mapConfig.zoomControl,\n                  scrollWheelZoom: mapConfig.scrollWheelZoom\n                });\n\n                if (baseMapOpts) {\n                  this._kibanaMap.setBaseLayer({\n                    baseLayerType: 'tms',\n                    options: baseMapOpts\n                  });\n                }\n\n                vegaMapLayer = new _vega_map_layer.VegaMapLayer(this._parser.spec, {\n                  vega: vega,\n                  bindingsContainer: this._$controls.get(0),\n                  delayRepaint: mapConfig.delayRepaint,\n                  viewConfig: this._vegaViewConfig,\n                  onWarning: this.onWarn.bind(this),\n                  onError: this.onError.bind(this)\n                });\n\n\n                this._kibanaMap.addLayer(vegaMapLayer);\n\n                this._addDestroyHandler(function () {\n                  _this2._kibanaMap.removeLayer(vegaMapLayer);\n                  if (baseMapOpts) {\n                    _this2._kibanaMap.setBaseLayer(null);\n                  }\n                  _this2._kibanaMap.destroy();\n                });\n\n                vegaView = vegaMapLayer.getVegaView();\n\n                this.setDebugValues(vegaView, this._parser.spec, this._parser.vlspec);\n                _context.next = 34;\n                return this.setView(vegaView);\n\n              case 34:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _initViewCustomizations() {\n        return _ref.apply(this, arguments);\n      }\n\n      return _initViewCustomizations;\n    }()\n  }]);\n\n  return VegaMapView;\n}(_vega_base_view.VegaBaseView);",null]}