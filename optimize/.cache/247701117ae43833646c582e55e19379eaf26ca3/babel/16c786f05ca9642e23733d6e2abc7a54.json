{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/utils/streams/reduce_stream.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/utils/streams/reduce_stream.js","mtime":1567631711788},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createReduceStream = createReduceStream;\n\nvar _stream = require('stream');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * software distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\n/**\n *  Create a transform stream that consumes each chunk it receives\n *  and passes it to the reducer, which will return the new value\n *  for the stream. Once all chunks have been received the reduce\n *  stream provides the result of final call to the reducer to\n *  subscribers.\n *\n *  @param  {Function}\n *  @param  {any} initial Initial value for the stream, if undefined\n *                        then the first chunk provided is used as the\n *                        initial value.\n *  @return {Transform}\n */\nfunction createReduceStream(reducer, initial) {\n  var i = -1;\n  var value = initial;\n\n  // if the reducer throws an error then the value is\n  // considered invalid and the stream will never provide\n  // it to subscribers. We will also stop calling the\n  // reducer for any new data that is provided to us\n  var failed = false;\n\n  if (typeof reducer !== 'function') {\n    throw new TypeError('reducer must be a function');\n  }\n\n  return new _stream.Transform({\n    readableObjectMode: true,\n    writableObjectMode: true,\n    transform: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(chunk, enc, callback) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!failed) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt('return', callback());\n\n              case 3:\n\n                i += 1;\n\n                if (!(i === 0 && initial === undefined)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                value = chunk;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.next = 10;\n                return reducer(value, chunk, enc);\n\n              case 10:\n                value = _context.sent;\n\n              case 11:\n\n                callback();\n                _context.next = 18;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context['catch'](0);\n\n                failed = true;\n                callback(_context.t0);\n\n              case 18:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 14]]);\n      }));\n\n      function transform(_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      }\n\n      return transform;\n    }(),\n    flush: function flush(callback) {\n      if (!failed) {\n        this.push(value);\n      }\n\n      callback();\n    }\n  });\n}",null]}