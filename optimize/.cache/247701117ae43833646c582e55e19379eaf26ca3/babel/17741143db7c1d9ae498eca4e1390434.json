{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/dashboard_panel_container.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/dashboard_panel_container.js","mtime":1567631711559},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DashboardPanelContainer = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _i18n = require('@kbn/i18n');\n\nvar _dashboard_panel = require('./dashboard_panel');\n\nvar _dashboard_view_mode = require('../dashboard_view_mode');\n\nvar _actions = require('../actions');\n\nvar _selectors = require('../selectors');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mapStateToProps = function mapStateToProps(_ref, _ref2) {\n  var dashboard = _ref.dashboard;\n  var embeddableFactory = _ref2.embeddableFactory,\n      panelId = _ref2.panelId;\n\n  var embeddable = (0, _selectors.getEmbeddable)(dashboard, panelId);\n  var error = null;\n  if (!embeddableFactory) {\n    var panelType = (0, _selectors.getPanelType)(dashboard, panelId);\n    error = _i18n.i18n.translate('kbn.dashboard.panel.noFoundEmbeddableFactoryErrorMessage', {\n      defaultMessage: 'No embeddable factory found for panel type {panelType}',\n      values: { panelType: panelType }\n    });\n  } else {\n    error = embeddable && (0, _selectors.getEmbeddableError)(dashboard, panelId) || '';\n  }\n  var lastReloadRequestTime = embeddable ? embeddable.lastReloadRequestTime : 0;\n  var initialized = embeddable ? (0, _selectors.getEmbeddableInitialized)(dashboard, panelId) : false;\n  return {\n    error: error,\n    viewOnlyMode: (0, _selectors.getFullScreenMode)(dashboard) || (0, _selectors.getViewMode)(dashboard) === _dashboard_view_mode.DashboardViewMode.VIEW,\n    containerState: (0, _selectors.getContainerState)(dashboard, panelId),\n    initialized: initialized,\n    panel: (0, _selectors.getPanel)(dashboard, panelId),\n    lastReloadRequestTime: lastReloadRequestTime\n  };\n}; /*\n    * Licensed to Elasticsearch B.V. under one or more contributor\n    * license agreements. See the NOTICE file distributed with\n    * this work for additional information regarding copyright\n    * ownership. Elasticsearch B.V. licenses this file to you under\n    * the Apache License, Version 2.0 (the \"License\"); you may\n    * not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *    http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing,\n    * software distributed under the License is distributed on an\n    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    * KIND, either express or implied.  See the License for the\n    * specific language governing permissions and limitations\n    * under the License.\n    */\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _ref3) {\n  var panelId = _ref3.panelId;\n  return {\n    destroy: function destroy() {\n      return dispatch((0, _actions.deletePanel)(panelId));\n    },\n    embeddableIsInitializing: function embeddableIsInitializing() {\n      return dispatch((0, _actions.embeddableIsInitializing)(panelId));\n    },\n    embeddableIsInitialized: function embeddableIsInitialized(metadata) {\n      return dispatch((0, _actions.embeddableIsInitialized)({ panelId: panelId, metadata: metadata }));\n    },\n    embeddableStateChanged: function embeddableStateChanged(embeddableState) {\n      return dispatch((0, _actions.embeddableStateChanged)({ panelId: panelId, embeddableState: embeddableState }));\n    },\n    embeddableError: function embeddableError(errorMessage) {\n      return dispatch((0, _actions.embeddableError)({ panelId: panelId, error: errorMessage }));\n    }\n  };\n};\n\nvar DashboardPanelContainer = exports.DashboardPanelContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_dashboard_panel.DashboardPanel);\n\nDashboardPanelContainer.propTypes = {\n  panelId: _propTypes2.default.string.isRequired,\n  /**\n   * @type {EmbeddableFactory}\n   */\n  embeddableFactory: _propTypes2.default.shape({\n    create: _propTypes2.default.func.isRequired\n  }).isRequired\n};",null]}