{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/courier/search_strategy/default_search_strategy.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/courier/search_strategy/default_search_strategy.js","mtime":1567631711715},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultSearchStrategy = undefined;\n\nvar serializeAllFetchParams = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(fetchParams, searchRequests, serializeFetchParams) {\n    var searchRequestsWithFetchParams, failedSearchRequests;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            searchRequestsWithFetchParams = [];\n            failedSearchRequests = [];\n\n            // Gather the fetch param responses from all the successful requests.\n\n            fetchParams.forEach(function (result, index) {\n              if (result.resolved) {\n                searchRequestsWithFetchParams.push(result.resolved);\n              } else {\n                var searchRequest = searchRequests[index];\n\n                searchRequest.handleFailure(result.rejected);\n                failedSearchRequests.push(searchRequest);\n              }\n            });\n\n            _context.next = 5;\n            return serializeFetchParams(searchRequestsWithFetchParams);\n\n          case 5:\n            _context.t0 = _context.sent;\n            _context.t1 = failedSearchRequests;\n            return _context.abrupt('return', {\n              serializedFetchParams: _context.t0,\n              failedSearchRequests: _context.t1\n            });\n\n          case 8:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function serializeAllFetchParams(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _search_strategy_registry = require('./search_strategy_registry');\n\nvar _is_default_type_index_pattern = require('./is_default_type_index_pattern');\n\nvar _search_error = require('./search_error');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nfunction getAllFetchParams(searchRequests, Promise) {\n  return Promise.map(searchRequests, function (searchRequest) {\n    return Promise.try(searchRequest.getFetchParams, void 0, searchRequest).then(function (fetchParams) {\n      return searchRequest.fetchParams = fetchParams;\n    }).then(function (value) {\n      return { resolved: value };\n    }).catch(function (error) {\n      return { rejected: error };\n    });\n  });\n}\n\nvar defaultSearchStrategy = exports.defaultSearchStrategy = {\n  id: 'default',\n\n  search: function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2) {\n      var searchRequests = _ref2.searchRequests,\n          es = _ref2.es,\n          Promise = _ref2.Promise,\n          serializeFetchParams = _ref2.serializeFetchParams,\n          _ref2$includeFrozen = _ref2.includeFrozen,\n          includeFrozen = _ref2$includeFrozen === undefined ? false : _ref2$includeFrozen,\n          _ref2$maxConcurrentSh = _ref2.maxConcurrentShardRequests,\n          maxConcurrentShardRequests = _ref2$maxConcurrentSh === undefined ? 0 : _ref2$maxConcurrentSh;\n\n      var allFetchParams, _ref4, serializedFetchParams, failedSearchRequests, msearchParams, searching;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getAllFetchParams(searchRequests, Promise);\n\n            case 2:\n              allFetchParams = _context2.sent;\n              _context2.next = 5;\n              return serializeAllFetchParams(allFetchParams, searchRequests, serializeFetchParams);\n\n            case 5:\n              _ref4 = _context2.sent;\n              serializedFetchParams = _ref4.serializedFetchParams;\n              failedSearchRequests = _ref4.failedSearchRequests;\n              msearchParams = {\n                rest_total_hits_as_int: true,\n                // If we want to include frozen indexes we need to specify ignore_throttled: false\n                ignore_throttled: !includeFrozen,\n                body: serializedFetchParams\n              };\n\n\n              if (maxConcurrentShardRequests !== 0) {\n                msearchParams.max_concurrent_shard_requests = maxConcurrentShardRequests;\n              }\n\n              searching = es.msearch(msearchParams);\n              return _context2.abrupt('return', {\n                // Munge data into shape expected by consumer.\n                searching: new Promise(function (resolve, reject) {\n                  // Unwrap the responses object returned by the ES client.\n                  searching.then(function (_ref5) {\n                    var responses = _ref5.responses;\n\n                    resolve(responses);\n                  }).catch(function (error) {\n                    // Format ES client error as a SearchError.\n                    var statusCode = error.statusCode,\n                        displayName = error.displayName,\n                        message = error.message,\n                        path = error.path;\n\n\n                    var searchError = new _search_error.SearchError({\n                      status: statusCode,\n                      title: displayName,\n                      message: message,\n                      path: path\n                    });\n\n                    reject(searchError);\n                  });\n                }),\n                abort: searching.abort,\n                failedSearchRequests: failedSearchRequests\n              });\n\n            case 12:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, undefined);\n    }));\n\n    function search(_x4) {\n      return _ref3.apply(this, arguments);\n    }\n\n    return search;\n  }(),\n\n  isViable: function isViable(indexPattern) {\n    if (!indexPattern) {\n      return false;\n    }\n\n    return (0, _is_default_type_index_pattern.isDefaultTypeIndexPattern)(indexPattern);\n  }\n};\n\n(0, _search_strategy_registry.addSearchStrategy)(defaultSearchStrategy);",null]}