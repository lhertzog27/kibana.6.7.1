{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/region_map/public/region_map_vis.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/region_map/public/region_map_vis.js","mtime":1567631711640},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nrequire('./region_map_vis_params');\n\nvar _vis_factory = require('ui/vis/vis_factory');\n\nvar _schemas = require('ui/vis/editors/default/schemas');\n\nvar _vis_types = require('ui/registry/vis_types');\n\nvar _truncated_colormaps = require('ui/vislib/components/color/truncated_colormaps');\n\nvar _util = require('./util');\n\nvar _region_map_visualization = require('./region_map_visualization');\n\nvar _update_status = require('ui/vis/update_status');\n\nvar _origin = require('../../../../legacy/core_plugins/tile_map/common/origin');\n\n_vis_types.VisTypesRegistryProvider.register(function RegionMapProvider(Private, regionmapsConfig, config, i18n) {\n\n  var VisFactory = Private(_vis_factory.VisFactoryProvider);\n  var RegionMapsVisualization = Private(_region_map_visualization.RegionMapsVisualizationProvider);\n\n  var vectorLayers = regionmapsConfig.layers.map(_util.mapToLayerWithId.bind(null, _origin.ORIGIN.KIBANA_YML));\n\n  var selectedLayer = vectorLayers[0];\n  var selectedJoinField = selectedLayer ? vectorLayers[0].fields[0] : null;\n\n  return VisFactory.createBaseVisualization({\n    name: 'region_map',\n    title: i18n('regionMap.mapVis.regionMapTitle', { defaultMessage: 'Region Map' }),\n    description: i18n('regionMap.mapVis.regionMapDescription', { defaultMessage: 'Show metrics on a thematic map. Use one of the \\\nprovided base maps, or add your own. Darker colors represent higher values.' }),\n    icon: 'visMapRegion',\n    visConfig: {\n      defaults: {\n        legendPosition: 'bottomright',\n        addTooltip: true,\n        colorSchema: 'Yellow to Red',\n        selectedLayer: selectedLayer,\n        emsHotLink: '',\n        selectedJoinField: selectedJoinField,\n        isDisplayWarning: true,\n        wms: config.get('visualization:tileMap:WMSdefaults'),\n        mapZoom: 2,\n        mapCenter: [0, 0],\n        outlineWeight: 1,\n        showAllShapes: true //still under consideration\n      }\n    },\n    requiresUpdateStatus: [_update_status.Status.AGGS, _update_status.Status.PARAMS, _update_status.Status.RESIZE, _update_status.Status.DATA, _update_status.Status.UI_STATE],\n    visualization: RegionMapsVisualization,\n    editorConfig: {\n      optionsTemplate: '<region_map-vis-params></region_map-vis-params>',\n      collections: {\n        legendPositions: [{\n          value: 'bottomleft',\n          text: i18n('regionMap.mapVis.regionMapEditorConfig.bottomLeftText', { defaultMessage: 'bottom left' })\n        }, {\n          value: 'bottomright',\n          text: i18n('regionMap.mapVis.regionMapEditorConfig.bottomRightText', { defaultMessage: 'bottom right' })\n        }, {\n          value: 'topleft',\n          text: i18n('regionMap.mapVis.regionMapEditorConfig.topLeftText', { defaultMessage: 'top left' })\n        }, {\n          value: 'topright',\n          text: i18n('regionMap.mapVis.regionMapEditorConfig.topRightText', { defaultMessage: 'top right' })\n        }],\n        colorSchemas: Object.values(_truncated_colormaps.truncatedColorMaps).map(function (value) {\n          return { id: value.id, label: value.label };\n        }),\n        vectorLayers: vectorLayers,\n        tmsLayers: []\n      },\n      schemas: new _schemas.Schemas([{\n        group: 'metrics',\n        name: 'metric',\n        title: i18n('regionMap.mapVis.regionMapEditorConfig.schemas.metricTitle', { defaultMessage: 'Value' }),\n        min: 1,\n        max: 1,\n        aggFilter: ['count', 'avg', 'sum', 'min', 'max', 'cardinality', 'top_hits', 'sum_bucket', 'min_bucket', 'max_bucket', 'avg_bucket'],\n        defaults: [{ schema: 'metric', type: 'count' }]\n      }, {\n        group: 'buckets',\n        name: 'segment',\n        icon: 'fa fa-globe',\n        title: i18n('regionMap.mapVis.regionMapEditorConfig.schemas.segmentTitle', { defaultMessage: 'shape field' }),\n        min: 1,\n        max: 1,\n        aggFilter: ['terms']\n      }])\n    }\n  });\n}); /*\n     * Licensed to Elasticsearch B.V. under one or more contributor\n     * license agreements. See the NOTICE file distributed with\n     * this work for additional information regarding copyright\n     * ownership. Elasticsearch B.V. licenses this file to you under\n     * the Apache License, Version 2.0 (the \"License\"); you may\n     * not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *    http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing,\n     * software distributed under the License is distributed on an\n     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     * KIND, either express or implied.  See the License for the\n     * specific language governing permissions and limitations\n     * under the License.\n     */",null]}