{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/register_vis.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/register_vis.js","mtime":1567631691152},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _vis_factory = require('ui/vis/vis_factory');\n\nvar _vis_types = require('ui/registry/vis_types');\n\nvar _vis_controller = require('./vis_controller');\n\nvar _controls_tab = require('./components/editor/controls_tab');\n\nvar _options_tab = require('./components/editor/options_tab');\n\nvar _default_feedback_message = require('ui/vis/default_feedback_message');\n\nvar _update_status = require('ui/vis/update_status');\n\nvar _i18n = require('@kbn/i18n');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction InputControlVisProvider(Private) {\n  var VisFactory = Private(_vis_factory.VisFactoryProvider);\n\n  // return the visType object, which kibana will use to display and configure new Vis object of this type.\n  return VisFactory.createBaseVisualization({\n    name: 'input_control_vis',\n    title: _i18n.i18n.translate('inputControl.register.controlsTitle', {\n      defaultMessage: 'Controls'\n    }),\n    icon: 'visControls',\n    description: _i18n.i18n.translate('inputControl.register.controlsDescription', {\n      defaultMessage: 'Create interactive controls for easy dashboard manipulation.'\n    }),\n    stage: 'experimental',\n    requiresUpdateStatus: [_update_status.Status.PARAMS, _update_status.Status.TIME],\n    feedbackMessage: _default_feedback_message.defaultFeedbackMessage,\n    visualization: _vis_controller.VisController,\n    visConfig: {\n      defaults: {\n        controls: [],\n        updateFiltersOnChange: false,\n        useTimeFilter: false,\n        pinFilters: false\n      }\n    },\n    editor: 'default',\n    editorConfig: {\n      optionTabs: [{\n        name: 'controls',\n        title: _i18n.i18n.translate('inputControl.register.tabs.controlsTitle', {\n          defaultMessage: 'Controls'\n        }),\n        editor: _controls_tab.ControlsTab\n      }, {\n        name: 'options',\n        title: _i18n.i18n.translate('inputControl.register.tabs.optionsTitle', {\n          defaultMessage: 'Options'\n        }),\n        editor: _options_tab.OptionsTab\n      }]\n    },\n    requestHandler: 'none',\n    responseHandler: 'none'\n  });\n}\n\n// register the provider with the visTypes registry\n_vis_types.VisTypesRegistryProvider.register(InputControlVisProvider);\n\n// export the provider so that the visType can be required with Private()\nexports.default = InputControlVisProvider;\nmodule.exports = exports['default'];",null]}