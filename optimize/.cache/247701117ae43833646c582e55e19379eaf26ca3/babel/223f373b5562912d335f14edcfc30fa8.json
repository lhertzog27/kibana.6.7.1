{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/sense_editor/mode/x_json_highlight_rules.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/sense_editor/mode/x_json_highlight_rules.js","mtime":1567631691128},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addToRules = addToRules;\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _ = require('lodash');\nvar ScriptHighlightRules = require('./script_highlight_rules').ScriptHighlightRules;\n\nvar jsonRules = function jsonRules(root) {\n  root = root ? root : 'json';\n  var rules = {};\n  rules[root] = [{\n    token: ['variable', 'whitespace', 'ace.punctuation.colon', 'whitespace', 'punctuation.start_triple_quote'],\n    regex: '(\"(?:[^\"]*_)?script\"|\"inline\"|\"source\")(\\\\s*?)(:)(\\\\s*?)(\"\"\")',\n    next: 'script-start',\n    merge: false,\n    push: true\n  }, {\n    token: 'variable', // single line\n    regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n  }, {\n    token: 'punctuation.start_triple_quote',\n    regex: '\"\"\"',\n    next: 'string_literal',\n    merge: false,\n    push: true\n  }, {\n    token: 'string', // single line\n    regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n  }, {\n    token: 'constant.numeric', // hex\n    regex: '0[xX][0-9a-fA-F]+\\\\b'\n  }, {\n    token: 'constant.numeric', // float\n    regex: '[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b'\n  }, {\n    token: 'constant.language.boolean',\n    regex: '(?:true|false)\\\\b'\n  }, {\n    token: 'invalid.illegal', // single quoted strings are not allowed\n    regex: '[\\'](?:(?:\\\\\\\\.)|(?:[^\\'\\\\\\\\]))*?[\\']'\n  }, {\n    token: 'invalid.illegal', // comments are not allowed\n    regex: '\\\\/\\\\/.*$'\n  }, {\n    token: 'paren.lparen',\n    merge: false,\n    regex: '{',\n    next: root,\n    push: true\n  }, {\n    token: 'paren.lparen',\n    merge: false,\n    regex: '[[(]'\n  }, {\n    token: 'paren.rparen',\n    merge: false,\n    regex: '[\\\\])]'\n  }, {\n    token: 'paren.rparen',\n    regex: '}',\n    merge: false,\n    next: 'pop'\n  }, {\n    token: 'punctuation.comma',\n    regex: ','\n  }, {\n    token: 'punctuation.colon',\n    regex: ':'\n  }, {\n    token: 'whitespace',\n    regex: '\\\\s+'\n  }, {\n    token: 'text',\n    regex: '.+?'\n  }];\n  rules.string_literal = [{\n    token: 'punctuation.end_triple_quote',\n    regex: '\"\"\"',\n    next: 'pop'\n  }, {\n    token: 'multi_string',\n    regex: '.'\n  }];\n  return rules;\n};\n\nfunction addToRules(otherRules, embedUnder) {\n  otherRules.$rules = _.defaultsDeep(otherRules.$rules, jsonRules(embedUnder));\n  otherRules.embedRules(ScriptHighlightRules, 'script-', [{\n    token: 'punctuation.end_triple_quote',\n    regex: '\"\"\"',\n    next: 'pop'\n  }]);\n}",null]}