{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/courier/saved_object/saved_object_loader.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/courier/saved_object/saved_object_loader.js","mtime":1567631711714},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SavedObjectLoader = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nicensed to Elasticsearch B.V. under one or more contributor\nlicense agreements. See the NOTICE file distributed with\nthis work for additional information regarding copyright\nownership. Elasticsearch B.V. licenses this file to you under\nthe Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License.\nou may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn\nvar _scanner = require('../../utils/scanner');\n\nvar _string_utils = require('../../utils/string_utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SavedObjectLoader = exports.SavedObjectLoader = function () {\n  function SavedObjectLoader(SavedObjectClass, kbnIndex, kbnUrl, $http, chrome, savedObjectClient) {\n    _classCallCheck(this, SavedObjectLoader);\n\n    this.type = SavedObjectClass.type;\n    this.Class = SavedObjectClass;\n    this.lowercaseType = this.type.toLowerCase();\n    this.kbnIndex = kbnIndex;\n    this.kbnUrl = kbnUrl;\n    this.chrome = chrome;\n\n    this.scanner = new _scanner.Scanner($http, {\n      index: kbnIndex,\n      type: this.lowercaseType\n    });\n\n    this.loaderProperties = {\n      name: this.lowercaseType + 's',\n      noun: _string_utils.StringUtils.upperFirst(this.type),\n      nouns: this.lowercaseType + 's'\n    };\n\n    this.savedObjectsClient = savedObjectClient;\n  }\n\n  /**\n   * Retrieve a saved object by id. Returns a promise that completes when the object finishes\n   * initializing.\n   * @param id\n   * @returns {Promise<SavedObject>}\n   */\n\n\n  _createClass(SavedObjectLoader, [{\n    key: 'get',\n    value: function get(id) {\n      return new this.Class(id).init();\n    }\n  }, {\n    key: 'urlFor',\n    value: function urlFor(id) {\n      return this.kbnUrl.eval('#/' + this.lowercaseType + '/{{id}}', { id: id });\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(ids) {\n      var _this = this;\n\n      ids = !Array.isArray(ids) ? [ids] : ids;\n\n      var deletions = ids.map(function (id) {\n        var savedObject = new _this.Class(id);\n        return savedObject.delete();\n      });\n\n      return Promise.all(deletions).then(function () {\n        if (_this.chrome) {\n          _this.chrome.untrackNavLinksForDeletedSavedObjects(ids);\n        }\n      });\n    }\n\n    /**\n     * Updates source to contain an id and url field, and returns the updated\n     * source object.\n     * @param source\n     * @param id\n     * @returns {source} The modified source object, with an id and url field.\n     */\n\n  }, {\n    key: 'mapHitSource',\n    value: function mapHitSource(source, id) {\n      source.id = id;\n      source.url = this.urlFor(id);\n      return source;\n    }\n  }, {\n    key: 'scanAll',\n    value: function scanAll(queryString) {\n      var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n\n      return this.scanner.scanAndMap(queryString, {\n        pageSize: pageSize,\n        docCount: Infinity\n      });\n    }\n\n    /**\n     * Updates hit.attributes to contain an id and url field, and returns the updated\n     * attributes object.\n     * @param hit\n     * @returns {hit.attributes} The modified hit.attributes object, with an id and url field.\n     */\n\n  }, {\n    key: 'mapSavedObjectApiHits',\n    value: function mapSavedObjectApiHits(hit) {\n      return this.mapHitSource(hit.attributes, hit.id);\n    }\n\n    /**\n     * TODO: Rather than use a hardcoded limit, implement pagination. See\n     * https://github.com/elastic/kibana/issues/8044 for reference.\n     *\n     * @param searchString\n     * @param size\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'findAll',\n    value: function findAll() {\n      var search = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      var _this2 = this;\n\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      var fields = arguments[2];\n\n      return this.savedObjectsClient.find({\n        type: this.lowercaseType,\n        search: search ? search + '*' : undefined,\n        perPage: size,\n        page: 1,\n        searchFields: ['title^3', 'description'],\n        fields: fields\n      }).then(function (resp) {\n        return {\n          total: resp.total,\n          hits: resp.savedObjects.map(function (savedObject) {\n            return _this2.mapSavedObjectApiHits(savedObject);\n          })\n        };\n      });\n    }\n  }, {\n    key: 'find',\n    value: function find() {\n      var search = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      return this.findAll(search, size).then(function (resp) {\n        return {\n          total: resp.total,\n          hits: resp.hits.filter(function (savedObject) {\n            return !savedObject.error;\n          })\n        };\n      });\n    }\n  }]);\n\n  return SavedObjectLoader;\n}();",null]}