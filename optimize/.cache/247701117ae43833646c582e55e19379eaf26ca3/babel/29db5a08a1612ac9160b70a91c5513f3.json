{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/indexed_array/inflector.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/indexed_array/inflector.js","mtime":1567631711739},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inflector = inflector;\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction upFirst(str, total) {\n  return str.charAt(0).toUpperCase() + (total ? str.substr(1).toLowerCase() : str.substr(1));\n}\n\nfunction startsWith(str, test) {\n  return str.substr(0, test.length).toLowerCase() === test.toLowerCase();\n}\n\nfunction endsWith(str, test) {\n  var tooShort = str.length < test.length;\n  if (tooShort) return;\n\n  return str.substr(str.length - test.length).toLowerCase() === test.toLowerCase();\n}\n\nfunction inflector(prefix, postfix) {\n  return function inflect(key) {\n    var inflected = void 0;\n\n    if (key.indexOf('.') !== -1) {\n      inflected = key.split('.').map(function (step, i) {\n        return i === 0 ? step : upFirst(step, true);\n      }).join('');\n    } else {\n      inflected = key;\n    }\n\n    if (prefix && !startsWith(key, prefix)) {\n      inflected = prefix + upFirst(inflected);\n    }\n\n    if (postfix && !endsWith(key, postfix)) {\n      inflected = inflected + postfix;\n    }\n\n    return inflected;\n  };\n}",null]}