{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/lib/series_change_handler.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/lib/series_change_handler.js","mtime":1567631711627},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _new_metric_agg_fn = require('./new_metric_agg_fn');\n\nvar _new_metric_agg_fn2 = _interopRequireDefault(_new_metric_agg_fn);\n\nvar _agg_lookup = require('../../../common/agg_lookup');\n\nvar _collection_actions = require('./collection_actions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexports.default = function (props, items) {\n  return function (doc) {\n    // If we only have one sibling and the user changes to a pipeline\n    // agg we are going to add the pipeline instead of changing the\n    // current item.\n    if (items.length === 1 && !(0, _agg_lookup.isBasicAgg)(doc)) {\n      _collection_actions.handleAdd.call(null, props, function () {\n        var metric = (0, _new_metric_agg_fn2.default)();\n        metric.type = doc.type;\n        var incompatPipelines = ['calculation', 'series_agg'];\n        if (!_lodash2.default.contains(incompatPipelines, doc.type)) metric.field = doc.id;\n        return metric;\n      });\n    } else {\n      _collection_actions.handleChange.call(null, props, doc);\n    }\n  };\n};\n\nmodule.exports = exports['default'];",null]}