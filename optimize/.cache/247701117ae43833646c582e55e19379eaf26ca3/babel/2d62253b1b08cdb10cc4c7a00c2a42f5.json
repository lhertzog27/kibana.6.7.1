{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_response/hierarchical/build_hierarchical_data.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_response/hierarchical/build_hierarchical_data.js","mtime":1567631711692},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BuildHierarchicalDataProvider = BuildHierarchicalDataProvider;\n\nvar _lodash = require('lodash');\n\nvar _hierarchical_tooltip_formatter = require('./_hierarchical_tooltip_formatter');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                     * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                     * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                     * this work for additional information regarding copyright\n                                                                                                                                                                                                     * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                     * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                     * not use this file except in compliance with the License.\n                                                                                                                                                                                                     * You may obtain a copy of the License at\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                     * software distributed under the License is distributed on an\n                                                                                                                                                                                                     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                     * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                     * specific language governing permissions and limitations\n                                                                                                                                                                                                     * under the License.\n                                                                                                                                                                                                     */\n\nfunction BuildHierarchicalDataProvider(Private) {\n  var tooltipFormatter = Private(_hierarchical_tooltip_formatter.HierarchicalTooltipFormatterProvider);\n\n  return function (table) {\n    var slices = void 0;\n    var names = {};\n    if (table.columns.length === 1) {\n      slices = [{ name: table.columns[0].title, size: table.rows[0][0].value }];\n      names[table.columns[0].title] = table.columns[0].title;\n    } else {\n      var parent = void 0;\n      slices = [];\n      table.rows.forEach(function (row) {\n        var dataLevel = slices;\n        // we always have one bucket column and one metric column (for every level)\n\n        var _loop = function _loop(columnIndex) {\n          var aggConfig = table.columns[columnIndex].aggConfig;\n\n          var fieldFormatter = aggConfig.fieldFormatter('text');\n          var bucketColumn = row[columnIndex];\n          var metricColumn = row[columnIndex + 1];\n          var name = fieldFormatter(bucketColumn.value);\n          var size = metricColumn.value;\n          names[name] = name;\n\n          var slice = dataLevel.find(function (slice) {\n            return slice.name === name;\n          });\n          if (!slice) {\n            slice = { name: name, size: size, parent: parent, aggConfig: aggConfig, aggConfigResult: bucketColumn, children: [] };\n            dataLevel.push(slice);\n          }\n          parent = slice;\n          dataLevel = slice.children;\n        };\n\n        for (var columnIndex = 0; columnIndex < table.columns.length; columnIndex += 2) {\n          _loop(columnIndex);\n        }\n      });\n    }\n\n    return {\n      hits: table.rows.length,\n      raw: table,\n      names: (0, _lodash.toArray)(names),\n      tooltipFormatter: tooltipFormatter(table.columns),\n      slices: {\n        children: [].concat(_toConsumableArray(slices))\n      }\n    };\n  };\n}",null]}