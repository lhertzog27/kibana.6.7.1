{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/state_management/global_state.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/state_management/global_state.js","mtime":1567631711754},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GlobalStateProvider = GlobalStateProvider;\n\nvar _query_string = require('../utils/query_string');\n\nvar _state = require('./state');\n\nvar _modules = require('../modules');\n\nvar _legacy_class = require('../utils/legacy_class');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _module = _modules.uiModules.get('kibana/global_state');\n\nfunction GlobalStateProvider(Private) {\n  var State = Private(_state.StateProvider);\n\n  (0, _legacy_class.createLegacyClass)(GlobalState).inherits(State);\n  function GlobalState(defaults) {\n    GlobalState.Super.call(this, '_g', defaults);\n  }\n\n  // if the url param is missing, write it back\n  GlobalState.prototype._persistAcrossApps = true;\n\n  GlobalState.prototype.removeFromUrl = function (url) {\n    return _query_string.QueryString.replaceParamInUrl(url, this._urlParam, null);\n  };\n\n  return new GlobalState();\n}\n\n_module.service('globalState', function (Private) {\n  return Private(GlobalStateProvider);\n});",null]}