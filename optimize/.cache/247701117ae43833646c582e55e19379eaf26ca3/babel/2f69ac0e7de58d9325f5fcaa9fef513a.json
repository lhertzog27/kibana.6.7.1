{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/context/components/size_picker/size_picker.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/context/components/size_picker/size_picker.js","mtime":1567631691166},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _modules = require('ui/modules');\n\nvar _compat = require('ui/compat');\n\nvar _size_picker = require('./size_picker.html');\n\nvar _size_picker2 = _interopRequireDefault(_size_picker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _module = _modules.uiModules.get('apps/context', ['kibana']);\n\n_module.directive('contextSizePicker', function ContextSizePicker() {\n  return {\n    bindToController: true,\n    controller: (0, _compat.callAfterBindingsWorkaround)(ContextSizePickerController),\n    controllerAs: 'contextSizePicker',\n    link: linkContextSizePicker,\n    replace: true,\n    restrict: 'E',\n    require: 'ngModel',\n    scope: {\n      count: '=',\n      isDisabled: '=',\n      onChangeCount: '=' // To avoid inconsistent ngModel states this action\n      // should make sure the new value is propagated back\n      // to the `count` property. If that propagation\n      // fails, the user input will be reset to the value\n      // of `count`.\n    },\n    template: _size_picker2.default\n  };\n});\n\nfunction linkContextSizePicker(scope, element, attrs, ngModel) {\n  scope.countModel = ngModel;\n}\n\nfunction ContextSizePickerController($scope) {\n  var _this = this;\n\n  $scope.$watch(function () {\n    return _this.count;\n  }, function () {\n    return $scope.countModel.$rollbackViewValue();\n  });\n\n  this.getOrSetCount = function (count) {\n    return _lodash2.default.isUndefined(count) ? _this.count : _this.onChangeCount(count);\n  };\n}",null]}