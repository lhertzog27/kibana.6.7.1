{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/vis/response_handlers/vislib.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vis/response_handlers/vislib.js","mtime":1567631711772},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VislibSlicesResponseHandlerProvider = exports.VislibSeriesResponseHandlerProvider = undefined;\n\nvar _legacy = require('./legacy');\n\nvar _build_hierarchical_data = require('../../agg_response/hierarchical/build_hierarchical_data');\n\nvar _point_series = require('../../agg_response/point_series/point_series');\n\nvar _vis_response_handlers = require('../../registry/vis_response_handlers');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction convertTableGroup(tableGroup, convertTable) {\n  var tables = tableGroup.tables;\n  var firstChild = tables[0];\n\n  if (!tables.length) return;\n\n  if (firstChild.columns) {\n    var chart = convertTable(firstChild);\n    // if chart is within a split, assign group title to its label\n    if (tableGroup.$parent) {\n      chart.label = tableGroup.title;\n    }\n    return chart;\n  }\n\n  var out = {};\n  var outList = void 0;\n\n  tables.forEach(function (table) {\n    if (!outList) {\n      var aggConfig = table.aggConfig;\n      var direction = aggConfig.params.row ? 'rows' : 'columns';\n      outList = out[direction] = [];\n    }\n\n    var output = void 0;\n    if (output = convertTableGroup(table, convertTable)) {\n      outList.push(output);\n    }\n  });\n\n  return out;\n}\n\nvar handlerFunction = function handlerFunction(tableResponseProvider, convertTable) {\n  return function (response) {\n    return new Promise(function (resolve) {\n      return tableResponseProvider(response).then(function (tableGroup) {\n        var converted = convertTableGroup(tableGroup, convertTable);\n        if (!converted) {\n          // mimic a row of tables that doesn't have any tables\n          // https://github.com/elastic/kibana/blob/7bfb68cd24ed42b1b257682f93c50cd8d73e2520/src/kibana/components/vislib/components/zero_injection/inject_zeros.js#L32\n          converted = { rows: [] };\n        }\n\n        converted.hits = response.rows.length;\n\n        resolve(converted);\n      });\n    });\n  };\n};\n\nvar VislibSeriesResponseHandlerProvider = function VislibSeriesResponseHandlerProvider(Private) {\n  var tableResponseProvider = Private(_legacy.LegacyResponseHandlerProvider).handler;\n  var buildPointSeriesData = Private(_point_series.AggResponsePointSeriesProvider);\n\n  return {\n    name: 'vislib_series',\n    handler: handlerFunction(tableResponseProvider, buildPointSeriesData)\n  };\n};\n\nvar VislibSlicesResponseHandlerProvider = function VislibSlicesResponseHandlerProvider(Private) {\n  var buildHierarchicalData = Private(_build_hierarchical_data.BuildHierarchicalDataProvider);\n  var tableResponseProvider = Private(_legacy.LegacyResponseHandlerProvider).handler;\n\n  return {\n    name: 'vislib_slices',\n    handler: handlerFunction(tableResponseProvider, buildHierarchicalData)\n  };\n};\n\n_vis_response_handlers.VisResponseHandlersRegistryProvider.register(VislibSeriesResponseHandlerProvider);\n_vis_response_handlers.VisResponseHandlersRegistryProvider.register(VislibSlicesResponseHandlerProvider);\n\nexports.VislibSeriesResponseHandlerProvider = VislibSeriesResponseHandlerProvider;\nexports.VislibSlicesResponseHandlerProvider = VislibSlicesResponseHandlerProvider;",null]}