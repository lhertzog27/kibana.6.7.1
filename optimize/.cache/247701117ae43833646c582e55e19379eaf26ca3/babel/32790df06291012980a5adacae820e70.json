{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/lib/parent_pipeline_agg_controller.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/lib/parent_pipeline_agg_controller.js","mtime":1567631711700},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parentPipelineAggController = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _safe_make_label = require('./safe_make_label');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar parentPipelineAggController = function parentPipelineAggController($scope) {\n\n  $scope.safeMakeLabel = _safe_make_label.safeMakeLabel;\n\n  $scope.$watch('responseValueAggs', updateOrderAgg);\n  $scope.$watch('agg.params.metricAgg', updateOrderAgg);\n\n  $scope.$on('$destroy', function () {\n    var lastBucket = _lodash2.default.findLast($scope.state.aggs, function (agg) {\n      return agg.type.type === 'buckets';\n    });\n    if ($scope.aggForm && $scope.aggForm.agg) {\n      $scope.aggForm.agg.$setValidity('bucket', true);\n    }\n    if (lastBucket && lastBucket.error) {\n      delete lastBucket.error;\n    }\n  });\n\n  $scope.isDisabledAgg = function (agg) {\n    var invalidAggs = ['top_hits', 'percentiles', 'percentile_ranks', 'median', 'std_dev'];\n    return Boolean(invalidAggs.find(function (invalidAgg) {\n      return invalidAgg === agg.type.name;\n    }));\n  };\n\n  function checkBuckets() {\n    var lastBucket = _lodash2.default.findLast($scope.state.aggs, function (agg) {\n      return agg.type.type === 'buckets';\n    });\n    var bucketHasType = lastBucket && lastBucket.type;\n    var bucketIsHistogram = bucketHasType && ['date_histogram', 'histogram'].includes(lastBucket.type.name);\n    var canUseAggregation = lastBucket && bucketIsHistogram;\n\n    // remove errors on all buckets\n    _lodash2.default.each($scope.state.aggs, function (agg) {\n      if (agg.error) delete agg.error;\n    });\n\n    if ($scope.aggForm.agg) {\n      $scope.aggForm.agg.$setValidity('bucket', canUseAggregation);\n    }\n    if (canUseAggregation) {\n      lastBucket.params.min_doc_count = lastBucket.type.name === 'histogram' ? 1 : 0;\n    } else {\n      if (lastBucket) {\n        var type = $scope.agg.type.title;\n        lastBucket.error = _i18n.i18n.translate('common.ui.aggTypes.metrics.wrongLastBucketTypeErrorMessage', {\n          defaultMessage: 'Last bucket aggregation must be \"Date Histogram\" or \"Histogram\" when using \"{type}\" metric aggregation!',\n          values: { type: type },\n          description: 'Date Histogram and Histogram should not be translated'\n        });\n      }\n    }\n  }\n\n  function updateOrderAgg() {\n    var agg = $scope.agg;\n    var params = agg.params;\n    var metricAgg = params.metricAgg;\n    var paramDef = agg.type.params.byName.customMetric;\n\n    checkBuckets();\n\n    // we aren't creating a custom aggConfig\n    if (metricAgg !== 'custom') {\n      if (!$scope.state.aggs.find(function (agg) {\n        return agg.id === metricAgg;\n      })) {\n        params.metricAgg = null;\n      }\n      params.customMetric = null;\n      return;\n    }\n\n    params.customMetric = params.customMetric || paramDef.makeAgg(agg);\n  }\n}; /*\n    * Licensed to Elasticsearch B.V. under one or more contributor\n    * license agreements. See the NOTICE file distributed with\n    * this work for additional information regarding copyright\n    * ownership. Elasticsearch B.V. licenses this file to you under\n    * the Apache License, Version 2.0 (the \"License\"); you may\n    * not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *    http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing,\n    * software distributed under the License is distributed on an\n    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    * KIND, either express or implied.  See the License for the\n    * specific language governing permissions and limitations\n    * under the License.\n    */\n\nexports.parentPipelineAggController = parentPipelineAggController;",null]}