{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/utils/ipv4_address.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/utils/ipv4_address.js","mtime":1567631711765},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Ipv4Address;\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar NUM_BYTES = 4;\nvar BYTE_SIZE = 256;\n\nfunction throwError(ipAddress) {\n  throw Error('Invalid IPv4 address: ' + ipAddress);\n}\n\nfunction isIntegerInRange(integer, min, max) {\n  return !isNaN(integer) && integer >= min && integer < max && integer % 1 === 0;\n}\n\n// eslint-disable-next-line @elastic/kibana-custom/no-default-export\nfunction Ipv4Address(ipAddress) {\n  this.value = ipAddress;\n\n  if (typeof ipAddress === 'string') {\n    this.value = 0;\n\n    var bytes = ipAddress.split('.');\n    if (bytes.length !== NUM_BYTES) throwError(ipAddress);\n\n    for (var i = 0; i < bytes.length; i++) {\n      var byte = Number(bytes[i]);\n      if (!isIntegerInRange(byte, 0, BYTE_SIZE)) throwError(ipAddress);\n      this.value += Math.pow(BYTE_SIZE, NUM_BYTES - 1 - i) * byte;\n    }\n  }\n\n  if (!isIntegerInRange(this.value, 0, Math.pow(BYTE_SIZE, NUM_BYTES))) throwError(ipAddress);\n}\n\nIpv4Address.prototype.toString = function () {\n  var value = this.value;\n  var bytes = [];\n  for (var i = 0; i < NUM_BYTES; i++) {\n    bytes.unshift(value % 256);\n    value = Math.floor(value / 256);\n  }\n  return bytes.join('.');\n};\n\nIpv4Address.prototype.valueOf = function () {\n  return this.value;\n};\nmodule.exports = exports['default'];",null]}