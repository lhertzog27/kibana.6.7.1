{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/output.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/output.js","mtime":1567631691127},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initializeOutput = initializeOutput;\nexports.default = getOutput;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ace = require('brace'); /*\n                             * Licensed to Elasticsearch B.V. under one or more contributor\n                             * license agreements. See the NOTICE file distributed with\n                             * this work for additional information regarding copyright\n                             * ownership. Elasticsearch B.V. licenses this file to you under\n                             * the Apache License, Version 2.0 (the \"License\"); you may\n                             * not use this file except in compliance with the License.\n                             * You may obtain a copy of the License at\n                             *\n                             *    http://www.apache.org/licenses/LICENSE-2.0\n                             *\n                             * Unless required by applicable law or agreed to in writing,\n                             * software distributed under the License is distributed on an\n                             * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                             * KIND, either express or implied.  See the License for the\n                             * specific language governing permissions and limitations\n                             * under the License.\n                             */\n\nvar settings = require('./settings');\nvar OutputMode = require('./sense_editor/mode/output');\nvar smartResize = require('./smart_resize');\n\nvar output = void 0;\nfunction initializeOutput($el) {\n  output = ace.acequire('ace/ace').edit($el[0]);\n\n  var outputMode = new OutputMode.Mode();\n\n  output.$blockScrolling = Infinity;\n  output.resize = smartResize(output);\n  output.update = function (val, mode, cb) {\n    if (typeof mode === 'function') {\n      cb = mode;\n      mode = void 0;\n    }\n\n    var session = output.getSession();\n\n    session.setMode(val ? mode || outputMode : 'ace/mode/text');\n    session.setValue(val);\n    if (typeof cb === 'function') {\n      setTimeout(cb);\n    }\n  };\n\n  output.append = function (val, foldPrevious, cb) {\n    if (typeof foldPrevious === 'function') {\n      cb = foldPrevious;\n      foldPrevious = true;\n    }\n    if (_lodash2.default.isUndefined(foldPrevious)) {\n      foldPrevious = true;\n    }\n    var session = output.getSession();\n    var lastLine = session.getLength();\n    if (foldPrevious) {\n      output.moveCursorTo(Math.max(0, lastLine - 1), 0);\n    }\n    session.insert({ row: lastLine, column: 0 }, '\\n' + val);\n    output.moveCursorTo(lastLine + 1, 0);\n    if (typeof cb === 'function') {\n      setTimeout(cb);\n    }\n  };\n\n  output.$el = $el;\n\n  (function (session) {\n    session.setMode('ace/mode/text');\n    session.setFoldStyle('markbeginend');\n    session.setTabSize(2);\n    session.setUseWrapMode(true);\n  })(output.getSession());\n\n  output.setShowPrintMargin(false);\n  output.setReadOnly(true);\n\n  if (settings) {\n    settings.applyCurrentSettings(output);\n  }\n\n  return output;\n}\n\nfunction getOutput() {\n  return output;\n}",null]}