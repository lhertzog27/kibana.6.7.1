{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/kb.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/kb.js","mtime":1567631711527},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._test = undefined;\nexports.getUnmatchedEndpointComponents = getUnmatchedEndpointComponents;\nexports.getEndpointDescriptionByEndpoint = getEndpointDescriptionByEndpoint;\nexports.getEndpointBodyCompleteComponents = getEndpointBodyCompleteComponents;\nexports.getTopLevelUrlCompleteComponents = getTopLevelUrlCompleteComponents;\nexports.getGlobalAutocompleteComponents = getGlobalAutocompleteComponents;\nexports.setActiveApi = setActiveApi;\n\nvar _components = require('./autocomplete/components');\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _api = require('./kb/api');\n\nvar _api2 = _interopRequireDefault(_api);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar ACTIVE_API = new _api2.default();\nvar isNotAnIndexName = function isNotAnIndexName(name) {\n  return name[0] === '_' && name !== '_all';\n};\n\nvar idAutocompleteComponentFactory = function idAutocompleteComponentFactory(name, parent) {\n  return new _components.IdAutocompleteComponent(name, parent);\n};\nvar parametrizedComponentFactories = {\n  getComponent: function getComponent(name, parent, provideDefault) {\n    if (this[name]) {\n      return this[name];\n    } else if (provideDefault) {\n      return idAutocompleteComponentFactory;\n    }\n  },\n  index: function index(name, parent) {\n    if (isNotAnIndexName(name)) return;\n    return new _components.IndexAutocompleteComponent(name, parent, false);\n  },\n  indices: function indices(name, parent) {\n    if (isNotAnIndexName(name)) return;\n    return new _components.IndexAutocompleteComponent(name, parent, true);\n  },\n  type: function type(name, parent) {\n    return new _components.TypeAutocompleteComponent(name, parent, false);\n  },\n  types: function types(name, parent) {\n    return new _components.TypeAutocompleteComponent(name, parent, true);\n  },\n  id: function id(name, parent) {\n    return idAutocompleteComponentFactory(name, parent);\n  },\n  username: function username(name, parent) {\n    return new _components.UsernameAutocompleteComponent(name, parent);\n  },\n  user: function user(name, parent) {\n    return new _components.UsernameAutocompleteComponent(name, parent);\n  },\n  template: function template(name, parent) {\n    return new _components.TemplateAutocompleteComponent(name, parent);\n  },\n  task_id: function task_id(name, parent) {\n    return idAutocompleteComponentFactory(name, parent);\n  },\n  ids: function ids(name, parent) {\n    return idAutocompleteComponentFactory(name, parent, true);\n  },\n  fields: function fields(name, parent) {\n    return new _components.FieldAutocompleteComponent(name, parent, true);\n  },\n  field: function field(name, parent) {\n    return new _components.FieldAutocompleteComponent(name, parent, false);\n  },\n  nodes: function nodes(name, parent) {\n    return new _components.ListComponent(name, ['_local', '_master', 'data:true', 'data:false', 'master:true', 'master:false'], parent);\n  },\n  node: function node(name, parent) {\n    return new _components.ListComponent(name, [], parent, false);\n  }\n};\n\nfunction getUnmatchedEndpointComponents() {\n  return ACTIVE_API.getUnmatchedEndpointComponents();\n}\n\nfunction getEndpointDescriptionByEndpoint(endpoint) {\n  return ACTIVE_API.getEndpointDescriptionByEndpoint(endpoint);\n}\n\nfunction getEndpointBodyCompleteComponents(endpoint) {\n  var desc = getEndpointDescriptionByEndpoint(endpoint);\n  if (!desc) {\n    throw new Error('failed to resolve endpoint [\\'' + endpoint + '\\']');\n  }\n  return desc.bodyAutocompleteRootComponents;\n}\n\nfunction getTopLevelUrlCompleteComponents(method) {\n  return ACTIVE_API.getTopLevelUrlCompleteComponents(method);\n}\n\nfunction getGlobalAutocompleteComponents(term, throwOnMissing) {\n  return ACTIVE_API.getGlobalAutocompleteComponents(term, throwOnMissing);\n}\n\nfunction loadApisFromJson(json, urlParametrizedComponentFactories, bodyParametrizedComponentFactories) {\n  urlParametrizedComponentFactories = urlParametrizedComponentFactories || parametrizedComponentFactories;\n  bodyParametrizedComponentFactories = bodyParametrizedComponentFactories || urlParametrizedComponentFactories;\n  var api = new _api2.default(urlParametrizedComponentFactories, bodyParametrizedComponentFactories);\n  var names = [];\n  _lodash2.default.each(json, function (apiJson, name) {\n    names.unshift(name);\n    _lodash2.default.each(apiJson.globals || {}, function (globalJson, globalName) {\n      api.addGlobalAutocompleteRules(globalName, globalJson);\n    });\n    _lodash2.default.each(apiJson.endpoints || {}, function (endpointJson, endpointName) {\n      api.addEndpointDescription(endpointName, endpointJson);\n    });\n  });\n  api.name = names.join(',');\n  return api;\n}\n\nfunction setActiveApi(api) {\n  if (_lodash2.default.isString(api)) {\n    _jquery2.default.ajax({\n      url: '../api/console/api_server?sense_version=' + encodeURIComponent('@@SENSE_VERSION') + '&apis=' + encodeURIComponent(api),\n      dataType: 'json' // disable automatic guessing\n    }).then(function (data) {\n      setActiveApi(loadApisFromJson(data));\n    }, function (jqXHR) {\n      console.log('failed to load API \\'' + api + '\\': ' + jqXHR.responseText);\n    });\n    return;\n  }\n\n  ACTIVE_API = api;\n}\n\nsetActiveApi('es_6_0');\n\nvar _test = exports._test = {\n  loadApisFromJson: loadApisFromJson\n};",null]}