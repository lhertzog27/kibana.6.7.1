{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/common/calculate_label.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/common/calculate_label.js","mtime":1567631711608},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = calculateLabel;\n\nvar _lodash = require('lodash');\n\nvar _agg_lookup = require('./agg_lookup');\n\nvar _agg_lookup2 = _interopRequireDefault(_agg_lookup);\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar paths = ['cumulative_sum', 'derivative', 'moving_average', 'avg_bucket', 'sum_bucket', 'min_bucket', 'max_bucket', 'std_deviation_bucket', 'variance_bucket', 'sum_of_squares_bucket', 'serial_diff', 'positive_only']; /*\n                                                                                                                                                                                                                             * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                             * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                             * this work for additional information regarding copyright\n                                                                                                                                                                                                                             * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                             * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                             * not use this file except in compliance with the License.\n                                                                                                                                                                                                                             * You may obtain a copy of the License at\n                                                                                                                                                                                                                             *\n                                                                                                                                                                                                                             *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                             *\n                                                                                                                                                                                                                             * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                             * software distributed under the License is distributed on an\n                                                                                                                                                                                                                             * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                             * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                             * specific language governing permissions and limitations\n                                                                                                                                                                                                                             * under the License.\n                                                                                                                                                                                                                             */\n\nfunction calculateLabel(metric, metrics) {\n  if (!metric) return _i18n.i18n.translate('tsvb.calculateLabel.unknownLabel', { defaultMessage: 'Unknown' });\n  if (metric.alias) return metric.alias;\n\n  if (metric.type === 'count') return _i18n.i18n.translate('tsvb.calculateLabel.countLabel', { defaultMessage: 'Count' });\n  if (metric.type === 'calculation') {\n    return _i18n.i18n.translate('tsvb.calculateLabel.bucketScriptsLabel', { defaultMessage: 'Bucket Script' });\n  }\n  if (metric.type === 'math') return _i18n.i18n.translate('tsvb.calculateLabel.mathLabel', { defaultMessage: 'Math' });\n  if (metric.type === 'series_agg') {\n    return _i18n.i18n.translate('tsvb.calculateLabel.seriesAggLabel', { defaultMessage: 'Series Agg ({metricFunction})', values: { metricFunction: metric.function } });\n  }\n  if (metric.type === 'filter_ratio') return _i18n.i18n.translate('tsvb.calculateLabel.filterRatioLabel', { defaultMessage: 'Filter Ratio' });\n  if (metric.type === 'static') {\n    return _i18n.i18n.translate('tsvb.calculateLabel.staticValueLabel', { defaultMessage: 'Static Value of {metricValue}', values: { metricValue: metric.value } });\n  }\n\n  if (metric.type === 'percentile_rank') {\n    return _i18n.i18n.translate('tsvb.calculateLabel.percentileRankLabel', {\n      defaultMessage: '{lookupMetricType} ({metricValue}) of {metricField}',\n      values: { lookupMetricType: _agg_lookup2.default[metric.type], metricValue: metric.value, metricField: metric.field }\n    });\n  }\n\n  if ((0, _lodash.includes)(paths, metric.type)) {\n    var targetMetric = metrics.find(function (m) {\n      return (0, _lodash.startsWith)(metric.field, m.id);\n    });\n    var targetLabel = calculateLabel(targetMetric, metrics);\n    // For percentiles we need to parse the field id to extract the percentile\n    // the user configured in the percentile aggregation and specified in the\n    // submetric they selected. This applies only to pipeline aggs.\n    if (targetMetric && targetMetric.type === 'percentile') {\n      var percentileValueMatch = /\\[([0-9\\.]+)\\]$/;\n      var matches = metric.field.match(percentileValueMatch);\n      if (matches) {\n        return _i18n.i18n.translate('tsvb.calculateLabel.lookupMetricTypeOfTargetWithAdditionalLabel', {\n          defaultMessage: '{lookupMetricType} of {targetLabel} ({additionalLabel})',\n          values: { lookupMetricType: _agg_lookup2.default[metric.type], targetLabel: targetLabel, additionalLabel: matches[1] }\n        });\n      }\n    }\n    return _i18n.i18n.translate('tsvb.calculateLabel.lookupMetricTypeOfTargetLabel', {\n      defaultMessage: '{lookupMetricType} of {targetLabel}',\n      values: { lookupMetricType: _agg_lookup2.default[metric.type], targetLabel: targetLabel }\n    });\n  }\n\n  return _i18n.i18n.translate('tsvb.calculateLabel.lookupMetricTypeOfMetricFieldRankLabel', {\n    defaultMessage: '{lookupMetricType} of {metricField}',\n    values: { lookupMetricType: _agg_lookup2.default[metric.type], metricField: metric.field }\n  });\n}\nmodule.exports = exports['default'];",null]}