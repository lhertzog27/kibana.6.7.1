{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/edit_index_pattern/create_edit_field/create_edit_field.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/edit_index_pattern/create_edit_field/create_edit_field.js","mtime":1567631711572},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                   * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                   * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                   * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                   * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                   * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                   * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                   * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                   * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                   * under the License.\n                                                                                                                                                                                                                                                                   */\n\nvar _field = require('ui/index_patterns/_field');\n\nvar _field_format_editors = require('ui/registry/field_format_editors');\n\nvar _url = require('ui/url');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _notify = require('ui/notify');\n\nvar _create_edit_field = require('./create_edit_field.html');\n\nvar _create_edit_field2 = _interopRequireDefault(_create_edit_field);\n\nvar _breadcrumbs = require('../../breadcrumbs');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _field_editor = require('ui/field_editor');\n\nvar _i18n = require('ui/i18n');\n\nvar _i18n2 = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar REACT_FIELD_EDITOR_ID = 'reactFieldEditor';\nvar renderFieldEditor = function renderFieldEditor($scope, indexPattern, field, _ref) {\n  var Field = _ref.Field,\n      getConfig = _ref.getConfig,\n      $http = _ref.$http,\n      fieldFormatEditors = _ref.fieldFormatEditors,\n      redirectAway = _ref.redirectAway;\n\n  $scope.$$postDigest(function () {\n    var node = document.getElementById(REACT_FIELD_EDITOR_ID);\n    if (!node) {\n      return;\n    }\n\n    (0, _reactDom.render)(_react2.default.createElement(\n      _i18n.I18nContext,\n      null,\n      _react2.default.createElement(_field_editor.FieldEditor, {\n        indexPattern: indexPattern,\n        field: field,\n        helpers: {\n          Field: Field,\n          getConfig: getConfig,\n          $http: $http,\n          fieldFormatEditors: fieldFormatEditors,\n          redirectAway: redirectAway\n        }\n      })\n    ), node);\n  });\n};\n\nvar destroyFieldEditor = function destroyFieldEditor() {\n  var node = document.getElementById(REACT_FIELD_EDITOR_ID);\n  node && (0, _reactDom.unmountComponentAtNode)(node);\n};\n\n_routes2.default.when('/management/kibana/indices/:indexPatternId/field/:fieldName*', {\n  mode: 'edit',\n  k7Breadcrumbs: _breadcrumbs.getEditFieldBreadcrumbs\n}).when('/management/kibana/indices/:indexPatternId/create-field/', {\n  mode: 'create',\n  k7Breadcrumbs: _breadcrumbs.getCreateFieldBreadcrumbs\n}).defaults(/management\\/kibana\\/indices\\/[^\\/]+\\/(field|create-field)(\\/|$)/, {\n  template: _create_edit_field2.default,\n  mapBreadcrumbs: function mapBreadcrumbs($route, breadcrumbs) {\n    var indexPattern = $route.current.locals.indexPattern;\n\n    return breadcrumbs.map(function (crumb) {\n      if (crumb.id !== indexPattern.id) {\n        return crumb;\n      }\n\n      return _extends({}, crumb, {\n        display: indexPattern.title\n      });\n    });\n  },\n\n  resolve: {\n    indexPattern: function indexPattern($route, redirectWhenMissing, indexPatterns) {\n      return indexPatterns.get($route.current.params.indexPatternId).catch(redirectWhenMissing('/management/kibana/indices'));\n    }\n  },\n  controllerAs: 'fieldSettings',\n  controller: function FieldEditorPageController($scope, $route, $timeout, $http, Private, docTitle, config) {\n    var _this = this;\n\n    var getConfig = function getConfig() {\n      return config.get.apply(config, arguments);\n    };\n    var fieldFormatEditors = Private(_field_format_editors.RegistryFieldFormatEditorsProvider);\n    var kbnUrl = Private(_url.KbnUrlProvider);\n\n    this.mode = $route.current.mode;\n    this.indexPattern = $route.current.locals.indexPattern;\n\n    if (this.mode === 'edit') {\n      var _fieldName = $route.current.params.fieldName;\n      this.field = this.indexPattern.fields.byName[_fieldName];\n\n      if (!this.field) {\n        var message = _i18n2.i18n.translate('kbn.management.editIndexPattern.scripted.noFieldLabel', {\n          defaultMessage: '\\'{indexPatternTitle}\\' index pattern doesn\\'t have a scripted field called \\'{fieldName}\\'',\n          values: { indexPatternTitle: this.indexPattern.title, fieldName: _fieldName }\n        });\n        _notify.toastNotifications.add(message);\n\n        kbnUrl.redirectToRoute(this.indexPattern, 'edit');\n        return;\n      }\n    } else if (this.mode === 'create') {\n      this.field = new _field.Field(this.indexPattern, {\n        scripted: true,\n        type: 'number'\n      });\n    } else {\n      var errorMessage = _i18n2.i18n.translate('kbn.management.editIndexPattern.scripted.unknownModeErrorMessage', {\n        defaultMessage: 'unknown fieldSettings mode {mode}',\n        values: { mode: this.mode }\n      });\n      throw new Error(errorMessage);\n    }\n\n    var fieldName = this.field.name || _i18n2.i18n.translate('kbn.management.editIndexPattern.scripted.newFieldPlaceholder', { defaultMessage: 'New Scripted Field' });\n    docTitle.change([fieldName, this.indexPattern.title]);\n\n    renderFieldEditor($scope, this.indexPattern, this.field, {\n      Field: _field.Field,\n      getConfig: getConfig,\n      $http: $http,\n      fieldFormatEditors: fieldFormatEditors,\n      redirectAway: function redirectAway() {\n        $timeout(function () {\n          kbnUrl.changeToRoute(_this.indexPattern, _this.field.scripted ? 'scriptedFields' : 'indexedFields');\n        });\n      }\n    });\n\n    $scope.$on('$destroy', function () {\n      destroyFieldEditor();\n    });\n  }\n});",null]}