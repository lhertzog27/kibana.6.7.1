{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/vis_options.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/vis_options.js","mtime":1567631711771},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _modules = require('../../../modules');\n\nvar _vis_options = require('./vis_options.html');\n\nvar _vis_options2 = _interopRequireDefault(_vis_options);\n\nvar _i18n = require('ui/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This directive sort of \"transcludes\" in whatever template you pass in via the `editor` attribute.\n * This lets you specify a full-screen UI for editing a vis type, instead of using the regular\n * sidebar.\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n_modules.uiModules.get('app/visualize').directive('visEditorVisOptions', function (Private, $compile) {\n  return {\n    restrict: 'E',\n    template: _vis_options2.default,\n    scope: {\n      vis: '=',\n      visData: '=',\n      uiState: '=',\n      editor: '=',\n      visualizeEditor: '=',\n      editorState: '='\n    },\n    link: function link($scope, $el) {\n      var $optionContainer = $el.find('[data-visualization-options]');\n\n      var reactOptionsComponent = typeof $scope.editor !== 'string';\n      var stageEditorParams = function stageEditorParams(params) {\n        $scope.editorState.params = _lodash2.default.cloneDeep(params);\n        $scope.$apply();\n      };\n      var renderReactComponent = function renderReactComponent() {\n        var Component = $scope.editor;\n        (0, _reactDom.render)(_react2.default.createElement(\n          _i18n.I18nContext,\n          null,\n          _react2.default.createElement(Component, { scope: $scope, editorState: $scope.editorState, stageEditorParams: stageEditorParams })\n        ), $el[0]);\n      };\n      // Bind the `editor` template with the scope.\n      if (reactOptionsComponent) {\n        renderReactComponent();\n      } else {\n        var $editor = $compile($scope.editor)($scope);\n        $optionContainer.append($editor);\n      }\n\n      $scope.$watchGroup(['visData', 'visualizeEditor', 'editorState.params'], function () {\n        if (reactOptionsComponent) {\n          renderReactComponent();\n        }\n      });\n\n      $scope.$watch('vis.type.schemas.all.length', function (len) {\n        $scope.alwaysShowOptions = len === 0;\n      });\n\n      $el.on('$destroy', function () {\n        if (reactOptionsComponent) {\n          (0, _reactDom.unmountComponentAtNode)($el[0]);\n        }\n      });\n    }\n  };\n});",null]}