{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/autocomplete/components/list_component.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/autocomplete/components/list_component.js","mtime":1567631691125},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListComponent = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _shared_component = require('./shared_component');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/** A component that suggests one of the give options, but accepts anything */\nvar ListComponent = exports.ListComponent = function (_SharedComponent) {\n  _inherits(ListComponent, _SharedComponent);\n\n  function ListComponent(name, list, parent, multiValued, allowNonValidValues) {\n    _classCallCheck(this, ListComponent);\n\n    var _this = _possibleConstructorReturn(this, (ListComponent.__proto__ || Object.getPrototypeOf(ListComponent)).call(this, name, parent));\n\n    _this.listGenerator = Array.isArray(list) ? function () {\n      return list;\n    } : list;\n    _this.multiValued = _lodash2.default.isUndefined(multiValued) ? true : multiValued;\n    _this.allowNonValidValues = _lodash2.default.isUndefined(allowNonValidValues) ? false : allowNonValidValues;\n    return _this;\n  }\n\n  _createClass(ListComponent, [{\n    key: 'getTerms',\n    value: function getTerms(context, editor) {\n      if (!this.multiValued && context.otherTokenValues) {\n        // already have a value -> no suggestions\n        return [];\n      }\n      var alreadySet = context.otherTokenValues || [];\n      if (_lodash2.default.isString(alreadySet)) {\n        alreadySet = [alreadySet];\n      }\n      var ret = _lodash2.default.difference(this.listGenerator(context, editor), alreadySet);\n\n      if (this.getDefaultTermMeta()) {\n        var meta = this.getDefaultTermMeta();\n        ret = _lodash2.default.map(ret, function (term) {\n          if (_lodash2.default.isString(term)) {\n            term = { 'name': term };\n          }\n          return _lodash2.default.defaults(term, { meta: meta });\n        });\n      }\n\n      return ret;\n    }\n  }, {\n    key: 'validateTokens',\n    value: function validateTokens(tokens) {\n      if (!this.multiValued && tokens.length > 1) {\n        return false;\n      }\n\n      // verify we have all tokens\n      var list = this.listGenerator();\n      var notFound = _lodash2.default.any(tokens, function (token) {\n        return list.indexOf(token) === -1;\n      });\n\n      if (notFound) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: 'getContextKey',\n    value: function getContextKey() {\n      return this.name;\n    }\n  }, {\n    key: 'getDefaultTermMeta',\n    value: function getDefaultTermMeta() {\n      return this.name;\n    }\n  }, {\n    key: 'match',\n    value: function match(token, context, editor) {\n      if (!Array.isArray(token)) {\n        token = [token];\n      }\n      if (!this.allowNonValidValues && !this.validateTokens(token, context, editor)) {\n        return null;\n      }\n\n      var result = _get(ListComponent.prototype.__proto__ || Object.getPrototypeOf(ListComponent.prototype), 'match', this).call(this, token, context, editor);\n      result.context_values = result.context_values || {};\n      result.context_values[this.getContextKey()] = token;\n      return result;\n    }\n  }]);\n\n  return ListComponent;\n}(_shared_component.SharedComponent);",null]}