{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/index.js","mtime":1567631711572},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _saved_objects = require('ui/saved_objects');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _angular_template = require('./angular_template.html');\n\nvar _angular_template2 = _interopRequireDefault(_angular_template);\n\nrequire('ui/index_patterns');\n\nvar _index_pattern_creation = require('ui/management/index_pattern_creation');\n\nvar _breadcrumbs = require('../breadcrumbs');\n\nvar _render = require('./render');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_routes2.default.when('/management/kibana/index', {\n  template: _angular_template2.default,\n  k7Breadcrumbs: _breadcrumbs.getCreateBreadcrumbs,\n  controller: function controller($scope, $injector) {\n    // Wait for the directives to execute\n    var kbnUrl = $injector.get('kbnUrl');\n    var Private = $injector.get('Private');\n    $scope.$$postDigest(function () {\n      var $routeParams = $injector.get('$routeParams');\n      var indexPatternCreationProvider = Private(_index_pattern_creation.IndexPatternCreationFactory)($routeParams.type);\n      var indexPatternCreationType = indexPatternCreationProvider.getType();\n      var services = {\n        config: $injector.get('config'),\n        es: $injector.get('es'),\n        indexPatterns: $injector.get('indexPatterns'),\n        $http: $injector.get('$http'),\n        savedObjectsClient: Private(_saved_objects.SavedObjectsClientProvider),\n        indexPatternCreationType: indexPatternCreationType,\n        changeUrl: function changeUrl(url) {\n          $scope.$evalAsync(function () {\n            return kbnUrl.changePath(url);\n          });\n        }\n      };\n\n      var initialQuery = $routeParams.id ? decodeURIComponent($routeParams.id) : undefined;\n\n      (0, _render.renderCreateIndexPatternWizard)(initialQuery, services);\n    });\n\n    $scope.$on('$destroy', _render.destroyCreateIndexPatternWizard);\n  }\n}); /*\n     * Licensed to Elasticsearch B.V. under one or more contributor\n     * license agreements. See the NOTICE file distributed with\n     * this work for additional information regarding copyright\n     * ownership. Elasticsearch B.V. licenses this file to you under\n     * the Apache License, Version 2.0 (the \"License\"); you may\n     * not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *    http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing,\n     * software distributed under the License is distributed on an\n     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     * KIND, either express or implied.  See the License for the\n     * specific language governing permissions and limitations\n     * under the License.\n     */",null]}