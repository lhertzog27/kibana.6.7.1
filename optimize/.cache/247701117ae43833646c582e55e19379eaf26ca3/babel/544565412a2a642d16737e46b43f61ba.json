{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/common/field_formats/types/string.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/common/field_formats/types/string.js","mtime":1567631691160},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.createStringFormat = createStringFormat;\n\nvar _as_pretty_string = require('../../utils/as_pretty_string');\n\nvar _shorten_dotted_string = require('../../utils/shorten_dotted_string');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar TRANSFORM_OPTIONS = [{ kind: false, text: '- None -' }, { kind: 'lower', text: 'Lower Case' }, { kind: 'upper', text: 'Upper Case' }, { kind: 'title', text: 'Title Case' }, { kind: 'short', text: 'Short Dots' }, { kind: 'base64', text: 'Base64 Decode' }];\nvar DEFAULT_TRANSFORM_OPTION = false;\n\nfunction createStringFormat(FieldFormat) {\n  var _class, _temp;\n\n  return _temp = _class = function (_FieldFormat) {\n    _inherits(StringFormat, _FieldFormat);\n\n    function StringFormat() {\n      _classCallCheck(this, StringFormat);\n\n      return _possibleConstructorReturn(this, (StringFormat.__proto__ || Object.getPrototypeOf(StringFormat)).apply(this, arguments));\n    }\n\n    _createClass(StringFormat, [{\n      key: 'getParamDefaults',\n      value: function getParamDefaults() {\n        return {\n          transform: DEFAULT_TRANSFORM_OPTION\n        };\n      }\n    }, {\n      key: '_base64Decode',\n      value: function _base64Decode(val) {\n        try {\n          return Buffer.from(val, 'base64').toString('utf8');\n        } catch (e) {\n          return (0, _as_pretty_string.asPrettyString)(val);\n        }\n      }\n    }, {\n      key: '_toTitleCase',\n      value: function _toTitleCase(val) {\n        return val.replace(/\\w\\S*/g, function (txt) {\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n      }\n    }, {\n      key: '_convert',\n      value: function _convert(val) {\n        switch (this.param('transform')) {\n          case 'lower':\n            return String(val).toLowerCase();\n          case 'upper':\n            return String(val).toUpperCase();\n          case 'title':\n            return this._toTitleCase(val);\n          case 'short':\n            return (0, _shorten_dotted_string.shortenDottedString)(val);\n          case 'base64':\n            return this._base64Decode(val);\n          default:\n            return (0, _as_pretty_string.asPrettyString)(val);\n        }\n      }\n    }]);\n\n    return StringFormat;\n  }(FieldFormat), _class.id = 'string', _class.title = 'String', _class.fieldType = ['number', 'boolean', 'date', 'ip', 'attachment', 'geo_point', 'geo_shape', 'string', 'murmur3', 'unknown', 'conflict'], _class.transformOptions = TRANSFORM_OPTIONS, _temp;\n}",null]}