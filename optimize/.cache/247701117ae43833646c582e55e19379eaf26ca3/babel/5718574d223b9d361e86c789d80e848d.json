{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/grid/dashboard_grid.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/grid/dashboard_grid.js","mtime":1567631711558},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DashboardGrid = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _reactGridLayout = require('react-grid-layout');\n\nvar _reactGridLayout2 = _interopRequireDefault(_reactGridLayout);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nrequire('react-grid-layout/css/styles.css');\n\nrequire('react-resizable/css/styles.css');\n\nvar _panel_utils = require('../panel/panel_utils');\n\nvar _dashboard_view_mode = require('../dashboard_view_mode');\n\nvar _panel = require('../panel');\n\nvar _notify = require('ui/notify');\n\nvar _dashboard_constants = require('../dashboard_constants');\n\nvar _reactSizeme = require('react-sizeme');\n\nvar _reactSizeme2 = _interopRequireDefault(_reactSizeme);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar config = { monitorWidth: true };\nvar lastValidGridSize = 0;\n\n/**\n * This is a fix for a bug that stopped the browser window from automatically scrolling down when panels were made\n * taller than the current grid.\n * see https://github.com/elastic/kibana/issues/14710.\n */\nfunction ensureWindowScrollsToBottom(layout, oldResizeItem, l, placeholder, event) {\n  // The buffer is to handle the case where the browser is maximized and it's impossible for the mouse to move below\n  // the screen, out of the window.  see https://github.com/elastic/kibana/issues/14737\n  var WINDOW_BUFFER = 10;\n  if (event.clientY > window.innerHeight - WINDOW_BUFFER) {\n    window.scrollTo(0, event.pageY + WINDOW_BUFFER - window.innerHeight);\n  }\n}\n\nfunction ResponsiveGrid(_ref) {\n  var size = _ref.size,\n      isViewMode = _ref.isViewMode,\n      layout = _ref.layout,\n      onLayoutChange = _ref.onLayoutChange,\n      children = _ref.children,\n      maximizedPanelId = _ref.maximizedPanelId,\n      useMargins = _ref.useMargins;\n\n  // This is to prevent a bug where view mode changes when the panel is expanded.  View mode changes will trigger\n  // the grid to re-render, but when a panel is expanded, the size will be 0. Minimizing the panel won't cause the\n  // grid to re-render so it'll show a grid with a width of 0.\n  lastValidGridSize = size.width > 0 ? size.width : lastValidGridSize;\n  var classes = (0, _classnames2.default)({\n    'dshLayout--viewing': isViewMode,\n    'dshLayout--editing': !isViewMode,\n    'dshLayout-isMaximizedPanel': maximizedPanelId !== undefined,\n    'dshLayout-withoutMargins': !useMargins\n  });\n\n  var MARGINS = useMargins ? 8 : 0;\n  // We can't take advantage of isDraggable or isResizable due to performance concerns:\n  // https://github.com/STRML/react-grid-layout/issues/240\n  return _react2.default.createElement(\n    _reactGridLayout2.default,\n    {\n      width: lastValidGridSize,\n      className: classes,\n      isDraggable: true,\n      isResizable: true\n      // There is a bug with d3 + firefox + elements using transforms.\n      // See https://github.com/elastic/kibana/issues/16870 for more context.\n      , useCSSTransforms: false,\n      margin: [MARGINS, MARGINS],\n      cols: _dashboard_constants.DASHBOARD_GRID_COLUMN_COUNT,\n      rowHeight: _dashboard_constants.DASHBOARD_GRID_HEIGHT\n      // Pass the named classes of what should get the dragging handle\n      // (.doesnt-exist literally doesnt exist)\n      , draggableHandle: isViewMode ? '.doesnt-exist' : '.dshPanel__title',\n      layout: layout,\n      onLayoutChange: onLayoutChange,\n      measureBeforeMount: false,\n      onResize: ensureWindowScrollsToBottom\n    },\n    children\n  );\n}\n\n// Using sizeMe sets up the grid to be re-rendered automatically not only when the window size changes, but also\n// when the container size changes, so it works for Full Screen mode switches.\nvar ResponsiveSizedGrid = (0, _reactSizeme2.default)(config)(ResponsiveGrid);\n\nvar DashboardGridUi = function (_React$Component) {\n  _inherits(DashboardGridUi, _React$Component);\n\n  function DashboardGridUi(props) {\n    _classCallCheck(this, DashboardGridUi);\n\n    // A mapping of panelIndexes to grid items so we can set the zIndex appropriately on the last focused\n    // item.\n    var _this = _possibleConstructorReturn(this, (DashboardGridUi.__proto__ || Object.getPrototypeOf(DashboardGridUi)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.gridItems = {};\n\n    var isLayoutInvalid = false;\n    var layout = void 0;\n    try {\n      layout = _this.buildLayoutFromPanels();\n    } catch (error) {\n      isLayoutInvalid = true;\n      _notify.toastNotifications.addDanger({\n        title: props.intl.formatMessage({\n          id: 'kbn.dashboard.dashboardGrid.unableToLoadDashboardDangerMessage',\n          defaultMessage: 'Unable to load dashboard.'\n        }),\n        text: error.message\n      });\n      window.location = '#' + _dashboard_constants.DashboardConstants.LANDING_PAGE_PATH;\n    }\n    _this.state = {\n      focusedPanelIndex: undefined,\n      layout: layout,\n      isLayoutInvalid: isLayoutInvalid\n    };\n\n    // A mapping of panel type to embeddable handlers. Because this function reaches out of react and into angular,\n    // if done in the render method, it appears to be triggering a scope.apply, which appears to be trigging a setState\n    // call inside TSVB visualizations.  Moving the function out of render appears to fix the issue.  See\n    // https://github.com/elastic/kibana/issues/14802 for more info.\n    // This is probably a better implementation anyway so the handlers are cached.\n    // @type {Object.<string, EmbeddableFactory>}\n    _this.embeddableFactoryMap = {};\n    return _this;\n  }\n\n  _createClass(DashboardGridUi, [{\n    key: 'buildLayoutFromPanels',\n    value: function buildLayoutFromPanels() {\n      var _this2 = this;\n\n      return _lodash2.default.map(this.props.panels, function (panel) {\n        // panel version numbers added in 6.1. Any panel without version number is assumed to be 6.0.0\n        var panelVersion = panel.version ? _panel_utils.PanelUtils.parseVersion(panel.version) : _panel_utils.PanelUtils.parseVersion('6.0.0');\n\n        if (panelVersion.major < 6 || panelVersion.major === 6 && panelVersion.minor < 1) {\n          _panel_utils.PanelUtils.convertPanelDataPre_6_1(panel);\n        }\n\n        if (panelVersion.major < 6 || panelVersion.major === 6 && panelVersion.minor < 3) {\n          _panel_utils.PanelUtils.convertPanelDataPre_6_3(panel, _this2.props.useMargins);\n        }\n\n        return panel.gridData;\n      });\n    }\n  }, {\n    key: 'createEmbeddableFactoriesMap',\n    value: function createEmbeddableFactoriesMap(panels) {\n      var _this3 = this;\n\n      Object.values(panels).map(function (panel) {\n        if (!_this3.embeddableFactoryMap[panel.type]) {\n          _this3.embeddableFactoryMap[panel.type] = _this3.props.getEmbeddableFactory(panel.type);\n        }\n      });\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.createEmbeddableFactoriesMap(this.props.panels);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.createEmbeddableFactoriesMap(nextProps.panels);\n    }\n  }, {\n    key: 'renderDOM',\n    value: function renderDOM() {\n      var _this4 = this;\n\n      var _props = this.props,\n          panels = _props.panels,\n          maximizedPanelId = _props.maximizedPanelId;\n      var focusedPanelIndex = this.state.focusedPanelIndex;\n\n      // Part of our unofficial API - need to render in a consistent order for plugins.\n\n      var panelsInOrder = Object.keys(panels).map(function (key) {\n        return panels[key];\n      });\n      panelsInOrder.sort(function (panelA, panelB) {\n        if (panelA.gridData.y === panelB.gridData.y) {\n          return panelA.gridData.x - panelB.gridData.x;\n        } else {\n          return panelA.gridData.y - panelB.gridData.y;\n        }\n      });\n\n      return _lodash2.default.map(panelsInOrder, function (panel) {\n        var expandPanel = maximizedPanelId !== undefined && maximizedPanelId === panel.panelIndex;\n        var hidePanel = maximizedPanelId !== undefined && maximizedPanelId !== panel.panelIndex;\n        var classes = (0, _classnames2.default)({\n          'dshDashboardGrid__item--expanded': expandPanel,\n          'dshDashboardGrid__item--hidden': hidePanel\n        });\n        return _react2.default.createElement(\n          'div',\n          {\n            style: { zIndex: focusedPanelIndex === panel.panelIndex ? '2' : 'auto' },\n            className: classes,\n            key: panel.panelIndex,\n            ref: function ref(reactGridItem) {\n              _this4.gridItems[panel.panelIndex] = reactGridItem;\n            }\n          },\n          _react2.default.createElement(_panel.DashboardPanel, {\n            panelId: panel.panelIndex,\n            embeddableFactory: _this4.embeddableFactoryMap[panel.type],\n            onPanelFocused: _this4.onPanelFocused,\n            onPanelBlurred: _this4.onPanelBlurred\n          })\n        );\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (this.state.isLayoutInvalid) {\n        return null;\n      }\n\n      var _props2 = this.props,\n          dashboardViewMode = _props2.dashboardViewMode,\n          maximizedPanelId = _props2.maximizedPanelId,\n          useMargins = _props2.useMargins;\n\n      var isViewMode = dashboardViewMode === _dashboard_view_mode.DashboardViewMode.VIEW;\n      return _react2.default.createElement(\n        ResponsiveSizedGrid,\n        {\n          isViewMode: isViewMode,\n          layout: this.buildLayoutFromPanels(),\n          onLayoutChange: this.onLayoutChange,\n          maximizedPanelId: maximizedPanelId,\n          useMargins: useMargins\n        },\n        this.renderDOM()\n      );\n    }\n  }]);\n\n  return DashboardGridUi;\n}(_react2.default.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this5 = this;\n\n  this.onLayoutChange = function (layout) {\n    var _props3 = _this5.props,\n        onPanelsUpdated = _props3.onPanelsUpdated,\n        panels = _props3.panels;\n\n    var updatedPanels = layout.reduce(function (updatedPanelsAcc, panelLayout) {\n      updatedPanelsAcc[panelLayout.i] = _extends({}, panels[panelLayout.i], {\n        panelIndex: panelLayout.i,\n        gridData: _lodash2.default.pick(panelLayout, ['x', 'y', 'w', 'h', 'i'])\n      });\n      return updatedPanelsAcc;\n    }, []);\n    onPanelsUpdated(updatedPanels);\n  };\n\n  this.onPanelFocused = function (focusedPanelIndex) {\n    _this5.setState({ focusedPanelIndex: focusedPanelIndex });\n  };\n\n  this.onPanelBlurred = function (blurredPanelIndex) {\n    if (_this5.state.focusedPanelIndex === blurredPanelIndex) {\n      _this5.setState({ focusedPanelIndex: undefined });\n    }\n  };\n};\n\nDashboardGridUi.propTypes = {\n  panels: _propTypes2.default.object.isRequired,\n  getEmbeddableFactory: _propTypes2.default.func.isRequired,\n  dashboardViewMode: _propTypes2.default.oneOf([_dashboard_view_mode.DashboardViewMode.EDIT, _dashboard_view_mode.DashboardViewMode.VIEW]).isRequired,\n  onPanelsUpdated: _propTypes2.default.func.isRequired,\n  maximizedPanelId: _propTypes2.default.string,\n  useMargins: _propTypes2.default.bool.isRequired\n};\n\nvar DashboardGrid = exports.DashboardGrid = (0, _react3.injectI18n)(DashboardGridUi);",null]}