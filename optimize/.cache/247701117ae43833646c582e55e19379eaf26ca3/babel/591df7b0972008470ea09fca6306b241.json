{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/chrome/directives/global_nav/global_nav.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/directives/global_nav/global_nav.js","mtime":1567631711710},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nrequire('./app_switcher');\n\nrequire('./global_nav_link');\n\nrequire('ui/i18n');\n\nvar _global_nav = require('./global_nav.html');\n\nvar _global_nav2 = _interopRequireDefault(_global_nav);\n\nrequire('./global_nav.less');\n\nvar _modules = require('../../../modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _module = _modules.uiModules.get('kibana');\n\n_module.directive('globalNav', function (globalNavState, chrome, i18n) {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      chrome: '=',\n      isVisible: '=',\n      logoBrand: '=',\n      smallLogoBrand: '=',\n      appTitle: '='\n    },\n    template: _global_nav2.default,\n    link: function link(scope) {\n      // App switcher functionality.\n      function updateGlobalNav() {\n        var isOpen = globalNavState.isOpen();\n        scope.isGlobalNavOpen = isOpen;\n        scope.globalNavToggleButton = {\n          classes: isOpen ? 'kbnGlobalNavLink--close' : undefined,\n          title: isOpen ? i18n('common.ui.chrome.globalNav.navToggleButtonCollapseTitle', {\n            defaultMessage: 'Collapse'\n          }) : i18n('common.ui.chrome.globalNav.navToggleButtonExpandTitle', {\n            defaultMessage: 'Expand'\n          }),\n          tooltipContent: isOpen ? i18n('common.ui.chrome.globalNav.navToggleButtonCollapseTooltip', {\n            defaultMessage: 'Collapse side bar'\n          }) : i18n('common.ui.chrome.globalNav.navToggleButtonExpandTooltip', {\n            defaultMessage: 'Expand side bar'\n          })\n        };\n\n        // Notify visualizations, e.g. the dashboard, that they should re-render.\n        scope.$root.$broadcast('globalNav:update');\n      }\n\n      updateGlobalNav();\n\n      scope.$root.$on('globalNavState:change', function () {\n        updateGlobalNav();\n      });\n\n      scope.getHref = function (path) {\n        return chrome.addBasePath(path);\n      };\n\n      scope.toggleGlobalNav = function (event) {\n        event.preventDefault();\n        globalNavState.setOpen(!globalNavState.isOpen());\n      };\n\n      scope.isHomeActive = function () {\n        return window.location.hash.indexOf('#/home') === 0;\n      };\n    }\n  };\n});",null]}