{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/directives/input_datetime.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/directives/input_datetime.js","mtime":1567631711717},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _modules = require('../modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _module = _modules.uiModules.get('kibana');\n\n_module.directive('inputDatetime', function () {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    link: function link($scope, $elem, attrs, ngModel) {\n\n      var format = 'YYYY-MM-DD HH:mm:ss.SSS';\n\n      $elem.after('<div class=\"input-datetime-format\">' + format + '</div>');\n\n      // What should I make with the input from the user?\n      var fromUser = function fromUser(text) {\n        var parsed = (0, _moment2.default)(text, format);\n        return parsed.isValid() ? parsed : undefined;\n      };\n\n      // How should I present the data back to the user in the input field?\n      var toUser = function toUser(datetime) {\n        return (0, _moment2.default)(datetime).format(format);\n      };\n\n      ngModel.$parsers.push(fromUser);\n      ngModel.$formatters.push(toUser);\n    }\n  };\n});",null]}