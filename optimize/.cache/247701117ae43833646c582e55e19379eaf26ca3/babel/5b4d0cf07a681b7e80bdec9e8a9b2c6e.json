{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/std_deviation.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/std_deviation.js","mtime":1567631711700},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stdDeviationMetricAgg = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _metric_agg_type = require('./metric_agg_type');\n\nvar _get_response_agg_config_class = require('./get_response_agg_config_class');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar responseAggConfigProps = {\n  valProp: function valProp() {\n    var details = this.keyedDetails(this.params.customLabel)[this.key];\n    return details.valProp;\n  },\n  makeLabel: function makeLabel() {\n    var fieldDisplayName = this.getFieldDisplayName();\n    var details = this.keyedDetails(this.params.customLabel, fieldDisplayName);\n    return _lodash2.default.get(details, [this.key, 'title']);\n  },\n  keyedDetails: function keyedDetails(customLabel, fieldDisplayName) {\n    var label = customLabel ? customLabel : _i18n.i18n.translate('common.ui.aggTypes.metrics.standardDeviation.keyDetailsLabel', {\n      defaultMessage: 'Standard Deviation of {fieldDisplayName}',\n      values: { fieldDisplayName: fieldDisplayName }\n    });\n    return {\n      std_lower: {\n        valProp: ['std_deviation_bounds', 'lower'],\n        title: _i18n.i18n.translate('common.ui.aggTypes.metrics.standardDeviation.lowerKeyDetailsTitle', {\n          defaultMessage: 'Lower {label}',\n          values: { label: label }\n        })\n      },\n      std_upper: {\n        valProp: ['std_deviation_bounds', 'upper'],\n        title: _i18n.i18n.translate('common.ui.aggTypes.metrics.standardDeviation.upperKeyDetailsTitle', {\n          defaultMessage: 'Upper {label}',\n          values: { label: label }\n        })\n      }\n    };\n  }\n};\n\nvar stdDeviationMetricAgg = exports.stdDeviationMetricAgg = new _metric_agg_type.MetricAggType({\n  name: 'std_dev',\n  dslName: 'extended_stats',\n  title: _i18n.i18n.translate('common.ui.aggTypes.metrics.standardDeviationTitle', {\n    defaultMessage: 'Standard Deviation'\n  }),\n  makeLabel: function makeLabel(agg) {\n    return _i18n.i18n.translate('common.ui.aggTypes.metrics.standardDeviationLabel', {\n      defaultMessage: 'Standard Deviation of {field}',\n      values: { field: agg.getFieldDisplayName() }\n    });\n  },\n  params: [{\n    name: 'field',\n    type: 'field',\n    filterFieldTypes: 'number'\n  }],\n\n  getResponseAggs: function getResponseAggs(agg) {\n    var ValueAggConfig = (0, _get_response_agg_config_class.getResponseAggConfigClass)(agg, responseAggConfigProps);\n\n    return [new ValueAggConfig('std_lower'), new ValueAggConfig('std_upper')];\n  },\n\n  getValue: function getValue(agg, bucket) {\n    return _lodash2.default.get(bucket[agg.parentId], agg.valProp());\n  }\n});",null]}