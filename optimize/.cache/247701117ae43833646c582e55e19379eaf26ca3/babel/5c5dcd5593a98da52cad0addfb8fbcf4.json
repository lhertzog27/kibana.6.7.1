{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/angular.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/angular.js","mtime":1567631711708},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initAngularApi = initAngularApi;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _url = require('ui/url');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _modules = require('../../modules');\n\nvar _notify = require('../../notify');\n\nvar _error_url_overflow = require('../../error_url_overflow');\n\nvar _directives = require('../directives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar URL_LIMIT_WARN_WITHIN = 1000; /*\n                                   * Licensed to Elasticsearch B.V. under one or more contributor\n                                   * license agreements. See the NOTICE file distributed with\n                                   * this work for additional information regarding copyright\n                                   * ownership. Elasticsearch B.V. licenses this file to you under\n                                   * the Apache License, Version 2.0 (the \"License\"); you may\n                                   * not use this file except in compliance with the License.\n                                   * You may obtain a copy of the License at\n                                   *\n                                   *    http://www.apache.org/licenses/LICENSE-2.0\n                                   *\n                                   * Unless required by applicable law or agreed to in writing,\n                                   * software distributed under the License is distributed on an\n                                   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                   * KIND, either express or implied.  See the License for the\n                                   * specific language governing permissions and limitations\n                                   * under the License.\n                                   */\n\nfunction initAngularApi(chrome, internals) {\n  chrome.getFirstPathSegment = _lodash2.default.noop;\n\n  chrome.setupAngular = function () {\n    var kibana = _modules.uiModules.get('kibana');\n\n    _lodash2.default.forOwn(chrome.getInjected(), function (val, name) {\n      kibana.value(name, val);\n    });\n\n    kibana.value('kbnVersion', internals.version).value('buildNum', internals.buildNum).value('buildSha', internals.buildSha).value('serverName', internals.serverName).value('sessionId', Date.now()).value('chrome', chrome).value('esUrl', function () {\n      var a = document.createElement('a');\n      a.href = chrome.addBasePath('/elasticsearch');\n      return a.href;\n    }()).config(function ($locationProvider) {\n      $locationProvider.html5Mode({\n        enabled: false,\n        requireBase: false,\n        rewriteLinks: false\n      });\n    }).config(chrome.$setupXsrfRequestInterceptor).config(function ($compileProvider, $locationProvider) {\n      if (!internals.devMode) {\n        $compileProvider.debugInfoEnabled(false);\n      }\n\n      $locationProvider.hashPrefix('');\n    }).run(internals.capture$httpLoadingCount).run(internals.$setupBreadcrumbsAutoClear).run(function ($location, $rootScope, Private, config) {\n      chrome.getFirstPathSegment = function () {\n        return $location.path().split('/')[1];\n      };\n\n      var urlOverflow = Private(_error_url_overflow.UrlOverflowServiceProvider);\n      var check = function check() {\n        // disable long url checks when storing state in session storage\n        if (config.get('state:storeInSessionStorage')) {\n          return;\n        }\n\n        if ($location.path() === '/error/url-overflow') {\n          return;\n        }\n\n        try {\n          if (urlOverflow.check($location.absUrl()) <= URL_LIMIT_WARN_WITHIN) {\n            _notify.toastNotifications.addWarning({\n              title: _i18n.i18n.translate('common.ui.chrome.bigUrlWarningNotificationTitle', {\n                defaultMessage: 'The URL is big and Kibana might stop working'\n              }),\n              text: _react2.default.createElement(\n                _react.Fragment,\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'common.ui.chrome.bigUrlWarningNotificationMessage',\n                  defaultMessage: 'Either enable the {storeInSessionStorageParam} option in {advancedSettingsLink} or simplify the onscreen visuals.',\n                  values: {\n                    storeInSessionStorageParam: _react2.default.createElement(\n                      'code',\n                      null,\n                      'state:storeInSessionStorage'\n                    ),\n                    advancedSettingsLink: _react2.default.createElement(\n                      'a',\n                      { href: '#/management/kibana/settings' },\n                      _react2.default.createElement(_react3.FormattedMessage, {\n                        id: 'common.ui.chrome.bigUrlWarningNotificationMessage.advancedSettingsLinkText',\n                        defaultMessage: 'advanced settings'\n                      })\n                    )\n                  }\n                })\n              )\n            });\n          }\n        } catch (e) {\n          window.location.href = (0, _url.modifyUrl)(window.location.href, function (parts) {\n            parts.hash = '#/error/url-overflow';\n          });\n          // force the browser to reload to that Kibana's potentially unstable state is unloaded\n          window.location.reload();\n        }\n      };\n\n      $rootScope.$on('$routeUpdate', check);\n      $rootScope.$on('$routeChangeStart', check);\n    });\n\n    (0, _directives.directivesProvider)(chrome, internals);\n\n    _modules.uiModules.link(kibana);\n  };\n}",null]}