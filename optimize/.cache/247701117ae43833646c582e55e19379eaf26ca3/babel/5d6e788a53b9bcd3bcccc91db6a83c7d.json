{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/field_editor/components/field_format_editor/editors/color/color.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/field_editor/components/field_format_editor/editors/color/color.js","mtime":1567631711724},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorFormatEditor = exports.ColorFormatEditorComponent = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _default = require('../default');\n\nvar _color_default = require('../../../../../../../legacy/core_plugins/kibana/common/field_formats/types/color_default');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar ColorFormatEditorComponent = exports.ColorFormatEditorComponent = function (_DefaultFormatEditor) {\n  _inherits(ColorFormatEditorComponent, _DefaultFormatEditor);\n\n  function ColorFormatEditorComponent(props) {\n    _classCallCheck(this, ColorFormatEditorComponent);\n\n    var _this = _possibleConstructorReturn(this, (ColorFormatEditorComponent.__proto__ || Object.getPrototypeOf(ColorFormatEditorComponent)).call(this, props));\n\n    _this.onColorChange = function (newColorParams, index) {\n      var colors = [].concat(_toConsumableArray(_this.props.formatParams.colors));\n      colors[index] = _extends({}, colors[index], newColorParams);\n      _this.onChange({\n        colors: colors\n      });\n    };\n\n    _this.addColor = function () {\n      var colors = [].concat(_toConsumableArray(_this.props.formatParams.colors));\n      _this.onChange({\n        colors: [].concat(_toConsumableArray(colors), [_extends({}, _color_default.DEFAULT_COLOR)])\n      });\n    };\n\n    _this.removeColor = function (index) {\n      var colors = [].concat(_toConsumableArray(_this.props.formatParams.colors));\n      colors.splice(index, 1);\n      _this.onChange({\n        colors: colors\n      });\n    };\n\n    _this.onChange({\n      fieldType: props.fieldType\n    });\n    return _this;\n  }\n\n  _createClass(ColorFormatEditorComponent, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          formatParams = _props.formatParams,\n          fieldType = _props.fieldType,\n          intl = _props.intl;\n\n\n      var items = formatParams.colors && formatParams.colors.length && formatParams.colors.map(function (color, index) {\n        return _extends({}, color, {\n          index: index\n        });\n      }) || [];\n\n      var columns = [fieldType === 'string' ? {\n        field: 'regex',\n        name: intl.formatMessage({ id: 'common.ui.fieldEditor.color.patternLabel', defaultMessage: 'Pattern (regular expression)' }),\n        render: function render(value, item) {\n          return _react2.default.createElement(_eui.EuiFieldText, {\n            value: value,\n            onChange: function onChange(e) {\n              _this2.onColorChange({\n                regex: e.target.value\n              }, item.index);\n            }\n          });\n        }\n      } : {\n        field: 'range',\n        name: intl.formatMessage({ id: 'common.ui.fieldEditor.color.rangeLabel', defaultMessage: 'Range (min:max)' }),\n        render: function render(value, item) {\n          return _react2.default.createElement(_eui.EuiFieldText, {\n            value: value,\n            onChange: function onChange(e) {\n              _this2.onColorChange({\n                range: e.target.value\n              }, item.index);\n            }\n          });\n        }\n      }, {\n        field: 'text',\n        name: intl.formatMessage({ id: 'common.ui.fieldEditor.color.textColorLabel', defaultMessage: 'Text color' }),\n        render: function render(color, item) {\n          return _react2.default.createElement(_eui.EuiColorPicker, {\n            color: color,\n            onChange: function onChange(newColor) {\n              _this2.onColorChange({\n                text: newColor\n              }, item.index);\n            }\n          });\n        }\n      }, {\n        field: 'background',\n        name: intl.formatMessage({ id: 'common.ui.fieldEditor.color.backgroundLabel', defaultMessage: 'Background color' }),\n        render: function render(color, item) {\n          return _react2.default.createElement(_eui.EuiColorPicker, {\n            color: color,\n            onChange: function onChange(newColor) {\n              _this2.onColorChange({\n                background: newColor\n              }, item.index);\n            }\n          });\n        }\n      }, {\n        name: intl.formatMessage({ id: 'common.ui.fieldEditor.color.exampleLabel', defaultMessage: 'Example' }),\n        render: function render(item) {\n          return _react2.default.createElement(\n            'div',\n            {\n              style: {\n                background: item.background,\n                color: item.text\n              }\n            },\n            '123456'\n          );\n        }\n      }, {\n        actions: [{\n          name: intl.formatMessage({ id: 'common.ui.fieldEditor.color.deleteAria', defaultMessage: 'Delete' }),\n          description: intl.formatMessage({ id: 'common.ui.fieldEditor.color.deleteTitle', defaultMessage: 'Delete color format' }),\n          onClick: function onClick(item) {\n            _this2.removeColor(item.index);\n          },\n          type: 'icon',\n          icon: 'trash',\n          color: 'danger',\n          available: function available() {\n            return items.length > 1;\n          }\n        }]\n      }];\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(_eui.EuiBasicTable, {\n          items: items,\n          columns: columns\n        }),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n        _react2.default.createElement(\n          _eui.EuiButton,\n          {\n            iconType: 'plusInCircle',\n            size: 's',\n            onClick: this.addColor\n          },\n          _react2.default.createElement(_react3.FormattedMessage, { id: 'common.ui.fieldEditor.color.addColorButton', defaultMessage: 'Add color' })\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'l' })\n      );\n    }\n  }]);\n\n  return ColorFormatEditorComponent;\n}(_default.DefaultFormatEditor);\n\nvar ColorFormatEditor = exports.ColorFormatEditor = (0, _react3.injectI18n)(ColorFormatEditorComponent);\nColorFormatEditor.formatId = 'color';",null]}