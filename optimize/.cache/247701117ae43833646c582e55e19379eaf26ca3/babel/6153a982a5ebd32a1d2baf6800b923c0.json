{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/components/editor/list_control_editor.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/components/editor/list_control_editor.js","mtime":1567631691150},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListControlEditor = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _index_pattern_select_form_row = require('./index_pattern_select_form_row');\n\nvar _field_select = require('./field_select');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction filterField(field) {\n  return field.aggregatable && ['number', 'boolean', 'date', 'ip', 'string'].includes(field.type);\n}\n\nvar ListControlEditor = exports.ListControlEditor = function (_Component) {\n  _inherits(ListControlEditor, _Component);\n\n  function ListControlEditor() {\n    var _ref,\n        _this2 = this;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ListControlEditor);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ListControlEditor.__proto__ || Object.getPrototypeOf(ListControlEditor)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      isLoadingFieldType: true,\n      isStringField: false,\n      prevFieldName: _this.props.controlParams.fieldName\n    }, _this.componentDidUpdate = function () {\n      if (_this.state.isLoadingFieldType) {\n        _this.loadIsStringField();\n      }\n    }, _this.loadIsStringField = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var indexPattern, field;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!_this.props.controlParams.indexPattern || !_this.props.controlParams.fieldName)) {\n                _context.next = 3;\n                break;\n              }\n\n              _this.setState({ isLoadingFieldType: false });\n              return _context.abrupt('return');\n\n            case 3:\n              indexPattern = void 0;\n              _context.prev = 4;\n              _context.next = 7;\n              return _this.props.getIndexPattern(_this.props.controlParams.indexPattern);\n\n            case 7:\n              indexPattern = _context.sent;\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context['catch'](4);\n              return _context.abrupt('return');\n\n            case 13:\n              if (_this._isMounted) {\n                _context.next = 15;\n                break;\n              }\n\n              return _context.abrupt('return');\n\n            case 15:\n              field = indexPattern.fields.find(function (field) {\n                return field.name === _this.props.controlParams.fieldName;\n              });\n\n              if (field) {\n                _context.next = 18;\n                break;\n              }\n\n              return _context.abrupt('return');\n\n            case 18:\n              _this.setState({\n                isLoadingFieldType: false,\n                isStringField: field.type === 'string'\n              });\n\n            case 19:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2, [[4, 10]]);\n    })), _this.renderOptions = function () {\n      if (_this.state.isLoadingFieldType || !_this.props.controlParams.fieldName) {\n        return;\n      }\n\n      var options = [];\n      if (_this.props.parentCandidates && _this.props.parentCandidates.length > 0) {\n        var parentCandidatesOptions = [{ value: '', text: '' }].concat(_toConsumableArray(_this.props.parentCandidates));\n        options.push(_react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: 'parentSelect-' + _this.props.controlIndex,\n            label: _react2.default.createElement(_react3.FormattedMessage, { id: 'inputControl.editor.listControl.parentLabel', defaultMessage: 'Parent control' }),\n            helpText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'inputControl.editor.listControl.parentDescription',\n              defaultMessage: 'Options are based on the value of parent control. Disabled if parent is not set.'\n            }),\n            key: 'parentSelect'\n          },\n          _react2.default.createElement(_eui.EuiSelect, {\n            options: parentCandidatesOptions,\n            value: _this.props.controlParams.parent,\n            onChange: function onChange(evt) {\n              _this.props.handleParentChange(_this.props.controlIndex, evt);\n            }\n          })\n        ));\n      }\n\n      options.push(_react2.default.createElement(\n        _eui.EuiFormRow,\n        {\n          id: 'multiselect-' + _this.props.controlIndex,\n          key: 'multiselect',\n          helpText: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'inputControl.editor.listControl.multiselectDescription',\n            defaultMessage: 'Allow multiple selection'\n          })\n        },\n        _react2.default.createElement(_eui.EuiSwitch, {\n          label: _react2.default.createElement(_react3.FormattedMessage, { id: 'inputControl.editor.listControl.multiselectLabel', defaultMessage: 'Multiselect' }),\n          checked: _this.props.controlParams.options.multiselect,\n          onChange: function onChange(evt) {\n            _this.props.handleCheckboxOptionChange(_this.props.controlIndex, 'multiselect', evt);\n          },\n          'data-test-subj': 'listControlMultiselectInput'\n        })\n      ));\n\n      var dynamicOptionsHelpText = _this.state.isStringField ? _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'inputControl.editor.listControl.dynamicOptions.updateDescription',\n        defaultMessage: 'Update options in response to user input'\n      }) : _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'inputControl.editor.listControl.dynamicOptions.stringFieldDescription',\n        defaultMessage: 'Only available for \"string\" fields'\n      });\n      options.push(_react2.default.createElement(\n        _eui.EuiFormRow,\n        {\n          id: 'dynamicOptions-' + _this.props.controlIndex,\n          key: 'dynamicOptions',\n          helpText: dynamicOptionsHelpText\n        },\n        _react2.default.createElement(_eui.EuiSwitch, {\n          label: _react2.default.createElement(_react3.FormattedMessage, { id: 'inputControl.editor.listControl.dynamicOptionsLabel', defaultMessage: 'Dynamic Options' }),\n          checked: _this.props.controlParams.options.dynamicOptions,\n          onChange: function onChange(evt) {\n            _this.props.handleCheckboxOptionChange(_this.props.controlIndex, 'dynamicOptions', evt);\n          },\n          disabled: _this.state.isStringField ? false : true,\n          'data-test-subj': 'listControlDynamicOptionsSwitch'\n        })\n      ));\n\n      // size is not used when dynamic options is set\n      if (!_this.props.controlParams.options.dynamicOptions || !_this.state.isStringField) {\n        options.push(_react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: 'size-' + _this.props.controlIndex,\n            label: _react2.default.createElement(_react3.FormattedMessage, { id: 'inputControl.editor.listControl.sizeLabel', defaultMessage: 'Size' }),\n            key: 'size',\n            helpText: _react2.default.createElement(_react3.FormattedMessage, { id: 'inputControl.editor.listControl.sizeDescription', defaultMessage: 'Number of options' })\n          },\n          _react2.default.createElement(_eui.EuiFieldNumber, {\n            min: 1,\n            value: _this.props.controlParams.options.size,\n            onChange: function onChange(evt) {\n              _this.props.handleNumberOptionChange(_this.props.controlIndex, 'size', evt);\n            },\n            'data-test-subj': 'listControlSizeInput'\n          })\n        ));\n      }\n\n      return options;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ListControlEditor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.loadIsStringField();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(_index_pattern_select_form_row.IndexPatternSelectFormRow, {\n          indexPatternId: this.props.controlParams.indexPattern,\n          onChange: this.props.handleIndexPatternChange,\n          controlIndex: this.props.controlIndex\n        }),\n        _react2.default.createElement(_field_select.FieldSelect, {\n          fieldName: this.props.controlParams.fieldName,\n          indexPatternId: this.props.controlParams.indexPattern,\n          filterField: filterField,\n          onChange: this.props.handleFieldNameChange,\n          getIndexPattern: this.props.getIndexPattern,\n          controlIndex: this.props.controlIndex\n        }),\n        this.renderOptions()\n      );\n    }\n  }]);\n\n  return ListControlEditor;\n}(_react.Component);\n\nListControlEditor.getDerivedStateFromProps = function (nextProps, prevState) {\n  var isNewFieldName = prevState.prevFieldName !== nextProps.controlParams.fieldName;\n  if (!prevState.isLoadingFieldType && isNewFieldName) {\n    return {\n      prevFieldName: nextProps.controlParams.fieldName,\n      isLoadingFieldType: true\n    };\n  }\n\n  return null;\n};\n\nListControlEditor.propTypes = {\n  getIndexPattern: _propTypes2.default.func.isRequired,\n  controlIndex: _propTypes2.default.number.isRequired,\n  controlParams: _propTypes2.default.object.isRequired,\n  handleFieldNameChange: _propTypes2.default.func.isRequired,\n  handleIndexPatternChange: _propTypes2.default.func.isRequired,\n  handleCheckboxOptionChange: _propTypes2.default.func.isRequired,\n  handleNumberOptionChange: _propTypes2.default.func.isRequired,\n  parentCandidates: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    value: _propTypes2.default.string.isRequired,\n    text: _propTypes2.default.string.isRequired\n  })).isRequired,\n  handleParentChange: _propTypes2.default.func.isRequired\n};",null]}