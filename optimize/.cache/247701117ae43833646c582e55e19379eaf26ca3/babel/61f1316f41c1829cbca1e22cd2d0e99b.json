{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/kb/api.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/kb/api.js","mtime":1567631691127},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _components = require('../autocomplete/components');\n\nvar _url_params = require('../autocomplete/url_params');\n\nvar _body_completer = require('../autocomplete/body_completer');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _ = require('lodash');\n\n\n/**\n *\n * @param urlParametrizedComponentFactories a dictionary of factory functions\n * that will be used as fallback for parametrized path part (i.e., {indices} )\n * see UrlPatternMatcher\n * @constructor\n * @param bodyParametrizedComponentFactories same as urlParametrizedComponentFactories but used for body compilation\n */\nfunction Api(urlParametrizedComponentFactories, bodyParametrizedComponentFactories) {\n  this.globalRules = {};\n  this.endpoints = {};\n  this.urlPatternMatcher = new _components.UrlPatternMatcher(urlParametrizedComponentFactories);\n  this.globalBodyComponentFactories = bodyParametrizedComponentFactories;\n  this.name = '';\n}\n\n(function (cls) {\n  cls.addGlobalAutocompleteRules = function (parentNode, rules) {\n    this.globalRules[parentNode] = (0, _body_completer.compileBodyDescription)('GLOBAL.' + parentNode, rules, this.globalBodyComponentFactories);\n  };\n\n  cls.getGlobalAutocompleteComponents = function (term, throwOnMissing) {\n    var result = this.globalRules[term];\n    if (_.isUndefined(result) && (throwOnMissing || _.isUndefined(throwOnMissing))) {\n      throw new Error('failed to resolve global components for  [\\'' + term + '\\']');\n    }\n    return result;\n  };\n\n  cls.addEndpointDescription = function (endpoint, description) {\n\n    var copiedDescription = {};\n    _.extend(copiedDescription, description || {});\n    _.defaults(copiedDescription, {\n      id: endpoint,\n      patterns: [endpoint],\n      methods: ['GET']\n    });\n    _.each(copiedDescription.patterns, function (p) {\n      this.urlPatternMatcher.addEndpoint(p, copiedDescription);\n    }, this);\n\n    copiedDescription.paramsAutocomplete = new _url_params.UrlParams(copiedDescription.url_params);\n    copiedDescription.bodyAutocompleteRootComponents = (0, _body_completer.compileBodyDescription)(copiedDescription.id, copiedDescription.data_autocomplete_rules, this.globalBodyComponentFactories);\n\n    this.endpoints[endpoint] = copiedDescription;\n  };\n\n  cls.getEndpointDescriptionByEndpoint = function (endpoint) {\n    return this.endpoints[endpoint];\n  };\n\n  cls.getTopLevelUrlCompleteComponents = function (method) {\n    return this.urlPatternMatcher.getTopLevelComponents(method);\n  };\n\n  cls.getUnmatchedEndpointComponents = function () {\n    return (0, _body_completer.globalsOnlyAutocompleteComponents)();\n  };\n\n  cls.clear = function () {\n    this.endpoints = {};\n    this.globalRules = {};\n  };\n})(Api.prototype);\n\nexports.default = Api;\nmodule.exports = exports['default'];",null]}