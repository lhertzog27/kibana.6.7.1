{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/buckets/filters.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/buckets/filters.js","mtime":1567631711697},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filtersBucketAgg = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _bucket_agg_type = require('./_bucket_agg_type');\n\nvar _filters = require('./create_filter/filters');\n\nvar _esQuery = require('@kbn/es-query');\n\nvar _filters2 = require('../controls/filters.html');\n\nvar _filters3 = _interopRequireDefault(_filters2);\n\nvar _i18n = require('@kbn/i18n');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar filtersBucketAgg = exports.filtersBucketAgg = new _bucket_agg_type.BucketAggType({\n  name: 'filters',\n  title: _i18n.i18n.translate('common.ui.aggTypes.buckets.filtersTitle', {\n    defaultMessage: 'Filters',\n    description: 'The name of an aggregation, that allows to specify multiple individual filters to group data by.'\n  }),\n  createFilter: _filters.createFilterFilters,\n  customLabels: false,\n  params: [{\n    name: 'filters',\n    editor: _filters3.default,\n    default: [{ input: {}, label: '' }],\n    write: function write(aggConfig, output) {\n      var inFilters = aggConfig.params.filters;\n      if (!_lodash2.default.size(inFilters)) return;\n\n      var outFilters = _lodash2.default.transform(inFilters, function (filters, filter) {\n        var input = _lodash2.default.cloneDeep(filter.input);\n\n        if (!input) {\n          console.log('malformed filter agg params, missing \"input\" query'); // eslint-disable-line no-console\n          return;\n        }\n\n        var query = input.query = (0, _esQuery.luceneStringToDsl)(input.query);\n        if (!query) {\n          console.log('malformed filter agg params, missing \"query\" on input'); // eslint-disable-line no-console\n          return;\n        }\n        var config = _chrome2.default.getUiSettingsClient();\n        var queryStringOptions = config.get('query:queryString:options');\n\n        (0, _esQuery.decorateQuery)(query, queryStringOptions);\n\n        var matchAllLabel = filter.input.query === '' && _lodash2.default.has(query, 'match_all') ? '*' : '';\n        var label = filter.label || matchAllLabel || _lodash2.default.get(query, 'query_string.query') || _angular2.default.toJson(query);\n        filters[label] = input;\n      }, {});\n\n      if (!_lodash2.default.size(outFilters)) return;\n\n      var params = output.params || (output.params = {});\n      params.filters = outFilters;\n    }\n  }]\n});",null]}