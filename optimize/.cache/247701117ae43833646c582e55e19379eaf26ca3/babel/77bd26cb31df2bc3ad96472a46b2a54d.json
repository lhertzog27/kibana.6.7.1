{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/field_wildcard/field_wildcard.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/field_wildcard/field_wildcard.js","mtime":1567631711728},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FieldWildcardProvider = FieldWildcardProvider;\n\nvar _lodash = require('lodash');\n\nfunction FieldWildcardProvider(config) {\n  var metaFields = config.get('metaFields');\n\n  var makeRegEx = (0, _lodash.memoize)(function makeRegEx(glob) {\n    return new RegExp('^' + glob.split('*').map(_lodash.escapeRegExp).join('.*') + '$');\n  });\n\n  // Note that this will return an essentially noop function if globs is undefined.\n  function fieldWildcardMatcher() {\n    var globs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    return function matcher(val) {\n      // do not test metaFields or keyword\n      if (metaFields.indexOf(val) !== -1) {\n        return false;\n      }\n      return globs.some(function (p) {\n        return makeRegEx(p).test(val);\n      });\n    };\n  }\n\n  // Note that this will return an essentially noop function if globs is undefined.\n  function fieldWildcardFilter() {\n    var globs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var matcher = fieldWildcardMatcher(globs);\n    return function filter(val) {\n      return !matcher(val);\n    };\n  }\n\n  return { makeRegEx: makeRegEx, fieldWildcardMatcher: fieldWildcardMatcher, fieldWildcardFilter: fieldWildcardFilter };\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */",null]}