{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/settings/lib/to_editable_config.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/settings/lib/to_editable_config.js","mtime":1567631711600},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toEditableConfig = toEditableConfig;\n\nvar _get_val_type = require('./get_val_type');\n\nvar _get_aria_name = require('./get_aria_name');\n\nvar _default_category = require('./default_category');\n\n/**\n * @param {object} advanced setting definition object\n * @param {object} name of setting\n * @param {object} current value of setting\n * @returns {object} the editable config object\n */\nfunction toEditableConfig(_ref) {\n  var def = _ref.def,\n      name = _ref.name,\n      value = _ref.value,\n      isCustom = _ref.isCustom,\n      isOverridden = _ref.isOverridden;\n\n  if (!def) {\n    def = {};\n  }\n  var conf = {\n    name: name,\n    displayName: def.name || name,\n    ariaName: def.name || (0, _get_aria_name.getAriaName)(name),\n    value: value,\n    category: def.category && def.category.length ? def.category : [_default_category.DEFAULT_CATEGORY],\n    isCustom: isCustom,\n    isOverridden: isOverridden,\n    readonly: !!def.readonly,\n    defVal: def.value,\n    type: (0, _get_val_type.getValType)(def, value),\n    description: def.description,\n    options: def.options,\n    optionLabels: def.optionLabels\n  };\n\n  return conf;\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */",null]}