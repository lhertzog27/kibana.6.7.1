{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/packages/kbn-es-query/target/es_query/migrate_filter.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/packages/kbn-es-query/target/es_query/migrate_filter.js","mtime":1567666387363},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.migrateFilter = migrateFilter;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _filters = require('../filters');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n  } else {\n    obj[key] = value;\n  }return obj;\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */\n\nfunction migrateFilter(filter, indexPattern) {\n  if (filter.match) {\n    var fieldName = Object.keys(filter.match)[0];\n\n    if (isMatchPhraseFilter(filter, fieldName)) {\n      var params = _lodash2.default.get(filter, ['match', fieldName]);\n      if (indexPattern) {\n        var field = indexPattern.fields.find(function (f) {\n          return f.name === fieldName;\n        });\n        if (field) {\n          params.query = (0, _filters.getConvertedValueForField)(field, params.query);\n        }\n      }\n      return {\n        match_phrase: _defineProperty({}, fieldName, _lodash2.default.omit(params, 'type'))\n      };\n    }\n  }\n\n  return filter;\n}\n\nfunction isMatchPhraseFilter(filter, fieldName) {\n  return _lodash2.default.get(filter, ['match', fieldName, 'type']) === 'phrase';\n}",null]}