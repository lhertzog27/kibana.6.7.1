{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/tile_map/common/ems_client.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/tile_map/common/ems_client.js","mtime":1567631711643},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EMSClientV66 = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nicensed to Elasticsearch B.V. under one or more contributor\nlicense agreements. See the NOTICE file distributed with\nthis work for additional information regarding copyright\nownership. Elasticsearch B.V. licenses this file to you under\nthe Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License.\nou may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * under the License.\nn\nvar _markdownIt = require('markdown-it');\n\nvar _markdownIt2 = _interopRequireDefault(_markdownIt);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _tms_service = require('./tms_service');\n\nvar _file_layer = require('./file_layer');\n\nvar _nodeFetch = require('node-fetch');\n\nvar _nodeFetch2 = _interopRequireDefault(_nodeFetch);\n\nvar _url = require('url');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar extendUrl = function extendUrl(url, props) {\n  return modifyUrlLocal(url, function (parsed) {\n    return _lodash2.default.merge(parsed, props);\n  });\n};\n\nvar markdownIt = new _markdownIt2.default({\n  html: false,\n  linkify: true\n});\n\n/**\n * plugins cannot have upstream dependencies on core/*-kibana.\n * Work-around by copy-pasting modifyUrl routine here.\n * @param url\n * @param block\n */\nfunction modifyUrlLocal(url, block) {\n\n  var parsed = (0, _url.parse)(url, true);\n\n  // copy over the most specific version of each\n  // property. By default, the parsed url includes\n  // several conflicting properties (like path and\n  // pathname + search, or search and query) and keeping\n  // track of which property is actually used when they\n  // are formatted is harder than necessary\n  var meaningfulParts = {\n    protocol: parsed.protocol,\n    slashes: parsed.slashes,\n    auth: parsed.auth,\n    hostname: parsed.hostname,\n    port: parsed.port,\n    pathname: parsed.pathname,\n    query: parsed.query || {},\n    hash: parsed.hash\n  };\n\n  // the block modifies the meaningfulParts object, or returns a new one\n  var modifiedParts = block(meaningfulParts) || meaningfulParts;\n\n  // format the modified/replaced meaningfulParts back into a url\n  return (0, _url.format)({\n    protocol: modifiedParts.protocol,\n    slashes: modifiedParts.slashes,\n    auth: modifiedParts.auth,\n    hostname: modifiedParts.hostname,\n    port: modifiedParts.port,\n    pathname: modifiedParts.pathname,\n    query: modifiedParts.query,\n    hash: modifiedParts.hash\n  });\n}\n\n/**\n *  Unescape a url template that was escaped by encodeURI() so leaflet\n *  will be able to correctly locate the variables in the template\n *  @param  {String} url\n *  @return {String}\n */\nvar unescapeTemplateVars = function unescapeTemplateVars(url) {\n  var ENCODED_TEMPLATE_VARS_RE = /%7B(\\w+?)%7D/g;\n  return url.replace(ENCODED_TEMPLATE_VARS_RE, function (total, varName) {\n    return '{' + varName + '}';\n  });\n};\n\n//this is not the default locale from Kibana, but the default locale supported by the Elastic Maps Service\nvar DEFAULT_LANGUAGE = 'en';\n\nvar EMSClientV66 = exports.EMSClientV66 = function () {\n  function EMSClientV66(_ref) {\n    var kbnVersion = _ref.kbnVersion,\n        manifestServiceUrl = _ref.manifestServiceUrl,\n        htmlSanitizer = _ref.htmlSanitizer,\n        language = _ref.language,\n        landingPageUrl = _ref.landingPageUrl;\n\n    _classCallCheck(this, EMSClientV66);\n\n    this.EMS_LOAD_TIMEOUT = 32000;\n\n\n    this._queryParams = {\n      my_app_version: kbnVersion\n    };\n\n    this._sanitizer = htmlSanitizer ? htmlSanitizer : function (x) {\n      return x;\n    };\n    this._manifestServiceUrl = manifestServiceUrl;\n    this._loadFileLayers = null;\n    this._loadTMSServices = null;\n    this._emsLandingPageUrl = typeof landingPageUrl === 'string' ? landingPageUrl : '';\n    this._language = typeof language === 'string' ? language : DEFAULT_LANGUAGE;\n\n    this._invalidateSettings();\n  }\n\n  _createClass(EMSClientV66, [{\n    key: 'getLocale',\n    value: function getLocale() {\n      return this._language;\n    }\n  }, {\n    key: 'getValueInLanguage',\n    value: function getValueInLanguage(i18nObject) {\n      if (!i18nObject) {\n        return '';\n      }\n      return i18nObject[this._language] ? i18nObject[this._language] : i18nObject[DEFAULT_LANGUAGE];\n    }\n\n    /**\n     * this internal method is overridden by the tests to simulate custom manifest.\n     */\n\n  }, {\n    key: '_getManifest',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(manifestUrl) {\n        var result, url;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                result = void 0;\n                _context.prev = 1;\n                url = extendUrl(manifestUrl, { query: this._queryParams });\n                _context.next = 5;\n                return this._fetchWithTimeout(url);\n\n              case 5:\n                result = _context.sent;\n                _context.next = 13;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context['catch'](1);\n\n                if (!_context.t0) {\n                  _context.t0 = new Error('Unknown error');\n                }\n                if (!(_context.t0 instanceof Error)) {\n                  _context.t0 = new Error(_context.t0.data || 'status ' + (_context.t0.statusText || _context.t0.status));\n                }\n                throw new Error('Unable to retrieve manifest from ' + manifestUrl + ': ' + _context.t0.message);\n\n              case 13:\n                _context.prev = 13;\n\n                if (!result) {\n                  _context.next = 20;\n                  break;\n                }\n\n                _context.next = 17;\n                return result.json();\n\n              case 17:\n                _context.t1 = _context.sent;\n                _context.next = 21;\n                break;\n\n              case 20:\n                _context.t1 = null;\n\n              case 21:\n                return _context.abrupt('return', _context.t1);\n\n              case 23:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8, 13, 23]]);\n      }));\n\n      function _getManifest(_x) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return _getManifest;\n    }()\n  }, {\n    key: '_fetchWithTimeout',\n    value: function _fetchWithTimeout(url) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var timer = setTimeout(function () {\n          return reject(new Error('Request to ' + url + ' timed out'));\n        }, _this.EMS_LOAD_TIMEOUT);\n        (0, _nodeFetch2.default)(url).then(function (response) {\n          clearTimeout(timer);\n          resolve(response);\n        }, function (err) {\n          clearTimeout(timer);\n          reject(err);\n        });\n      });\n    }\n\n    /**\n     * Add optional query-parameters to all requests\n     *\n     * @param additionalQueryParams\n     */\n\n  }, {\n    key: 'addQueryParams',\n    value: function addQueryParams(additionalQueryParams) {\n      for (var key in additionalQueryParams) {\n        if (additionalQueryParams.hasOwnProperty(key)) {\n          if (additionalQueryParams[key] !== this._queryParams[key]) {\n            //changes detected.\n            this._queryParams = _lodash2.default.assign({}, this._queryParams, additionalQueryParams);\n            this._invalidateSettings();\n            break;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_invalidateSettings',\n    value: function _invalidateSettings() {\n      var _this2 = this;\n\n      this._getManifestWithParams = _lodash2.default.once(function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(url) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  return _context2.abrupt('return', _this2._getManifest(_this2.extendUrlWithParams(url)));\n\n                case 1:\n                case 'end':\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, _this2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n\n      this._getCatalogueService = function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(serviceType) {\n          var catalogueManifest, service;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return _this2._getManifestWithParams(_this2._manifestServiceUrl);\n\n                case 2:\n                  catalogueManifest = _context3.sent;\n                  service = void 0;\n\n                  if (_lodash2.default.has(catalogueManifest, 'services')) {\n                    service = catalogueManifest.services.find(function (s) {\n                      return s.type === serviceType;\n                    });\n                  }\n                  return _context3.abrupt('return', service || {});\n\n                case 6:\n                case 'end':\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, _this2);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }();\n\n      this._wrapServiceAttribute = function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(manifestUrl, attr, WrapperClass) {\n          var manifest;\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _this2._getManifest(manifestUrl);\n\n                case 2:\n                  manifest = _context4.sent;\n\n                  if (!_lodash2.default.has(manifest, attr)) {\n                    _context4.next = 5;\n                    break;\n                  }\n\n                  return _context4.abrupt('return', manifest[attr].map(function (config) {\n                    return new WrapperClass(config, _this2);\n                  }));\n\n                case 5:\n                  return _context4.abrupt('return', []);\n\n                case 6:\n                case 'end':\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, _this2);\n        }));\n\n        return function (_x4, _x5, _x6) {\n          return _ref5.apply(this, arguments);\n        };\n      }();\n\n      this._loadFileLayers = _lodash2.default.once(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var fileService;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _this2._getCatalogueService('file');\n\n              case 2:\n                fileService = _context5.sent;\n                return _context5.abrupt('return', _lodash2.default.isEmpty(fileService) ? [] : _this2._wrapServiceAttribute(fileService.manifest, 'layers', _file_layer.FileLayer));\n\n              case 4:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, _callee5, _this2);\n      })));\n\n      this._loadTMSServices = _lodash2.default.once(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var tmsService;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _this2._getCatalogueService('tms');\n\n              case 2:\n                tmsService = _context6.sent;\n\n                if (!_lodash2.default.isEmpty(tmsService)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                _context6.t0 = [];\n                _context6.next = 10;\n                break;\n\n              case 7:\n                _context6.next = 9;\n                return _this2._wrapServiceAttribute(tmsService.manifest, 'services', _tms_service.TMSService);\n\n              case 9:\n                _context6.t0 = _context6.sent;\n\n              case 10:\n                return _context6.abrupt('return', _context6.t0);\n\n              case 11:\n              case 'end':\n                return _context6.stop();\n            }\n          }\n        }, _callee6, _this2);\n      })));\n    }\n  }, {\n    key: 'getLandingPageUrl',\n    value: function getLandingPageUrl() {\n      return this._emsLandingPageUrl;\n    }\n  }, {\n    key: 'sanitizeMarkdown',\n    value: function sanitizeMarkdown(markdown) {\n      return this._sanitizer(markdownIt.render(markdown));\n    }\n  }, {\n    key: 'sanitizeHtml',\n    value: function sanitizeHtml(html) {\n      return this._sanitizer(html);\n    }\n  }, {\n    key: 'extendUrlWithParams',\n    value: function extendUrlWithParams(url) {\n      return unescapeTemplateVars(extendUrl(url, {\n        query: this._queryParams\n      }));\n    }\n  }, {\n    key: 'getFileLayers',\n    value: function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this._loadFileLayers();\n\n              case 2:\n                return _context7.abrupt('return', _context7.sent);\n\n              case 3:\n              case 'end':\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getFileLayers() {\n        return _ref8.apply(this, arguments);\n      }\n\n      return getFileLayers;\n    }()\n  }, {\n    key: 'getTMSServices',\n    value: function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this._loadTMSServices();\n\n              case 2:\n                return _context8.abrupt('return', _context8.sent);\n\n              case 3:\n              case 'end':\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getTMSServices() {\n        return _ref9.apply(this, arguments);\n      }\n\n      return getTMSServices;\n    }()\n  }, {\n    key: 'findFileLayerById',\n    value: function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(id) {\n        var fileLayers, i;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.getFileLayers();\n\n              case 2:\n                fileLayers = _context9.sent;\n                i = 0;\n\n              case 4:\n                if (!(i < fileLayers.length)) {\n                  _context9.next = 10;\n                  break;\n                }\n\n                if (!fileLayers[i].hasId(id)) {\n                  _context9.next = 7;\n                  break;\n                }\n\n                return _context9.abrupt('return', fileLayers[i]);\n\n              case 7:\n                i++;\n                _context9.next = 4;\n                break;\n\n              case 10:\n              case 'end':\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function findFileLayerById(_x7) {\n        return _ref10.apply(this, arguments);\n      }\n\n      return findFileLayerById;\n    }()\n  }, {\n    key: 'findTMSServiceById',\n    value: function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(id) {\n        var tmsServices, i;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.getTMSServices();\n\n              case 2:\n                tmsServices = _context10.sent;\n                i = 0;\n\n              case 4:\n                if (!(i < tmsServices.length)) {\n                  _context10.next = 10;\n                  break;\n                }\n\n                if (!tmsServices[i].hasId(id)) {\n                  _context10.next = 7;\n                  break;\n                }\n\n                return _context10.abrupt('return', tmsServices[i]);\n\n              case 7:\n                i++;\n                _context10.next = 4;\n                break;\n\n              case 10:\n              case 'end':\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function findTMSServiceById(_x8) {\n        return _ref11.apply(this, arguments);\n      }\n\n      return findTMSServiceById;\n    }()\n  }]);\n\n  return EMSClientV66;\n}();",null]}