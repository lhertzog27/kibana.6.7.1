{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/context/api/context.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/context/api/context.js","mtime":1567631711540},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchContextProvider = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _courier = require('ui/courier');\n\nvar _sorting = require('./utils/sorting');\n\nvar _marked = /*#__PURE__*/regeneratorRuntime.mark(asPairs);\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * software distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n// @ts-check\n\n\n// @ts-ignore\n\n\n/**\n * @typedef {Object} SearchResult\n * @prop {{ total: number, hits: any[] }} hits\n * @prop {Object} aggregations\n */\n\n/**\n * @typedef {Object} SearchSourceT\n * @prop {function(): Promise<SearchResult>} fetch\n * @prop {function(string, any): SearchSourceT} setField\n * @prop {function(any): SearchSourceT} setParent\n */\n\n/**\n * @typedef {'asc' | 'desc'} SortDirection\n */\n\nvar DAY_MILLIS = 24 * 60 * 60 * 1000;\n\n// look from 1 day up to 10000 days into the past and future\nvar LOOKUP_OFFSETS = [0, 1, 7, 30, 365, 10000].map(function (days) {\n  return days * DAY_MILLIS;\n});\n\nfunction fetchContextProvider(indexPatterns, Private) {\n  var fetchSuccessors = function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(indexPatternId, timeField, timeSortDirection, timeValue, tieBreakerField, tieBreakerSortDirection, tieBreakerValue, size, filters) {\n      var searchSource, offsetSign, intervals, successors, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _ref2, _ref3, startTimeValue, endTimeValue, remainingSize, _ref4, _ref5, afterTimeValue, afterTieBreakerValue, hits;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return createSearchSource(indexPatternId, filters);\n\n            case 2:\n              searchSource = _context.sent;\n              offsetSign = timeSortDirection === 'asc' ? 1 : -1;\n\n              // ending with `null` opens the last interval\n\n              intervals = asPairs([].concat(_toConsumableArray(LOOKUP_OFFSETS.map(function (offset) {\n                return timeValue + offset * offsetSign;\n              })), [null]));\n              successors = [];\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 9;\n              _iterator = intervals[Symbol.iterator]();\n\n            case 11:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 27;\n                break;\n              }\n\n              _ref2 = _step.value;\n              _ref3 = _slicedToArray(_ref2, 2);\n              startTimeValue = _ref3[0];\n              endTimeValue = _ref3[1];\n              remainingSize = size - successors.length;\n\n              if (!(remainingSize <= 0)) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt('break', 27);\n\n            case 19:\n              _ref4 = successors.length > 0 ? successors[successors.length - 1].sort : [timeValue, tieBreakerValue], _ref5 = _slicedToArray(_ref4, 2), afterTimeValue = _ref5[0], afterTieBreakerValue = _ref5[1];\n              _context.next = 22;\n              return fetchHitsInInterval(searchSource, timeField, timeSortDirection, startTimeValue, endTimeValue, afterTimeValue, tieBreakerField, tieBreakerSortDirection, afterTieBreakerValue, remainingSize);\n\n            case 22:\n              hits = _context.sent;\n\n\n              successors = [].concat(_toConsumableArray(successors), _toConsumableArray(hits));\n\n            case 24:\n              _iteratorNormalCompletion = true;\n              _context.next = 11;\n              break;\n\n            case 27:\n              _context.next = 33;\n              break;\n\n            case 29:\n              _context.prev = 29;\n              _context.t0 = _context['catch'](9);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 33:\n              _context.prev = 33;\n              _context.prev = 34;\n\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n\n            case 36:\n              _context.prev = 36;\n\n              if (!_didIteratorError) {\n                _context.next = 39;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 39:\n              return _context.finish(36);\n\n            case 40:\n              return _context.finish(33);\n\n            case 41:\n              return _context.abrupt('return', successors);\n\n            case 42:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[9, 29, 33, 41], [34,, 36, 40]]);\n    }));\n\n    return function fetchSuccessors(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchPredecessors = function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(indexPatternId, timeField, timeSortDirection, timeValue, tieBreakerField, tieBreakerSortDirection, tieBreakerValue, size, filters) {\n      var searchSource, offsetSign, intervals, predecessors, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _ref7, _ref8, startTimeValue, endTimeValue, remainingSize, _ref9, _ref10, afterTimeValue, afterTieBreakerValue, hits;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return createSearchSource(indexPatternId, filters);\n\n            case 2:\n              searchSource = _context2.sent;\n              offsetSign = timeSortDirection === 'desc' ? 1 : -1;\n\n              // ending with `null` opens the last interval\n\n              intervals = asPairs([].concat(_toConsumableArray(LOOKUP_OFFSETS.map(function (offset) {\n                return timeValue + offset * offsetSign;\n              })), [null]));\n              predecessors = [];\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context2.prev = 9;\n              _iterator2 = intervals[Symbol.iterator]();\n\n            case 11:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context2.next = 27;\n                break;\n              }\n\n              _ref7 = _step2.value;\n              _ref8 = _slicedToArray(_ref7, 2);\n              startTimeValue = _ref8[0];\n              endTimeValue = _ref8[1];\n              remainingSize = size - predecessors.length;\n\n              if (!(remainingSize <= 0)) {\n                _context2.next = 19;\n                break;\n              }\n\n              return _context2.abrupt('break', 27);\n\n            case 19:\n              _ref9 = predecessors.length > 0 ? predecessors[0].sort : [timeValue, tieBreakerValue], _ref10 = _slicedToArray(_ref9, 2), afterTimeValue = _ref10[0], afterTieBreakerValue = _ref10[1];\n              _context2.next = 22;\n              return fetchHitsInInterval(searchSource, timeField, (0, _sorting.reverseSortDirection)(timeSortDirection), startTimeValue, endTimeValue, afterTimeValue, tieBreakerField, (0, _sorting.reverseSortDirection)(tieBreakerSortDirection), afterTieBreakerValue, remainingSize);\n\n            case 22:\n              hits = _context2.sent;\n\n\n              predecessors = [].concat(_toConsumableArray(hits.slice().reverse()), _toConsumableArray(predecessors));\n\n            case 24:\n              _iteratorNormalCompletion2 = true;\n              _context2.next = 11;\n              break;\n\n            case 27:\n              _context2.next = 33;\n              break;\n\n            case 29:\n              _context2.prev = 29;\n              _context2.t0 = _context2['catch'](9);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context2.t0;\n\n            case 33:\n              _context2.prev = 33;\n              _context2.prev = 34;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n\n            case 36:\n              _context2.prev = 36;\n\n              if (!_didIteratorError2) {\n                _context2.next = 39;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 39:\n              return _context2.finish(36);\n\n            case 40:\n              return _context2.finish(33);\n\n            case 41:\n              return _context2.abrupt('return', predecessors);\n\n            case 42:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[9, 29, 33, 41], [34,, 36, 40]]);\n    }));\n\n    return function fetchPredecessors(_x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * @param {string} indexPatternId\n   * @param {any[]} filters\n   * @returns {Promise<Object>}\n   */\n\n\n  var createSearchSource = function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(indexPatternId, filters) {\n      var indexPattern;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return indexPatterns.get(indexPatternId);\n\n            case 2:\n              indexPattern = _context3.sent;\n              return _context3.abrupt('return', new SearchSource().setParent(false).setField('index', indexPattern).setField('filter', filters));\n\n            case 4:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function createSearchSource(_x19, _x20) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * Fetch the hits between `(afterTimeValue, tieBreakerValue)` and\n   * `endTimeValue` from the `searchSource` using the given `timeField` and\n   * `tieBreakerField` fields up to a maximum of `maxCount` documents. The\n   * documents are sorted by `(timeField, tieBreakerField)` using the\n   * respective `timeSortDirection` and `tieBreakerSortDirection`.\n   *\n   * The `searchSource` is assumed to have the appropriate index pattern\n   * and filters set.\n   *\n   * @param {SearchSourceT} searchSource\n   * @param {string} timeField\n   * @param {SortDirection} timeSortDirection\n   * @param {number} startTimeValue\n   * @param {number | null} endTimeValue\n   * @param {number} [afterTimeValue=startTimeValue]\n   * @param {string} tieBreakerField\n   * @param {SortDirection} tieBreakerSortDirection\n   * @param {number} tieBreakerValue\n   * @param {number} maxCount\n   * @returns {Promise<object[]>}\n   */\n\n\n  var fetchHitsInInterval = function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(searchSource, timeField, timeSortDirection, startTimeValue, endTimeValue, afterTimeValue, tieBreakerField, tieBreakerSortDirection, tieBreakerValue, maxCount) {\n      var startRange, endRange, response;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              startRange = _defineProperty({}, timeSortDirection === 'asc' ? 'gte' : 'lte', startTimeValue);\n              endRange = endTimeValue === null ? {} : _defineProperty({}, timeSortDirection === 'asc' ? 'lte' : 'gte', endTimeValue);\n              _context4.next = 4;\n              return searchSource.setField('size', maxCount).setField('query', {\n                query: {\n                  constant_score: {\n                    filter: {\n                      range: _defineProperty({}, timeField, _extends({\n                        format: 'epoch_millis'\n                      }, startRange, endRange))\n                    }\n                  }\n                },\n                language: 'lucene'\n              }).setField('searchAfter', [afterTimeValue !== null ? afterTimeValue : startTimeValue, tieBreakerValue]).setField('sort', [_defineProperty({}, timeField, timeSortDirection), _defineProperty({}, tieBreakerField, tieBreakerSortDirection)]).setField('version', true).fetch();\n\n            case 4:\n              response = _context4.sent;\n              return _context4.abrupt('return', response.hits ? response.hits.hits : []);\n\n            case 6:\n            case 'end':\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    return function fetchHitsInInterval(_x21, _x22, _x23, _x24, _x25, _x26, _x27, _x28, _x29, _x30) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * @type {{new(): SearchSourceT}}\n   */\n  var SearchSource = Private(_courier.SearchSourceProvider);\n\n  return {\n    fetchPredecessors: fetchPredecessors,\n    fetchSuccessors: fetchSuccessors\n  };\n}\n\n/**\n * Generate a sequence of pairs from the iterable that looks like\n * `[[x_0, x_1], [x_1, x_2], [x_2, x_3], ..., [x_(n-1), x_n]]`.\n *\n * @param {Iterable<any>} iterable\n * @returns {IterableIterator<(any[])>}\n */\nfunction asPairs(iterable) {\n  var currentPair, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, value;\n\n  return regeneratorRuntime.wrap(function asPairs$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          currentPair = [];\n          _iteratorNormalCompletion3 = true;\n          _didIteratorError3 = false;\n          _iteratorError3 = undefined;\n          _context5.prev = 4;\n          _iterator3 = iterable[Symbol.iterator]();\n\n        case 6:\n          if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n            _context5.next = 15;\n            break;\n          }\n\n          value = _step3.value;\n\n          currentPair = [].concat(_toConsumableArray(currentPair), [value]).slice(-2);\n\n          if (!(currentPair.length === 2)) {\n            _context5.next = 12;\n            break;\n          }\n\n          _context5.next = 12;\n          return currentPair;\n\n        case 12:\n          _iteratorNormalCompletion3 = true;\n          _context5.next = 6;\n          break;\n\n        case 15:\n          _context5.next = 21;\n          break;\n\n        case 17:\n          _context5.prev = 17;\n          _context5.t0 = _context5['catch'](4);\n          _didIteratorError3 = true;\n          _iteratorError3 = _context5.t0;\n\n        case 21:\n          _context5.prev = 21;\n          _context5.prev = 22;\n\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n\n        case 24:\n          _context5.prev = 24;\n\n          if (!_didIteratorError3) {\n            _context5.next = 27;\n            break;\n          }\n\n          throw _iteratorError3;\n\n        case 27:\n          return _context5.finish(24);\n\n        case 28:\n          return _context5.finish(21);\n\n        case 29:\n        case 'end':\n          return _context5.stop();\n      }\n    }\n  }, _marked, this, [[4, 17, 21, 29], [22,, 24, 28]]);\n}\n\nexports.fetchContextProvider = fetchContextProvider;",null]}