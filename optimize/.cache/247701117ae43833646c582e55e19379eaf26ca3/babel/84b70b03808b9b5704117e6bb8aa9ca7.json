{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/packages/kbn-es-query/target/kuery/filter_migration/filter_to_kuery.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/packages/kbn-es-query/target/kuery/filter_migration/filter_to_kuery.js","mtime":1567666387904},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterToKueryAST = filterToKueryAST;\n\nvar _node_types = require('../node_types');\n\nvar _phrase = require('./phrase');\n\nvar _range = require('./range');\n\nvar _exists = require('./exists');\n\nvar _geo_bounding_box = require('./geo_bounding_box');\n\nvar _geo_polygon = require('./geo_polygon');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar conversionChain = [_phrase.convertPhraseFilter, _range.convertRangeFilter, _exists.convertExistsFilter, _geo_bounding_box.convertGeoBoundingBox, _geo_polygon.convertGeoPolygon];\n\nfunction filterToKueryAST(filter) {\n  var negate = filter.meta.negate;\n\n  var node = conversionChain.reduce(function (acc, converter) {\n    if (acc !== null) return acc;\n\n    try {\n      return converter(filter);\n    } catch (ex) {\n      return null;\n    }\n  }, null);\n\n  if (!node) {\n    throw new Error('Couldn\\'t convert that filter to a kuery');\n  }\n\n  return negate ? _node_types.nodeTypes.function.buildNode('not', node) : node;\n}",null]}