{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/timelion/common/lib/calculate_interval.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/timelion/common/lib/calculate_interval.js","mtime":1567631691297},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateInterval = calculateInterval;\n\nvar _to_milliseconds = require('../../server/lib/to_milliseconds.js');\n\nvar _to_milliseconds2 = _interopRequireDefault(_to_milliseconds);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Totally cribbed this from Kibana 3.\n// I bet there's something similar in the Kibana 4 code. Somewhere. Somehow.\nfunction roundInterval(interval) {\n  switch (true) {\n    case interval <= 500:\n      // <= 0.5s\n      return '100ms';\n    case interval <= 5000:\n      // <= 5s\n      return '1s';\n    case interval <= 7500:\n      // <= 7.5s\n      return '5s';\n    case interval <= 15000:\n      // <= 15s\n      return '10s';\n    case interval <= 45000:\n      // <= 45s\n      return '30s';\n    case interval <= 180000:\n      // <= 3m\n      return '1m';\n    case interval <= 450000:\n      // <= 9m\n      return '5m';\n    case interval <= 1200000:\n      // <= 20m\n      return '10m';\n    case interval <= 2700000:\n      // <= 45m\n      return '30m';\n    case interval <= 7200000:\n      // <= 2h\n      return '1h';\n    case interval <= 21600000:\n      // <= 6h\n      return '3h';\n    case interval <= 86400000:\n      // <= 24h\n      return '12h';\n    case interval <= 604800000:\n      // <= 1w\n      return '24h';\n    case interval <= 1814400000:\n      // <= 3w\n      return '1w';\n    case interval < 3628800000:\n      // <  2y\n      return '30d';\n    default:\n      return '1y';\n  }\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */\n\nfunction calculateInterval(from, to, size, interval, min) {\n  if (interval !== 'auto') return interval;\n  var dateMathInterval = roundInterval((to - from) / size);\n  if ((0, _to_milliseconds2.default)(dateMathInterval) < (0, _to_milliseconds2.default)(min)) return min;\n  return dateMathInterval;\n}",null]}