{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/chrome/directives/sub_url_route_filter.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/directives/sub_url_route_filter.js","mtime":1567631711711},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubUrlRouteFilterProvider = SubUrlRouteFilterProvider;\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n *  Creates a function that will be called on each route change\n *  to determine if the event should be used to update the last\n *  subUrl of chrome links/tabs\n *  @injected\n */\nfunction SubUrlRouteFilterProvider($injector) {\n  if (!$injector.has('$route')) {\n    return function alwaysUpdate() {\n      return true;\n    };\n  }\n\n  var $route = $injector.get('$route');\n  return function ignoreRedirectToRoutes() {\n    return Boolean($route.current && !$route.current.redirectTo);\n  };\n}",null]}