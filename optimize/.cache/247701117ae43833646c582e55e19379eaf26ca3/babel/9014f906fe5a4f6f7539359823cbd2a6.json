{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/home/components/tutorial/replace_template_strings.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/home/components/tutorial/replace_template_strings.js","mtime":1567631711568},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceTemplateStrings = replaceTemplateStrings;\n\nvar _mustache = require('mustache');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _metadata = require('ui/metadata');\n\nvar _documentation_links = require('ui/documentation_links/documentation_links');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar TEMPLATE_TAGS = ['{', '}'];\n\n// Can not use 'Mustache' since its a global object\nvar mustacheWriter = new _mustache.Writer();\n// do not html escape output\nmustacheWriter.escapedValue = function escapedValue(token, context) {\n  var value = context.lookup(token[1]);\n  if (value != null) {\n    return value;\n  }\n};\n\nfunction replaceTemplateStrings(text) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var variables = {\n    // '{' and '}' can not be used in template since they are used as template tags.\n    // Must use '{curlyOpen}'' and '{curlyClose}'\n    curlyOpen: '{',\n    curlyClose: '}',\n    config: {\n      cloud: {\n        id: _chrome2.default.getInjected('cloudId')\n      },\n      docs: {\n        base_url: _documentation_links.ELASTIC_WEBSITE_URL,\n        beats: {\n          filebeat: _documentation_links.documentationLinks.filebeat.base,\n          metricbeat: _documentation_links.documentationLinks.metricbeat.base,\n          heartbeat: _documentation_links.documentationLinks.heartbeat.base,\n          functionbeat: _documentation_links.documentationLinks.functionbeat.base\n        },\n        logstash: _documentation_links.documentationLinks.logstash.base,\n        version: _documentation_links.DOC_LINK_VERSION\n      },\n      kibana: {\n        version: _metadata.metadata.version\n      }\n    },\n    params: params\n  };\n  mustacheWriter.parse(text, TEMPLATE_TAGS);\n  return mustacheWriter.render(text, variables);\n}",null]}