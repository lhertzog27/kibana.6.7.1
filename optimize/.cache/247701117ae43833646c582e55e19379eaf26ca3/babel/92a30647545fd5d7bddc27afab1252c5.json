{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/url/redirect_when_missing.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/url/redirect_when_missing.js","mtime":1567631711763},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RedirectWhenMissingProvider = RedirectWhenMissingProvider;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _markdown = require('ui/markdown');\n\nvar _notify = require('ui/notify');\n\nvar _errors = require('../errors');\n\nvar _modules = require('../modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_modules.uiModules.get('kibana/url').service('redirectWhenMissing', function (Private) {\n  return Private(RedirectWhenMissingProvider);\n}); /*\n     * Licensed to Elasticsearch B.V. under one or more contributor\n     * license agreements. See the NOTICE file distributed with\n     * this work for additional information regarding copyright\n     * ownership. Elasticsearch B.V. licenses this file to you under\n     * the Apache License, Version 2.0 (the \"License\"); you may\n     * not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *    http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing,\n     * software distributed under the License is distributed on an\n     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     * KIND, either express or implied.  See the License for the\n     * specific language governing permissions and limitations\n     * under the License.\n     */\n\nfunction RedirectWhenMissingProvider($location, kbnUrl, Promise, i18n) {\n  /**\n   * Creates an error handler that will redirect to a url when a SavedObjectNotFound\n   * error is thrown\n   *\n   * @param  {string|object} mapping - a mapping of url's to redirect to based on the saved object that\n   *                                 couldn't be found, or just a string that will be used for all types\n   * @return {function} - the handler to pass to .catch()\n   */\n  return function (mapping) {\n    if (typeof mapping === 'string') {\n      mapping = { '*': mapping };\n    }\n\n    return function (error) {\n      // if this error is not \"404\", rethrow\n      var savedObjectNotFound = error instanceof _errors.SavedObjectNotFound;\n      var unknownVisType = error.message.indexOf('Invalid type') === 0;\n      if (unknownVisType) {\n        error.savedObjectType = 'visualization';\n      } else if (!savedObjectNotFound) {\n        throw error;\n      }\n\n      var url = mapping[error.savedObjectType] || mapping['*'];\n      if (!url) url = '/';\n\n      url += (url.indexOf('?') >= 0 ? '&' : '?') + ('notFound=' + error.savedObjectType);\n\n      _notify.toastNotifications.addWarning({\n        title: i18n('common.ui.url.savedObjectIsMissingNotificationMessage', {\n          defaultMessage: 'Saved object is missing'\n        }),\n        text: _react2.default.createElement(\n          _markdown.MarkdownSimple,\n          null,\n          error.message\n        )\n      });\n\n      kbnUrl.redirect(url);\n      return Promise.halt();\n    };\n  };\n}",null]}