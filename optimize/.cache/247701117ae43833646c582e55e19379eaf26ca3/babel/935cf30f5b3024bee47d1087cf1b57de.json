{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/storage.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/storage.js","mtime":1567631691128},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _require = require('lodash'),\n    transform = _require.transform,\n    _keys = _require.keys,\n    startsWith = _require.startsWith;\n\nvar Storage = function () {\n  function Storage(engine, prefix) {\n    _classCallCheck(this, Storage);\n\n    this.engine = engine;\n    this.prefix = prefix;\n  }\n\n  _createClass(Storage, [{\n    key: 'encode',\n    value: function encode(val) {\n      return JSON.stringify(val);\n    }\n  }, {\n    key: 'decode',\n    value: function decode(val) {\n      if (typeof val === 'string') {\n        return JSON.parse(val);\n      }\n    }\n  }, {\n    key: 'encodeKey',\n    value: function encodeKey(key) {\n      return '' + this.prefix + key;\n    }\n  }, {\n    key: 'decodeKey',\n    value: function decodeKey(key) {\n      if (startsWith(key, this.prefix)) {\n        return '' + key.slice(this.prefix.length);\n      }\n    }\n  }, {\n    key: 'set',\n    value: function set(key, val) {\n      this.engine.setItem(this.encodeKey(key), this.encode(val));\n      return val;\n    }\n  }, {\n    key: 'has',\n    value: function has(key) {\n      return this.engine.getItem(this.encodeKey(key)) != null;\n    }\n  }, {\n    key: 'get',\n    value: function get(key, _default) {\n      if (this.has(key)) {\n        return this.decode(this.engine.getItem(this.encodeKey(key)));\n      } else {\n        return _default;\n      }\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(key) {\n      return this.engine.removeItem(this.encodeKey(key));\n    }\n  }, {\n    key: 'keys',\n    value: function keys() {\n      var _this = this;\n\n      return transform(_keys(this.engine), function (ours, key) {\n        var ourKey = _this.decodeKey(key);\n        if (ourKey != null) ours.push(ourKey);\n      });\n    }\n  }]);\n\n  return Storage;\n}();\n\nvar instance = new Storage(window.localStorage, 'sense:');\n\nexports.default = instance;\nmodule.exports = exports['default'];",null]}