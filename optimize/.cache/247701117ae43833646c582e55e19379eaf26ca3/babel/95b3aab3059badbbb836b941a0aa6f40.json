{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/top_nav/get_top_nav_config.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/top_nav/get_top_nav_config.js","mtime":1567631711562},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTopNavConfig = getTopNavConfig;\n\nvar _i18n = require('@kbn/i18n');\n\nvar _dashboard_view_mode = require('../dashboard_view_mode');\n\nvar _top_nav_ids = require('./top_nav_ids');\n\n/**\n * @param {DashboardMode} dashboardMode.\n * @param actions {Object} - A mapping of TopNavIds to an action function that should run when the\n * corresponding top nav is clicked.\n * @param hideWriteControls {boolean} if true, does not include any controls that allow editing or creating objects.\n * @return {Array<kbnTopNavConfig>} - Returns an array of objects for a top nav configuration, based on the\n * mode.\n */\nfunction getTopNavConfig(dashboardMode, actions, hideWriteControls) {\n  switch (dashboardMode) {\n    case _dashboard_view_mode.DashboardViewMode.VIEW:\n      return hideWriteControls ? [getFullScreenConfig(actions[_top_nav_ids.TopNavIds.FULL_SCREEN])] : [getFullScreenConfig(actions[_top_nav_ids.TopNavIds.FULL_SCREEN]), getShareConfig(actions[_top_nav_ids.TopNavIds.SHARE]), getCloneConfig(actions[_top_nav_ids.TopNavIds.CLONE]), getEditConfig(actions[_top_nav_ids.TopNavIds.ENTER_EDIT_MODE]), getDocumentationConfig(actions[_top_nav_ids.TopNavIds.DOCUMENTATION])];\n    case _dashboard_view_mode.DashboardViewMode.EDIT:\n      return [getSaveConfig(actions[_top_nav_ids.TopNavIds.SAVE]), getViewConfig(actions[_top_nav_ids.TopNavIds.EXIT_EDIT_MODE]), getAddConfig(actions[_top_nav_ids.TopNavIds.ADD]), getOptionsConfig(actions[_top_nav_ids.TopNavIds.OPTIONS]), getShareConfig(actions[_top_nav_ids.TopNavIds.SHARE]), getDocumentationConfig(actions[_top_nav_ids.TopNavIds.DOCUMENTATION])];\n    default:\n      return [];\n  }\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */\n\nfunction getFullScreenConfig(action) {\n  return {\n    key: _i18n.i18n.translate('kbn.dashboard.topNave.fullScreenButtonAriaLabel', {\n      defaultMessage: 'full screen'\n    }),\n    description: _i18n.i18n.translate('kbn.dashboard.topNave.fullScreenConfigDescription', {\n      defaultMessage: 'Full Screen Mode'\n    }),\n    testId: 'dashboardFullScreenMode',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getEditConfig(action) {\n  return {\n    key: _i18n.i18n.translate('kbn.dashboard.topNave.editButtonAriaLabel', {\n      defaultMessage: 'edit'\n    }),\n    description: _i18n.i18n.translate('kbn.dashboard.topNave.editConfigDescription', {\n      defaultMessage: 'Switch to edit mode'\n    }),\n    testId: 'dashboardEditMode',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getSaveConfig(action) {\n  return {\n    key: _i18n.i18n.translate('kbn.dashboard.topNave.saveButtonAriaLabel', {\n      defaultMessage: 'save'\n    }),\n    description: _i18n.i18n.translate('kbn.dashboard.topNave.saveConfigDescription', {\n      defaultMessage: 'Save your dashboard'\n    }),\n    testId: 'dashboardSaveMenuItem',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getViewConfig(action) {\n  return {\n    key: _i18n.i18n.translate('kbn.dashboard.topNave.cancelButtonAriaLabel', {\n      defaultMessage: 'cancel'\n    }),\n    description: _i18n.i18n.translate('kbn.dashboard.topNave.viewConfigDescription', {\n      defaultMessage: 'Cancel editing and switch to view-only mode'\n    }),\n    testId: 'dashboardViewOnlyMode',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getCloneConfig(action) {\n  return {\n    key: _i18n.i18n.translate('kbn.dashboard.topNave.cloneButtonAriaLabel', {\n      defaultMessage: 'clone'\n    }),\n    description: _i18n.i18n.translate('kbn.dashboard.topNave.cloneConfigDescription', {\n      defaultMessage: 'Create a copy of your dashboard'\n    }),\n    testId: 'dashboardClone',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getAddConfig(action) {\n  return {\n    key: _i18n.i18n.translate('kbn.dashboard.topNave.addButtonAriaLabel', {\n      defaultMessage: 'add'\n    }),\n    description: _i18n.i18n.translate('kbn.dashboard.topNave.addConfigDescription', {\n      defaultMessage: 'Add a panel to the dashboard'\n    }),\n    testId: 'dashboardAddPanelButton',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getShareConfig(action) {\n  return {\n    key: _i18n.i18n.translate('kbn.dashboard.topNave.shareButtonAriaLabel', {\n      defaultMessage: 'share'\n    }),\n    description: _i18n.i18n.translate('kbn.dashboard.topNave.shareConfigDescription', {\n      defaultMessage: 'Share Dashboard'\n    }),\n    testId: 'shareTopNavButton',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getOptionsConfig(action) {\n  return {\n    key: _i18n.i18n.translate('kbn.dashboard.topNave.optionsButtonAriaLabel', {\n      defaultMessage: 'options'\n    }),\n    description: _i18n.i18n.translate('kbn.dashboard.topNave.optionsConfigDescription', {\n      defaultMessage: 'Options'\n    }),\n    testId: 'dashboardOptionsButton',\n    run: action\n  };\n}\n\nfunction getDocumentationConfig(action) {\n  return {\n    key: _i18n.i18n.translate('kbn.dashboard.topNav.documentationButtonKey', {\n      defaultMessage: 'documentation'\n    }),\n    description: _i18n.i18n.translate('kbn.dashboard.topNav.documentationButtonDescription', {\n      defaultMessage: 'Documentation'\n    }),\n    run: action\n  };\n}",null]}