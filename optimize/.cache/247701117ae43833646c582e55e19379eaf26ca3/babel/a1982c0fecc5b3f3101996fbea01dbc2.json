{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/vislib/lib/layout/types/gauge_layout.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vislib/lib/layout/types/gauge_layout.js","mtime":1567631711779},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GaugeLayoutProvider = GaugeLayoutProvider;\n\nvar _chart_split = require('../splits/gauge_chart/chart_split');\n\nvar _chart_split2 = _interopRequireDefault(_chart_split);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//import VislibLibLayoutSplitsPieChartChartTitleSplitProvider from '../splits/gauge_chart/chart_title_split';\nfunction GaugeLayoutProvider(Private) {\n  var chartSplit = Private(_chart_split2.default);\n  //const chartTitleSplit = Private(VislibLibLayoutSplitsPieChartChartTitleSplitProvider);\n\n  /**\n   * Specifies the visualization layout for column charts.\n   *\n   * This is done using an array of objects. The first object has\n   * a `parent` DOM element,  a DOM `type` (e.g. div, svg, etc),\n   * and a `class` (required). Each child can omit the parent object,\n   * but must include a type and class.\n   *\n   * Optionally, you can specify `datum` to be bound to the DOM\n   * element, a `splits` function that divides the selected element\n   * into more DOM elements based on a callback function provided, or\n   * a children array which nests other layout objects.\n   *\n   * Objects in children arrays are children of the current object and return\n   * DOM elements which are children of their respective parent element.\n   */\n\n  return function (el, data) {\n    if (!el || !data) {\n      throw new Error('Both an el and data need to be specified');\n    }\n\n    return [{\n      parent: el,\n      type: 'div',\n      class: 'visWrapper',\n      datum: data,\n      children: [{\n        type: 'div',\n        class: 'visAxis__splitTitles--y'\n        //splits: chartTitleSplit\n      }, {\n        type: 'div',\n        class: 'visWrapper__column',\n        children: [{\n          type: 'div',\n          class: 'visWrapper__chart',\n          splits: chartSplit\n        }, {\n          type: 'div',\n          class: 'visWrapper__alerts'\n        }, {\n          type: 'div',\n          class: 'visAxis__splitTitles--x'\n          //splits: chartTitleSplit\n        }]\n      }]\n    }];\n  };\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */",null]}