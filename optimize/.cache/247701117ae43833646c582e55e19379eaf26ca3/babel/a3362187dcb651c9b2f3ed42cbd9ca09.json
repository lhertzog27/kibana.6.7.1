{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/settings/components/field/field.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/settings/components/field/field.js","mtime":1567631711599},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Field = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nrequire('brace/theme/textmate');\n\nrequire('brace/mode/markdown');\n\nvar _notify = require('ui/notify');\n\nvar _eui = require('@elastic/eui');\n\nvar _lib = require('../../lib');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar FieldUI = function (_PureComponent) {\n  _inherits(FieldUI, _PureComponent);\n\n  function FieldUI(props) {\n    _classCallCheck(this, FieldUI);\n\n    var _this = _possibleConstructorReturn(this, (FieldUI.__proto__ || Object.getPrototypeOf(FieldUI)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var _this$props$setting = _this.props.setting,\n        type = _this$props$setting.type,\n        value = _this$props$setting.value,\n        defVal = _this$props$setting.defVal;\n\n    var editableValue = _this.getEditableValue(type, value, defVal);\n\n    _this.state = {\n      isInvalid: false,\n      error: null,\n      loading: false,\n      changeImage: false,\n      savedValue: editableValue,\n      unsavedValue: editableValue,\n      isJsonArray: type === 'json' ? Array.isArray(JSON.parse(defVal || '{}')) : false\n    };\n    _this.changeImageForm = null;\n    return _this;\n  }\n\n  _createClass(FieldUI, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var unsavedValue = this.state.unsavedValue;\n      var _nextProps$setting = nextProps.setting,\n          type = _nextProps$setting.type,\n          value = _nextProps$setting.value,\n          defVal = _nextProps$setting.defVal;\n\n      var editableValue = this.getEditableValue(type, value, defVal);\n\n      this.setState({\n        savedValue: editableValue,\n        unsavedValue: value === null || value === undefined ? editableValue : unsavedValue\n      });\n    }\n  }, {\n    key: 'getEditableValue',\n    value: function getEditableValue(type, value, defVal) {\n      var val = value === null || value === undefined ? defVal : value;\n      switch (type) {\n        case 'array':\n          return val.join(', ');\n        case 'boolean':\n          return !!val;\n        case 'number':\n          return Number(val);\n        case 'image':\n          return val;\n        default:\n          return val || '';\n      }\n    }\n  }, {\n    key: 'getDisplayedDefaultValue',\n    value: function getDisplayedDefaultValue(type, defVal) {\n      var optionLabels = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (defVal === undefined || defVal === null || defVal === '') {\n        return 'null';\n      }\n      switch (type) {\n        case 'array':\n          return defVal.join(', ');\n        case 'select':\n          return optionLabels.hasOwnProperty(defVal) ? optionLabels[defVal] : String(defVal);\n        default:\n          return String(defVal);\n      }\n    }\n  }, {\n    key: 'setLoading',\n    value: function setLoading(loading) {\n      this.setState({\n        loading: loading\n      });\n    }\n  }, {\n    key: 'clearError',\n    value: function clearError() {\n      this.setState({\n        isInvalid: false,\n        error: null\n      });\n    }\n  }, {\n    key: 'getImageAsBase64',\n    value: function getImageAsBase64(file) {\n      if (!file instanceof File) {\n        return null;\n      }\n\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      return new Promise(function (resolve, reject) {\n        reader.onload = function () {\n          resolve(reader.result);\n        };\n        reader.onerror = function (err) {\n          reject(err);\n        };\n      });\n    }\n  }, {\n    key: 'renderField',\n    value: function renderField(setting) {\n      var _this2 = this;\n\n      var _state = this.state,\n          loading = _state.loading,\n          changeImage = _state.changeImage,\n          unsavedValue = _state.unsavedValue;\n      var name = setting.name,\n          value = setting.value,\n          type = setting.type,\n          options = setting.options,\n          _setting$optionLabels = setting.optionLabels,\n          optionLabels = _setting$optionLabels === undefined ? {} : _setting$optionLabels,\n          isOverridden = setting.isOverridden,\n          ariaName = setting.ariaName;\n\n\n      switch (type) {\n        case 'boolean':\n          return _react2.default.createElement(_eui.EuiSwitch, {\n            label: !!unsavedValue ? _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.settings.field.onLabel',\n              defaultMessage: 'On'\n            }) : _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.settings.field.offLabel',\n              defaultMessage: 'Off'\n            }),\n            checked: !!unsavedValue,\n            onChange: this.onFieldChange,\n            disabled: loading || isOverridden,\n            onKeyDown: this.onFieldKeyDown,\n            'data-test-subj': 'advancedSetting-editField-' + name,\n            'aria-label': ariaName\n          });\n        case 'markdown':\n        case 'json':\n          return _react2.default.createElement(\n            'div',\n            { 'data-test-subj': 'advancedSetting-editField-' + name },\n            _react2.default.createElement(_eui.EuiCodeEditor, {\n              'aria-label': ariaName,\n              mode: type,\n              theme: 'textmate',\n              value: unsavedValue,\n              onChange: this.onCodeEditorChange,\n              width: '100%',\n              height: 'auto',\n              minLines: 6,\n              maxLines: 30,\n              isReadOnly: isOverridden,\n              setOptions: {\n                showLineNumbers: false,\n                tabSize: 2\n              },\n              editorProps: {\n                $blockScrolling: Infinity\n              }\n\n            })\n          );\n        case 'image':\n          if (!(0, _lib.isDefaultValue)(setting) && !changeImage) {\n            return _react2.default.createElement(_eui.EuiImage, {\n              'aria-label': ariaName,\n              allowFullScreen: true,\n              url: value,\n              alt: name\n            });\n          } else {\n            return _react2.default.createElement(_eui.EuiFilePicker, {\n              disabled: loading || isOverridden,\n              onChange: this.onImageChange,\n              accept: '.jpg,.jpeg,.png',\n              ref: function ref(input) {\n                _this2.changeImageForm = input;\n              },\n              onKeyDown: this.onFieldEscape,\n              'data-test-subj': 'advancedSetting-editField-' + name\n            });\n          }\n        case 'select':\n          return _react2.default.createElement(_eui.EuiSelect, {\n            'aria-label': ariaName,\n            value: unsavedValue,\n            options: options.map(function (option) {\n              return {\n                text: optionLabels.hasOwnProperty(option) ? optionLabels[option] : option,\n                value: option\n              };\n            }),\n            onChange: this.onFieldChange,\n            isLoading: loading,\n            disabled: loading || isOverridden,\n            onKeyDown: this.onFieldKeyDown,\n            'data-test-subj': 'advancedSetting-editField-' + name\n          });\n        case 'number':\n          return _react2.default.createElement(_eui.EuiFieldNumber, {\n            'aria-label': ariaName,\n            value: unsavedValue,\n            onChange: this.onFieldChange,\n            isLoading: loading,\n            disabled: loading || isOverridden,\n            onKeyDown: this.onFieldKeyDown,\n            'data-test-subj': 'advancedSetting-editField-' + name\n          });\n        default:\n          return _react2.default.createElement(_eui.EuiFieldText, {\n            'aria-label': ariaName,\n            value: unsavedValue,\n            onChange: this.onFieldChange,\n            isLoading: loading,\n            disabled: loading || isOverridden,\n            onKeyDown: this.onFieldKeyDown,\n            'data-test-subj': 'advancedSetting-editField-' + name\n          });\n      }\n    }\n  }, {\n    key: 'renderLabel',\n    value: function renderLabel(setting) {\n      return setting.name;\n    }\n  }, {\n    key: 'renderHelpText',\n    value: function renderHelpText(setting) {\n      if (setting.isOverridden) {\n        return _react2.default.createElement(\n          _eui.EuiText,\n          { size: 'xs' },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'kbn.management.settings.field.helpText',\n            defaultMessage: 'This setting is overridden by the Kibana server and can not be changed.'\n          })\n        );\n      }\n\n      var defaultLink = this.renderResetToDefaultLink(setting);\n      var imageLink = this.renderChangeImageLink(setting);\n\n      if (defaultLink || imageLink) {\n        return _react2.default.createElement(\n          'span',\n          null,\n          defaultLink,\n          imageLink\n        );\n      }\n\n      return null;\n    }\n  }, {\n    key: 'renderTitle',\n    value: function renderTitle(setting) {\n      return _react2.default.createElement(\n        'h3',\n        null,\n        setting.displayName || setting.name,\n        setting.isCustom ? _react2.default.createElement(_eui.EuiIconTip, {\n          type: 'asterisk',\n          color: 'primary',\n          'aria-label': this.props.intl.formatMessage({\n            id: 'kbn.management.settings.field.customSettingAriaLabel',\n            defaultMessage: 'Custom setting'\n          }),\n          content: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'kbn.management.settings.field.customSettingTooltip',\n            defaultMessage: 'Custom setting'\n          })\n        }) : ''\n      );\n    }\n  }, {\n    key: 'renderDescription',\n    value: function renderDescription(setting) {\n      var description = void 0;\n\n      if (_react2.default.isValidElement(setting.description)) {\n        description = setting.description;\n      } else {\n        description = _react2.default.createElement('div', {\n          /*\n           * Justification for dangerouslySetInnerHTML:\n           * Setting description may contain formatting and links to documentation.\n           */\n          dangerouslySetInnerHTML: { __html: setting.description } //eslint-disable-line react/no-danger\n        });\n      }\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        description,\n        this.renderDefaultValue(setting)\n      );\n    }\n  }, {\n    key: 'renderDefaultValue',\n    value: function renderDefaultValue(setting) {\n      var type = setting.type,\n          defVal = setting.defVal,\n          optionLabels = setting.optionLabels;\n\n      if ((0, _lib.isDefaultValue)(setting)) {\n        return;\n      }\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        _react2.default.createElement(\n          _eui.EuiText,\n          { size: 'xs' },\n          type === 'json' ? _react2.default.createElement(\n            _react.Fragment,\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.settings.field.defaultValueTypeJsonText',\n              defaultMessage: 'Default: {value}',\n              values: {\n                value: _react2.default.createElement(\n                  _eui.EuiCodeBlock,\n                  {\n                    language: 'json',\n                    paddingSize: 's',\n                    overflowHeight: defVal.length >= 500 ? 300 : null\n                  },\n                  this.getDisplayedDefaultValue(type, defVal)\n                )\n              }\n            })\n          ) : _react2.default.createElement(\n            _react.Fragment,\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.settings.field.defaultValueText',\n              defaultMessage: 'Default: {value}',\n              values: {\n                value: _react2.default.createElement(\n                  _eui.EuiCode,\n                  null,\n                  this.getDisplayedDefaultValue(type, defVal, optionLabels)\n                )\n              }\n            })\n          )\n        )\n      );\n    }\n  }, {\n    key: 'renderResetToDefaultLink',\n    value: function renderResetToDefaultLink(setting) {\n      var ariaName = setting.ariaName,\n          name = setting.name;\n\n      if ((0, _lib.isDefaultValue)(setting)) {\n        return;\n      }\n      return _react2.default.createElement(\n        'span',\n        null,\n        _react2.default.createElement(\n          _eui.EuiLink,\n          {\n            'aria-label': this.props.intl.formatMessage({\n              id: 'kbn.management.settings.field.resetToDefaultLinkAriaLabel',\n              defaultMessage: 'Reset {ariaName} to default'\n            }, {\n              ariaName: ariaName\n            }),\n            onClick: this.resetField,\n            'data-test-subj': 'advancedSetting-resetField-' + name\n          },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'kbn.management.settings.field.resetToDefaultLinkText',\n            defaultMessage: 'Reset to default'\n          })\n        ),\n        '\\xA0\\xA0\\xA0'\n      );\n    }\n  }, {\n    key: 'renderChangeImageLink',\n    value: function renderChangeImageLink(setting) {\n      var changeImage = this.state.changeImage;\n      var type = setting.type,\n          value = setting.value,\n          ariaName = setting.ariaName,\n          name = setting.name;\n\n      if (type !== 'image' || !value || changeImage) {\n        return;\n      }\n      return _react2.default.createElement(\n        'span',\n        null,\n        _react2.default.createElement(\n          _eui.EuiLink,\n          {\n            'aria-label': this.props.intl.formatMessage({\n              id: 'kbn.management.settings.field.changeImageLinkAriaLabel',\n              defaultMessage: 'Change {ariaName}'\n            }, {\n              ariaName: ariaName\n            }),\n            onClick: this.changeImage,\n            'data-test-subj': 'advancedSetting-changeImage-' + name\n          },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'kbn.management.settings.field.changeImageLinkText',\n            defaultMessage: 'Change image'\n          })\n        )\n      );\n    }\n  }, {\n    key: 'renderActions',\n    value: function renderActions(setting) {\n      var _this3 = this;\n\n      var ariaName = setting.ariaName,\n          name = setting.name;\n      var _state2 = this.state,\n          loading = _state2.loading,\n          isInvalid = _state2.isInvalid,\n          changeImage = _state2.changeImage,\n          savedValue = _state2.savedValue,\n          unsavedValue = _state2.unsavedValue;\n\n      var isDisabled = loading || setting.isOverridden;\n      var intl = this.props.intl;\n\n\n      if (savedValue === unsavedValue && !changeImage) {\n        return;\n      }\n\n      return _react2.default.createElement(\n        _eui.EuiFormRow,\n        { className: 'mgtAdvancedSettings__fieldActions', hasEmptyLabelSpace: true },\n        _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          null,\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiButton,\n              {\n                fill: true,\n                'aria-label': intl.formatMessage({\n                  id: 'kbn.management.settings.field.saveButtonAriaLabel',\n                  defaultMessage: 'Save {ariaName}'\n                }, {\n                  ariaName: ariaName\n                }),\n                onClick: this.saveEdit,\n                disabled: isDisabled || isInvalid,\n                'data-test-subj': 'advancedSetting-saveEditField-' + name\n              },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.management.settings.field.saveButtonLabel',\n                defaultMessage: 'Save'\n              })\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiButtonEmpty,\n              {\n                'aria-label': intl.formatMessage({\n                  id: 'kbn.management.settings.field.cancelEditingButtonAriaLabel',\n                  defaultMessage: 'Cancel editing {ariaName}'\n                }, {\n                  ariaName: ariaName\n                }),\n                onClick: function onClick() {\n                  return changeImage ? _this3.cancelChangeImage() : _this3.cancelEdit();\n                },\n                disabled: isDisabled,\n                'data-test-subj': 'advancedSetting-cancelEditField-' + name\n              },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.management.settings.field.cancelEditingButtonLabel',\n                defaultMessage: 'Cancel'\n              })\n            )\n          )\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var setting = this.props.setting;\n      var _state3 = this.state,\n          error = _state3.error,\n          isInvalid = _state3.isInvalid;\n\n\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { className: 'mgtAdvancedSettings__field' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiDescribedFormGroup,\n            {\n              className: 'mgtAdvancedSettings__fieldWrapper',\n              title: this.renderTitle(setting),\n              description: this.renderDescription(setting),\n              idAria: setting.name + '-aria'\n            },\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                isInvalid: isInvalid,\n                error: error,\n                label: this.renderLabel(setting),\n                helpText: this.renderHelpText(setting),\n                describedByIds: [setting.name + '-aria'],\n                className: 'mgtAdvancedSettings__fieldRow'\n              },\n              this.renderField(setting)\n            )\n          )\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          this.renderActions(setting)\n        )\n      );\n    }\n  }]);\n\n  return FieldUI;\n}(_react.PureComponent);\n\nFieldUI.propTypes = {\n  setting: _propTypes2.default.object.isRequired,\n  save: _propTypes2.default.func.isRequired,\n  clear: _propTypes2.default.func.isRequired\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this4 = this;\n\n  this.onCodeEditorChange = function (value) {\n    var type = _this4.props.setting.type;\n    var isJsonArray = _this4.state.isJsonArray;\n\n\n    var newUnsavedValue = undefined;\n    var isInvalid = false;\n    var error = null;\n\n    switch (type) {\n      case 'json':\n        newUnsavedValue = value.trim() || (isJsonArray ? '[]' : '{}');\n        try {\n          JSON.parse(newUnsavedValue);\n        } catch (e) {\n          isInvalid = true;\n          error = _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'kbn.management.settings.field.codeEditorSyntaxErrorMessage',\n            defaultMessage: 'Invalid JSON syntax'\n          });\n        }\n        break;\n      default:\n        newUnsavedValue = value;\n    }\n\n    _this4.setState({\n      error: error,\n      isInvalid: isInvalid,\n      unsavedValue: newUnsavedValue\n    });\n  };\n\n  this.onFieldChange = function (e) {\n    var value = e.target.value;\n    var type = _this4.props.setting.type;\n    var unsavedValue = _this4.state.unsavedValue;\n\n\n    var newUnsavedValue = undefined;\n\n    switch (type) {\n      case 'boolean':\n        newUnsavedValue = !unsavedValue;\n        break;\n      case 'number':\n        newUnsavedValue = Number(value);\n        break;\n      default:\n        newUnsavedValue = value;\n    }\n    _this4.setState({\n      unsavedValue: newUnsavedValue\n    });\n  };\n\n  this.onFieldKeyDown = function (_ref) {\n    var keyCode = _ref.keyCode;\n\n    if (keyCode === _eui.keyCodes.ENTER) {\n      _this4.saveEdit();\n    }\n    if (keyCode === _eui.keyCodes.ESCAPE) {\n      _this4.cancelEdit();\n    }\n  };\n\n  this.onFieldEscape = function (_ref2) {\n    var keyCode = _ref2.keyCode;\n\n    if (keyCode === _eui.keyCodes.ESCAPE) {\n      _this4.cancelEdit();\n    }\n  };\n\n  this.onImageChange = function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(files) {\n      var file, maxSize, base64Image, isInvalid;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (files.length) {\n                _context.next = 4;\n                break;\n              }\n\n              _this4.clearError();\n              _this4.setState({\n                unsavedValue: null\n              });\n              return _context.abrupt('return');\n\n            case 4:\n              file = files[0];\n              maxSize = _this4.props.setting.options.maxSize;\n              _context.prev = 6;\n              _context.next = 9;\n              return _this4.getImageAsBase64(file);\n\n            case 9:\n              base64Image = _context.sent;\n              isInvalid = !!(maxSize && maxSize.length && base64Image.length > maxSize.length);\n\n              _this4.setState({\n                isInvalid: isInvalid,\n                error: isInvalid ? _this4.props.intl.formattedMessage({\n                  id: 'kbn.management.settings.field.imageTooLargeErrorMessage',\n                  defaultMessage: 'Image is too large, maximum size is {maxSizeDescription}'\n                }, {\n                  maxSizeDescription: maxSize.description\n                }) : null,\n                changeImage: true,\n                unsavedValue: base64Image\n              });\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context['catch'](6);\n\n              _notify.toastNotifications.addDanger(_this4.props.intl.formatMessage({\n                id: 'kbn.management.settings.field.imageChangeErrorMessage',\n                defaultMessage: 'Image could not be saved'\n              }));\n              _this4.cancelChangeImage();\n\n            case 18:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this4, [[6, 14]]);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  this.changeImage = function () {\n    _this4.setState({\n      changeImage: true\n    });\n  };\n\n  this.cancelChangeImage = function () {\n    var savedValue = _this4.state.savedValue;\n\n\n    if (_this4.changeImageForm) {\n      _this4.changeImageForm.fileInput.value = null;\n      _this4.changeImageForm.handleChange();\n    }\n\n    _this4.setState({\n      changeImage: false,\n      unsavedValue: savedValue\n    });\n  };\n\n  this.cancelEdit = function () {\n    var savedValue = _this4.state.savedValue;\n\n    _this4.clearError();\n    _this4.setState({\n      unsavedValue: savedValue\n    });\n  };\n\n  this.saveEdit = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var _props$setting, name, defVal, type, _state4, changeImage, savedValue, unsavedValue, isJsonArray, valueToSave, isSameValue;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _props$setting = _this4.props.setting, name = _props$setting.name, defVal = _props$setting.defVal, type = _props$setting.type;\n            _state4 = _this4.state, changeImage = _state4.changeImage, savedValue = _state4.savedValue, unsavedValue = _state4.unsavedValue, isJsonArray = _state4.isJsonArray;\n\n            if (!(savedValue === unsavedValue)) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt('return');\n\n          case 4:\n            valueToSave = unsavedValue;\n            isSameValue = false;\n            _context2.t0 = type;\n            _context2.next = _context2.t0 === 'array' ? 9 : _context2.t0 === 'json' ? 12 : 14;\n            break;\n\n          case 9:\n            valueToSave = valueToSave.split(',').map(function (val) {\n              return val.trim();\n            });\n            isSameValue = valueToSave.join(',') === defVal.join(',');\n            return _context2.abrupt('break', 15);\n\n          case 12:\n            valueToSave = valueToSave.trim();\n            valueToSave = valueToSave || (isJsonArray ? '[]' : '{}');\n\n          case 14:\n            isSameValue = valueToSave === defVal;\n\n          case 15:\n\n            _this4.setLoading(true);\n            _context2.prev = 16;\n\n            if (!isSameValue) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.next = 20;\n            return _this4.props.clear(name);\n\n          case 20:\n            _context2.next = 24;\n            break;\n\n          case 22:\n            _context2.next = 24;\n            return _this4.props.save(name, valueToSave);\n\n          case 24:\n\n            if (changeImage) {\n              _this4.cancelChangeImage();\n            }\n            _context2.next = 30;\n            break;\n\n          case 27:\n            _context2.prev = 27;\n            _context2.t1 = _context2['catch'](16);\n\n            _notify.toastNotifications.addDanger(_this4.props.intl.formatMessage({\n              id: 'kbn.management.settings.field.saveFieldErrorMessage',\n              defaultMessage: 'Unable to save {name}'\n            }, { name: name }));\n\n          case 30:\n            _this4.setLoading(false);\n\n          case 31:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, _this4, [[16, 27]]);\n  }));\n  this.resetField = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var name;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            name = _this4.props.setting.name;\n\n            _this4.setLoading(true);\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _this4.props.clear(name);\n\n          case 5:\n            _this4.cancelChangeImage();\n            _this4.clearError();\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3['catch'](2);\n\n            _notify.toastNotifications.addDanger(_this4.props.intl.formatMessage({\n              id: 'kbn.management.settings.field.resetFieldErrorMessage',\n              defaultMessage: 'Unable to reset {name}'\n            }, { name: name }));\n\n          case 12:\n            _this4.setLoading(false);\n\n          case 13:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, _this4, [[2, 9]]);\n  }));\n};\n\nvar Field = exports.Field = (0, _react3.injectI18n)(FieldUI);",null]}