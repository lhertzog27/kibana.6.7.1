{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/index_patterns/_field.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/index_patterns/_field.js","mtime":1567631711738},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Field = Field;\n\nvar _obj_define = require('../utils/obj_define');\n\nvar _field_format = require('../../field_formats/field_format');\n\nvar _field_formats = require('../registry/field_formats');\n\nvar _utils = require('../../../utils');\n\nvar _shorten_dotted_string = require('../../../legacy/core_plugins/kibana/common/utils/shorten_dotted_string');\n\nvar _notify = require('ui/notify');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction Field(indexPattern, spec) {\n  // unwrap old instances of Field\n  if (spec instanceof Field) spec = spec.$$spec;\n\n  // construct this object using ObjDefine class, which\n  // extends the Field.prototype but gets it's properties\n  // defined using the logic below\n  var obj = new _obj_define.ObjDefine(spec, Field.prototype);\n\n  if (spec.name === '_source') {\n    spec.type = '_source';\n  }\n\n  // find the type for this field, fallback to unknown type\n  var type = (0, _utils.getKbnFieldType)(spec.type);\n  if (spec.type && !type) {\n    var title = _i18n.i18n.translate('common.ui.indexPattern.unknownFieldHeader', { values: { type: spec.type }, defaultMessage: 'Unknown field type {type}' });\n    var text = _i18n.i18n.translate('common.ui.indexPattern.unknownFieldErrorMessage', {\n      values: { name: spec.name, title: indexPattern.title },\n      defaultMessage: 'Field {name} in indexPattern {title} is using an unknown field type.' });\n\n    _notify.toastNotifications.addDanger({\n      title: title,\n      text: text\n    });\n  }\n\n  if (!type) type = (0, _utils.getKbnFieldType)('unknown');\n\n  var format = spec.format;\n  if (!format || !(format instanceof _field_format.FieldFormat)) {\n    format = indexPattern.fieldFormatMap[spec.name] || _field_formats.fieldFormats.getDefaultInstance(spec.type);\n  }\n\n  var indexed = !!spec.indexed;\n  var scripted = !!spec.scripted;\n  var searchable = !!spec.searchable || scripted;\n  var aggregatable = !!spec.aggregatable || scripted;\n  var readFromDocValues = !!spec.readFromDocValues && !scripted;\n  var sortable = spec.name === '_score' || (indexed || aggregatable) && type.sortable;\n  var filterable = spec.name === '_id' || scripted || (indexed || searchable) && type.filterable;\n  var visualizable = aggregatable;\n\n  obj.fact('name');\n  obj.fact('type');\n  obj.writ('count', spec.count || 0);\n\n  // scripted objs\n  obj.fact('scripted', scripted);\n  obj.writ('script', scripted ? spec.script : null);\n  obj.writ('lang', scripted ? spec.lang || 'painless' : null);\n\n  // stats\n  obj.fact('searchable', searchable);\n  obj.fact('aggregatable', aggregatable);\n  obj.fact('readFromDocValues', readFromDocValues);\n\n  // usage flags, read-only and won't be saved\n  obj.comp('format', format);\n  obj.comp('sortable', sortable);\n  obj.comp('filterable', filterable);\n  obj.comp('visualizable', visualizable);\n\n  // computed values\n  obj.comp('indexPattern', indexPattern);\n  obj.comp('displayName', _chrome2.default.getUiSettingsClient().get('shortDots:enable') ? (0, _shorten_dotted_string.shortenDottedString)(spec.name) : spec.name);\n  obj.comp('$$spec', spec);\n\n  // conflict info\n  obj.writ('conflictDescriptions');\n\n  return obj.create();\n}\n\nObject.defineProperties(Field.prototype, {\n  indexed: {\n    get: function get() {\n      throw new Error('field.indexed has been removed, see https://github.com/elastic/kibana/pull/11969');\n    }\n  },\n  analyzed: {\n    get: function get() {\n      throw new Error('field.analyzed has been removed, see https://github.com/elastic/kibana/pull/11969');\n    }\n  },\n  doc_values: {\n    get: function get() {\n      throw new Error('field.doc_values has been removed, see https://github.com/elastic/kibana/pull/11969');\n    }\n  }\n});\n\nField.prototype.routes = {\n  edit: '/management/kibana/indices/{{indexPattern.id}}/field/{{name}}'\n};",null]}