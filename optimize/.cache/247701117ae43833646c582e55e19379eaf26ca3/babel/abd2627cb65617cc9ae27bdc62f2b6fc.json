{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/saved_objects/saved_objects_client.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/saved_objects/saved_objects_client.js","mtime":1567631711752},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SavedObjectsClient = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nicensed to Elasticsearch B.V. under one or more contributor\nlicense agreements. See the NOTICE file distributed with\nthis work for additional information regarding copyright\nownership. Elasticsearch B.V. licenses this file to you under\nthe Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * under the License.\nn\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _url = require('url');\n\nvar _case_conversion = require('../../../utils/case_conversion');\n\nvar _saved_object = require('./saved_object');\n\nvar _error_auto_create_index = require('../error_auto_create_index');\n\nvar _kfetch = require('ui/kfetch');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar join = function join() {\n  for (var _len = arguments.length, uriComponents = Array(_len), _key = 0; _key < _len; _key++) {\n    uriComponents[_key] = arguments[_key];\n  }\n\n  return uriComponents.filter(Boolean).map(encodeURIComponent).join('/');\n};\n\n/**\n * Interval that requests are batched for\n * @type {integer}\n */\nvar BATCH_INTERVAL = 100;\n\nvar API_BASE_URL = '/api/saved_objects/';\n\nvar SavedObjectsClient = exports.SavedObjectsClient = function () {\n  function SavedObjectsClient() {\n    var _this = this;\n\n    _classCallCheck(this, SavedObjectsClient);\n\n    this.create = function (type) {\n      var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (!type || !attributes) {\n        return Promise.reject(new Error('requires type and attributes'));\n      }\n\n      var path = _this._getPath([type, options.id]);\n      var query = _lodash2.default.pick(options, ['overwrite']);\n\n      return _this._request({ method: 'POST', path: path, query: query, body: { attributes: attributes, migrationVersion: options.migrationVersion } }).catch(function (error) {\n        if ((0, _error_auto_create_index.isAutoCreateIndexError)(error)) {\n          return (0, _error_auto_create_index.showAutoCreateIndexErrorPage)();\n        }\n\n        throw error;\n      }).then(function (resp) {\n        return _this._createSavedObject(resp);\n      });\n    };\n\n    this.bulkCreate = function () {\n      var objects = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var path = _this._getPath(['_bulk_create']);\n      var query = _lodash2.default.pick(options, ['overwrite']);\n\n      return _this._request({ method: 'POST', path: path, query: query, body: objects }).then(function (resp) {\n        resp.saved_objects = resp.saved_objects.map(function (d) {\n          return _this._createSavedObject(d);\n        });\n        return (0, _case_conversion.keysToCamelCaseShallow)(resp);\n      });\n    };\n\n    this.delete = function (type, id) {\n      if (!type || !id) {\n        return Promise.reject(new Error('requires type and id'));\n      }\n\n      return _this._request({ method: 'DELETE', path: _this._getPath([type, id]) });\n    };\n\n    this.find = function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var path = _this._getPath(['_find']);\n      var query = (0, _case_conversion.keysToSnakeCaseShallow)(options);\n\n      return _this._request({ method: 'GET', path: path, query: query }).then(function (resp) {\n        resp.saved_objects = resp.saved_objects.map(function (d) {\n          return _this._createSavedObject(d);\n        });\n        return (0, _case_conversion.keysToCamelCaseShallow)(resp);\n      });\n    };\n\n    this.get = function (type, id) {\n      if (!type || !id) {\n        return Promise.reject(new Error('requires type and id'));\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this.batchQueue.push({ type: type, id: id, resolve: resolve, reject: reject });\n        _this._processBatchQueue();\n      });\n    };\n\n    this.bulkGet = function () {\n      var objects = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var path = _this._getPath(['_bulk_get']);\n      var filteredObjects = objects.map(function (obj) {\n        return _lodash2.default.pick(obj, ['id', 'type']);\n      });\n\n      return _this._request({ method: 'POST', path: path, body: filteredObjects }).then(function (resp) {\n        resp.saved_objects = resp.saved_objects.map(function (d) {\n          return _this._createSavedObject(d);\n        });\n        return (0, _case_conversion.keysToCamelCaseShallow)(resp);\n      });\n    };\n\n    this._processBatchQueue = _lodash2.default.throttle(function () {\n      var queue = _lodash2.default.cloneDeep(_this.batchQueue);\n      _this.batchQueue = [];\n\n      _this.bulkGet(queue).then(function (_ref) {\n        var savedObjects = _ref.savedObjects;\n\n        queue.forEach(function (queueItem) {\n          var foundObject = savedObjects.find(function (savedObject) {\n            return savedObject.id === queueItem.id & savedObject.type === queueItem.type;\n          });\n\n          if (!foundObject) {\n            return queueItem.resolve(_this._createSavedObject(_lodash2.default.pick(queueItem, ['id', 'type'])));\n          }\n\n          queueItem.resolve(foundObject);\n        });\n      }).catch(function (err) {\n        queue.forEach(function (queueItem) {\n          queueItem.reject(err);\n        });\n      });\n    }, BATCH_INTERVAL, { leading: false });\n\n    this.batchQueue = [];\n  }\n\n  /**\n   * Persists an object\n   *\n   * @param {string} type\n   * @param {object} [attributes={}]\n   * @param {object} [options={}]\n   * @property {string} [options.id] - force id on creation, not recommended\n   * @property {boolean} [options.overwrite=false]\n   * @property {object} [options.migrationVersion]\n   * @returns {promise} - SavedObject({ id, type, version, attributes })\n   */\n\n\n  /**\n   * Creates multiple documents at once\n   *\n   * @param {array} objects - [{ type, id, attributes, migrationVersion }]\n   * @param {object} [options={}]\n   * @property {boolean} [options.overwrite=false]\n   * @returns {promise} - { savedObjects: [{ id, type, version, attributes, error: { message } }]}\n   */\n\n\n  /**\n   * Deletes an object\n   *\n   * @param {string} type\n   * @param {string} id\n   * @returns {promise}\n   */\n\n\n  /**\n   * Search for objects\n   *\n   * @param {object} [options={}]\n   * @property {string} options.type\n   * @property {string} options.search\n   * @property {string} options.searchFields - see Elasticsearch Simple Query String\n   *                                        Query field argument for more information\n   * @property {integer} [options.page=1]\n   * @property {integer} [options.perPage=20]\n   * @property {array} options.fields\n   * @returns {promise} - { savedObjects: [ SavedObject({ id, type, version, attributes }) ]}\n   */\n\n\n  /**\n   * Fetches a single object\n   *\n   * @param {string} type\n   * @param {string} id\n   * @returns {promise} - SavedObject({ id, type, version, attributes })\n   */\n\n\n  /**\n   * Returns an array of objects by id\n   *\n   * @param {array} objects - an array ids, or an array of objects containing id and optionally type\n   * @returns {promise} - { savedObjects: [ SavedObject({ id, type, version, attributes }) ] }\n   * @example\n   *\n   * bulkGet([\n   *   { id: 'one', type: 'config' },\n   *   { id: 'foo', type: 'index-pattern' }\n   * ])\n   */\n\n\n  _createClass(SavedObjectsClient, [{\n    key: 'update',\n\n\n    /**\n     * Updates an object\n     *\n     * @param {string} type\n     * @param {string} id\n     * @param {object} attributes\n     * @param {object} options\n     * @prop {integer} options.version - ensures version matches that of persisted object\n     * @prop {object} options.migrationVersion - The optional migrationVersion of this document\n     * @returns {promise}\n     */\n    value: function update(type, id, attributes) {\n      var _this2 = this;\n\n      var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n          version = _ref2.version,\n          migrationVersion = _ref2.migrationVersion;\n\n      if (!type || !id || !attributes) {\n        return Promise.reject(new Error('requires type, id and attributes'));\n      }\n\n      var path = this._getPath([type, id]);\n      var body = {\n        attributes: attributes,\n        migrationVersion: migrationVersion,\n        version: version\n      };\n\n      return this._request({ method: 'PUT', path: path, body: body }).then(function (resp) {\n        return _this2._createSavedObject(resp);\n      });\n    }\n\n    /**\n     * Throttled processing of get requests into bulk requests at 100ms interval\n     */\n\n  }, {\n    key: '_createSavedObject',\n    value: function _createSavedObject(options) {\n      return new _saved_object.SavedObject(this, options);\n    }\n  }, {\n    key: '_getPath',\n    value: function _getPath(path) {\n      if (!path) {\n        return API_BASE_URL;\n      }\n\n      return (0, _url.resolve)(API_BASE_URL, join.apply(undefined, _toConsumableArray(path)));\n    }\n  }, {\n    key: '_request',\n    value: function _request(_ref3) {\n      var method = _ref3.method,\n          path = _ref3.path,\n          query = _ref3.query,\n          body = _ref3.body;\n\n      if (method === 'GET' && body) {\n        return Promise.reject(new Error('body not permitted for GET requests'));\n      }\n\n      return (0, _kfetch.kfetch)({ method: method, pathname: path, query: query, body: JSON.stringify(body) });\n    }\n  }]);\n\n  return SavedObjectsClient;\n}();",null]}