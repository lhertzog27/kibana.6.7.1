{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/agg_param.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/agg_param.js","mtime":1567631711770},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _modules = require('../../../modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n_modules.uiModules.get('app/visualize').directive('visAggParamEditor', function (config) {\n  return {\n    restrict: 'E',\n    scope: true,\n    template: function template($el) {\n      return $el.html();\n    },\n    link: {\n      pre: function pre($scope, $el, attr) {\n        $scope.$bind('aggParam', attr.aggParam);\n      },\n      post: function post($scope) {\n        $scope.config = config;\n\n        $scope.optionEnabled = function (option) {\n          if (option && _lodash2.default.isFunction(option.enabled)) {\n            return option.enabled($scope.agg);\n          }\n\n          return true;\n        };\n      }\n    }\n  };\n});",null]}