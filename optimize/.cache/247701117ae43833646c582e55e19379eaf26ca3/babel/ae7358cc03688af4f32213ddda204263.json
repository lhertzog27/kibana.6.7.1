{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/index_patterns/route_setup/load_default.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/index_patterns/route_setup/load_default.js","mtime":1567631711739},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (opts) {\n  opts = opts || {};\n  var whenMissingRedirectTo = opts.whenMissingRedirectTo || null;\n\n  _routes2.default.addSetupWork(function loadDefaultIndexPattern(Private, Promise, $route, config) {\n    var getIds = Private(_get.IndexPatternsGetProvider)('id');\n    var route = _lodash2.default.get($route, 'current.$$route');\n\n    if (!route.requireDefaultIndex) {\n      return;\n    }\n\n    return getIds().then(function (patterns) {\n      var defaultId = config.get('defaultIndex');\n      var defined = !!defaultId;\n      var exists = _lodash2.default.contains(patterns, defaultId);\n\n      if (defined && !exists) {\n        config.remove('defaultIndex');\n        defaultId = defined = false;\n      }\n\n      if (!defined) {\n        // If there is only one index pattern, set it as default\n        if (patterns.length === 1) {\n          defaultId = patterns[0];\n          config.set('defaultIndex', defaultId);\n        } else {\n          throw new _errors.NoDefaultIndexPattern();\n        }\n      }\n    });\n  }).afterWork(\n  // success\n  null,\n\n  // failure\n  function (err, kbnUrl) {\n    var hasDefault = !(err instanceof _errors.NoDefaultIndexPattern);\n    if (hasDefault || !whenMissingRedirectTo) throw err; // rethrow\n\n    kbnUrl.change(whenMissingRedirectTo);\n\n    displayBanner();\n  });\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _notify = require('../../notify');\n\nvar _errors = require('../../errors');\n\nvar _get = require('../_get');\n\nvar _routes = require('../../routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _eui = require('@elastic/eui');\n\nvar _timers = require('timers');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar bannerId = void 0; /*\n                        * Licensed to Elasticsearch B.V. under one or more contributor\n                        * license agreements. See the NOTICE file distributed with\n                        * this work for additional information regarding copyright\n                        * ownership. Elasticsearch B.V. licenses this file to you under\n                        * the Apache License, Version 2.0 (the \"License\"); you may\n                        * not use this file except in compliance with the License.\n                        * You may obtain a copy of the License at\n                        *\n                        *    http://www.apache.org/licenses/LICENSE-2.0\n                        *\n                        * Unless required by applicable law or agreed to in writing,\n                        * software distributed under the License is distributed on an\n                        * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                        * KIND, either express or implied.  See the License for the\n                        * specific language governing permissions and limitations\n                        * under the License.\n                        */\n\nvar timeoutId = void 0;\n\nfunction displayBanner() {\n  (0, _timers.clearTimeout)(timeoutId);\n\n  // Avoid being hostile to new users who don't have an index pattern setup yet\n  // give them a friendly info message instead of a terse error message\n  bannerId = _notify.banners.set({\n    id: bannerId, // initially undefined, but reused after first set\n    component: _react2.default.createElement(_eui.EuiCallOut, {\n      color: 'warning',\n      iconType: 'iInCircle',\n      title: _i18n.i18n.translate('common.ui.indexPattern.bannerLabel',\n      //eslint-disable-next-line max-len\n      { defaultMessage: 'In order to visualize and explore data in Kibana, you\\'ll need to create an index pattern to retrieve data from Elasticsearch.' })\n    })\n  });\n\n  // hide the message after the user has had a chance to acknowledge it -- so it doesn't permanently stick around\n  timeoutId = setTimeout(function () {\n    _notify.banners.remove(bannerId);\n    timeoutId = undefined;\n  }, 15000);\n}\n\n// eslint-disable-next-line @elastic/kibana-custom/no-default-export\nmodule.exports = exports['default'];",null]}