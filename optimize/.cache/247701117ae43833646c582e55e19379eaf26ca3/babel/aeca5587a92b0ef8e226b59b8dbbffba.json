{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/common/agg_lookup.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/common/agg_lookup.js","mtime":1567631711608},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isBasicAgg = isBasicAgg;\nexports.createOptions = createOptions;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar lookup = {\n  count: _i18n.i18n.translate('tsvb.aggLookup.countLabel', { defaultMessage: 'Count' }),\n  calculation: _i18n.i18n.translate('tsvb.aggLookup.calculationLabel', { defaultMessage: 'Calculation' }),\n  std_deviation: _i18n.i18n.translate('tsvb.aggLookup.deviationLabel', { defaultMessage: 'Std. Deviation' }),\n  variance: _i18n.i18n.translate('tsvb.aggLookup.varianceLabel', { defaultMessage: 'Variance' }),\n  sum_of_squares: _i18n.i18n.translate('tsvb.aggLookup.sumOfSqLabel', { defaultMessage: 'Sum of Sq.' }),\n  avg: _i18n.i18n.translate('tsvb.aggLookup.averageLabel', { defaultMessage: 'Average' }),\n  max: _i18n.i18n.translate('tsvb.aggLookup.maxLabel', { defaultMessage: 'Max' }),\n  min: _i18n.i18n.translate('tsvb.aggLookup.minLabel', { defaultMessage: 'Min' }),\n  sum: _i18n.i18n.translate('tsvb.aggLookup.sumLabel', { defaultMessage: 'Sum' }),\n  percentile: _i18n.i18n.translate('tsvb.aggLookup.percentileLabel', { defaultMessage: 'Percentile' }),\n  percentile_rank: _i18n.i18n.translate('tsvb.aggLookup.percentileRankLabel', { defaultMessage: 'Percentile Rank' }),\n  cardinality: _i18n.i18n.translate('tsvb.aggLookup.cardinalityLabel', { defaultMessage: 'Cardinality' }),\n  value_count: _i18n.i18n.translate('tsvb.aggLookup.valueCountLabel', { defaultMessage: 'Value Count' }),\n  derivative: _i18n.i18n.translate('tsvb.aggLookup.derivativeLabel', { defaultMessage: 'Derivative' }),\n  cumulative_sum: _i18n.i18n.translate('tsvb.aggLookup.cumulativeSumLabel', { defaultMessage: 'Cumulative Sum' }),\n  moving_average: _i18n.i18n.translate('tsvb.aggLookup.movingAverageLabel', { defaultMessage: 'Moving Average' }),\n  avg_bucket: _i18n.i18n.translate('tsvb.aggLookup.overallAverageLabel', { defaultMessage: 'Overall Average' }),\n  min_bucket: _i18n.i18n.translate('tsvb.aggLookup.overallMinLabel', { defaultMessage: 'Overall Min' }),\n  max_bucket: _i18n.i18n.translate('tsvb.aggLookup.overallMaxLabel', { defaultMessage: 'Overall Max' }),\n  sum_bucket: _i18n.i18n.translate('tsvb.aggLookup.overallSumLabel', { defaultMessage: 'Overall Sum' }),\n  variance_bucket: _i18n.i18n.translate('tsvb.aggLookup.overallVarianceLabel', { defaultMessage: 'Overall Variance' }),\n  sum_of_squares_bucket: _i18n.i18n.translate('tsvb.aggLookup.overallSumOfSqLabel', { defaultMessage: 'Overall Sum of Sq.' }),\n  std_deviation_bucket: _i18n.i18n.translate('tsvb.aggLookup.overallStdDeviationLabel', { defaultMessage: 'Overall Std. Deviation' }),\n  series_agg: _i18n.i18n.translate('tsvb.aggLookup.seriesAggLabel', { defaultMessage: 'Series Agg' }),\n  math: _i18n.i18n.translate('tsvb.aggLookup.mathLabel', { defaultMessage: 'Math' }),\n  serial_diff: _i18n.i18n.translate('tsvb.aggLookup.serialDifferenceLabel', { defaultMessage: 'Serial Difference' }),\n  filter_ratio: _i18n.i18n.translate('tsvb.aggLookup.filterRatioLabel', { defaultMessage: 'Filter Ratio' }),\n  positive_only: _i18n.i18n.translate('tsvb.aggLookup.positiveOnlyLabel', { defaultMessage: 'Positive Only' }),\n  static: _i18n.i18n.translate('tsvb.aggLookup.staticValueLabel', { defaultMessage: 'Static Value' }),\n  top_hit: _i18n.i18n.translate('tsvb.aggLookup.topHitLabel', { defaultMessage: 'Top Hit' })\n};\n\nvar pipeline = ['calculation', 'derivative', 'cumulative_sum', 'moving_average', 'avg_bucket', 'min_bucket', 'max_bucket', 'sum_bucket', 'variance_bucket', 'sum_of_squares_bucket', 'std_deviation_bucket', 'series_agg', 'math', 'serial_diff', 'positive_only'];\n\nvar byType = {\n  _all: lookup,\n  pipeline: pipeline,\n  basic: _lodash2.default.omit(lookup, pipeline),\n  metrics: _lodash2.default.pick(lookup, ['count', 'avg', 'min', 'max', 'sum', 'cardinality', 'value_count'])\n};\n\nfunction isBasicAgg(item) {\n  return _lodash2.default.includes(Object.keys(byType.basic), item.type);\n}\n\nfunction createOptions() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '_all';\n  var siblings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var aggs = byType[type];\n  if (!aggs) aggs = byType._all;\n  var enablePipelines = siblings.some(isBasicAgg);\n  if (siblings.length <= 1) enablePipelines = false;\n  return (0, _lodash2.default)(aggs).map(function (label, value) {\n    var disabled = _lodash2.default.includes(pipeline, value) ? !enablePipelines : false;\n    return {\n      label: disabled ? _i18n.i18n.translate('tsvb.aggLookup.addPipelineAggDescription', {\n        defaultMessage: '{label} (use the \"+\" button to add this pipeline agg)',\n        values: { label: label }\n      }) : label,\n      value: value,\n      disabled: disabled\n    };\n  }).value();\n}\n\nexports.default = lookup;",null]}