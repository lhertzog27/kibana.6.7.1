{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/vis/vis_filters.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vis/vis_filters.js","mtime":1567631711773},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFilter = exports.VisFiltersProvider = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _push_filters = require('../filter_bar/push_filters');\n\nvar _query_filter = require('../filter_bar/query_filter');\n\nvar _brush_event = require('../utils/brush_event');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                     * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                     * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                     * this work for additional information regarding copyright\n                                                                                                                                                                                                     * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                     * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                     * not use this file except in compliance with the License.\n                                                                                                                                                                                                     * You may obtain a copy of the License at\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                     * software distributed under the License is distributed on an\n                                                                                                                                                                                                     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                     * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                     * specific language governing permissions and limitations\n                                                                                                                                                                                                     * under the License.\n                                                                                                                                                                                                     */\n\n/**\n * For terms aggregations on `__other__` buckets, this assembles a list of applicable filter\n * terms based on a specific cell in the tabified data.\n *\n * @param  {object} table - tabified table data\n * @param  {number} columnIndex - current column index\n * @param  {number} rowIndex - current row index\n * @return {array} - array of terms to filter against\n */\nvar getOtherBucketFilterTerms = function getOtherBucketFilterTerms(table, columnIndex, rowIndex) {\n  if (rowIndex === -1) {\n    return [];\n  }\n\n  // get only rows where cell value matches current row for all the fields before columnIndex\n  var rows = table.rows.filter(function (row) {\n    return table.columns.every(function (column, i) {\n      return row[column.id] === table.rows[rowIndex][column.id] || i >= columnIndex;\n    });\n  });\n  var terms = rows.map(function (row) {\n    return row[table.columns[columnIndex].id];\n  });\n\n  return [].concat(_toConsumableArray(new Set(terms.filter(function (term) {\n    var notOther = term !== '__other__';\n    var notMissing = term !== '__missing__';\n    return notOther && notMissing;\n  }))));\n};\n\n/**\n * Assembles the filters needed to apply filtering against a specific cell value, while accounting\n * for cases like if the value is a terms agg in an `__other__` or `__missing__` bucket.\n *\n * @param  {object} table - tabified table data\n * @param  {number} columnIndex - current column index\n * @param  {number} rowIndex - current row index\n * @param  {string} cellValue - value of the current cell\n * @return {array|string} - filter or list of filters to provide to queryFilter.addFilters()\n */\nvar createFilter = function createFilter(table, columnIndex, rowIndex, cellValue) {\n  var _table$columns$column = table.columns[columnIndex],\n      aggConfig = _table$columns$column.aggConfig,\n      columnId = _table$columns$column.id;\n\n  var filter = [];\n  var value = rowIndex > -1 ? table.rows[rowIndex][columnId] : cellValue;\n  if (value === null || value === undefined) {\n    return;\n  }\n  if (aggConfig.type.name === 'terms' && aggConfig.params.otherBucket) {\n    var terms = getOtherBucketFilterTerms(table, columnIndex, rowIndex);\n    filter = aggConfig.createFilter(value, { terms: terms });\n  } else {\n    filter = aggConfig.createFilter(value);\n  }\n  return filter;\n};\n\nvar VisFiltersProvider = function VisFiltersProvider(Private, getAppState) {\n  var filterBarPushFilters = Private(_push_filters.FilterBarPushFiltersProvider);\n  var queryFilter = Private(_query_filter.FilterBarQueryFilterProvider);\n\n  var filter = function filter(event) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        simulate = _ref.simulate;\n\n    var data = event.datum.aggConfigResult;\n    var shallow = event.shallow;\n    var filters = [];\n    while (data) {\n      if (data.type === 'bucket') {\n        var _data = data,\n            key = _data.key,\n            rawData = _data.rawData;\n        var table = rawData.table,\n            column = rawData.column,\n            row = rawData.row;\n\n        var _filter = createFilter(table, column, row, key);\n        if (event.negate) {\n          if (Array.isArray(_filter)) {\n            _filter.forEach(function (f) {\n              return f.meta.negate = !f.meta.negate;\n            });\n          } else {\n            _filter.meta.negate = !_filter.meta.negate;\n          }\n        }\n        filters.push(_filter);\n      }\n      data = shallow ? null : data.$parent;\n    }\n    if (!simulate) {\n      var appState = getAppState();\n      filterBarPushFilters(appState)(_lodash2.default.flatten(filters));\n    }\n    return filters;\n  };\n\n  var addFilter = function addFilter(event) {\n    var filter = createFilter(event.table, event.column, event.row, event.value);\n    queryFilter.addFilters(filter);\n  };\n\n  return {\n    addFilter: addFilter,\n    filter: filter,\n    brush: function brush(event) {\n      (0, _brush_event.onBrushEvent)(event, getAppState());\n    }\n  };\n};\n\nexports.VisFiltersProvider = VisFiltersProvider;\nexports.createFilter = createFilter;",null]}