{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/wizard/wizard.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/wizard/wizard.js","mtime":1567631711602},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nrequire('../saved_visualizations/saved_visualizations');\n\nrequire('ui/directives/saved_object_finder');\n\nrequire('ui/directives/paginated_selectable_list');\n\nrequire('../../discover/saved_searches/saved_searches');\n\nvar _dashboard_constants = require('../../dashboard/dashboard_constants');\n\nvar _visualize_constants = require('../visualize_constants');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _modules = require('ui/modules');\n\nvar _step_ = require('./step_2.html');\n\nvar _step_2 = _interopRequireDefault(_step_);\n\nvar _saved_objects = require('ui/saved_objects');\n\nvar _timefilter = require('ui/timefilter');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = _modules.uiModules.get('app/visualize', ['kibana/courier']);\n\n/********\n/** Wizard Step 2\n/********/\n\n// Redirect old route to new route.\n// NOTE: Accessing this route directly means the user has entered into the wizard UX without\n// selecting a Visualization type in step 1. So we want to redirect them to step 1, not step 2.\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n_routes2.default.when('/visualize/step/2', {\n  redirectTo: _visualize_constants.VisualizeConstants.WIZARD_STEP_1_PAGE_PATH\n});\n\n_routes2.default.when(_visualize_constants.VisualizeConstants.WIZARD_STEP_2_PAGE_PATH, {\n  template: _step_2.default,\n  controller: 'VisualizeWizardStep2',\n  resolve: {\n    indexPatterns: function indexPatterns(Private) {\n      var savedObjectsClient = Private(_saved_objects.SavedObjectsClientProvider);\n\n      return savedObjectsClient.find({\n        type: 'index-pattern',\n        fields: ['title'],\n        perPage: 10000\n      }).then(function (response) {\n        return response.savedObjects;\n      });\n    }\n  }\n});\n\n_module.controller('VisualizeWizardStep2', function ($route, $scope, kbnUrl) {\n  var type = $route.current.params.type;\n  var addToDashMode = $route.current.params[_dashboard_constants.DashboardConstants.ADD_VISUALIZATION_TO_DASHBOARD_MODE_PARAM];\n  kbnUrl.removeParam(_dashboard_constants.DashboardConstants.ADD_VISUALIZATION_TO_DASHBOARD_MODE_PARAM);\n\n  $scope.step2WithSearchUrl = function (hit) {\n    if (addToDashMode) {\n      return kbnUrl.eval('#' + _visualize_constants.VisualizeConstants.CREATE_PATH + '?type={{type}}&savedSearchId={{id}}' + ('&' + _dashboard_constants.DashboardConstants.ADD_VISUALIZATION_TO_DASHBOARD_MODE_PARAM), { type: type, id: hit.id });\n    }\n\n    return kbnUrl.eval('#' + _visualize_constants.VisualizeConstants.CREATE_PATH + '?type={{type}}&savedSearchId={{id}}', { type: type, id: hit.id });\n  };\n\n  _timefilter.timefilter.disableAutoRefreshSelector();\n  _timefilter.timefilter.disableTimeRangeSelector();\n\n  $scope.indexPattern = {\n    selection: null,\n    list: $route.current.locals.indexPatterns\n  };\n\n  $scope.makeUrl = function (pattern) {\n    if (!pattern) return;\n\n    if (addToDashMode) {\n      return '#' + _visualize_constants.VisualizeConstants.CREATE_PATH + ('?' + _dashboard_constants.DashboardConstants.ADD_VISUALIZATION_TO_DASHBOARD_MODE_PARAM) + ('&type=' + type + '&indexPattern=' + pattern.id);\n    }\n\n    return '#' + _visualize_constants.VisualizeConstants.CREATE_PATH + '?type=' + type + '&indexPattern=' + pattern.id;\n  };\n});",null]}