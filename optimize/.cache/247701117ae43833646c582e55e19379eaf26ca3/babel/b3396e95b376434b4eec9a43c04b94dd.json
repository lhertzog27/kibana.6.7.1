{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/filter_editor/filter_editor.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/filter_editor/filter_editor.js","mtime":1567631711732},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _modules = require('../modules');\n\nvar _compat = require('../compat');\n\nvar _filter_operators = require('./lib/filter_operators');\n\nvar _filter_editor = require('./filter_editor.html');\n\nvar _filter_editor2 = _interopRequireDefault(_filter_editor);\n\nrequire('../directives/documentation_href');\n\nrequire('./filter_query_dsl_editor');\n\nrequire('./filter_field_select');\n\nrequire('./filter_operator_select');\n\nrequire('./params_editor/filter_params_editor');\n\nrequire('./filter_editor.less');\n\nvar _filter_editor_utils = require('./lib/filter_editor_utils');\n\nvar _esQuery = require('@kbn/es-query');\n\nvar filterBuilder = _interopRequireWildcard(_esQuery);\n\nvar _key_map = require('../utils/key_map');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * software distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar _module = _modules.uiModules.get('kibana');\n_module.directive('filterEditor', function ($timeout, indexPatterns) {\n  return {\n    restrict: 'E',\n    template: _filter_editor2.default,\n    scope: {\n      indexPatterns: '=',\n      filter: '=',\n      onDelete: '&',\n      onCancel: '&',\n      onSave: '&'\n    },\n    controllerAs: 'filterEditor',\n    bindToController: true,\n    controller: (0, _compat.callAfterBindingsWorkaround)(function ($scope, $element, config) {\n      var _this = this;\n\n      var pinnedByDefault = config.get('filters:pinnedByDefault');\n\n      this.init = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var defaultIndexPattern, filter;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if ((0, _filter_editor_utils.areIndexPatternsProvided)(_this.indexPatterns)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return indexPatterns.getDefault();\n\n              case 3:\n                defaultIndexPattern = _context.sent;\n\n                if (defaultIndexPattern) {\n                  _this.indexPatterns = [defaultIndexPattern];\n                }\n\n              case 5:\n                filter = _this.filter;\n\n                _this.alias = filter.meta.alias;\n                _this.isEditingQueryDsl = false;\n                _this.queryDsl = (0, _filter_editor_utils.getQueryDslFromFilter)(filter);\n                if (filter.meta.isNew) {\n                  _this.setFocus('field');\n                } else {\n                  (0, _filter_editor_utils.getFieldFromFilter)(filter, indexPatterns).then(function (field) {\n                    _this.setField(field);\n                    _this.setOperator((0, _filter_editor_utils.getOperatorFromFilter)(filter));\n                    _this.params = (0, _filter_editor_utils.getParamsFromFilter)(filter);\n                  });\n                }\n\n              case 10:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this);\n      }));\n\n      $scope.$watch(function () {\n        return _this.filter;\n      }, this.init);\n      $scope.$watchCollection(function () {\n        return _this.filter.meta;\n      }, this.init);\n\n      this.setQueryDsl = function (queryDsl) {\n        _this.queryDsl = queryDsl;\n      };\n\n      this.setField = function (field) {\n        _this.field = field;\n        _this.operator = null;\n        _this.params = {};\n      };\n\n      this.onFieldSelect = function (field) {\n        _this.setField(field);\n        _this.setFocus('operator');\n      };\n\n      this.setOperator = function (operator) {\n        _this.operator = operator;\n      };\n\n      this.onOperatorSelect = function (operator) {\n        _this.setOperator(operator);\n        _this.setFocus('params');\n      };\n\n      this.setParams = function (params) {\n        _this.params = params;\n      };\n\n      this.setFocus = function (name) {\n        $timeout(function () {\n          return $scope.$broadcast('focus-' + name);\n        });\n      };\n\n      this.toggleEditingQueryDsl = function () {\n        _this.isEditingQueryDsl = !_this.isEditingQueryDsl;\n      };\n\n      this.isQueryDslEditorVisible = function () {\n        var _filter$meta = _this.filter.meta,\n            type = _filter$meta.type,\n            isNew = _filter$meta.isNew;\n\n        return _this.isEditingQueryDsl || !isNew && !_filter_operators.FILTER_OPERATOR_TYPES.includes(type);\n      };\n\n      this.isValid = function () {\n        if (_this.isQueryDslEditorVisible()) {\n          return _lodash2.default.isObject(_this.queryDsl);\n        }\n        var field = _this.field,\n            operator = _this.operator,\n            params = _this.params;\n\n        return (0, _filter_editor_utils.isFilterValid)({ field: field, operator: operator, params: params });\n      };\n\n      this.save = function () {\n        var filter = _this.filter,\n            field = _this.field,\n            operator = _this.operator,\n            params = _this.params,\n            alias = _this.alias;\n\n\n        var newFilter = void 0;\n        if (_this.isQueryDslEditorVisible()) {\n          var meta = _lodash2.default.pick(filter.meta, ['negate', 'index']);\n          meta.index = meta.index || _this.indexPatterns[0].id;\n          newFilter = Object.assign(_this.queryDsl, { meta: meta });\n        } else {\n          var indexPattern = field.indexPattern;\n          newFilter = (0, _filter_editor_utils.buildFilter)({ indexPattern: indexPattern, field: field, operator: operator, params: params, filterBuilder: filterBuilder });\n        }\n        newFilter.meta.disabled = filter.meta.disabled;\n        newFilter.meta.alias = alias;\n        var isPinned = (0, _filter_editor_utils.isFilterPinned)(filter, pinnedByDefault);\n        return _this.onSave({ filter: filter, newFilter: newFilter, isPinned: isPinned });\n      };\n\n      $element.on('keydown', function (event) {\n        if (_key_map.keyMap[event.keyCode] === 'escape') {\n          $timeout(function () {\n            return _this.onCancel();\n          });\n        }\n      });\n    })\n  };\n});",null]}