{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/components/step_index_pattern/components/status_message/status_message.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/components/step_index_pattern/components/status_message/status_message.js","mtime":1567631691240},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StatusMessage = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar StatusMessage = exports.StatusMessage = function StatusMessage(_ref) {\n  var _ref$matchedIndices = _ref.matchedIndices,\n      _ref$matchedIndices$a = _ref$matchedIndices.allIndices,\n      allIndices = _ref$matchedIndices$a === undefined ? [] : _ref$matchedIndices$a,\n      _ref$matchedIndices$e = _ref$matchedIndices.exactMatchedIndices,\n      exactMatchedIndices = _ref$matchedIndices$e === undefined ? [] : _ref$matchedIndices$e,\n      _ref$matchedIndices$p = _ref$matchedIndices.partialMatchedIndices,\n      partialMatchedIndices = _ref$matchedIndices$p === undefined ? [] : _ref$matchedIndices$p,\n      isIncludingSystemIndices = _ref.isIncludingSystemIndices,\n      query = _ref.query,\n      showSystemIndicies = _ref.showSystemIndicies;\n\n  var statusIcon = void 0;\n  var statusMessage = void 0;\n  var statusColor = void 0;\n\n  var allIndicesLength = allIndices.length;\n\n  if (query.length === 0) {\n    statusIcon = null;\n    statusColor = 'default';\n\n    if (allIndicesLength > 1) {\n      statusMessage = _react2.default.createElement(\n        'span',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'kbn.management.createIndexPattern.step.status.matchAnyLabel.matchAnyDetail',\n          defaultMessage: 'Your index pattern can match any of your {strongIndices}, below.',\n          values: { strongIndices: _react2.default.createElement(\n              'strong',\n              null,\n              allIndicesLength,\n              ' indices'\n            ) }\n        })\n      );\n    } else if (!isIncludingSystemIndices && showSystemIndicies) {\n      statusMessage = _react2.default.createElement(\n        'span',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'kbn.management.createIndexPattern.step.status.noSystemIndicesWithPromptLabel',\n          defaultMessage: 'No Elasticsearch indices match your pattern. To view the matching system indices, toggle the switch in the upper right.'\n        })\n      );\n    } else {\n      statusMessage = _react2.default.createElement(\n        'span',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'kbn.management.createIndexPattern.step.status.noSystemIndicesLabel',\n          defaultMessage: 'No Elasticsearch indices match your pattern.'\n        })\n      );\n    }\n  } else if (exactMatchedIndices.length) {\n    statusIcon = 'check';\n    statusColor = 'secondary';\n    statusMessage = _react2.default.createElement(\n      'span',\n      null,\n      '\\xA0',\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'kbn.management.createIndexPattern.step.status.successLabel.successDetail',\n        defaultMessage: '{strongSuccess} Your index pattern matches {strongIndices}.',\n        values: {\n          strongSuccess: _react2.default.createElement(\n            'strong',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.createIndexPattern.step.status.successLabel.strongSuccessLabel',\n              defaultMessage: 'Success!'\n            })\n          ),\n          strongIndices: _react2.default.createElement(\n            'strong',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.createIndexPattern.step.status.successLabel.strongIndicesLabel',\n              defaultMessage: '{indicesLength, plural, one {# index} other {# indices}}',\n              values: { indicesLength: exactMatchedIndices.length }\n            })\n          )\n        }\n      })\n    );\n  } else if (partialMatchedIndices.length) {\n    statusIcon = null;\n    statusColor = 'default';\n    statusMessage = _react2.default.createElement(\n      'span',\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'kbn.management.createIndexPattern.step.status.partialMatchLabel.partialMatchDetail',\n        defaultMessage: 'Your index pattern doesn\\'t match any indices, but you have {strongIndices} which {matchedIndicesLength, plural, one {looks} other {look}} similar.',\n        values: {\n          matchedIndicesLength: partialMatchedIndices.length,\n          strongIndices: _react2.default.createElement(\n            'strong',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.createIndexPattern.step.status.partialMatchLabel.strongIndicesLabel',\n              defaultMessage: '{matchedIndicesLength, plural, one {# index} other {# indices}}',\n              values: { matchedIndicesLength: partialMatchedIndices.length }\n            })\n          )\n        }\n      })\n    );\n  } else if (allIndicesLength) {\n    statusIcon = null;\n    statusColor = 'default';\n    statusMessage = _react2.default.createElement(\n      'span',\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'kbn.management.createIndexPattern.step.status.notMatchLabel.notMatchDetail',\n        defaultMessage: 'The index pattern you\\'ve entered doesn\\'t match any indices. You can match {indicesLength, plural, one {your} other {any of your}} {strongIndices}, below.',\n        values: {\n          strongIndices: _react2.default.createElement(\n            'strong',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.createIndexPattern.step.status.notMatchLabel.allIndicesLabel',\n              defaultMessage: '{indicesLength, plural, one {# index} other {# indices}}',\n              values: { indicesLength: allIndicesLength }\n            })\n          ),\n          indicesLength: allIndicesLength\n        }\n      })\n    );\n  }\n\n  return _react2.default.createElement(\n    _eui.EuiText,\n    { size: 's', 'data-test-subj': 'createIndexPatternStatusMessage' },\n    _react2.default.createElement(\n      _eui.EuiTextColor,\n      { color: statusColor },\n      statusIcon ? _react2.default.createElement(_eui.EuiIcon, { type: statusIcon }) : null,\n      statusMessage\n    )\n  );\n}; /*\n    * Licensed to Elasticsearch B.V. under one or more contributor\n    * license agreements. See the NOTICE file distributed with\n    * this work for additional information regarding copyright\n    * ownership. Elasticsearch B.V. licenses this file to you under\n    * the Apache License, Version 2.0 (the \"License\"); you may\n    * not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *    http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing,\n    * software distributed under the License is distributed on an\n    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    * KIND, either express or implied.  See the License for the\n    * specific language governing permissions and limitations\n    * under the License.\n    */",null]}