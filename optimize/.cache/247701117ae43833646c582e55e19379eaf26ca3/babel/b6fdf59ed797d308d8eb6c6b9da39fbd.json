{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/vis_types/timeseries/config.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/vis_types/timeseries/config.js","mtime":1567631711629},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                   * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                   * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                   * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                   * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                   * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                   * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                   * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                   * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                   * under the License.\n                                                                                                                                                                                                                                                                   */\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _data_format_picker = require('../../data_format_picker');\n\nvar _data_format_picker2 = _interopRequireDefault(_data_format_picker);\n\nvar _create_select_handler = require('../../lib/create_select_handler');\n\nvar _create_select_handler2 = _interopRequireDefault(_create_select_handler);\n\nvar _yes_no = require('../../yes_no');\n\nvar _yes_no2 = _interopRequireDefault(_yes_no);\n\nvar _create_text_handler = require('../../lib/create_text_handler');\n\nvar _create_text_handler2 = _interopRequireDefault(_create_text_handler);\n\nvar _index_pattern = require('../../index_pattern');\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TimeseriesConfig = (0, _react3.injectI18n)(function (props) {\n  var handleSelectChange = (0, _create_select_handler2.default)(props.onChange);\n  var handleTextChange = (0, _create_text_handler2.default)(props.onChange);\n\n  var defaults = {\n    fill: '',\n    line_width: '',\n    point_size: '',\n    value_template: '{{value}}',\n    offset_time: '',\n    split_color_mode: 'gradient',\n    axis_min: '',\n    axis_max: '',\n    stacked: 'none',\n    steps: 0\n  };\n  var model = _extends({}, defaults, props.model);\n  var htmlId = (0, _eui.htmlIdGenerator)();\n  var intl = props.intl;\n\n\n  var stackedOptions = [{ label: intl.formatMessage({ id: 'tsvb.timeSeries.noneLabel', defaultMessage: 'None' }), value: 'none' }, { label: intl.formatMessage({ id: 'tsvb.timeSeries.stackedLabel', defaultMessage: 'Stacked' }), value: 'stacked' }, { label: intl.formatMessage({ id: 'tsvb.timeSeries.percentLabel', defaultMessage: 'Percent' }), value: 'percent' }];\n  var selectedStackedOption = stackedOptions.find(function (option) {\n    return model.stacked === option.value;\n  });\n\n  var positionOptions = [{ label: intl.formatMessage({ id: 'tsvb.timeSeries.rightLabel', defaultMessage: 'Right' }), value: 'right' }, { label: intl.formatMessage({ id: 'tsvb.timeSeries.leftLabel', defaultMessage: 'Left' }), value: 'left' }];\n  var selectedAxisPosOption = positionOptions.find(function (option) {\n    return model.axis_position === option.value;\n  });\n\n  var chartTypeOptions = [{ label: intl.formatMessage({ id: 'tsvb.timeSeries.barLabel', defaultMessage: 'Bar' }), value: 'bar' }, { label: intl.formatMessage({ id: 'tsvb.timeSeries.lineLabel', defaultMessage: 'Line' }), value: 'line' }];\n  var selectedChartTypeOption = chartTypeOptions.find(function (option) {\n    return model.chart_type === option.value;\n  });\n\n  var splitColorOptions = [{ label: intl.formatMessage({ id: 'tsvb.timeSeries.gradientLabel', defaultMessage: 'Gradient' }), value: 'gradient' }, { label: intl.formatMessage({ id: 'tsvb.timeSeries.rainbowLabel', defaultMessage: 'Rainbow' }), value: 'rainbow' }];\n  var selectedSplitColorOption = splitColorOptions.find(function (option) {\n    return model.split_color_mode === option.value;\n  });\n\n  var type = void 0;\n  if (model.chart_type === 'line') {\n    type = _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      { gutterSize: 's', responsive: false, wrap: true },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('chartType'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.chartLine.chartTypeLabel',\n              defaultMessage: 'Chart type'\n            })\n          },\n          _react2.default.createElement(_eui.EuiComboBox, {\n            isClearable: false,\n            options: chartTypeOptions,\n            selectedOptions: selectedChartTypeOption ? [selectedChartTypeOption] : [],\n            onChange: handleSelectChange('chart_type'),\n            singleSelection: true\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('stacked'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.chartLine.stackedLabel',\n              defaultMessage: 'Stacked'\n            })\n          },\n          _react2.default.createElement(_eui.EuiComboBox, {\n            isClearable: false,\n            options: stackedOptions,\n            selectedOptions: selectedStackedOption ? [selectedStackedOption] : [],\n            onChange: handleSelectChange('stacked'),\n            singleSelection: true\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('fill'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.chartLine.fillLabel',\n              defaultMessage: 'Fill (0 to 1)'\n            })\n          },\n          _react2.default.createElement(_eui.EuiFieldNumber, {\n            step: 0.1,\n            onChange: handleTextChange('fill'),\n            value: Number(model.fill)\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('lineWidth'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.chartLine.lineWidthLabel',\n              defaultMessage: 'Line width'\n            })\n          },\n          _react2.default.createElement(_eui.EuiFieldNumber, {\n            onChange: handleTextChange('line_width'),\n            value: Number(model.line_width)\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('pointSize'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.chartLine.pointSizeLabel',\n              defaultMessage: 'Point size'\n            })\n          },\n          _react2.default.createElement(_eui.EuiFieldNumber, {\n            onChange: handleTextChange('point_size'),\n            value: Number(model.point_size)\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormLabel,\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'tsvb.timeSeries.chartLine.stepsLabel',\n            defaultMessage: 'Steps'\n          })\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        _react2.default.createElement(_yes_no2.default, {\n          value: model.steps,\n          name: 'steps',\n          onChange: props.onChange\n        })\n      )\n    );\n  }\n  if (model.chart_type === 'bar') {\n    type = _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      { gutterSize: 's', responsive: false, wrap: true },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('chartType'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.chartBar.chartTypeLabel',\n              defaultMessage: 'Chart type'\n            })\n          },\n          _react2.default.createElement(_eui.EuiComboBox, {\n            isClearable: false,\n            options: chartTypeOptions,\n            selectedOptions: selectedChartTypeOption ? [selectedChartTypeOption] : [],\n            onChange: handleSelectChange('chart_type'),\n            singleSelection: true\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('stacked'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.chartBar.stackedLabel',\n              defaultMessage: 'Stacked'\n            })\n          },\n          _react2.default.createElement(_eui.EuiComboBox, {\n            isClearable: false,\n            options: stackedOptions,\n            selectedOptions: selectedStackedOption ? [selectedStackedOption] : [],\n            onChange: handleSelectChange('stacked'),\n            singleSelection: true\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('fill'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.chartBar.fillLabel',\n              defaultMessage: 'Fill (0 to 1)'\n            })\n          },\n          _react2.default.createElement(_eui.EuiFieldNumber, {\n            step: 0.5,\n            onChange: handleTextChange('fill'),\n            value: Number(model.fill)\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('lineWidth'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.chartBar.lineWidthLabel',\n              defaultMessage: 'Line width'\n            })\n          },\n          _react2.default.createElement(_eui.EuiFieldNumber, {\n            onChange: handleTextChange('line_width'),\n            value: Number(model.line_width)\n          })\n        )\n      )\n    );\n  }\n\n  var disableSeparateYaxis = model.separate_axis ? false : true;\n\n  return _react2.default.createElement(\n    'div',\n    { className: 'tvbAggRow' },\n    _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      { gutterSize: 's' },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(_data_format_picker2.default, {\n          onChange: handleSelectChange('formatter'),\n          value: model.formatter\n        })\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('template'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.templateLabel',\n              defaultMessage: 'Template'\n            }),\n            helpText: _react2.default.createElement(\n              'span',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'tsvb.timeSeries.templateHelpText',\n                defaultMessage: 'eg.{templateExample}',\n                values: { templateExample: _react2.default.createElement(\n                    _eui.EuiCode,\n                    null,\n                    '{{value}}/s'\n                  ) }\n              })\n            ),\n            fullWidth: true\n          },\n          _react2.default.createElement(_eui.EuiFieldText, {\n            onChange: handleTextChange('value_template'),\n            value: model.value_template,\n            fullWidth: true\n          })\n        )\n      )\n    ),\n    _react2.default.createElement(_eui.EuiHorizontalRule, { margin: 's' }),\n    _react2.default.createElement(\n      _eui.EuiFormRow,\n      {\n        id: htmlId('series_filter'),\n        label: _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'tsvb.timeSeries.filterLabel',\n          defaultMessage: 'Filter'\n        }),\n        fullWidth: true\n      },\n      _react2.default.createElement(_eui.EuiFieldText, {\n        onChange: handleTextChange('filter'),\n        value: model.filter,\n        fullWidth: true\n      })\n    ),\n    _react2.default.createElement(_eui.EuiHorizontalRule, { margin: 's' }),\n    type,\n    _react2.default.createElement(_eui.EuiHorizontalRule, { margin: 's' }),\n    _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      { responsive: false, wrap: true },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: true },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('offset'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.offsetSeriesTimeLabel',\n              defaultMessage: 'Offset series time by (1m, 1h, 1w, 1d)',\n              description: '1m, 1h, 1w, 1d are required values and must not be translated.'\n            })\n          },\n          _react2.default.createElement(_eui.EuiFieldText, {\n            'data-test-subj': 'offsetTimeSeries',\n            onChange: handleTextChange('offset_time'),\n            value: model.offset_time\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: true },\n        _react2.default.createElement(\n          _eui.EuiFormLabel,\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'tsvb.timeSeries.hideInLegendLabel',\n            defaultMessage: 'Hide in legend'\n          })\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        _react2.default.createElement(_yes_no2.default, {\n          value: model.hide_in_legend,\n          name: 'hide_in_legend',\n          onChange: props.onChange\n        })\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: true },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('splitColor'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.splitColorThemeLabel',\n              defaultMessage: 'Split color theme'\n            })\n          },\n          _react2.default.createElement(_eui.EuiComboBox, {\n            isClearable: false,\n            options: splitColorOptions,\n            selectedOptions: selectedSplitColorOption ? [selectedSplitColorOption] : [],\n            onChange: handleSelectChange('split_color_mode'),\n            singleSelection: true\n          })\n        )\n      )\n    ),\n    _react2.default.createElement(_eui.EuiHorizontalRule, { margin: 's' }),\n    _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      { responsive: false, wrap: true },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormLabel,\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'tsvb.timeSeries.separateAxisLabel',\n            defaultMessage: 'Separate axis?'\n          })\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        _react2.default.createElement(_yes_no2.default, {\n          value: model.separate_axis,\n          name: 'separate_axis',\n          onChange: props.onChange\n        })\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('axisMin'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.axisMinLabel',\n              defaultMessage: 'Axis min'\n            })\n          },\n          _react2.default.createElement('input', {\n            className: 'tvbAgg__input',\n            type: 'number',\n            disabled: disableSeparateYaxis,\n            onChange: handleTextChange('axis_min'),\n            value: model.axis_min\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('axisMax'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.axisMaxLabel',\n              defaultMessage: 'Axis max'\n            })\n          },\n          _react2.default.createElement('input', {\n            className: 'tvbAgg__input',\n            disabled: disableSeparateYaxis,\n            onChange: handleTextChange('axis_max'),\n            value: model.axis_max\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('axisPos'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.timeSeries.axisPositionLabel',\n              defaultMessage: 'Axis position'\n            })\n          },\n          _react2.default.createElement(_eui.EuiComboBox, {\n            isClearable: false,\n            isDisabled: disableSeparateYaxis,\n            options: positionOptions,\n            selectedOptions: selectedAxisPosOption ? [selectedAxisPosOption] : [],\n            onChange: handleSelectChange('axis_position'),\n            singleSelection: true\n          })\n        )\n      )\n    ),\n    _react2.default.createElement(_eui.EuiHorizontalRule, { margin: 's' }),\n    _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      { gutterSize: 's', responsive: false, wrap: true },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiFormLabel,\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'tsvb.timeSeries.overrideIndexPatternLabel',\n            defaultMessage: 'Override Index Pattern?'\n          })\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        _react2.default.createElement(_yes_no2.default, {\n          value: model.override_index_pattern,\n          name: 'override_index_pattern',\n          onChange: props.onChange\n        })\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(_index_pattern.IndexPattern, _extends({}, props, {\n          prefix: 'series_',\n          disabled: !model.override_index_pattern,\n          'with-interval': true\n        }))\n      )\n    )\n  );\n});\n\nTimeseriesConfig.propTypes = {\n  fields: _propTypes2.default.object,\n  model: _propTypes2.default.object,\n  onChange: _propTypes2.default.func\n};\n\nexports.default = TimeseriesConfig;\nmodule.exports = exports['default'];",null]}