{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/utils/brush_event.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/utils/brush_event.js","mtime":1567631711764},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onBrushEvent = onBrushEvent;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _esQuery = require('@kbn/es-query');\n\nvar _timefilter = require('ui/timefilter');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction onBrushEvent(event, $state) {\n  if (!event.data.xAxisField) {\n    return;\n  }\n\n  var isDate = event.data.xAxisField.type === 'date';\n  var isNumber = event.data.xAxisField.type === 'number';\n\n  if (isDate && event.data.xAxisField.name === event.data.indexPattern.timeFieldName) {\n    setTimefilter();\n  } else if (isDate || isNumber) {\n    setRange();\n  }\n\n  function setTimefilter() {\n    var from = (0, _moment2.default)(event.range[0]);\n    var to = (0, _moment2.default)(event.range[1]);\n\n    if (to - from === 0) return;\n\n    _timefilter.timefilter.setTime({\n      from: from,\n      to: to,\n      mode: 'absolute'\n    });\n  }\n\n  function setRange() {\n    if (event.range.length <= 1) return;\n\n    var existingFilter = $state.filters.find(function (filter) {\n      return filter.meta && filter.meta.key === event.data.xAxisField.name;\n    });\n\n    var min = event.range[0];\n    var max = event.range[event.range.length - 1];\n    var range = void 0;\n    if (isDate) {\n      range = {\n        gte: (0, _moment2.default)(min).valueOf(),\n        lt: (0, _moment2.default)(max).valueOf(),\n        format: 'epoch_millis'\n      };\n    } else {\n      range = {\n        gte: min,\n        lt: max\n      };\n    }\n\n    if (_lodash2.default.has(existingFilter, 'range')) {\n      existingFilter.range[event.data.xAxisField.name] = range;\n    } else if (_lodash2.default.has(existingFilter, 'script.script.params.gte') && _lodash2.default.has(existingFilter, 'script.script.params.lt')) {\n      existingFilter.script.script.params.gte = min;\n      existingFilter.script.script.params.lt = max;\n    } else {\n      var newFilter = (0, _esQuery.buildRangeFilter)(event.data.xAxisField, range, event.data.indexPattern, event.data.xAxisFormatter);\n      $state.$newFilters = [newFilter];\n    }\n  }\n}",null]}