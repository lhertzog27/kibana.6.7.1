{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/utils/streams/promise_from_streams.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/utils/streams/promise_from_streams.js","mtime":1567631711788},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPromiseFromStreams = undefined;\n\nvar createPromiseFromStreams = exports.createPromiseFromStreams = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(streams) {\n    var finalChunk, last;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            finalChunk = void 0;\n            last = streams[streams.length - 1];\n\n            if (!(typeof last.read !== 'function' && streams.length === 1)) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('A minimum of 2 streams is required when a non-readable stream is given');\n\n          case 4:\n            if (typeof last.read === 'function') {\n              // We are pushing a writable stream to capture the last chunk\n              streams.push(new _stream.Writable({\n                // Use object mode even when \"last\" stream isn't. This allows to\n                // capture the last chunk as-is.\n                objectMode: true,\n                write: function write(chunk, enc, done) {\n                  finalChunk = chunk;\n                  done();\n                }\n              }));\n            }\n            return _context.abrupt('return', new Promise(function (resolve, reject) {\n              _stream.pipeline.apply(undefined, _toConsumableArray(streams).concat([function (err) {\n                if (err) return reject(err);\n                resolve(finalChunk);\n              }]));\n            }));\n\n          case 6:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function createPromiseFromStreams(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _stream = require('stream');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\n/**\n *  Take an array of streams, pipe the output\n *  from each one into the next, listening for\n *  errors from any of the streams, and then resolve\n *  the promise once the final stream has finished\n *  writing/reading.\n *\n *  If the last stream is readable, it's final value\n *  will be provided as the promise value.\n *\n *  Errors emitted from any stream will cause\n *  the promise to be rejected with that error.\n *\n *  @param  {Array<Stream>} streams\n *  @return {Promise<any>}\n */",null]}