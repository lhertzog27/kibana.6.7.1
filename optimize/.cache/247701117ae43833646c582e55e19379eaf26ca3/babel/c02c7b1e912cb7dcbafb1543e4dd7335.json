{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/components/editor/control_editor.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/components/editor/control_editor.js","mtime":1567631691150},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ControlEditor = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _range_control_editor = require('./range_control_editor');\n\nvar _list_control_editor = require('./list_control_editor');\n\nvar _editor_utils = require('../../editor_utils');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar ControlEditorUi = function (_Component) {\n  _inherits(ControlEditorUi, _Component);\n\n  function ControlEditorUi() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ControlEditorUi);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ControlEditorUi.__proto__ || Object.getPrototypeOf(ControlEditorUi)).call.apply(_ref, [this].concat(args))), _this), _this.changeLabel = function (evt) {\n      _this.props.handleLabelChange(_this.props.controlIndex, evt);\n    }, _this.removeControl = function () {\n      _this.props.handleRemoveControl(_this.props.controlIndex);\n    }, _this.moveUpControl = function () {\n      _this.props.moveControl(_this.props.controlIndex, -1);\n    }, _this.moveDownControl = function () {\n      _this.props.moveControl(_this.props.controlIndex, 1);\n    }, _this.changeIndexPattern = function (evt) {\n      _this.props.handleIndexPatternChange(_this.props.controlIndex, evt);\n    }, _this.changeFieldName = function (evt) {\n      _this.props.handleFieldNameChange(_this.props.controlIndex, evt);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ControlEditorUi, [{\n    key: 'renderEditor',\n    value: function renderEditor() {\n      var controlEditor = null;\n      switch (this.props.controlParams.type) {\n        case 'list':\n          controlEditor = _react2.default.createElement(_list_control_editor.ListControlEditor, {\n            controlIndex: this.props.controlIndex,\n            controlParams: this.props.controlParams,\n            handleIndexPatternChange: this.changeIndexPattern,\n            handleFieldNameChange: this.changeFieldName,\n            getIndexPattern: this.props.getIndexPattern,\n            handleNumberOptionChange: this.props.handleNumberOptionChange,\n            handleCheckboxOptionChange: this.props.handleCheckboxOptionChange,\n            parentCandidates: this.props.parentCandidates,\n            handleParentChange: this.props.handleParentChange\n          });\n          break;\n        case 'range':\n          controlEditor = _react2.default.createElement(_range_control_editor.RangeControlEditor, {\n            controlIndex: this.props.controlIndex,\n            controlParams: this.props.controlParams,\n            handleIndexPatternChange: this.changeIndexPattern,\n            handleFieldNameChange: this.changeFieldName,\n            getIndexPattern: this.props.getIndexPattern,\n            handleNumberOptionChange: this.props.handleNumberOptionChange\n          });\n          break;\n        default:\n          throw new Error('Unhandled control editor type ' + this.props.controlParams.type);\n      }\n\n      var labelId = 'controlLabel' + this.props.controlIndex;\n      return _react2.default.createElement(\n        _eui.EuiForm,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: labelId,\n            label: _react2.default.createElement(_react3.FormattedMessage, { id: 'inputControl.editor.controlEditor.controlLabel', defaultMessage: 'Control Label' })\n          },\n          _react2.default.createElement(_eui.EuiFieldText, {\n            value: this.props.controlParams.label,\n            onChange: this.changeLabel\n          })\n        ),\n        controlEditor\n      );\n    }\n  }, {\n    key: 'renderEditorButtons',\n    value: function renderEditorButtons() {\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(_eui.EuiButtonIcon, {\n          'aria-label': this.props.intl.formatMessage({\n            id: 'inputControl.editor.controlEditor.moveControlUpAriaLabel',\n            defaultMessage: 'Move control up'\n          }),\n          color: 'primary',\n          onClick: this.moveUpControl,\n          iconType: 'sortUp',\n          'data-test-subj': 'inputControlEditorMoveUpControl' + this.props.controlIndex\n        }),\n        _react2.default.createElement(_eui.EuiButtonIcon, {\n          'aria-label': this.props.intl.formatMessage({\n            id: 'inputControl.editor.controlEditor.moveControlDownAriaLabel',\n            defaultMessage: 'Move control down'\n          }),\n          color: 'primary',\n          onClick: this.moveDownControl,\n          iconType: 'sortDown',\n          'data-test-subj': 'inputControlEditorMoveDownControl' + this.props.controlIndex\n        }),\n        _react2.default.createElement(_eui.EuiButtonIcon, {\n          'aria-label': this.props.intl.formatMessage({\n            id: 'inputControl.editor.controlEditor.removeControlAriaLabel',\n            defaultMessage: 'Remove control'\n          }),\n          color: 'danger',\n          onClick: this.removeControl,\n          iconType: 'cross',\n          'data-test-subj': 'inputControlEditorRemoveControl' + this.props.controlIndex\n        })\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        _eui.EuiPanel,\n        { grow: false, className: 'icvControlEditor__panel' },\n        _react2.default.createElement(\n          _eui.EuiAccordion,\n          {\n            id: 'controlEditorAccordion',\n            buttonContent: (0, _editor_utils.getTitle)(this.props.controlParams, this.props.controlIndex),\n            extraAction: this.renderEditorButtons(),\n            initialIsOpen: true\n          },\n          _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n          this.renderEditor()\n        )\n      );\n    }\n  }]);\n\n  return ControlEditorUi;\n}(_react.Component);\n\nControlEditorUi.propTypes = {\n  controlIndex: _propTypes2.default.number.isRequired,\n  controlParams: _propTypes2.default.object.isRequired,\n  handleLabelChange: _propTypes2.default.func.isRequired,\n  moveControl: _propTypes2.default.func.isRequired,\n  handleRemoveControl: _propTypes2.default.func.isRequired,\n  handleIndexPatternChange: _propTypes2.default.func.isRequired,\n  handleFieldNameChange: _propTypes2.default.func.isRequired,\n  getIndexPattern: _propTypes2.default.func.isRequired,\n  handleCheckboxOptionChange: _propTypes2.default.func.isRequired,\n  handleNumberOptionChange: _propTypes2.default.func.isRequired,\n  parentCandidates: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    value: _propTypes2.default.string.isRequired,\n    text: _propTypes2.default.string.isRequired\n  })).isRequired,\n  handleParentChange: _propTypes2.default.func.isRequired\n};\n\nvar ControlEditor = exports.ControlEditor = (0, _react3.injectI18n)(ControlEditorUi);",null]}