{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/param_types/json.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/param_types/json.js","mtime":1567631711701},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JsonParamType = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _raw_json = require('../controls/raw_json.html');\n\nvar _raw_json2 = _interopRequireDefault(_raw_json);\n\nvar _base = require('./base');\n\nvar _legacy_class = require('../../utils/legacy_class');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n(0, _legacy_class.createLegacyClass)(JsonParamType).inherits(_base.BaseParamType);\nfunction JsonParamType(config) {\n  // force name override\n  config = _lodash2.default.defaults(config, { name: 'json' });\n  JsonParamType.Super.call(this, config);\n}\n\nJsonParamType.prototype.editor = _raw_json2.default;\n\n/**\n * Write the aggregation parameter.\n *\n * @param  {AggConfig} aggConfig - the entire configuration for this agg\n * @param  {object} output - the result of calling write on all of the aggregations\n *                         parameters.\n * @param  {object} output.params - the final object that will be included as the params\n *                               for the agg\n * @return {undefined}\n */\nJsonParamType.prototype.write = function (aggConfig, output) {\n  var paramJson = void 0;\n  var param = aggConfig.params[this.name];\n\n  if (!param) {\n    return;\n  }\n\n  // handle invalid Json input\n  try {\n    paramJson = JSON.parse(param);\n  } catch (err) {\n    return;\n  }\n\n  function filteredCombine(srcA, srcB) {\n    function mergeObjs(a, b) {\n      return (0, _lodash2.default)(a).keys().union(_lodash2.default.keys(b)).transform(function (dest, key) {\n        var val = compare(a[key], b[key]);\n        if (val !== undefined) dest[key] = val;\n      }, {}).value();\n    }\n\n    function mergeArrays(a, b) {\n      // attempt to merge each value\n      return _lodash2.default.times(Math.max(a.length, b.length), function (i) {\n        return compare(a[i], b[i]);\n      });\n    }\n\n    function compare(a, b) {\n      if (_lodash2.default.isPlainObject(a) && _lodash2.default.isPlainObject(b)) return mergeObjs(a, b);\n      if (Array.isArray(a) && Array.isArray(b)) return mergeArrays(a, b);\n      if (b === null) return undefined;\n      if (b !== undefined) return b;\n      return a;\n    }\n\n    return compare(srcA, srcB);\n  }\n\n  output.params = filteredCombine(output.params, paramJson);\n  return;\n};\n\nexports.JsonParamType = JsonParamType;",null]}