{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/control/list_control_factory.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/control/list_control_factory.js","mtime":1567631711533},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listControlFactory = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar listControlFactory = exports.listControlFactory = function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(controlParams, kbnApi, useTimeFilter) {\n    var indexPattern, field;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            indexPattern = void 0;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return kbnApi.indexPatterns.get(controlParams.indexPattern);\n\n          case 4:\n            indexPattern = _context2.sent;\n\n\n            // dynamic options are only allowed on String fields but the setting defaults to true so it could\n            // be enabled for non-string fields (since UI input is hidden for non-string fields).\n            // If field is not string, then disable dynamic options.\n            field = indexPattern.fields.find(function (field) {\n              return field.name === controlParams.fieldName;\n            });\n\n            if (field && field.type !== 'string') {\n              controlParams.options.dynamicOptions = false;\n            }\n            _context2.next = 11;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2['catch'](1);\n\n          case 11:\n            return _context2.abrupt('return', new ListControl(controlParams, new _phrase_filter_manager.PhraseFilterManager(controlParams.id, controlParams.fieldName, indexPattern, kbnApi.queryFilter), kbnApi, useTimeFilter));\n\n          case 12:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[1, 9]]);\n  }));\n\n  return function listControlFactory(_x3, _x4, _x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _control = require('./control');\n\nvar _phrase_filter_manager = require('./filter_manager/phrase_filter_manager');\n\nvar _create_search_source = require('./create_search_source');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction getEscapedQuery() {\n  var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  // https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-regexp-query.html#_standard_operators\n  return query.replace(/[.?+*|{}[\\]()\"\\\\#@&<>~]/g, function (match) {\n    return '\\\\' + match;\n  });\n}\n\nvar termsAgg = function termsAgg(_ref) {\n  var field = _ref.field,\n      size = _ref.size,\n      direction = _ref.direction,\n      query = _ref.query;\n\n  var terms = {\n    order: {\n      _count: direction\n    }\n  };\n\n  if (size) {\n    terms.size = size < 1 ? 1 : size;\n  }\n\n  if (field.scripted) {\n    terms.script = {\n      source: field.script,\n      lang: field.lang\n    };\n    terms.valueType = field.type === 'number' ? 'float' : field.type;\n  } else {\n    terms.field = field.name;\n  }\n\n  if (query) {\n    terms.include = '.*' + getEscapedQuery(query) + '.*';\n  }\n\n  return {\n    'termsAgg': {\n      'terms': terms\n    }\n  };\n};\n\nvar ListControl = function (_Control) {\n  _inherits(ListControl, _Control);\n\n  function ListControl() {\n    var _ref2,\n        _this2 = this;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ListControl);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = ListControl.__proto__ || Object.getPrototypeOf(ListControl)).call.apply(_ref2, [this].concat(args))), _this), _this.fetch = function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(query) {\n        var indexPattern, ancestorFilters, ancestorValues, fieldName, initialSearchSourceState, aggs, searchSource, resp, selectOptions;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                indexPattern = _this.filterManager.getIndexPattern();\n\n                if (indexPattern) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _this.disable((0, _control.noIndexPatternMsg)(_this.controlParams.indexPattern));\n                return _context.abrupt('return');\n\n              case 4:\n                ancestorFilters = void 0;\n\n                if (!_this.hasAncestors()) {\n                  _context.next = 15;\n                  break;\n                }\n\n                if (!_this.hasUnsetAncestor()) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _this.disable(_i18n.i18n.translate('inputControl.listControl.disableTooltip', {\n                  defaultMessage: 'Disabled until \\'{label}\\' is set.',\n                  values: { label: _this.ancestors[0].label }\n                }));\n                _this.lastAncestorValues = undefined;\n                return _context.abrupt('return');\n\n              case 10:\n                ancestorValues = _this.getAncestorValues();\n\n                if (!_lodash2.default.isEqual(ancestorValues, _this.lastAncestorValues)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 13:\n                _this.lastAncestorValues = ancestorValues;\n\n                ancestorFilters = _this.getAncestorFilters();\n\n              case 15:\n                fieldName = _this.filterManager.fieldName;\n                initialSearchSourceState = {\n                  timeout: '1s',\n                  terminate_after: 100000\n                };\n                aggs = termsAgg({\n                  field: indexPattern.fields.byName[fieldName],\n                  size: _this.options.dynamicOptions ? null : _lodash2.default.get(_this.options, 'size', 5),\n                  direction: 'desc',\n                  query: query\n                });\n                searchSource = (0, _create_search_source.createSearchSource)(_this.kbnApi, initialSearchSourceState, indexPattern, aggs, _this.useTimeFilter, ancestorFilters);\n\n\n                _this.lastQuery = query;\n                resp = void 0;\n                _context.prev = 21;\n                _context.next = 24;\n                return searchSource.fetch();\n\n              case 24:\n                resp = _context.sent;\n                _context.next = 31;\n                break;\n\n              case 27:\n                _context.prev = 27;\n                _context.t0 = _context['catch'](21);\n\n                _this.disable(_i18n.i18n.translate('inputControl.listControl.unableToFetchTooltip', {\n                  defaultMessage: 'Unable to fetch terms, error: {errorMessage}',\n                  values: { errorMessage: _context.t0.message }\n                }));\n                return _context.abrupt('return');\n\n              case 31:\n                if (!(query && _this.lastQuery !== query)) {\n                  _context.next = 33;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 33:\n                selectOptions = _lodash2.default.get(resp, 'aggregations.termsAgg.buckets', []).map(function (bucket) {\n                  return bucket.key;\n                });\n\n                if (!(selectOptions.length === 0 && !query)) {\n                  _context.next = 37;\n                  break;\n                }\n\n                _this.disable((0, _control.noValuesDisableMsg)(fieldName, indexPattern.title));\n                return _context.abrupt('return');\n\n              case 37:\n\n                _this.selectOptions = selectOptions;\n                _this.enable = true;\n                _this.disabledReason = '';\n\n              case 40:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this2, [[21, 27]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ListControl, [{\n    key: 'hasValue',\n    value: function hasValue() {\n      return typeof this.value !== 'undefined' && this.value.length > 0;\n    }\n  }]);\n\n  return ListControl;\n}(_control.Control);",null]}