{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/courier/fetch/request/serialize_fetch_params/serialize_fetch_params.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/courier/fetch/request/serialize_fetch_params/serialize_fetch_params.js","mtime":1567631711713},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                   * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                   * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                   * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                   * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                   * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                   * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                   * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                   * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                   * under the License.\n                                                                                                                                                                                                                                                                   */\n\nexports.serializeFetchParams = serializeFetchParams;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction emptySearch() {\n  return {\n    query: {\n      bool: {\n        must_not: [{ match_all: {} }]\n      }\n    }\n  };\n}\n\n/**\n *\n * @param requestsFetchParams {Array.<Object>}\n * @param Promise\n * @param timeFilter - Only needed for time based interval indexes, which support has been removed from in 6.0. Come\n * 7.0 we can completely rip this code out and break them completely. See\n *   https://github.com/elastic/kibana/issues/12242 and\n *   https://github.com/elastic/kibana/pull/12158 for more background\n * @param kbnIndex\n * @param sessionId\n * @return {Promise.<string>}\n */\nfunction serializeFetchParams(requestsFetchParams, Promise, timeFilter, kbnIndex, sessionId, config, esShardTimeout) {\n  var indexToListMapping = {};\n  var timeBounds = timeFilter.getActiveBounds();\n  var promises = requestsFetchParams.map(function (fetchParams) {\n    return Promise.resolve(fetchParams.index).then(function (indexList) {\n      if (!_lodash2.default.isFunction(_lodash2.default.get(indexList, 'toIndexList'))) {\n        return indexList;\n      }\n\n      if (!indexToListMapping[indexList.id]) {\n        indexToListMapping[indexList.id] = timeBounds ? indexList.toIndexList(timeBounds.min, timeBounds.max) : indexList.toIndexList();\n      }\n      return indexToListMapping[indexList.id].then(function (indexList) {\n        // Make sure the index list in the cache can't be subsequently updated.\n        return _lodash2.default.clone(indexList);\n      });\n    }).then(function (indexList) {\n      var body = _extends({}, fetchParams.body || {});\n      if (esShardTimeout > 0) {\n        body.timeout = esShardTimeout + 'ms';\n      }\n      var index = [];\n      // If we've reached this point and there are no indexes in the\n      // index list at all, it means that we shouldn't expect any indexes\n      // to contain the documents we're looking for, so we instead\n      // perform a request for an index pattern that we know will always\n      // return an empty result (ie. -*). If instead we had gone ahead\n      // with an msearch without any index patterns, elasticsearch would\n      // handle that request by querying *all* indexes, which is the\n      // opposite of what we want in this case.\n      if (Array.isArray(indexList) && indexList.length === 0) {\n        index.push(kbnIndex);\n        body = emptySearch();\n      } else {\n        index = indexList;\n      }\n\n      var header = {\n        index: index,\n        type: fetchParams.type,\n        search_type: fetchParams.search_type,\n        ignore_unavailable: true\n      };\n      if (config.get('courier:setRequestPreference') === 'sessionId') {\n        header.preference = sessionId;\n      } else if (config.get('courier:setRequestPreference') === 'custom') {\n        header.preference = config.get('courier:customRequestPreference');\n      }\n\n      return JSON.stringify(header) + '\\n' + JSON.stringify(body);\n    });\n  });\n\n  return Promise.all(promises).then(function (requests) {\n    return requests.join('\\n') + '\\n';\n  });\n}",null]}