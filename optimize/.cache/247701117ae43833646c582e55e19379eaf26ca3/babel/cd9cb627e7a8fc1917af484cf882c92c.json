{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/timefilter/timefilter.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/timefilter/timefilter.js","mtime":1567631711761},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerTimefilterWithGlobalState = exports.timefilter = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _get_time = require('./get_time');\n\nvar _parse_querystring = require('ui/timefilter/lib/parse_querystring');\n\nvar _simple_emitter = require('ui/utils/simple_emitter');\n\nvar _routes = require('../routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _diff_time_picker_vals = require('./lib/diff_time_picker_vals');\n\nvar _time_history = require('./time_history');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar Timefilter = function (_SimpleEmitter) {\n  _inherits(Timefilter, _SimpleEmitter);\n\n  function Timefilter() {\n    _classCallCheck(this, Timefilter);\n\n    var _this = _possibleConstructorReturn(this, (Timefilter.__proto__ || Object.getPrototypeOf(Timefilter)).call(this));\n\n    _this.getTime = function () {\n      var _this$_time = _this._time,\n          from = _this$_time.from,\n          to = _this$_time.to;\n\n      return _extends({}, _this._time, {\n        from: _moment2.default.isMoment(from) ? from.toISOString() : from,\n        to: _moment2.default.isMoment(to) ? to.toISOString() : to\n      });\n    };\n\n    _this.setTime = function (time) {\n      // Object.assign used for partially composed updates\n      var newTime = Object.assign(_this.getTime(), time);\n      if ((0, _diff_time_picker_vals.areTimePickerValsDifferent)(_this.getTime(), newTime)) {\n        _this._time = {\n          from: newTime.from,\n          to: newTime.to,\n          mode: newTime.mode\n        };\n        _time_history.timeHistory.add(_this._time);\n        _this.emit('timeUpdate');\n        _this.emit('fetch');\n      }\n    };\n\n    _this.getRefreshInterval = function () {\n      return _lodash2.default.clone(_this._refreshInterval);\n    };\n\n    _this.setRefreshInterval = function (refreshInterval) {\n      var prevRefreshInterval = _this.getRefreshInterval();\n      var newRefreshInterval = _extends({}, prevRefreshInterval, refreshInterval);\n      // If the refresh interval is <= 0 handle that as a paused refresh\n      if (newRefreshInterval.value <= 0) {\n        newRefreshInterval.value = 0;\n        newRefreshInterval.pause = true;\n      }\n      _this._refreshInterval = {\n        value: newRefreshInterval.value,\n        pause: newRefreshInterval.pause\n      };\n      // Only send out an event if we already had a previous refresh interval (not for the initial set)\n      // and the old and new refresh interval are actually different.\n      if (prevRefreshInterval && (0, _diff_time_picker_vals.areTimePickerValsDifferent)(prevRefreshInterval, newRefreshInterval)) {\n        _this.emit('refreshIntervalUpdate');\n        if (!newRefreshInterval.pause && newRefreshInterval.value !== 0) {\n          _this.emit('fetch');\n        }\n      }\n    };\n\n    _this.toggleRefresh = function () {\n      _this.setRefreshInterval({ pause: !_this._refreshInterval.pause });\n    };\n\n    _this.createFilter = function (indexPattern, timeRange) {\n      return (0, _get_time.getTime)(indexPattern, timeRange ? timeRange : _this._time, _this.getForceNow());\n    };\n\n    _this.getBounds = function () {\n      return _this.calculateBounds(_this._time);\n    };\n\n    _this.getForceNow = function () {\n      var forceNow = (0, _parse_querystring.parseQueryString)().forceNow;\n      if (!forceNow) {\n        return;\n      }\n\n      var ticks = Date.parse(forceNow);\n      if (isNaN(ticks)) {\n        throw new Error('forceNow query parameter, ' + forceNow + ', can\\'t be parsed by Date.parse');\n      }\n      return new Date(ticks);\n    };\n\n    _this.calculateBounds = function (timeRange) {\n      return (0, _get_time.calculateBounds)(timeRange, { forceNow: _this.getForceNow() });\n    };\n\n    _this.getActiveBounds = function () {\n      if (_this.isTimeRangeSelectorEnabled) {\n        return _this.getBounds();\n      }\n    };\n\n    _this.enableTimeRangeSelector = function () {\n      _this.isTimeRangeSelectorEnabled = true;\n      _this.emit('enabledUpdated');\n    };\n\n    _this.disableTimeRangeSelector = function () {\n      _this.isTimeRangeSelectorEnabled = false;\n      _this.emit('enabledUpdated');\n    };\n\n    _this.enableAutoRefreshSelector = function () {\n      _this.isAutoRefreshSelectorEnabled = true;\n      _this.emit('enabledUpdated');\n    };\n\n    _this.disableAutoRefreshSelector = function () {\n      _this.isAutoRefreshSelectorEnabled = false;\n      _this.emit('enabledUpdated');\n    };\n\n    _this.isTimeRangeSelectorEnabled = false;\n    _this.isAutoRefreshSelectorEnabled = false;\n    _this._time = _chrome2.default.getUiSettingsClient().get('timepicker:timeDefaults');\n    _this.setRefreshInterval(_chrome2.default.getUiSettingsClient().get('timepicker:refreshIntervalDefaults'));\n    return _this;\n  }\n\n  /**\n   * Updates timefilter time.\n   * Emits 'timeUpdate' and 'fetch' events when time changes\n   * @param {Object} time\n   * @property {string|moment} time.from\n   * @property {string|moment} time.to\n   * @property {string} time.mode (quick | relative | absolute)\n   */\n\n\n  /**\n   * Set timefilter refresh interval.\n   * @param {Object} refreshInterval\n   * @property {number} time.value Refresh interval in milliseconds. Positive integer\n   * @property {boolean} time.pause\n   */\n\n\n  /**\n   * Show the time bounds selector part of the time filter\n   */\n\n\n  /**\n   * Hide the time bounds selector part of the time filter\n   */\n\n\n  /**\n   * Show the auto refresh part of the time filter\n   */\n\n\n  /**\n   * Hide the auto refresh part of the time filter\n   */\n\n\n  return Timefilter;\n}(_simple_emitter.SimpleEmitter);\n\nvar timefilter = exports.timefilter = new Timefilter();\n\n// TODO\n// remove everything underneath once globalState is no longer an angular service\n// and listener can be registered without angular.\nfunction convertISO8601(stringTime) {\n  var obj = (0, _moment2.default)(stringTime, 'YYYY-MM-DDTHH:mm:ss.SSSZ', true);\n  return obj.isValid() ? obj : stringTime;\n}\n\n// Currently some parts of Kibana (index patterns, timefilter) rely on addSetupWork in the uiRouter\n// and require it to be executed to properly function.\n// This function is exposed for applications that do not use uiRoutes like APM\n// Kibana issue https://github.com/elastic/kibana/issues/19110 tracks the removal of this dependency on uiRouter\nvar registerTimefilterWithGlobalState = exports.registerTimefilterWithGlobalState = _lodash2.default.once(function (globalState, $rootScope) {\n  var uiSettings = _chrome2.default.getUiSettingsClient();\n  var timeDefaults = uiSettings.get('timepicker:timeDefaults');\n  var refreshIntervalDefaults = uiSettings.get('timepicker:refreshIntervalDefaults');\n\n  timefilter.setTime(_lodash2.default.defaults(globalState.time || {}, timeDefaults));\n  timefilter.setRefreshInterval(_lodash2.default.defaults(globalState.refreshInterval || {}, refreshIntervalDefaults));\n\n  globalState.on('fetch_with_changes', function () {\n    // clone and default to {} in one\n    var newTime = _lodash2.default.defaults({}, globalState.time, timeDefaults);\n    var newRefreshInterval = _lodash2.default.defaults({}, globalState.refreshInterval, refreshIntervalDefaults);\n\n    if (newTime) {\n      if (newTime.to) newTime.to = convertISO8601(newTime.to);\n      if (newTime.from) newTime.from = convertISO8601(newTime.from);\n    }\n\n    timefilter.setTime(newTime);\n    timefilter.setRefreshInterval(newRefreshInterval);\n  });\n\n  var updateGlobalStateWithTime = function updateGlobalStateWithTime() {\n    globalState.time = timefilter.getTime();\n    globalState.refreshInterval = timefilter.getRefreshInterval();\n    globalState.save();\n  };\n\n  $rootScope.$listenAndDigestAsync(timefilter, 'refreshIntervalUpdate', updateGlobalStateWithTime);\n\n  $rootScope.$listenAndDigestAsync(timefilter, 'timeUpdate', updateGlobalStateWithTime);\n});\n\n_routes2.default.addSetupWork(function (globalState, $rootScope) {\n  return registerTimefilterWithGlobalState(globalState, $rootScope);\n});",null]}