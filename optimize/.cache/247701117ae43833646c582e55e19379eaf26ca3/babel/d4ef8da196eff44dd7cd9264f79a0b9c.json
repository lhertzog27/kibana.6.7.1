{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/status_page/public/lib/load_status.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/status_page/public/lib/load_status.js","mtime":1567631691293},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fetchData = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt('return', fetch(_chrome2.default.addBasePath('/api/status'), {\n              method: 'get',\n              credentials: 'same-origin'\n            }));\n\n          case 1:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function fetchData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n/*\nGet the status from the server API and format it for display.\n\n`fetchFn` can be injected for testing, defaults to the implementation above.\n*/\n\n\nvar loadStatus = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var fetchFn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : fetchData;\n    var response, serverIsDownErrorMessage, serverStatusCodeErrorMessage, data;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // Clear any existing error banner.\n            if (errorNotif) {\n              errorNotif.clear();\n              errorNotif = null;\n            }\n\n            response = void 0;\n            _context2.prev = 2;\n            _context2.next = 5;\n            return fetchFn();\n\n          case 5:\n            response = _context2.sent;\n            _context2.next = 13;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2['catch'](2);\n\n            // If the fetch failed to connect, display an error and bail.\n            serverIsDownErrorMessage = _i18n.i18n.translate('statusPage.loadStatus.serverIsDownErrorMessage', {\n              defaultMessage: 'Failed to request server status. Perhaps your server is down?'\n            });\n\n\n            errorNotif = _notify.toastNotifications.addDanger(serverIsDownErrorMessage);\n            return _context2.abrupt('return', _context2.t0);\n\n          case 13:\n            if (!(response.status >= 400)) {\n              _context2.next = 17;\n              break;\n            }\n\n            // If the server does not respond with a successful status, display an error and bail.\n            serverStatusCodeErrorMessage = _i18n.i18n.translate('statusPage.loadStatus.serverStatusCodeErrorMessage', {\n              defaultMessage: 'Failed to request server status with status code {responseStatus}',\n              values: { responseStatus: response.status }\n            });\n\n\n            errorNotif = _notify.toastNotifications.addDanger(serverStatusCodeErrorMessage);\n            return _context2.abrupt('return');\n\n          case 17:\n            _context2.next = 19;\n            return response.json();\n\n          case 19:\n            data = _context2.sent;\n            return _context2.abrupt('return', {\n              name: data.name,\n              statuses: data.status.statuses.map(formatStatus),\n              serverState: formatStatus(data.status.overall).state,\n              metrics: formatMetrics(data)\n            });\n\n          case 21:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[2, 8]]);\n  }));\n\n  return function loadStatus() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _notify = require('ui/notify');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * software distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\n// Module-level error returned by notify.error\nvar errorNotif = void 0;\n\n/*\nReturns an object of any keys that should be included for metrics.\n*/\nfunction formatMetrics(data) {\n  if (!data.metrics) {\n    return null;\n  }\n\n  return [{\n    name: _i18n.i18n.translate('statusPage.metricsTiles.columns.heapTotalHeader', {\n      defaultMessage: 'Heap total'\n    }),\n    value: _lodash2.default.get(data.metrics, 'process.memory.heap.size_limit'),\n    type: 'byte'\n  }, {\n    name: _i18n.i18n.translate('statusPage.metricsTiles.columns.heapUsedHeader', {\n      defaultMessage: 'Heap used'\n    }),\n    value: _lodash2.default.get(data.metrics, 'process.memory.heap.used_in_bytes'),\n    type: 'byte'\n  }, {\n    name: _i18n.i18n.translate('statusPage.metricsTiles.columns.loadHeader', {\n      defaultMessage: 'Load'\n    }),\n    value: [_lodash2.default.get(data.metrics, 'os.load.1m'), _lodash2.default.get(data.metrics, 'os.load.5m'), _lodash2.default.get(data.metrics, 'os.load.15m')],\n    type: 'float'\n  }, {\n    name: _i18n.i18n.translate('statusPage.metricsTiles.columns.resTimeAvgHeader', {\n      defaultMessage: 'Response time avg'\n    }),\n    value: _lodash2.default.get(data.metrics, 'response_times.avg_in_millis'),\n    type: 'ms'\n  }, {\n    name: _i18n.i18n.translate('statusPage.metricsTiles.columns.resTimeMaxHeader', {\n      defaultMessage: 'Response time max'\n    }),\n    value: _lodash2.default.get(data.metrics, 'response_times.max_in_millis'),\n    type: 'ms'\n  }, {\n    name: _i18n.i18n.translate('statusPage.metricsTiles.columns.requestsPerSecHeader', {\n      defaultMessage: 'Requests per second'\n    }),\n    value: _lodash2.default.get(data.metrics, 'requests.total') * 1000 / _lodash2.default.get(data.metrics, 'collection_interval_in_millis')\n  }];\n}\n\n/**\n * Reformat the backend data to make the frontend views simpler.\n */\nfunction formatStatus(status) {\n  return {\n    id: status.id,\n    state: {\n      id: status.state,\n      title: status.title,\n      message: status.message,\n      uiColor: status.uiColor\n    }\n  };\n}\n\nexports.default = loadStatus;\nmodule.exports = exports['default'];",null]}