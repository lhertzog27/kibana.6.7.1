{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/vis_controller.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/vis_controller.js","mtime":1567631711533},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VisController = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nicensed to Elasticsearch B.V. under one or more contributor\nlicense agreements. See the NOTICE file distributed with\nthis work for additional information regarding copyright\nownership. Elasticsearch B.V. licenses this file to you under\nthe Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License.\nou may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _i18n = require('ui/i18n');\n\nvar _input_control_vis = require('./components/vis/input_control_vis');\n\nvar _control_factory = require('./control/control_factory');\n\nvar _lineage = require('./lineage');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VisController = function () {\n  function VisController(el, vis) {\n    var _this = this;\n\n    _classCallCheck(this, VisController);\n\n    this.drawVis = function () {\n      (0, _reactDom.render)(_react2.default.createElement(\n        _i18n.I18nContext,\n        null,\n        _react2.default.createElement(_input_control_vis.InputControlVis, {\n          updateFiltersOnChange: _this.vis.params.updateFiltersOnChange,\n          controls: _this.controls,\n          stageFilter: _this.stageFilter,\n          submitFilters: _this.submitFilters,\n          resetControls: _this.updateControlsFromKbn,\n          clearControls: _this.clearControls,\n          hasChanges: _this.hasChanges,\n          hasValues: _this.hasValues,\n          refreshControl: _this.refreshControl\n        })\n      ), _this.el);\n    };\n\n    this.stageFilter = function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(controlIndex, newValue) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.controls[controlIndex].set(newValue);\n\n                if (!_this.vis.params.updateFiltersOnChange) {\n                  _context.next = 5;\n                  break;\n                }\n\n                // submit filters on each control change\n                _this.submitFilters();\n                _context.next = 8;\n                break;\n\n              case 5:\n                _context.next = 7;\n                return _this.updateNestedControls();\n\n              case 7:\n                _this.drawVis();\n\n              case 8:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.submitFilters = function () {\n      // Clean up filter pills for nested controls that are now disabled because ancestors are not set\n      _this.controls.map(function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(control) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (control.hasAncestors() && control.hasUnsetAncestor()) {\n                    control.filterManager.findFilters().forEach(function (existingFilter) {\n                      _this.vis.API.queryFilter.removeFilter(existingFilter);\n                    });\n                  }\n\n                case 1:\n                case 'end':\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, _this);\n        }));\n\n        return function (_x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n\n      var stagedControls = _this.controls.filter(function (control) {\n        return control.hasChanged();\n      });\n\n      var newFilters = stagedControls.filter(function (control) {\n        return control.hasKbnFilter();\n      }).map(function (control) {\n        return control.getKbnFilter();\n      });\n\n      stagedControls.forEach(function (control) {\n        // to avoid duplicate filters, remove any old filters for control\n        control.filterManager.findFilters().forEach(function (existingFilter) {\n          _this.vis.API.queryFilter.removeFilter(existingFilter);\n        });\n      });\n\n      _this.vis.API.queryFilter.addFilters(newFilters, _this.vis.params.pinFilters);\n    };\n\n    this.clearControls = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.controls.forEach(function (control) {\n                control.clear();\n              });\n              _context3.next = 3;\n              return _this.updateNestedControls();\n\n            case 3:\n              _this.drawVis();\n\n            case 4:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, _this);\n    }));\n    this.updateControlsFromKbn = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this.controls.forEach(function (control) {\n                control.reset();\n              });\n              _context4.next = 3;\n              return _this.updateNestedControls();\n\n            case 3:\n              _this.drawVis();\n\n            case 4:\n            case 'end':\n              return _context4.stop();\n          }\n        }\n      }, _callee4, _this);\n    }));\n\n    this.hasChanges = function () {\n      return _this.controls.map(function (control) {\n        return control.hasChanged();\n      }).reduce(function (a, b) {\n        return a || b;\n      });\n    };\n\n    this.hasValues = function () {\n      return _this.controls.map(function (control) {\n        return control.hasValue();\n      }).reduce(function (a, b) {\n        return a || b;\n      });\n    };\n\n    this.refreshControl = function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(controlIndex, query) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _this.controls[controlIndex].fetch(query);\n\n              case 2:\n                _this.drawVis();\n\n              case 3:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, _callee5, _this);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    this.el = el;\n    this.vis = vis;\n    this.controls = [];\n\n    this.queryBarUpdateHandler = this.updateControlsFromKbn.bind(this);\n    this.vis.API.queryFilter.on('update', this.queryBarUpdateHandler);\n  }\n\n  _createClass(VisController, [{\n    key: 'render',\n    value: function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(visData, status) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(status.params || this.vis.params.useTimeFilter && status.time)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                this.controls = [];\n                _context6.next = 4;\n                return this.initControls();\n\n              case 4:\n                this.controls = _context6.sent;\n\n                this.drawVis();\n                return _context6.abrupt('return');\n\n              case 7:\n                return _context6.abrupt('return');\n\n              case 8:\n              case 'end':\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function render(_x6, _x7) {\n        return _ref6.apply(this, arguments);\n      }\n\n      return render;\n    }()\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.vis.API.queryFilter.off('update', this.queryBarUpdateHandler);\n      (0, _reactDom.unmountComponentAtNode)(this.el);\n    }\n  }, {\n    key: 'initControls',\n    value: function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var _this2 = this;\n\n        var controlParamsList, controlFactoryPromises, controls, getControl, controlInitPromises;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                controlParamsList = this.vis.params.controls.filter(function (controlParams) {\n                  // ignore controls that do not have indexPattern or field\n                  return controlParams.indexPattern && controlParams.fieldName;\n                });\n                controlFactoryPromises = controlParamsList.map(function (controlParams) {\n                  var factory = (0, _control_factory.controlFactory)(controlParams);\n                  return factory(controlParams, _this2.vis.API, _this2.vis.params.useTimeFilter);\n                });\n                _context7.next = 4;\n                return Promise.all(controlFactoryPromises);\n\n              case 4:\n                controls = _context7.sent;\n\n                getControl = function getControl(id) {\n                  return controls.find(function (control) {\n                    return id === control.id;\n                  });\n                };\n\n                controlInitPromises = [];\n\n                (0, _lineage.getLineageMap)(controlParamsList).forEach(function (lineage, controlId) {\n                  // first lineage item is the control. remove it\n                  lineage.shift();\n                  var ancestors = [];\n                  lineage.forEach(function (ancestorId) {\n                    ancestors.push(getControl(ancestorId));\n                  });\n                  var control = getControl(controlId);\n                  control.setAncestors(ancestors);\n                  controlInitPromises.push(control.fetch());\n                });\n\n                _context7.next = 10;\n                return Promise.all(controlInitPromises);\n\n              case 10:\n                return _context7.abrupt('return', controls);\n\n              case 11:\n              case 'end':\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function initControls() {\n        return _ref7.apply(this, arguments);\n      }\n\n      return initControls;\n    }()\n  }, {\n    key: 'updateNestedControls',\n    value: function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var _this3 = this;\n\n        var fetchPromises;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                fetchPromises = this.controls.map(function () {\n                  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(control) {\n                    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                      while (1) {\n                        switch (_context8.prev = _context8.next) {\n                          case 0:\n                            if (!control.hasAncestors()) {\n                              _context8.next = 3;\n                              break;\n                            }\n\n                            _context8.next = 3;\n                            return control.fetch();\n\n                          case 3:\n                          case 'end':\n                            return _context8.stop();\n                        }\n                      }\n                    }, _callee8, _this3);\n                  }));\n\n                  return function (_x8) {\n                    return _ref9.apply(this, arguments);\n                  };\n                }());\n                _context9.next = 3;\n                return Promise.all(fetchPromises);\n\n              case 3:\n                return _context9.abrupt('return', _context9.sent);\n\n              case 4:\n              case 'end':\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function updateNestedControls() {\n        return _ref8.apply(this, arguments);\n      }\n\n      return updateNestedControls;\n    }()\n  }]);\n\n  return VisController;\n}();\n\nexports.VisController = VisController;",null]}