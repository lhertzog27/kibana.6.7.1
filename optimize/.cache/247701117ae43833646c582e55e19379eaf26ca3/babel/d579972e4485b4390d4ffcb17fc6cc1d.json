{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/courier/search_strategy/search_error.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/courier/search_strategy/search_error.js","mtime":1567631711715},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSearchErrorType = getSearchErrorType;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar SearchError = exports.SearchError = function (_Error) {\n  _inherits(SearchError, _Error);\n\n  function SearchError(_ref) {\n    var status = _ref.status,\n        title = _ref.title,\n        message = _ref.message,\n        path = _ref.path,\n        type = _ref.type;\n\n    _classCallCheck(this, SearchError);\n\n    var _this = _possibleConstructorReturn(this, (SearchError.__proto__ || Object.getPrototypeOf(SearchError)).call(this, message));\n\n    _this.name = 'SearchError';\n    _this.status = status;\n    _this.title = title;\n    _this.message = message;\n    _this.path = path;\n    _this.type = type;\n\n    // captureStackTrace is only available in the V8 engine, so any browser using\n    // a different JS engine won't have access to this method.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_this, SearchError);\n    }\n\n    // Babel doesn't support traditional `extends` syntax for built-in classes.\n    // https://babeljs.io/docs/en/caveats/#classes\n    Object.setPrototypeOf(_this, SearchError.prototype);\n    return _this;\n  }\n\n  return SearchError;\n}(Error);\n\nfunction getSearchErrorType(_ref2) {\n  var message = _ref2.message;\n\n  var msg = message.toLowerCase();\n  if (msg.indexOf('unsupported query') > -1) {\n    return 'UNSUPPORTED_QUERY';\n  }\n}",null]}