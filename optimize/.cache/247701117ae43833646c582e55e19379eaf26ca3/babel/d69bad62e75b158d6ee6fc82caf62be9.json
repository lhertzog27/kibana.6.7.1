{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/lib/sibling_pipeline_agg_helper.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/lib/sibling_pipeline_agg_helper.js","mtime":1567631711700},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.siblingPipelineAggHelper = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _agg_config = require('../../../vis/agg_config');\n\nvar _schemas = require('../../../vis/editors/default/schemas');\n\nvar _sibling_pipeline_agg_controller = require('./sibling_pipeline_agg_controller');\n\nvar _sibling_pipeline_agg_writer = require('./sibling_pipeline_agg_writer');\n\nvar _sub_metric = require('../../controls/sub_metric.html');\n\nvar _sub_metric2 = _interopRequireDefault(_sub_metric);\n\nvar _nested_agg_helpers = require('./nested_agg_helpers');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar metricAggFilter = ['!top_hits', '!percentiles', '!percentile_ranks', '!median', '!std_dev', '!sum_bucket', '!avg_bucket', '!min_bucket', '!max_bucket', '!derivative', '!moving_avg', '!serial_diff', '!cumulative_sum'];\n\nvar metricAggSchema = new _schemas.Schemas([{\n  group: 'none',\n  name: 'metricAgg',\n  title: _i18n.i18n.translate('common.ui.aggTypes.metrics.metricAggTitle', {\n    defaultMessage: 'Metric Agg'\n  }),\n  aggFilter: metricAggFilter\n}]).all[0];\n\nvar bucketAggFilter = [];\nvar bucketAggSchema = new _schemas.Schemas([{\n  group: 'none',\n  title: _i18n.i18n.translate('common.ui.aggTypes.metrics.bucketAggTitle', {\n    defaultMessage: 'Bucket Agg'\n  }),\n  name: 'bucketAgg',\n  aggFilter: bucketAggFilter\n}]).all[0];\n\nvar siblingPipelineAggHelper = {\n  subtype: _i18n.i18n.translate('common.ui.aggTypes.metrics.siblingPipelineAggregationsSubtypeTitle', {\n    defaultMessage: 'Sibling Pipeline Aggregations'\n  }),\n  params: function params() {\n    return [{\n      name: 'customBucket',\n      type: _agg_config.AggConfig,\n      default: null,\n      serialize: function serialize(customMetric) {\n        return customMetric.toJSON();\n      },\n      deserialize: function deserialize(state, agg) {\n        return this.makeAgg(agg, state);\n      },\n      makeAgg: function makeAgg(agg, state) {\n        state = state || { type: 'date_histogram' };\n        state.schema = bucketAggSchema;\n        var orderAgg = agg.aggConfigs.createAggConfig(state, { addToAggConfigs: false });\n        orderAgg.id = agg.id + '-bucket';\n        return orderAgg;\n      },\n      editor: _sub_metric2.default,\n      controller: (0, _sibling_pipeline_agg_controller.siblingPipelineAggController)('customBucket'),\n      modifyAggConfigOnSearchRequestStart: (0, _nested_agg_helpers.forwardModifyAggConfigOnSearchRequestStart)('customBucket'),\n      write: _lodash2.default.noop\n    }, {\n      name: 'customMetric',\n      type: _agg_config.AggConfig,\n      default: null,\n      serialize: function serialize(customMetric) {\n        return customMetric.toJSON();\n      },\n      deserialize: function deserialize(state, agg) {\n        return this.makeAgg(agg, state);\n      },\n      makeAgg: function makeAgg(agg, state) {\n        state = state || { type: 'count' };\n        state.schema = metricAggSchema;\n        var orderAgg = agg.aggConfigs.createAggConfig(state, { addToAggConfigs: false });\n        orderAgg.id = agg.id + '-metric';\n        return orderAgg;\n      },\n      editor: _sub_metric2.default,\n      controller: (0, _sibling_pipeline_agg_controller.siblingPipelineAggController)('customMetric'),\n      modifyAggConfigOnSearchRequestStart: (0, _nested_agg_helpers.forwardModifyAggConfigOnSearchRequestStart)('customMetric'),\n      write: _sibling_pipeline_agg_writer.siblingPipelineAggWriter\n    }];\n  },\n  getFormat: function getFormat(agg) {\n    return agg.params.customMetric.type.getFormat(agg.params.customMetric);\n  }\n};\n\nexports.siblingPipelineAggHelper = siblingPipelineAggHelper;",null]}