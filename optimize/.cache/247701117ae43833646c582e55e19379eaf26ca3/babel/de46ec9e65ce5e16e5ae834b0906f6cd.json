{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/vega/public/data_model/ems_file_parser.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/vega/public/data_model/ems_file_parser.js","mtime":1567631711656},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmsFileParser = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Licensed to Elasticsearch B.V. under one or more contributor\nlicense agreements. See the NOTICE file distributed with\nthis work for additional information regarding copyright\nownership. Elasticsearch B.V. licenses this file to you under\nthe Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License.\nou may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\nhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn\nvar _i18n = require('@kbn/i18n');\n\nvar _vega_base_view = require('../vega_view/vega_base_view');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class processes all Vega spec customizations,\n * converting url object parameters into query results.\n */\nvar EmsFileParser = exports.EmsFileParser = function () {\n  function EmsFileParser(serviceSettings) {\n    _classCallCheck(this, EmsFileParser);\n\n    this._serviceSettings = serviceSettings;\n  }\n\n  // noinspection JSMethodCanBeStatic\n  /**\n   * Update request object, expanding any context-aware keywords\n   */\n\n\n  _createClass(EmsFileParser, [{\n    key: 'parseUrl',\n    value: function parseUrl(obj, url) {\n      if (typeof url.name !== 'string') {\n        throw new Error(_i18n.i18n.translate('vega.emsFileParser.missingNameOfFileErrorMessage', {\n          defaultMessage: '{dataUrlParam} with {dataUrlParamValue} requires {nameParam} parameter (name of the file)',\n          values: {\n            dataUrlParam: '\"data.url\"',\n            dataUrlParamValue: '{\"%type%\": \"emsfile\"}',\n            nameParam: '\"name\"'\n          }\n        }));\n      }\n      // Optimization: so initiate remote request as early as we know that we will need it\n      if (!this._fileLayersP) {\n        this._fileLayersP = this._serviceSettings.getFileLayers();\n      }\n      return { obj: obj, name: url.name };\n    }\n\n    /**\n     * Process items generated by parseUrl()\n     * @param {object[]} requests each object is generated by parseUrl()\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: 'populateData',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(requests) {\n        var _this = this;\n\n        var layers, _loop, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _ref2;\n\n        return regeneratorRuntime.wrap(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(requests.length === 0)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt('return');\n\n              case 2:\n                _context2.next = 4;\n                return this._fileLayersP;\n\n              case 4:\n                layers = _context2.sent;\n                _loop = /*#__PURE__*/regeneratorRuntime.mark(function _loop(_ref2) {\n                  var obj, name, foundLayer, url;\n                  return regeneratorRuntime.wrap(function _loop$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          obj = _ref2.obj, name = _ref2.name;\n                          foundLayer = layers.find(function (v) {\n                            return v.name === name;\n                          });\n\n                          if (foundLayer) {\n                            _context.next = 4;\n                            break;\n                          }\n\n                          throw new Error(_i18n.i18n.translate('vega.emsFileParser.emsFileNameDoesNotExistErrorMessage', {\n                            defaultMessage: '{emsfile} {emsfileName} does not exist',\n                            values: { emsfileName: JSON.stringify(name), emsfile: 'emsfile' }\n                          }));\n\n                        case 4:\n                          _context.next = 6;\n                          return _this._serviceSettings.getUrlForRegionLayer(foundLayer);\n\n                        case 6:\n                          url = _context.sent;\n\n                          obj.url = (0, _vega_base_view.bypassExternalUrlCheck)(url);\n\n                        case 8:\n                        case 'end':\n                          return _context.stop();\n                      }\n                    }\n                  }, _loop, _this);\n                });\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context2.prev = 9;\n                _iterator = requests[Symbol.iterator]();\n\n              case 11:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                _ref2 = _step.value;\n                return _context2.delegateYield(_loop(_ref2), 't0', 14);\n\n              case 14:\n                _iteratorNormalCompletion = true;\n                _context2.next = 11;\n                break;\n\n              case 17:\n                _context2.next = 23;\n                break;\n\n              case 19:\n                _context2.prev = 19;\n                _context2.t1 = _context2['catch'](9);\n                _didIteratorError = true;\n                _iteratorError = _context2.t1;\n\n              case 23:\n                _context2.prev = 23;\n                _context2.prev = 24;\n\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                  _iterator.return();\n                }\n\n              case 26:\n                _context2.prev = 26;\n\n                if (!_didIteratorError) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 29:\n                return _context2.finish(26);\n\n              case 30:\n                return _context2.finish(23);\n\n              case 31:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee, this, [[9, 19, 23, 31], [24,, 26, 30]]);\n      }));\n\n      function populateData(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return populateData;\n    }()\n  }]);\n\n  return EmsFileParser;\n}();",null]}