{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/chrome/chrome.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/chrome.js","mtime":1567631711709},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chrome = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _metadata = require('../metadata');\n\nrequire('../state_management/global_state');\n\nrequire('../config');\n\nrequire('../notify');\n\nrequire('../private');\n\nrequire('../promises');\n\nrequire('../storage');\n\nrequire('../directives/kbn_src');\n\nrequire('../watch_multi');\n\nrequire('./services');\n\nrequire('../react_components');\n\nvar _angular3 = require('./api/angular');\n\nvar _apps = require('./api/apps');\n\nvar _apps2 = _interopRequireDefault(_apps);\n\nvar _controls = require('./api/controls');\n\nvar _nav = require('./api/nav');\n\nvar _breadcrumbs = require('./api/breadcrumbs');\n\nvar _template = require('./api/template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _theme = require('./api/theme');\n\nvar _xsrf = require('./api/xsrf');\n\nvar _ui_settings = require('./api/ui_settings');\n\nvar _loading_count = require('./api/loading_count');\n\nvar _saved_object_client = require('./api/saved_object_client');\n\nvar _base_path = require('./api/base_path');\n\nvar _injected_vars = require('./api/injected_vars');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar chrome = exports.chrome = {};\nvar internals = _lodash2.default.defaults(_lodash2.default.cloneDeep(_metadata.metadata), {\n  basePath: '',\n  rootController: null,\n  rootTemplate: null,\n  showAppsLink: null,\n  xsrfToken: null,\n  devMode: true,\n  brand: null,\n  nav: [],\n  applicationClasses: []\n});\n\n(0, _ui_settings.initUiSettingsApi)(chrome);\n(0, _saved_object_client.initSavedObjectClient)(chrome);\n(0, _apps2.default)(chrome, internals);\n(0, _xsrf.initChromeXsrfApi)(chrome, internals);\n(0, _base_path.initChromeBasePathApi)(chrome);\n(0, _injected_vars.initChromeInjectedVarsApi)(chrome);\n(0, _nav.initChromeNavApi)(chrome, internals);\n(0, _breadcrumbs.initBreadcrumbsApi)(chrome, internals);\n(0, _loading_count.initLoadingCountApi)(chrome, internals);\n(0, _angular3.initAngularApi)(chrome, internals);\n(0, _controls.initChromeControlsApi)(chrome);\n(0, _template2.default)(chrome, internals);\n(0, _theme.initChromeThemeApi)(chrome);\n\nvar waitForBootstrap = new Promise(function (resolve) {\n  chrome.bootstrap = function (targetDomElement) {\n    // import chrome nav controls and hacks now so that they are executed after\n    // everything else, can safely import the chrome, and interact with services\n    // and such setup by all other modules\n    require('uiExports/chromeNavControls');\n    require('uiExports/hacks');\n\n    // sets attribute on body for stylesheet sandboxing\n    document.body.setAttribute('id', internals.app.id + '-app');\n\n    chrome.setupAngular();\n    targetDomElement.setAttribute('id', 'kibana-body');\n    targetDomElement.setAttribute('kbn-chrome', 'true');\n    _angular2.default.bootstrap(targetDomElement, ['kibana']);\n    resolve(targetDomElement);\n  };\n});\n\n/**\n * ---- ATTENTION: Read documentation carefully before using this! ----\n *\n * Returns a promise, that resolves with an instance of the currently used Angular\n * $injector service for usage outside of Angular.\n * You can use this injector to get access to any other injectable component (service,\n * constant, etc.) by using its get method.\n *\n * If you ever use Angular outside of an Angular context via this method, you should\n * be really sure you know what you are doing!\n *\n * When using this method inside your code, you will need to stub it while running\n * tests. Look into 'src/test_utils/public/stub_get_active_injector' for more information.\n */\nchrome.dangerouslyGetActiveInjector = function () {\n  return waitForBootstrap.then(function (targetDomElement) {\n    var $injector = _angular2.default.element(targetDomElement).injector();\n    if (!$injector) {\n      return Promise.reject('targetDomElement had no angular context after bootstrapping');\n    }\n    return $injector;\n  });\n};",null]}