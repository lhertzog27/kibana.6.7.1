{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/routes/routes.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/routes/routes.js","mtime":1567631711752},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uiRoutes = undefined;\n\nvar _route_manager = require('./route_manager');\n\nvar _route_manager2 = _interopRequireDefault(_route_manager);\n\nrequire('angular-route/angular-route');\n\nvar _modules = require('../modules');\n\nvar _route_setup_manager = require('./route_setup_manager');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar defaultRouteManager = new _route_manager2.default();\n\nvar uiRoutes = exports.uiRoutes = Object.create(defaultRouteManager, {\n  WAIT_FOR_URL_CHANGE_TOKEN: {\n    value: _route_setup_manager.WAIT_FOR_URL_CHANGE_TOKEN\n  },\n\n  enable: {\n    value: function value() {\n      _modules.uiModules.get('kibana', ['ngRoute']).config(defaultRouteManager.config).run(defaultRouteManager.run);\n    }\n  }\n});",null]}