{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/courier/search_poll/search_poll.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/courier/search_poll/search_poll.js","mtime":1567631711714},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SearchPollProvider = SearchPollProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _notify = require('../../notify');\n\nrequire('../../promises');\n\nvar _search_request_queue = require('../search_request_queue');\n\nvar _fetch = require('../fetch');\n\nvar _timefilter = require('ui/timefilter');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*\n                                                                                                                                                           * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                           * license agreements. See the NOTICE file distributed with\n                                                                                                                                                           * this work for additional information regarding copyright\n                                                                                                                                                           * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                           * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                           * not use this file except in compliance with the License.\n                                                                                                                                                           * You may obtain a copy of the License at\n                                                                                                                                                           *\n                                                                                                                                                           *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                           *\n                                                                                                                                                           * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                           * software distributed under the License is distributed on an\n                                                                                                                                                           * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                           * KIND, either express or implied.  See the License for the\n                                                                                                                                                           * specific language governing permissions and limitations\n                                                                                                                                                           * under the License.\n                                                                                                                                                           */\n\nfunction SearchPollProvider(Private, Promise) {\n  var fetchSoon = Private(_fetch.FetchSoonProvider);\n\n  var SearchPoll = function SearchPoll() {\n    var _this = this;\n\n    _classCallCheck(this, SearchPoll);\n\n    this.setIntervalInMs = function (intervalInMs) {\n      _this._intervalInMs = _lodash2.default.parseInt(intervalInMs);\n    };\n\n    this.resume = function () {\n      _this._isPolling = true;\n      _this.resetTimer();\n    };\n\n    this.pause = function () {\n      _this._isPolling = false;\n      _this.clearTimer();\n    };\n\n    this.resetTimer = function () {\n      // Cancel the pending search and schedule a new one.\n      _this.clearTimer();\n\n      if (_this._isPolling) {\n        _this._timerId = setTimeout(_this._search, _this._intervalInMs);\n      }\n    };\n\n    this.clearTimer = function () {\n      // Cancel the pending search, if there is one.\n      if (_this._timerId) {\n        clearTimeout(_this._timerId);\n        _this._timerId = null;\n      }\n    };\n\n    this._search = function () {\n      // If our interval is faster than the rate at which searches return results, then trigger\n      // a new search as soon as the results come back.\n      if (_this._searchPromise) {\n        _this._isIntervalFasterThanSearch = true;\n        return;\n      }\n\n      // Schedule another search.\n      _this.resetTimer();\n\n      // We use resolve() here instead of try() because the latter won't trigger a $digest\n      // when the promise resolves.\n      _this._searchPromise = Promise.resolve().then(function () {\n        _timefilter.timefilter.emit('autoRefreshFetch');\n        var requests = _search_request_queue.searchRequestQueue.getInactive();\n\n        // The promise returned from fetchSearchRequests() only resolves when the requests complete.\n        // We want to continue even if the requests abort so we return a different promise.\n        fetchSoon.fetchSearchRequests(requests);\n\n        return Promise.all(requests.map(function (request) {\n          return request.getCompleteOrAbortedPromise();\n        }));\n      }).then(function () {\n        _this._searchPromise = null;\n\n        // If the search response comes back before the interval fires, then we'll wait\n        // for the interval and let it kick off the next search. But if the interval fires before\n        // the search returns results, then we'll need to wait for the search to return results\n        // and then kick off another search again. A new search will also reset the interval.\n        if (_this._isIntervalFasterThanSearch) {\n          _this._isIntervalFasterThanSearch = false;\n          _this._search();\n        }\n      }).catch(function (err) {\n        // If there was a problem, then kill Kibana.\n        (0, _notify.fatalError)(err);\n      });\n    };\n\n    this._isPolling = false;\n    this._intervalInMs = undefined;\n    this._timerId = null;\n    this._searchPromise = null;\n    this._isIntervalFasterThanSearch = false;\n  };\n\n  return new SearchPoll();\n}",null]}