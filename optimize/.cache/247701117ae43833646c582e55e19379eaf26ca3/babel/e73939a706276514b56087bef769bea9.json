{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/test_harness/test_sharding/setup_test_sharding.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/test_harness/test_sharding/setup_test_sharding.js","mtime":1567631711760},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupTestSharding = setupTestSharding;\n\nvar _lodash = require('lodash');\n\nvar _find_test_bundle_url = require('./find_test_bundle_url');\n\nvar _get_sharding_params_from_url = require('./get_sharding_params_from_url');\n\nvar _setup_top_level_describe_filter = require('./setup_top_level_describe_filter');\n\nvar _get_shard_num = require('./get_shard_num');\n\nvar DEFAULT_PARAMS = {\n  shards: 1,\n  shard_num: 1\n}; /*\n    * Licensed to Elasticsearch B.V. under one or more contributor\n    * license agreements. See the NOTICE file distributed with\n    * this work for additional information regarding copyright\n    * ownership. Elasticsearch B.V. licenses this file to you under\n    * the Apache License, Version 2.0 (the \"License\"); you may\n    * not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *    http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing,\n    * software distributed under the License is distributed on an\n    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    * KIND, either express or implied.  See the License for the\n    * specific language governing permissions and limitations\n    * under the License.\n    */\n\nfunction setupTestSharding() {\n  var pageUrl = window.location.href;\n  var bundleUrl = (0, _find_test_bundle_url.findTestBundleUrl)();\n\n  // supports overriding params via the debug page\n  // url in dev mode\n  var params = (0, _lodash.defaults)({}, (0, _get_sharding_params_from_url.getShardingParamsFromUrl)(pageUrl), (0, _get_sharding_params_from_url.getShardingParamsFromUrl)(bundleUrl), DEFAULT_PARAMS);\n\n  var shardTotal = params.shards,\n      shardNum = params.shard_num;\n\n  if (shardNum < 1 || shardNum > shardTotal) {\n    throw new TypeError('shard_num param of ' + shardNum + ' must be greater 0 and less than the total, ' + shardTotal);\n  }\n\n  // track and log the number of ignored describe calls\n  var ignoredDescribeShards = [];\n  before(function () {\n    var ignoredCount = ignoredDescribeShards.length;\n    var ignoredFrom = (0, _lodash.uniq)(ignoredDescribeShards).join(', ');\n    console.log('Ignored ' + ignoredCount + ' top-level suites from ' + ignoredFrom);\n  });\n\n  // Filter top-level describe statements as they come\n  (0, _setup_top_level_describe_filter.setupTopLevelDescribeFilter)(function (describeName) {\n    var describeShardNum = (0, _get_shard_num.getShardNum)(shardTotal, describeName);\n    if (describeShardNum === shardNum) return true;\n    // track shard numbers that we ignore\n    ignoredDescribeShards.push(describeShardNum);\n  });\n\n  console.log('ready to load tests for shard ' + shardNum + ' of ' + shardTotal);\n}",null]}