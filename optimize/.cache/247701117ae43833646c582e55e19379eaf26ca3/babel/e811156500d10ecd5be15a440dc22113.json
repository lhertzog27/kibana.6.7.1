{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/inspector/ui/inspector_view_chooser.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/inspector/ui/inspector_view_chooser.js","mtime":1567631711741},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InspectorViewChooser = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('@kbn/i18n/react');\n\nvar _react2 = require('react');\n\nvar _react3 = _interopRequireDefault(_react2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar InspectorViewChooser = function (_Component) {\n  _inherits(InspectorViewChooser, _Component);\n\n  function InspectorViewChooser() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, InspectorViewChooser);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = InspectorViewChooser.__proto__ || Object.getPrototypeOf(InspectorViewChooser)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      isSelectorOpen: false\n    }, _this.toggleSelector = function () {\n      _this.setState(function (prev) {\n        return {\n          isSelectorOpen: !prev.isSelectorOpen\n        };\n      });\n    }, _this.closeSelector = function () {\n      _this.setState({\n        isSelectorOpen: false\n      });\n    }, _this.renderView = function (view, index) {\n      return _react3.default.createElement(\n        _eui.EuiContextMenuItem,\n        {\n          key: index,\n          onClick: function onClick() {\n            _this.props.onViewSelected(view);\n            _this.closeSelector();\n          },\n          toolTipContent: view.help,\n          toolTipPosition: 'left',\n          'data-test-subj': 'inspectorViewChooser' + view.title\n        },\n        view.title\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(InspectorViewChooser, [{\n    key: 'renderViewButton',\n    value: function renderViewButton() {\n      return _react3.default.createElement(\n        _eui.EuiButtonEmpty,\n        {\n          size: 's',\n          iconType: 'arrowDown',\n          iconSide: 'right',\n          onClick: this.toggleSelector,\n          'data-test-subj': 'inspectorViewChooser'\n        },\n        _react3.default.createElement(_react.FormattedMessage, {\n          id: 'common.ui.inspector.view',\n          defaultMessage: 'View: {viewName}',\n          values: { viewName: this.props.selectedView.title }\n        })\n      );\n    }\n  }, {\n    key: 'renderSingleView',\n    value: function renderSingleView() {\n      return _react3.default.createElement(\n        _eui.EuiToolTip,\n        {\n          position: 'bottom',\n          content: this.props.selectedView.help\n        },\n        _react3.default.createElement(_react.FormattedMessage, {\n          id: 'common.ui.inspector.view',\n          defaultMessage: 'View: {viewName}',\n          values: { viewName: this.props.selectedView.title }\n        })\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var views = this.props.views;\n\n\n      if (views.length < 2) {\n        return this.renderSingleView();\n      }\n\n      var triggerButton = this.renderViewButton();\n\n      return _react3.default.createElement(\n        _eui.EuiPopover,\n        {\n          id: 'inspectorViewChooser',\n          ownFocus: true,\n          button: triggerButton,\n          isOpen: this.state.isSelectorOpen,\n          closePopover: this.closeSelector,\n          panelPaddingSize: 'none',\n          anchorPosition: 'downRight',\n          repositionOnScroll: true\n        },\n        _react3.default.createElement(_eui.EuiContextMenuPanel, {\n          items: views.map(this.renderView)\n        })\n      );\n    }\n  }]);\n\n  return InspectorViewChooser;\n}(_react2.Component);\n\nInspectorViewChooser.propTypes = {\n  views: _propTypes2.default.array.isRequired,\n  onViewSelected: _propTypes2.default.func.isRequired,\n  selectedView: _propTypes2.default.object.isRequired\n};\n\nexports.InspectorViewChooser = InspectorViewChooser;",null]}