{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/default.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/default.js","mtime":1567631711771},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultEditor = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nicensed to Elasticsearch B.V. under one or more contributor\nlicense agreements. See the NOTICE file distributed with\nthis work for additional information regarding copyright\nownership. Elasticsearch B.V. licenses this file to you under\nthe Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * not use this file except in compliance with the License.\nou may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\neither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn\nrequire('./sidebar');\n\nrequire('./vis_options');\n\nrequire('./vis_editor_resizer');\n\nrequire('./vis_type_agg_filter');\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _default = require('./default.html');\n\nvar _default2 = _interopRequireDefault(_default);\n\nvar _eui = require('@elastic/eui');\n\nvar _editor_size = require('../../editor_size');\n\nvar _vis_editor_types = require('../../../registry/vis_editor_types');\n\nvar _visualize_loader = require('../../../visualize/loader/visualize_loader');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultEditor = function defaultEditor($rootScope, $compile, i18n) {\n  var _class, _temp;\n\n  return _temp = _class = function () {\n    function DefaultEditor(el, savedObj) {\n      _classCallCheck(this, DefaultEditor);\n\n      this.el = (0, _jquery2.default)(el);\n      this.savedObj = savedObj;\n      this.vis = savedObj.vis;\n\n      if (!this.vis.type.editorConfig.optionTabs && this.vis.type.editorConfig.optionsTemplate) {\n        this.vis.type.editorConfig.optionTabs = [{\n          name: 'options',\n          title: i18n('common.ui.vis.editors.sidebar.tabs.optionsLabel', { defaultMessage: 'Options' }),\n          editor: this.vis.type.editorConfig.optionsTemplate\n        }];\n      }\n    }\n\n    _createClass(DefaultEditor, [{\n      key: 'render',\n      value: function render(_ref) {\n        var _this = this;\n\n        var uiState = _ref.uiState,\n            timeRange = _ref.timeRange,\n            filters = _ref.filters,\n            appState = _ref.appState;\n\n        var $scope = void 0;\n\n        var updateScope = function updateScope() {\n          $scope.vis = _this.vis;\n          $scope.uiState = uiState;\n          //$scope.$apply();\n        };\n\n        return new Promise(function (resolve) {\n          if (!_this.$scope) {\n            _this.$scope = $scope = $rootScope.$new();\n\n            updateScope();\n\n            $scope.state = $scope.vis.copyCurrentState(true);\n            $scope.oldState = $scope.vis.getSerializableState($scope.state);\n\n            $scope.toggleSidebar = function () {\n              $scope.$broadcast('render');\n            };\n\n            _this.el.one('renderComplete', resolve);\n            // track state of editable vis vs. \"actual\" vis\n            $scope.stageEditableVis = function () {\n              $scope.oldState = $scope.vis.getSerializableState($scope.state);\n              $scope.vis.setCurrentState($scope.state);\n              $scope.vis.updateState();\n              $scope.vis.dirty = false;\n            };\n            $scope.resetEditableVis = function () {\n              $scope.state = $scope.vis.copyCurrentState(true);\n              $scope.vis.dirty = false;\n            };\n\n            $scope.autoApplyEnabled = false;\n            if ($scope.vis.type.editorConfig.enableAutoApply) {\n              $scope.toggleAutoApply = function () {\n                $scope.autoApplyEnabled = !$scope.autoApplyEnabled;\n              };\n\n              $scope.$watch('vis.dirty', _lodash2.default.debounce(function () {\n                if (!$scope.autoApplyEnabled || !$scope.vis.dirty) return;\n                $scope.stageEditableVis();\n              }, 800));\n            }\n\n            $scope.submitEditorWithKeyboard = function (event) {\n              if (event.ctrlKey && event.keyCode === _eui.keyCodes.ENTER) {\n                event.preventDefault();\n                event.stopPropagation();\n                $scope.stageEditableVis();\n              }\n            };\n\n            $scope.getSidebarClass = function () {\n              if ($scope.vis.type.editorConfig.defaultSize === _editor_size.DefaultEditorSize.SMALL) {\n                return 'visEditor__collapsibleSidebar--small';\n              } else if ($scope.vis.type.editorConfig.defaultSize === _editor_size.DefaultEditorSize.MEDIUM) {\n                return 'visEditor__collapsibleSidebar--medium';\n              } else if ($scope.vis.type.editorConfig.defaultSize === _editor_size.DefaultEditorSize.LARGE) {\n                return 'visEditor__collapsibleSidebar--large';\n              }\n            };\n\n            $scope.$watch(function () {\n              return $scope.vis.getSerializableState($scope.state);\n            }, function (newState) {\n              $scope.vis.dirty = !_angular2.default.equals(newState, $scope.oldState);\n              $scope.responseValueAggs = null;\n              try {\n                $scope.responseValueAggs = $scope.state.aggs.getResponseAggs().filter(function (agg) {\n                  return _lodash2.default.get(agg, 'schema.group') === 'metrics';\n                });\n              }\n              // this can fail when the agg.type is changed but the\n              // params have not been set yet. watcher will trigger again\n              // when the params update\n              catch (e) {} // eslint-disable-line no-empty\n            }, true);\n\n            // fires when visualization state changes, and we need to copy changes to editorState\n            $scope.$watch(function () {\n              return $scope.vis.getCurrentState(false);\n            }, function (newState) {\n              if (!_lodash2.default.isEqual(newState, $scope.oldState)) {\n                $scope.state = $scope.vis.copyCurrentState(true);\n                $scope.oldState = newState;\n              }\n            }, true);\n\n            // Load the default editor template, attach it to the DOM and compile it.\n            // It should be added to the DOM before compiling, to prevent some resize\n            // listener issues.\n            var template = (0, _jquery2.default)(_default2.default);\n            _this.el.html(template);\n            $compile(template)($scope);\n          } else {\n            $scope = _this.$scope;\n            updateScope();\n          }\n\n          if (!_this._handler) {\n            var visualizationEl = _this.el.find('.visEditor__canvas')[0];\n            (0, _visualize_loader.getVisualizeLoader)().then(function (loader) {\n              if (!visualizationEl) {\n                return;\n              }\n              _this._loader = loader;\n              _this._handler = _this._loader.embedVisualizationWithSavedObject(visualizationEl, _this.savedObj, {\n                uiState: uiState,\n                listenOnChange: false,\n                timeRange: timeRange,\n                filters: filters,\n                appState: appState\n              });\n            });\n          } else {\n            _this._handler.update({\n              timeRange: timeRange,\n              filters: filters\n            });\n          }\n        });\n      }\n    }, {\n      key: 'resize',\n      value: function resize() {}\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        if (this.$scope) {\n          this.$scope.$destroy();\n          this.$scope = null;\n        }\n        if (this._handler) {\n          this._handler.destroy();\n        }\n      }\n    }]);\n\n    return DefaultEditor;\n  }(), _class.key = 'default', _temp;\n};\n\n_vis_editor_types.VisEditorTypesRegistryProvider.register(defaultEditor);\n\nexports.defaultEditor = defaultEditor;",null]}