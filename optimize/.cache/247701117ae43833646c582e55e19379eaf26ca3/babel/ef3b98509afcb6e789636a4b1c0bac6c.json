{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/bucket_avg.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/bucket_avg.js","mtime":1567631711699},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bucketAvgMetricAgg = undefined;\n\nvar _lodash = require('lodash');\n\nvar _metric_agg_type = require('./metric_agg_type');\n\nvar _make_nested_label = require('./lib/make_nested_label');\n\nvar _sibling_pipeline_agg_helper = require('./lib/sibling_pipeline_agg_helper');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                     * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                     * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                     * this work for additional information regarding copyright\n                                                                                                                                                                                                     * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                     * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                     * not use this file except in compliance with the License.\n                                                                                                                                                                                                     * You may obtain a copy of the License at\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                     * software distributed under the License is distributed on an\n                                                                                                                                                                                                     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                     * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                     * specific language governing permissions and limitations\n                                                                                                                                                                                                     * under the License.\n                                                                                                                                                                                                     */\n\nvar overallAverageLabel = _i18n.i18n.translate('common.ui.aggTypes.metrics.overallAverageLabel', {\n  defaultMessage: 'overall average'\n});\n\nvar bucketAvgMetricAgg = exports.bucketAvgMetricAgg = new _metric_agg_type.MetricAggType({\n  name: 'avg_bucket',\n  title: _i18n.i18n.translate('common.ui.aggTypes.metrics.averageBucketTitle', {\n    defaultMessage: 'Average Bucket'\n  }),\n  makeLabel: function makeLabel(agg) {\n    return (0, _make_nested_label.makeNestedLabel)(agg, overallAverageLabel);\n  },\n  subtype: _sibling_pipeline_agg_helper.siblingPipelineAggHelper.subtype,\n  params: [].concat(_toConsumableArray(_sibling_pipeline_agg_helper.siblingPipelineAggHelper.params())),\n  getFormat: _sibling_pipeline_agg_helper.siblingPipelineAggHelper.getFormat,\n  getValue: function getValue(agg, bucket) {\n    var customMetric = agg.params.customMetric;\n    var scaleMetrics = customMetric.type && customMetric.type.isScalable();\n\n    var value = bucket[agg.id] && bucket[agg.id].value;\n    if (scaleMetrics && agg.params.customBucket.type.name === 'date_histogram') {\n      var aggInfo = agg.params.customBucket.write();\n      value *= (0, _lodash.get)(aggInfo, 'bucketInterval.scale', 1);\n    }\n    return value;\n  }\n});",null]}