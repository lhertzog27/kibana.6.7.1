{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/timelion/public/directives/timelion_help/timelion_help.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/timelion/public/directives/timelion_help/timelion_help.js","mtime":1567631711648},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _timelion_help = require('./timelion_help.html');\n\nvar _timelion_help2 = _interopRequireDefault(_timelion_help);\n\nvar _modules = require('ui/modules');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar app = _modules.uiModules.get('apps/timelion', []);\n\napp.directive('timelionHelp', function ($http, i18n) {\n  return {\n    restrict: 'E',\n    template: _timelion_help2.default,\n    controller: function controller($scope) {\n      $scope.functions = {\n        list: [],\n        details: null\n      };\n\n      function init() {\n        $scope.es = {\n          invalidCount: 0\n        };\n\n        $scope.translations = {\n          nextButtonLabel: i18n('timelion.help.nextPageButtonLabel', {\n            defaultMessage: 'Next'\n          }),\n          previousButtonLabel: i18n('timelion.help.previousPageButtonLabel', {\n            defaultMessage: 'Previous'\n          }),\n          dontShowHelpButtonLabel: i18n('timelion.help.dontShowHelpButtonLabel', {\n            defaultMessage: 'Don\\'t show this again'\n          }),\n          strongNextText: i18n('timelion.help.welcome.content.strongNextText', {\n            defaultMessage: 'Next'\n          }),\n          emphasizedEverythingText: i18n('timelion.help.welcome.content.emphasizedEverythingText', {\n            defaultMessage: 'everything'\n          }),\n          notValidAdvancedSettingsPath: i18n('timelion.help.configuration.notValid.advancedSettingsPathText', {\n            defaultMessage: 'Management / Kibana / Advanced Settings'\n          }),\n          validAdvancedSettingsPath: i18n('timelion.help.configuration.valid.advancedSettingsPathText', {\n            defaultMessage: 'Management/Kibana/Advanced Settings'\n          }),\n          esAsteriskQueryDescription: i18n('timelion.help.querying.esAsteriskQueryDescriptionText', {\n            defaultMessage: 'hey Elasticsearch, find everything in my default index'\n          }),\n          esIndexQueryDescription: i18n('timelion.help.querying.esIndexQueryDescriptionText', {\n            defaultMessage: 'use * as the q (query) for the logstash-* index'\n          }),\n          strongAddText: i18n('timelion.help.expressions.strongAddText', {\n            defaultMessage: 'Add'\n          }),\n          twoExpressionsDescriptionTitle: i18n('timelion.help.expressions.examples.twoExpressionsDescriptionTitle', {\n            defaultMessage: 'Double the fun.'\n          }),\n          customStylingDescriptionTitle: i18n('timelion.help.expressions.examples.customStylingDescriptionTitle', {\n            defaultMessage: 'Custom styling.'\n          }),\n          namedArgumentsDescriptionTitle: i18n('timelion.help.expressions.examples.namedArgumentsDescriptionTitle', {\n            defaultMessage: 'Named arguments.'\n          }),\n          groupedExpressionsDescriptionTitle: i18n('timelion.help.expressions.examples.groupedExpressionsDescriptionTitle', {\n            defaultMessage: 'Grouped expressions.'\n          })\n        };\n\n        getFunctions();\n        checkElasticsearch();\n      }\n\n      function getFunctions() {\n        return $http.get('../api/timelion/functions').then(function (resp) {\n          $scope.functions.list = resp.data;\n        });\n      }\n      $scope.recheckElasticsearch = function () {\n        $scope.es.valid = null;\n        checkElasticsearch().then(function (valid) {\n          if (!valid) $scope.es.invalidCount++;\n        });\n      };\n\n      function checkElasticsearch() {\n        return $http.get('../api/timelion/validate/es').then(function (resp) {\n          if (resp.data.ok) {\n\n            $scope.es.valid = true;\n            $scope.es.stats = {\n              min: (0, _moment2.default)(resp.data.min).format('LLL'),\n              max: (0, _moment2.default)(resp.data.max).format('LLL'),\n              field: resp.data.field\n            };\n          } else {\n            $scope.es.valid = false;\n            $scope.es.invalidReason = function () {\n              try {\n                var esResp = JSON.parse(resp.data.resp.response);\n                return _lodash2.default.get(esResp, 'error.root_cause[0].reason');\n              } catch (e) {\n                if (_lodash2.default.get(resp, 'data.resp.message')) return _lodash2.default.get(resp, 'data.resp.message');\n                if (_lodash2.default.get(resp, 'data.resp.output.payload.message')) return _lodash2.default.get(resp, 'data.resp.output.payload.message');\n                return i18n('timelion.help.unknownErrorMessage', { defaultMessage: 'Unknown error' });\n              }\n            }();\n          }\n          return $scope.es.valid;\n        });\n      }\n      init();\n    }\n  };\n});",null]}