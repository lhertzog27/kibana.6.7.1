{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/status_page/public/components/status_table.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/status_page/public/components/status_table.js","mtime":1567631691292},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _prop_types = require('../lib/prop_types');\n\nvar _eui = require('@elastic/eui');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar StatusTable = function (_Component) {\n  _inherits(StatusTable, _Component);\n\n  function StatusTable() {\n    _classCallCheck(this, StatusTable);\n\n    return _possibleConstructorReturn(this, (StatusTable.__proto__ || Object.getPrototypeOf(StatusTable)).apply(this, arguments));\n  }\n\n  _createClass(StatusTable, [{\n    key: 'render',\n    value: function render() {\n      var statuses = this.props.statuses;\n\n\n      if (!statuses) {\n        return null;\n      }\n\n      return _react2.default.createElement(_eui.EuiBasicTable, {\n        columns: StatusTable.columns,\n        items: statuses,\n        rowProps: StatusTable.getRowProps,\n        'data-test-subj': 'statusBreakdown'\n      });\n    }\n  }]);\n\n  return StatusTable;\n}(_react.Component);\n\nStatusTable.propTypes = {\n  statuses: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    id: _propTypes2.default.string.isRequired, // plugin id\n    state: _prop_types.State.isRequired // state of the plugin\n  })) // can be null\n};\nStatusTable.columns = [{\n  field: 'state',\n  name: '',\n  render: function render(state) {\n    return _react2.default.createElement(_eui.EuiIcon, { type: 'dot', 'aria-hidden': true, color: state.uiColor });\n  },\n  width: '32px'\n}, {\n  field: 'id',\n  name: _i18n.i18n.translate('statusPage.statusTable.columns.idHeader', {\n    defaultMessage: 'ID'\n  })\n}, {\n  field: 'state',\n  name: _i18n.i18n.translate('statusPage.statusTable.columns.statusHeader', {\n    defaultMessage: 'Status'\n  }),\n  render: function render(state) {\n    return _react2.default.createElement(\n      'span',\n      null,\n      state.message\n    );\n  }\n}];\n\nStatusTable.getRowProps = function (_ref) {\n  var state = _ref.state;\n\n  return {\n    className: 'status-table-row-' + state.uiColor\n  };\n};\n\nexports.default = StatusTable;\nmodule.exports = exports['default'];",null]}