{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/doc_title/doc_title.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/doc_title/doc_title.js","mtime":1567631711720},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DocTitleProvider = DocTitleProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _modules = require('../modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n_modules.uiModules.get('kibana').run(function ($rootScope, docTitle) {\n  // always bind to the route events\n  $rootScope.$on('$routeChangeStart', docTitle.reset);\n  $rootScope.$on('$routeChangeError', docTitle.update);\n  $rootScope.$on('$routeChangeSuccess', docTitle.update);\n}).service('docTitle', function () {\n  var baseTitle = document.title;\n  var self = this;\n\n  var lastChange = void 0;\n\n  function render() {\n    lastChange = lastChange || [];\n\n    var parts = [lastChange[0]];\n\n    if (!lastChange[1]) parts.push(baseTitle);\n\n    return (0, _lodash2.default)(parts).flattenDeep().compact().join(' - ');\n  }\n\n  self.change = function (title, complete) {\n    lastChange = [title, complete];\n    self.update();\n  };\n\n  self.reset = function () {\n    lastChange = null;\n  };\n\n  self.update = function () {\n    document.title = render();\n  };\n});\n\n// return a \"private module\" so that it can be used both ways\nfunction DocTitleProvider(docTitle) {\n  return docTitle;\n}",null]}