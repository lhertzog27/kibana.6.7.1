{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/panel_header/panel_options_menu.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/panel_header/panel_options_menu.tsx","mtime":1567631711560},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { injectI18n } from '@kbn/i18n/react';\nimport React from 'react';\nimport { EuiButtonIcon, EuiContextMenu, EuiPopover, } from '@elastic/eui';\nfunction PanelOptionsMenuUi(_a) {\n    var toggleContextMenu = _a.toggleContextMenu, isPopoverOpen = _a.isPopoverOpen, closeContextMenu = _a.closeContextMenu, panels = _a.panels, isViewMode = _a.isViewMode, intl = _a.intl;\n    var button = (React.createElement(EuiButtonIcon, { iconType: isViewMode ? 'boxesHorizontal' : 'gear', color: \"text\", className: isViewMode && !isPopoverOpen ? 'dshPanel_optionsMenuButton' : '', \"aria-label\": intl.formatMessage({\n            id: 'kbn.dashboard.panel.optionsMenu.panelOptionsButtonAriaLabel',\n            defaultMessage: 'Panel options',\n        }), \"data-test-subj\": \"dashboardPanelToggleMenuIcon\", onClick: toggleContextMenu }));\n    return (React.createElement(EuiPopover, { id: \"dashboardPanelContextMenu\", className: \"dshPanel_optionsMenuPopover\", button: button, isOpen: isPopoverOpen, closePopover: closeContextMenu, panelPaddingSize: \"none\", anchorPosition: \"downRight\", \"data-test-subj\": isPopoverOpen ? 'dashboardPanelContextMenuOpen' : 'dashboardPanelContextMenuClosed', withTitle: true },\n        React.createElement(EuiContextMenu, { initialPanelId: \"mainMenu\", panels: panels })));\n}\nexport var PanelOptionsMenu = injectI18n(PanelOptionsMenuUi);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/panel_header/panel_options_menu.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/panel_header/panel_options_menu.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,EAAgB,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC3D,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EACL,aAAa,EACb,cAAc,EAEd,UAAU,GACX,MAAM,cAAc,CAAC;AActB,SAAS,kBAAkB,CAAC,EAOF;QANxB,wCAAiB,EACjB,gCAAa,EACb,sCAAgB,EAChB,kBAAM,EACN,0BAAU,EACV,cAAI;IAEJ,IAAM,MAAM,GAAG,CACb,oBAAC,aAAa,IACZ,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM,EACjD,KAAK,EAAC,MAAM,EACZ,SAAS,EAAE,UAAU,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,EAAE,gBAC/D,IAAI,CAAC,aAAa,CAAC;YAC7B,EAAE,EAAE,6DAA6D;YACjE,cAAc,EAAE,eAAe;SAChC,CAAC,oBACa,8BAA8B,EAC7C,OAAO,EAAE,iBAAiB,GAC1B,CACH,CAAC;IAEF,OAAO,CACL,oBAAC,UAAU,IACT,EAAE,EAAC,2BAA2B,EAC9B,SAAS,EAAC,6BAA6B,EACvC,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,aAAa,EACrB,YAAY,EAAE,gBAAgB,EAC9B,gBAAgB,EAAC,MAAM,EACvB,cAAc,EAAC,WAAW,oBAExB,aAAa,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC,iCAAiC,EAErF,SAAS;QAET,oBAAC,cAAc,IAAC,cAAc,EAAC,UAAU,EAAC,MAAM,EAAE,MAAM,GAAI,CACjD,CACd,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAU,CAAC,kBAAkB,CAAC,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport React from 'react';\n\nimport {\n  EuiButtonIcon,\n  EuiContextMenu,\n  EuiContextMenuPanelDescriptor,\n  EuiPopover,\n} from '@elastic/eui';\n\nexport interface PanelOptionsMenuProps {\n  toggleContextMenu: () => void;\n  isPopoverOpen: boolean;\n  closeContextMenu: () => void;\n  panels: EuiContextMenuPanelDescriptor[];\n  isViewMode: boolean;\n}\n\ninterface PanelOptionsMenuUiProps extends PanelOptionsMenuProps {\n  intl: InjectedIntl;\n}\n\nfunction PanelOptionsMenuUi({\n  toggleContextMenu,\n  isPopoverOpen,\n  closeContextMenu,\n  panels,\n  isViewMode,\n  intl,\n}: PanelOptionsMenuUiProps) {\n  const button = (\n    <EuiButtonIcon\n      iconType={isViewMode ? 'boxesHorizontal' : 'gear'}\n      color=\"text\"\n      className={isViewMode && !isPopoverOpen ? 'dshPanel_optionsMenuButton' : ''}\n      aria-label={intl.formatMessage({\n        id: 'kbn.dashboard.panel.optionsMenu.panelOptionsButtonAriaLabel',\n        defaultMessage: 'Panel options',\n      })}\n      data-test-subj=\"dashboardPanelToggleMenuIcon\"\n      onClick={toggleContextMenu}\n    />\n  );\n\n  return (\n    <EuiPopover\n      id=\"dashboardPanelContextMenu\"\n      className=\"dshPanel_optionsMenuPopover\"\n      button={button}\n      isOpen={isPopoverOpen}\n      closePopover={closeContextMenu}\n      panelPaddingSize=\"none\"\n      anchorPosition=\"downRight\"\n      data-test-subj={\n        isPopoverOpen ? 'dashboardPanelContextMenuOpen' : 'dashboardPanelContextMenuClosed'\n      }\n      withTitle\n    >\n      <EuiContextMenu initialPanelId=\"mainMenu\" panels={panels} />\n    </EuiPopover>\n  );\n}\n\nexport const PanelOptionsMenu = injectI18n(PanelOptionsMenuUi);\n"]}]}