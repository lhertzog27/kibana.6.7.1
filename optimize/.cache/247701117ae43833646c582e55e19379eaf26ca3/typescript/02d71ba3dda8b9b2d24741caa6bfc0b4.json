{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/visualize/components/visualization.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/visualize/components/visualization.tsx","mtime":1567631711781},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { get } from 'lodash';\nimport React from 'react';\nimport { memoizeLast } from '../../utils/memoize';\nimport { VisualizationChart } from './visualization_chart';\nimport { VisualizationNoResults } from './visualization_noresults';\nimport { VisualizationRequestError } from './visualization_requesterror';\nfunction shouldShowNoResultsMessage(vis, visData) {\n    var requiresSearch = get(vis, 'type.requiresSearch');\n    var rows = get(visData, 'rows');\n    var isZeroHits = get(visData, 'hits') === 0 || (rows && !rows.length);\n    var shouldShowMessage = !get(vis, 'type.useCustomNoDataScreen');\n    return Boolean(requiresSearch && isZeroHits && shouldShowMessage);\n}\nfunction shouldShowRequestErrorMessage(vis, visData) {\n    var requestError = get(vis, 'requestError');\n    var showRequestError = get(vis, 'showRequestError');\n    return Boolean(!visData && requestError && showRequestError);\n}\nvar Visualization = /** @class */ (function (_super) {\n    tslib_1.__extends(Visualization, _super);\n    function Visualization(props) {\n        var _this = _super.call(this, props) || this;\n        _this.showNoResultsMessage = memoizeLast(shouldShowNoResultsMessage);\n        var vis = props.vis, uiState = props.uiState, listenOnChange = props.listenOnChange;\n        vis._setUiState(props.uiState);\n        if (listenOnChange) {\n            uiState.on('change', _this.onUiStateChanged);\n        }\n        return _this;\n    }\n    Visualization.prototype.render = function () {\n        var _a = this.props, vis = _a.vis, visData = _a.visData, onInit = _a.onInit, uiState = _a.uiState;\n        var noResults = this.showNoResultsMessage(vis, visData);\n        var requestError = shouldShowRequestErrorMessage(vis, visData);\n        return (React.createElement(\"div\", { className: \"visualization\" }, requestError ? (React.createElement(VisualizationRequestError, { onInit: onInit, error: vis.requestError })) : noResults ? (React.createElement(VisualizationNoResults, { onInit: onInit })) : (React.createElement(VisualizationChart, { vis: vis, visData: visData, onInit: onInit, uiState: uiState }))));\n    };\n    Visualization.prototype.shouldComponentUpdate = function (nextProps) {\n        if (nextProps.uiState !== this.props.uiState) {\n            throw new Error('Changing uiState on <Visualization/> is not supported!');\n        }\n        return true;\n    };\n    Visualization.prototype.componentWillUnmount = function () {\n        this.props.uiState.off('change', this.onUiStateChanged);\n    };\n    Visualization.prototype.componentDidUpdate = function (prevProps) {\n        var listenOnChange = this.props.listenOnChange;\n        // If the listenOnChange prop changed, we need to register or deregister from uiState\n        if (prevProps.listenOnChange !== listenOnChange) {\n            if (listenOnChange) {\n                this.props.uiState.on('change', this.onUiStateChanged);\n            }\n            else {\n                this.props.uiState.off('change', this.onUiStateChanged);\n            }\n        }\n    };\n    /**\n     * In case something in the uiState changed, we need to force a redraw of\n     * the visualization, since these changes could effect visualization rendering.\n     */\n    Visualization.prototype.onUiStateChanged = function () {\n        this.forceUpdate();\n    };\n    return Visualization;\n}(React.Component));\nexport { Visualization };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/visualize/components/visualization.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/visualize/components/visualization.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { get } from 'lodash';\nimport React from 'react';\n\nimport { PersistedState } from '../../persisted_state';\nimport { memoizeLast } from '../../utils/memoize';\nimport { Vis } from '../../vis';\nimport { VisualizationChart } from './visualization_chart';\nimport { VisualizationNoResults } from './visualization_noresults';\nimport { VisualizationRequestError } from './visualization_requesterror';\n\nfunction shouldShowNoResultsMessage(vis: Vis, visData: any): boolean {\n  const requiresSearch = get(vis, 'type.requiresSearch');\n  const rows: object[] | undefined = get(visData, 'rows');\n  const isZeroHits = get(visData, 'hits') === 0 || (rows && !rows.length);\n  const shouldShowMessage = !get(vis, 'type.useCustomNoDataScreen');\n\n  return Boolean(requiresSearch && isZeroHits && shouldShowMessage);\n}\n\nfunction shouldShowRequestErrorMessage(vis: Vis, visData: any): boolean {\n  const requestError = get(vis, 'requestError');\n  const showRequestError = get(vis, 'showRequestError');\n  return Boolean(!visData && requestError && showRequestError);\n}\n\ninterface VisualizationProps {\n  listenOnChange: boolean;\n  onInit?: () => void;\n  uiState: PersistedState;\n  vis: Vis;\n  visData: any;\n}\n\nexport class Visualization extends React.Component<VisualizationProps> {\n  private showNoResultsMessage = memoizeLast(shouldShowNoResultsMessage);\n\n  constructor(props: VisualizationProps) {\n    super(props);\n\n    const { vis, uiState, listenOnChange } = props;\n\n    vis._setUiState(props.uiState);\n    if (listenOnChange) {\n      uiState.on('change', this.onUiStateChanged);\n    }\n  }\n\n  public render() {\n    const { vis, visData, onInit, uiState } = this.props;\n\n    const noResults = this.showNoResultsMessage(vis, visData);\n    const requestError = shouldShowRequestErrorMessage(vis, visData);\n\n    return (\n      <div className=\"visualization\">\n        {requestError ? (\n          <VisualizationRequestError onInit={onInit} error={vis.requestError} />\n        ) : noResults ? (\n          <VisualizationNoResults onInit={onInit} />\n        ) : (\n          <VisualizationChart vis={vis} visData={visData} onInit={onInit} uiState={uiState} />\n        )}\n      </div>\n    );\n  }\n\n  public shouldComponentUpdate(nextProps: VisualizationProps): boolean {\n    if (nextProps.uiState !== this.props.uiState) {\n      throw new Error('Changing uiState on <Visualization/> is not supported!');\n    }\n    return true;\n  }\n\n  public componentWillUnmount() {\n    this.props.uiState.off('change', this.onUiStateChanged);\n  }\n\n  public componentDidUpdate(prevProps: VisualizationProps) {\n    const { listenOnChange } = this.props;\n    // If the listenOnChange prop changed, we need to register or deregister from uiState\n    if (prevProps.listenOnChange !== listenOnChange) {\n      if (listenOnChange) {\n        this.props.uiState.on('change', this.onUiStateChanged);\n      } else {\n        this.props.uiState.off('change', this.onUiStateChanged);\n      }\n    }\n  }\n\n  /**\n   * In case something in the uiState changed, we need to force a redraw of\n   * the visualization, since these changes could effect visualization rendering.\n   */\n  private onUiStateChanged() {\n    this.forceUpdate();\n  }\n}\n"]}]}