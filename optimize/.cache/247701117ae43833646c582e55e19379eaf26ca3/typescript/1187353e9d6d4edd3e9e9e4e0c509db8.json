{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/utils/parse_es_interval/parse_es_interval.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/utils/parse_es_interval/parse_es_interval.ts","mtime":1567631711766},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport dateMath from '@elastic/datemath';\nimport { InvalidEsCalendarIntervalError } from './invalid_es_calendar_interval_error';\nimport { InvalidEsIntervalFormatError } from './invalid_es_interval_format_error';\nvar ES_INTERVAL_STRING_REGEX = new RegExp('^([1-9][0-9]*)\\\\s*(' + dateMath.units.join('|') + ')$');\n/**\n * Extracts interval properties from an ES interval string. Disallows unrecognized interval formats\n * and fractional values. Converts some intervals from \"calendar\" to \"fixed\" when the number of\n * units is larger than 1, and throws an error for others.\n *\n * Conversion rules:\n *\n * | Interval | Single unit type | Multiple units type |\n * | -------- | ---------------- | ------------------- |\n * | ms       | fixed            | fixed               |\n * | s        | fixed            | fixed               |\n * | m        | calendar         | fixed               |\n * | h        | calendar         | fixed               |\n * | d        | calendar         | fixed               |\n * | w        | calendar         | N/A - disallowed    |\n * | M        | calendar         | N/A - disallowed    |\n * | y        | calendar         | N/A - disallowed    |\n *\n */\nexport function parseEsInterval(interval) {\n    var matches = String(interval)\n        .trim()\n        .match(ES_INTERVAL_STRING_REGEX);\n    if (!matches) {\n        throw new InvalidEsIntervalFormatError(interval);\n    }\n    var value = parseFloat(matches[1]);\n    var unit = matches[2];\n    var type = dateMath.unitsMap[unit].type;\n    if (type === 'calendar' && value !== 1) {\n        throw new InvalidEsCalendarIntervalError(interval, value, unit, type);\n    }\n    return {\n        value: value,\n        unit: unit,\n        type: (type === 'mixed' && value === 1) || type === 'calendar'\n            ? 'calendar'\n            : 'fixed',\n    };\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/utils/parse_es_interval/parse_es_interval.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/utils/parse_es_interval/parse_es_interval.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,QAAkB,MAAM,mBAAmB,CAAC;AAEnD,OAAO,EAAE,8BAA8B,EAAE,MAAM,sCAAsC,CAAC;AACtF,OAAO,EAAE,4BAA4B,EAAE,MAAM,oCAAoC,CAAC;AAElF,IAAM,wBAAwB,GAAG,IAAI,MAAM,CACzC,qBAAqB,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CACxD,CAAC;AAIF;;;;;;;;;;;;;;;;;;GAkBG;AACH,MAAM,UAAU,eAAe,CAAC,QAAgB;IAC9C,IAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;SAC7B,IAAI,EAAE;SACN,KAAK,CAAC,wBAAwB,CAAC,CAAC;IAEnC,IAAI,CAAC,OAAO,EAAE;QACZ,MAAM,IAAI,4BAA4B,CAAC,QAAQ,CAAC,CAAC;KAClD;IAED,IAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,IAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAS,CAAC;IAChC,IAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;IAE1C,IAAI,IAAI,KAAK,UAAU,IAAI,KAAK,KAAK,CAAC,EAAE;QACtC,MAAM,IAAI,8BAA8B,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KACvE;IAED,OAAO;QACL,KAAK,OAAA;QACL,IAAI,MAAA;QACJ,IAAI,EACF,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,IAAI,KAAK,UAAU;YACtD,CAAC,CAAE,UAAyB;YAC5B,CAAC,CAAE,OAAmB;KAC3B,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport dateMath, { Unit } from '@elastic/datemath';\n\nimport { InvalidEsCalendarIntervalError } from './invalid_es_calendar_interval_error';\nimport { InvalidEsIntervalFormatError } from './invalid_es_interval_format_error';\n\nconst ES_INTERVAL_STRING_REGEX = new RegExp(\n  '^([1-9][0-9]*)\\\\s*(' + dateMath.units.join('|') + ')$'\n);\n\nexport type ParsedInterval = ReturnType<typeof parseEsInterval>;\n\n/**\n * Extracts interval properties from an ES interval string. Disallows unrecognized interval formats\n * and fractional values. Converts some intervals from \"calendar\" to \"fixed\" when the number of\n * units is larger than 1, and throws an error for others.\n *\n * Conversion rules:\n *\n * | Interval | Single unit type | Multiple units type |\n * | -------- | ---------------- | ------------------- |\n * | ms       | fixed            | fixed               |\n * | s        | fixed            | fixed               |\n * | m        | calendar         | fixed               |\n * | h        | calendar         | fixed               |\n * | d        | calendar         | fixed               |\n * | w        | calendar         | N/A - disallowed    |\n * | M        | calendar         | N/A - disallowed    |\n * | y        | calendar         | N/A - disallowed    |\n *\n */\nexport function parseEsInterval(interval: string) {\n  const matches = String(interval)\n    .trim()\n    .match(ES_INTERVAL_STRING_REGEX);\n\n  if (!matches) {\n    throw new InvalidEsIntervalFormatError(interval);\n  }\n\n  const value = parseFloat(matches[1]);\n  const unit = matches[2] as Unit;\n  const type = dateMath.unitsMap[unit].type;\n\n  if (type === 'calendar' && value !== 1) {\n    throw new InvalidEsCalendarIntervalError(interval, value, unit, type);\n  }\n\n  return {\n    value,\n    unit,\n    type:\n      (type === 'mixed' && value === 1) || type === 'calendar'\n        ? ('calendar' as 'calendar')\n        : ('fixed' as 'fixed'),\n  };\n}\n"]}]}