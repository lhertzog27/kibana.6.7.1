{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/vis/update_status.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vis/update_status.ts","mtime":1567631711772},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { calculateObjectHash } from './lib/calculate_object_hash';\nvar Status;\n(function (Status) {\n    Status[\"AGGS\"] = \"aggs\";\n    Status[\"DATA\"] = \"data\";\n    Status[\"PARAMS\"] = \"params\";\n    Status[\"RESIZE\"] = \"resize\";\n    Status[\"TIME\"] = \"time\";\n    Status[\"UI_STATE\"] = \"uiState\";\n})(Status || (Status = {}));\n/**\n * Checks whether the hash of a specific key in the given oldStatus has changed\n * compared to the new valueHash passed.\n */\nfunction hasHashChanged(valueHash, oldStatus, name) {\n    var oldHash = oldStatus[name];\n    return oldHash !== valueHash;\n}\nfunction hasSizeChanged(size, oldSize) {\n    if (!oldSize) {\n        return true;\n    }\n    return oldSize.width !== size.width || oldSize.height !== size.height;\n}\nfunction getUpdateStatus(requiresUpdateStatus, obj, param) {\n    if (requiresUpdateStatus === void 0) { requiresUpdateStatus = []; }\n    var e_1, _a;\n    var status = {};\n    // If the vis type doesn't need update status, skip all calculations\n    if (requiresUpdateStatus.length === 0) {\n        return status;\n    }\n    if (!obj._oldStatus) {\n        obj._oldStatus = {};\n    }\n    try {\n        for (var requiresUpdateStatus_1 = tslib_1.__values(requiresUpdateStatus), requiresUpdateStatus_1_1 = requiresUpdateStatus_1.next(); !requiresUpdateStatus_1_1.done; requiresUpdateStatus_1_1 = requiresUpdateStatus_1.next()) {\n            var requiredStatus = requiresUpdateStatus_1_1.value;\n            var hash = void 0;\n            // Calculate all required status updates for this visualization\n            switch (requiredStatus) {\n                case Status.AGGS:\n                    hash = calculateObjectHash(param.vis.aggs);\n                    status.aggs = hasHashChanged(hash, obj._oldStatus, 'aggs');\n                    obj._oldStatus.aggs = hash;\n                    break;\n                case Status.DATA:\n                    hash = calculateObjectHash(param.visData);\n                    status.data = hasHashChanged(hash, obj._oldStatus, 'data');\n                    obj._oldStatus.data = hash;\n                    break;\n                case Status.PARAMS:\n                    hash = calculateObjectHash(param.vis.params);\n                    status.params = hasHashChanged(hash, obj._oldStatus, 'param');\n                    obj._oldStatus.param = hash;\n                    break;\n                case Status.RESIZE:\n                    var width = param.vis.size ? param.vis.size[0] : 0;\n                    var height = param.vis.size ? param.vis.size[1] : 0;\n                    var size = { width: width, height: height };\n                    status.resize = hasSizeChanged(size, obj._oldStatus.resize);\n                    obj._oldStatus.resize = size;\n                    break;\n                case Status.TIME:\n                    var timeRange = param.vis.filters && param.vis.filters.timeRange;\n                    hash = calculateObjectHash(timeRange);\n                    status.time = hasHashChanged(hash, obj._oldStatus, 'time');\n                    obj._oldStatus.time = hash;\n                    break;\n                case Status.UI_STATE:\n                    hash = calculateObjectHash(param.uiState);\n                    status.uiState = hasHashChanged(hash, obj._oldStatus, 'uiState');\n                    obj._oldStatus.uiState = hash;\n                    break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (requiresUpdateStatus_1_1 && !requiresUpdateStatus_1_1.done && (_a = requiresUpdateStatus_1.return)) _a.call(requiresUpdateStatus_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return status;\n}\nexport { getUpdateStatus, Status };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/vis/update_status.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/vis/update_status.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { PersistedState } from '../persisted_state';\nimport { calculateObjectHash } from './lib/calculate_object_hash';\nimport { Vis } from './vis';\n\nenum Status {\n  AGGS = 'aggs',\n  DATA = 'data',\n  PARAMS = 'params',\n  RESIZE = 'resize',\n  TIME = 'time',\n  UI_STATE = 'uiState',\n}\n\n/**\n * Checks whether the hash of a specific key in the given oldStatus has changed\n * compared to the new valueHash passed.\n */\nfunction hasHashChanged<T extends string>(\n  valueHash: string,\n  oldStatus: { [key in T]?: string },\n  name: T\n): boolean {\n  const oldHash = oldStatus[name];\n  return oldHash !== valueHash;\n}\n\ninterface Size {\n  width: number;\n  height: number;\n}\n\nfunction hasSizeChanged(size: Size, oldSize?: Size): boolean {\n  if (!oldSize) {\n    return true;\n  }\n  return oldSize.width !== size.width || oldSize.height !== size.height;\n}\n\nfunction getUpdateStatus<T extends Status>(\n  requiresUpdateStatus: T[] = [],\n  obj: any,\n  param: { vis: Vis; visData: any; uiState: PersistedState }\n): { [reqStats in T]: boolean } {\n  const status = {} as { [reqStats in T]: boolean };\n\n  // If the vis type doesn't need update status, skip all calculations\n  if (requiresUpdateStatus.length === 0) {\n    return status;\n  }\n\n  if (!obj._oldStatus) {\n    obj._oldStatus = {};\n  }\n\n  for (const requiredStatus of requiresUpdateStatus) {\n    let hash;\n    // Calculate all required status updates for this visualization\n    switch (requiredStatus) {\n      case Status.AGGS:\n        hash = calculateObjectHash(param.vis.aggs);\n        status.aggs = hasHashChanged(hash, obj._oldStatus, 'aggs');\n        obj._oldStatus.aggs = hash;\n        break;\n      case Status.DATA:\n        hash = calculateObjectHash(param.visData);\n        status.data = hasHashChanged(hash, obj._oldStatus, 'data');\n        obj._oldStatus.data = hash;\n        break;\n      case Status.PARAMS:\n        hash = calculateObjectHash(param.vis.params);\n        status.params = hasHashChanged(hash, obj._oldStatus, 'param');\n        obj._oldStatus.param = hash;\n        break;\n      case Status.RESIZE:\n        const width: number = param.vis.size ? param.vis.size[0] : 0;\n        const height: number = param.vis.size ? param.vis.size[1] : 0;\n        const size = { width, height };\n        status.resize = hasSizeChanged(size, obj._oldStatus.resize);\n        obj._oldStatus.resize = size;\n        break;\n      case Status.TIME:\n        const timeRange = param.vis.filters && param.vis.filters.timeRange;\n        hash = calculateObjectHash(timeRange);\n        status.time = hasHashChanged(hash, obj._oldStatus, 'time');\n        obj._oldStatus.time = hash;\n        break;\n      case Status.UI_STATE:\n        hash = calculateObjectHash(param.uiState);\n        status.uiState = hasHashChanged(hash, obj._oldStatus, 'uiState');\n        obj._oldStatus.uiState = hash;\n        break;\n    }\n  }\n\n  return status;\n}\n\nexport { getUpdateStatus, Status };\n"]}]}