{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/wizard/new_vis_modal.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/wizard/new_vis_modal.tsx","mtime":1567631711602},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { EuiModal, EuiOverlayMask } from '@elastic/eui';\nimport { VisualizeConstants } from '../visualize_constants';\nimport { TypeSelection } from './type_selection';\nimport chrome from 'ui/chrome';\nvar NewVisModal = /** @class */ (function (_super) {\n    tslib_1.__extends(NewVisModal, _super);\n    function NewVisModal(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onVisTypeSelected = function (visType) {\n            var baseUrl = visType.requiresSearch && visType.options.showIndexSelection\n                ? \"#\" + VisualizeConstants.WIZARD_STEP_2_PAGE_PATH + \"?\"\n                : \"#\" + VisualizeConstants.CREATE_PATH + \"?\";\n            var params = tslib_1.__spread([\"type=\" + encodeURIComponent(visType.name)], _this.props.editorParams);\n            _this.props.onClose();\n            location.assign(\"\" + baseUrl + params.join('&'));\n        };\n        _this.isLabsEnabled = chrome.getUiSettingsClient().get('visualize:enableLabs');\n        return _this;\n    }\n    NewVisModal.prototype.render = function () {\n        if (!this.props.isOpen) {\n            return null;\n        }\n        return (React.createElement(EuiOverlayMask, null,\n            React.createElement(EuiModal, { onClose: this.props.onClose, maxWidth: '100vw', className: \"visNewVisDialog\" },\n                React.createElement(TypeSelection, { showExperimental: this.isLabsEnabled, onVisTypeSelected: this.onVisTypeSelected, visTypesRegistry: this.props.visTypesRegistry }))));\n    };\n    NewVisModal.defaultProps = {\n        editorParams: [],\n    };\n    return NewVisModal;\n}(React.Component));\nexport { NewVisModal };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/wizard/new_vis_modal.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/wizard/new_vis_modal.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAExD,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAE5D,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAEjD,OAAO,MAAM,MAAM,WAAW,CAAC;AAU/B;IAA0B,uCAAmC;IAO3D,qBAAY,KAAyB;QAArC,YACE,kBAAM,KAAK,CAAC,SAEb;QAoBO,uBAAiB,GAAG,UAAC,OAAgB;YAC3C,IAAM,OAAO,GACX,OAAO,CAAC,cAAc,IAAI,OAAO,CAAC,OAAO,CAAC,kBAAkB;gBAC1D,CAAC,CAAC,MAAI,kBAAkB,CAAC,uBAAuB,MAAG;gBACnD,CAAC,CAAC,MAAI,kBAAkB,CAAC,WAAW,MAAG,CAAC;YAC5C,IAAM,MAAM,qBAAI,UAAQ,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAG,GAAK,KAAI,CAAC,KAAK,CAAC,YAAa,CAAC,CAAC;YACzF,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACrB,QAAQ,CAAC,MAAM,CAAC,KAAG,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAG,CAAC,CAAC;QACnD,CAAC,CAAC;QA7BA,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,mBAAmB,EAAE,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;;IAChF,CAAC;IAEM,4BAAM,GAAb;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACtB,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CACL,oBAAC,cAAc;YACb,oBAAC,QAAQ,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAC,iBAAiB;gBACnF,oBAAC,aAAa,IACZ,gBAAgB,EAAE,IAAI,CAAC,aAAa,EACpC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,EACzC,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAC7C,CACO,CACI,CAClB,CAAC;IACJ,CAAC;IA3Ba,wBAAY,GAAG;QAC3B,YAAY,EAAE,EAAE;KACjB,CAAC;IAoCJ,kBAAC;CAAA,AAvCD,CAA0B,KAAK,CAAC,SAAS,GAuCxC;AAED,OAAO,EAAE,WAAW,EAAE,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nimport { EuiModal, EuiOverlayMask } from '@elastic/eui';\n\nimport { VisualizeConstants } from '../visualize_constants';\n\nimport { TypeSelection } from './type_selection';\n\nimport chrome from 'ui/chrome';\nimport { VisType } from 'ui/vis';\n\ninterface TypeSelectionProps {\n  isOpen: boolean;\n  onClose: () => void;\n  visTypesRegistry: VisType[];\n  editorParams?: string[];\n}\n\nclass NewVisModal extends React.Component<TypeSelectionProps> {\n  public static defaultProps = {\n    editorParams: [],\n  };\n\n  private readonly isLabsEnabled: boolean;\n\n  constructor(props: TypeSelectionProps) {\n    super(props);\n    this.isLabsEnabled = chrome.getUiSettingsClient().get('visualize:enableLabs');\n  }\n\n  public render() {\n    if (!this.props.isOpen) {\n      return null;\n    }\n\n    return (\n      <EuiOverlayMask>\n        <EuiModal onClose={this.props.onClose} maxWidth={'100vw'} className=\"visNewVisDialog\">\n          <TypeSelection\n            showExperimental={this.isLabsEnabled}\n            onVisTypeSelected={this.onVisTypeSelected}\n            visTypesRegistry={this.props.visTypesRegistry}\n          />\n        </EuiModal>\n      </EuiOverlayMask>\n    );\n  }\n\n  private onVisTypeSelected = (visType: VisType) => {\n    const baseUrl =\n      visType.requiresSearch && visType.options.showIndexSelection\n        ? `#${VisualizeConstants.WIZARD_STEP_2_PAGE_PATH}?`\n        : `#${VisualizeConstants.CREATE_PATH}?`;\n    const params = [`type=${encodeURIComponent(visType.name)}`, ...this.props.editorParams!];\n    this.props.onClose();\n    location.assign(`${baseUrl}${params.join('&')}`);\n  };\n}\n\nexport { NewVisModal };\n"]}]}