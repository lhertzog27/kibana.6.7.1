{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/inspector/types.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/inspector/types.ts","mtime":1567631711741},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/inspector/types.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/inspector/types.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * The interface that the adapters used to open an inspector have to fullfill.\n */\nexport interface Adapters {\n  [key: string]: any;\n}\n\n/**\n * The props interface that a custom inspector view component, that will be passed\n * to {@link InspectorViewDescription#component}, must use.\n */\nexport interface InspectorViewProps {\n  /**\n   * The adapters thta has been used to open the inspector.\n   */\n  adapters: Adapters;\n  /**\n   * The title that the inspector is currently using e.g. a visualization name.\n   */\n  title: string;\n}\n\n/**\n * An object describing an inspector view.\n * @typedef {object} InspectorViewDescription\n * @property {string} title - The title that will be used to present that view.\n * @property {string} icon - An icon name to present this view. Must match an EUI icon.\n * @property {React.ComponentType<InspectorViewProps>} component - The actual React component to render that\n *    that view. It should always return an `InspectorView` element at the toplevel.\n * @property {number} [order=9000] - An order for this view. Views are ordered from lower\n *    order values to higher order values in the UI.\n * @property {string} [help=''] - An help text for this view, that gives a brief description\n *    of this view.\n * @property {viewShouldShowFunc} [shouldShow] - A function, that determines whether\n *    this view should be visible for a given collection of adapters. If not specified\n *    the view will always be visible.\n */\nexport interface InspectorViewDescription {\n  component: React.ComponentType<InspectorViewProps>;\n  help?: string;\n  order?: number;\n  shouldShow?: (adapters: Adapters) => boolean;\n  title: string;\n}\n"]}]}