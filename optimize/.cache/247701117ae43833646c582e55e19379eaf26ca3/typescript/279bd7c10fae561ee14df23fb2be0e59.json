{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/url/extract_app_path_and_id.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/url/extract_app_path_and_id.ts","mtime":1567631711763},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { parse } from 'url';\n/**\n * If the url is determined to contain an appId and appPath, it returns those portions. If it is not in the right\n * format and an appId and appPath can't be extracted, it returns an empty object.\n * @param {string} url - a relative or absolute url which contains an appPath, an appId, and optionally, a basePath.\n * @param {string} basePath - optional base path, if given should start with \"/\".\n */\nexport function extractAppPathAndId(url, basePath) {\n    if (basePath === void 0) { basePath = ''; }\n    var parsedUrl = parse(url);\n    if (!parsedUrl.path) {\n        return {};\n    }\n    var pathWithoutBase = parsedUrl.path.slice(basePath.length);\n    if (!pathWithoutBase.startsWith('/app/')) {\n        return {};\n    }\n    var appPath = parsedUrl.hash && parsedUrl.hash.length > 0 ? parsedUrl.hash.slice(1) : '';\n    return { appId: pathWithoutBase.slice('/app/'.length), appPath: appPath };\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/url/extract_app_path_and_id.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/url/extract_app_path_and_id.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,EAAE,KAAK,EAAE,MAAM,KAAK,CAAC;AAE5B;;;;;GAKG;AACH,MAAM,UAAU,mBAAmB,CAAC,GAAW,EAAE,QAAa;IAAb,yBAAA,EAAA,aAAa;IAC5D,IAAM,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;QACnB,OAAO,EAAE,CAAC;KACX;IACD,IAAM,eAAe,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAE9D,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;QACxC,OAAO,EAAE,CAAC;KACX;IAED,IAAM,OAAO,GAAG,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3F,OAAO,EAAE,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC;AACnE,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { parse } from 'url';\n\n/**\n * If the url is determined to contain an appId and appPath, it returns those portions. If it is not in the right\n * format and an appId and appPath can't be extracted, it returns an empty object.\n * @param {string} url - a relative or absolute url which contains an appPath, an appId, and optionally, a basePath.\n * @param {string} basePath - optional base path, if given should start with \"/\".\n */\nexport function extractAppPathAndId(url: string, basePath = '') {\n  const parsedUrl = parse(url);\n  if (!parsedUrl.path) {\n    return {};\n  }\n  const pathWithoutBase = parsedUrl.path.slice(basePath.length);\n\n  if (!pathWithoutBase.startsWith('/app/')) {\n    return {};\n  }\n\n  const appPath = parsedUrl.hash && parsedUrl.hash.length > 0 ? parsedUrl.hash.slice(1) : '';\n  return { appId: pathWithoutBase.slice('/app/'.length), appPath };\n}\n"]}]}