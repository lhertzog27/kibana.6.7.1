{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/i18n/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/i18n/index.tsx","mtime":1567631711736},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { i18nDirective, i18nFilter, I18nProvider } from '@kbn/i18n/angular';\n// @ts-ignore\nimport { uiModules } from 'ui/modules';\nexport var I18nContext = null;\nexport function __newPlatformInit__(context) {\n    if (I18nContext) {\n        throw new Error('ui/i18n already initialized with new platform apis');\n    }\n    I18nContext = context;\n}\nexport function wrapInI18nContext(ComponentToWrap) {\n    var ContextWrapper = function (props) {\n        return (React.createElement(I18nContext, null,\n            React.createElement(ComponentToWrap, tslib_1.__assign({}, props))));\n    };\n    // Original propTypes from the wrapped component should be re-exposed\n    // since it will be used by reactDirective Angular service\n    // that will rely on propTypes to watch attributes with these names\n    ContextWrapper.propTypes = ComponentToWrap.propTypes;\n    return ContextWrapper;\n}\nuiModules\n    .get('i18n')\n    .provider('i18n', I18nProvider)\n    .filter('i18n', i18nFilter)\n    .directive('i18nId', i18nDirective);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/i18n/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/i18n/index.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAC5E,aAAa;AACb,OAAO,EAAE,SAAS,EAAE,MAAM,YAAY,CAAC;AAGvC,MAAM,CAAC,IAAI,WAAW,GAAiC,IAAK,CAAC;AAC7D,MAAM,UAAU,mBAAmB,CAAC,OAA2B;IAC7D,IAAI,WAAW,EAAE;QACf,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;KACvE;IAED,WAAW,GAAG,OAAO,CAAC;AACxB,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAI,eAAuC;IAC1E,IAAM,cAAc,GAAiB,UAAA,KAAK;QACxC,OAAO,CACL,oBAAC,WAAW;YACV,oBAAC,eAAe,uBAAK,KAAK,EAAI,CAClB,CACf,CAAC;IACJ,CAAC,CAAC;IAEF,qEAAqE;IACrE,0DAA0D;IAC1D,mEAAmE;IACnE,cAAc,CAAC,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC;IAErD,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,SAAS;KACN,GAAG,CAAC,MAAM,CAAC;KACX,QAAQ,CAAC,MAAM,EAAE,YAAY,CAAC;KAC9B,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC;KAC1B,SAAS,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nimport { i18nDirective, i18nFilter, I18nProvider } from '@kbn/i18n/angular';\n// @ts-ignore\nimport { uiModules } from 'ui/modules';\nimport { I18nStartContract } from '../../../core/public/i18n';\n\nexport let I18nContext: I18nStartContract['Context'] = null!;\nexport function __newPlatformInit__(context: typeof I18nContext) {\n  if (I18nContext) {\n    throw new Error('ui/i18n already initialized with new platform apis');\n  }\n\n  I18nContext = context;\n}\n\nexport function wrapInI18nContext<P>(ComponentToWrap: React.ComponentType<P>) {\n  const ContextWrapper: React.SFC<P> = props => {\n    return (\n      <I18nContext>\n        <ComponentToWrap {...props} />\n      </I18nContext>\n    );\n  };\n\n  // Original propTypes from the wrapped component should be re-exposed\n  // since it will be used by reactDirective Angular service\n  // that will rely on propTypes to watch attributes with these names\n  ContextWrapper.propTypes = ComponentToWrap.propTypes;\n\n  return ContextWrapper;\n}\n\nuiModules\n  .get('i18n')\n  .provider('i18n', I18nProvider)\n  .filter('i18n', i18nFilter)\n  .directive('i18nId', i18nDirective);\n"]}]}