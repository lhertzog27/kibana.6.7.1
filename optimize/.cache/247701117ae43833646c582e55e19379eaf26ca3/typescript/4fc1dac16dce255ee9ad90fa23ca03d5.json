{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/parse_query/lib/to_user.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/parse_query/lib/to_user.ts","mtime":1567631711747},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport angular from 'angular';\n/**\n * Take text from the model and present it to the user as a string\n * @param {text} model value\n * @returns {string}\n */\nexport function toUser(text) {\n    if (text == null) {\n        return '';\n    }\n    if (typeof text === 'object') {\n        if (text.match_all) {\n            return '';\n        }\n        if (text.query_string) {\n            return toUser(text.query_string.query);\n        }\n        return angular.toJson(text);\n    }\n    return '' + text;\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/parse_query/lib/to_user.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/parse_query/lib/to_user.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,OAAO,MAAM,SAAS,CAAC;AAE9B;;;;GAIG;AACH,MAAM,UAAU,MAAM,CAAC,IAA0B;IAC/C,IAAI,IAAI,IAAI,IAAI,EAAE;QAChB,OAAO,EAAE,CAAC;KACX;IACD,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;QAC5B,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,OAAO,EAAE,CAAC;SACX;QACD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SACxC;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC7B;IACD,OAAO,EAAE,GAAG,IAAI,CAAC;AACnB,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport angular from 'angular';\n\n/**\n * Take text from the model and present it to the user as a string\n * @param {text} model value\n * @returns {string}\n */\nexport function toUser(text: ToUserQuery | string): string {\n  if (text == null) {\n    return '';\n  }\n  if (typeof text === 'object') {\n    if (text.match_all) {\n      return '';\n    }\n    if (text.query_string) {\n      return toUser(text.query_string.query);\n    }\n    return angular.toJson(text);\n  }\n  return '' + text;\n}\n\ninterface ToUserQuery {\n  match_all: object;\n  query_string: ToUserQueryString;\n}\n\ninterface ToUserQueryString {\n  query: string;\n}\n"]}]}