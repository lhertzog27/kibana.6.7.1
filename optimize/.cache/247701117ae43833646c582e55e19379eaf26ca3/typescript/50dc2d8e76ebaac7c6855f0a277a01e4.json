{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/inspector/ui/inspector_view.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/inspector/ui/inspector_view.tsx","mtime":1567631711741},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { EuiFlyoutBody } from '@elastic/eui';\n/**\n * The InspectorView component should be the top most element in every implemented\n * inspector view. It makes sure, that the appropriate stylings are applied to the\n * view.\n */\nvar InspectorView = function (_a) {\n    var useFlex = _a.useFlex, children = _a.children;\n    var classes = classNames({\n        'kbnInspectorView--flex': Boolean(useFlex),\n    });\n    return React.createElement(EuiFlyoutBody, { className: classes }, children);\n};\nInspectorView.propTypes = {\n    /**\n     * Set to true if the element should have display: flex set.\n     */\n    useFlex: PropTypes.bool,\n};\nexport { InspectorView };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/inspector/ui/inspector_view.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/inspector/ui/inspector_view.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,SAAS,MAAM,YAAY,CAAC;AACnC,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAE7C;;;;GAIG;AACH,IAAM,aAAa,GAAqC,UAAC,EAAqB;QAAnB,oBAAO,EAAE,sBAAQ;IAC1E,IAAM,OAAO,GAAG,UAAU,CAAC;QACzB,wBAAwB,EAAE,OAAO,CAAC,OAAO,CAAC;KAC3C,CAAC,CAAC;IACH,OAAO,oBAAC,aAAa,IAAC,SAAS,EAAE,OAAO,IAAG,QAAQ,CAAiB,CAAC;AACvE,CAAC,CAAC;AAEF,aAAa,CAAC,SAAS,GAAG;IACxB;;OAEG;IACH,OAAO,EAAE,SAAS,CAAC,IAAI;CACxB,CAAC;AAEF,OAAO,EAAE,aAAa,EAAE,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { EuiFlyoutBody } from '@elastic/eui';\n\n/**\n * The InspectorView component should be the top most element in every implemented\n * inspector view. It makes sure, that the appropriate stylings are applied to the\n * view.\n */\nconst InspectorView: React.SFC<{ useFlex?: boolean }> = ({ useFlex, children }) => {\n  const classes = classNames({\n    'kbnInspectorView--flex': Boolean(useFlex),\n  });\n  return <EuiFlyoutBody className={classes}>{children}</EuiFlyoutBody>;\n};\n\nInspectorView.propTypes = {\n  /**\n   * Set to true if the element should have display: flex set.\n   */\n  useFlex: PropTypes.bool,\n};\n\nexport { InspectorView };\n"]}]}