{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/core/public/core_system.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/core/public/core_system.ts","mtime":1567631711496},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport './core.css';\nimport { BasePathService } from './base_path';\nimport { ChromeService } from './chrome';\nimport { FatalErrorsService } from './fatal_errors';\nimport { I18nService } from './i18n';\nimport { InjectedMetadataService } from './injected_metadata';\nimport { LegacyPlatformService } from './legacy_platform';\nimport { LoadingCountService } from './loading_count';\nimport { NotificationsService } from './notifications';\nimport { UiSettingsService } from './ui_settings';\n/**\n * The CoreSystem is the root of the new platform, and starts all parts\n * of Kibana in the UI, including the LegacyPlatform which is managed\n * by the LegacyPlatformService. As we migrate more things to the new\n * platform the CoreSystem will get many more Services.\n */\nvar CoreSystem = /** @class */ (function () {\n    function CoreSystem(params) {\n        var _this = this;\n        var rootDomElement = params.rootDomElement, injectedMetadata = params.injectedMetadata, requireLegacyFiles = params.requireLegacyFiles, useLegacyTestHarness = params.useLegacyTestHarness;\n        this.rootDomElement = rootDomElement;\n        this.i18n = new I18nService();\n        this.injectedMetadata = new InjectedMetadataService({\n            injectedMetadata: injectedMetadata,\n        });\n        this.fatalErrors = new FatalErrorsService({\n            rootDomElement: rootDomElement,\n            injectedMetadata: this.injectedMetadata,\n            stopCoreSystem: function () {\n                _this.stop();\n            },\n        });\n        this.notificationsTargetDomElement = document.createElement('div');\n        this.notifications = new NotificationsService({\n            targetDomElement: this.notificationsTargetDomElement,\n        });\n        this.loadingCount = new LoadingCountService();\n        this.basePath = new BasePathService();\n        this.uiSettings = new UiSettingsService();\n        this.chrome = new ChromeService();\n        this.legacyPlatformTargetDomElement = document.createElement('div');\n        this.legacyPlatform = new LegacyPlatformService({\n            targetDomElement: this.legacyPlatformTargetDomElement,\n            requireLegacyFiles: requireLegacyFiles,\n            useLegacyTestHarness: useLegacyTestHarness,\n        });\n    }\n    CoreSystem.prototype.start = function () {\n        try {\n            // ensure the rootDomElement is empty\n            this.rootDomElement.textContent = '';\n            this.rootDomElement.classList.add('coreSystemRootDomElement');\n            this.rootDomElement.appendChild(this.notificationsTargetDomElement);\n            this.rootDomElement.appendChild(this.legacyPlatformTargetDomElement);\n            var i18n = this.i18n.start();\n            var notifications = this.notifications.start({ i18n: i18n });\n            var injectedMetadata = this.injectedMetadata.start();\n            var fatalErrors = this.fatalErrors.start({ i18n: i18n });\n            var loadingCount = this.loadingCount.start({ fatalErrors: fatalErrors });\n            var basePath = this.basePath.start({ injectedMetadata: injectedMetadata });\n            var uiSettings = this.uiSettings.start({\n                notifications: notifications,\n                loadingCount: loadingCount,\n                injectedMetadata: injectedMetadata,\n                basePath: basePath,\n            });\n            var chrome = this.chrome.start();\n            this.legacyPlatform.start({\n                i18n: i18n,\n                injectedMetadata: injectedMetadata,\n                fatalErrors: fatalErrors,\n                notifications: notifications,\n                loadingCount: loadingCount,\n                basePath: basePath,\n                uiSettings: uiSettings,\n                chrome: chrome,\n            });\n            return { fatalErrors: fatalErrors };\n        }\n        catch (error) {\n            this.fatalErrors.add(error);\n        }\n    };\n    CoreSystem.prototype.stop = function () {\n        this.legacyPlatform.stop();\n        this.notifications.stop();\n        this.loadingCount.stop();\n        this.uiSettings.stop();\n        this.chrome.stop();\n        this.i18n.stop();\n        this.rootDomElement.textContent = '';\n    };\n    return CoreSystem;\n}());\nexport { CoreSystem };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/core/public/core_system.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/core/public/core_system.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport './core.css';\n\nimport { BasePathService } from './base_path';\nimport { ChromeService } from './chrome';\nimport { FatalErrorsService } from './fatal_errors';\nimport { I18nService } from './i18n';\nimport { InjectedMetadataParams, InjectedMetadataService } from './injected_metadata';\nimport { LegacyPlatformParams, LegacyPlatformService } from './legacy_platform';\nimport { LoadingCountService } from './loading_count';\nimport { NotificationsService } from './notifications';\nimport { UiSettingsService } from './ui_settings';\n\ninterface Params {\n  rootDomElement: HTMLElement;\n  injectedMetadata: InjectedMetadataParams['injectedMetadata'];\n  requireLegacyFiles: LegacyPlatformParams['requireLegacyFiles'];\n  useLegacyTestHarness?: LegacyPlatformParams['useLegacyTestHarness'];\n}\n\n/**\n * The CoreSystem is the root of the new platform, and starts all parts\n * of Kibana in the UI, including the LegacyPlatform which is managed\n * by the LegacyPlatformService. As we migrate more things to the new\n * platform the CoreSystem will get many more Services.\n */\nexport class CoreSystem {\n  private readonly fatalErrors: FatalErrorsService;\n  private readonly injectedMetadata: InjectedMetadataService;\n  private readonly legacyPlatform: LegacyPlatformService;\n  private readonly notifications: NotificationsService;\n  private readonly loadingCount: LoadingCountService;\n  private readonly uiSettings: UiSettingsService;\n  private readonly basePath: BasePathService;\n  private readonly chrome: ChromeService;\n  private readonly i18n: I18nService;\n\n  private readonly rootDomElement: HTMLElement;\n  private readonly notificationsTargetDomElement: HTMLDivElement;\n  private readonly legacyPlatformTargetDomElement: HTMLDivElement;\n\n  constructor(params: Params) {\n    const { rootDomElement, injectedMetadata, requireLegacyFiles, useLegacyTestHarness } = params;\n\n    this.rootDomElement = rootDomElement;\n\n    this.i18n = new I18nService();\n\n    this.injectedMetadata = new InjectedMetadataService({\n      injectedMetadata,\n    });\n\n    this.fatalErrors = new FatalErrorsService({\n      rootDomElement,\n      injectedMetadata: this.injectedMetadata,\n      stopCoreSystem: () => {\n        this.stop();\n      },\n    });\n\n    this.notificationsTargetDomElement = document.createElement('div');\n    this.notifications = new NotificationsService({\n      targetDomElement: this.notificationsTargetDomElement,\n    });\n\n    this.loadingCount = new LoadingCountService();\n    this.basePath = new BasePathService();\n    this.uiSettings = new UiSettingsService();\n    this.chrome = new ChromeService();\n\n    this.legacyPlatformTargetDomElement = document.createElement('div');\n    this.legacyPlatform = new LegacyPlatformService({\n      targetDomElement: this.legacyPlatformTargetDomElement,\n      requireLegacyFiles,\n      useLegacyTestHarness,\n    });\n  }\n\n  public start() {\n    try {\n      // ensure the rootDomElement is empty\n      this.rootDomElement.textContent = '';\n      this.rootDomElement.classList.add('coreSystemRootDomElement');\n      this.rootDomElement.appendChild(this.notificationsTargetDomElement);\n      this.rootDomElement.appendChild(this.legacyPlatformTargetDomElement);\n\n      const i18n = this.i18n.start();\n      const notifications = this.notifications.start({ i18n });\n      const injectedMetadata = this.injectedMetadata.start();\n      const fatalErrors = this.fatalErrors.start({ i18n });\n      const loadingCount = this.loadingCount.start({ fatalErrors });\n      const basePath = this.basePath.start({ injectedMetadata });\n      const uiSettings = this.uiSettings.start({\n        notifications,\n        loadingCount,\n        injectedMetadata,\n        basePath,\n      });\n      const chrome = this.chrome.start();\n\n      this.legacyPlatform.start({\n        i18n,\n        injectedMetadata,\n        fatalErrors,\n        notifications,\n        loadingCount,\n        basePath,\n        uiSettings,\n        chrome,\n      });\n\n      return { fatalErrors };\n    } catch (error) {\n      this.fatalErrors.add(error);\n    }\n  }\n\n  public stop() {\n    this.legacyPlatform.stop();\n    this.notifications.stop();\n    this.loadingCount.stop();\n    this.uiSettings.stop();\n    this.chrome.stop();\n    this.i18n.stop();\n    this.rootDomElement.textContent = '';\n  }\n}\n"]}]}