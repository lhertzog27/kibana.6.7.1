{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/actions/view.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/actions/view.ts","mtime":1567631711542},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createAction } from 'redux-actions';\nexport var ViewActionTypeKeys;\n(function (ViewActionTypeKeys) {\n    ViewActionTypeKeys[\"UPDATE_VIEW_MODE\"] = \"UPDATE_VIEW_MODE\";\n    ViewActionTypeKeys[\"SET_VISIBLE_CONTEXT_MENU_PANEL_ID\"] = \"SET_VISIBLE_CONTEXT_MENU_PANEL_ID\";\n    ViewActionTypeKeys[\"MAXIMIZE_PANEl\"] = \"MAXIMIZE_PANEl\";\n    ViewActionTypeKeys[\"MINIMIZE_PANEL\"] = \"MINIMIZE_PANEL\";\n    ViewActionTypeKeys[\"UPDATE_IS_FULL_SCREEN_MODE\"] = \"UPDATE_IS_FULL_SCREEN_MODE\";\n    ViewActionTypeKeys[\"UPDATE_USE_MARGINS\"] = \"UPDATE_USE_MARGINS\";\n    ViewActionTypeKeys[\"UPDATE_HIDE_PANEL_TITLES\"] = \"UPDATE_HIDE_PANEL_TITLES\";\n    ViewActionTypeKeys[\"UPDATE_TIME_RANGE\"] = \"UPDATE_TIME_RANGE\";\n    ViewActionTypeKeys[\"UPDATE_FILTERS\"] = \"UPDATE_FILTERS\";\n    ViewActionTypeKeys[\"UPDATE_QUERY\"] = \"UPDATE_QUERY\";\n    ViewActionTypeKeys[\"CLOSE_CONTEXT_MENU\"] = \"CLOSE_CONTEXT_MENU\";\n})(ViewActionTypeKeys || (ViewActionTypeKeys = {}));\nexport var updateViewMode = createAction(ViewActionTypeKeys.UPDATE_VIEW_MODE);\nexport var closeContextMenu = createAction(ViewActionTypeKeys.CLOSE_CONTEXT_MENU);\nexport var setVisibleContextMenuPanelId = createAction(ViewActionTypeKeys.SET_VISIBLE_CONTEXT_MENU_PANEL_ID);\nexport var maximizePanel = createAction(ViewActionTypeKeys.MAXIMIZE_PANEl);\nexport var minimizePanel = createAction(ViewActionTypeKeys.MINIMIZE_PANEL);\nexport var updateIsFullScreenMode = createAction(ViewActionTypeKeys.UPDATE_IS_FULL_SCREEN_MODE);\nexport var updateUseMargins = createAction(ViewActionTypeKeys.UPDATE_USE_MARGINS);\nexport var updateHidePanelTitles = createAction(ViewActionTypeKeys.UPDATE_HIDE_PANEL_TITLES);\nexport var updateTimeRange = createAction(ViewActionTypeKeys.UPDATE_TIME_RANGE);\nexport var updateFilters = createAction(ViewActionTypeKeys.UPDATE_FILTERS);\nexport var updateQuery = createAction(ViewActionTypeKeys.UPDATE_QUERY);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/actions/view.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/actions/view.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAM7C,MAAM,CAAN,IAAY,kBAYX;AAZD,WAAY,kBAAkB;IAC5B,2DAAqC,CAAA;IACrC,6FAAuE,CAAA;IACvE,uDAAiC,CAAA;IACjC,uDAAiC,CAAA;IACjC,+EAAyD,CAAA;IACzD,+DAAyC,CAAA;IACzC,2EAAqD,CAAA;IACrD,6DAAuC,CAAA;IACvC,uDAAiC,CAAA;IACjC,mDAA6B,CAAA;IAC7B,+DAAyC,CAAA;AAC3C,CAAC,EAZW,kBAAkB,KAAlB,kBAAkB,QAY7B;AA+CD,MAAM,CAAC,IAAM,cAAc,GAAG,YAAY,CAAS,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;AACxF,MAAM,CAAC,IAAM,gBAAgB,GAAG,YAAY,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;AACpF,MAAM,CAAC,IAAM,4BAA4B,GAAG,YAAY,CACtD,kBAAkB,CAAC,iCAAiC,CACrD,CAAC;AACF,MAAM,CAAC,IAAM,aAAa,GAAG,YAAY,CAAU,kBAAkB,CAAC,cAAc,CAAC,CAAC;AACtF,MAAM,CAAC,IAAM,aAAa,GAAG,YAAY,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;AAC7E,MAAM,CAAC,IAAM,sBAAsB,GAAG,YAAY,CAChD,kBAAkB,CAAC,0BAA0B,CAC9C,CAAC;AACF,MAAM,CAAC,IAAM,gBAAgB,GAAG,YAAY,CAAU,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;AAC7F,MAAM,CAAC,IAAM,qBAAqB,GAAG,YAAY,CAC/C,kBAAkB,CAAC,wBAAwB,CAC5C,CAAC;AACF,MAAM,CAAC,IAAM,eAAe,GAAG,YAAY,CAAY,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;AAC7F,MAAM,CAAC,IAAM,aAAa,GAAG,YAAY,CAAU,kBAAkB,CAAC,cAAc,CAAC,CAAC;AACtF,MAAM,CAAC,IAAM,WAAW,GAAG,YAAY,CAAQ,kBAAkB,CAAC,YAAY,CAAC,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { createAction } from 'redux-actions';\nimport { Filters, Query, TimeRange } from 'ui/embeddable';\nimport { KibanaAction } from '../../selectors/types';\nimport { DashboardViewMode } from '../dashboard_view_mode';\nimport { PanelId } from '../selectors';\n\nexport enum ViewActionTypeKeys {\n  UPDATE_VIEW_MODE = 'UPDATE_VIEW_MODE',\n  SET_VISIBLE_CONTEXT_MENU_PANEL_ID = 'SET_VISIBLE_CONTEXT_MENU_PANEL_ID',\n  MAXIMIZE_PANEl = 'MAXIMIZE_PANEl',\n  MINIMIZE_PANEL = 'MINIMIZE_PANEL',\n  UPDATE_IS_FULL_SCREEN_MODE = 'UPDATE_IS_FULL_SCREEN_MODE',\n  UPDATE_USE_MARGINS = 'UPDATE_USE_MARGINS',\n  UPDATE_HIDE_PANEL_TITLES = 'UPDATE_HIDE_PANEL_TITLES',\n  UPDATE_TIME_RANGE = 'UPDATE_TIME_RANGE',\n  UPDATE_FILTERS = 'UPDATE_FILTERS',\n  UPDATE_QUERY = 'UPDATE_QUERY',\n  CLOSE_CONTEXT_MENU = 'CLOSE_CONTEXT_MENU',\n}\n\nexport interface UpdateViewModeAction\n  extends KibanaAction<ViewActionTypeKeys.UPDATE_VIEW_MODE, DashboardViewMode> {}\n\nexport interface SetVisibleContextMenuPanelIdAction\n  extends KibanaAction<ViewActionTypeKeys.SET_VISIBLE_CONTEXT_MENU_PANEL_ID, PanelId> {}\n\nexport interface CloseContextMenuAction\n  extends KibanaAction<ViewActionTypeKeys.CLOSE_CONTEXT_MENU, undefined> {}\n\nexport interface MaximizePanelAction\n  extends KibanaAction<ViewActionTypeKeys.MAXIMIZE_PANEl, PanelId> {}\n\nexport interface MinimizePanelAction\n  extends KibanaAction<ViewActionTypeKeys.MINIMIZE_PANEL, undefined> {}\n\nexport interface UpdateIsFullScreenModeAction\n  extends KibanaAction<ViewActionTypeKeys.UPDATE_IS_FULL_SCREEN_MODE, boolean> {}\n\nexport interface UpdateUseMarginsAction\n  extends KibanaAction<ViewActionTypeKeys.UPDATE_USE_MARGINS, boolean> {}\n\nexport interface UpdateHidePanelTitlesAction\n  extends KibanaAction<ViewActionTypeKeys.UPDATE_HIDE_PANEL_TITLES, boolean> {}\n\nexport interface UpdateTimeRangeAction\n  extends KibanaAction<ViewActionTypeKeys.UPDATE_TIME_RANGE, TimeRange> {}\n\nexport interface UpdateFiltersAction\n  extends KibanaAction<ViewActionTypeKeys.UPDATE_FILTERS, Filters> {}\n\nexport interface UpdateQueryAction extends KibanaAction<ViewActionTypeKeys.UPDATE_QUERY, Query> {}\n\nexport type ViewActions =\n  | UpdateViewModeAction\n  | SetVisibleContextMenuPanelIdAction\n  | CloseContextMenuAction\n  | MaximizePanelAction\n  | MinimizePanelAction\n  | UpdateIsFullScreenModeAction\n  | UpdateUseMarginsAction\n  | UpdateHidePanelTitlesAction\n  | UpdateTimeRangeAction\n  | UpdateFiltersAction\n  | UpdateQueryAction;\n\nexport const updateViewMode = createAction<string>(ViewActionTypeKeys.UPDATE_VIEW_MODE);\nexport const closeContextMenu = createAction(ViewActionTypeKeys.CLOSE_CONTEXT_MENU);\nexport const setVisibleContextMenuPanelId = createAction<PanelId>(\n  ViewActionTypeKeys.SET_VISIBLE_CONTEXT_MENU_PANEL_ID\n);\nexport const maximizePanel = createAction<PanelId>(ViewActionTypeKeys.MAXIMIZE_PANEl);\nexport const minimizePanel = createAction(ViewActionTypeKeys.MINIMIZE_PANEL);\nexport const updateIsFullScreenMode = createAction<boolean>(\n  ViewActionTypeKeys.UPDATE_IS_FULL_SCREEN_MODE\n);\nexport const updateUseMargins = createAction<boolean>(ViewActionTypeKeys.UPDATE_USE_MARGINS);\nexport const updateHidePanelTitles = createAction<boolean>(\n  ViewActionTypeKeys.UPDATE_HIDE_PANEL_TITLES\n);\nexport const updateTimeRange = createAction<TimeRange>(ViewActionTypeKeys.UPDATE_TIME_RANGE);\nexport const updateFilters = createAction<Filters>(ViewActionTypeKeys.UPDATE_FILTERS);\nexport const updateQuery = createAction<Query>(ViewActionTypeKeys.UPDATE_QUERY);\n"]}]}