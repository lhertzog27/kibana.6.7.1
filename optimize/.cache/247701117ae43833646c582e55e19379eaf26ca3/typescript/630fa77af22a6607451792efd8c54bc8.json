{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/core/public/notifications/toasts/toasts_start_contract.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/core/public/notifications/toasts/toasts_start_contract.tsx","mtime":1567631711498},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as Rx from 'rxjs';\nvar normalizeToast = function (toastOrTitle) {\n    if (typeof toastOrTitle === 'string') {\n        return {\n            title: toastOrTitle,\n        };\n    }\n    return toastOrTitle;\n};\nvar ToastsStartContract = /** @class */ (function () {\n    function ToastsStartContract() {\n        this.toasts$ = new Rx.BehaviorSubject([]);\n        this.idCounter = 0;\n    }\n    ToastsStartContract.prototype.get$ = function () {\n        return this.toasts$.asObservable();\n    };\n    ToastsStartContract.prototype.add = function (toastOrTitle) {\n        var toast = tslib_1.__assign({ id: String(this.idCounter++) }, normalizeToast(toastOrTitle));\n        this.toasts$.next(tslib_1.__spread(this.toasts$.getValue(), [toast]));\n        return toast;\n    };\n    ToastsStartContract.prototype.remove = function (toast) {\n        var list = this.toasts$.getValue();\n        var listWithoutToast = list.filter(function (t) { return t !== toast; });\n        if (listWithoutToast.length !== list.length) {\n            this.toasts$.next(listWithoutToast);\n        }\n    };\n    ToastsStartContract.prototype.addSuccess = function (toastOrTitle) {\n        return this.add(tslib_1.__assign({ color: 'success', iconType: 'check' }, normalizeToast(toastOrTitle)));\n    };\n    ToastsStartContract.prototype.addWarning = function (toastOrTitle) {\n        return this.add(tslib_1.__assign({ color: 'warning', iconType: 'help' }, normalizeToast(toastOrTitle)));\n    };\n    ToastsStartContract.prototype.addDanger = function (toastOrTitle) {\n        return this.add(tslib_1.__assign({ color: 'danger', iconType: 'alert' }, normalizeToast(toastOrTitle)));\n    };\n    return ToastsStartContract;\n}());\nexport { ToastsStartContract };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/core/public/notifications/toasts/toasts_start_contract.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/core/public/notifications/toasts/toasts_start_contract.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAGH,OAAO,KAAK,EAAE,MAAM,MAAM,CAAC;AAI3B,IAAM,cAAc,GAAG,UAAC,YAAwB;IAC9C,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;QACpC,OAAO;YACL,KAAK,EAAE,YAAY;SACpB,CAAC;KACH;IAED,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC;AAEF;IAAA;QACU,YAAO,GAAG,IAAI,EAAE,CAAC,eAAe,CAAU,EAAE,CAAC,CAAC;QAC9C,cAAS,GAAG,CAAC,CAAC;IAgDxB,CAAC;IA9CQ,kCAAI,GAAX;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAEM,iCAAG,GAAV,UAAW,YAAwB;QACjC,IAAM,KAAK,sBACT,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IACzB,cAAc,CAAC,YAAY,CAAC,CAChC,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,IAAI,kBAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAE,KAAK,GAAE,CAAC;QAEvD,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,oCAAM,GAAb,UAAc,KAAY;QACxB,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACrC,IAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,KAAK,EAAX,CAAW,CAAC,CAAC;QACvD,IAAI,gBAAgB,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;YAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACrC;IACH,CAAC;IAEM,wCAAU,GAAjB,UAAkB,YAAwB;QACxC,OAAO,IAAI,CAAC,GAAG,oBACb,KAAK,EAAE,SAAS,EAChB,QAAQ,EAAE,OAAO,IACd,cAAc,CAAC,YAAY,CAAC,EAC/B,CAAC;IACL,CAAC;IAEM,wCAAU,GAAjB,UAAkB,YAAwB;QACxC,OAAO,IAAI,CAAC,GAAG,oBACb,KAAK,EAAE,SAAS,EAChB,QAAQ,EAAE,MAAM,IACb,cAAc,CAAC,YAAY,CAAC,EAC/B,CAAC;IACL,CAAC;IAEM,uCAAS,GAAhB,UAAiB,YAAwB;QACvC,OAAO,IAAI,CAAC,GAAG,oBACb,KAAK,EAAE,QAAQ,EACf,QAAQ,EAAE,OAAO,IACd,cAAc,CAAC,YAAY,CAAC,EAC/B,CAAC;IACL,CAAC;IACH,0BAAC;AAAD,CAAC,AAlDD,IAkDC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Toast } from '@elastic/eui';\nimport * as Rx from 'rxjs';\n\nexport type ToastInput = string | Pick<Toast, Exclude<keyof Toast, 'id'>>;\n\nconst normalizeToast = (toastOrTitle: ToastInput) => {\n  if (typeof toastOrTitle === 'string') {\n    return {\n      title: toastOrTitle,\n    };\n  }\n\n  return toastOrTitle;\n};\n\nexport class ToastsStartContract {\n  private toasts$ = new Rx.BehaviorSubject<Toast[]>([]);\n  private idCounter = 0;\n\n  public get$() {\n    return this.toasts$.asObservable();\n  }\n\n  public add(toastOrTitle: ToastInput) {\n    const toast: Toast = {\n      id: String(this.idCounter++),\n      ...normalizeToast(toastOrTitle),\n    };\n\n    this.toasts$.next([...this.toasts$.getValue(), toast]);\n\n    return toast;\n  }\n\n  public remove(toast: Toast) {\n    const list = this.toasts$.getValue();\n    const listWithoutToast = list.filter(t => t !== toast);\n    if (listWithoutToast.length !== list.length) {\n      this.toasts$.next(listWithoutToast);\n    }\n  }\n\n  public addSuccess(toastOrTitle: ToastInput) {\n    return this.add({\n      color: 'success',\n      iconType: 'check',\n      ...normalizeToast(toastOrTitle),\n    });\n  }\n\n  public addWarning(toastOrTitle: ToastInput) {\n    return this.add({\n      color: 'warning',\n      iconType: 'help',\n      ...normalizeToast(toastOrTitle),\n    });\n  }\n\n  public addDanger(toastOrTitle: ToastInput) {\n    return this.add({\n      color: 'danger',\n      iconType: 'alert',\n      ...normalizeToast(toastOrTitle),\n    });\n  }\n}\n"]}]}