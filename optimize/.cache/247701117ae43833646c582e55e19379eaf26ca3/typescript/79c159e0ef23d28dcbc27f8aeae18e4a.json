{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/injected_vars.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/injected_vars.ts","mtime":1567631711709},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { cloneDeep } from 'lodash';\nvar newPlatformInjectedVars;\nexport function __newPlatformInit__(instance) {\n    if (newPlatformInjectedVars) {\n        throw new Error('ui/chrome/api/injected_vars is already initialized');\n    }\n    newPlatformInjectedVars = instance;\n}\nexport function initChromeInjectedVarsApi(chrome) {\n    chrome.getInjected = function (name, defaultValue) {\n        return cloneDeep(name\n            ? newPlatformInjectedVars.getInjectedVar(name, defaultValue)\n            : newPlatformInjectedVars.getInjectedVars());\n    };\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/injected_vars.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/injected_vars.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAC;AAGnC,IAAI,uBAAsD,CAAC;AAE3D,MAAM,UAAU,mBAAmB,CAAC,QAAuC;IACzE,IAAI,uBAAuB,EAAE;QAC3B,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;KACvE;IAED,uBAAuB,GAAG,QAAQ,CAAC;AACrC,CAAC;AAED,MAAM,UAAU,yBAAyB,CAAC,MAA8B;IACtE,MAAM,CAAC,WAAW,GAAG,UAAC,IAAY,EAAE,YAAiB;QACnD,OAAA,SAAS,CACP,IAAI;YACF,CAAC,CAAC,uBAAuB,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC;YAC5D,CAAC,CAAC,uBAAuB,CAAC,eAAe,EAAE,CAC9C;IAJD,CAIC,CAAC;AACN,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { cloneDeep } from 'lodash';\nimport { InjectedMetadataStartContract } from '../../../../core/public/injected_metadata';\n\nlet newPlatformInjectedVars: InjectedMetadataStartContract;\n\nexport function __newPlatformInit__(instance: InjectedMetadataStartContract) {\n  if (newPlatformInjectedVars) {\n    throw new Error('ui/chrome/api/injected_vars is already initialized');\n  }\n\n  newPlatformInjectedVars = instance;\n}\n\nexport function initChromeInjectedVarsApi(chrome: { [key: string]: any }) {\n  chrome.getInjected = (name: string, defaultValue: any) =>\n    cloneDeep(\n      name\n        ? newPlatformInjectedVars.getInjectedVar(name, defaultValue)\n        : newPlatformInjectedVars.getInjectedVars()\n    );\n}\n"]}]}