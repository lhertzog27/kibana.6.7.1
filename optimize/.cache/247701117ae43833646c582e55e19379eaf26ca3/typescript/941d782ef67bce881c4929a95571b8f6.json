{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/core/public/ui_settings/ui_settings_service.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/core/public/ui_settings/ui_settings_service.ts","mtime":1567631711499},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { UiSettingsApi } from './ui_settings_api';\nimport { UiSettingsClient } from './ui_settings_client';\nimport { i18n } from '@kbn/i18n';\nvar UiSettingsService = /** @class */ (function () {\n    function UiSettingsService() {\n    }\n    UiSettingsService.prototype.start = function (_a) {\n        var notifications = _a.notifications, loadingCount = _a.loadingCount, injectedMetadata = _a.injectedMetadata, basePath = _a.basePath;\n        this.uiSettingsApi = new UiSettingsApi(basePath, injectedMetadata.getKibanaVersion());\n        loadingCount.add(this.uiSettingsApi.getLoadingCount$());\n        // TODO: Migrate away from legacyMetadata https://github.com/elastic/kibana/issues/22779\n        var legacyMetadata = injectedMetadata.getLegacyMetadata();\n        this.uiSettingsClient = new UiSettingsClient({\n            api: this.uiSettingsApi,\n            onUpdateError: function (error) {\n                notifications.toasts.addDanger({\n                    title: i18n.translate('core.uiSettings.unableUpdateUISettingNotificationMessageTitle', {\n                        defaultMessage: 'Unable to update UI setting',\n                    }),\n                    text: error.message,\n                });\n            },\n            defaults: legacyMetadata.uiSettings.defaults,\n            initialSettings: legacyMetadata.uiSettings.user,\n        });\n        return this.uiSettingsClient;\n    };\n    UiSettingsService.prototype.stop = function () {\n        if (this.uiSettingsClient) {\n            this.uiSettingsClient.stop();\n        }\n        if (this.uiSettingsApi) {\n            this.uiSettingsApi.stop();\n        }\n    };\n    return UiSettingsService;\n}());\nexport { UiSettingsService };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/core/public/ui_settings/ui_settings_service.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/core/public/ui_settings/ui_settings_service.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAOH,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAExD,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AASjC;IAAA;IAqCA,CAAC;IAjCQ,iCAAK,GAAZ,UAAa,EAAiE;YAA/D,gCAAa,EAAE,8BAAY,EAAE,sCAAgB,EAAE,sBAAQ;QACpE,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,QAAQ,EAAE,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACtF,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAExD,wFAAwF;QACxF,IAAM,cAAc,GAAG,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;QAE5D,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC;YAC3C,GAAG,EAAE,IAAI,CAAC,aAAa;YACvB,aAAa,EAAE,UAAA,KAAK;gBAClB,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC;oBAC7B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,+DAA+D,EAAE;wBACrF,cAAc,EAAE,6BAA6B;qBAC9C,CAAC;oBACF,IAAI,EAAE,KAAK,CAAC,OAAO;iBACpB,CAAC,CAAC;YACL,CAAC;YACD,QAAQ,EAAE,cAAc,CAAC,UAAU,CAAC,QAAQ;YAC5C,eAAe,EAAE,cAAc,CAAC,UAAU,CAAC,IAAI;SAChD,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAEM,gCAAI,GAAX;QACE,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B;IACH,CAAC;IACH,wBAAC;AAAD,CAAC,AArCD,IAqCC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { BasePathStartContract } from '../base_path';\nimport { InjectedMetadataStartContract } from '../injected_metadata';\nimport { LoadingCountStartContract } from '../loading_count';\nimport { NotificationsStartContract } from '../notifications';\n\nimport { UiSettingsApi } from './ui_settings_api';\nimport { UiSettingsClient } from './ui_settings_client';\n\nimport { i18n } from '@kbn/i18n';\n\ninterface Deps {\n  notifications: NotificationsStartContract;\n  loadingCount: LoadingCountStartContract;\n  injectedMetadata: InjectedMetadataStartContract;\n  basePath: BasePathStartContract;\n}\n\nexport class UiSettingsService {\n  private uiSettingsApi?: UiSettingsApi;\n  private uiSettingsClient?: UiSettingsClient;\n\n  public start({ notifications, loadingCount, injectedMetadata, basePath }: Deps) {\n    this.uiSettingsApi = new UiSettingsApi(basePath, injectedMetadata.getKibanaVersion());\n    loadingCount.add(this.uiSettingsApi.getLoadingCount$());\n\n    // TODO: Migrate away from legacyMetadata https://github.com/elastic/kibana/issues/22779\n    const legacyMetadata = injectedMetadata.getLegacyMetadata();\n\n    this.uiSettingsClient = new UiSettingsClient({\n      api: this.uiSettingsApi,\n      onUpdateError: error => {\n        notifications.toasts.addDanger({\n          title: i18n.translate('core.uiSettings.unableUpdateUISettingNotificationMessageTitle', {\n            defaultMessage: 'Unable to update UI setting',\n          }),\n          text: error.message,\n        });\n      },\n      defaults: legacyMetadata.uiSettings.defaults,\n      initialSettings: legacyMetadata.uiSettings.user,\n    });\n\n    return this.uiSettingsClient;\n  }\n\n  public stop() {\n    if (this.uiSettingsClient) {\n      this.uiSettingsClient.stop();\n    }\n\n    if (this.uiSettingsApi) {\n      this.uiSettingsApi.stop();\n    }\n  }\n}\n\nexport type UiSettingsStartContract = UiSettingsClient;\n"]}]}