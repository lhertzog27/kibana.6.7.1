{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/flyout/flyout_session.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/flyout/flyout_session.tsx","mtime":1567631711736},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { EuiFlyout } from '@elastic/eui';\nimport { EventEmitter } from 'events';\nimport ReactDOM from 'react-dom';\nvar activeSession = null;\nvar CONTAINER_ID = 'flyout-container';\nfunction getOrCreateContainerElement() {\n    var container = document.getElementById(CONTAINER_ID);\n    if (!container) {\n        container = document.createElement('div');\n        container.id = CONTAINER_ID;\n        document.body.appendChild(container);\n    }\n    return container;\n}\n/**\n * A FlyoutSession describes the session of one opened flyout panel. It offers\n * methods to close the flyout panel again. If you open a flyout panel you should make\n * sure you call {@link FlyoutSession#close} when it should be closed.\n * Since a flyout could also be closed without calling this method (e.g. because\n * the user closes it), you must listen to the \"closed\" event on this instance.\n * It will be emitted whenever the flyout will be closed and you should throw\n * away your reference to this instance whenever you receive that event.\n * @extends EventEmitter\n */\nvar FlyoutSession = /** @class */ (function (_super) {\n    tslib_1.__extends(FlyoutSession, _super);\n    function FlyoutSession() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Binds the current flyout session to an Angular scope, meaning this flyout\n     * session will be closed as soon as the Angular scope gets destroyed.\n     * @param {object} scope - An angular scope object to bind to.\n     */\n    FlyoutSession.prototype.bindToAngularScope = function (scope) {\n        var _this = this;\n        var removeWatch = scope.$on('$destroy', function () { return _this.close(); });\n        this.on('closed', function () { return removeWatch(); });\n    };\n    /**\n     * Closes the opened flyout as long as it's still the open one.\n     * If this is not the active session anymore, this method won't do anything.\n     * If this session was still active and a flyout was closed, the 'closed'\n     * event will be emitted on this FlyoutSession instance.\n     */\n    FlyoutSession.prototype.close = function () {\n        if (activeSession === this) {\n            var container = document.getElementById(CONTAINER_ID);\n            if (container) {\n                ReactDOM.unmountComponentAtNode(container);\n                this.emit('closed');\n            }\n        }\n    };\n    return FlyoutSession;\n}(EventEmitter));\n/**\n * Opens a flyout panel with the given component inside. You can use\n * {@link FlyoutSession#close} on the return value to close the flyout.\n *\n * @param flyoutChildren - Mounts the children inside a fly out panel\n * @return {FlyoutSession} The session instance for the opened flyout panel.\n */\nexport function openFlyout(flyoutChildren, flyoutProps) {\n    if (flyoutProps === void 0) { flyoutProps = {}; }\n    // If there is an active inspector session close it before opening a new one.\n    if (activeSession) {\n        activeSession.close();\n    }\n    var container = getOrCreateContainerElement();\n    var session = (activeSession = new FlyoutSession());\n    var onClose = function () {\n        if (flyoutProps.onClose) {\n            flyoutProps.onClose();\n        }\n        session.close();\n    };\n    ReactDOM.render(React.createElement(EuiFlyout, tslib_1.__assign({}, flyoutProps, { onClose: onClose }), flyoutChildren), container);\n    return session;\n}\nexport { FlyoutSession };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/flyout/flyout_session.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/flyout/flyout_session.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AACtC,OAAO,QAAQ,MAAM,WAAW,CAAC;AAEjC,IAAI,aAAa,GAAyB,IAAI,CAAC;AAE/C,IAAM,YAAY,GAAG,kBAAkB,CAAC;AAExC,SAAS,2BAA2B;IAClC,IAAI,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IACtD,IAAI,CAAC,SAAS,EAAE;QACd,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,SAAS,CAAC,EAAE,GAAG,YAAY,CAAC;QAC5B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;KACtC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;;;;;;;;;GASG;AACH;IAA4B,yCAAY;IAAxC;;IA0BA,CAAC;IAzBC;;;;OAIG;IACI,0CAAkB,GAAzB,UAA0B,KAAgB;QAA1C,iBAGC;QAFC,IAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,EAAZ,CAAY,CAAC,CAAC;QAC9D,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,cAAM,OAAA,WAAW,EAAE,EAAb,CAAa,CAAC,CAAC;IACzC,CAAC;IAED;;;;;OAKG;IACI,6BAAK,GAAZ;QACE,IAAI,aAAa,KAAK,IAAI,EAAE;YAC1B,IAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YACxD,IAAI,SAAS,EAAE;gBACb,QAAQ,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;gBAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrB;SACF;IACH,CAAC;IACH,oBAAC;AAAD,CAAC,AA1BD,CAA4B,YAAY,GA0BvC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,UAAU,CACxB,cAA+B,EAC/B,WAIM;IAJN,4BAAA,EAAA,gBAIM;IAEN,6EAA6E;IAC7E,IAAI,aAAa,EAAE;QACjB,aAAa,CAAC,KAAK,EAAE,CAAC;KACvB;IACD,IAAM,SAAS,GAAG,2BAA2B,EAAE,CAAC;IAChD,IAAM,OAAO,GAAG,CAAC,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC,CAAC;IACtD,IAAM,OAAO,GAAG;QACd,IAAI,WAAW,CAAC,OAAO,EAAE;YACvB,WAAW,CAAC,OAAO,EAAE,CAAC;SACvB;QACD,OAAO,CAAC,KAAK,EAAE,CAAC;IAClB,CAAC,CAAC;IAEF,QAAQ,CAAC,MAAM,CACb,oBAAC,SAAS,uBAAK,WAAW,IAAE,OAAO,EAAE,OAAO,KACzC,cAAc,CACL,EACZ,SAAS,CACV,CAAC;IAEF,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,OAAO,EAAE,aAAa,EAAE,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nimport { EuiFlyout } from '@elastic/eui';\nimport { EventEmitter } from 'events';\nimport ReactDOM from 'react-dom';\n\nlet activeSession: FlyoutSession | null = null;\n\nconst CONTAINER_ID = 'flyout-container';\n\nfunction getOrCreateContainerElement() {\n  let container = document.getElementById(CONTAINER_ID);\n  if (!container) {\n    container = document.createElement('div');\n    container.id = CONTAINER_ID;\n    document.body.appendChild(container);\n  }\n  return container;\n}\n\n/**\n * A FlyoutSession describes the session of one opened flyout panel. It offers\n * methods to close the flyout panel again. If you open a flyout panel you should make\n * sure you call {@link FlyoutSession#close} when it should be closed.\n * Since a flyout could also be closed without calling this method (e.g. because\n * the user closes it), you must listen to the \"closed\" event on this instance.\n * It will be emitted whenever the flyout will be closed and you should throw\n * away your reference to this instance whenever you receive that event.\n * @extends EventEmitter\n */\nclass FlyoutSession extends EventEmitter {\n  /**\n   * Binds the current flyout session to an Angular scope, meaning this flyout\n   * session will be closed as soon as the Angular scope gets destroyed.\n   * @param {object} scope - An angular scope object to bind to.\n   */\n  public bindToAngularScope(scope: ng.IScope): void {\n    const removeWatch = scope.$on('$destroy', () => this.close());\n    this.on('closed', () => removeWatch());\n  }\n\n  /**\n   * Closes the opened flyout as long as it's still the open one.\n   * If this is not the active session anymore, this method won't do anything.\n   * If this session was still active and a flyout was closed, the 'closed'\n   * event will be emitted on this FlyoutSession instance.\n   */\n  public close(): void {\n    if (activeSession === this) {\n      const container = document.getElementById(CONTAINER_ID);\n      if (container) {\n        ReactDOM.unmountComponentAtNode(container);\n        this.emit('closed');\n      }\n    }\n  }\n}\n\n/**\n * Opens a flyout panel with the given component inside. You can use\n * {@link FlyoutSession#close} on the return value to close the flyout.\n *\n * @param flyoutChildren - Mounts the children inside a fly out panel\n * @return {FlyoutSession} The session instance for the opened flyout panel.\n */\nexport function openFlyout(\n  flyoutChildren: React.ReactNode,\n  flyoutProps: {\n    closeButtonAriaLabel?: string;\n    onClose?: () => void;\n    'data-test-subj'?: string;\n  } = {}\n): FlyoutSession {\n  // If there is an active inspector session close it before opening a new one.\n  if (activeSession) {\n    activeSession.close();\n  }\n  const container = getOrCreateContainerElement();\n  const session = (activeSession = new FlyoutSession());\n  const onClose = () => {\n    if (flyoutProps.onClose) {\n      flyoutProps.onClose();\n    }\n    session.close();\n  };\n\n  ReactDOM.render(\n    <EuiFlyout {...flyoutProps} onClose={onClose}>\n      {flyoutChildren}\n    </EuiFlyout>,\n    container\n  );\n\n  return session;\n}\n\nexport { FlyoutSession };\n"]}]}