{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/panels.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/panels.ts","mtime":1567631711561},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport _ from 'lodash';\nimport { PanelActionTypeKeys } from '../actions';\nvar deletePanel = function (panels, panelId) {\n    var panelsCopy = tslib_1.__assign({}, panels);\n    delete panelsCopy[panelId];\n    return panelsCopy;\n};\nvar updatePanel = function (panels, panelState) {\n    var _a;\n    return (tslib_1.__assign({}, panels, (_a = {}, _a[panelState.panelIndex] = panelState, _a)));\n};\nvar updatePanels = function (panels, updatedPanels) {\n    var panelsCopy = tslib_1.__assign({}, panels);\n    Object.values(updatedPanels).forEach(function (panel) {\n        panelsCopy[panel.panelIndex] = panel;\n    });\n    return panelsCopy;\n};\nvar resetPanelTitle = function (panels, panelId) {\n    var _a;\n    return (tslib_1.__assign({}, panels, (_a = {}, _a[panelId] = tslib_1.__assign({}, panels[panelId], { title: undefined }), _a)));\n};\nvar setPanelTitle = function (panels, payload) {\n    var _a;\n    return (tslib_1.__assign({}, panels, (_a = {}, _a[payload.panelId] = tslib_1.__assign({}, panels[payload.panelId], { title: payload.title }), _a)));\n};\nvar setPanels = function (panels, newPanels) { return _.cloneDeep(newPanels); };\nexport var panelsReducer = function (panels, action) {\n    if (panels === void 0) { panels = {}; }\n    switch (action.type) {\n        case PanelActionTypeKeys.DELETE_PANEL:\n            return deletePanel(panels, action.payload);\n        case PanelActionTypeKeys.UPDATE_PANEL:\n            return updatePanel(panels, action.payload);\n        case PanelActionTypeKeys.UPDATE_PANELS:\n            return updatePanels(panels, action.payload);\n        case PanelActionTypeKeys.RESET_PANEl_TITLE:\n            return resetPanelTitle(panels, action.payload);\n        case PanelActionTypeKeys.SET_PANEl_TITLE:\n            return setPanelTitle(panels, action.payload);\n        case PanelActionTypeKeys.SET_PANELS:\n            return setPanels(panels, action.payload);\n        default:\n            return panels;\n    }\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/panels.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/panels.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAEH,OAAO,CAAC,MAAM,QAAQ,CAAC;AAEvB,OAAO,EAAgB,mBAAmB,EAA8B,MAAM,YAAY,CAAC;AAG3F,IAAM,WAAW,GAAG,UAAC,MAAiB,EAAE,OAAgB;IACtD,IAAM,UAAU,wBAAQ,MAAM,CAAE,CAAC;IACjC,OAAO,UAAU,CAAC,OAAO,CAAC,CAAC;IAC3B,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAEF,IAAM,WAAW,GAAG,UAAC,MAAiB,EAAE,UAAsB;;IAAgB,OAAA,sBACzE,MAAM,eACR,UAAU,CAAC,UAAU,IAAG,UAAU,OACnC;AAH4E,CAG5E,CAAC;AAEH,IAAM,YAAY,GAAG,UAAC,MAAiB,EAAE,aAAwB;IAC/D,IAAM,UAAU,wBAAQ,MAAM,CAAE,CAAC;IACjC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAA,KAAK;QACxC,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;IACvC,CAAC,CAAC,CAAC;IACH,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAEF,IAAM,eAAe,GAAG,UAAC,MAAiB,EAAE,OAAgB;;IAAK,OAAA,sBAC5D,MAAM,eACR,OAAO,yBACH,MAAM,CAAC,OAAO,CAAC,IAClB,KAAK,EAAE,SAAS,UAElB;AAN+D,CAM/D,CAAC;AAEH,IAAM,aAAa,GAAG,UAAC,MAAiB,EAAE,OAAmC;;IAAK,OAAA,sBAC7E,MAAM,eACR,OAAO,CAAC,OAAO,yBACX,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAC1B,KAAK,EAAE,OAAO,CAAC,KAAK,UAEtB;AANgF,CAMhF,CAAC;AAEH,IAAM,SAAS,GAAG,UAAC,MAAiB,EAAE,SAAoB,IAAK,OAAA,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAtB,CAAsB,CAAC;AAEtF,MAAM,CAAC,IAAM,aAAa,GAAuB,UAAC,MAAW,EAAE,MAAM;IAAnB,uBAAA,EAAA,WAAW;IAC3D,QAAS,MAAuB,CAAC,IAAI,EAAE;QACrC,KAAK,mBAAmB,CAAC,YAAY;YACnC,OAAO,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAC7C,KAAK,mBAAmB,CAAC,YAAY;YACnC,OAAO,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAC7C,KAAK,mBAAmB,CAAC,aAAa;YACpC,OAAO,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9C,KAAK,mBAAmB,CAAC,iBAAiB;YACxC,OAAO,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QACjD,KAAK,mBAAmB,CAAC,eAAe;YACtC,OAAO,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAC/C,KAAK,mBAAmB,CAAC,UAAU;YACjC,OAAO,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAC3C;YACE,OAAO,MAAM,CAAC;KACjB;AACH,CAAC,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport _ from 'lodash';\nimport { Reducer } from 'redux';\nimport { PanelActions, PanelActionTypeKeys, SetPanelTitleActionPayload } from '../actions';\nimport { PanelId, PanelsMap, PanelState } from '../selectors';\n\nconst deletePanel = (panels: PanelsMap, panelId: PanelId): PanelsMap => {\n  const panelsCopy = { ...panels };\n  delete panelsCopy[panelId];\n  return panelsCopy;\n};\n\nconst updatePanel = (panels: PanelsMap, panelState: PanelState): PanelsMap => ({\n  ...panels,\n  [panelState.panelIndex]: panelState,\n});\n\nconst updatePanels = (panels: PanelsMap, updatedPanels: PanelsMap): PanelsMap => {\n  const panelsCopy = { ...panels };\n  Object.values(updatedPanels).forEach(panel => {\n    panelsCopy[panel.panelIndex] = panel;\n  });\n  return panelsCopy;\n};\n\nconst resetPanelTitle = (panels: PanelsMap, panelId: PanelId) => ({\n  ...panels,\n  [panelId]: {\n    ...panels[panelId],\n    title: undefined,\n  },\n});\n\nconst setPanelTitle = (panels: PanelsMap, payload: SetPanelTitleActionPayload) => ({\n  ...panels,\n  [payload.panelId]: {\n    ...panels[payload.panelId],\n    title: payload.title,\n  },\n});\n\nconst setPanels = (panels: PanelsMap, newPanels: PanelsMap) => _.cloneDeep(newPanels);\n\nexport const panelsReducer: Reducer<PanelsMap> = (panels = {}, action): PanelsMap => {\n  switch ((action as PanelActions).type) {\n    case PanelActionTypeKeys.DELETE_PANEL:\n      return deletePanel(panels, action.payload);\n    case PanelActionTypeKeys.UPDATE_PANEL:\n      return updatePanel(panels, action.payload);\n    case PanelActionTypeKeys.UPDATE_PANELS:\n      return updatePanels(panels, action.payload);\n    case PanelActionTypeKeys.RESET_PANEl_TITLE:\n      return resetPanelTitle(panels, action.payload);\n    case PanelActionTypeKeys.SET_PANEl_TITLE:\n      return setPanelTitle(panels, action.payload);\n    case PanelActionTypeKeys.SET_PANELS:\n      return setPanels(panels, action.payload);\n    default:\n      return panels;\n  }\n};\n"]}]}