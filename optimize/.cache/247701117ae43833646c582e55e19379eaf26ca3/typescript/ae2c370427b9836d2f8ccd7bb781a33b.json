{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/doc_table/actions/columns.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/doc_table/actions/columns.ts","mtime":1567631711719},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport function addColumn(columns, columnName) {\n    if (columns.includes(columnName)) {\n        return;\n    }\n    columns.push(columnName);\n}\nexport function removeColumn(columns, columnName) {\n    if (!columns.includes(columnName)) {\n        return;\n    }\n    columns.splice(columns.indexOf(columnName), 1);\n}\nexport function moveColumn(columns, columnName, newIndex) {\n    if (newIndex < 0) {\n        return;\n    }\n    if (newIndex >= columns.length) {\n        return;\n    }\n    if (!columns.includes(columnName)) {\n        return;\n    }\n    columns.splice(columns.indexOf(columnName), 1); // remove at old index\n    columns.splice(newIndex, 0, columnName); // insert before new index\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/doc_table/actions/columns.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/doc_table/actions/columns.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,MAAM,UAAU,SAAS,CAAC,OAAiB,EAAE,UAAkB;IAC7D,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;QAChC,OAAO;KACR;IAED,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3B,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,OAAiB,EAAE,UAAkB;IAChE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;QACjC,OAAO;KACR;IAED,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,OAAiB,EAAE,UAAkB,EAAE,QAAgB;IAChF,IAAI,QAAQ,GAAG,CAAC,EAAE;QAChB,OAAO;KACR;IAED,IAAI,QAAQ,IAAI,OAAO,CAAC,MAAM,EAAE;QAC9B,OAAO;KACR;IAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;QACjC,OAAO;KACR;IAED,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,sBAAsB;IACtE,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,0BAA0B;AACrE,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport function addColumn(columns: string[], columnName: string) {\n  if (columns.includes(columnName)) {\n    return;\n  }\n\n  columns.push(columnName);\n}\n\nexport function removeColumn(columns: string[], columnName: string) {\n  if (!columns.includes(columnName)) {\n    return;\n  }\n\n  columns.splice(columns.indexOf(columnName), 1);\n}\n\nexport function moveColumn(columns: string[], columnName: string, newIndex: number) {\n  if (newIndex < 0) {\n    return;\n  }\n\n  if (newIndex >= columns.length) {\n    return;\n  }\n\n  if (!columns.includes(columnName)) {\n    return;\n  }\n\n  columns.splice(columns.indexOf(columnName), 1); // remove at old index\n  columns.splice(newIndex, 0, columnName); // insert before new index\n}\n"]}]}