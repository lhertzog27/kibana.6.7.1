{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/controls.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/controls.ts","mtime":1567631711709},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as Rx from 'rxjs';\nvar newPlatformChrome;\nexport function __newPlatformInit__(instance) {\n    if (newPlatformChrome) {\n        throw new Error('ui/chrome/api/controls is already initialized');\n    }\n    newPlatformChrome = instance;\n}\nexport function initChromeControlsApi(chrome) {\n    // cache of chrome visibility state\n    var visible$ = new Rx.BehaviorSubject(false);\n    newPlatformChrome.getIsVisible$().subscribe(visible$);\n    /**\n     * Set the temporary visibility for the chrome. This does nothing if the chrome is hidden\n     * by default and should be used to hide the chrome for things like full-screen modes\n     * with an exit button.\n     */\n    chrome.setVisible = function (visibility) {\n        newPlatformChrome.setIsVisible(visibility);\n        return chrome;\n    };\n    /**\n     * Get the current visibility state of the chrome. Note that this drives the UI so it\n     * might be incorrect in the moments just before the UI is updated.\n     */\n    chrome.getVisible = function () { return visible$.getValue(); };\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/controls.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/controls.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,KAAK,EAAE,MAAM,MAAM,CAAC;AAG3B,IAAI,iBAAsC,CAAC;AAE3C,MAAM,UAAU,mBAAmB,CAAC,QAA6B;IAC/D,IAAI,iBAAiB,EAAE;QACrB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;KAClE;IAED,iBAAiB,GAAG,QAAQ,CAAC;AAC/B,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,MAA8B;IAClE,mCAAmC;IACnC,IAAM,QAAQ,GAAG,IAAI,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC/C,iBAAiB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAEtD;;;;OAIG;IACH,MAAM,CAAC,UAAU,GAAG,UAAC,UAAmB;QACtC,iBAAiB,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAC3C,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IAEF;;;OAGG;IACH,MAAM,CAAC,UAAU,GAAG,cAAM,OAAA,QAAQ,CAAC,QAAQ,EAAE,EAAnB,CAAmB,CAAC;AAChD,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport * as Rx from 'rxjs';\nimport { ChromeStartContract } from '../../../../core/public/chrome';\n\nlet newPlatformChrome: ChromeStartContract;\n\nexport function __newPlatformInit__(instance: ChromeStartContract) {\n  if (newPlatformChrome) {\n    throw new Error('ui/chrome/api/controls is already initialized');\n  }\n\n  newPlatformChrome = instance;\n}\n\nexport function initChromeControlsApi(chrome: { [key: string]: any }) {\n  // cache of chrome visibility state\n  const visible$ = new Rx.BehaviorSubject(false);\n  newPlatformChrome.getIsVisible$().subscribe(visible$);\n\n  /**\n   * Set the temporary visibility for the chrome. This does nothing if the chrome is hidden\n   * by default and should be used to hide the chrome for things like full-screen modes\n   * with an exit button.\n   */\n  chrome.setVisible = (visibility: boolean) => {\n    newPlatformChrome.setIsVisible(visibility);\n    return chrome;\n  };\n\n  /**\n   * Get the current visibility state of the chrome. Note that this drives the UI so it\n   * might be incorrect in the moments just before the UI is updated.\n   */\n  chrome.getVisible = () => visible$.getValue();\n}\n"]}]}