{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/kfetch/kfetch_abortable.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/kfetch/kfetch_abortable.ts","mtime":1567631711742},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { kfetch } from './kfetch';\nfunction createAbortable() {\n    var abortController = new AbortController();\n    var signal = abortController.signal, abort = abortController.abort;\n    return {\n        signal: signal,\n        abort: abort.bind(abortController),\n    };\n}\nexport function kfetchAbortable(fetchOptions, kibanaOptions) {\n    var _a = createAbortable(), signal = _a.signal, abort = _a.abort;\n    var fetching = kfetch(tslib_1.__assign({}, fetchOptions, { signal: signal }), kibanaOptions);\n    return {\n        fetching: fetching,\n        abort: abort,\n    };\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/kfetch/kfetch_abortable.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/kfetch/kfetch_abortable.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAEH,OAAO,EAAE,MAAM,EAAsC,MAAM,UAAU,CAAC;AAItE,SAAS,eAAe;IACtB,IAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;IACtC,IAAA,+BAAM,EAAE,6BAAK,CAAqB;IAE1C,OAAO;QACL,MAAM,QAAA;QACN,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC;KACnC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,eAAe,CAC7B,YAA4C,EAC5C,aAAmC;IAE7B,IAAA,sBAAqC,EAAnC,kBAAM,EAAE,gBAAK,CAAuB;IAC5C,IAAM,QAAQ,GAAG,MAAM,sBAAM,YAAY,IAAE,MAAM,QAAA,KAAI,aAAa,CAAC,CAAC;IAEpE,OAAO;QACL,QAAQ,UAAA;QACR,KAAK,OAAA;KACN,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { kfetch, KFetchKibanaOptions, KFetchOptions } from './kfetch';\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\n\nfunction createAbortable() {\n  const abortController = new AbortController();\n  const { signal, abort } = abortController;\n\n  return {\n    signal,\n    abort: abort.bind(abortController),\n  };\n}\n\nexport function kfetchAbortable(\n  fetchOptions?: Omit<KFetchOptions, 'signal'>,\n  kibanaOptions?: KFetchKibanaOptions\n) {\n  const { signal, abort } = createAbortable();\n  const fetching = kfetch({ ...fetchOptions, signal }, kibanaOptions);\n\n  return {\n    fetching,\n    abort,\n  };\n}\n"]}]}