{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/storage/storage.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/storage/storage.ts","mtime":1567631711755},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport angular from 'angular';\nvar Storage = /** @class */ (function () {\n    function Storage(store) {\n        var _this = this;\n        this.get = function (key) {\n            if (!_this.store) {\n                return null;\n            }\n            var storageItem = _this.store.getItem(key);\n            if (storageItem === null) {\n                return null;\n            }\n            try {\n                return JSON.parse(storageItem);\n            }\n            catch (error) {\n                return null;\n            }\n        };\n        this.set = function (key, value) {\n            try {\n                return _this.store.setItem(key, angular.toJson(value));\n            }\n            catch (e) {\n                return false;\n            }\n        };\n        this.remove = function (key) {\n            return _this.store.removeItem(key);\n        };\n        this.clear = function () {\n            return _this.store.clear();\n        };\n        this.store = store;\n    }\n    return Storage;\n}());\nexport { Storage };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/storage/storage.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/storage/storage.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,OAAO,MAAM,SAAS,CAAC;AAO9B;IAGE,iBAAY,KAAiB;QAA7B,iBAEC;QAEM,QAAG,GAAG,UAAC,GAAW;YACvB,IAAI,CAAC,KAAI,CAAC,KAAK,EAAE;gBACf,OAAO,IAAI,CAAC;aACb;YAED,IAAM,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC5C,IAAI,WAAW,KAAK,IAAI,EAAE;gBACxB,OAAO,IAAI,CAAC;aACb;YAED,IAAI;gBACF,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aAChC;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC;QAEK,QAAG,GAAG,UAAC,GAAW,EAAE,KAAU;YACnC,IAAI;gBACF,OAAO,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;aACvD;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC;QAEK,WAAM,GAAG,UAAC,GAAW;YAC1B,OAAO,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC;QAEK,UAAK,GAAG;YACb,OAAO,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC,CAAC;QAlCA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAkCH,cAAC;AAAD,CAAC,AAvCD,IAuCC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport angular from 'angular';\n\n// This is really silly, but I wasn't prepared to rename the kibana Storage class everywhere it is used\n// and this is the only way I could figure out how to use the type definition for a built in object\n// in a file that creates a type with the same name as that built in object.\nimport { WebStorage } from './web_storage';\n\nexport class Storage {\n  public store: WebStorage;\n\n  constructor(store: WebStorage) {\n    this.store = store;\n  }\n\n  public get = (key: string) => {\n    if (!this.store) {\n      return null;\n    }\n\n    const storageItem = this.store.getItem(key);\n    if (storageItem === null) {\n      return null;\n    }\n\n    try {\n      return JSON.parse(storageItem);\n    } catch (error) {\n      return null;\n    }\n  };\n\n  public set = (key: string, value: any) => {\n    try {\n      return this.store.setItem(key, angular.toJson(value));\n    } catch (e) {\n      return false;\n    }\n  };\n\n  public remove = (key: string) => {\n    return this.store.removeItem(key);\n  };\n\n  public clear = () => {\n    return this.store.clear();\n  };\n}\n"]}]}