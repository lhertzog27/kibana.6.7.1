{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/embeddables.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/embeddables.ts","mtime":1567631711561},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport _ from 'lodash';\nimport { EmbeddableActionTypeKeys, PanelActionTypeKeys, } from '../actions';\nvar embeddableIsInitializing = function (embeddables, panelId) {\n    var _a;\n    return (tslib_1.__assign({}, embeddables, (_a = {}, _a[panelId] = {\n        error: undefined,\n        initialized: false,\n        metadata: {},\n        stagedFilter: undefined,\n        lastReloadRequestTime: 0,\n    }, _a)));\n};\nvar embeddableIsInitialized = function (embeddables, _a) {\n    var panelId = _a.panelId, metadata = _a.metadata;\n    var _b;\n    return (tslib_1.__assign({}, embeddables, (_b = {}, _b[panelId] = tslib_1.__assign({}, embeddables[panelId], { initialized: true, metadata: tslib_1.__assign({}, metadata) }), _b)));\n};\nvar setStagedFilter = function (embeddables, _a) {\n    var panelId = _a.panelId, stagedFilter = _a.stagedFilter;\n    var _b;\n    return (tslib_1.__assign({}, embeddables, (_b = {}, _b[panelId] = tslib_1.__assign({}, embeddables[panelId], { stagedFilter: stagedFilter }), _b)));\n};\nvar embeddableError = function (embeddables, payload) {\n    var _a;\n    return (tslib_1.__assign({}, embeddables, (_a = {}, _a[payload.panelId] = tslib_1.__assign({}, embeddables[payload.panelId], { error: payload.error }), _a)));\n};\nvar clearStagedFilters = function (embeddables) {\n    var omitStagedFilters = function (embeddable) {\n        return _.omit(tslib_1.__assign({}, embeddable), ['stagedFilter']);\n    };\n    return _.mapValues(embeddables, omitStagedFilters);\n};\nvar deleteEmbeddable = function (embeddables, panelId) {\n    var embeddablesCopy = tslib_1.__assign({}, embeddables);\n    delete embeddablesCopy[panelId];\n    return embeddablesCopy;\n};\nvar setReloadRequestTime = function (embeddables, lastReloadRequestTime) {\n    return _.mapValues(embeddables, function (embeddable) { return (tslib_1.__assign({}, embeddable, { lastReloadRequestTime: lastReloadRequestTime })); });\n};\nexport var embeddablesReducer = function (embeddables, action) {\n    if (embeddables === void 0) { embeddables = {}; }\n    switch (action.type) {\n        case EmbeddableActionTypeKeys.EMBEDDABLE_IS_INITIALIZING:\n            return embeddableIsInitializing(embeddables, action.payload);\n        case EmbeddableActionTypeKeys.EMBEDDABLE_IS_INITIALIZED:\n            return embeddableIsInitialized(embeddables, action.payload);\n        case EmbeddableActionTypeKeys.SET_STAGED_FILTER:\n            return setStagedFilter(embeddables, action.payload);\n        case EmbeddableActionTypeKeys.CLEAR_STAGED_FILTERS:\n            return clearStagedFilters(embeddables);\n        case EmbeddableActionTypeKeys.EMBEDDABLE_ERROR:\n            return embeddableError(embeddables, action.payload);\n        case PanelActionTypeKeys.DELETE_PANEL:\n            return deleteEmbeddable(embeddables, action.payload);\n        case EmbeddableActionTypeKeys.REQUEST_RELOAD:\n            return setReloadRequestTime(embeddables, new Date().getTime());\n        default:\n            return embeddables;\n    }\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/embeddables.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/embeddables.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport _ from 'lodash';\nimport { Reducer } from 'redux';\n\nimport {\n  EmbeddableActionTypeKeys,\n  EmbeddableErrorActionPayload,\n  EmbeddableIsInitializedActionPayload,\n  PanelActionTypeKeys,\n  SetStagedFilterActionPayload,\n} from '../actions';\nimport { EmbeddableReduxState, EmbeddablesMap, PanelId } from '../selectors/types';\n\nconst embeddableIsInitializing = (\n  embeddables: EmbeddablesMap,\n  panelId: PanelId\n): EmbeddablesMap => ({\n  ...embeddables,\n  [panelId]: {\n    error: undefined,\n    initialized: false,\n    metadata: {},\n    stagedFilter: undefined,\n    lastReloadRequestTime: 0,\n  },\n});\n\nconst embeddableIsInitialized = (\n  embeddables: EmbeddablesMap,\n  { panelId, metadata }: EmbeddableIsInitializedActionPayload\n): EmbeddablesMap => ({\n  ...embeddables,\n  [panelId]: {\n    ...embeddables[panelId],\n    initialized: true,\n    metadata: { ...metadata },\n  },\n});\n\nconst setStagedFilter = (\n  embeddables: EmbeddablesMap,\n  { panelId, stagedFilter }: SetStagedFilterActionPayload\n): EmbeddablesMap => ({\n  ...embeddables,\n  [panelId]: {\n    ...embeddables[panelId],\n    stagedFilter,\n  },\n});\n\nconst embeddableError = (\n  embeddables: EmbeddablesMap,\n  payload: EmbeddableErrorActionPayload\n): EmbeddablesMap => ({\n  ...embeddables,\n  [payload.panelId]: {\n    ...embeddables[payload.panelId],\n    error: payload.error,\n  },\n});\n\nconst clearStagedFilters = (embeddables: EmbeddablesMap): EmbeddablesMap => {\n  const omitStagedFilters = (embeddable: EmbeddableReduxState): EmbeddablesMap =>\n    _.omit({ ...embeddable }, ['stagedFilter']);\n  return _.mapValues<EmbeddablesMap>(embeddables, omitStagedFilters);\n};\n\nconst deleteEmbeddable = (embeddables: EmbeddablesMap, panelId: PanelId): EmbeddablesMap => {\n  const embeddablesCopy = { ...embeddables };\n  delete embeddablesCopy[panelId];\n  return embeddablesCopy;\n};\n\nconst setReloadRequestTime = (\n  embeddables: EmbeddablesMap,\n  lastReloadRequestTime: number\n): EmbeddablesMap => {\n  return _.mapValues<EmbeddablesMap>(embeddables, embeddable => ({\n    ...embeddable,\n    lastReloadRequestTime,\n  }));\n};\n\nexport const embeddablesReducer: Reducer<EmbeddablesMap> = (\n  embeddables = {},\n  action\n): EmbeddablesMap => {\n  switch (action.type as EmbeddableActionTypeKeys | PanelActionTypeKeys.DELETE_PANEL) {\n    case EmbeddableActionTypeKeys.EMBEDDABLE_IS_INITIALIZING:\n      return embeddableIsInitializing(embeddables, action.payload);\n    case EmbeddableActionTypeKeys.EMBEDDABLE_IS_INITIALIZED:\n      return embeddableIsInitialized(embeddables, action.payload);\n    case EmbeddableActionTypeKeys.SET_STAGED_FILTER:\n      return setStagedFilter(embeddables, action.payload);\n    case EmbeddableActionTypeKeys.CLEAR_STAGED_FILTERS:\n      return clearStagedFilters(embeddables);\n    case EmbeddableActionTypeKeys.EMBEDDABLE_ERROR:\n      return embeddableError(embeddables, action.payload);\n    case PanelActionTypeKeys.DELETE_PANEL:\n      return deleteEmbeddable(embeddables, action.payload);\n    case EmbeddableActionTypeKeys.REQUEST_RELOAD:\n      return setReloadRequestTime(embeddables, new Date().getTime());\n    default:\n      return embeddables;\n  }\n};\n"]}]}