{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/visualize/components/visualization_chart.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/visualize/components/visualization_chart.tsx","mtime":1567631711781},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport * as Rx from 'rxjs';\nimport { debounceTime, filter, share, switchMap, tap } from 'rxjs/operators';\nimport { dispatchRenderComplete, dispatchRenderStart } from '../../render_complete';\nimport { ResizeChecker } from '../../resize_checker';\nimport { getUpdateStatus } from '../../vis/update_status';\nvar VisualizationChart = /** @class */ (function (_super) {\n    tslib_1.__extends(VisualizationChart, _super);\n    function VisualizationChart(props) {\n        var _this = _super.call(this, props) || this;\n        _this.chartDiv = React.createRef();\n        _this.containerDiv = React.createRef();\n        _this.renderSubject = new Rx.Subject();\n        var render$ = _this.renderSubject.asObservable().pipe(share());\n        var success$ = render$.pipe(tap(function () {\n            if (_this.chartDiv.current) {\n                dispatchRenderStart(_this.chartDiv.current);\n            }\n        }), filter(function (_a) {\n            var vis = _a.vis, visData = _a.visData, container = _a.container;\n            return vis && container && (!vis.type.requiresSearch || visData);\n        }), debounceTime(100), switchMap(function (_a) {\n            var vis = _a.vis, visData = _a.visData, container = _a.container;\n            return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var status;\n                return tslib_1.__generator(this, function (_b) {\n                    if (!this.visualization) {\n                        // This should never happen, since we only should trigger another rendering\n                        // after this component has mounted and thus the visualization implementation\n                        // has been initialized\n                        throw new Error('Visualization implementation was not initialized on first render.');\n                    }\n                    vis.size = [container.clientWidth, container.clientHeight];\n                    status = getUpdateStatus(vis.type.requiresUpdateStatus, this, this.props);\n                    return [2 /*return*/, this.visualization.render(visData, status)];\n                });\n            });\n        }));\n        var requestError$ = render$.pipe(filter(function (_a) {\n            var vis = _a.vis;\n            return vis.requestError;\n        }));\n        _this.renderSubscription = Rx.merge(success$, requestError$).subscribe(function () {\n            if (_this.chartDiv.current !== null) {\n                dispatchRenderComplete(_this.chartDiv.current);\n            }\n        });\n        return _this;\n    }\n    VisualizationChart.prototype.render = function () {\n        return (React.createElement(\"div\", { className: \"visChart__container\", tabIndex: 0, ref: this.containerDiv },\n            React.createElement(\"p\", { className: \"euiScreenReaderOnly\" },\n                this.props.vis.type.title,\n                \" visualization, not yet accessible\"),\n            React.createElement(\"div\", { \"aria-hidden\": !this.props.vis.type.isAccessible, className: \"visChart\", ref: this.chartDiv })));\n    };\n    VisualizationChart.prototype.componentDidMount = function () {\n        var _this = this;\n        if (!this.chartDiv.current || !this.containerDiv.current) {\n            throw new Error('chartDiv and currentDiv reference should always be present.');\n        }\n        var _a = this.props, vis = _a.vis, onInit = _a.onInit;\n        var Visualization = vis.type.visualization;\n        this.visualization = new Visualization(this.chartDiv.current, vis);\n        if (onInit) {\n            // In case the visualization implementation has an isLoaded function, we\n            // call that and wait for the result to resolve (in case it was a promise).\n            var visLoaded = this.visualization.isLoaded && this.visualization.isLoaded();\n            Promise.resolve(visLoaded).then(onInit);\n        }\n        // We know that containerDiv.current will never be null, since we will always\n        // have rendered and the div is always rendered into the tree (i.e. not\n        // inside any condition).\n        this.resizeChecker = new ResizeChecker(this.containerDiv.current);\n        this.resizeChecker.on('resize', function () { return _this.startRenderVisualization(); });\n        this.startRenderVisualization();\n    };\n    VisualizationChart.prototype.componentDidUpdate = function () {\n        this.startRenderVisualization();\n    };\n    VisualizationChart.prototype.componentWillUnmount = function () {\n        if (this.renderSubscription) {\n            this.renderSubscription.unsubscribe();\n        }\n        if (this.resizeChecker) {\n            this.resizeChecker.destroy();\n        }\n        if (this.visualization) {\n            this.visualization.destroy();\n        }\n    };\n    VisualizationChart.prototype.startRenderVisualization = function () {\n        if (this.containerDiv.current && this.chartDiv.current) {\n            this.renderSubject.next({\n                vis: this.props.vis,\n                visData: this.props.visData,\n                container: this.containerDiv.current,\n            });\n        }\n    };\n    return VisualizationChart;\n}(React.Component));\nexport { VisualizationChart };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/visualize/components/visualization_chart.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/visualize/components/visualization_chart.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport * as Rx from 'rxjs';\nimport { debounceTime, filter, share, switchMap, tap } from 'rxjs/operators';\n\nimport { PersistedState } from '../../persisted_state';\nimport { dispatchRenderComplete, dispatchRenderStart } from '../../render_complete';\nimport { ResizeChecker } from '../../resize_checker';\nimport { Vis, VisualizationController } from '../../vis';\nimport { getUpdateStatus } from '../../vis/update_status';\n\ninterface VisualizationChartProps {\n  onInit?: () => void;\n  uiState: PersistedState;\n  vis: Vis;\n  visData: any;\n}\n\nclass VisualizationChart extends React.Component<VisualizationChartProps> {\n  private resizeChecker?: ResizeChecker;\n  private visualization?: VisualizationController;\n  private chartDiv = React.createRef<HTMLDivElement>();\n  private containerDiv = React.createRef<HTMLDivElement>();\n  private renderSubject: Rx.Subject<{\n    vis: Vis;\n    visData: any;\n    container: HTMLElement;\n  }>;\n  private renderSubscription: Rx.Subscription;\n\n  constructor(props: VisualizationChartProps) {\n    super(props);\n\n    this.renderSubject = new Rx.Subject();\n    const render$ = this.renderSubject.asObservable().pipe(share());\n\n    const success$ = render$.pipe(\n      tap(() => {\n        if (this.chartDiv.current) {\n          dispatchRenderStart(this.chartDiv.current);\n        }\n      }),\n      filter(\n        ({ vis, visData, container }) => vis && container && (!vis.type.requiresSearch || visData)\n      ),\n      debounceTime(100),\n      switchMap(async ({ vis, visData, container }) => {\n        if (!this.visualization) {\n          // This should never happen, since we only should trigger another rendering\n          // after this component has mounted and thus the visualization implementation\n          // has been initialized\n          throw new Error('Visualization implementation was not initialized on first render.');\n        }\n\n        vis.size = [container.clientWidth, container.clientHeight];\n        const status = getUpdateStatus(vis.type.requiresUpdateStatus, this, this.props);\n        return this.visualization.render(visData, status);\n      })\n    );\n\n    const requestError$ = render$.pipe(filter(({ vis }) => vis.requestError));\n\n    this.renderSubscription = Rx.merge(success$, requestError$).subscribe(() => {\n      if (this.chartDiv.current !== null) {\n        dispatchRenderComplete(this.chartDiv.current);\n      }\n    });\n  }\n\n  public render() {\n    return (\n      <div className=\"visChart__container\" tabIndex={0} ref={this.containerDiv}>\n        <p className=\"euiScreenReaderOnly\">\n          {this.props.vis.type.title} visualization, not yet accessible\n        </p>\n        <div\n          aria-hidden={!this.props.vis.type.isAccessible}\n          className=\"visChart\"\n          ref={this.chartDiv}\n        />\n      </div>\n    );\n  }\n\n  public componentDidMount() {\n    if (!this.chartDiv.current || !this.containerDiv.current) {\n      throw new Error('chartDiv and currentDiv reference should always be present.');\n    }\n\n    const { vis, onInit } = this.props;\n    const Visualization = vis.type.visualization;\n\n    this.visualization = new Visualization(this.chartDiv.current, vis);\n\n    if (onInit) {\n      // In case the visualization implementation has an isLoaded function, we\n      // call that and wait for the result to resolve (in case it was a promise).\n      const visLoaded = this.visualization.isLoaded && this.visualization.isLoaded();\n      Promise.resolve(visLoaded).then(onInit);\n    }\n\n    // We know that containerDiv.current will never be null, since we will always\n    // have rendered and the div is always rendered into the tree (i.e. not\n    // inside any condition).\n    this.resizeChecker = new ResizeChecker(this.containerDiv.current);\n    this.resizeChecker.on('resize', () => this.startRenderVisualization());\n\n    this.startRenderVisualization();\n  }\n\n  public componentDidUpdate() {\n    this.startRenderVisualization();\n  }\n\n  public componentWillUnmount() {\n    if (this.renderSubscription) {\n      this.renderSubscription.unsubscribe();\n    }\n    if (this.resizeChecker) {\n      this.resizeChecker.destroy();\n    }\n    if (this.visualization) {\n      this.visualization.destroy();\n    }\n  }\n\n  private startRenderVisualization(): void {\n    if (this.containerDiv.current && this.chartDiv.current) {\n      this.renderSubject.next({\n        vis: this.props.vis,\n        visData: this.props.visData,\n        container: this.containerDiv.current,\n      });\n    }\n  }\n}\n\nexport { VisualizationChart };\n"]}]}