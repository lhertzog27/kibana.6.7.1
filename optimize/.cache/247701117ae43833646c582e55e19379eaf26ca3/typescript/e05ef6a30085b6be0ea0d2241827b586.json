{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/share/components/share_context_menu.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/share/components/share_context_menu.tsx","mtime":1567631711753},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React, { Component } from 'react';\nimport './share_panel_content.less';\nimport { EuiContextMenu } from '@elastic/eui';\nimport { injectI18n } from '@kbn/i18n/react';\nimport { UrlPanelContent } from './url_panel_content';\nvar ShareContextMenuUI = /** @class */ (function (_super) {\n    tslib_1.__extends(ShareContextMenuUI, _super);\n    function ShareContextMenuUI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.getPanels = function () {\n            var panels = [];\n            var menuItems = [];\n            var intl = _this.props.intl;\n            var permalinkPanel = {\n                id: panels.length + 1,\n                title: intl.formatMessage({\n                    id: 'common.ui.share.contextMenu.permalinkPanelTitle',\n                    defaultMessage: 'Permalink',\n                }),\n                content: (React.createElement(UrlPanelContent, { objectId: _this.props.objectId, objectType: _this.props.objectType, getUnhashableStates: _this.props.getUnhashableStates })),\n            };\n            menuItems.push({\n                name: intl.formatMessage({\n                    id: 'common.ui.share.contextMenu.permalinksLabel',\n                    defaultMessage: 'Permalinks',\n                }),\n                icon: 'link',\n                panel: permalinkPanel.id,\n                sortOrder: 0,\n            });\n            panels.push(permalinkPanel);\n            if (_this.props.allowEmbed) {\n                var embedPanel = {\n                    id: panels.length + 1,\n                    title: intl.formatMessage({\n                        id: 'common.ui.share.contextMenu.embedCodePanelTitle',\n                        defaultMessage: 'Embed Code',\n                    }),\n                    content: (React.createElement(UrlPanelContent, { isEmbedded: true, objectId: _this.props.objectId, objectType: _this.props.objectType, getUnhashableStates: _this.props.getUnhashableStates })),\n                };\n                panels.push(embedPanel);\n                menuItems.push({\n                    name: intl.formatMessage({\n                        id: 'common.ui.share.contextMenu.embedCodeLabel',\n                        defaultMessage: 'Embed code',\n                    }),\n                    icon: 'console',\n                    panel: embedPanel.id,\n                    sortOrder: 0,\n                });\n            }\n            if (_this.props.shareContextMenuExtensions) {\n                var _a = _this.props, objectType_1 = _a.objectType, objectId_1 = _a.objectId, getUnhashableStates_1 = _a.getUnhashableStates, sharingData_1 = _a.sharingData, isDirty_1 = _a.isDirty, onClose_1 = _a.onClose;\n                _this.props.shareContextMenuExtensions.forEach(function (provider) {\n                    provider\n                        .getShareActions({\n                        objectType: objectType_1,\n                        objectId: objectId_1,\n                        getUnhashableStates: getUnhashableStates_1,\n                        sharingData: sharingData_1,\n                        isDirty: isDirty_1,\n                        onClose: onClose_1,\n                    })\n                        .forEach(function (_a) {\n                        var shareMenuItem = _a.shareMenuItem, panel = _a.panel;\n                        var panelId = panels.length + 1;\n                        panels.push(tslib_1.__assign({}, panel, { id: panelId }));\n                        menuItems.push(tslib_1.__assign({}, shareMenuItem, { panel: panelId }));\n                    });\n                });\n            }\n            if (menuItems.length > 1) {\n                var topLevelMenuPanel = {\n                    id: panels.length + 1,\n                    title: intl.formatMessage({\n                        id: 'common.ui.share.contextMenuTitle',\n                        defaultMessage: 'Share this {objectType}',\n                    }, {\n                        objectType: _this.props.objectType,\n                    }),\n                    items: menuItems\n                        // Sorts ascending on sort order first and then ascending on name\n                        .sort(function (a, b) {\n                        var aSortOrder = a.sortOrder || 0;\n                        var bSortOrder = b.sortOrder || 0;\n                        if (aSortOrder > bSortOrder) {\n                            return 1;\n                        }\n                        if (aSortOrder < bSortOrder) {\n                            return -1;\n                        }\n                        if (a.name.toLowerCase().localeCompare(b.name.toLowerCase()) > 0) {\n                            return 1;\n                        }\n                        return -1;\n                    })\n                        .map(function (menuItem) {\n                        menuItem['data-test-subj'] = \"sharePanel-\" + menuItem.name.replace(' ', '');\n                        delete menuItem.sortOrder;\n                        return menuItem;\n                    }),\n                };\n                panels.push(topLevelMenuPanel);\n            }\n            var lastPanelIndex = panels.length - 1;\n            var initialPanelId = panels[lastPanelIndex].id;\n            return { panels: panels, initialPanelId: initialPanelId };\n        };\n        return _this;\n    }\n    ShareContextMenuUI.prototype.render = function () {\n        var _a = this.getPanels(), panels = _a.panels, initialPanelId = _a.initialPanelId;\n        return (React.createElement(EuiContextMenu, { initialPanelId: initialPanelId, panels: panels, \"data-test-subj\": \"shareContextMenu\" }));\n    };\n    return ShareContextMenuUI;\n}(Component));\nexport var ShareContextMenu = injectI18n(ShareContextMenuUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/share/components/share_context_menu.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/share/components/share_context_menu.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport './share_panel_content.less';\n\nimport { EuiContextMenuPanelDescriptor } from '@elastic/eui';\nimport { EuiContextMenu } from '@elastic/eui';\n\nimport { InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport { ShareAction, ShareActionProvider, ShareContextMenuPanelItem } from 'ui/share/share_action';\nimport { UrlPanelContent } from './url_panel_content';\n\ninterface Props {\n  allowEmbed: boolean;\n  objectId?: string;\n  objectType: string;\n  getUnhashableStates: () => object[];\n  shareContextMenuExtensions?: ShareActionProvider[];\n  sharingData: any;\n  isDirty: boolean;\n  onClose: () => void;\n  intl: InjectedIntl;\n}\n\nclass ShareContextMenuUI extends Component<Props> {\n  public render() {\n    const { panels, initialPanelId } = this.getPanels();\n    return (\n      <EuiContextMenu\n        initialPanelId={initialPanelId}\n        panels={panels}\n        data-test-subj=\"shareContextMenu\"\n      />\n    );\n  }\n\n  private getPanels = () => {\n    const panels: EuiContextMenuPanelDescriptor[] = [];\n    const menuItems: ShareContextMenuPanelItem[] = [];\n    const { intl } = this.props;\n\n    const permalinkPanel = {\n      id: panels.length + 1,\n      title: intl.formatMessage({\n        id: 'common.ui.share.contextMenu.permalinkPanelTitle',\n        defaultMessage: 'Permalink',\n      }),\n      content: (\n        <UrlPanelContent\n          objectId={this.props.objectId}\n          objectType={this.props.objectType}\n          getUnhashableStates={this.props.getUnhashableStates}\n        />\n      ),\n    };\n    menuItems.push({\n      name: intl.formatMessage({\n        id: 'common.ui.share.contextMenu.permalinksLabel',\n        defaultMessage: 'Permalinks',\n      }),\n      icon: 'link',\n      panel: permalinkPanel.id,\n      sortOrder: 0,\n    });\n    panels.push(permalinkPanel);\n\n    if (this.props.allowEmbed) {\n      const embedPanel = {\n        id: panels.length + 1,\n        title: intl.formatMessage({\n          id: 'common.ui.share.contextMenu.embedCodePanelTitle',\n          defaultMessage: 'Embed Code',\n        }),\n        content: (\n          <UrlPanelContent\n            isEmbedded\n            objectId={this.props.objectId}\n            objectType={this.props.objectType}\n            getUnhashableStates={this.props.getUnhashableStates}\n          />\n        ),\n      };\n      panels.push(embedPanel);\n      menuItems.push({\n        name: intl.formatMessage({\n          id: 'common.ui.share.contextMenu.embedCodeLabel',\n          defaultMessage: 'Embed code',\n        }),\n        icon: 'console',\n        panel: embedPanel.id,\n        sortOrder: 0,\n      });\n    }\n\n    if (this.props.shareContextMenuExtensions) {\n      const {\n        objectType,\n        objectId,\n        getUnhashableStates,\n        sharingData,\n        isDirty,\n        onClose,\n      } = this.props;\n      this.props.shareContextMenuExtensions.forEach((provider: ShareActionProvider) => {\n        provider\n          .getShareActions({\n            objectType,\n            objectId,\n            getUnhashableStates,\n            sharingData,\n            isDirty,\n            onClose,\n          })\n          .forEach(({ shareMenuItem, panel }: ShareAction) => {\n            const panelId = panels.length + 1;\n            panels.push({\n              ...panel,\n              id: panelId,\n            });\n            menuItems.push({\n              ...shareMenuItem,\n              panel: panelId,\n            });\n          });\n      });\n    }\n\n    if (menuItems.length > 1) {\n      const topLevelMenuPanel = {\n        id: panels.length + 1,\n        title: intl.formatMessage(\n          {\n            id: 'common.ui.share.contextMenuTitle',\n            defaultMessage: 'Share this {objectType}',\n          },\n          {\n            objectType: this.props.objectType,\n          }\n        ),\n        items: menuItems\n          // Sorts ascending on sort order first and then ascending on name\n          .sort((a, b) => {\n            const aSortOrder = a.sortOrder || 0;\n            const bSortOrder = b.sortOrder || 0;\n            if (aSortOrder > bSortOrder) {\n              return 1;\n            }\n            if (aSortOrder < bSortOrder) {\n              return -1;\n            }\n            if (a.name.toLowerCase().localeCompare(b.name.toLowerCase()) > 0) {\n              return 1;\n            }\n            return -1;\n          })\n          .map(menuItem => {\n            menuItem['data-test-subj'] = `sharePanel-${menuItem.name.replace(' ', '')}`;\n            delete menuItem.sortOrder;\n            return menuItem;\n          }),\n      };\n      panels.push(topLevelMenuPanel);\n    }\n\n    const lastPanelIndex = panels.length - 1;\n    const initialPanelId = panels[lastPanelIndex].id;\n    return { panels, initialPanelId };\n  };\n}\n\nexport const ShareContextMenu = injectI18n(ShareContextMenuUI);\n"]}]}