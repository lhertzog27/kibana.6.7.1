{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/url/prepend_path.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/url/prepend_path.ts","mtime":1567631711763},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isString } from 'lodash';\nimport { format, parse } from 'url';\n/**\n *\n * @param {string} relativePath - a relative path that must start with a \"/\".\n * @param {string} newPath - the new path to prefix. ex: 'xyz'\n * @return {string} the url with the basePath prepended. ex. '/xyz/app/kibana#/management'. If\n * the relative path isn't in the right format (e.g. doesn't start with a \"/\") the relativePath is returned\n * unchanged.\n */\nexport function prependPath(relativePath, newPath) {\n    if (newPath === void 0) { newPath = ''; }\n    if (!relativePath || !isString(relativePath)) {\n        return relativePath;\n    }\n    var parsed = parse(relativePath, true, true);\n    if (!parsed.host && parsed.pathname) {\n        if (parsed.pathname[0] === '/') {\n            parsed.pathname = newPath + parsed.pathname;\n        }\n    }\n    return format({\n        protocol: parsed.protocol,\n        host: parsed.host,\n        pathname: parsed.pathname,\n        query: parsed.query,\n        hash: parsed.hash,\n    });\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/url/prepend_path.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/url/prepend_path.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAClC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,KAAK,CAAC;AAEpC;;;;;;;GAOG;AACH,MAAM,UAAU,WAAW,CAAC,YAAoB,EAAE,OAAY;IAAZ,wBAAA,EAAA,YAAY;IAC5D,IAAI,CAAC,YAAY,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;QAC5C,OAAO,YAAY,CAAC;KACrB;IAED,IAAM,MAAM,GAAG,KAAK,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,QAAQ,EAAE;QACnC,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAC9B,MAAM,CAAC,QAAQ,GAAG,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;SAC7C;KACF;IAED,OAAO,MAAM,CAAC;QACZ,QAAQ,EAAE,MAAM,CAAC,QAAQ;QACzB,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,QAAQ,EAAE,MAAM,CAAC,QAAQ;QACzB,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,IAAI,EAAE,MAAM,CAAC,IAAI;KAClB,CAAC,CAAC;AACL,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { isString } from 'lodash';\nimport { format, parse } from 'url';\n\n/**\n *\n * @param {string} relativePath - a relative path that must start with a \"/\".\n * @param {string} newPath - the new path to prefix. ex: 'xyz'\n * @return {string} the url with the basePath prepended. ex. '/xyz/app/kibana#/management'. If\n * the relative path isn't in the right format (e.g. doesn't start with a \"/\") the relativePath is returned\n * unchanged.\n */\nexport function prependPath(relativePath: string, newPath = '') {\n  if (!relativePath || !isString(relativePath)) {\n    return relativePath;\n  }\n\n  const parsed = parse(relativePath, true, true);\n  if (!parsed.host && parsed.pathname) {\n    if (parsed.pathname[0] === '/') {\n      parsed.pathname = newPath + parsed.pathname;\n    }\n  }\n\n  return format({\n    protocol: parsed.protocol,\n    host: parsed.host,\n    pathname: parsed.pathname,\n    query: parsed.query,\n    hash: parsed.hash,\n  });\n}\n"]}]}