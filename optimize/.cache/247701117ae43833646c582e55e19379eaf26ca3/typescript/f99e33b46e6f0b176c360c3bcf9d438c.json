{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/parse_query/lib/from_user.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/parse_query/lib/from_user.ts","mtime":1567631711747},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport _ from 'lodash';\n/**\n * Take userInput from the user and make it into a query object\n * @returns {object}\n * @param userInput\n */\nexport function fromUser(userInput) {\n    var matchAll = '';\n    if (_.isObject(userInput)) {\n        // If we get an empty object, treat it as a *\n        if (!Object.keys(userInput).length) {\n            return matchAll;\n        }\n        return userInput;\n    }\n    userInput = userInput || '';\n    if (typeof userInput === 'string') {\n        userInput = userInput.trim();\n        if (userInput.length === 0) {\n            return matchAll;\n        }\n        if (userInput[0] === '{') {\n            try {\n                return JSON.parse(userInput);\n            }\n            catch (e) {\n                return userInput;\n            }\n        }\n        else {\n            return userInput;\n        }\n    }\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/parse_query/lib/from_user.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/parse_query/lib/from_user.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,CAAC,MAAM,QAAQ,CAAC;AAEvB;;;;GAIG;AAEH,MAAM,UAAU,QAAQ,CAAC,SAA0B;IACjD,IAAM,QAAQ,GAAG,EAAE,CAAC;IAEpB,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;QACzB,6CAA6C;QAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE;YAClC,OAAO,QAAQ,CAAC;SACjB;QACD,OAAO,SAAS,CAAC;KAClB;IAED,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC;IAC5B,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;QACjC,SAAS,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1B,OAAO,QAAQ,CAAC;SACjB;QAED,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YACxB,IAAI;gBACF,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;aAC9B;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,SAAS,CAAC;aAClB;SACF;aAAM;YACL,OAAO,SAAS,CAAC;SAClB;KACF;AACH,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport _ from 'lodash';\n\n/**\n * Take userInput from the user and make it into a query object\n * @returns {object}\n * @param userInput\n */\n\nexport function fromUser(userInput: object | string) {\n  const matchAll = '';\n\n  if (_.isObject(userInput)) {\n    // If we get an empty object, treat it as a *\n    if (!Object.keys(userInput).length) {\n      return matchAll;\n    }\n    return userInput;\n  }\n\n  userInput = userInput || '';\n  if (typeof userInput === 'string') {\n    userInput = userInput.trim();\n    if (userInput.length === 0) {\n      return matchAll;\n    }\n\n    if (userInput[0] === '{') {\n      try {\n        return JSON.parse(userInput);\n      } catch (e) {\n        return userInput;\n      }\n    } else {\n      return userInput;\n    }\n  }\n}\n"]}]}