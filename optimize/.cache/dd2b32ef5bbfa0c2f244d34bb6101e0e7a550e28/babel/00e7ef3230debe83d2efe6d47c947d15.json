{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/alerts/formatted_alert.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/alerts/formatted_alert.js","mtime":1567631712081},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FormattedAlert = FormattedAlert;\n\nvar _momentTimezone = require('moment-timezone');\n\nvar _momentTimezone2 = _interopRequireDefault(_momentTimezone);\n\nrequire('moment-duration-format');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _format_timestamp_to_duration = require('../../../common/format_timestamp_to_duration');\n\nvar _constants = require('../../../common/constants');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction FormattedAlert(_ref) {\n  var prefix = _ref.prefix,\n      suffix = _ref.suffix,\n      message = _ref.message,\n      metadata = _ref.metadata,\n      changeUrl = _ref.changeUrl;\n\n  var formattedAlert = function () {\n    if (metadata && metadata.link) {\n      if (metadata.link.startsWith('https')) {\n        return _react2.default.createElement(\n          _eui.EuiLink,\n          {\n            href: metadata.link,\n            target: '_blank',\n            'data-test-subj': 'alertAction'\n          },\n          message\n        );\n      }\n\n      var goToLink = function goToLink() {\n        return changeUrl('/' + metadata.link);\n      };\n\n      return _react2.default.createElement(\n        _eui.EuiLink,\n        {\n          onClick: goToLink,\n          'data-test-subj': 'alertAction'\n        },\n        message\n      );\n    }\n\n    return message;\n  }();\n\n  if (metadata && metadata.time) {\n    // scan message prefix and replace relative times\n    // \\w: Matches any alphanumeric character from the basic Latin alphabet, including the underscore. Equivalent to [A-Za-z0-9_].\n    prefix = prefix.replace(/{{#relativeTime}}metadata\\.([\\w\\.]+){{\\/relativeTime}}/, function (_match, field) {\n      return (0, _format_timestamp_to_duration.formatTimestampToDuration)(metadata[field], _constants.CALCULATE_DURATION_UNTIL);\n    });\n    prefix = prefix.replace(/{{#absoluteTime}}metadata\\.([\\w\\.]+){{\\/absoluteTime}}/, function (_match, field) {\n      return _momentTimezone2.default.tz(metadata[field], _momentTimezone2.default.tz.guess()).format('LLL z');\n    });\n  }\n\n  // suffix and prefix don't contain spaces\n  var formattedPrefix = prefix ? prefix + ' ' : null;\n  var formattedSuffix = suffix ? ' ' + suffix : null;\n  return _react2.default.createElement(\n    'span',\n    { 'data-test-subj': 'alertText' },\n    formattedPrefix,\n    formattedAlert,\n    formattedSuffix\n  );\n}",null]}