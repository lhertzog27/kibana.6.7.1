{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/sections/components/job_action_menu/job_action_menu.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/sections/components/job_action_menu/job_action_menu.js","mtime":1567631712287},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobActionMenu = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nvar _confirm_delete_modal = require('./confirm_delete_modal');\n\nvar _services = require('../../../services');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar JobActionMenuUi = function (_Component) {\n  _inherits(JobActionMenuUi, _Component);\n\n  function JobActionMenuUi(props) {\n    _classCallCheck(this, JobActionMenuUi);\n\n    var _this = _possibleConstructorReturn(this, (JobActionMenuUi.__proto__ || Object.getPrototypeOf(JobActionMenuUi)).call(this, props));\n\n    _this.onButtonClick = function () {\n      _this.setState(function (prevState) {\n        return {\n          isPopoverOpen: !prevState.isPopoverOpen\n        };\n      });\n    };\n\n    _this.closePopover = function () {\n      _this.setState({\n        isPopoverOpen: false\n      });\n    };\n\n    _this.closeDeleteConfirmationModal = function () {\n      _this.setState({ showDeleteConfirmation: false });\n    };\n\n    _this.openDeleteConfirmationModal = function () {\n      _this.setState({ showDeleteConfirmation: true });\n    };\n\n    _this.confirmDeleteModal = function () {\n      var showDeleteConfirmation = _this.state.showDeleteConfirmation;\n\n\n      if (!showDeleteConfirmation) {\n        return null;\n      }\n\n      var _this$props = _this.props,\n          deleteJobs = _this$props.deleteJobs,\n          jobs = _this$props.jobs;\n\n\n      var onConfirmDelete = function onConfirmDelete() {\n        _this.closePopover();\n        deleteJobs();\n      };\n\n      var isSingleSelection = _this.isSingleSelection();\n\n      return _react2.default.createElement(_confirm_delete_modal.ConfirmDeleteModal, {\n        isSingleSelection: isSingleSelection,\n        jobs: jobs,\n        onConfirm: onConfirmDelete,\n        onCancel: _this.closeDeleteConfirmationModal\n      });\n    };\n\n    _this.isSingleSelection = function () {\n      return _this.props.jobs.length === 1;\n    };\n\n    _this.state = {\n      isPopoverOpen: false,\n      showDeleteConfirmation: false\n    };\n    return _this;\n  }\n\n  _createClass(JobActionMenuUi, [{\n    key: 'panels',\n    value: function panels() {\n      var _this2 = this;\n\n      var _props = this.props,\n          startJobs = _props.startJobs,\n          stopJobs = _props.stopJobs,\n          intl = _props.intl;\n\n\n      var isSingleSelection = this.isSingleSelection() ? 1 : 0;\n\n      var items = [];\n\n      if (this.canStartJobs()) {\n        items.push({\n          name: intl.formatMessage({\n            id: 'xpack.rollupJobs.jobActionMenu.startJobLabel',\n            defaultMessage: 'Start {isSingleSelection, plural, one {job} other {jobs}}'\n          }, {\n            isSingleSelection: isSingleSelection\n          }),\n          icon: _react2.default.createElement(_eui.EuiIcon, { type: 'play' }),\n          onClick: function onClick() {\n            _this2.closePopover();\n            startJobs();\n          }\n        });\n      }\n\n      if (this.canStopJobs()) {\n        items.push({\n          name: intl.formatMessage({\n            id: 'xpack.rollupJobs.jobActionMenu.stopJobLabel',\n            defaultMessage: 'Stop {isSingleSelection, plural, one {job} other {jobs}}'\n          }, {\n            isSingleSelection: isSingleSelection\n          }),\n          icon: _react2.default.createElement(_eui.EuiIcon, { type: 'stop' }),\n          onClick: function onClick() {\n            _this2.closePopover();\n            stopJobs();\n          }\n        });\n      }\n\n      if (this.canDeleteJobs()) {\n        items.push({\n          name: intl.formatMessage({\n            id: 'xpack.rollupJobs.jobActionMenu.deleteJobLabel',\n            defaultMessage: 'Delete {isSingleSelection, plural, one {job} other {jobs}}'\n          }, {\n            isSingleSelection: isSingleSelection\n          }),\n          icon: _react2.default.createElement(_eui.EuiIcon, { type: 'trash' }),\n          onClick: function onClick() {\n            _this2.closePopover();\n            _this2.openDeleteConfirmationModal();\n          }\n        });\n      }\n\n      var panelTree = {\n        id: 0,\n        title: intl.formatMessage({\n          id: 'xpack.rollupJobs.jobActionMenu.panelTitle',\n          defaultMessage: 'Job options'\n        }),\n        items: items\n      };\n\n      return (0, _services.flattenPanelTree)(panelTree);\n    }\n  }, {\n    key: 'canStartJobs',\n    value: function canStartJobs() {\n      var jobs = this.props.jobs;\n\n      return jobs.some(function (job) {\n        return job.status === 'stopped';\n      });\n    }\n  }, {\n    key: 'canStopJobs',\n    value: function canStopJobs() {\n      var jobs = this.props.jobs;\n\n      return jobs.some(function (job) {\n        return job.status === 'started';\n      });\n    }\n  }, {\n    key: 'canDeleteJobs',\n    value: function canDeleteJobs() {\n      var jobs = this.props.jobs;\n\n      var areAllJobsStopped = jobs.findIndex(function (job) {\n        return job.status === 'started';\n      }) === -1;\n      return areAllJobsStopped;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          intl = _props2.intl,\n          isUpdating = _props2.isUpdating;\n\n\n      if (isUpdating) {\n        return _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { justifyContent: 'flexStart', gutterSize: 'm' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(_eui.EuiLoadingSpinner, { size: 'l' })\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiText,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.rollupJobs.jobActionMenu.updatingText',\n                defaultMessage: 'Updating'\n              })\n            )\n          )\n        );\n      }\n\n      var jobCount = this.props.jobs.length;\n\n      var _props3 = this.props,\n          iconSide = _props3.iconSide,\n          anchorPosition = _props3.anchorPosition,\n          iconType = _props3.iconType,\n          _props3$label = _props3.label,\n          label = _props3$label === undefined ? intl.formatMessage({\n        id: 'xpack.rollupJobs.jobActionMenu.buttonLabel',\n        defaultMessage: 'Manage {jobCount, plural, one {job} other {jobs}}'\n      }, { jobCount: jobCount }) : _props3$label;\n\n\n      var panels = this.panels();\n\n      var actionsAriaLabel = intl.formatMessage({\n        id: 'xpack.rollupJobs.jobActionMenu.jobActionMenuButtonAriaLabel',\n        defaultMessage: 'Job options'\n      });\n\n      var button = _react2.default.createElement(\n        _eui.EuiButton,\n        {\n          'data-test-subj': 'jobActionMenuButton',\n          iconSide: iconSide,\n          'aria-label': actionsAriaLabel,\n          onClick: this.onButtonClick,\n          iconType: iconType,\n          fill: true\n        },\n        label\n      );\n\n      return _react2.default.createElement(\n        'div',\n        null,\n        this.confirmDeleteModal(),\n        _react2.default.createElement(\n          _eui.EuiPopover,\n          {\n            button: button,\n            isOpen: this.state.isPopoverOpen,\n            closePopover: this.closePopover,\n            panelPaddingSize: 'none',\n            withTitle: true,\n            anchorPosition: anchorPosition,\n            repositionOnScroll: true\n          },\n          _react2.default.createElement(_eui.EuiContextMenu, { initialPanelId: 0, panels: panels })\n        )\n      );\n    }\n  }]);\n\n  return JobActionMenuUi;\n}(_react.Component);\n\nJobActionMenuUi.propTypes = {\n  startJobs: _propTypes2.default.func.isRequired,\n  stopJobs: _propTypes2.default.func.isRequired,\n  deleteJobs: _propTypes2.default.func.isRequired,\n  isUpdating: _propTypes2.default.bool.isRequired,\n  iconSide: _propTypes2.default.string,\n  anchorPosition: _propTypes2.default.string,\n  label: _propTypes2.default.node,\n  iconType: _propTypes2.default.string,\n  jobs: _propTypes2.default.array\n};\nJobActionMenuUi.defaultProps = {\n  iconSide: 'right',\n  anchorPosition: 'rightUp',\n  iconType: 'arrowDown',\n  jobs: []\n};\nvar JobActionMenu = exports.JobActionMenu = (0, _react3.injectI18n)(JobActionMenuUi);",null]}