{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/metric.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/metric.js","mtime":1567631711898},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.metric = undefined;\n\nvar _fonts = require('../../../common/lib/fonts');\n\nvar metric = exports.metric = function metric() {\n  return {\n    name: 'metric',\n    aliases: [],\n    type: 'render',\n    help: 'A number with a label',\n    context: {\n      types: ['string', 'null']\n    },\n    args: {\n      label: {\n        types: ['string'],\n        aliases: ['_', 'text', 'description'],\n        help: 'Text describing the metric',\n        default: '\"\"'\n      },\n      metricFont: {\n        types: ['style'],\n        help: 'Font settings for the metric. Technically you can stick other styles in here too!',\n        default: '{font size=48 family=\"' + _fonts.openSans.value + '\" color=\"#000000\" align=center lHeight=48}'\n      },\n      labelFont: {\n        types: ['style'],\n        help: 'Font settings for the label. Technically you can stick other styles in here too!',\n        default: '{font size=14 family=\"' + _fonts.openSans.value + '\" color=\"#000000\" align=center}'\n      }\n    },\n    fn: function fn(context, _ref) {\n      var label = _ref.label,\n          metricFont = _ref.metricFont,\n          labelFont = _ref.labelFont;\n\n      return {\n        type: 'render',\n        as: 'metric',\n        value: {\n          metric: context === null ? '?' : context,\n          label: label,\n          metricFont: metricFont,\n          labelFont: labelFont\n        }\n      };\n    }\n  };\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */",null]}