{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/packages/kbn-interpreter/target/common/interpreter/cast.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/packages/kbn-interpreter/target/common/interpreter/cast.js","mtime":1567666389285},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.castProvider = castProvider;\n\nvar _get_type = require('../lib/get_type');\n\nfunction castProvider(types) {\n  return function cast(node, toTypeNames) {\n    // If you don't give us anything to cast to, you'll get your input back\n    if (!toTypeNames || toTypeNames.length === 0) return node;\n\n    // No need to cast if node is already one of the valid types\n    var fromTypeName = (0, _get_type.getType)(node);\n    if (toTypeNames.includes(fromTypeName)) return node;\n\n    var fromTypeDef = types[fromTypeName];\n\n    for (var i = 0; i < toTypeNames.length; i++) {\n      // First check if the current type can cast to this type\n      if (fromTypeDef && fromTypeDef.castsTo(toTypeNames[i])) {\n        return fromTypeDef.to(node, toTypeNames[i], types);\n      }\n\n      // If that isn't possible, check if this type can cast from the current type\n      var toTypeDef = types[toTypeNames[i]];\n      if (toTypeDef && toTypeDef.castsFrom(fromTypeName)) return toTypeDef.from(node, types);\n    }\n\n    throw new Error('Can not cast \\'' + fromTypeName + '\\' to any of \\'' + toTypeNames.join(', ') + '\\'');\n  };\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */",null]}