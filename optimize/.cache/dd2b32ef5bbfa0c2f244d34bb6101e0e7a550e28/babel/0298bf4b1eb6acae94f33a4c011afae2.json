{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/sections/edit_policy/edit_policy.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/sections/edit_policy/edit_policy.js","mtime":1567631711965},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EditPolicy = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _notify = require('ui/notify');\n\nvar _navigation = require('../../services/navigation');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nvar _hot_phase = require('./components/hot_phase');\n\nvar _warm_phase = require('./components/warm_phase');\n\nvar _delete_phase = require('./components/delete_phase');\n\nvar _cold_phase = require('./components/cold_phase');\n\nvar _constants = require('../../store/constants');\n\nvar _find_errors = require('../../services/find_errors');\n\nvar _node_attrs_details = require('./components/node_attrs_details');\n\nvar _policy_json_flyout = require('./components/policy_json_flyout');\n\nvar _form_errors = require('./form_errors');\n\nvar _components = require('../components');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar EditPolicyUi = function (_Component) {\n  _inherits(EditPolicyUi, _Component);\n\n  function EditPolicyUi(props) {\n    var _this2 = this;\n\n    _classCallCheck(this, EditPolicyUi);\n\n    var _this = _possibleConstructorReturn(this, (EditPolicyUi.__proto__ || Object.getPrototypeOf(EditPolicyUi)).call(this, props));\n\n    _this.selectPolicy = function (policyName) {\n      var _this$props = _this.props,\n          setSelectedPolicy = _this$props.setSelectedPolicy,\n          policies = _this$props.policies;\n\n      var selectedPolicy = policies.find(function (policy) {\n        return policy.name === policyName;\n      });\n      if (selectedPolicy) {\n        setSelectedPolicy(selectedPolicy);\n      }\n    };\n\n    _this.backToPolicyList = function () {\n      _this.props.setSelectedPolicy(null);\n      (0, _navigation.goToPolicyList)();\n    };\n\n    _this.submit = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var intl, _this$props2, saveLifecyclePolicy, lifecycle, saveAsNewPolicy, firstError, errorRowId, element, success;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              intl = _this.props.intl;\n\n              _this.setState({ isShowingErrors: true });\n              _this$props2 = _this.props, saveLifecyclePolicy = _this$props2.saveLifecyclePolicy, lifecycle = _this$props2.lifecycle, saveAsNewPolicy = _this$props2.saveAsNewPolicy, firstError = _this$props2.firstError;\n\n              if (!firstError) {\n                _context.next = 10;\n                break;\n              }\n\n              _notify.toastNotifications.addDanger(intl.formatMessage({\n                id: 'xpack.indexLifecycleMgmt.editPolicy.formErrorsMessage',\n                defaultMessage: 'Please fix the  errors on this page.'\n              }));\n              errorRowId = firstError.replace('.', '-') + '-row';\n              element = document.getElementById(errorRowId);\n\n              if (element) {\n                element.scrollIntoView({ block: \"center\", inline: \"nearest\" });\n              }\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.next = 12;\n              return saveLifecyclePolicy(lifecycle, saveAsNewPolicy);\n\n            case 12:\n              success = _context.sent;\n\n              if (success) {\n                _this.backToPolicyList();\n              }\n\n            case 14:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2);\n    }));\n\n    _this.showNodeDetailsFlyout = function (selectedNodeAttrsForDetails) {\n      _this.setState({ isShowingNodeDetailsFlyout: true, selectedNodeAttrsForDetails: selectedNodeAttrsForDetails });\n    };\n\n    _this.showPolicyJsonFlyout = function () {\n      _this.setState({ isShowingPolicyJsonFlyout: true });\n    };\n\n    _this.state = {\n      isShowingErrors: false,\n      isShowingNodeDetailsFlyout: false,\n      selectedNodeAttrsForDetails: undefined,\n      isShowingPolicyJsonFlyout: false\n    };\n    return _this;\n  }\n\n  _createClass(EditPolicyUi, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      window.scrollTo(0, 0);\n      var _props = this.props,\n          isPolicyListLoaded = _props.isPolicyListLoaded,\n          fetchPolicies = _props.fetchPolicies,\n          _props$match = _props.match;\n      _props$match = _props$match === undefined ? { params: {} } : _props$match;\n      var policyName = _props$match.params.policyName;\n\n      if (policyName) {\n        var decodedPolicyName = decodeURIComponent(policyName);\n        if (isPolicyListLoaded) {\n          this.selectPolicy(decodedPolicyName);\n        } else {\n          fetchPolicies(true, function () {\n            _this3.selectPolicy(decodedPolicyName);\n          });\n        }\n      } else {\n        this.props.setSelectedPolicy(null);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          intl = _props2.intl,\n          selectedPolicy = _props2.selectedPolicy,\n          errors = _props2.errors,\n          setSaveAsNewPolicy = _props2.setSaveAsNewPolicy,\n          saveAsNewPolicy = _props2.saveAsNewPolicy,\n          setSelectedPolicyName = _props2.setSelectedPolicyName,\n          isNewPolicy = _props2.isNewPolicy,\n          lifecycle = _props2.lifecycle,\n          originalPolicyName = _props2.originalPolicyName;\n\n      var selectedPolicyName = selectedPolicy.name;\n      var isShowingErrors = this.state.isShowingErrors;\n\n\n      return _react2.default.createElement(\n        _eui.EuiPage,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPageBody,\n          null,\n          _react2.default.createElement(\n            _eui.EuiPageContent,\n            {\n              className: 'ilmEditPolicyPageContent',\n              verticalPosition: 'center',\n              horizontalPosition: 'center'\n            },\n            _react2.default.createElement(\n              _eui.EuiTitle,\n              null,\n              _react2.default.createElement(\n                'h4',\n                null,\n                isNewPolicy ? intl.formatMessage({\n                  id: 'xpack.indexLifecycleMgmt.editPolicy.createPolicyMessage',\n                  defaultMessage: 'Create an index lifecycle policy'\n                }) : intl.formatMessage({\n                  id: 'xpack.indexLifecycleMgmt.editPolicy.editPolicyMessage',\n                  defaultMessage: 'Edit index lifecycle policy {originalPolicyName}'\n                }, { originalPolicyName: originalPolicyName })\n              )\n            ),\n            _react2.default.createElement(\n              'div',\n              { className: 'euiAnimateContentLoad' },\n              _react2.default.createElement(_eui.EuiSpacer, { size: 'xs' }),\n              _react2.default.createElement(\n                _eui.EuiText,\n                { color: 'subdued' },\n                _react2.default.createElement(\n                  'p',\n                  null,\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.indexLifecycleMgmt.editPolicy.lifecyclePolicyDescriptionText',\n                    defaultMessage: 'Use an index policy to automate the four phases of the index lifecycle, from actively writing to the index to deleting it.'\n                  }),\n                  ' ',\n                  _react2.default.createElement(_components.LearnMoreLink, {\n                    docPath: 'index-lifecycle-management.html',\n                    text: _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'xpack.indexLifecycleMgmt.editPolicy.learnAboutIndexLifecycleManagementLinkText',\n                      defaultMessage: 'Learn about the index lifecycle.'\n                    })\n                  })\n                )\n              ),\n              _react2.default.createElement(_eui.EuiSpacer, null),\n              _react2.default.createElement(\n                _react.Fragment,\n                null,\n                isNewPolicy ? null : _react2.default.createElement(\n                  _react.Fragment,\n                  null,\n                  _react2.default.createElement(\n                    _react.Fragment,\n                    null,\n                    _react2.default.createElement(\n                      _eui.EuiText,\n                      null,\n                      _react2.default.createElement(\n                        'p',\n                        null,\n                        _react2.default.createElement(\n                          'strong',\n                          null,\n                          _react2.default.createElement(_react3.FormattedMessage, {\n                            id: 'xpack.indexLifecycleMgmt.editPolicy.editingExistingPolicyMessage',\n                            defaultMessage: 'You are editing an existing policy'\n                          })\n                        ),\n                        '.',\n                        ' ',\n                        _react2.default.createElement(_react3.FormattedMessage, {\n                          id: 'xpack.indexLifecycleMgmt.editPolicy.editingExistingPolicyExplanationMessage',\n                          defaultMessage: 'Any changes you make will affect the indices that are attached to this policy. Alternatively, you can save these changes in a new policy.'\n                        })\n                      )\n                    ),\n                    _react2.default.createElement(_eui.EuiSpacer, null)\n                  ),\n                  _react2.default.createElement(\n                    _eui.EuiFormRow,\n                    null,\n                    _react2.default.createElement(_eui.EuiSwitch, {\n                      'data-test-subj': 'saveAsNewSwitch',\n                      style: { maxWidth: '100%' },\n                      checked: saveAsNewPolicy,\n                      onChange: function () {\n                        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(e) {\n                          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  _context2.next = 2;\n                                  return setSaveAsNewPolicy(e.target.checked);\n\n                                case 2:\n                                case 'end':\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2, _this4);\n                        }));\n\n                        return function (_x) {\n                          return _ref2.apply(this, arguments);\n                        };\n                      }(),\n                      label: _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement(_react3.FormattedMessage, {\n                          id: 'xpack.indexLifecycleMgmt.editPolicy.saveAsNewPolicyMessage',\n                          defaultMessage: 'Save as new policy'\n                        })\n                      )\n                    })\n                  )\n                ),\n                saveAsNewPolicy || isNewPolicy ? _react2.default.createElement(\n                  _eui.EuiDescribedFormGroup,\n                  {\n                    title: _react2.default.createElement(\n                      'div',\n                      null,\n                      _react2.default.createElement(\n                        'span',\n                        { className: 'eui-displayInlineBlock eui-alignMiddle' },\n                        _react2.default.createElement(_react3.FormattedMessage, {\n                          id: 'xpack.indexLifecycleMgmt.editPolicy.nameLabel',\n                          defaultMessage: 'Name'\n                        })\n                      )\n                    ),\n                    titleSize: 's',\n                    fullWidth: true\n                  },\n                  _react2.default.createElement(\n                    _form_errors.ErrableFormRow,\n                    {\n                      id: _constants.STRUCTURE_POLICY_NAME,\n                      label: intl.formatMessage({\n                        id: 'xpack.indexLifecycleMgmt.editPolicy.policyNameLabel',\n                        defaultMessage: 'Policy name'\n                      }),\n                      errorKey: _constants.STRUCTURE_POLICY_NAME,\n                      isShowingErrors: isShowingErrors,\n                      errors: errors,\n                      helpText: _react2.default.createElement(_react3.FormattedMessage, {\n                        id: 'xpack.indexLifecycleMgmt.editPolicy.validPolicyNameMessage',\n                        defaultMessage: 'A policy name cannot start with an underscore and cannot contain a question mark or a space.'\n                      })\n                    },\n                    _react2.default.createElement(_eui.EuiFieldText, {\n                      'data-test-subj': 'policyNameField',\n                      value: selectedPolicyName,\n                      onChange: function () {\n                        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(e) {\n                          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  _context3.next = 2;\n                                  return setSelectedPolicyName(e.target.value);\n\n                                case 2:\n                                case 'end':\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3, _this4);\n                        }));\n\n                        return function (_x2) {\n                          return _ref3.apply(this, arguments);\n                        };\n                      }()\n                    })\n                  )\n                ) : null\n              ),\n              _react2.default.createElement(_eui.EuiSpacer, null),\n              _react2.default.createElement(_hot_phase.HotPhase, {\n                selectedPolicy: selectedPolicy,\n                errors: errors[_constants.PHASE_HOT],\n                isShowingErrors: isShowingErrors && !!(0, _find_errors.findFirstError)(errors[_constants.PHASE_HOT], false)\n              }),\n              _react2.default.createElement(_eui.EuiHorizontalRule, null),\n              _react2.default.createElement(_warm_phase.WarmPhase, {\n                errors: errors[_constants.PHASE_WARM],\n                showNodeDetailsFlyout: this.showNodeDetailsFlyout,\n                isShowingErrors: isShowingErrors && !!(0, _find_errors.findFirstError)(errors[_constants.PHASE_WARM], false)\n              }),\n              _react2.default.createElement(_eui.EuiHorizontalRule, null),\n              _react2.default.createElement(_cold_phase.ColdPhase, {\n                errors: errors[_constants.PHASE_COLD],\n                showNodeDetailsFlyout: this.showNodeDetailsFlyout,\n                isShowingErrors: isShowingErrors && !!(0, _find_errors.findFirstError)(errors[_constants.PHASE_COLD], false)\n              }),\n              _react2.default.createElement(_eui.EuiHorizontalRule, null),\n              _react2.default.createElement(_delete_phase.DeletePhase, {\n                errors: errors[_constants.PHASE_DELETE],\n                isShowingErrors: isShowingErrors && !!(0, _find_errors.findFirstError)(errors[_constants.PHASE_DELETE], false)\n              }),\n              _react2.default.createElement(_eui.EuiHorizontalRule, null),\n              _react2.default.createElement(\n                _eui.EuiFlexGroup,\n                { justifyContent: 'spaceBetween' },\n                _react2.default.createElement(\n                  _eui.EuiFlexItem,\n                  { grow: false },\n                  _react2.default.createElement(\n                    _eui.EuiFlexGroup,\n                    null,\n                    _react2.default.createElement(\n                      _eui.EuiFlexItem,\n                      { grow: false },\n                      _react2.default.createElement(\n                        _eui.EuiButton,\n                        {\n                          'data-test-subj': 'savePolicyButton',\n                          fill: true,\n                          iconType: 'check',\n                          iconSide: 'left',\n                          onClick: this.submit,\n                          color: 'secondary'\n                        },\n                        saveAsNewPolicy ? _react2.default.createElement(_react3.FormattedMessage, {\n                          id: 'xpack.indexLifecycleMgmt.editPolicy.saveAsNewButton',\n                          defaultMessage: 'Save as new policy'\n                        }) : _react2.default.createElement(_react3.FormattedMessage, {\n                          id: 'xpack.indexLifecycleMgmt.editPolicy.saveButton',\n                          defaultMessage: 'Save policy'\n                        })\n                      )\n                    ),\n                    _react2.default.createElement(\n                      _eui.EuiFlexItem,\n                      { grow: false },\n                      _react2.default.createElement(\n                        _eui.EuiButtonEmpty,\n                        { 'data-test-subj': 'cancelTestPolicy', onClick: this.backToPolicyList },\n                        _react2.default.createElement(_react3.FormattedMessage, {\n                          id: 'xpack.indexLifecycleMgmt.editPolicy.cancelButton',\n                          defaultMessage: 'Cancel'\n                        })\n                      )\n                    )\n                  )\n                ),\n                _react2.default.createElement(\n                  _eui.EuiFlexItem,\n                  { grow: false },\n                  _react2.default.createElement(\n                    _eui.EuiButtonEmpty,\n                    { onClick: this.showPolicyJsonFlyout },\n                    _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'xpack.indexLifecycleMgmt.editPolicy.showPolicyJsonButton',\n                      defaultMessage: 'Show JSON'\n                    })\n                  )\n                )\n              ),\n              this.state.isShowingNodeDetailsFlyout ? _react2.default.createElement(_node_attrs_details.NodeAttrsDetails, {\n                selectedNodeAttrs: this.state.selectedNodeAttrsForDetails,\n                close: function close() {\n                  return _this4.setState({ isShowingNodeDetailsFlyout: false });\n                }\n              }) : null,\n              this.state.isShowingPolicyJsonFlyout ? _react2.default.createElement(_policy_json_flyout.PolicyJsonFlyout, {\n                policyName: selectedPolicyName || '',\n                lifecycle: lifecycle,\n                close: function close() {\n                  return _this4.setState({ isShowingPolicyJsonFlyout: false });\n                }\n              }) : null\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return EditPolicyUi;\n}(_react.Component);\n\nEditPolicyUi.propTypes = {\n  selectedPolicy: _propTypes2.default.object.isRequired,\n  errors: _propTypes2.default.object.isRequired\n};\nvar EditPolicy = exports.EditPolicy = (0, _react3.injectI18n)(EditPolicyUi);",null]}