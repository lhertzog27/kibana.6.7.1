{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/enhance/stateful_prop.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/enhance/stateful_prop.js","mtime":1567631711922},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.createStatefulPropHoc = createStatefulPropHoc;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar getDisplayName = function getDisplayName(Comp) {\n  return Comp.displayName || Comp.name || 'UnnamedComponent';\n};\n\nfunction createStatefulPropHoc(fieldname) {\n  var updater = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'updateValue';\n\n  return function (Comp) {\n    var WrappedControlledInput = function (_React$PureComponent) {\n      _inherits(WrappedControlledInput, _React$PureComponent);\n\n      function WrappedControlledInput(props) {\n        _classCallCheck(this, WrappedControlledInput);\n\n        var _this = _possibleConstructorReturn(this, (WrappedControlledInput.__proto__ || Object.getPrototypeOf(WrappedControlledInput)).call(this, props));\n\n        _this.handleChange = function (ev) {\n          if (ev.target) {\n            _this.setState({ value: ev.target.value });\n          } else {\n            _this.setState({ value: ev });\n          }\n        };\n\n        _this.state = {\n          value: props[fieldname]\n        };\n        return _this;\n      }\n\n      _createClass(WrappedControlledInput, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n          this.setState({ value: nextProps[fieldname] });\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var _extends2;\n\n          var passedProps = _extends({}, this.props, (_extends2 = {}, _defineProperty(_extends2, fieldname, this.state.value), _defineProperty(_extends2, updater, this.handleChange), _extends2));\n\n          return _react2.default.createElement(Comp, passedProps);\n        }\n      }]);\n\n      return WrappedControlledInput;\n    }(_react2.default.PureComponent);\n\n    WrappedControlledInput.propTypes = _defineProperty({}, fieldname, _propTypes2.default.any);\n\n    // set the display name of the wrapped component, for easier debugging\n    WrappedControlledInput.displayName = 'statefulProp(' + getDisplayName(Comp) + ')';\n\n    return WrappedControlledInput;\n  };\n}",null]}