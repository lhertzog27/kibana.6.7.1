{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/cluster_status/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/cluster_status/index.js","mtime":1567631712088},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClusterStatus = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _summary_status = require('../../summary_status');\n\nvar _format_number = require('../../../lib/format_number');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction ClusterStatusUi(_ref) {\n  var stats = _ref.stats,\n      intl = _ref.intl;\n  var nodeCount = stats.node_count,\n      avgMemoryUsed = stats.avg_memory_used,\n      avgMemory = stats.avg_memory,\n      eventsInTotal = stats.events_in_total,\n      eventsOutTotal = stats.events_out_total;\n\n\n  var metrics = [{\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.clusterStatus.nodesLabel', defaultMessage: 'Nodes'\n    }),\n    value: nodeCount,\n    'data-test-subj': 'node_count'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.clusterStatus.memoryLabel', defaultMessage: 'Memory'\n    }),\n    value: (0, _format_number.formatMetric)(avgMemoryUsed, 'byte') + ' / ' + (0, _format_number.formatMetric)(avgMemory, 'byte'),\n    'data-test-subj': 'memory_used'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.clusterStatus.eventsReceivedLabel', defaultMessage: 'Events Received'\n    }),\n    value: (0, _format_number.formatMetric)(eventsInTotal, '0.[0]a'),\n    'data-test-subj': 'events_in_total'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.clusterStatus.eventsEmittedLabel', defaultMessage: 'Events Emitted'\n    }),\n    value: (0, _format_number.formatMetric)(eventsOutTotal, '0.[0]a'),\n    'data-test-subj': 'events_out_total'\n  }];\n\n  return _react2.default.createElement(_summary_status.SummaryStatus, {\n    metrics: metrics,\n    'data-test-subj': 'logstashClusterStatus'\n  });\n}\n\nvar ClusterStatus = exports.ClusterStatus = (0, _react3.injectI18n)(ClusterStatusUi);",null]}