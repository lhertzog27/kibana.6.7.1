{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_list/components/watch_table/watch_table.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_list/components/watch_table/watch_table.js","mtime":1567631712350},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _modules = require('ui/modules');\n\nrequire('ui/check_box');\n\nrequire('ui/sortable_column');\n\nvar _watch_table = require('./watch_table.html');\n\nvar _watch_table2 = _interopRequireDefault(_watch_table);\n\nrequire('plugins/watcher/components/watch_state_icon');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*\n                                                                                                                                                           * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                           * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                           * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                           */\n\nvar app = _modules.uiModules.get('xpack/watcher');\n\napp.directive('watchTable', function () {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: _watch_table2.default,\n    scope: {\n      watches: '=',\n      watchesBeingDeleted: '=',\n      sortField: '=',\n      sortReverse: '=',\n      onSortChange: '=',\n      onSelectChange: '='\n    },\n    controllerAs: 'watchTable',\n    bindToController: true,\n    controller: function WatchTableController($scope) {\n      var _this = this;\n\n      _classCallCheck(this, WatchTableController);\n\n      this.onAllSelectedChange = function (itemId, allSelected) {\n        _lodash2.default.forEach(_this.editableItems, function (item) {\n          item.selected = allSelected;\n        });\n        _this.updateSelectedWatches();\n      };\n\n      this.onWatchSelectedChange = function (watchId, selected) {\n        _lodash2.default.find(_this.items, function (item) {\n          return item.watch.id === watchId;\n        }).selected = selected;\n        _this.updateSelectedWatches();\n      };\n\n      this.updateSelectedWatches = function () {\n        var selectedItems = _lodash2.default.filter(_this.items, function (item) {\n          return item.selected;\n        });\n        var selectedWatches = _lodash2.default.map(selectedItems, function (item) {\n          return item.watch;\n        });\n\n        var areAllEditableItemsSelected = selectedWatches.length === _this.editableItems.length;\n        _this.allSelected = areAllEditableItemsSelected && _this.editableItems.length > 0;\n\n        _this.onSelectChange(selectedWatches);\n      };\n\n      this.isEditable = function (item) {\n        return !item.watch.isSystemWatch && !item.isBeingDeleted;\n      };\n\n      this.areAnyEditable = function () {\n        return _this.editableItems.length !== 0;\n      };\n\n      this.allSelected = false;\n\n      $scope.$watch('watchTable.watches', function (watches) {\n        var previousItems = _this.items;\n\n        _this.items = _lodash2.default.map(watches, function (watch) {\n          var matchedItem = _lodash2.default.find(previousItems, function (previousItem) {\n            return previousItem.watch.id === watch.id;\n          });\n          var selected = Boolean(_lodash2.default.get(matchedItem, 'selected'));\n          return { watch: watch, selected: selected };\n        });\n        _this.editableItems = _this.items.filter(function (item) {\n          return _this.isEditable(item);\n        });\n        _this.updateSelectedWatches();\n      });\n\n      $scope.$watch('watchTable.watchesBeingDeleted', function (watches) {\n        _this.items.forEach(function (item) {\n          var matchedItem = _lodash2.default.find(watches, function (watch) {\n            return watch.id === item.watch.id;\n          });\n          item.selected = false;\n          item.isBeingDeleted = Boolean(matchedItem);\n        });\n        _this.editableItems = _this.items.filter(function (item) {\n          return _this.isEditable(item);\n        });\n        _this.updateSelectedWatches();\n      });\n    }\n  };\n});",null]}