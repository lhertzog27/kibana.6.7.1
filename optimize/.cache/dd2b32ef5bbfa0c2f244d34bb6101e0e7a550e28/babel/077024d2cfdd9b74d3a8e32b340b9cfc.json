{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/saved_visualizations/_saved_vis.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/saved_visualizations/_saved_vis.js","mtime":1567631711601},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /*\n                                                                                                                                                                                                                                                                               * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                               * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                               * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                               * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                               * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                               * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                               *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                               * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                               * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                               * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                               * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                               * under the License.\n                                                                                                                                                                                                                                                                               */\n\n/**\n * @name SavedVis\n *\n * @extends SavedObject.\n *\n * NOTE: It's a type of SavedObject, but specific to visualizations.\n */\n\nvar _vis = require('ui/vis');\n\nvar _modules = require('ui/modules');\n\nvar _vis_update_state = require('ui/vis/vis_update_state');\n\nvar _visualize_constants = require('../visualize_constants');\n\nvar _legacy_class = require('ui/utils/legacy_class');\n\nvar _courier = require('ui/courier');\n\n_modules.uiModules.get('app/visualize').factory('SavedVis', function (config, $injector, Promise, savedSearches, Private, i18n) {\n  var Vis = Private(_vis.VisProvider);\n  var SavedObject = Private(_courier.SavedObjectProvider);\n  (0, _legacy_class.createLegacyClass)(SavedVis).inherits(SavedObject);\n  function SavedVis(opts) {\n    var self = this;\n    opts = opts || {};\n    if ((typeof opts === 'undefined' ? 'undefined' : _typeof(opts)) !== 'object') opts = { id: opts };\n\n    SavedVis.Super.call(self, {\n      type: SavedVis.type,\n      mapping: SavedVis.mapping,\n      searchSource: SavedVis.searchSource,\n\n      id: opts.id,\n      indexPattern: opts.indexPattern,\n      defaults: {\n        title: i18n('kbn.visualize.defaultVisualizationTitle', {\n          defaultMessage: 'New Visualization'\n        }),\n        visState: function () {\n          if (!opts.type) return null;\n          var def = {};\n          def.type = opts.type;\n          return def;\n        }(),\n        uiStateJSON: '{}',\n        description: '',\n        savedSearchId: opts.savedSearchId,\n        version: 1\n      },\n\n      afterESResp: this._afterEsResp\n    });\n\n    this.showInRecentlyAccessed = true;\n  }\n\n  SavedVis.type = 'visualization';\n\n  SavedVis.mapping = {\n    title: 'text',\n    visState: 'json',\n    uiStateJSON: 'text',\n    description: 'text',\n    savedSearchId: 'keyword',\n    version: 'integer'\n  };\n\n  // Order these fields to the top, the rest are alphabetical\n  SavedVis.fieldOrder = ['title', 'description'];\n\n  SavedVis.searchSource = true;\n\n  SavedVis.prototype.getFullPath = function () {\n    return '/app/kibana#' + _visualize_constants.VisualizeConstants.EDIT_PATH + '/' + this.id;\n  };\n\n  SavedVis.prototype._afterEsResp = function () {\n    var self = this;\n\n    return self._getLinkedSavedSearch().then(function () {\n      self.searchSource.setField('size', 0);\n\n      return self.vis ? self._updateVis() : self._createVis();\n    });\n  };\n\n  SavedVis.prototype._getLinkedSavedSearch = Promise.method(function () {\n    var self = this;\n    var linkedSearch = !!self.savedSearchId;\n    var current = self.savedSearch;\n\n    if (linkedSearch && current && current.id === self.savedSearchId) {\n      return;\n    }\n\n    if (self.savedSearch) {\n      self.searchSource.setParent(self.savedSearch.searchSource.getParent());\n      self.savedSearch.destroy();\n      self.savedSearch = null;\n    }\n\n    if (linkedSearch) {\n      return savedSearches.get(self.savedSearchId).then(function (savedSearch) {\n        self.savedSearch = savedSearch;\n        self.searchSource.setParent(self.savedSearch.searchSource);\n      });\n    }\n  });\n\n  SavedVis.prototype._createVis = function () {\n    var self = this;\n\n    self.visState = (0, _vis_update_state.updateOldState)(self.visState);\n\n    // visState doesn't yet exist when importing a visualization, so we can't\n    // assume that exists at this point. If it does exist, then we're not\n    // importing a visualization, so we want to sync the title.\n    if (self.visState) {\n      self.visState.title = self.title;\n    }\n    self.vis = new Vis(self.searchSource.getField('index'), self.visState);\n\n    self.vis.savedSearchId = self.savedSearchId;\n\n    return self.vis;\n  };\n\n  SavedVis.prototype._updateVis = function () {\n    var self = this;\n\n    self.vis.indexPattern = self.searchSource.getField('index');\n    self.visState.title = self.title;\n    self.vis.setState(self.visState);\n    self.vis.savedSearchId = self.savedSearchId;\n  };\n\n  return SavedVis;\n});",null]}