{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/controls/select_interval/select_interval.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/controls/select_interval/select_interval.js","mtime":1567631712029},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SelectInterval = exports.mlSelectIntervalService = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/*\n * React component for rendering a select element with various aggregation interval levels.\n */\n\n\nvar OPTIONS = [{\n  value: 'auto',\n  text: _i18n.i18n.translate('xpack.ml.controls.selectInterval.autoLabel', { defaultMessage: 'Auto' })\n}, {\n  value: 'hour',\n  text: _i18n.i18n.translate('xpack.ml.controls.selectInterval.hourLabel', { defaultMessage: '1 hour' })\n}, {\n  value: 'day',\n  text: _i18n.i18n.translate('xpack.ml.controls.selectInterval.dayLabel', { defaultMessage: '1 day' })\n}, {\n  value: 'second',\n  text: _i18n.i18n.translate('xpack.ml.controls.selectInterval.showAllLabel', { defaultMessage: 'Show all' })\n}];\n\nfunction optionValueToInterval(value) {\n  // Builds the corresponding interval object with the required display and val properties\n  // from the specified value.\n  var option = OPTIONS.find(function (opt) {\n    return opt.value === value;\n  });\n\n  // Default to auto if supplied value doesn't map to one of the options.\n  var interval = OPTIONS[0];\n  if (option !== undefined) {\n    interval = { display: option.text, val: option.value };\n  }\n\n  return interval;\n}\n\n// This service will be populated by the corresponding angularjs based one.\nvar mlSelectIntervalService = exports.mlSelectIntervalService = {\n  intialized: false,\n  state: null\n};\n\nvar SelectInterval = function (_Component) {\n  _inherits(SelectInterval, _Component);\n\n  function SelectInterval(props) {\n    _classCallCheck(this, SelectInterval);\n\n    // Restore the interval from the state, or default to auto.\n    var _this = _possibleConstructorReturn(this, (SelectInterval.__proto__ || Object.getPrototypeOf(SelectInterval)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.mlSelectIntervalService = mlSelectIntervalService;\n    var intervalState = _this.mlSelectIntervalService.state.get('interval');\n    var intervalValue = (0, _lodash.get)(intervalState, 'val', 'auto');\n    var interval = optionValueToInterval(intervalValue);\n    _this.mlSelectIntervalService.state.set('interval', interval);\n\n    _this.state = {\n      value: interval.val\n    };\n    return _this;\n  }\n\n  _createClass(SelectInterval, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(_eui.EuiSelect, {\n        options: OPTIONS,\n        className: 'ml-select-interval',\n        value: this.state.value,\n        onChange: this.onChange\n      });\n    }\n  }]);\n\n  return SelectInterval;\n}(_react.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onChange = function (e) {\n    _this2.setState({\n      value: e.target.value\n    });\n\n    var interval = optionValueToInterval(e.target.value);\n    _this2.mlSelectIntervalService.state.set('interval', interval).changed();\n  };\n};\n\nexports.SelectInterval = SelectInterval;",null]}