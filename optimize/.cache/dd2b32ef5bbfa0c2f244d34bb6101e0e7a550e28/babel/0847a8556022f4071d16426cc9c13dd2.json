{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/pipeline_viewer/models/pipeline/pipeline.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/pipeline_viewer/models/pipeline/pipeline.js","mtime":1567631712091},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pipeline = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _make_statement = require('./make_statement');\n\nvar _queue_vertex = require('../graph/queue_vertex');\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getInputStatements(pipelineGraph) {\n  return pipelineGraph.getVertices().filter(function (v) {\n    return v.pipelineStage === 'input';\n  }).map(_make_statement.makeStatement);\n}\n\nfunction isFilterStageVertex(vertex) {\n  return vertex.pipelineStage === 'filter';\n}\n\nfunction isVertexOrphan(vertex) {\n  return vertex.incomingVertices.length === 0;\n}\n\nfunction isVertexChildOfQueue(vertex) {\n  return vertex.incomingVertices.every(function (p) {\n    return p instanceof _queue_vertex.QueueVertex;\n  });\n}\n\nfunction getFilterStatements(pipelineGraph) {\n\n  // If the graph has a Queue vertex, then the first filter vertex whose parent is the Queue vertex\n  // is where we want to start. If there is no Queue vertex then there are necessarily no input-stage vertices\n  // either, so the first filter vertex that has no parents (orphan vertex) is where we want to start.\n  var allVertices = pipelineGraph.getVertices();\n  var allFilterVertices = allVertices.filter(function (v) {\n    return isFilterStageVertex(v);\n  });\n  var startFilterVertex = pipelineGraph.hasQueueVertex ? allFilterVertices.find(function (v) {\n    return isVertexChildOfQueue(v);\n  }) : allFilterVertices.find(function (v) {\n    return isVertexOrphan(v);\n  });\n\n  if (!startFilterVertex) {\n    return [];\n  }\n\n  var filterStatements = [];\n  var currentVertex = startFilterVertex;\n  while ((0, _utils.isVertexPipelineStage)(currentVertex, 'filter')) {\n    filterStatements.push((0, _make_statement.makeStatement)(currentVertex, 'filter'));\n    currentVertex = currentVertex.next;\n  }\n\n  return filterStatements;\n}\n\nfunction getQueue(pipelineGraph) {\n  return pipelineGraph.hasQueueVertex ? (0, _make_statement.makeStatement)(pipelineGraph.queueVertex) : null;\n}\n\nfunction getOutputStatements(pipelineGraph) {\n  return pipelineGraph.getVertices().filter(function (v) {\n    return v.pipelineStage === 'output' && !v.incomingVertices.some(function (p) {\n      return p.pipelineStage === 'output';\n    });\n  }).map(function (v) {\n    return (0, _make_statement.makeStatement)(v, 'output');\n  });\n}\n\nvar Pipeline = exports.Pipeline = function () {\n  function Pipeline(inputStatements, filterStatements, outputStatements, queue) {\n    _classCallCheck(this, Pipeline);\n\n    this.inputStatements = inputStatements;\n    this.filterStatements = filterStatements;\n    this.outputStatements = outputStatements;\n    this.queue = queue;\n  }\n\n  _createClass(Pipeline, null, [{\n    key: 'fromPipelineGraph',\n    value: function fromPipelineGraph(pipelineGraph) {\n      // Determine input statements, if any\n      var inputStatements = getInputStatements(pipelineGraph);\n\n      // Determine filter statements, if any\n      var filterStatements = getFilterStatements(pipelineGraph);\n\n      // Determine output statements, if any\n      var outputStatements = getOutputStatements(pipelineGraph);\n\n      // Create queue, if exists\n      var queue = getQueue(pipelineGraph);\n\n      return new Pipeline(inputStatements, filterStatements, outputStatements, queue);\n    }\n  }]);\n\n  return Pipeline;\n}();",null]}