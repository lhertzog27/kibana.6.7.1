{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/logstash/public/sections/pipeline_edit/components/upgrade_failure/upgrade_failure.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/logstash/public/sections/pipeline_edit/components/upgrade_failure/upgrade_failure.js","mtime":1567631712008},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _lodash = require('lodash');\n\nvar _modules = require('ui/modules');\n\nvar _i18n = require('ui/i18n');\n\nvar _upgrade_failure = require('../../../../components/upgrade_failure');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar app = _modules.uiModules.get('xpack/logstash');\n\napp.directive('upgradeFailure', function ($injector) {\n  var $route = $injector.get('$route');\n  var kbnUrl = $injector.get('kbnUrl');\n\n  return {\n    link: function link(scope, el) {\n      var onRetry = function onRetry() {\n        $route.updateParams({ retry: true });\n        $route.reload();\n      };\n      var onClose = function onClose() {\n        scope.$evalAsync(kbnUrl.change('management/logstash/pipelines', {}));\n      };\n      var isNewPipeline = (0, _lodash.isEmpty)(scope.pipeline.id);\n      var isManualUpgrade = !!$route.current.params.retry;\n\n      (0, _reactDom.render)(_react2.default.createElement(\n        _i18n.I18nContext,\n        null,\n        _react2.default.createElement(_upgrade_failure.UpgradeFailure, {\n          isNewPipeline: isNewPipeline,\n          isManualUpgrade: isManualUpgrade,\n          onRetry: onRetry,\n          onClose: onClose\n        })\n      ), el[0]);\n    },\n    restrict: 'E',\n    scope: {\n      pipeline: '='\n    }\n  };\n});",null]}