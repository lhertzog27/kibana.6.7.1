{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/remote_clusters/public/sections/remote_cluster_list/components/connection_status/connection_status.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/remote_clusters/public/sections/remote_cluster_list/components/connection_status/connection_status.js","mtime":1567631712122},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectionStatus = ConnectionStatus;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _i18n = require('@kbn/i18n');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction ConnectionStatus(_ref) {\n  var isConnected = _ref.isConnected;\n\n  var icon = void 0;\n  var message = void 0;\n\n  if (isConnected) {\n    icon = _react2.default.createElement(_eui.EuiIcon, {\n      type: 'check',\n      color: 'success'\n    });\n\n    message = _i18n.i18n.translate('xpack.remoteClusters.connectedStatus.connectedAriaLabel', {\n      defaultMessage: 'Connected'\n    });\n  } else {\n    icon = _react2.default.createElement(_eui.EuiIcon, {\n      type: 'cross',\n      color: 'danger'\n    });\n\n    message = _i18n.i18n.translate('xpack.remoteClusters.connectedStatus.notConnectedAriaLabel', {\n      defaultMessage: 'Not connected'\n    });\n  }\n\n  var seedNodeTooltip = _i18n.i18n.translate('xpack.remoteClusters.connectedStatus.notConnectedToolTip', {\n    defaultMessage: \"Ensure the seed nodes are configured with the remote cluster's transport port, not the http port.\"\n  });\n\n  return _react2.default.createElement(\n    _eui.EuiFlexGroup,\n    { gutterSize: 's', alignItems: 'center' },\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: false },\n      _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { gutterSize: 's', alignItems: 'center' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          icon\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { className: 'remoteClustersConnectionStatus__message' },\n          _react2.default.createElement(\n            _eui.EuiText,\n            null,\n            message\n          )\n        )\n      )\n    ),\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: false },\n      _react2.default.createElement(_eui.EuiIconTip, {\n        color: 'subdued',\n        content: seedNodeTooltip\n      })\n    )\n  );\n}\n\nConnectionStatus.propTypes = {\n  isConnected: _propTypes2.default.bool\n};",null]}