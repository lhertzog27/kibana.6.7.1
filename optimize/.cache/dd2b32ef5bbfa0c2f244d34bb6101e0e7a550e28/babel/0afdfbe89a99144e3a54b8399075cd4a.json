{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/apps/workpad/routes.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/apps/workpad/routes.js","mtime":1567631711917},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.routes = undefined;\n\nvar _workpad_service = require('../../lib/workpad_service');\n\nvar workpadService = _interopRequireWildcard(_workpad_service);\n\nvar _notify = require('../../lib/notify');\n\nvar _defaults = require('../../state/defaults');\n\nvar _workpad2 = require('../../state/actions/workpad');\n\nvar _assets = require('../../state/actions/assets');\n\nvar _pages = require('../../state/actions/pages');\n\nvar _workpad3 = require('../../state/selectors/workpad');\n\nvar _app = require('../../state/selectors/app');\n\nvar _transient = require('../../state/actions/transient');\n\nvar _workpad_app = require('./workpad_app');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar routes = [{\n  path: '/workpad',\n  children: [{\n    name: 'createWorkpad',\n    path: '/create',\n    action: function action(dispatch) {\n      return function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n          var router = _ref.router;\n          var newWorkpad;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  newWorkpad = (0, _defaults.getDefaultWorkpad)();\n                  _context.prev = 1;\n                  _context.next = 4;\n                  return workpadService.create(newWorkpad);\n\n                case 4:\n                  dispatch((0, _workpad2.setWorkpad)(newWorkpad));\n                  dispatch((0, _assets.resetAssets)());\n                  router.redirectTo('loadWorkpad', { id: newWorkpad.id, page: 1 });\n                  _context.next = 14;\n                  break;\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t0 = _context['catch'](1);\n\n                  _notify.notify.error(_context.t0, { title: 'Couldn\\'t create workpad' });\n                  // TODO: remove this and switch to checking user privileges when canvas loads when granular app privileges are introduced\n                  // https://github.com/elastic/kibana/issues/20277\n                  if (_context.t0.response && _context.t0.response.status === 403) {\n                    dispatch((0, _transient.setCanUserWrite)(false));\n                  }\n                  router.redirectTo('home');\n\n                case 14:\n                case 'end':\n                  return _context.stop();\n              }\n            }\n          }, _callee, undefined, [[1, 9]]);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n    },\n    meta: {\n      component: _workpad_app.WorkpadApp\n    }\n  }, {\n    name: 'loadWorkpad',\n    path: '/:id(/page/:page)',\n    action: function action(dispatch, getState) {\n      return function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3) {\n          var params = _ref3.params,\n              router = _ref3.router;\n\n          var state, currentWorkpad, firstLoad, fetchedWorkpad, assets, _workpad, workpad, pageNumber, pageIndex;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  // load workpad if given a new id via url param\n                  state = getState();\n                  currentWorkpad = (0, _workpad3.getWorkpad)(state);\n                  firstLoad = (0, _app.isFirstLoad)(state);\n\n                  if (!(params.id !== currentWorkpad.id)) {\n                    _context2.next = 21;\n                    break;\n                  }\n\n                  _context2.prev = 4;\n                  _context2.next = 7;\n                  return workpadService.get(params.id);\n\n                case 7:\n                  fetchedWorkpad = _context2.sent;\n\n                  if (!firstLoad) {\n                    _context2.next = 12;\n                    break;\n                  }\n\n                  _context2.next = 11;\n                  return workpadService.update(params.id, fetchedWorkpad).catch(function (err) {\n                    if (err.response && err.response.status === 403) {\n                      dispatch((0, _transient.setCanUserWrite)(false));\n                    }\n                  });\n\n                case 11:\n                  dispatch((0, _transient.setFirstLoad)(false));\n\n                case 12:\n                  assets = fetchedWorkpad.assets, _workpad = _objectWithoutProperties(fetchedWorkpad, ['assets']);\n\n                  dispatch((0, _workpad2.setWorkpad)(_workpad));\n                  dispatch((0, _assets.setAssets)(assets));\n                  _context2.next = 21;\n                  break;\n\n                case 17:\n                  _context2.prev = 17;\n                  _context2.t0 = _context2['catch'](4);\n\n                  _notify.notify.error(_context2.t0, { title: 'Couldn\\'t load workpad with ID' });\n                  return _context2.abrupt('return', router.redirectTo('home'));\n\n                case 21:\n\n                  // fetch the workpad again, to get changes\n                  workpad = (0, _workpad3.getWorkpad)(getState());\n                  pageNumber = parseInt(params.page, 10);\n\n                  // no page provided, append current page to url\n\n                  if (!isNaN(pageNumber)) {\n                    _context2.next = 25;\n                    break;\n                  }\n\n                  return _context2.abrupt('return', router.redirectTo('loadWorkpad', { id: workpad.id, page: workpad.page + 1 }));\n\n                case 25:\n\n                  // set the active page using the number provided in the url\n                  pageIndex = pageNumber - 1;\n\n                  if (pageIndex !== workpad.page) {\n                    dispatch((0, _pages.setPage)(pageIndex));\n                  }\n\n                case 27:\n                case 'end':\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, undefined, [[4, 17]]);\n        }));\n\n        return function (_x2) {\n          return _ref4.apply(this, arguments);\n        };\n      }();\n    },\n    meta: {\n      component: _workpad_app.WorkpadApp\n    }\n  }]\n}];\nexports.routes = routes;",null]}