{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/listing/dashboard_listing.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/listing/dashboard_listing.js","mtime":1567631711559},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DashboardListing = exports.EMPTY_FILTER = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _notify = require('ui/notify');\n\nvar _eui = require('@elastic/eui');\n\nvar _dashboard_constants = require('../dashboard_constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar EMPTY_FILTER = exports.EMPTY_FILTER = '';\n\n// saved object client does not support sorting by title because title is only mapped as analyzed\n// the legacy implementation got around this by pulling `listingLimit` items and doing client side sorting\n// and not supporting server-side paging.\n// This component does not try to tackle these problems (yet) and is just feature matching the legacy component\n// TODO support server side sorting/paging once title and description are sortable on the server.\n\nvar DashboardListingUi = function (_React$Component) {\n  _inherits(DashboardListingUi, _React$Component);\n\n  function DashboardListingUi(props) {\n    var _this2 = this;\n\n    _classCallCheck(this, DashboardListingUi);\n\n    var _this = _possibleConstructorReturn(this, (DashboardListingUi.__proto__ || Object.getPrototypeOf(DashboardListingUi)).call(this, props));\n\n    _this.debouncedFetch = _lodash2.default.debounce(function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(filter) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.props.find(filter);\n\n              case 2:\n                response = _context.sent;\n\n                if (_this._isMounted) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 5:\n\n                // We need this check to handle the case where search results come back in a different\n                // order than they were sent out. Only load results for the most recent search.\n                if (filter === _this.state.filter) {\n                  _this.setState({\n                    hasInitialFetchReturned: true,\n                    isFetchingItems: false,\n                    dashboards: response.hits,\n                    totalDashboards: response.total,\n                    showLimitError: response.total > _this.props.listingLimit\n                  });\n                }\n\n              case 6:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this2);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), 300);\n\n    _this.fetchItems = function () {\n      _this.setState({\n        isFetchingItems: true\n      }, _this.debouncedFetch.bind(null, _this.state.filter));\n    };\n\n    _this.deleteSelectedItems = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _this.props.delete(_this.state.selectedIds);\n\n            case 3:\n              _context2.next = 8;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2['catch'](0);\n\n              _notify.toastNotifications.addDanger({\n                title: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'kbn.dashboard.listing.unableToDeleteDashboardsDangerMessage',\n                  defaultMessage: 'Unable to delete dashboard(s)'\n                }),\n                text: '' + _context2.t0\n              });\n\n            case 8:\n              _this.fetchItems();\n              _this.setState({\n                selectedIds: []\n              });\n              _this.closeDeleteModal();\n\n            case 11:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, _this2, [[0, 5]]);\n    }));\n\n    _this.closeDeleteModal = function () {\n      _this.setState({ showDeleteModal: false });\n    };\n\n    _this.openDeleteModal = function () {\n      _this.setState({ showDeleteModal: true });\n    };\n\n    _this.onTableChange = function (_ref3) {\n      var page = _ref3.page,\n          _ref3$sort = _ref3.sort,\n          sort = _ref3$sort === undefined ? {} : _ref3$sort;\n      var pageIndex = page.index,\n          pageSize = page.size;\n      var sortField = sort.field,\n          sortDirection = sort.direction;\n\n      // 3rd sorting state that is not captured by sort - default order (asc by title)\n      // when switching from desc to asc for the same, non-default field - use default order,\n      // unless we have a filter, in which case, we want to use Elasticsearch's ranking order.\n\n      if (_this.state.sortField === sortField && _this.state.sortDirection === 'desc' && sortDirection === 'asc') {\n\n        var defaultSort = defaultSortOrder(_this.state.filter);\n\n        sortField = defaultSort.sortField;\n        sortDirection = defaultSort.sortDirection;\n      }\n\n      _this.setState({\n        page: pageIndex,\n        perPage: pageSize,\n        sortField: sortField,\n        sortDirection: sortDirection\n      });\n    };\n\n    _this.getPageOfItems = function () {\n      // do not sort original list to preserve elasticsearch ranking order\n      var dashboardsCopy = _this.state.dashboards.slice();\n\n      if (_this.state.sortField) {\n        dashboardsCopy.sort(function (a, b) {\n          var fieldA = _lodash2.default.get(a, _this.state.sortField, '');\n          var fieldB = _lodash2.default.get(b, _this.state.sortField, '');\n          var order = 1;\n          if (_this.state.sortDirection === 'desc') {\n            order = -1;\n          }\n          return order * fieldA.toLowerCase().localeCompare(fieldB.toLowerCase());\n        });\n      }\n\n      // If begin is greater than the length of the sequence, an empty array is returned.\n      var startIndex = _this.state.page * _this.state.perPage;\n      // If end is greater than the length of the sequence, slice extracts through to the end of the sequence (arr.length).\n      var lastIndex = startIndex + _this.state.perPage;\n      return dashboardsCopy.slice(startIndex, lastIndex);\n    };\n\n    _this.state = _extends({}, defaultSortOrder(_this.props.initialFilter), {\n      hasInitialFetchReturned: false,\n      isFetchingItems: false,\n      showDeleteModal: false,\n      showLimitError: false,\n      filter: _this.props.initialFilter,\n      dashboards: [],\n      selectedIds: [],\n      page: 0,\n      perPage: 20\n    });\n    return _this;\n  }\n\n  _createClass(DashboardListingUi, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.debouncedFetch.cancel();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.fetchItems();\n    }\n  }, {\n    key: 'setFilter',\n    value: function setFilter(filter) {\n      // If the user is searching, we want to clear the sort order so that\n      // results are ordered by Elasticsearch's relevance.\n      this.setState(_extends({}, defaultSortOrder(filter), {\n        filter: filter\n      }), this.fetchItems);\n    }\n\n    // server-side paging not supported - see component comment for details\n\n  }, {\n    key: 'hasNoDashboards',\n    value: function hasNoDashboards() {\n      if (!this.state.isFetchingItems && this.state.dashboards.length === 0 && !this.state.filter) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'renderConfirmDeleteModal',\n    value: function renderConfirmDeleteModal() {\n      return _react2.default.createElement(\n        _eui.EuiOverlayMask,\n        null,\n        _react2.default.createElement(\n          _eui.EuiConfirmModal,\n          {\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.dashboard.listing.deleteSelectedDashboardsConfirmModal.title',\n              defaultMessage: 'Delete selected dashboards?'\n            }),\n            onCancel: this.closeDeleteModal,\n            onConfirm: this.deleteSelectedItems,\n            cancelButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.dashboard.listing.deleteSelectedDashboardsConfirmModal.cancelButtonLabel',\n              defaultMessage: 'Cancel'\n            }),\n            confirmButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.dashboard.listing.deleteSelectedDashboardsConfirmModal.confirmButtonLabel',\n              defaultMessage: 'Delete'\n            }),\n            defaultFocusedButton: 'cancel'\n          },\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.dashboard.listing.deleteDashboardsConfirmModalDescription',\n              defaultMessage: 'You can\\'t recover deleted dashboards.'\n            })\n          )\n        )\n      );\n    }\n  }, {\n    key: 'renderListingLimitWarning',\n    value: function renderListingLimitWarning() {\n      if (this.state.showLimitError) {\n        return _react2.default.createElement(\n          _react2.default.Fragment,\n          null,\n          _react2.default.createElement(\n            _eui.EuiCallOut,\n            {\n              title: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.dashboard.listing.listingLimitExceededTitle',\n                defaultMessage: 'Listing limit exceeded'\n              }),\n              color: 'warning',\n              iconType: 'help'\n            },\n            _react2.default.createElement(\n              'p',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.dashboard.listing.listingLimitExceededDescription',\n                defaultMessage: 'You have {totalDashboards} dashboards, but your {listingLimitText} setting prevents the table below from displaying more than {listingLimitValue}. You can change this setting under {advancedSettingsLink}.',\n                values: {\n                  totalDashboards: this.state.totalDashboards,\n                  listingLimitValue: this.props.listingLimit,\n                  listingLimitText: _react2.default.createElement(\n                    'strong',\n                    null,\n                    'listingLimit'\n                  ),\n                  advancedSettingsLink: _react2.default.createElement(\n                    _eui.EuiLink,\n                    { href: '#/management/kibana/settings' },\n                    _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'kbn.dashboard.listing.listingLimitExceeded.advancedSettingsLinkText',\n                      defaultMessage: 'Advanced Settings'\n                    })\n                  )\n                }\n              })\n            )\n          ),\n          _react2.default.createElement(_eui.EuiSpacer, { size: 'm' })\n        );\n      }\n    }\n  }, {\n    key: 'renderNoResultsMessage',\n    value: function renderNoResultsMessage() {\n      if (this.state.isFetchingItems) {\n        return '';\n      }\n\n      return _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'kbn.dashboard.listing.noMatchedDashboardsMessage',\n        defaultMessage: 'No dashboards matched your search.'\n      });\n    }\n  }, {\n    key: 'renderNoItemsMessage',\n    value: function renderNoItemsMessage() {\n\n      if (this.props.hideWriteControls) {\n        return _react2.default.createElement(\n          _eui.EuiText,\n          null,\n          _react2.default.createElement(\n            'h2',\n            null,\n            _react2.default.createElement(\n              _eui.EuiTextColor,\n              { color: 'subdued' },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.dashboard.listing.noDashboardsItemsMessage',\n                defaultMessage: 'Looks like you don\\'t have any dashboards.'\n              })\n            )\n          )\n        );\n      }\n\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(_eui.EuiEmptyPrompt, {\n          iconType: 'dashboardApp',\n          title: _react2.default.createElement(\n            'h2',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.dashboard.listing.createNewDashboard.title',\n              defaultMessage: 'Create your first dashboard'\n            })\n          ),\n          body: _react2.default.createElement(\n            _react.Fragment,\n            null,\n            _react2.default.createElement(\n              'p',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription',\n                defaultMessage: 'You can combine data views from any Kibana app into one dashboard and see everything in one place.'\n              })\n            ),\n            _react2.default.createElement(\n              'p',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.dashboard.listing.createNewDashboard.newToKibanaDescription',\n                defaultMessage: 'New to Kibana? {sampleDataInstallLink} to take a test drive.',\n                values: {\n                  sampleDataInstallLink: _react2.default.createElement(\n                    _eui.EuiLink,\n                    { href: '#/home/tutorial_directory/sampleData' },\n                    _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'kbn.dashboard.listing.createNewDashboard.sampleDataInstallLinkText',\n                      defaultMessage: 'Install some sample data'\n                    })\n                  )\n                }\n              })\n            )\n          ),\n          actions: _react2.default.createElement(\n            _eui.EuiButton,\n            {\n              href: '#' + _dashboard_constants.DashboardConstants.CREATE_NEW_DASHBOARD_URL,\n              fill: true,\n              iconType: 'plusInCircle',\n              'data-test-subj': 'createDashboardPromptButton'\n            },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.dashboard.listing.createNewDashboard.createButtonLabel',\n              defaultMessage: 'Create new dashboard'\n            })\n          )\n        })\n      );\n    }\n  }, {\n    key: 'renderSearchBar',\n    value: function renderSearchBar() {\n      var _this3 = this;\n\n      var intl = this.props.intl;\n\n      var deleteBtn = void 0;\n      if (this.state.selectedIds.length > 0) {\n        deleteBtn = _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButton,\n            {\n              color: 'danger',\n              onClick: this.openDeleteModal,\n              'data-test-subj': 'deleteSelectedDashboards',\n              key: 'delete'\n            },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.dashboard.listing.searchBar.deleteSelectedButtonLabel',\n              defaultMessage: 'Delete selected'\n            })\n          )\n        );\n      }\n\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        null,\n        deleteBtn,\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: true },\n          _react2.default.createElement(_eui.EuiFieldSearch, {\n            'aria-label': intl.formatMessage({\n              id: 'kbn.dashboard.listing.searchBar.searchFieldAriaLabel',\n              defaultMessage: 'Filter dashboards',\n              description: '\"Filter\" is used as a verb here, similar to \"search through dashboards\".'\n            }),\n            placeholder: intl.formatMessage({\n              id: 'kbn.dashboard.listing.searchBar.searchFieldPlaceholder',\n              defaultMessage: 'Search…'\n            }),\n            fullWidth: true,\n            value: this.state.filter,\n            onChange: function onChange(e) {\n              return _this3.setFilter(e.target.value);\n            },\n            'data-test-subj': 'searchFilter'\n          })\n        )\n      );\n    }\n  }, {\n    key: 'renderTable',\n    value: function renderTable() {\n      var _this4 = this;\n\n      var intl = this.props.intl;\n\n      var tableColumns = [{\n        field: 'title',\n        name: intl.formatMessage({\n          id: 'kbn.dashboard.listing.table.titleColumnName',\n          defaultMessage: 'Title'\n        }),\n        sortable: true,\n        render: function render(field, record) {\n          return _react2.default.createElement(\n            _eui.EuiLink,\n            {\n              href: '#' + (0, _dashboard_constants.createDashboardEditUrl)(record.id),\n              'data-test-subj': 'dashboardListingTitleLink-' + record.title.split(' ').join('-')\n            },\n            field\n          );\n        }\n      }, {\n        field: 'description',\n        name: intl.formatMessage({\n          id: 'kbn.dashboard.listing.table.descriptionColumnName',\n          defaultMessage: 'Description'\n        }),\n        dataType: 'string',\n        sortable: true\n      }];\n      if (!this.props.hideWriteControls) {\n        tableColumns.push({\n          name: intl.formatMessage({\n            id: 'kbn.dashboard.listing.table.actionsColumnName',\n            defaultMessage: 'Actions'\n          }),\n          actions: [{\n            render: function render(record) {\n              return _react2.default.createElement(\n                _eui.EuiLink,\n                {\n                  href: '#' + (0, _dashboard_constants.createDashboardEditUrl)(record.id) + '?_a=(viewMode:edit)'\n                },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'kbn.dashboard.listing.table.actionsColumn.editLinkText',\n                  defaultMessage: 'Edit'\n                })\n              );\n            }\n          }]\n        });\n      }\n      var pagination = {\n        pageIndex: this.state.page,\n        pageSize: this.state.perPage,\n        totalItemCount: this.state.dashboards.length,\n        pageSizeOptions: [10, 20, 50]\n      };\n      var selection = {\n        onSelectionChange: function onSelectionChange(selection) {\n          _this4.setState({\n            selectedIds: selection.map(function (item) {\n              return item.id;\n            })\n          });\n        }\n      };\n      var sorting = {};\n      if (this.state.sortField) {\n        sorting.sort = {\n          field: this.state.sortField,\n          direction: this.state.sortDirection\n        };\n      }\n      var items = this.state.dashboards.length === 0 ? [] : this.getPageOfItems();\n\n      return _react2.default.createElement(_eui.EuiBasicTable, {\n        itemId: 'id',\n        items: items,\n        loading: this.state.isFetchingItems,\n        columns: tableColumns,\n        selection: selection,\n        noItemsMessage: this.renderNoResultsMessage(),\n        pagination: pagination,\n        sorting: sorting,\n        onChange: this.onTableChange\n      });\n    }\n  }, {\n    key: 'renderListingOrEmptyState',\n    value: function renderListingOrEmptyState() {\n      if (this.hasNoDashboards()) {\n        return this.renderNoItemsMessage();\n      }\n\n      return this.renderListing();\n    }\n  }, {\n    key: 'renderListing',\n    value: function renderListing() {\n      var createButton = void 0;\n      if (!this.props.hideWriteControls) {\n        createButton = _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButton,\n            {\n              href: '#' + _dashboard_constants.DashboardConstants.CREATE_NEW_DASHBOARD_URL,\n              'data-test-subj': 'newDashboardLink',\n              fill: true\n            },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.dashboard.listing.createNewDashboardButtonLabel',\n              defaultMessage: 'Create new dashboard'\n            })\n          )\n        );\n      }\n      return _react2.default.createElement(\n        'div',\n        null,\n        this.state.showDeleteModal && this.renderConfirmDeleteModal(),\n        _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { justifyContent: 'spaceBetween', alignItems: 'flexEnd', 'data-test-subj': 'top-nav' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiTitle,\n              { size: 'l' },\n              _react2.default.createElement(\n                'h1',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'kbn.dashboard.listing.dashboardsTitle',\n                  defaultMessage: 'Dashboards'\n                })\n              )\n            )\n          ),\n          createButton\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n        this.renderListingLimitWarning(),\n        this.renderSearchBar(),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n        this.renderTable()\n      );\n    }\n  }, {\n    key: 'renderPageContent',\n    value: function renderPageContent() {\n      if (!this.state.hasInitialFetchReturned) {\n        return;\n      }\n\n      return _react2.default.createElement(\n        _eui.EuiPageContent,\n        { horizontalPosition: 'center' },\n        this.renderListingOrEmptyState()\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        _eui.EuiPage,\n        { 'data-test-subj': 'dashboardLandingPage', className: 'dshDashboardListing__page', restrictWidth: true },\n        _react2.default.createElement(\n          _eui.EuiPageBody,\n          null,\n          this.renderPageContent()\n        )\n      );\n    }\n  }]);\n\n  return DashboardListingUi;\n}(_react2.default.Component);\n\nDashboardListingUi.propTypes = {\n  find: _propTypes2.default.func.isRequired,\n  delete: _propTypes2.default.func.isRequired,\n  listingLimit: _propTypes2.default.number.isRequired,\n  hideWriteControls: _propTypes2.default.bool.isRequired,\n  initialFilter: _propTypes2.default.string\n};\n\nDashboardListingUi.defaultProps = {\n  initialFilter: EMPTY_FILTER\n};\n\nvar DashboardListing = exports.DashboardListing = (0, _react3.injectI18n)(DashboardListingUi);\n\n// The table supports three sort states:\n// field-asc, field-desc, and default.\n//\n// If you click a non-default sort header three times,\n// the sort returns to the default sort, described here.\nfunction defaultSortOrder(filter) {\n  // If the user has searched for something, we want our\n  // default sort to be by Elasticsearch's relevance, so\n  // we clear out our overriding sort options.\n  if (filter.length > 0) {\n    return { sortField: undefined, sortDirection: undefined };\n  }\n\n  return {\n    sortField: 'title',\n    sortDirection: 'asc'\n  };\n}",null]}