{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/kuery_autocomplete/public/autocomplete_providers/escape_kuery.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/kuery_autocomplete/public/autocomplete_providers/escape_kuery.js","mtime":1567631712000},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.escapeKuery = undefined;\nexports.escapeQuotes = escapeQuotes;\n\nvar _lodash = require('lodash');\n\nfunction escapeQuotes(string) {\n  return string.replace(/\"/g, '\\\\\"');\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */\n\nvar escapeKuery = exports.escapeKuery = (0, _lodash.flow)(escapeSpecialCharacters, escapeAndOr, escapeNot, escapeWhitespace);\n\n// See the SpecialCharacter rule in kuery.peg\nfunction escapeSpecialCharacters(string) {\n  return string.replace(/[\\\\():<>\"*]/g, '\\\\$&'); // $& means the whole matched string\n}\n\n// See the Keyword rule in kuery.peg\nfunction escapeAndOr(string) {\n  return string.replace(/(\\s+)(and|or)(\\s+)/ig, '$1\\\\$2$3');\n}\n\nfunction escapeNot(string) {\n  return string.replace(/not(\\s+)/ig, '\\\\$&');\n}\n\n// See the Space rule in kuery.peg\nfunction escapeWhitespace(string) {\n  return string.replace(/\\t/g, '\\\\t').replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n');\n}",null]}