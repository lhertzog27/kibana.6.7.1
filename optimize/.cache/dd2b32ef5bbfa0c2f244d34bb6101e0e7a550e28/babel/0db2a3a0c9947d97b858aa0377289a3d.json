{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/confirm_modal/confirm_modal.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/confirm_modal/confirm_modal.js","mtime":1567631711920},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfirmModal = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /*\n                                                                                                                                                                                                                              * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                              * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                              * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                              */\n\n/* eslint-disable react/forbid-elements */\n\n\nvar ConfirmModal = function ConfirmModal(props) {\n  var isOpen = props.isOpen,\n      title = props.title,\n      message = props.message,\n      onConfirm = props.onConfirm,\n      onCancel = props.onCancel,\n      confirmButtonText = props.confirmButtonText,\n      cancelButtonText = props.cancelButtonText,\n      className = props.className,\n      rest = _objectWithoutProperties(props, ['isOpen', 'title', 'message', 'onConfirm', 'onCancel', 'confirmButtonText', 'cancelButtonText', 'className']);\n\n  var confirm = function confirm(ev) {\n    onConfirm && onConfirm(ev);\n  };\n\n  var cancel = function cancel(ev) {\n    onCancel && onCancel(ev);\n  };\n\n  // render nothing if this component isn't open\n  if (!isOpen) {\n    return null;\n  }\n\n  return _react2.default.createElement(\n    _eui.EuiOverlayMask,\n    null,\n    _react2.default.createElement(\n      _eui.EuiConfirmModal,\n      _extends({}, rest, {\n        className: 'canvasConfirmModal ' + (className || ''),\n        title: title,\n        onCancel: cancel,\n        onConfirm: confirm,\n        confirmButtonText: confirmButtonText,\n        cancelButtonText: cancelButtonText,\n        defaultFocusedButton: 'confirm',\n        buttonColor: 'danger'\n      }),\n      message\n    )\n  );\n};\n\nexports.ConfirmModal = ConfirmModal;\nConfirmModal.propTypes = {\n  isOpen: _propTypes2.default.bool,\n  title: _propTypes2.default.string,\n  message: _propTypes2.default.string.isRequired,\n  onConfirm: _propTypes2.default.func.isRequired,\n  onCancel: _propTypes2.default.func.isRequired,\n  cancelButtonText: _propTypes2.default.string,\n  confirmButtonText: _propTypes2.default.string,\n  className: _propTypes2.default.string\n};\n\nConfirmModal.defaultProps = {\n  title: 'Confirm',\n  confirmButtonText: 'Confirm',\n  cancelButtonText: 'Cancel'\n};",null]}