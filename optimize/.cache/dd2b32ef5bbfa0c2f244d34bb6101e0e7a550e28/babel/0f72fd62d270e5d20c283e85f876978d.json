{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/map/mb/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/map/mb/index.js","mtime":1567631712015},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MBMapContainer = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _view = require('./view');\n\nvar _store_actions = require('../../../actions/store_actions');\n\nvar _map_selectors = require('../../../selectors/map_selectors');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction mapStateToProps() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return {\n    isMapReady: (0, _map_selectors.getMapReady)(state),\n    layerList: (0, _map_selectors.getLayerList)(state),\n    goto: (0, _map_selectors.getGoto)(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    extentChanged: function extentChanged(e) {\n      dispatch((0, _store_actions.mapExtentChanged)(e));\n    },\n    onMapReady: function onMapReady(e) {\n      dispatch((0, _store_actions.clearGoto)());\n      dispatch((0, _store_actions.mapExtentChanged)(e));\n      dispatch((0, _store_actions.mapReady)());\n    },\n    onMapDestroyed: function onMapDestroyed() {\n      dispatch((0, _store_actions.mapDestroyed)());\n    },\n    setMouseCoordinates: function setMouseCoordinates(_ref) {\n      var lat = _ref.lat,\n          lon = _ref.lon;\n\n      dispatch((0, _store_actions.setMouseCoordinates)({ lat: lat, lon: lon }));\n    },\n    clearMouseCoordinates: function clearMouseCoordinates() {\n      dispatch((0, _store_actions.clearMouseCoordinates)());\n    },\n    clearGoto: function clearGoto() {\n      dispatch((0, _store_actions.clearGoto)());\n    }\n  };\n}\n\nvar connectedMBMapContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, null, { withRef: true })(_view.MBMapContainer);\nexports.MBMapContainer = connectedMBMapContainer;",null]}