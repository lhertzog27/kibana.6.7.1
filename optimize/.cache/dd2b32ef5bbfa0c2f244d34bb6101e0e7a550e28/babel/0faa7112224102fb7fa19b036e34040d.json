{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/expression_types/function_form.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/expression_types/function_form.js","mtime":1567631711931},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FunctionForm = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _eui = require('@elastic/eui');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _common = require('@kbn/interpreter/common');\n\nvar _arg_add_popover = require('../components/arg_add_popover');\n\nvar _sidebar_section = require('../components/sidebar/sidebar_section');\n\nvar _sidebar_section_title = require('../components/sidebar/sidebar_section_title');\n\nvar _base_form = require('./base_form');\n\nvar _arg = require('./arg');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar FunctionForm = exports.FunctionForm = function (_BaseForm) {\n  _inherits(FunctionForm, _BaseForm);\n\n  function FunctionForm(props) {\n    _classCallCheck(this, FunctionForm);\n\n    var _this = _possibleConstructorReturn(this, (FunctionForm.__proto__ || Object.getPrototypeOf(FunctionForm)).call(this, _extends({}, props)));\n\n    _this.args = props.args || [];\n    _this.resolve = props.resolve || function () {\n      return {};\n    };\n    return _this;\n  }\n\n  _createClass(FunctionForm, [{\n    key: 'renderArg',\n    value: function renderArg(props, dataArg) {\n      var onValueRemove = props.onValueRemove,\n          onValueChange = props.onValueChange,\n          passedProps = _objectWithoutProperties(props, ['onValueRemove', 'onValueChange']);\n\n      var arg = dataArg.arg,\n          argValues = dataArg.argValues,\n          skipRender = dataArg.skipRender,\n          label = dataArg.label;\n      var argType = passedProps.argType,\n          expressionIndex = passedProps.expressionIndex;\n\n      // TODO: show some information to the user than an argument was skipped\n\n      if (!arg || skipRender) {\n        return null;\n      }\n\n      var renderArgWithProps = function renderArgWithProps(argValue, valueIndex) {\n        return arg.render(_extends({\n          key: argType + '-' + expressionIndex + '-' + arg.name + '-' + valueIndex\n        }, passedProps, {\n          label: label,\n          valueIndex: valueIndex,\n          argValue: argValue,\n          onValueChange: onValueChange(arg.name, valueIndex),\n          onValueRemove: onValueRemove(arg.name, valueIndex)\n        }));\n      };\n\n      // render the argument's template, wrapped in a remove control\n      // if the argument is required but not included, render the control anyway\n      if (!argValues && arg.required) {\n        return renderArgWithProps({ type: undefined, value: '' }, 0);\n      }\n\n      // render all included argument controls\n      return argValues && argValues.map(renderArgWithProps);\n    }\n\n    // TODO: Argument adding isn't very good, we should improve this UI\n\n  }, {\n    key: 'getAddableArg',\n    value: function getAddableArg(props, dataArg) {\n      var onValueAdd = props.onValueAdd;\n      var arg = dataArg.arg,\n          argValues = dataArg.argValues,\n          skipRender = dataArg.skipRender;\n\n      // skip arguments that aren't defined in the expression type schema\n\n      if (!arg || arg.required || skipRender) {\n        return null;\n      }\n      if (argValues && !arg.multi) {\n        return null;\n      }\n\n      var value = arg.default == null ? null : (0, _common.fromExpression)(arg.default, 'argument');\n\n      return { arg: arg, onValueAdd: onValueAdd(arg.name, value) };\n    }\n  }, {\n    key: 'resolveArg',\n    value: function resolveArg() {\n      // basically a no-op placeholder\n      return {};\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var args = data.args,\n          argTypeDef = data.argTypeDef;\n\n      // Don't instaniate these until render time, to give the registries a chance to populate.\n\n      var argInstances = this.args.map(function (argSpec) {\n        return new _arg.Arg(argSpec);\n      });\n\n      if (!(0, _lodash.isPlainObject)(args)) {\n        throw new Error('Form \"' + this.name + '\" expects \"args\" object');\n      }\n\n      // get a mapping of arg values from the expression and from the renderable's schema\n      var argNames = (0, _lodash.uniq)(argInstances.map(function (arg) {\n        return arg.name;\n      }).concat(Object.keys(args)));\n      var dataArgs = argNames.map(function (argName) {\n        var arg = argInstances.find(function (arg) {\n          return arg.name === argName;\n        });\n\n        // if arg is not multi, only preserve the last value found\n        // otherwise, leave the value alone (including if the arg is not defined)\n        var isMulti = arg && arg.multi;\n        var argValues = args[argName] && !isMulti ? [(0, _lodash.last)(args[argName])] : args[argName];\n\n        return { arg: arg, argValues: argValues };\n      });\n\n      // props are passed to resolve and the returned object is mixed into the template props\n      var props = _extends({}, data, this.resolve(data), { typeInstance: this });\n\n      try {\n        // allow a hook to override the data args\n        var resolvedDataArgs = dataArgs.map(function (d) {\n          return _extends({}, d, _this2.resolveArg(d, props));\n        });\n\n        var argumentForms = (0, _lodash.compact)(resolvedDataArgs.map(function (d) {\n          return _this2.renderArg(props, d);\n        }));\n        var addableArgs = (0, _lodash.compact)(resolvedDataArgs.map(function (d) {\n          return _this2.getAddableArg(props, d);\n        }));\n\n        if (!addableArgs.length && !argumentForms.length) {\n          return null;\n        }\n\n        return _react2.default.createElement(\n          _sidebar_section.SidebarSection,\n          null,\n          _react2.default.createElement(\n            _sidebar_section_title.SidebarSectionTitle,\n            { title: argTypeDef.displayName, tip: argTypeDef.help },\n            addableArgs.length === 0 ? null : _react2.default.createElement(_arg_add_popover.ArgAddPopover, { options: addableArgs })\n          ),\n          argumentForms\n        );\n      } catch (e) {\n        return _react2.default.createElement(\n          _eui.EuiCallOut,\n          { color: 'danger', iconType: 'cross', title: 'Expression rendering error' },\n          _react2.default.createElement(\n            'p',\n            null,\n            e.message\n          )\n        );\n      }\n    }\n  }]);\n\n  return FunctionForm;\n}(_base_form.BaseForm);",null]}