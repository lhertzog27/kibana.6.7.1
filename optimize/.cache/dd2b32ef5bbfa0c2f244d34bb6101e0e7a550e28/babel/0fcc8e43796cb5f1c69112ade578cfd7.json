{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/settings/components/component_registry.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/settings/components/component_registry.js","mtime":1567631711592},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tryRegisterSettingsComponent = tryRegisterSettingsComponent;\nexports.registerSettingsComponent = registerSettingsComponent;\nexports.getSettingsComponent = getSettingsComponent;\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar registry = {};\n\n/**\n * Attempts to register the provided component.\n * If a component with that ID is already registered, then the registration fails.\n *\n * @param {*} id the id of the component to register\n * @param {*} component the component\n */\nfunction tryRegisterSettingsComponent(id, component) {\n  if (id in registry) {\n    return false;\n  }\n\n  registerSettingsComponent(id, component);\n  return true;\n}\n\n/**\n * Attempts to register the provided component, with the ability to optionally allow\n * the component to override an existing one.\n *\n * If the intent is to override, then `allowOverride` must be set to true, otherwise an exception is thrown.\n *\n * @param {*} id the id of the component to register\n * @param {*} component the component\n * @param {*} allowOverride (default: false) - optional flag to allow this component to override a previously registered component\n */\nfunction registerSettingsComponent(id, component) {\n  var allowOverride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!allowOverride && id in registry) {\n    throw new Error(\"Component with id \" + id + \" is already registered.\");\n  }\n\n  // Setting a display name if one does not already exist.\n  // This enhances the snapshots, as well as the debugging experience.\n  if (!component.displayName) {\n    component.displayName = id;\n  }\n\n  registry[id] = component;\n}\n\n/**\n * Retrieve a registered component by its ID.\n * If the component does not exist, then an exception is thrown.\n *\n * @param {*} id the ID of the component to retrieve\n */\nfunction getSettingsComponent(id) {\n  if (!(id in registry)) {\n    throw new Error(\"Component not found with id \" + id);\n  }\n  return registry[id];\n}",null]}