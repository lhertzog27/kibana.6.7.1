{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/state/selectors/app.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/state/selectors/app.js","mtime":1567631711936},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canUserWrite = canUserWrite;\nexports.isFirstLoad = isFirstLoad;\nexports.getFullscreen = getFullscreen;\nexports.getServerFunctions = getServerFunctions;\nexports.getAppReady = getAppReady;\nexports.getBasePath = getBasePath;\nexports.getReportingBrowserType = getReportingBrowserType;\nexports.isAppReady = isAppReady;\n\nvar _lodash = require('lodash');\n\n// page getters\nfunction canUserWrite(state) {\n  return (0, _lodash.get)(state, 'transient.canUserWrite', true);\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */\n\nfunction isFirstLoad(state) {\n  return (0, _lodash.get)(state, 'transient.isFirstLoad', true);\n}\n\nfunction getFullscreen(state) {\n  return (0, _lodash.get)(state, 'transient.fullscreen', false);\n}\n\nfunction getServerFunctions(state) {\n  return (0, _lodash.get)(state, 'app.serverFunctions');\n}\n\nfunction getAppReady(state) {\n  return (0, _lodash.get)(state, 'app.ready');\n}\n\nfunction getBasePath(state) {\n  return (0, _lodash.get)(state, 'app.basePath');\n}\n\nfunction getReportingBrowserType(state) {\n  return (0, _lodash.get)(state, 'app.reportingBrowserType');\n}\n\n// return true only when the required parameters are in the state\nfunction isAppReady(state) {\n  var appReady = getAppReady(state);\n  return appReady === true;\n}",null]}