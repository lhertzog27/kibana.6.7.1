{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/field_editor/components/scripting_help/scripting_syntax.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/field_editor/components/scripting_help/scripting_syntax.js","mtime":1567631711728},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScriptingSyntax = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _documentation_links = require('ui/documentation_links');\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar ScriptingSyntax = exports.ScriptingSyntax = function ScriptingSyntax() {\n  return _react2.default.createElement(\n    _react.Fragment,\n    null,\n    _react2.default.createElement(_eui.EuiSpacer, null),\n    _react2.default.createElement(\n      _eui.EuiText,\n      null,\n      _react2.default.createElement(\n        'h3',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, { id: 'common.ui.fieldEditor.syntaxHeader', defaultMessage: 'Syntax' })\n      ),\n      _react2.default.createElement(\n        'p',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'common.ui.fieldEditor.syntax.defaultLabel.defaultDetail',\n          defaultMessage: 'By default, Kibana scripted fields use {painless}, a simple and secure scripting language designed specifically for use with Elasticsearch, to access values in the document use the following format:',\n          values: {\n            painless: _react2.default.createElement(\n              _eui.EuiLink,\n              {\n                target: '_window',\n                href: (0, _documentation_links.getDocLink)('scriptedFields.painless')\n              },\n              _react2.default.createElement(_react3.FormattedMessage, { id: 'common.ui.fieldEditor.syntax.defaultLabel.painlessLink', defaultMessage: 'Painless' }),\n              ' ',\n              _react2.default.createElement(_eui.EuiIcon, { type: 'link' })\n            )\n          }\n        })\n      ),\n      _react2.default.createElement(\n        'p',\n        null,\n        _react2.default.createElement(\n          _eui.EuiCode,\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, { id: 'common.ui.fieldEditor.syntax.default.formatLabel', defaultMessage: 'doc[\\'some_field\\'].value' })\n        )\n      ),\n      _react2.default.createElement(\n        'p',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'common.ui.fieldEditor.syntax.painlessLabel.painlessDetail',\n          defaultMessage: 'Painless is powerful but easy to use. It provides access to many {javaAPIs}. Read up on its {syntax} and you\\'ll be up to speed in no time!',\n          values: {\n            javaAPIs: _react2.default.createElement(\n              _eui.EuiLink,\n              {\n                target: '_window',\n                href: (0, _documentation_links.getDocLink)('scriptedFields.painlessApi')\n              },\n              _react2.default.createElement(_react3.FormattedMessage, { id: 'common.ui.fieldEditor.syntax.painlessLabel.javaAPIsLink', defaultMessage: 'native Java APIs' }),\n              '\\xA0',\n              _react2.default.createElement(_eui.EuiIcon, { type: 'link' })\n            ),\n            syntax: _react2.default.createElement(\n              _eui.EuiLink,\n              {\n                target: '_window',\n                href: (0, _documentation_links.getDocLink)('scriptedFields.painlessSyntax')\n              },\n              _react2.default.createElement(_react3.FormattedMessage, { id: 'common.ui.fieldEditor.syntax.painlessLabel.syntaxLink', defaultMessage: 'syntax' }),\n              '\\xA0',\n              _react2.default.createElement(_eui.EuiIcon, { type: 'link' })\n            )\n          }\n        })\n      ),\n      _react2.default.createElement(\n        'p',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'common.ui.fieldEditor.syntax.kibanaLabel',\n          defaultMessage: 'Kibana currently imposes one special limitation on the painless scripts you write. They cannot contain named functions.'\n        })\n      ),\n      _react2.default.createElement(\n        'p',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'common.ui.fieldEditor.syntax.lucene.commonLabel.commonDetail',\n          defaultMessage: 'Coming from an older version of Kibana? The {lucene} you know and love are still available. Lucene expressions are a lot like JavaScript, but limited to basic arithmetic, bitwise and comparison operations.',\n          values: {\n            lucene: _react2.default.createElement(\n              _eui.EuiLink,\n              {\n                target: '_window',\n                href: (0, _documentation_links.getDocLink)('scriptedFields.luceneExpressions')\n              },\n              _react2.default.createElement(_react3.FormattedMessage, { id: 'common.ui.fieldEditor.syntax.lucene.commonLabel.luceneLink', defaultMessage: 'Lucene Expressions' }),\n              '\\xA0',\n              _react2.default.createElement(_eui.EuiIcon, { type: 'link' })\n            )\n          }\n        })\n      ),\n      _react2.default.createElement(\n        'p',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'common.ui.fieldEditor.syntax.lucene.limitsLabel',\n          defaultMessage: 'There are a few limitations when using Lucene Expressions:'\n        })\n      ),\n      _react2.default.createElement(\n        'ul',\n        null,\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.limits.typesLabel',\n            defaultMessage: 'Only numeric, boolean, date, and geo_point fields may be accessed'\n          })\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.limits.fieldsLabel',\n            defaultMessage: 'Stored fields are not available'\n          })\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.limits.sparseLabel',\n            defaultMessage: 'If a field is sparse (only some documents contain a value), documents missing the field will have a value of 0'\n          })\n        )\n      ),\n      _react2.default.createElement(\n        'p',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'common.ui.fieldEditor.syntax.lucene.operationsLabel',\n          defaultMessage: 'Here are all the operations available to lucene expressions:'\n        })\n      ),\n      _react2.default.createElement(\n        'ul',\n        null,\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.operations.arithmeticLabel',\n            defaultMessage: 'Arithmetic operators: {operators}',\n            values: { operators: _react2.default.createElement(\n                'code',\n                null,\n                '+ - * / %'\n              ) }\n          })\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.operations.bitwiseLabel',\n            defaultMessage: 'Bitwise operators: {operators}',\n            values: { operators: _react2.default.createElement(\n                'code',\n                null,\n                '| & ^ ~ << >> >>>'\n              ) }\n          })\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.operations.booleanLabel',\n            defaultMessage: 'Boolean operators (including the ternary operator): {operators}',\n            values: { operators: _react2.default.createElement(\n                'code',\n                null,\n                '&& || ! ?:'\n              ) }\n          })\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.operations.comparisonLabel',\n            defaultMessage: 'Comparison operators: {operators}',\n            values: { operators: _react2.default.createElement(\n                'code',\n                null,\n                '< <= == >= >'\n              ) }\n          })\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.operations.mathLabel',\n            defaultMessage: 'Common mathematic functions: {operators}',\n            values: { operators: _react2.default.createElement(\n                'code',\n                null,\n                'abs ceil exp floor ln log10 logn max min sqrt pow'\n              ) }\n          })\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.operations.trigLabel',\n            defaultMessage: 'Trigonometric library functions: {operators}',\n            values: { operators: _react2.default.createElement(\n                'code',\n                null,\n                'acosh acos asinh asin atanh atan atan2 cosh cos sinh sin tanh tan'\n              ) }\n          })\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.operations.distanceLabel',\n            defaultMessage: 'Distance functions: {operators}',\n            values: { operators: _react2.default.createElement(\n                'code',\n                null,\n                'haversin'\n              ) }\n          })\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'common.ui.fieldEditor.syntax.lucene.operations.miscellaneousLabel',\n            defaultMessage: 'Miscellaneous functions: {operators}',\n            values: { operators: _react2.default.createElement(\n                'code',\n                null,\n                'min, max'\n              ) }\n          })\n        )\n      )\n    )\n  );\n};",null]}