{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/state/middleware/element_stats.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/state/middleware/element_stats.js","mtime":1567631711935},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.elementStats = undefined;\n\nvar _transient = require('../actions/transient');\n\nvar _workpad = require('../selectors/workpad');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar elementStats = exports.elementStats = function elementStats(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      // execute the action\n      next(action);\n\n      // read the new state\n      var state = getState();\n\n      var stats = (0, _workpad.getElementStats)(state);\n      var total = (0, _workpad.getAllElements)(state).length;\n      var counts = (0, _workpad.getElementCounts)(state);\n      var ready = counts.ready,\n          error = counts.error;\n\n      // TODO: this should come from getElementStats, once we've gotten element status fixed\n\n      var pending = total - ready - error;\n\n      if (total > 0 && (ready !== stats.ready || pending !== stats.pending || error !== stats.error || total !== stats.total)) {\n        dispatch((0, _transient.setElementStats)({ total: total, ready: ready, pending: pending, error: error }));\n      }\n    };\n  };\n};",null]}