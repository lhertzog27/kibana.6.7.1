{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad_header/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad_header/index.js","mtime":1567631711929},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkpadHeader = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nvar _recompose = require('recompose');\n\nvar _reactRedux = require('react-redux');\n\nvar _app = require('../../state/selectors/app');\n\nvar _workpad = require('../../state/selectors/workpad');\n\nvar _workpad2 = require('../../state/actions/workpad');\n\nvar _elements = require('../../state/actions/elements');\n\nvar _workpad_header = require('./workpad_header');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isWriteable: (0, _workpad.isWriteable)(state) && (0, _app.canUserWrite)(state),\n    canUserWrite: (0, _app.canUserWrite)(state),\n    selectedPage: (0, _workpad.getSelectedPage)(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setWriteable: function setWriteable(isWriteable) {\n      return dispatch((0, _workpad2.setWriteable)(isWriteable));\n    },\n    addElement: function addElement(pageId) {\n      return function (partialElement) {\n        return dispatch((0, _elements.addElement)(pageId, partialElement));\n      };\n    }\n  };\n};\n\nvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n  return _extends({}, stateProps, dispatchProps, ownProps, {\n    addElement: dispatchProps.addElement(stateProps.selectedPage),\n    toggleWriteable: function toggleWriteable() {\n      return dispatchProps.setWriteable(!stateProps.isWriteable);\n    }\n  });\n};\n\nvar WorkpadHeader = exports.WorkpadHeader = (0, _recompose.compose)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps), (0, _recompose.withState)('showElementModal', 'setShowElementModal', false))(_workpad_header.WorkpadHeader);",null]}