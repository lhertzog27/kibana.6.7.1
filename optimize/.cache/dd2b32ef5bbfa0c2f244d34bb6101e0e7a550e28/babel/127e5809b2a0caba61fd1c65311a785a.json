{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/full_time_range_selector/full_time_range_selector_directive.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/full_time_range_selector/full_time_range_selector_directive.js","mtime":1567631712032},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _full_time_range_selector = require('./full_time_range_selector.html');\n\nvar _full_time_range_selector2 = _interopRequireDefault(_full_time_range_selector);\n\nvar _full_time_range_selector_service = require('plugins/ml/components/full_time_range_selector/full_time_range_selector_service');\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = _modules.uiModules.get('apps/ml'); /*\n                                                  * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                  * or more contributor license agreements. Licensed under the Elastic License;\n                                                  * you may not use this file except in compliance with the Elastic License.\n                                                  */\n\n_module.directive('mlFullTimeRangeSelector', function (Private) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: _full_time_range_selector2.default,\n    scope: {\n      indexPattern: '=',\n      disabled: '=',\n      query: '='\n    },\n    controller: function controller($scope) {\n      var mlFullTimeRangeSelectorService = Private(_full_time_range_selector_service.FullTimeRangeSelectorServiceProvider);\n\n      $scope.setFullTimeRange = function () {\n        mlFullTimeRangeSelectorService.setFullTimeRange($scope.indexPattern, $scope.query);\n      };\n    }\n  };\n});",null]}