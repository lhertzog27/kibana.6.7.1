{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_response/tabify/_buckets.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_response/tabify/_buckets.js","mtime":1567631711693},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TabifyBuckets = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction TabifyBuckets(aggResp, aggParams, timeRange) {\n  if (_lodash2.default.has(aggResp, 'buckets')) {\n    this.buckets = aggResp.buckets;\n  } else if (aggResp) {\n    // Some Bucket Aggs only return a single bucket (like filter).\n    // In those instances, the aggResp is the content of the single bucket.\n    this.buckets = [aggResp];\n  } else {\n    this.buckets = [];\n  }\n\n  this.objectMode = _lodash2.default.isPlainObject(this.buckets);\n  if (this.objectMode) {\n    this._keys = _lodash2.default.keys(this.buckets);\n    this.length = this._keys.length;\n  } else {\n    this.length = this.buckets.length;\n  }\n\n  if (this.length && aggParams) {\n    this._orderBucketsAccordingToParams(aggParams);\n    if (aggParams.drop_partials) {\n      this._dropPartials(aggParams, timeRange);\n    }\n  }\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */\n\nTabifyBuckets.prototype.forEach = function (fn) {\n  var buckets = this.buckets;\n\n  if (this.objectMode) {\n    this._keys.forEach(function (key) {\n      fn(buckets[key], key);\n    });\n  } else {\n    buckets.forEach(function (bucket) {\n      fn(bucket, bucket.key);\n    });\n  }\n};\n\nTabifyBuckets.prototype._isRangeEqual = function (range1, range2) {\n  return _lodash2.default.get(range1, 'from', null) === _lodash2.default.get(range2, 'from', null) && _lodash2.default.get(range1, 'to', null) === _lodash2.default.get(range2, 'to', null);\n};\n\nTabifyBuckets.prototype._orderBucketsAccordingToParams = function (params) {\n  var _this = this;\n\n  if (params.filters && this.objectMode) {\n    this._keys = params.filters.map(function (filter) {\n      var query = _lodash2.default.get(filter, 'input.query.query_string.query', filter.input.query);\n      var queryString = typeof query === 'string' ? query : JSON.stringify(query);\n      return filter.label || queryString || '*';\n    });\n  } else if (params.ranges && this.objectMode) {\n    this._keys = params.ranges.map(function (range) {\n      return _lodash2.default.findKey(_this.buckets, function (el) {\n        return _this._isRangeEqual(el, range);\n      });\n    });\n  } else if (params.ranges && params.field.type !== 'date') {\n    var ranges = params.ranges;\n    if (params.ipRangeType) {\n      ranges = params.ipRangeType === 'mask' ? ranges.mask : ranges.fromTo;\n    }\n    this.buckets = ranges.map(function (range) {\n      if (range.mask) {\n        return _this.buckets.find(function (el) {\n          return el.key === range.mask;\n        });\n      }\n      return _this.buckets.find(function (el) {\n        return _this._isRangeEqual(el, range);\n      });\n    });\n  }\n};\n\n// dropPartials should only be called if the aggParam setting is enabled,\n// and the agg field is the same as the Time Range.\nTabifyBuckets.prototype._dropPartials = function (params, timeRange) {\n  if (!timeRange || this.buckets.length <= 1 || this.objectMode || params.field.name !== timeRange.name) {\n    return;\n  }\n\n  var interval = this.buckets[1].key - this.buckets[0].key;\n\n  this.buckets = this.buckets.filter(function (bucket) {\n    if (bucket.key < timeRange.gte) {\n      return false;\n    }\n    if (bucket.key + interval > timeRange.lte) {\n      return false;\n    }\n    return true;\n  });\n\n  this.length = this.buckets.length;\n};\n\nexports.TabifyBuckets = TabifyBuckets;",null]}