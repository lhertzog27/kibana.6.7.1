{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/uis/datasources/essql.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/uis/datasources/essql.js","mtime":1567631711910},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.essql = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _arg_helpers = require('../../../public/lib/arg_helpers');\n\nvar _template_from_react_component = require('../../../public/lib/template_from_react_component');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar EssqlDatasource = function (_PureComponent) {\n  _inherits(EssqlDatasource, _PureComponent);\n\n  function EssqlDatasource() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, EssqlDatasource);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EssqlDatasource.__proto__ || Object.getPrototypeOf(EssqlDatasource)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(EssqlDatasource, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var query = this.getQuery();\n      if (typeof query !== 'string') {\n        this.setArg(this.getArgName(), this.defaultQuery);\n      } else {\n        this.props.setInvalid(!query.trim());\n      }\n    }\n\n    // TODO: This is a terrible way of doing defaults. We need to find a way to read the defaults for the function\n    // and set them for the data source UI.\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var isInvalid = this.props.isInvalid;\n\n      return _react2.default.createElement(\n        _eui.EuiFormRow,\n        { isInvalid: isInvalid, label: 'Elasticsearch SQL query' },\n        _react2.default.createElement(_eui.EuiTextArea, {\n          placeholder: this.defaultQuery,\n          isInvalid: isInvalid,\n          className: 'canvasTextArea--code',\n          value: this.getQuery(),\n          onChange: this.onChange\n        })\n      );\n    }\n  }]);\n\n  return EssqlDatasource;\n}(_react.PureComponent);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.defaultQuery = 'SELECT * FROM \"logstash*\"';\n\n  this.getQuery = function () {\n    return (0, _arg_helpers.getSimpleArg)(_this2.getArgName(), _this2.props.args)[0];\n  };\n\n  this.getArgName = function () {\n    var args = _this2.props.args;\n\n    if ((0, _arg_helpers.getSimpleArg)('_', args)[0]) {\n      return '_';\n    }\n    if ((0, _arg_helpers.getSimpleArg)('q', args)[0]) {\n      return 'q';\n    }\n    return 'query';\n  };\n\n  this.setArg = function (name, value) {\n    var _props = _this2.props,\n        args = _props.args,\n        updateArgs = _props.updateArgs;\n\n    updateArgs && updateArgs(_extends({}, args, (0, _arg_helpers.setSimpleArg)(name, value)));\n  };\n\n  this.onChange = function (e) {\n    var value = e.target.value;\n\n    _this2.props.setInvalid(!value.trim());\n    _this2.setArg(_this2.getArgName(), value);\n  };\n};\n\nEssqlDatasource.propTypes = {\n  args: _propTypes2.default.object.isRequired,\n  updateArgs: _propTypes2.default.func,\n  isInvalid: _propTypes2.default.bool,\n  setInvalid: _propTypes2.default.func\n};\n\nvar essql = exports.essql = function essql() {\n  return {\n    name: 'essql',\n    displayName: 'Elasticsearch SQL',\n    help: 'Use Elasticsearch SQL to get a data table',\n    // Replace this with a SQL logo when we have one in EUI\n    image: 'logoElasticsearch',\n    template: (0, _template_from_react_component.templateFromReactComponent)(EssqlDatasource)\n  };\n};",null]}