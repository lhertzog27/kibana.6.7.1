{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad_loader/upload_workpad.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad_loader/upload_workpad.js","mtime":1567631711929},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uploadWorkpad = undefined;\n\nvar _lodash = require('lodash');\n\nvar _get_id = require('../../lib/get_id');\n\nvar _notify = require('../../lib/notify');\n\nvar uploadWorkpad = exports.uploadWorkpad = function uploadWorkpad(file, onUpload) {\n  if (!file) {\n    return;\n  }\n\n  if ((0, _lodash.get)(file, 'type') !== 'application/json') {\n    return _notify.notify.warning('Only JSON files are accepted', {\n      title: 'Couldn\\'t upload \\'' + (file.name || 'file') + '\\''\n    });\n  }\n  // TODO: Clean up this file, this loading stuff can, and should be, abstracted\n  var reader = new FileReader();\n\n  // handle reading the uploaded file\n  reader.onload = function () {\n    try {\n      var workpad = JSON.parse(reader.result);\n      workpad.id = (0, _get_id.getId)('workpad');\n\n      // sanity check for workpad object\n      if (!Array.isArray(workpad.pages) || workpad.pages.length === 0 || !workpad.assets) {\n        throw new Error('Some properties required for a Canvas workpad are missing.  Edit your JSON file to provide the correct property values and try again.');\n      }\n\n      onUpload(workpad);\n    } catch (e) {\n      _notify.notify.error(e, { title: 'Couldn\\'t upload \\'' + (file.name || 'file') + '\\'' });\n    }\n  };\n\n  // read the uploaded file\n  reader.readAsText(file);\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */",null]}