{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/asset_manager/asset_manager.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/asset_manager/asset_manager.js","mtime":1567631711919},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AssetManager = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _confirm_modal = require('../confirm_modal');\n\nvar _clipboard = require('../clipboard');\n\nvar _download = require('../download');\n\nvar _loading = require('../loading');\n\nvar _constants = require('../../../common/lib/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar AssetManager = exports.AssetManager = function (_React$PureComponent) {\n  _inherits(AssetManager, _React$PureComponent);\n\n  function AssetManager() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, AssetManager);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AssetManager.__proto__ || Object.getPrototypeOf(AssetManager)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      deleteId: null,\n      isModalVisible: false,\n      loading: false\n    }, _this._isMounted = true, _this.showModal = function () {\n      return _this.setState({ isModalVisible: true });\n    }, _this.closeModal = function () {\n      return _this.setState({ isModalVisible: false });\n    }, _this.doDelete = function () {\n      _this.resetDelete();\n      _this.props.removeAsset(_this.state.deleteId);\n    }, _this.handleFileUpload = function (files) {\n      _this.setState({ loading: true });\n      Promise.all(Array.from(files).map(function (file) {\n        return _this.props.onAssetAdd(file);\n      })).finally(function () {\n        _this._isMounted && _this.setState({ loading: false });\n      });\n    }, _this.addElement = function (assetId) {\n      _this.props.addImageElement(assetId);\n    }, _this.resetDelete = function () {\n      return _this.setState({ deleteId: null });\n    }, _this.renderAsset = function (asset) {\n      return _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { key: asset.id },\n        _react2.default.createElement(\n          _eui.EuiPanel,\n          { className: 'canvasAssetManager__asset', paddingSize: 's' },\n          _react2.default.createElement(\n            'div',\n            { className: 'canvasAssetManager__thumb canvasCheckered' },\n            _react2.default.createElement(_eui.EuiImage, {\n              className: 'canvasAssetManager__img',\n              size: 'original',\n              url: asset.value,\n              fullScreenIconColor: 'dark',\n              alt: 'Asset thumbnail',\n              style: { backgroundImage: 'url(' + asset.value + ')' }\n            })\n          ),\n          _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n          _react2.default.createElement(\n            _eui.EuiText,\n            { size: 'xs', className: 'eui-textBreakAll' },\n            _react2.default.createElement(\n              'p',\n              { className: 'eui-textBreakAll' },\n              _react2.default.createElement(\n                'strong',\n                null,\n                asset.id\n              ),\n              _react2.default.createElement('br', null),\n              _react2.default.createElement(\n                _eui.EuiTextColor,\n                { color: 'subdued' },\n                _react2.default.createElement(\n                  'small',\n                  null,\n                  '(',\n                  Math.round(asset.value.length / 1024),\n                  ' kb)'\n                )\n              )\n            )\n          ),\n          _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n          _react2.default.createElement(\n            _eui.EuiFlexGroup,\n            { alignItems: 'baseline', justifyContent: 'center', responsive: false },\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { className: 'asset-create-image', grow: false },\n              _react2.default.createElement(\n                _eui.EuiToolTip,\n                { content: 'Create image element' },\n                _react2.default.createElement(_eui.EuiButtonIcon, {\n                  iconType: 'vector',\n                  'aria-label': 'Create image element',\n                  onClick: function onClick() {\n                    _this.addElement(asset.id);\n                    _this.closeModal();\n                  }\n                })\n              )\n            ),\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { className: 'asset-download', grow: false },\n              _react2.default.createElement(\n                _eui.EuiToolTip,\n                { content: 'Download' },\n                _react2.default.createElement(\n                  _download.Download,\n                  { fileName: asset.id, content: asset.value },\n                  _react2.default.createElement(_eui.EuiButtonIcon, { iconType: 'sortDown', 'aria-label': 'Download' })\n                )\n              )\n            ),\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false },\n              _react2.default.createElement(\n                _eui.EuiToolTip,\n                { content: 'Copy id to clipboard' },\n                _react2.default.createElement(\n                  _clipboard.Clipboard,\n                  {\n                    content: asset.id,\n                    onCopy: function onCopy(result) {\n                      return result && _this.props.copyAsset(asset.id);\n                    }\n                  },\n                  _react2.default.createElement(_eui.EuiButtonIcon, { iconType: 'copyClipboard', 'aria-label': 'Copy id to clipboard' })\n                )\n              )\n            ),\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false },\n              _react2.default.createElement(\n                _eui.EuiToolTip,\n                { content: 'Delete' },\n                _react2.default.createElement(_eui.EuiButtonIcon, {\n                  color: 'danger',\n                  iconType: 'trash',\n                  'aria-label': 'Delete',\n                  onClick: function onClick() {\n                    return _this.setState({ deleteId: asset.id });\n                  }\n                })\n              )\n            )\n          )\n        )\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(AssetManager, [{\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          isModalVisible = _state.isModalVisible,\n          loading = _state.loading;\n      var assetValues = this.props.assetValues;\n\n\n      var assetsTotal = Math.round(assetValues.reduce(function (total, _ref2) {\n        var value = _ref2.value;\n        return total + value.length;\n      }, 0) / 1024);\n\n      var percentageUsed = Math.round(assetsTotal / _constants.ASSET_MAX_SIZE * 100);\n\n      var emptyAssets = _react2.default.createElement(\n        _eui.EuiPanel,\n        { className: 'canvasAssetManager__emptyPanel' },\n        _react2.default.createElement(_eui.EuiEmptyPrompt, {\n          iconType: 'importAction',\n          title: _react2.default.createElement(\n            'h2',\n            null,\n            'No available assets'\n          ),\n          titleSize: 's',\n          body: _react2.default.createElement(\n            _react.Fragment,\n            null,\n            _react2.default.createElement(\n              'p',\n              null,\n              'Upload your assets above to get started'\n            )\n          )\n        })\n      );\n\n      var assetModal = isModalVisible ? _react2.default.createElement(\n        _eui.EuiOverlayMask,\n        null,\n        _react2.default.createElement(\n          _eui.EuiModal,\n          {\n            onClose: this.closeModal,\n            className: 'canvasAssetManager canvasModal--fixedSize',\n            maxWidth: '1000px'\n          },\n          _react2.default.createElement(\n            _eui.EuiModalHeader,\n            { className: 'canvasAssetManager__modalHeader' },\n            _react2.default.createElement(\n              _eui.EuiModalHeaderTitle,\n              { className: 'canvasAssetManager__modalHeaderTitle' },\n              'Manage workpad assets'\n            ),\n            _react2.default.createElement(\n              _eui.EuiFlexGroup,\n              { className: 'canvasAssetManager__fileUploadWrapper' },\n              _react2.default.createElement(\n                _eui.EuiFlexItem,\n                { grow: false },\n                loading ? _react2.default.createElement(_loading.Loading, { animated: true, text: 'Uploading images' }) : _react2.default.createElement(_eui.EuiFilePicker, {\n                  initialPromptText: 'Select or drag and drop images',\n                  compressed: true,\n                  multiple: true,\n                  onChange: this.handleFileUpload,\n                  accept: 'image/*'\n                })\n              )\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiModalBody,\n            null,\n            _react2.default.createElement(\n              _eui.EuiText,\n              { size: 's', color: 'subdued' },\n              _react2.default.createElement(\n                'p',\n                null,\n                'Below are the image assets that you added to this workpad. To reclaim space, delete assets that you no longer need. Unfortunately, any assets that are actually in use cannot be determined at this time.'\n              )\n            ),\n            _react2.default.createElement(_eui.EuiSpacer, null),\n            assetValues.length ? _react2.default.createElement(\n              _eui.EuiFlexGrid,\n              { responsive: false, columns: 4 },\n              assetValues.map(this.renderAsset)\n            ) : emptyAssets\n          ),\n          _react2.default.createElement(\n            _eui.EuiModalFooter,\n            { className: 'canvasAssetManager__modalFooter' },\n            _react2.default.createElement(\n              _eui.EuiFlexGroup,\n              { className: 'canvasAssetManager__meterWrapper', responsive: false },\n              _react2.default.createElement(\n                _eui.EuiFlexItem,\n                null,\n                _react2.default.createElement(_eui.EuiProgress, {\n                  value: assetsTotal,\n                  max: _constants.ASSET_MAX_SIZE,\n                  color: percentageUsed < 90 ? 'secondary' : 'danger',\n                  size: 's',\n                  'aria-labelledby': 'CanvasAssetManagerLabel'\n                })\n              ),\n              _react2.default.createElement(\n                _eui.EuiFlexItem,\n                { grow: false, className: 'eui-textNoWrap' },\n                _react2.default.createElement(\n                  _eui.EuiText,\n                  { id: 'CanvasAssetManagerLabel' },\n                  percentageUsed,\n                  '% space used'\n                )\n              )\n            ),\n            _react2.default.createElement(\n              _eui.EuiButton,\n              { size: 's', onClick: this.closeModal },\n              'Close'\n            )\n          )\n        )\n      ) : null;\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiButtonEmpty,\n          { size: 's', onClick: this.showModal },\n          'Manage assets'\n        ),\n        assetModal,\n        _react2.default.createElement(_confirm_modal.ConfirmModal, {\n          isOpen: this.state.deleteId != null,\n          title: 'Remove Asset',\n          message: 'Are you sure you want to remove this asset?',\n          confirmButtonText: 'Remove',\n          onConfirm: this.doDelete,\n          onCancel: this.resetDelete\n        })\n      );\n    }\n  }]);\n\n  return AssetManager;\n}(_react2.default.PureComponent);\n\nAssetManager.propTypes = {\n  assetValues: _propTypes2.default.array,\n  addImageElement: _propTypes2.default.func,\n  removeAsset: _propTypes2.default.func.isRequired,\n  copyAsset: _propTypes2.default.func.isRequired,\n  onAssetAdd: _propTypes2.default.func.isRequired\n};",null]}