{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/store/ui.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/store/ui.js","mtime":1567631712022},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIsFullScreen = exports.getIsSetViewOpen = exports.getFlyoutDisplay = exports.FLYOUT_STATE = exports.SET_FULL_SCREEN = exports.OPEN_SET_VIEW = exports.CLOSE_SET_VIEW = exports.UPDATE_FLYOUT = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\n\nexports.updateFlyout = updateFlyout;\nexports.closeSetView = closeSetView;\nexports.openSetView = openSetView;\nexports.exitFullScreen = exitFullScreen;\nexports.enableFullScreen = enableFullScreen;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar UPDATE_FLYOUT = exports.UPDATE_FLYOUT = 'UPDATE_FLYOUT';\nvar CLOSE_SET_VIEW = exports.CLOSE_SET_VIEW = 'CLOSE_SET_VIEW';\nvar OPEN_SET_VIEW = exports.OPEN_SET_VIEW = 'OPEN_SET_VIEW';\nvar SET_FULL_SCREEN = exports.SET_FULL_SCREEN = 'SET_FULL_SCREEN';\nvar FLYOUT_STATE = exports.FLYOUT_STATE = {\n  NONE: 'NONE',\n  LAYER_PANEL: 'LAYER_PANEL',\n  ADD_LAYER_WIZARD: 'ADD_LAYER_WIZARD'\n};\n\nvar INITIAL_STATE = {\n  flyoutDisplay: FLYOUT_STATE.NONE,\n  isFullScreen: false\n};\n\n// Reducer\nfunction ui() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments[1];\n\n  switch (action.type) {\n    case UPDATE_FLYOUT:\n      return _extends({}, state, { flyoutDisplay: action.display });\n    case CLOSE_SET_VIEW:\n      return _extends({}, state, { isSetViewOpen: false });\n    case OPEN_SET_VIEW:\n      return _extends({}, state, { isSetViewOpen: true });\n    case SET_FULL_SCREEN:\n      return _extends({}, state, { isFullScreen: action.isFullScreen });\n    default:\n      return state;\n  }\n}\n\n// Actions\nfunction updateFlyout(display) {\n  return {\n    type: UPDATE_FLYOUT,\n    display: display\n  };\n}\nfunction closeSetView() {\n  return {\n    type: CLOSE_SET_VIEW\n  };\n}\nfunction openSetView() {\n  return {\n    type: OPEN_SET_VIEW\n  };\n}\nfunction exitFullScreen() {\n  return {\n    type: SET_FULL_SCREEN,\n    isFullScreen: false\n  };\n}\nfunction enableFullScreen() {\n  return {\n    type: SET_FULL_SCREEN,\n    isFullScreen: true\n  };\n}\n\n// Selectors\nvar getFlyoutDisplay = exports.getFlyoutDisplay = function getFlyoutDisplay(_ref) {\n  var ui = _ref.ui;\n  return ui && ui.flyoutDisplay || INITIAL_STATE.flyoutDisplay;\n};\nvar getIsSetViewOpen = exports.getIsSetViewOpen = function getIsSetViewOpen(_ref2) {\n  var ui = _ref2.ui;\n  return _lodash2.default.get(ui, 'isSetViewOpen', false);\n};\nvar getIsFullScreen = exports.getIsFullScreen = function getIsFullScreen(_ref3) {\n  var ui = _ref3.ui;\n  return _lodash2.default.get(ui, 'isFullScreen', false);\n};\n\nexports.default = ui;",null]}