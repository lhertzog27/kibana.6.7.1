{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/components/follower_index_form/follower_index_form.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/components/follower_index_form/follower_index_form.js","mtime":1567631711951},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FollowerIndexForm = exports.updateFormErrors = exports.updateFields = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp, _initialiseProps;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _indices = require('ui/indices');\n\nvar _notify = require('ui/notify');\n\nvar _eui = require('@elastic/eui');\n\nvar _input_validation = require('../../services/input_validation');\n\nvar _routing = require('../../services/routing');\n\nvar _routing2 = _interopRequireDefault(_routing);\n\nvar _api = require('../../services/api');\n\nvar _constants = require('../../constants');\n\nvar _section_error = require('../section_error');\n\nvar _form_entry_row = require('../form_entry_row');\n\nvar _advanced_settings_fields = require('./advanced_settings_fields');\n\nvar _query_params = require('../../services/query_params');\n\nvar _get_remote_cluster_name = require('../../services/get_remote_cluster_name');\n\nvar _remote_clusters_form_field = require('../remote_clusters_form_field');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar indexNameIllegalCharacters = _indices.INDEX_ILLEGAL_CHARACTERS_VISIBLE.join(' ');\n\nvar fieldToValidatorMap = _advanced_settings_fields.advancedSettingsFields.reduce(function (map, advancedSetting) {\n  var field = advancedSetting.field,\n      validator = advancedSetting.validator;\n\n  map[field] = validator;\n  return map;\n}, {\n  'name': _input_validation.indexNameValidator,\n  'leaderIndex': _input_validation.leaderIndexValidator\n});\n\nvar getEmptyFollowerIndex = function getEmptyFollowerIndex() {\n  var remoteClusterName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return _extends({\n    name: '',\n    remoteCluster: remoteClusterName,\n    leaderIndex: ''\n  }, _advanced_settings_fields.emptyAdvancedSettings);\n};\n\n/**\n * State transitions: fields update\n */\nvar updateFields = exports.updateFields = function updateFields(fields) {\n  return function (_ref) {\n    var followerIndex = _ref.followerIndex;\n    return {\n      followerIndex: _extends({}, followerIndex, fields)\n    };\n  };\n};\n\n/**\n * State transitions: errors update\n */\nvar updateFormErrors = exports.updateFormErrors = function updateFormErrors(errors) {\n  return function (_ref2) {\n    var fieldsErrors = _ref2.fieldsErrors;\n    return {\n      fieldsErrors: _extends({}, fieldsErrors, errors)\n    };\n  };\n};\n\nvar FollowerIndexForm = (0, _react3.injectI18n)((_temp = _class = function (_PureComponent) {\n  _inherits(_class, _PureComponent);\n\n  function _class(props) {\n    _classCallCheck(this, _class);\n\n    var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var search = _routing2.default.reactRouter.route.location.search;\n\n    var queryParams = (0, _query_params.extractQueryParams)(search);\n\n    var isNew = _this.props.followerIndex === undefined;\n    var remoteClusterName = (0, _get_remote_cluster_name.getRemoteClusterName)(_this.props.remoteClusters, queryParams.cluster);\n    var followerIndex = isNew ? getEmptyFollowerIndex(remoteClusterName) : _extends({}, getEmptyFollowerIndex(), _this.props.followerIndex);\n    var areAdvancedSettingsVisible = isNew ? false : // eslint-disable-line no-nested-ternary\n    (0, _advanced_settings_fields.areAdvancedSettingsEdited)(followerIndex) ? true : false;\n\n    var fieldsErrors = _this.getFieldsErrors(followerIndex);\n\n    _this.state = {\n      isNew: isNew,\n      followerIndex: followerIndex,\n      fieldsErrors: fieldsErrors,\n      areErrorsVisible: false,\n      areAdvancedSettingsVisible: areAdvancedSettingsVisible,\n      isValidatingIndexName: false\n    };\n\n    _this.cachedAdvancedSettings = {};\n    _this.validateIndexName = (0, _lodash.debounce)(_this.validateIndexName, 500);\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: 'isFormValid',\n    value: function isFormValid() {\n      return Object.values(this.state.fieldsErrors).every(function (error) {\n        return error === undefined || error === null;\n      });\n    }\n  }, {\n    key: 'renderApiErrors',\n\n\n    /**\n     * Sections Renders\n     */\n    value: function renderApiErrors() {\n      var _props = this.props,\n          apiError = _props.apiError,\n          intl = _props.intl;\n\n\n      if (apiError) {\n        var title = intl.formatMessage({\n          id: 'xpack.crossClusterReplication.followerIndexForm.savingErrorTitle',\n          defaultMessage: 'Can\\'t create follower index'\n        });\n        var leaderIndex = this.state.followerIndex.leaderIndex;\n\n        var error = apiError.status === 404 ? {\n          data: {\n            message: intl.formatMessage({\n              id: 'xpack.crossClusterReplication.followerIndexForm.leaderIndexNotFoundError',\n              defaultMessage: 'The leader index \\'{leaderIndex}\\' does not exist.'\n            }, { leaderIndex: leaderIndex })\n          }\n        } : apiError;\n\n        return _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(_section_error.SectionError, { title: title, error: error }),\n          _react2.default.createElement(_eui.EuiSpacer, { size: 'l' })\n        );\n      }\n\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        this.renderForm(),\n        this.renderLoading()\n      );\n    }\n  }]);\n\n  return _class;\n}(_react.PureComponent), _class.propTypes = {\n  saveFollowerIndex: _propTypes2.default.func.isRequired,\n  clearApiError: _propTypes2.default.func.isRequired,\n  followerIndex: _propTypes2.default.object,\n  apiError: _propTypes2.default.object,\n  apiStatus: _propTypes2.default.string.isRequired,\n  remoteClusters: _propTypes2.default.array,\n  saveButtonLabel: _propTypes2.default.node\n}, _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onFieldsChange = function (fields) {\n    _this2.setState(updateFields(fields));\n\n    var newFields = _extends({}, _this2.state.fields, fields);\n\n    _this2.setState(updateFormErrors(_this2.getFieldsErrors(newFields)));\n\n    if (_this2.props.apiError) {\n      _this2.props.clearApiError();\n    }\n  };\n\n  this.getFieldsErrors = function (newFields) {\n    return Object.keys(newFields).reduce(function (errors, field) {\n      var validator = fieldToValidatorMap[field];\n      var value = newFields[field];\n\n      if (validator) {\n        var error = validator(value);\n        errors[field] = error;\n      }\n\n      return errors;\n    }, {});\n  };\n\n  this.onIndexNameChange = function (_ref3) {\n    var name = _ref3.name;\n\n    _this2.onFieldsChange({ name: name });\n\n    if (!name || !name.trim()) {\n      _this2.setState({\n        isValidatingIndexName: false\n      });\n\n      return;\n    }\n\n    _this2.setState({\n      isValidatingIndexName: true\n    });\n\n    _this2.validateIndexName(name);\n  };\n\n  this.validateIndexName = function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(name) {\n      var indices, doesExist, error;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return (0, _api.loadIndices)();\n\n            case 3:\n              indices = _context.sent;\n              doesExist = indices.some(function (index) {\n                return index.name === name;\n              });\n\n              if (doesExist) {\n                error = {\n                  message: _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.crossClusterReplication.followerIndexForm.indexAlreadyExistError',\n                    defaultMessage: 'An index with the same name already exists.'\n                  }),\n                  alwaysVisible: true\n                };\n\n\n                _this2.setState(updateFormErrors({ name: error }));\n              }\n\n              _this2.setState({\n                isValidatingIndexName: false\n              });\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context['catch'](0);\n\n              if (!(_context.t0 && _context.t0.data)) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt('return', _this2.setState({\n                isValidatingIndexName: false\n              }));\n\n            case 13:\n\n              // This error isn't an HTTP error, so let the fatal error screen tell the user something\n              // unexpected happened.\n              (0, _notify.fatalError)(_context.t0, _i18n.i18n.translate('xpack.crossClusterReplication.followerIndexForm.indexNameValidationFatalErrorTitle', {\n                defaultMessage: 'Follower Index Form index name validation'\n              }));\n\n            case 14:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2, [[0, 9]]);\n    }));\n\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  this.onClusterChange = function (remoteCluster) {\n    _this2.onFieldsChange({ remoteCluster: remoteCluster });\n  };\n\n  this.getFields = function () {\n    return _this2.state.followerIndex;\n  };\n\n  this.toggleAdvancedSettings = function (event) {\n    // If the user edits the advanced settings but then hides them, we need to make sure the\n    // edited values don't get sent to the API when the user saves, but we *do* want to restore\n    // these values to the form when the user re-opens the advanced settings.\n    if (event.target.checked) {\n      // Apply the cached advanced settings to the advanced settings form.\n      _this2.onFieldsChange(_this2.cachedAdvancedSettings);\n\n      // Reset the cache of the advanced settings.\n      _this2.cachedAdvancedSettings = {};\n\n      // Show the advanced settings.\n      return _this2.setState({\n        areAdvancedSettingsVisible: true\n      });\n    }\n\n    // Clear the advanced settings form.\n    _this2.onFieldsChange(_advanced_settings_fields.emptyAdvancedSettings);\n\n    // Save a cache of the advanced settings.\n    var fields = _this2.getFields();\n    _this2.cachedAdvancedSettings = _advanced_settings_fields.advancedSettingsFields.reduce(function (cache, _ref5) {\n      var field = _ref5.field;\n\n      var value = fields[field];\n      if (value !== '') {\n        cache[field] = value;\n      }\n      return cache;\n    }, {});\n\n    // Hide the advanced settings.\n    _this2.setState({\n      areAdvancedSettingsVisible: false\n    });\n  };\n\n  this.sendForm = function () {\n    var isFormValid = _this2.isFormValid();\n\n    _this2.setState({ areErrorsVisible: !isFormValid });\n\n    if (!isFormValid) {\n      return;\n    }\n\n    var _getFields = _this2.getFields(),\n        name = _getFields.name,\n        followerIndex = _objectWithoutProperties(_getFields, ['name']);\n\n    _this2.props.saveFollowerIndex(name, followerIndex);\n  };\n\n  this.cancelForm = function () {\n    _routing2.default.navigate('/follower_indices');\n  };\n\n  this.renderForm = function () {\n    var _state = _this2.state,\n        followerIndex = _state.followerIndex,\n        isNew = _state.isNew,\n        areErrorsVisible = _state.areErrorsVisible,\n        areAdvancedSettingsVisible = _state.areAdvancedSettingsVisible,\n        fieldsErrors = _state.fieldsErrors,\n        isValidatingIndexName = _state.isValidatingIndexName;\n\n    /**\n     * Follower index name\n     */\n\n    var indexNameHelpText = _react2.default.createElement(\n      _react.Fragment,\n      null,\n      isValidatingIndexName && _react2.default.createElement(\n        'p',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.crossClusterReplication.followerIndexForm.indexNameValidatingLabel',\n          defaultMessage: 'Checking availability...'\n        })\n      ),\n      _react2.default.createElement(\n        'p',\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.crossClusterReplication.followerIndexForm.indexNameHelpLabel',\n          defaultMessage: 'Spaces and the characters {characterList} are not allowed.',\n          values: { characterList: _react2.default.createElement(\n              'strong',\n              null,\n              indexNameIllegalCharacters\n            ) }\n        })\n      )\n    );\n\n    var indexNameLabel = _i18n.i18n.translate('xpack.crossClusterReplication.followerIndexForm.sectionFollowerIndexNameTitle', {\n      defaultMessage: 'Follower index'\n    });\n\n    var renderFollowerIndexName = function renderFollowerIndexName() {\n      return _react2.default.createElement(_form_entry_row.FormEntryRow, {\n        field: 'name',\n        value: followerIndex.name,\n        error: fieldsErrors.name,\n        title: _react2.default.createElement(\n          _eui.EuiTitle,\n          { size: 's' },\n          _react2.default.createElement(\n            'h2',\n            null,\n            indexNameLabel\n          )\n        ),\n        label: indexNameLabel,\n        description: _i18n.i18n.translate('xpack.crossClusterReplication.followerIndexForm.sectionFollowerIndexNameDescription', {\n          defaultMessage: 'A unique name for your index.'\n        }),\n        helpText: indexNameHelpText,\n        isLoading: isValidatingIndexName,\n        disabled: !isNew,\n        areErrorsVisible: areErrorsVisible,\n        onValueUpdate: _this2.onIndexNameChange\n      });\n    };\n\n    /**\n     * Remote Cluster\n     */\n    var renderRemoteClusterField = function renderRemoteClusterField() {\n      var _props2 = _this2.props,\n          remoteClusters = _props2.remoteClusters,\n          currentUrl = _props2.currentUrl;\n\n\n      var errorMessages = {\n        noClusterFound: function noClusterFound() {\n          return _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.followerIndexForm.emptyRemoteClustersCallOutDescription',\n            defaultMessage: 'Replication requires a leader index on a remote cluster.'\n          });\n        },\n        remoteClusterNotConnectedNotEditable: function remoteClusterNotConnectedNotEditable(name) {\n          return {\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.followerIndexForm.currentRemoteClusterNotConnectedCallOutTitle',\n              defaultMessage: 'Can\\'t edit follower index because remote cluster \\'{name}\\' is not connected',\n              values: { name: name }\n            }),\n            description: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.followerIndexForm.currentRemoteClusterNotConnectedCallOutDescription',\n              defaultMessage: 'You can address this by editing the remote cluster.'\n            })\n          };\n        },\n        remoteClusterDoesNotExist: function remoteClusterDoesNotExist(name) {\n          return _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.followerIndexForm.currentRemoteClusterNotFoundCallOutDescription',\n            defaultMessage: 'To edit this follower index, you must add a remote cluster named \\'{name}\\'.',\n            values: { name: name }\n          });\n        }\n      };\n\n      return _react2.default.createElement(\n        _eui.EuiDescribedFormGroup,\n        {\n          title: _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h2',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.followerIndexForm.sectionRemoteClusterTitle',\n                defaultMessage: 'Remote cluster'\n              })\n            )\n          ),\n          description: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.followerIndexForm.sectionRemoteClusterDescription',\n            defaultMessage: 'The cluster that contains the index to replicate.'\n          }),\n          fullWidth: true\n        },\n        _react2.default.createElement(_remote_clusters_form_field.RemoteClustersFormField, {\n          selected: followerIndex.remoteCluster ? followerIndex.remoteCluster : null,\n          remoteClusters: remoteClusters || [],\n          currentUrl: currentUrl,\n          isEditable: isNew,\n          areErrorsVisible: areErrorsVisible,\n          onChange: _this2.onClusterChange,\n          onError: function onError(error) {\n            _this2.setState(updateFormErrors({ remoteCluster: error }));\n          },\n          errorMessages: errorMessages\n        })\n      );\n    };\n\n    /**\n     * Leader index\n     */\n\n    var leaderIndexLabel = _i18n.i18n.translate('xpack.crossClusterReplication.followerIndexForm.sectionLeaderIndexTitle', {\n      defaultMessage: 'Leader index'\n    });\n\n    var renderLeaderIndex = function renderLeaderIndex() {\n      return _react2.default.createElement(_form_entry_row.FormEntryRow, {\n        field: 'leaderIndex',\n        value: followerIndex.leaderIndex,\n        error: fieldsErrors.leaderIndex,\n        title: _react2.default.createElement(\n          _eui.EuiTitle,\n          { size: 's' },\n          _react2.default.createElement(\n            'h2',\n            null,\n            leaderIndexLabel\n          )\n        ),\n        label: leaderIndexLabel,\n        description: _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.followerIndexForm.sectionLeaderIndexDescription',\n              defaultMessage: 'The index on the remote cluster to replicate to the follower index.'\n            })\n          ),\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.followerIndexForm.sectionLeaderIndexDescription2',\n              defaultMessage: '{note} The leader index must already exist.',\n              values: { note: _react2.default.createElement(\n                  'strong',\n                  null,\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.crossClusterReplication.followerIndexForm.sectionLeaderIndexDescription2.noteLabel',\n                    defaultMessage: 'Note:'\n                  })\n                ) }\n            })\n          )\n        ),\n        helpText: _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.crossClusterReplication.followerIndexForm.indexNameHelpLabel',\n          defaultMessage: 'Spaces and the characters {characterList} are not allowed.',\n          values: { characterList: _react2.default.createElement(\n              'strong',\n              null,\n              indexNameIllegalCharacters\n            ) }\n        }),\n        disabled: !isNew,\n        areErrorsVisible: areErrorsVisible,\n        onValueUpdate: _this2.onFieldsChange\n      });\n    };\n\n    /**\n     * Advanced settings\n     */\n\n    var renderAdvancedSettings = function renderAdvancedSettings() {\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(_eui.EuiHorizontalRule, null),\n        _react2.default.createElement(\n          _eui.EuiDescribedFormGroup,\n          {\n            title: _react2.default.createElement(\n              _eui.EuiTitle,\n              { size: 's' },\n              _react2.default.createElement(\n                'h2',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.crossClusterReplication.followerIndexForm.advancedSettingsTitle',\n                  defaultMessage: 'Advanced settings (optional)'\n                })\n              )\n            ),\n            description: _react2.default.createElement(\n              _react.Fragment,\n              null,\n              _react2.default.createElement(\n                'p',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.crossClusterReplication.followerIndexForm.advancedSettingsDescription',\n                  defaultMessage: 'Advanced settings control the rate of replication. You can customize these settings or use the default values.'\n                })\n              ),\n              _react2.default.createElement(_eui.EuiSwitch, {\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.crossClusterReplication.followerIndex.advancedSettingsForm.showSwitchLabel',\n                  defaultMessage: 'Customize advanced settings'\n                }),\n                checked: areAdvancedSettingsVisible,\n                onChange: _this2.toggleAdvancedSettings\n              })\n            ),\n            fullWidth: true\n          },\n          _react2.default.createElement(_react.Fragment, null),\n          ' '\n        ),\n        areAdvancedSettingsVisible && _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n          _advanced_settings_fields.advancedSettingsFields.map(function (advancedSetting) {\n            var field = advancedSetting.field,\n                title = advancedSetting.title,\n                description = advancedSetting.description,\n                label = advancedSetting.label,\n                helpText = advancedSetting.helpText,\n                defaultValue = advancedSetting.defaultValue,\n                type = advancedSetting.type;\n\n            return _react2.default.createElement(_form_entry_row.FormEntryRow, {\n              key: field,\n              field: field,\n              value: followerIndex[field],\n              defaultValue: defaultValue,\n              error: fieldsErrors[field],\n              title: _react2.default.createElement(\n                _eui.EuiTitle,\n                { size: 'xs' },\n                _react2.default.createElement(\n                  'h3',\n                  null,\n                  title\n                )\n              ),\n              description: description,\n              label: label,\n              helpText: helpText,\n              type: type,\n              areErrorsVisible: areErrorsVisible,\n              onValueUpdate: _this2.onFieldsChange\n            });\n          })\n        ),\n        _react2.default.createElement(_eui.EuiHorizontalRule, null)\n      );\n    };\n\n    /**\n     * Form Error warning message\n     */\n    var renderFormErrorWarning = function renderFormErrorWarning() {\n      var areErrorsVisible = _this2.state.areErrorsVisible;\n\n      var isFormValid = _this2.isFormValid();\n\n      if (!areErrorsVisible || isFormValid) {\n        return null;\n      }\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(_eui.EuiCallOut, {\n          title: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.followerIndexForm.validationErrorTitle',\n            defaultMessage: 'Fix errors before continuing.'\n          }),\n          color: 'danger',\n          iconType: 'cross'\n        }),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'l' })\n      );\n    };\n\n    /**\n     * Form Actions\n     */\n    var renderActions = function renderActions() {\n      var _props3 = _this2.props,\n          apiStatus = _props3.apiStatus,\n          saveButtonLabel = _props3.saveButtonLabel;\n      var areErrorsVisible = _this2.state.areErrorsVisible;\n\n\n      if (apiStatus === _constants.API_STATUS.SAVING) {\n        return _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { justifyContent: 'flexStart', gutterSize: 'm' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(_eui.EuiLoadingSpinner, { size: 'l' })\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiText,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.followerIndexForm.actions.savingText',\n                defaultMessage: 'Saving'\n              })\n            )\n          )\n        );\n      }\n\n      var isSaveDisabled = areErrorsVisible && !_this2.isFormValid();\n\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { gutterSize: 'm', alignItems: 'center' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButton,\n            {\n              color: 'secondary',\n              iconType: 'check',\n              onClick: _this2.sendForm,\n              fill: true,\n              disabled: isSaveDisabled\n            },\n            saveButtonLabel\n          )\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButtonEmpty,\n            {\n              color: 'primary',\n              onClick: _this2.cancelForm\n            },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.followerIndexForm.cancelButtonLabel',\n              defaultMessage: 'Cancel'\n            })\n          )\n        )\n      );\n    };\n\n    return _react2.default.createElement(\n      _react.Fragment,\n      null,\n      _react2.default.createElement(\n        _eui.EuiForm,\n        null,\n        renderRemoteClusterField(),\n        renderLeaderIndex(),\n        renderFollowerIndexName(),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        renderAdvancedSettings()\n      ),\n      renderFormErrorWarning(),\n      _this2.renderApiErrors(),\n      renderActions()\n    );\n  };\n\n  this.renderLoading = function () {\n    var apiStatus = _this2.props.apiStatus;\n\n\n    if (apiStatus === _constants.API_STATUS.SAVING) {\n      return _react2.default.createElement(\n        _eui.EuiOverlayMask,\n        null,\n        _react2.default.createElement(_eui.EuiLoadingKibana, { size: 'xl' })\n      );\n    }\n    return null;\n  };\n}, _temp));\nexports.FollowerIndexForm = FollowerIndexForm;",null]}