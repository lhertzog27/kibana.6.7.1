{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/license/check_license.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/license/check_license.js","mtime":1567631712061},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkFullLicense = checkFullLicense;\nexports.checkBasicLicense = checkBasicLicense;\nexports.checkLicenseExpired = checkLicenseExpired;\nexports.hasLicenseExpired = hasLicenseExpired;\nexports.isFullLicense = isFullLicense;\nexports.xpackFeatureProvider = xpackFeatureProvider;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _xpack_info = require('plugins/xpack_main/services/xpack_info');\n\nvar _notify = require('ui/notify');\n\nvar _license = require('../../common/constants/license');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar licenseHasExpired = true;\nvar licenseType = null;\nvar expiredLicenseBannerId = void 0;\n\nfunction checkFullLicense(Private, kbnBaseUrl, kbnUrl) {\n  var features = getFeatures(Private);\n  licenseType = features.licenseType;\n\n  if (features.isAvailable === false) {\n    // ML is not enabled\n    return redirectToKibana(features, kbnBaseUrl);\n  } else if (features.licenseType === _license.LICENSE_TYPE.BASIC) {\n\n    // ML is enabled, but only with a basic or gold license\n    return redirectToBasic(kbnUrl);\n  } else {\n\n    // ML is enabled\n    setLicenseExpired(features);\n    return Promise.resolve(features);\n  }\n}\n\nfunction checkBasicLicense(Private, kbnBaseUrl) {\n  var features = getFeatures(Private);\n  licenseType = features.licenseType;\n\n  if (features.isAvailable === false) {\n    // ML is not enabled\n    return redirectToKibana(features, kbnBaseUrl);\n  } else {\n\n    // ML is enabled\n    setLicenseExpired(features);\n    return Promise.resolve(features);\n  }\n}\n\n// a wrapper for checkFullLicense which doesn't resolve if the license has expired.\n// this is used by all create jobs pages to redirect back to the jobs list\n// if the user's license has expired.\nfunction checkLicenseExpired(Private, kbnBaseUrl, kbnUrl) {\n  return checkFullLicense(Private, kbnBaseUrl, kbnUrl).then(function (features) {\n    if (features.hasExpired) {\n      kbnUrl.redirect('/jobs');\n      return Promise.halt();\n    } else {\n      return Promise.resolve(features);\n    }\n  }).catch(function () {\n    return Promise.halt();\n  });\n}\n\nfunction setLicenseExpired(features) {\n  licenseHasExpired = features.hasExpired || false;\n  // If the license has expired ML app will still work for 7 days and then\n  // the job management endpoints (e.g. create job, start datafeed) will be restricted.\n  // Therefore we need to keep the app enabled but show an info banner to the user.\n  if (licenseHasExpired) {\n    var message = features.message;\n    if (expiredLicenseBannerId === undefined) {\n      // Only show the banner once with no way to dismiss it\n      expiredLicenseBannerId = _notify.banners.add({\n        component: _react2.default.createElement(_eui.EuiCallOut, {\n          iconType: 'iInCircle',\n          color: 'warning',\n          title: message\n        })\n      });\n    }\n  }\n}\n\nfunction getFeatures(Private) {\n  var xpackInfo = Private(_xpack_info.XPackInfoProvider);\n  return xpackInfo.get('features.ml');\n}\n\nfunction redirectToKibana(features, kbnBaseUrl) {\n  var message = features.message;\n\n  var newUrl = (0, _notify.addAppRedirectMessageToUrl)(_chrome2.default.addBasePath(kbnBaseUrl), message || '');\n  window.location.href = newUrl;\n  return Promise.halt();\n}\n\nfunction redirectToBasic(kbnUrl) {\n  kbnUrl.redirect('/datavisualizer');\n  return Promise.halt();\n}\n\nfunction hasLicenseExpired() {\n  return licenseHasExpired;\n}\n\nfunction isFullLicense() {\n  return licenseType === _license.LICENSE_TYPE.FULL;\n}\n\nfunction xpackFeatureProvider(Private) {\n  var xpackInfo = Private(_xpack_info.XPackInfoProvider);\n\n  return {\n    isAvailable: function isAvailable(feature) {\n      return xpackInfo.get('features.' + feature + '.isAvailable', false);\n    }\n  };\n}",null]}