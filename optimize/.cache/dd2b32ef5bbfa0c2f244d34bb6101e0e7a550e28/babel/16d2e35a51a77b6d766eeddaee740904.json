{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/common/poller.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/common/poller.js","mtime":1567631711857},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Poller = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Poller = exports.Poller = function () {\n  function Poller(options) {\n    _classCallCheck(this, Poller);\n\n    this.functionToPoll = options.functionToPoll; // Must return a Promise\n    this.successFunction = options.successFunction || _lodash2.default.noop;\n    this.errorFunction = options.errorFunction || _lodash2.default.noop;\n    this.pollFrequencyInMillis = options.pollFrequencyInMillis;\n    this.trailing = options.trailing || false;\n    this.continuePollingOnError = options.continuePollingOnError || false;\n    this.pollFrequencyErrorMultiplier = options.pollFrequencyErrorMultiplier || 1;\n    this._timeoutId = null;\n    this._isRunning = false;\n  }\n\n  _createClass(Poller, [{\n    key: 'getPollFrequency',\n    value: function getPollFrequency() {\n      return this.pollFrequencyInMillis;\n    }\n  }, {\n    key: '_poll',\n    value: function _poll() {\n      var _this = this;\n\n      return this.functionToPoll().then(this.successFunction).then(function () {\n        if (!_this._isRunning) {\n          return;\n        }\n\n        _this._timeoutId = setTimeout(_this._poll.bind(_this), _this.pollFrequencyInMillis);\n      }).catch(function (e) {\n        _this.errorFunction(e);\n        if (!_this._isRunning) {\n          return;\n        }\n\n        if (_this.continuePollingOnError) {\n          _this._timeoutId = setTimeout(_this._poll.bind(_this), _this.pollFrequencyInMillis * _this.pollFrequencyErrorMultiplier);\n        } else {\n          _this.stop();\n        }\n      });\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      if (this._isRunning) {\n        return;\n      }\n\n      this._isRunning = true;\n      if (this.trailing) {\n        this._timeoutId = setTimeout(this._poll.bind(this), this.pollFrequencyInMillis);\n      } else {\n        this._poll();\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      if (!this._isRunning) {\n        return;\n      }\n\n      this._isRunning = false;\n      clearTimeout(this._timeoutId);\n      this._timeoutId = null;\n    }\n  }, {\n    key: 'isRunning',\n    value: function isRunning() {\n      return this._isRunning;\n    }\n  }]);\n\n  return Poller;\n}();",null]}