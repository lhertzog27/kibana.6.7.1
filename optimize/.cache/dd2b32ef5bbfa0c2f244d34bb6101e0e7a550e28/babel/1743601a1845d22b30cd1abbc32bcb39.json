{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/data_recognizer/data_recognizer.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/data_recognizer/data_recognizer.js","mtime":1567631712029},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataRecognizer = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _recognized_result = require('./recognized_result');\n\nvar _ml_api_service = require('plugins/ml/services/ml_api_service');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar DataRecognizer = exports.DataRecognizer = function (_Component) {\n  _inherits(DataRecognizer, _Component);\n\n  function DataRecognizer(props) {\n    _classCallCheck(this, DataRecognizer);\n\n    var _this = _possibleConstructorReturn(this, (DataRecognizer.__proto__ || Object.getPrototypeOf(DataRecognizer)).call(this, props));\n\n    _this.state = {\n      results: []\n    };\n\n    _this.indexPattern = props.indexPattern;\n    _this.savedSearch = props.savedSearch;\n    _this.className = props.className;\n    _this.results = props.results;\n    return _this;\n  }\n\n  _createClass(DataRecognizer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // once the mount is complete, call the recognize endpoint to see if the index format is known to us,\n      _ml_api_service.ml.recognizeIndex({ indexPatternTitle: this.indexPattern.title }).then(function (resp) {\n        var results = resp.map(function (r) {\n          return _react2.default.createElement(_recognized_result.RecognizedResult, {\n            key: r.id,\n            config: r,\n            indexPattern: _this2.indexPattern,\n            savedSearch: _this2.savedSearch\n          });\n        });\n        if (_typeof(_this2.results) === 'object') {\n          _this2.results.count = results.length;\n          if (typeof _this2.results.onChange === 'function') {\n            _this2.results.onChange();\n          }\n        }\n\n        _this2.setState({\n          results: results\n        });\n      }).catch(function (e) {\n        console.error('Error attempting to recognize index', e);\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        { className: this.className },\n        this.state.results\n      );\n    }\n  }]);\n\n  return DataRecognizer;\n}(_react.Component);\n\nDataRecognizer.propTypes = {\n  indexPattern: _propTypes2.default.object,\n  savedSearch: _propTypes2.default.object,\n  className: _propTypes2.default.string,\n  results: _propTypes2.default.object\n};",null]}