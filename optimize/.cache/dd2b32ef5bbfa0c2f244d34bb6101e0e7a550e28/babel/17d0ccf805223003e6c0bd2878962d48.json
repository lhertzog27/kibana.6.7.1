{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/es_search_source/update_source_editor.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/es_search_source/update_source_editor.js","mtime":1567631712020},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UpdateSourceEditor = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _multi_field_select = require('../../../components/multi_field_select');\n\nvar _kibana_services = require('../../../../kibana_services');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar UpdateSourceEditor = exports.UpdateSourceEditor = function (_Component) {\n  _inherits(UpdateSourceEditor, _Component);\n\n  function UpdateSourceEditor() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, UpdateSourceEditor);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = UpdateSourceEditor.__proto__ || Object.getPrototypeOf(UpdateSourceEditor)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      fields: null\n    }, _this.onTooltipPropertiesSelect = function (propertyNames) {\n      _this.props.onChange({ propName: 'tooltipProperties', value: propertyNames });\n    }, _this.onFilterByMapBoundsChange = function (event) {\n      _this.props.onChange({ propName: 'filterByMapBounds', value: event.target.checked });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(UpdateSourceEditor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.loadFields();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: 'loadFields',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var indexPattern;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                indexPattern = void 0;\n                _context.prev = 1;\n                _context.next = 4;\n                return _kibana_services.indexPatternService.get(this.props.indexPatternId);\n\n              case 4:\n                indexPattern = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context['catch'](1);\n\n                if (this._isMounted) {\n                  this.setState({\n                    loadError: _i18n.i18n.translate('xpack.maps.source.esSearch.loadErrorMessage', {\n                      defaultMessage: 'Unable to find Index pattern {id}',\n                      values: {\n                        id: this.props.indexPatternId\n                      }\n                    })\n                  });\n                }\n                return _context.abrupt('return');\n\n              case 11:\n                if (this._isMounted) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 13:\n\n                this.setState({ fields: indexPattern.fields });\n\n              case 14:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function loadFields() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return loadFields;\n    }()\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            label: _i18n.i18n.translate('xpack.maps.source.esSearch.fieldsLabel', {\n              defaultMessage: 'Fields to display in tooltip'\n            })\n          },\n          _react2.default.createElement(_multi_field_select.MultiFieldSelect, {\n            placeholder: _i18n.i18n.translate('xpack.maps.source.esSearch.fieldsPlaceholder', {\n              defaultMessage: 'Select fields'\n            }),\n            value: this.props.tooltipProperties,\n            onChange: this.onTooltipPropertiesSelect,\n            fields: this.state.fields\n          })\n        ),\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          null,\n          _react2.default.createElement(_eui.EuiSwitch, {\n            label: _i18n.i18n.translate('xpack.maps.source.esSearch.extentFilterLabel', {\n              defaultMessage: 'Dynamically filter for data in the visible map area.'\n            }),\n            checked: this.props.filterByMapBounds,\n            onChange: this.onFilterByMapBoundsChange\n          })\n        )\n      );\n    }\n  }]);\n\n  return UpdateSourceEditor;\n}(_react.Component);\n\nUpdateSourceEditor.propTypes = {\n  indexPatternId: _propTypes2.default.string.isRequired,\n  onChange: _propTypes2.default.func.isRequired,\n  filterByMapBounds: _propTypes2.default.bool.isRequired,\n  tooltipProperties: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired\n};",null]}