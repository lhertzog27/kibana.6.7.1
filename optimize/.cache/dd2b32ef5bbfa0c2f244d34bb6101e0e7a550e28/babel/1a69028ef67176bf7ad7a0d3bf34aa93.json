{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/beats/beat/beat.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/beats/beat/beat.js","mtime":1567631712082},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Beat = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _chart = require('../../chart');\n\nvar _format_number = require('../../../lib/format_number');\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _summary_status = require('../../summary_status');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /*\n                                                                                                                                                                                                                              * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                              * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                              * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                              */\n\nfunction BeatUi(_ref) {\n  var summary = _ref.summary,\n      metrics = _ref.metrics,\n      intl = _ref.intl,\n      props = _objectWithoutProperties(_ref, ['summary', 'metrics', 'intl']);\n\n  var metricsToShow = [metrics.beat_event_rates, metrics.beat_fail_rates, metrics.beat_throughput_rates, metrics.beat_output_errors, metrics.beat_memory, metrics.beat_cpu_utilization, metrics.beat_os_load, metrics.beat_handles];\n\n  var summarytStatsTop = [{\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.nameLabel', defaultMessage: 'Name' }),\n    value: summary.name,\n    'data-test-subj': 'name'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.hostLabel', defaultMessage: 'Host' }),\n    value: summary.transportAddress,\n    'data-test-subj': 'host'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.versionLabel', defaultMessage: 'Version' }),\n    value: summary.version,\n    'data-test-subj': 'version'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.typeLabel', defaultMessage: 'Type' }),\n    value: summary.type,\n    'data-test-subj': 'type'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.outputLabel', defaultMessage: 'Output' }),\n    value: summary.output,\n    'data-test-subj': 'output'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.configReloadsLabel', defaultMessage: 'Config reloads' }),\n    value: (0, _format_number.formatMetric)(summary.configReloads, 'int_commas'),\n    'data-test-subj': 'configReloads'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.uptimeLabel', defaultMessage: 'Uptime' }),\n    value: (0, _format_number.formatMetric)(summary.uptime, 'time_since'),\n    'data-test-subj': 'uptime'\n  }];\n\n  var summarytStatsBot = [{\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.eventsTotalLabel', defaultMessage: 'Events total' }),\n    value: (0, _format_number.formatMetric)(summary.eventsTotal, 'int_commas'),\n    'data-test-subj': 'eventsTotal'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.eventsEmittedLabel', defaultMessage: 'Events emitted' }),\n    value: (0, _format_number.formatMetric)(summary.eventsEmitted, 'int_commas'),\n    'data-test-subj': 'eventsEmitted'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.eventsDroppedLabel', defaultMessage: 'Events dropped' }),\n    value: (0, _format_number.formatMetric)(summary.eventsDropped, 'int_commas'),\n    'data-test-subj': 'eventsDropped'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.bytesSentLabel', defaultMessage: 'Bytes sent' }),\n    value: (0, _format_number.formatMetric)(summary.bytesWritten, 'byte'),\n    'data-test-subj': 'bytesWritten'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.handlesLimitSoftLabel', defaultMessage: 'Handles limit (soft)' }),\n    value: (0, _format_number.formatMetric)(summary.handlesSoftLimit, 'byte'),\n    'data-test-subj': 'handlesLimitSoft'\n  }, {\n    label: intl.formatMessage({ id: 'xpack.monitoring.beats.instance.handlesLimitHardLabel', defaultMessage: 'Handles limit (hard)' }),\n    value: (0, _format_number.formatMetric)(summary.handlesHardLimit, 'byte'),\n    'data-test-subj': 'handlesLimitHard'\n  }];\n\n  return _react2.default.createElement(\n    _eui.EuiPage,\n    null,\n    _react2.default.createElement(\n      _eui.EuiPageBody,\n      null,\n      _react2.default.createElement(\n        _eui.EuiPanel,\n        null,\n        _react2.default.createElement(_summary_status.SummaryStatus, {\n          metrics: summarytStatsTop,\n          'data-test-subj': 'beatSummaryStatus01'\n        }),\n        _react2.default.createElement(_summary_status.SummaryStatus, {\n          metrics: summarytStatsBot,\n          'data-test-subj': 'beatSummaryStatus02'\n        })\n      ),\n      _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n      _react2.default.createElement(\n        _eui.EuiPageContent,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFlexGrid,\n          { columns: 2, gutterSize: 's' },\n          metricsToShow.map(function (metric, index) {\n            return _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { key: index },\n              _react2.default.createElement(_chart.MonitoringTimeseriesContainer, _extends({\n                series: metric\n              }, props)),\n              _react2.default.createElement(_eui.EuiSpacer, null)\n            );\n          })\n        )\n      )\n    )\n  );\n}\n\nvar Beat = exports.Beat = (0, _react3.injectI18n)(BeatUi);",null]}