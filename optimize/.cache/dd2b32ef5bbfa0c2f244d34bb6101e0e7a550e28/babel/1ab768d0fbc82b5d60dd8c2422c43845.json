{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/uis/views/plot.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/uis/views/plot.js","mtime":1567631711910},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.plot = undefined;\n\nvar _lodash = require('lodash');\n\nvar _resolved_arg = require('../../../public/lib/resolved_arg');\n\nvar _legend_options = require('../../../public/lib/legend_options');\n\nvar styleProps = ['lines', 'bars', 'points', 'fill', 'stack']; /*\n                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                */\n\nvar plot = exports.plot = function plot() {\n  return {\n    name: 'plot',\n    displayName: 'Chart style',\n    modelArgs: ['x', 'y', 'color', 'size', 'text'],\n    args: [{\n      name: 'palette',\n      argType: 'palette'\n    }, {\n      name: 'legend',\n      displayName: 'Legend position',\n      help: 'Disable or position the legend',\n      argType: 'select',\n      default: 'ne',\n      options: {\n        choices: _legend_options.legendOptions\n      }\n    }, {\n      name: 'xaxis',\n      displayName: 'X-axis',\n      help: 'Configure or disable the x-axis',\n      argType: 'axisConfig',\n      default: true\n    }, {\n      name: 'yaxis',\n      displayName: 'Y-axis',\n      help: 'Configure or disable the Y-axis',\n      argType: 'axisConfig',\n      default: true\n    }, {\n      name: 'font',\n      argType: 'font'\n    }, {\n      name: 'defaultStyle',\n      displayName: 'Default style',\n      help: 'Set the style to be used by default by every series, unless overridden',\n      argType: 'seriesStyle',\n      default: '{seriesStyle points=5}',\n      options: {\n        include: styleProps\n      }\n    }, {\n      name: 'seriesStyle',\n      argType: 'seriesStyle',\n      options: {\n        include: styleProps\n      },\n      multi: true\n    }],\n    resolve: function resolve(_ref) {\n      var context = _ref.context;\n\n      if ((0, _resolved_arg.getState)(context) !== 'ready') {\n        return { labels: [] };\n      }\n      return { labels: (0, _lodash.uniq)((0, _lodash.map)((0, _resolved_arg.getValue)(context).rows, 'color').filter(function (v) {\n          return v !== undefined;\n        })) };\n    }\n  };\n};",null]}