{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/lib/update_saved_dashboard.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/lib/update_saved_dashboard.js","mtime":1567631711558},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateSavedDashboard = updateSavedDashboard;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _filter_utils = require('./filter_utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction updateSavedDashboard(savedDashboard, appState, timeFilter, toJson) {\n  savedDashboard.title = appState.title;\n  savedDashboard.description = appState.description;\n  savedDashboard.timeRestore = appState.timeRestore;\n  savedDashboard.panelsJSON = toJson(appState.panels);\n  savedDashboard.optionsJSON = toJson(appState.options);\n\n  savedDashboard.timeFrom = savedDashboard.timeRestore ? _filter_utils.FilterUtils.convertTimeToUTCString(timeFilter.getTime().from) : undefined;\n  savedDashboard.timeTo = savedDashboard.timeRestore ? _filter_utils.FilterUtils.convertTimeToUTCString(timeFilter.getTime().to) : undefined;\n  var timeRestoreObj = _lodash2.default.pick(timeFilter.getRefreshInterval(), ['display', 'pause', 'section', 'value']);\n  savedDashboard.refreshInterval = savedDashboard.timeRestore ? timeRestoreObj : undefined;\n}",null]}