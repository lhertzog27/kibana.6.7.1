{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/services/action_defaults/actions/slack_action.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/services/action_defaults/actions/slack_action.js","mtime":1567631712350},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _constants = require('plugins/watcher/../common/constants');\n\nvar _registry = require('../registry');\n\nvar actionType = _constants.ACTION_TYPES.SLACK; /*\n                                                 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                 * or more contributor license agreements. Licensed under the Elastic License;\n                                                 * you may not use this file except in compliance with the Elastic License.\n                                                 */\n\nfunction getActionDefaults() {\n  return {};\n}\n\n_registry.ActionDefaultsRegistryProvider.register(function () {\n  return {\n    actionType: actionType,\n    watchType: _constants.WATCH_TYPES.THRESHOLD,\n    getDefaults: function getDefaults(config) {\n      var actionDefaults = getActionDefaults(config);\n      var actionWatchComboDefaults = {\n        text: 'Watch [{{ctx.metadata.name}}] has exceeded the threshold'\n      };\n\n      return (0, _lodash.merge)(actionDefaults, actionWatchComboDefaults);\n    }\n  };\n});",null]}