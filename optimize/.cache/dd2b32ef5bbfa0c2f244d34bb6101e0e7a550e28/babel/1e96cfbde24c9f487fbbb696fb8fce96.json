{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/lib/get_axis_label_string.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/lib/get_axis_label_string.js","mtime":1567631711627},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAxisLabelString = getAxisLabelString;\n\nvar _relative_options = require('../../../../../../ui/public/timepicker/relative_options');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar unitLookup = {\n  s: _i18n.i18n.translate('tsvb.axisLabelOptions.secondsLabel', { defaultMessage: 'seconds' }),\n  m: _i18n.i18n.translate('tsvb.axisLabelOptions.minutesLabel', { defaultMessage: 'minutes' }),\n  h: _i18n.i18n.translate('tsvb.axisLabelOptions.hoursLabel', { defaultMessage: 'hours' }),\n  d: _i18n.i18n.translate('tsvb.axisLabelOptions.daysLabel', { defaultMessage: 'days' }),\n  w: _i18n.i18n.translate('tsvb.axisLabelOptions.weeksLabel', { defaultMessage: 'weeks' }),\n  M: _i18n.i18n.translate('tsvb.axisLabelOptions.monthsLabel', { defaultMessage: 'months' }),\n  y: _i18n.i18n.translate('tsvb.axisLabelOptions.yearsLabel', { defaultMessage: 'years' })\n};\nfunction getAxisLabelString(interval) {\n  var units = _lodash2.default.pluck(_lodash2.default.clone(_relative_options.relativeOptions).reverse(), 'value').filter(function (s) {\n    return (/^[smhdwMy]$/.test(s)\n    );\n  });\n  var duration = _moment2.default.duration(interval, 'ms');\n  for (var i = 0; i < units.length; i++) {\n    var as = duration.as(units[i]);\n    if (Math.abs(as) > 1) {\n      var unitValue = Math.round(Math.abs(as));\n      var unitString = unitLookup[units[i]];\n      return _i18n.i18n.translate('tsvb.axisLabelOptions.axisLabel', { defaultMessage: 'per {unitValue} {unitString}', values: { unitValue: unitValue, unitString: unitString } });\n    }\n  }\n}",null]}