{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/remote_clusters/public/sections/remote_cluster_edit/remote_cluster_edit.container.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/remote_clusters/public/sections/remote_cluster_edit/remote_cluster_edit.container.js","mtime":1567631712122},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RemoteClusterEdit = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _remote_cluster_edit = require('./remote_cluster_edit');\n\nvar _selectors = require('../../store/selectors');\n\nvar _actions = require('../../store/actions');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: (0, _selectors.isLoading)(state),\n    cluster: (0, _selectors.getEditedCluster)(state),\n    isEditingCluster: (0, _selectors.isEditingCluster)(state),\n    getEditClusterError: (0, _selectors.getEditClusterError)(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    startEditingCluster: function startEditingCluster(clusterName) {\n      dispatch((0, _actions.startEditingCluster)({ clusterName: clusterName }));\n    },\n    stopEditingCluster: function stopEditingCluster() {\n      dispatch((0, _actions.stopEditingCluster)());\n    },\n    editCluster: function editCluster(cluster) {\n      dispatch((0, _actions.editCluster)(cluster));\n    },\n    clearEditClusterErrors: function clearEditClusterErrors() {\n      dispatch((0, _actions.clearEditClusterErrors)());\n    },\n    openDetailPanel: function openDetailPanel(clusterName) {\n      dispatch((0, _actions.openDetailPanel)({ name: clusterName }));\n    }\n  };\n};\n\nvar RemoteClusterEdit = exports.RemoteClusterEdit = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_remote_cluster_edit.RemoteClusterEdit);",null]}