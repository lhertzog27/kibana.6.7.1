{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/sections/edit_policy/components/warm_phase/warm_phase.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/sections/edit_policy/components/warm_phase/warm_phase.js","mtime":1567631711965},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WarmPhase = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _constants = require('../../../../store/constants');\n\nvar _set_priority_input = require('../set_priority_input');\n\nvar _node_allocation = require('../node_allocation');\n\nvar _form_errors = require('../../form_errors');\n\nvar _components = require('../../../components');\n\nvar _min_age_input = require('../min_age_input');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar WarmPhaseUi = function (_PureComponent) {\n  _inherits(WarmPhaseUi, _PureComponent);\n\n  function WarmPhaseUi() {\n    _classCallCheck(this, WarmPhaseUi);\n\n    return _possibleConstructorReturn(this, (WarmPhaseUi.__proto__ || Object.getPrototypeOf(WarmPhaseUi)).apply(this, arguments));\n  }\n\n  _createClass(WarmPhaseUi, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          setPhaseData = _props.setPhaseData,\n          showNodeDetailsFlyout = _props.showNodeDetailsFlyout,\n          phaseData = _props.phaseData,\n          errors = _props.errors,\n          isShowingErrors = _props.isShowingErrors,\n          hotPhaseRolloverEnabled = _props.hotPhaseRolloverEnabled,\n          intl = _props.intl;\n\n      var shrinkLabel = intl.formatMessage({\n        id: 'xpack.indexLifecycleMgmt.warmPhase.shrinkIndexLabel',\n        defaultMessage: 'Shrink index'\n      });\n      var moveToWarmPhaseOnRolloverLabel = intl.formatMessage({\n        id: 'xpack.indexLifecycleMgmt.warmPhase.moveToWarmPhaseOnRolloverLabel',\n        defaultMessage: 'Move to warm phase on rollover'\n      });\n      var forcemergeLabel = intl.formatMessage({\n        id: 'xpack.indexLifecycleMgmt.warmPhase.forceMergeDataLabel',\n        defaultMessage: 'Force merge data'\n      });\n      return _react2.default.createElement(\n        'div',\n        { id: 'warmPhaseContent', 'aria-live': 'polite', role: 'region', 'aria-relevant': 'additions' },\n        _react2.default.createElement(\n          _eui.EuiDescribedFormGroup,\n          {\n            title: _react2.default.createElement(\n              'div',\n              null,\n              _react2.default.createElement(\n                'span',\n                { className: 'eui-displayInlineBlock eui-alignMiddle' },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.indexLifecycleMgmt.editPolicy.warmPhase.warmPhaseLabel',\n                  defaultMessage: 'Warm phase'\n                })\n              ),\n              ' ',\n              phaseData[_constants.PHASE_ENABLED] && !isShowingErrors ? _react2.default.createElement(_components.ActiveBadge, null) : null,\n              _react2.default.createElement(_components.PhaseErrorMessage, { isShowingErrors: isShowingErrors })\n            ),\n            titleSize: 's',\n            description: _react2.default.createElement(\n              _react.Fragment,\n              null,\n              _react2.default.createElement(\n                'p',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.indexLifecycleMgmt.editPolicy.warmPhase.warmPhaseDescriptionMessage',\n                  defaultMessage: 'You are still querying your index, but it is read-only. You can allocate shards to less performant hardware. For faster searches, you can reduce the number of shards and force merge segments.'\n                })\n              ),\n              _react2.default.createElement(_eui.EuiSwitch, {\n                'data-test-subj': 'enablePhaseSwitch-warm',\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.indexLifecycleMgmt.editPolicy.warmPhase.activateWarmPhaseSwitchLabel',\n                  defaultMessage: 'Activate warm phase'\n                }),\n                id: _constants.PHASE_WARM + '-' + _constants.PHASE_ENABLED,\n                checked: phaseData[_constants.PHASE_ENABLED],\n                onChange: function onChange(e) {\n                  setPhaseData(_constants.PHASE_ENABLED, e.target.checked);\n                },\n                'aria-controls': 'warmPhaseContent'\n              })\n            ),\n            fullWidth: true\n          },\n          _react2.default.createElement(\n            _react.Fragment,\n            null,\n            phaseData[_constants.PHASE_ENABLED] ? _react2.default.createElement(\n              _react.Fragment,\n              null,\n              hotPhaseRolloverEnabled ? _react2.default.createElement(\n                _eui.EuiFormRow,\n                {\n                  id: _constants.PHASE_WARM + '-' + _constants.WARM_PHASE_ON_ROLLOVER\n                },\n                _react2.default.createElement(_eui.EuiSwitch, {\n                  'data-test-subj': 'warmPhaseOnRolloverSwitch',\n                  label: moveToWarmPhaseOnRolloverLabel,\n                  id: _constants.PHASE_WARM + '-' + _constants.WARM_PHASE_ON_ROLLOVER,\n                  checked: phaseData[_constants.WARM_PHASE_ON_ROLLOVER],\n                  onChange: function onChange(e) {\n                    setPhaseData(_constants.WARM_PHASE_ON_ROLLOVER, e.target.checked);\n                  }\n                })\n              ) : null,\n              !phaseData[_constants.WARM_PHASE_ON_ROLLOVER] ? _react2.default.createElement(_min_age_input.MinAgeInput, {\n                errors: errors,\n                phaseData: phaseData,\n                phase: _constants.PHASE_WARM,\n                isShowingErrors: isShowingErrors,\n                setPhaseData: setPhaseData,\n                rolloverEnabled: hotPhaseRolloverEnabled\n              }) : null,\n              _react2.default.createElement(_eui.EuiSpacer, null),\n              _react2.default.createElement(_node_allocation.NodeAllocation, {\n                phase: _constants.PHASE_WARM,\n                setPhaseData: setPhaseData,\n                showNodeDetailsFlyout: showNodeDetailsFlyout,\n                errors: errors,\n                phaseData: phaseData,\n                isShowingErrors: isShowingErrors\n              }),\n              _react2.default.createElement(\n                _eui.EuiFlexGroup,\n                null,\n                _react2.default.createElement(\n                  _eui.EuiFlexItem,\n                  { grow: false, style: { maxWidth: 188 } },\n                  _react2.default.createElement(\n                    _form_errors.ErrableFormRow,\n                    {\n                      id: _constants.PHASE_WARM + '-' + _constants.PHASE_REPLICA_COUNT,\n                      label: _react2.default.createElement(\n                        _react.Fragment,\n                        null,\n                        _react2.default.createElement(_react3.FormattedMessage, {\n                          id: 'xpack.indexLifecycleMgmt.warmPhase.numberOfReplicasLabel',\n                          defaultMessage: 'Number of replicas'\n                        }),\n                        _react2.default.createElement(_components.OptionalLabel, null)\n                      ),\n                      errorKey: _constants.PHASE_REPLICA_COUNT,\n                      isShowingErrors: isShowingErrors,\n                      errors: errors,\n                      helpText: intl.formatMessage({\n                        id: 'xpack.indexLifecycleMgmt.warmPhase.replicaCountHelpText',\n                        defaultMessage: 'By default, the number of replicas remains the same.'\n                      })\n                    },\n                    _react2.default.createElement(_eui.EuiFieldNumber, {\n                      id: _constants.PHASE_WARM + '-' + _constants.PHASE_REPLICA_COUNT,\n                      value: phaseData[_constants.PHASE_REPLICA_COUNT],\n                      onChange: function onChange(e) {\n                        setPhaseData(_constants.PHASE_REPLICA_COUNT, e.target.value);\n                      },\n                      min: 0\n                    })\n                  )\n                )\n              ),\n              _react2.default.createElement(_eui.EuiSpacer, { size: 'm' })\n            ) : null\n          )\n        ),\n        phaseData[_constants.PHASE_ENABLED] ? _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(\n            _eui.EuiDescribedFormGroup,\n            {\n              title: _react2.default.createElement(\n                'p',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.indexLifecycleMgmt.editPolicy.warmPhase.shrinkText',\n                  defaultMessage: 'Shrink'\n                })\n              ),\n              description: _react2.default.createElement(\n                _eui.EuiTextColor,\n                { color: 'subdued' },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.indexLifecycleMgmt.editPolicy.warmPhase.shrinkIndexExplanationText',\n                  defaultMessage: 'Shrink the index into a new index with fewer primary shards.'\n                }),\n                ' ',\n                _react2.default.createElement(_components.LearnMoreLink, { docPath: 'indices-shrink-index.html#indices-shrink-index' })\n              ),\n              fullWidth: true,\n              titleSize: 'xs'\n            },\n            _react2.default.createElement(\n              _react.Fragment,\n              null,\n              _react2.default.createElement(_eui.EuiSwitch, {\n                'data-test-subj': 'shrinkSwitch',\n                checked: phaseData[_constants.PHASE_SHRINK_ENABLED],\n                onChange: function onChange(e) {\n                  setPhaseData(_constants.PHASE_SHRINK_ENABLED, e.target.checked);\n                },\n                label: shrinkLabel,\n                'aria-label': shrinkLabel,\n                'aria-controls': 'shrinkContent'\n              }),\n              _react2.default.createElement(\n                'div',\n                { id: 'shrinkContent', 'aria-live': 'polite', role: 'region' },\n                phaseData[_constants.PHASE_SHRINK_ENABLED] ? _react2.default.createElement(\n                  _react.Fragment,\n                  null,\n                  _react2.default.createElement(_eui.EuiSpacer, null),\n                  _react2.default.createElement(\n                    _eui.EuiFlexGroup,\n                    null,\n                    _react2.default.createElement(\n                      _eui.EuiFlexItem,\n                      { grow: false },\n                      _react2.default.createElement(\n                        _form_errors.ErrableFormRow,\n                        {\n                          id: _constants.PHASE_WARM + '-' + _constants.PHASE_PRIMARY_SHARD_COUNT,\n                          label: intl.formatMessage({\n                            id: 'xpack.indexLifecycleMgmt.warmPhase.numberOfPrimaryShardsLabel',\n                            defaultMessage: 'Number of primary shards'\n                          }),\n                          errorKey: _constants.PHASE_PRIMARY_SHARD_COUNT,\n                          isShowingErrors: isShowingErrors,\n                          errors: errors\n                        },\n                        _react2.default.createElement(_eui.EuiFieldNumber, {\n                          id: _constants.PHASE_WARM + '-' + _constants.PHASE_PRIMARY_SHARD_COUNT,\n                          value: phaseData[_constants.PHASE_PRIMARY_SHARD_COUNT],\n                          onChange: function onChange(e) {\n                            setPhaseData(_constants.PHASE_PRIMARY_SHARD_COUNT, e.target.value);\n                          },\n                          min: 1\n                        })\n                      )\n                    )\n                  ),\n                  _react2.default.createElement(_eui.EuiSpacer, null)\n                ) : null\n              )\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiDescribedFormGroup,\n            {\n              title: _react2.default.createElement(\n                'p',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.indexLifecycleMgmt.editPolicy.warmPhase.forceMergeDataText',\n                  defaultMessage: 'Force merge'\n                })\n              ),\n              description: _react2.default.createElement(\n                _eui.EuiTextColor,\n                { color: 'subdued' },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.indexLifecycleMgmt.editPolicy.warmPhase.forceMergeDataExplanationText',\n                  defaultMessage: 'Reduce the number of segments in your shard by merging smaller files and clearing deleted ones.'\n                }),\n                ' ',\n                _react2.default.createElement(_components.LearnMoreLink, { docPath: 'indices-forcemerge.html' })\n              ),\n              titleSize: 'xs',\n              fullWidth: true\n            },\n            _react2.default.createElement(_eui.EuiSwitch, {\n              'data-test-subj': 'forceMergeSwitch',\n              label: forcemergeLabel,\n              'aria-label': forcemergeLabel,\n              checked: phaseData[_constants.PHASE_FORCE_MERGE_ENABLED],\n              onChange: function onChange(e) {\n                setPhaseData(_constants.PHASE_FORCE_MERGE_ENABLED, e.target.checked);\n              },\n              'aria-controls': 'forcemergeContent'\n            }),\n            _react2.default.createElement(_eui.EuiSpacer, null),\n            _react2.default.createElement(\n              'div',\n              { id: 'forcemergeContent', 'aria-live': 'polite', role: 'region' },\n              phaseData[_constants.PHASE_FORCE_MERGE_ENABLED] ? _react2.default.createElement(\n                _form_errors.ErrableFormRow,\n                {\n                  id: _constants.PHASE_WARM + '-' + _constants.PHASE_FORCE_MERGE_SEGMENTS,\n                  label: intl.formatMessage({\n                    id: 'xpack.indexLifecycleMgmt.warmPhase.numberOfSegmentsLabel',\n                    defaultMessage: 'Number of segments'\n                  }),\n                  errorKey: _constants.PHASE_FORCE_MERGE_SEGMENTS,\n                  isShowingErrors: isShowingErrors,\n                  errors: errors\n                },\n                _react2.default.createElement(_eui.EuiFieldNumber, {\n                  id: _constants.PHASE_WARM + '-' + _constants.PHASE_FORCE_MERGE_SEGMENTS,\n                  value: phaseData[_constants.PHASE_FORCE_MERGE_SEGMENTS],\n                  onChange: function onChange(e) {\n                    setPhaseData(_constants.PHASE_FORCE_MERGE_SEGMENTS, e.target.value);\n                  },\n                  min: 1\n                })\n              ) : null\n            )\n          ),\n          _react2.default.createElement(_set_priority_input.SetPriorityInput, {\n            errors: errors,\n            phaseData: phaseData,\n            phase: _constants.PHASE_WARM,\n            isShowingErrors: isShowingErrors,\n            setPhaseData: setPhaseData\n          })\n        ) : null\n      );\n    }\n  }]);\n\n  return WarmPhaseUi;\n}(_react.PureComponent);\n\nWarmPhaseUi.propTypes = {\n  setPhaseData: _propTypes2.default.func.isRequired,\n  showNodeDetailsFlyout: _propTypes2.default.func.isRequired,\n\n  isShowingErrors: _propTypes2.default.bool.isRequired,\n  errors: _propTypes2.default.object.isRequired\n};\nvar WarmPhase = exports.WarmPhase = (0, _react3.injectI18n)(WarmPhaseUi);",null]}