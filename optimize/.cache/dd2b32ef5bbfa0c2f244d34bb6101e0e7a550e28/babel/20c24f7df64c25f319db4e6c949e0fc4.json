{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/containerStyle.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/containerStyle.js","mtime":1567631711897},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containerStyle = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _url = require('../../../common/lib/url');\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /*\n                                                                                                                                                                                                                              * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                              * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                              * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                              */\n\nvar containerStyle = function containerStyle() {\n  return {\n    name: 'containerStyle',\n    aliases: [],\n    context: {\n      types: ['null']\n    },\n    type: 'containerStyle',\n    help: 'Creates an object used for describing the properties of a series on a chart.' + ' You would usually use this inside of a charting function',\n    args: {\n      border: {\n        types: ['string', 'null'],\n        help: 'Valid CSS border string'\n      },\n      borderRadius: {\n        types: ['string', 'null'],\n        help: 'Number of pixels to use when rounding the border'\n      },\n      padding: {\n        types: ['string', 'null'],\n        help: 'Content distance in pixels from border'\n      },\n      backgroundColor: {\n        types: ['string', 'null'],\n        help: 'Valid CSS background color string'\n      },\n      backgroundImage: {\n        types: ['string', 'null'],\n        help: 'Valid CSS background image string'\n      },\n      backgroundSize: {\n        types: ['string'],\n        help: 'Valid CSS background size string',\n        default: 'contain',\n        options: ['contain', 'cover', 'auto']\n      },\n      backgroundRepeat: {\n        types: ['string'],\n        help: 'Valid CSS background repeat string',\n        default: 'no-repeat',\n        options: ['repeat-x', 'repeat', 'space', 'round', 'no-repeat', 'space']\n      },\n      opacity: {\n        types: ['number', 'null'],\n        help: 'A number between 0 and 1 representing the degree of transparency of the element'\n      },\n      overflow: {\n        types: ['string'],\n        help: 'Sets overflow of the container',\n        options: ['visible', 'hidden', 'scroll', 'auto']\n      }\n    },\n    fn: function fn(context, args) {\n      var backgroundImage = args.backgroundImage,\n          backgroundSize = args.backgroundSize,\n          backgroundRepeat = args.backgroundRepeat,\n          remainingArgs = _objectWithoutProperties(args, ['backgroundImage', 'backgroundSize', 'backgroundRepeat']);\n\n      var style = _extends({\n        type: 'containerStyle'\n      }, remainingArgs);\n\n      if (backgroundImage) {\n        if (!(0, _url.isValidUrl)(backgroundImage)) {\n          throw new Error('Invalid backgroundImage. Please provide an asset or a URL.');\n        }\n        style.backgroundImage = 'url(' + backgroundImage + ')';\n        style.backgroundSize = backgroundSize;\n        style.backgroundRepeat = backgroundRepeat;\n      }\n\n      // removes keys with undefined value\n      return JSON.parse(JSON.stringify(style));\n    }\n  };\n};\nexports.containerStyle = containerStyle;",null]}