{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/lib/elasticsearch_settings/checkers/settings_checker.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/lib/elasticsearch_settings/checkers/settings_checker.js","mtime":1567631712098},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar SettingsChecker = exports.SettingsChecker = function () {\n  function SettingsChecker($http) {\n    _classCallCheck(this, SettingsChecker);\n\n    this.$http = $http;\n\n    this.message = null;\n    this.api = null;\n    this.next = null;\n  }\n\n  _createClass(SettingsChecker, [{\n    key: \"setApi\",\n    value: function setApi(api) {\n      this.api = api;\n    }\n  }, {\n    key: \"setMessage\",\n    value: function setMessage(message) {\n      this.message = message;\n    }\n  }, {\n    key: \"getApi\",\n    value: function getApi() {\n      return this.api;\n    }\n  }, {\n    key: \"getMessage\",\n    value: function getMessage() {\n      return this.message;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.next !== null;\n    }\n  }, {\n    key: \"setNext\",\n    value: function setNext(checker) {\n      this.next = checker;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext() {\n      return this.next;\n    }\n  }, {\n    key: \"executeCheck\",\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _ref2, data, found, reason, _data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.$http.get(this.getApi());\n\n              case 3:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                found = data.found, reason = data.reason;\n                return _context.abrupt(\"return\", { found: found, reason: reason });\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                _data = _context.t0.data;\n                return _context.abrupt(\"return\", {\n                  error: true,\n                  found: false,\n                  errorReason: _data\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function executeCheck() {\n        return _ref.apply(this, arguments);\n      }\n\n      return executeCheck;\n    }()\n  }]);\n\n  return SettingsChecker;\n}();",null]}