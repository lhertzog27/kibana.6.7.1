{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/text_style_picker/text_style_picker.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/text_style_picker/text_style_picker.js","mtime":1567631711927},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextStylePicker = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _font_picker = require('../font_picker');\n\nvar _color_picker_mini = require('../color_picker_mini');\n\nvar _font_sizes = require('./font_sizes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*\n                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                   */\n\nvar TextStylePicker = exports.TextStylePicker = function TextStylePicker(_ref) {\n  var _stylesSelectedMap;\n\n  var family = _ref.family,\n      size = _ref.size,\n      align = _ref.align,\n      color = _ref.color,\n      weight = _ref.weight,\n      underline = _ref.underline,\n      italic = _ref.italic,\n      onChange = _ref.onChange,\n      colors = _ref.colors;\n\n  var alignmentButtons = [{\n    id: 'left',\n    label: 'Align left',\n    iconType: 'editorAlignLeft'\n  }, {\n    id: 'center',\n    label: 'Align center',\n    iconType: 'editorAlignCenter'\n  }, {\n    id: 'right',\n    label: 'Align right',\n    iconType: 'editorAlignRight'\n  }];\n\n  var styleButtons = [{\n    id: 'bold',\n    label: 'Bold',\n    iconType: 'editorBold'\n  }, {\n    id: 'italic',\n    label: 'Italic',\n    iconType: 'editorItalic'\n  }, {\n    id: 'underline',\n    label: 'Underline',\n    iconType: 'editorUnderline'\n  }];\n\n  var stylesSelectedMap = (_stylesSelectedMap = {}, _defineProperty(_stylesSelectedMap, 'bold', weight === 'bold'), _defineProperty(_stylesSelectedMap, 'italic', Boolean(italic)), _defineProperty(_stylesSelectedMap, 'underline', Boolean(underline)), _stylesSelectedMap);\n\n  if (!isNaN(size) && _font_sizes.fontSizes.indexOf(Number(size)) === -1) {\n    _font_sizes.fontSizes.push(Number(size));\n    _font_sizes.fontSizes.sort(function (a, b) {\n      return a - b;\n    });\n  }\n\n  var doChange = function doChange(propName, value) {\n    onChange(_defineProperty({\n      family: family,\n      size: size,\n      align: align,\n      color: color,\n      weight: weight || 'normal',\n      underline: underline || false,\n      italic: italic || false\n    }, propName, value));\n  };\n\n  var onAlignmentChange = function onAlignmentChange(optionId) {\n    return doChange('align', optionId);\n  };\n\n  var onStyleChange = function onStyleChange(optionId) {\n    var prop = void 0;\n    var value = void 0;\n\n    if (optionId === 'bold') {\n      prop = 'weight';\n      value = !stylesSelectedMap[optionId] ? 'bold' : 'normal';\n    } else {\n      prop = optionId;\n      value = !stylesSelectedMap[optionId];\n    }\n\n    doChange(prop, value);\n  };\n\n  return _react2.default.createElement(\n    'div',\n    { className: 'canvasTextStylePicker' },\n    _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      { gutterSize: 'm' },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(_eui.EuiSelect, {\n          compressed: true,\n          value: size,\n          onChange: function onChange(e) {\n            return doChange('size', Number(e.target.value));\n          },\n          options: _font_sizes.fontSizes.map(function (size) {\n            return { text: String(size), value: size };\n          })\n        })\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(_font_picker.FontPicker, { value: family, onSelect: function onSelect(value) {\n            return doChange('family', value);\n          } })\n      )\n    ),\n    _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n    _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      { gutterSize: 'm', alignItems: 'center' },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(_eui.EuiButtonGroup, {\n          options: styleButtons,\n          idToSelectedMap: stylesSelectedMap,\n          onChange: onStyleChange,\n          type: 'multi',\n          isIconOnly: true\n        })\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(_eui.EuiButtonGroup, {\n          options: alignmentButtons,\n          isIconOnly: true,\n          idSelected: align,\n          onChange: onAlignmentChange\n        })\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false, style: { fontSize: 0 } },\n        _react2.default.createElement(_color_picker_mini.ColorPickerMini, {\n          value: color,\n          onChange: function onChange(value) {\n            return doChange('color', value);\n          },\n          colors: colors\n        })\n      )\n    )\n  );\n};\n\nTextStylePicker.propTypes = {\n  family: _propTypes2.default.string,\n  size: _propTypes2.default.number,\n  align: _propTypes2.default.string,\n  color: _propTypes2.default.string,\n  weight: _propTypes2.default.string,\n  underline: _propTypes2.default.bool,\n  italic: _propTypes2.default.bool,\n  onChange: _propTypes2.default.func.isRequired,\n  colors: _propTypes2.default.array\n};\n\nTextStylePicker.defaultProps = {\n  align: 'left',\n  size: 14\n};",null]}