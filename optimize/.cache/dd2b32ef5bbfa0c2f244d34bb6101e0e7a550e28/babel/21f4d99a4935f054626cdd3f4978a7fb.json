{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/renderers/markdown/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/renderers/markdown/index.js","mtime":1567631711903},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.markdown = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _markdownIt = require('markdown-it');\n\nvar _markdownIt2 = _interopRequireDefault(_markdownIt);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar md = new _markdownIt2.default(); /*\n                                      * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                      * or more contributor license agreements. Licensed under the Elastic License;\n                                      * you may not use this file except in compliance with the Elastic License.\n                                      */\n\nvar markdown = exports.markdown = function markdown() {\n  return {\n    name: 'markdown',\n    displayName: 'Markdown',\n    help: 'Render HTML Markup using Markdown input',\n    reuseDomNode: true,\n    render: function render(domNode, config, handlers) {\n      var html = { __html: md.render(String(config.content)) };\n      var fontStyle = config.font ? config.font.spec : {};\n\n      /* eslint-disable react/no-danger */\n      _reactDom2.default.render(_react2.default.createElement('div', { className: 'canvasMarkdown', style: fontStyle, dangerouslySetInnerHTML: html }), domNode, function () {\n        return handlers.done();\n      });\n      /* eslint-enable */\n\n      handlers.onDestroy(function () {\n        return _reactDom2.default.unmountComponentAtNode(domNode);\n      });\n    }\n  };\n};",null]}