{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/logstash/public/services/license/logstash_license_service.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/logstash/public/services/license/logstash_license_service.js","mtime":1567631712009},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogstashLicenseService = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _notify = require('ui/notify');\n\nvar _markdown = require('ui/markdown');\n\nvar _constants = require('../../../common/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LogstashLicenseService = exports.LogstashLicenseService = function () {\n  function LogstashLicenseService(xpackInfoService, kbnUrlService, $timeout) {\n    _classCallCheck(this, LogstashLicenseService);\n\n    this.xpackInfoService = xpackInfoService;\n    this.kbnUrlService = kbnUrlService;\n    this.$timeout = $timeout;\n  }\n\n  _createClass(LogstashLicenseService, [{\n    key: 'notifyAndRedirect',\n    value: function notifyAndRedirect() {\n      _notify.toastNotifications.addDanger({\n        title: _react2.default.createElement(\n          _markdown.MarkdownSimple,\n          null,\n          this.xpackInfoService.get('features.' + _constants.PLUGIN.ID + '.message')\n        )\n      });\n      this.kbnUrlService.redirect('/management');\n    }\n\n    /**\n     * Checks if the license is valid or the license can perform downgraded UI tasks.\n     * Otherwise, notifies and redirects.\n     */\n\n  }, {\n    key: 'checkValidity',\n    value: function checkValidity() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.$timeout(function () {\n          if (_this.isAvailable) {\n            return resolve();\n          }\n\n          _this.notifyAndRedirect();\n          return reject();\n        }, 10); // To allow latest XHR call to update license info\n      });\n    }\n  }, {\n    key: 'enableLinks',\n    get: function get() {\n      return Boolean(this.xpackInfoService.get('features.' + _constants.PLUGIN.ID + '.enableLinks'));\n    }\n  }, {\n    key: 'isAvailable',\n    get: function get() {\n      return Boolean(this.xpackInfoService.get('features.' + _constants.PLUGIN.ID + '.isAvailable'));\n    }\n  }, {\n    key: 'isReadOnly',\n    get: function get() {\n      return Boolean(this.xpackInfoService.get('features.' + _constants.PLUGIN.ID + '.isReadOnly'));\n    }\n  }, {\n    key: 'message',\n    get: function get() {\n      return this.xpackInfoService.get('features.' + _constants.PLUGIN.ID + '.message');\n    }\n  }]);\n\n  return LogstashLicenseService;\n}();",null]}