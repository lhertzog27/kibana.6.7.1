{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/formatters/format_value.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/formatters/format_value.js","mtime":1567631712046},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatValue = formatValue;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n/*\n * Formatter for 'typical' and 'actual' values from machine learning results.\n * For detectors which use the time_of_week or time_of_day\n * functions, the filter converts the raw number, which is the number of seconds since\n * midnight, into a human-readable date/time format.\n */\n\nvar _module = _modules.uiModules.get('apps/ml');\n\nvar SIGFIGS_IF_ROUNDING = 3; // Number of sigfigs to use for values < 10\n\n// Formats the value of an actual or typical field from a machine learning anomaly record.\n// mlFunction is the 'function' field from the ML record containing what the user entered e.g. 'high_count',\n// (as opposed to the 'function_description' field which holds an ML-built display hint for the function e.g. 'count'.\n// If a Kibana fieldFormat is not supplied, will fall back to default\n// formatting depending on the magnitude of the value.\n// For time_of_day or time_of_week functions the anomaly record\n// containing the timestamp of the anomaly should be supplied in\n// order to correctly format the day or week offset to the time of the anomaly.\nfunction formatValue(value, mlFunction, fieldFormat, record) {\n  // actual and typical values in anomaly record results will be arrays.\n  // Unless the array is multi-valued (as it will be for multi-variate analyses such as lat_long),\n  // simply return the formatted single value.\n  if (Array.isArray(value)) {\n    if (value.length === 1) {\n      return formatSingleValue(value[0], mlFunction, fieldFormat, record);\n    } else {\n      // Return with array style formatting.\n      var values = value.map(function (val) {\n        return formatSingleValue(val, mlFunction, fieldFormat, record);\n      });\n      return '[' + values + ']';\n    }\n  } else {\n    return formatSingleValue(value, mlFunction, fieldFormat, record);\n  }\n}\n\n// Formats a single value according to the specified ML function.\n// If a Kibana fieldFormat is not supplied, will fall back to default\n// formatting depending on the magnitude of the value.\n// For time_of_day or time_of_week functions the anomaly record\n// containing the timestamp of the anomaly should be supplied in\n// order to correctly format the day or week offset to the time of the anomaly.\nfunction formatSingleValue(value, mlFunction, fieldFormat, record) {\n  if (value === undefined || value === null) {\n    return '';\n  }\n\n  // If the analysis function is time_of_week/day, format as day/time.\n  // For time_of_week / day, actual / typical is the UTC offset in seconds from the\n  // start of the week / day, so need to manipulate to UTC moment of the start of the week / day\n  // that the anomaly occurred using record timestamp if supplied, add on the offset, and finally\n  // revert back to configured timezone for formatting.\n  if (mlFunction === 'time_of_week') {\n    var d = record !== undefined && record.timestamp !== undefined ? new Date(record.timestamp) : new Date();\n    var i = parseInt(value);\n    var utcMoment = _moment2.default.utc(d).startOf('week').add(i, 's');\n    return (0, _moment2.default)(utcMoment.valueOf()).format('ddd HH:mm');\n  } else if (mlFunction === 'time_of_day') {\n    var _d = record !== undefined && record.timestamp !== undefined ? new Date(record.timestamp) : new Date();\n    var _i = parseInt(value);\n    var _utcMoment = _moment2.default.utc(_d).startOf('day').add(_i, 's');\n    return (0, _moment2.default)(_utcMoment.valueOf()).format('HH:mm');\n  } else {\n    if (fieldFormat !== undefined) {\n      return fieldFormat.convert(value, 'text');\n    } else {\n      // If no Kibana FieldFormat object provided,\n      // format the value depending on its magnitude.\n      var absValue = Math.abs(value);\n      if (absValue >= 10000 || absValue === Math.floor(absValue)) {\n        // Output 0 decimal places if whole numbers or >= 10000\n        if (fieldFormat !== undefined) {\n          return fieldFormat.convert(value, 'text');\n        } else {\n          return Number(value.toFixed(0));\n        }\n      } else if (absValue >= 10) {\n        // Output to 1 decimal place between 10 and 10000\n        return Number(value.toFixed(1));\n      } else {\n        // For values < 10, output to 3 significant figures\n        var multiple = void 0;\n        if (value > 0) {\n          multiple = Math.pow(10, SIGFIGS_IF_ROUNDING - Math.floor(Math.log(value) / Math.LN10) - 1);\n        } else {\n          multiple = Math.pow(10, SIGFIGS_IF_ROUNDING - Math.floor(Math.log(-1 * value) / Math.LN10) - 1);\n        }\n        return Math.round(value * multiple) / multiple;\n      }\n    }\n  }\n}\n\n// TODO - remove the filter once all uses of the formatValue Angular filter have been removed.\n_module.filter('formatValue', function () {\n  return formatValue;\n});",null]}