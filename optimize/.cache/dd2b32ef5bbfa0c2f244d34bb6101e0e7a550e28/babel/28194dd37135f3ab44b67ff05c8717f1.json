{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/detail_status/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/detail_status/index.js","mtime":1567631712088},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DetailStatus = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _summary_status = require('../../summary_status');\n\nvar _format_number = require('../../../lib/format_number');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction DetailStatusUi(_ref) {\n  var stats = _ref.stats,\n      intl = _ref.intl;\n  var httpAddress = stats.http_address,\n      events = stats.events,\n      reloads = stats.reloads,\n      pipeline = stats.pipeline,\n      queueType = stats.queue_type,\n      version = stats.version,\n      uptime = stats.uptime;\n\n\n  var firstMetrics = [{\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.detailStatus.transportAddressLabel', defaultMessage: 'Transport Address'\n    }),\n    value: httpAddress,\n    'data-test-subj': 'httpAddress'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.detailStatus.eventsReceivedLabel', defaultMessage: 'Events Received'\n    }),\n    value: (0, _format_number.formatMetric)(events.in, '0.[0]a'),\n    'data-test-subj': 'eventsIn'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.detailStatus.eventsEmittedLabel', defaultMessage: 'Events Emitted'\n    }),\n    value: (0, _format_number.formatMetric)(events.out, '0.[0]a'),\n    'data-test-subj': 'eventsOut'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.detailStatus.configReloadsLabel', defaultMessage: 'Config Reloads'\n    }),\n    value: reloads.successes,\n    'data-test-subj': 'numReloads'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.detailStatus.pipelineWorkersLabel', defaultMessage: 'Pipeline Workers'\n    }),\n    value: pipeline.workers,\n    'data-test-subj': 'pipelineWorkers'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.detailStatus.batchSizeLabel', defaultMessage: 'Batch Size'\n    }),\n    value: pipeline.batch_size,\n    'data-test-subj': 'pipelineBatchSize'\n  }];\n\n  var lastMetrics = [{\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.detailStatus.versionLabel', defaultMessage: 'Version'\n    }),\n    value: version,\n    'data-test-subj': 'version'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.logstash.detailStatus.uptimeLabel', defaultMessage: 'Uptime'\n    }),\n    value: (0, _format_number.formatMetric)(uptime, 'time_since'),\n    'data-test-subj': 'uptime'\n  }];\n\n  // make queueType conditional\n  var metrics = [].concat(firstMetrics);\n  if (queueType) {\n    metrics.push({\n      label: intl.formatMessage({\n        id: 'xpack.monitoring.logstash.detailStatus.queueTypeLabel', defaultMessage: 'Queue Type'\n      }),\n      value: queueType,\n      'data-test-subj': 'queueType'\n    });\n  }\n  metrics.push.apply(metrics, lastMetrics);\n\n  return _react2.default.createElement(_summary_status.SummaryStatus, {\n    metrics: metrics,\n    'data-test-subj': 'logstashDetailStatus'\n  });\n}\n\nvar DetailStatus = exports.DetailStatus = (0, _react3.injectI18n)(DetailStatusUi);",null]}