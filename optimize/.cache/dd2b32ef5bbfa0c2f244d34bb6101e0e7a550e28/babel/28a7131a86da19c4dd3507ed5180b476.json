{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/index_patterns/unsupported_time_patterns.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/index_patterns/unsupported_time_patterns.js","mtime":1567631711739},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IsUserAwareOfUnsupportedTimePatternProvider = IsUserAwareOfUnsupportedTimePatternProvider;\n\nvar _bound_to_config_obj = require('../bound_to_config_obj');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                     * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                     * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                     * this work for additional information regarding copyright\n                                                                                                                                                                                                     * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                     * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                     * not use this file except in compliance with the License.\n                                                                                                                                                                                                     * You may obtain a copy of the License at\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                     * software distributed under the License is distributed on an\n                                                                                                                                                                                                     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                     * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                     * specific language governing permissions and limitations\n                                                                                                                                                                                                     * under the License.\n                                                                                                                                                                                                     */\n\nfunction IsUserAwareOfUnsupportedTimePatternProvider(Private, $injector) {\n  var BoundToConfigObj = Private(_bound_to_config_obj.BoundToConfigObjProvider);\n  var sessionStorage = $injector.get('sessionStorage');\n\n  var HISTORY_STORAGE_KEY = 'indexPatterns:warnAboutUnsupportedTimePatterns:history';\n  var FLAGS = new BoundToConfigObj({\n    enabled: '=indexPatterns:warnAboutUnsupportedTimePatterns'\n  });\n\n  return function isUserAwareOfUnsupportedTimePattern(indexPattern) {\n    // The user's disabled the notification. They know about it.\n    if (!FLAGS.enabled) {\n      return true;\n    }\n\n    // We've already told the user.\n    var previousIds = sessionStorage.get(HISTORY_STORAGE_KEY) || [];\n    if (previousIds.includes(indexPattern.id)) {\n      return true;\n    }\n\n    // Let's store this for later, so we don't tell the user multiple times.\n    sessionStorage.set(HISTORY_STORAGE_KEY, [].concat(_toConsumableArray(previousIds), [indexPattern.id]));\n    return false;\n  };\n}",null]}