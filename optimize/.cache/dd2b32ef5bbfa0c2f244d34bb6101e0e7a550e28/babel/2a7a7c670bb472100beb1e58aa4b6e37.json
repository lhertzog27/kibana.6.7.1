{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/lib/api.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/lib/api.js","mtime":1567631712297},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createApiClient = undefined;\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\n\nvar usersUrl = _chrome2.default.addBasePath('/api/security/v1/users');\nvar rolesUrl = _chrome2.default.addBasePath('/api/security/role');\n\nvar createApiClient = exports.createApiClient = function createApiClient(httpClient) {\n  return {\n    getCurrentUser: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var url, _ref2, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = _chrome2.default.addBasePath('/api/security/v1/me');\n                _context.next = 3;\n                return httpClient.get(url);\n\n              case 3:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                return _context.abrupt('return', data);\n\n              case 6:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCurrentUser() {\n        return _ref.apply(this, arguments);\n      }\n\n      return getCurrentUser;\n    }(),\n    getUsers: function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _ref4, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return httpClient.get(usersUrl);\n\n              case 2:\n                _ref4 = _context2.sent;\n                data = _ref4.data;\n                return _context2.abrupt('return', data);\n\n              case 5:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getUsers() {\n        return _ref3.apply(this, arguments);\n      }\n\n      return getUsers;\n    }(),\n    getUser: function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(username) {\n        var url, _ref6, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                url = usersUrl + '/' + username;\n                _context3.next = 3;\n                return httpClient.get(url);\n\n              case 3:\n                _ref6 = _context3.sent;\n                data = _ref6.data;\n                return _context3.abrupt('return', data);\n\n              case 6:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getUser(_x) {\n        return _ref5.apply(this, arguments);\n      }\n\n      return getUser;\n    }(),\n    deleteUser: function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(username) {\n        var url;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                url = usersUrl + '/' + username;\n                _context4.next = 3;\n                return httpClient.delete(url);\n\n              case 3:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function deleteUser(_x2) {\n        return _ref7.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }(),\n    saveUser: function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(user) {\n        var url;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                url = usersUrl + '/' + user.username;\n                _context5.next = 3;\n                return httpClient.post(url, user);\n\n              case 3:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function saveUser(_x3) {\n        return _ref8.apply(this, arguments);\n      }\n\n      return saveUser;\n    }(),\n    getRoles: function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var _ref10, data;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return httpClient.get(rolesUrl);\n\n              case 2:\n                _ref10 = _context6.sent;\n                data = _ref10.data;\n                return _context6.abrupt('return', data);\n\n              case 5:\n              case 'end':\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getRoles() {\n        return _ref9.apply(this, arguments);\n      }\n\n      return getRoles;\n    }(),\n    getRole: function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(name) {\n        var url, _ref12, data;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                url = rolesUrl + '/' + name;\n                _context7.next = 3;\n                return httpClient.get(url);\n\n              case 3:\n                _ref12 = _context7.sent;\n                data = _ref12.data;\n                return _context7.abrupt('return', data);\n\n              case 6:\n              case 'end':\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getRole(_x4) {\n        return _ref11.apply(this, arguments);\n      }\n\n      return getRole;\n    }(),\n    changePassword: function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(username, password, currentPassword) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                data = {\n                  newPassword: password\n                };\n\n                if (currentPassword) {\n                  data.password = currentPassword;\n                }\n                _context8.next = 4;\n                return httpClient.post(usersUrl + '/' + username + '/password', data);\n\n              case 4:\n              case 'end':\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function changePassword(_x5, _x6, _x7) {\n        return _ref13.apply(this, arguments);\n      }\n\n      return changePassword;\n    }()\n  };\n};",null]}