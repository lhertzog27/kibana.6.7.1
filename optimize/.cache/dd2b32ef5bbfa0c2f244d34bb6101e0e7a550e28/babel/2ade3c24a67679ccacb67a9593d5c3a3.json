{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/expression_types/arg_types/container_style/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/expression_types/arg_types/container_style/index.js","mtime":1567631711930},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containerStyle = undefined;\n\nvar _recompose = require('recompose');\n\nvar _objectPathImmutable = require('object-path-immutable');\n\nvar _lodash = require('lodash');\n\nvar _template_from_react_component = require('../../../lib/template_from_react_component');\n\nvar _simple_template = require('./simple_template');\n\nvar _extended_template = require('./extended_template');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar wrap = function wrap(Component) {\n  return (\n    // TODO: this should be in a helper\n    (0, _recompose.withHandlers)({\n      getArgValue: function getArgValue(_ref) {\n        var argValue = _ref.argValue;\n        return function (name, alt) {\n          var args = (0, _lodash.get)(argValue, 'chain.0.arguments', {});\n          return (0, _lodash.get)(args, [name, 0], alt);\n        };\n      },\n      setArgValue: function setArgValue(_ref2) {\n        var argValue = _ref2.argValue,\n            onValueChange = _ref2.onValueChange;\n        return function (name, val) {\n          var newValue = (0, _objectPathImmutable.set)(argValue, ['chain', 0, 'arguments', name, 0], val);\n          onValueChange(newValue);\n        };\n      }\n    })(Component)\n  );\n};\n\nvar containerStyle = exports.containerStyle = function containerStyle() {\n  return {\n    name: 'containerStyle',\n    displayName: 'Container style',\n    help: 'Tweak the appearance of the element container',\n    default: '{containerStyle}',\n    simpleTemplate: (0, _template_from_react_component.templateFromReactComponent)(wrap(_simple_template.SimpleTemplate)),\n    template: (0, _template_from_react_component.templateFromReactComponent)(wrap(_extended_template.ExtendedTemplate))\n  };\n};",null]}