{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/settings/filter_lists/components/delete_filter_list_modal/delete_filter_list_modal.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/settings/filter_lists/components/delete_filter_list_modal/delete_filter_list_modal.js","mtime":1567631712066},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DeleteFilterListModal = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nvar _delete_filter_lists = require('./delete_filter_lists');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/*\n * React modal for confirming deletion of filter lists.\n */\nvar DeleteFilterListModal = exports.DeleteFilterListModal = function (_Component) {\n  _inherits(DeleteFilterListModal, _Component);\n\n  function DeleteFilterListModal(props) {\n    _classCallCheck(this, DeleteFilterListModal);\n\n    var _this = _possibleConstructorReturn(this, (DeleteFilterListModal.__proto__ || Object.getPrototypeOf(DeleteFilterListModal)).call(this, props));\n\n    _this.closeModal = function () {\n      _this.setState({ isModalVisible: false });\n    };\n\n    _this.showModal = function () {\n      _this.setState({ isModalVisible: true });\n    };\n\n    _this.onConfirmDelete = function () {\n      _this.doDelete();\n    };\n\n    _this.state = {\n      isModalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(DeleteFilterListModal, [{\n    key: 'doDelete',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _props, selectedFilterLists, refreshFilterLists;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _props = this.props, selectedFilterLists = _props.selectedFilterLists, refreshFilterLists = _props.refreshFilterLists;\n                _context.next = 3;\n                return (0, _delete_filter_lists.deleteFilterLists)(selectedFilterLists);\n\n              case 3:\n\n                refreshFilterLists();\n                this.closeModal();\n\n              case 5:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function doDelete() {\n        return _ref.apply(this, arguments);\n      }\n\n      return doDelete;\n    }()\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          selectedFilterLists = _props2.selectedFilterLists,\n          canDeleteFilter = _props2.canDeleteFilter;\n\n      var modal = void 0;\n\n      if (this.state.isModalVisible) {\n        var title = _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.ml.settings.filterLists.deleteFilterListModal.modalTitle',\n          defaultMessage: 'Delete {selectedFilterListsLength, plural, one {{selectedFilterId}} other {# filter lists}}',\n          values: {\n            selectedFilterListsLength: selectedFilterLists.length,\n            selectedFilterId: !!selectedFilterLists.length && selectedFilterLists[0].filter_id\n          }\n        });\n        modal = _react2.default.createElement(\n          _eui.EuiOverlayMask,\n          null,\n          _react2.default.createElement(\n            _eui.EuiConfirmModal,\n            {\n              title: title,\n              className: 'eui-textBreakWord',\n              onCancel: this.closeModal,\n              onConfirm: this.onConfirmDelete,\n              cancelButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.ml.settings.filterLists.deleteFilterListModal.cancelButtonLabel',\n                defaultMessage: 'Cancel'\n              }),\n              confirmButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.ml.settings.filterLists.deleteFilterListModal.confirmButtonLabel',\n                defaultMessage: 'Delete'\n              }),\n              buttonColor: 'danger',\n              defaultFocusedButton: _eui.EUI_MODAL_CONFIRM_BUTTON\n            },\n            _react2.default.createElement(\n              'p',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.ml.settings.filterLists.deleteFilterListModal.deleteWarningMessage',\n                defaultMessage: 'Are you sure you want to delete\\n{selectedFilterListsLength, plural, one {this filter list} other {these filter lists}}',\n                values: {\n                  selectedFilterListsLength: selectedFilterLists.length\n                }\n              })\n            )\n          )\n        );\n      }\n\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          _eui.EuiButton,\n          {\n            key: 'delete_filter_list',\n            iconType: 'trash',\n            color: 'danger',\n            onClick: this.showModal,\n            isDisabled: selectedFilterLists === undefined || selectedFilterLists.length === 0 || canDeleteFilter === false\n          },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.ml.settings.filterLists.deleteFilterListModal.deleteButtonLabel',\n            defaultMessage: 'Delete'\n          })\n        ),\n        modal\n      );\n    }\n  }]);\n\n  return DeleteFilterListModal;\n}(_react.Component);\n\nDeleteFilterListModal.displayName = 'DeleteFilterListModal';\nDeleteFilterListModal.propTypes = {\n  selectedFilterLists: _propTypes2.default.array,\n  canDeleteFilter: _propTypes2.default.bool.isRequired\n};",null]}