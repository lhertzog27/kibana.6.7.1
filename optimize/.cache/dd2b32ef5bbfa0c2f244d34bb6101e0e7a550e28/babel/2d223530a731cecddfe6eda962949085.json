{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/jobs_list/components/job_filter_bar/job_filter_bar.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/jobs_list/components/job_filter_bar/job_filter_bar.js","mtime":1567631712049},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobFilterBar = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ml_api_service = require('plugins/ml/services/ml_api_service');\n\nvar _job_group = require('../job_group');\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction loadGroups() {\n  return _ml_api_service.ml.jobs.groups().then(function (groups) {\n    return groups.map(function (g) {\n      return {\n        value: g.id,\n        view: _react2.default.createElement(\n          'div',\n          { className: 'group-item' },\n          _react2.default.createElement(_job_group.JobGroup, { name: g.id }),\n          '\\xA0',\n          _react2.default.createElement(\n            'span',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.ml.jobsList.jobFilterBar.jobGroupTitle',\n              defaultMessage: '({jobsCount, plural, one {# job} other {# jobs}})',\n              values: { jobsCount: g.jobIds.length }\n            })\n          )\n        )\n      };\n    });\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nvar JobFilterBarUI = function (_Component) {\n  _inherits(JobFilterBarUI, _Component);\n\n  function JobFilterBarUI(props) {\n    _classCallCheck(this, JobFilterBarUI);\n\n    var _this = _possibleConstructorReturn(this, (JobFilterBarUI.__proto__ || Object.getPrototypeOf(JobFilterBarUI)).call(this, props));\n\n    _this.onChange = function (_ref) {\n      var query = _ref.query,\n          error = _ref.error;\n\n      if (error) {\n        _this.setState({ error: error });\n      } else {\n        var clauses = [];\n        if (query && query.ast !== undefined && query.ast.clauses !== undefined) {\n          clauses = query.ast.clauses;\n        }\n        _this.setFilters(clauses);\n        _this.setState({ error: null });\n      }\n    };\n\n    _this.state = { error: null };\n    _this.setFilters = props.setFilters;\n    return _this;\n  }\n\n  _createClass(JobFilterBarUI, [{\n    key: 'render',\n    value: function render() {\n      var intl = this.props.intl;\n      var error = this.state.error;\n\n      var filters = [{\n        type: 'field_value_toggle_group',\n        field: 'job_state',\n        items: [{\n          value: 'opened',\n          name: intl.formatMessage({\n            id: 'xpack.ml.jobsList.jobFilterBar.openedLabel',\n            defaultMessage: 'Opened'\n          })\n        }, {\n          value: 'closed',\n          name: intl.formatMessage({\n            id: 'xpack.ml.jobsList.jobFilterBar.closedLabel',\n            defaultMessage: 'Closed'\n          })\n        }, {\n          value: 'failed',\n          name: intl.formatMessage({\n            id: 'xpack.ml.jobsList.jobFilterBar.failedLabel',\n            defaultMessage: 'Failed'\n          })\n        }]\n      }, {\n        type: 'field_value_toggle_group',\n        field: 'datafeed_state',\n        items: [{\n          value: 'started',\n          name: intl.formatMessage({\n            id: 'xpack.ml.jobsList.jobFilterBar.startedLabel',\n            defaultMessage: 'Started'\n          })\n        }, {\n          value: 'stopped',\n          name: intl.formatMessage({\n            id: 'xpack.ml.jobsList.jobFilterBar.stoppedLabel',\n            defaultMessage: 'Stopped'\n          })\n        }]\n      }, {\n        type: 'field_value_selection',\n        field: 'groups',\n        name: intl.formatMessage({\n          id: 'xpack.ml.jobsList.jobFilterBar.groupLabel',\n          defaultMessage: 'Group'\n        }),\n        multiSelect: 'or',\n        cache: 10000,\n        options: function options() {\n          return loadGroups();\n        }\n      }];\n\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { direction: 'column' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(_eui.EuiSearchBar, {\n            box: {\n              incremental: true\n            },\n            filters: filters,\n            onChange: this.onChange,\n            className: 'mlJobFilterBar'\n          }),\n          _react2.default.createElement(\n            _eui.EuiFormRow,\n            {\n              fullWidth: true,\n              isInvalid: error !== null,\n              error: getError(error),\n              style: { maxHeight: '0px' }\n            },\n            _react2.default.createElement(_react.Fragment, null)\n          )\n        )\n      );\n    }\n  }]);\n\n  return JobFilterBarUI;\n}(_react.Component);\n\nJobFilterBarUI.propTypes = {\n  setFilters: _propTypes2.default.func.isRequired\n};\n\nfunction getError(error) {\n  if (error) {\n    return _i18n.i18n.translate('xpack.ml.jobsList.jobFilterBar.invalidSearchErrorMessage', {\n      defaultMessage: 'Invalid search: {errorMessage}',\n      values: { errorMessage: error.message }\n    });\n  }\n\n  return '';\n}\n\nvar JobFilterBar = exports.JobFilterBar = (0, _react3.injectI18n)(JobFilterBarUI);",null]}