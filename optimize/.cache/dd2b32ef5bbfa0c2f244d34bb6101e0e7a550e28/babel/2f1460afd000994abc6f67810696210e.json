{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/es_field_select/es_field_select.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/es_field_select/es_field_select.js","mtime":1567631711922},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ESFieldSelect = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _lodash = require('lodash');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ESFieldSelect = exports.ESFieldSelect = function ESFieldSelect(_ref) {\n  var value = _ref.value,\n      _ref$fields = _ref.fields,\n      fields = _ref$fields === undefined ? [] : _ref$fields,\n      _onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur;\n\n  var selectedOption = value ? [{ label: value }] : [];\n  var options = fields.map(function (field) {\n    return { label: field };\n  });\n\n  return _react2.default.createElement(_eui.EuiComboBox, {\n    selectedOptions: selectedOption,\n    options: options,\n    onChange: function onChange(_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 1),\n          field = _ref3[0];\n\n      return _onChange((0, _lodash.get)(field, 'label', null));\n    },\n    onSearchChange: function onSearchChange(searchValue) {\n      // resets input when user starts typing\n      if (searchValue) {\n        _onChange(null);\n      }\n    },\n    onFocus: onFocus,\n    onBlur: onBlur,\n    singleSelection: { asPlainText: true },\n    isClearable: false\n  });\n};\n\nESFieldSelect.propTypes = {\n  onChange: _propTypes2.default.func,\n  onFocus: _propTypes2.default.func,\n  onBlur: _propTypes2.default.func,\n  value: _propTypes2.default.string,\n  fields: _propTypes2.default.array\n};\n\nESFieldSelect.defaultProps = {\n  fields: []\n};",null]}