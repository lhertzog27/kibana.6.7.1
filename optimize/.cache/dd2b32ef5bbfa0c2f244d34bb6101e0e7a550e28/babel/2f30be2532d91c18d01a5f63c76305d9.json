{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/jobs_list/components/job_actions/results.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/jobs_list/components/job_actions/results.js","mtime":1567631712048},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResultLinks = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _job_service = require('plugins/ml/services/job_service');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                     * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                     * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                     * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                     */\n\nvar TIME_FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nfunction getLink(location, jobs) {\n  var from = undefined;\n  var to = undefined;\n  if (jobs.length === 1) {\n    from = jobs[0].earliestTimestampMs;\n    to = jobs[0].latestTimestampMs;\n  } else {\n    var jobsWithData = jobs.filter(function (j) {\n      return j.earliestTimestampMs !== undefined;\n    });\n    if (jobsWithData.length > 0) {\n      from = Math.min.apply(Math, _toConsumableArray(jobsWithData.map(function (j) {\n        return j.earliestTimestampMs;\n      })));\n      to = Math.max.apply(Math, _toConsumableArray(jobsWithData.map(function (j) {\n        return j.latestTimestampMs;\n      })));\n    }\n  }\n\n  var fromString = (0, _moment2.default)(from).format(TIME_FORMAT); // Defaults to 'now' if 'from' is undefined\n  var toString = (0, _moment2.default)(to).format(TIME_FORMAT); // Defaults to 'now' if 'to' is undefined\n\n  var jobIds = jobs.map(function (j) {\n    return j.id;\n  });\n  var url = _job_service.mlJobService.createResultsUrl(jobIds, fromString, toString, location);\n  return _chrome2.default.getBasePath() + '/app/' + url;\n}\n\nfunction ResultLinksUI(_ref) {\n  var jobs = _ref.jobs,\n      intl = _ref.intl;\n\n  var openJobsInSingleMetricViewerText = intl.formatMessage({\n    id: 'xpack.ml.jobsList.resultActions.openJobsInSingleMetricViewerText',\n    defaultMessage: 'Open {jobsCount, plural, one {{jobId}} other {# jobs}} in Single Metric Viewer' }, {\n    jobsCount: jobs.length,\n    jobId: jobs[0].id\n  });\n  var openJobsInAnomalyExplorerText = intl.formatMessage({\n    id: 'xpack.ml.jobsList.resultActions.openJobsInAnomalyExplorerText',\n    defaultMessage: 'Open {jobsCount, plural, one {{jobId}} other {# jobs}} in Anomaly Explorer' }, {\n    jobsCount: jobs.length,\n    jobId: jobs[0].id\n  });\n  var singleMetricVisible = jobs.length < 2;\n  var singleMetricEnabled = jobs.length === 1 && jobs[0].isSingleMetricViewerJob;\n  var jobActionsDisabled = jobs.length === 1 && jobs[0].deleting === true;\n  return _react2.default.createElement(\n    _react2.default.Fragment,\n    null,\n    singleMetricVisible && _react2.default.createElement(\n      _eui.EuiToolTip,\n      {\n        position: 'bottom',\n        content: openJobsInSingleMetricViewerText\n      },\n      _react2.default.createElement(_eui.EuiButtonIcon, {\n        href: getLink('timeseriesexplorer', jobs),\n        iconType: 'stats',\n        'aria-label': openJobsInSingleMetricViewerText,\n        className: 'results-button',\n        isDisabled: singleMetricEnabled === false || jobActionsDisabled === true\n      })\n    ),\n    _react2.default.createElement(\n      _eui.EuiToolTip,\n      {\n        position: 'bottom',\n        content: openJobsInAnomalyExplorerText\n      },\n      _react2.default.createElement(_eui.EuiButtonIcon, {\n        href: getLink('explorer', jobs),\n        iconType: 'tableOfContents',\n        'aria-label': openJobsInAnomalyExplorerText,\n        className: 'results-button',\n        isDisabled: jobActionsDisabled === true\n      })\n    ),\n    _react2.default.createElement('div', { className: 'actions-border' })\n  );\n}\nResultLinksUI.propTypes = {\n  jobs: _propTypes2.default.array.isRequired\n};\n\nvar ResultLinks = exports.ResultLinks = (0, _react3.injectI18n)(ResultLinksUI);",null]}