{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/sections/job_create/job_create.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/sections/job_create/job_create.js","mtime":1567631712288},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobCreate = exports.JobCreateUi = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stepIdToTitleMap;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _mapValues = require('lodash/object/mapValues');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _cloneDeep = require('lodash/lang/cloneDeep');\n\nvar _cloneDeep2 = _interopRequireDefault(_cloneDeep);\n\nvar _debounce = require('lodash/function/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nvar _notify = require('ui/notify');\n\nvar _services = require('../../services');\n\nvar _navigation = require('./navigation');\n\nvar _steps = require('./steps');\n\nvar _steps_config = require('./steps_config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*\n                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                   */\n\nvar stepIdToTitleMap = (_stepIdToTitleMap = {}, _defineProperty(_stepIdToTitleMap, _steps_config.STEP_LOGISTICS, _i18n.i18n.translate('xpack.rollupJobs.create.steps.stepLogisticsTitle', {\n  defaultMessage: 'Logistics'\n})), _defineProperty(_stepIdToTitleMap, _steps_config.STEP_DATE_HISTOGRAM, _i18n.i18n.translate('xpack.rollupJobs.create.steps.stepDateHistogramTitle', {\n  defaultMessage: 'Date histogram'\n})), _defineProperty(_stepIdToTitleMap, _steps_config.STEP_TERMS, _i18n.i18n.translate('xpack.rollupJobs.create.steps.stepTermsTitle', {\n  defaultMessage: 'Terms'\n})), _defineProperty(_stepIdToTitleMap, _steps_config.STEP_HISTOGRAM, _i18n.i18n.translate('xpack.rollupJobs.create.steps.stepHistogramTitle', {\n  defaultMessage: 'Histogram'\n})), _defineProperty(_stepIdToTitleMap, _steps_config.STEP_METRICS, _i18n.i18n.translate('xpack.rollupJobs.create.steps.stepMetricsTitle', {\n  defaultMessage: 'Metrics'\n})), _defineProperty(_stepIdToTitleMap, _steps_config.STEP_REVIEW, _i18n.i18n.translate('xpack.rollupJobs.create.steps.stepReviewTitle', {\n  defaultMessage: 'Review and save'\n})), _stepIdToTitleMap);\n\nvar JobCreateUi = exports.JobCreateUi = function (_Component) {\n  _inherits(JobCreateUi, _Component);\n\n  function JobCreateUi(props) {\n    _classCallCheck(this, JobCreateUi);\n\n    var _this = _possibleConstructorReturn(this, (JobCreateUi.__proto__ || Object.getPrototypeOf(JobCreateUi)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var stepsFields = (0, _mapValues2.default)(_steps_config.stepIdToStepConfigMap, function (step) {\n      return (0, _cloneDeep2.default)(step.defaultFields || {});\n    });\n\n    _this.state = {\n      checkpointStepId: _steps_config.stepIds[0],\n      currentStepId: _steps_config.stepIds[0],\n      nextStepId: _steps_config.stepIds[1],\n      previousStepId: undefined,\n      stepsFieldErrors: _this.getStepsFieldsErrors(stepsFields),\n      areStepErrorsVisible: false,\n      stepsFields: stepsFields,\n      isValidatingIndexPattern: false,\n      indexPatternAsyncErrors: undefined,\n      indexPatternDateFields: [],\n      indexPatternTermsFields: [],\n      indexPatternHistogramFields: [],\n      indexPatternMetricsFields: []\n    };\n\n    _this.lastIndexPatternValidationTime = 0;\n    return _this;\n  }\n\n  _createClass(JobCreateUi, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var indexPattern = this.getIndexPattern();\n      if (indexPattern !== this.getIndexPattern(prevState)) {\n        // If the user hasn't entered anything, then skip validation.\n        if (!indexPattern || !indexPattern.trim()) {\n          this.setState({\n            indexPatternAsyncErrors: undefined,\n            indexPatternDateFields: [],\n            isValidatingIndexPattern: false\n          });\n\n          return;\n        }\n\n        // Set the state outside of `requestIndexPatternValidation`, because that function is\n        // debounced.\n        this.setState({\n          isValidatingIndexPattern: true\n        });\n\n        this.requestIndexPatternValidation();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      // Clean up after ourselves.\n      this.props.clearCreateJobErrors();\n    }\n  }, {\n    key: 'getSteps',\n    value: function getSteps() {\n      var _this2 = this;\n\n      var _state = this.state,\n          currentStepId = _state.currentStepId,\n          checkpointStepId = _state.checkpointStepId;\n\n      var indexOfCurrentStep = _steps_config.stepIds.indexOf(currentStepId);\n\n      return _steps_config.stepIds.map(function (stepId, index) {\n        return {\n          title: stepIdToTitleMap[stepId],\n          isComplete: index < indexOfCurrentStep,\n          isSelected: index === indexOfCurrentStep,\n          onClick: function onClick() {\n            return _this2.goToStep(stepId);\n          },\n          disabled: !_this2.canGoToStep(stepId) || _steps_config.stepIds.indexOf(stepId) > _steps_config.stepIds.indexOf(checkpointStepId),\n          'data-test-subj': index === indexOfCurrentStep ? 'createRollupStep' + (index + 1) + '--active' : 'createRollupStep' + (index + 1)\n        };\n      });\n    }\n  }, {\n    key: 'goToStep',\n    value: function goToStep(stepId) {\n      // Instead of disabling the Next button while the step is invalid, we\n      // instead allow the user to click the Next button, prevent them leaving\n      // this step, and render a global error message to clearly convey the\n      // error.\n      if (!this.canGoToStep(stepId)) {\n        this.setState({\n          areStepErrorsVisible: true\n        });\n        return;\n      }\n\n      var currentStepIndex = _steps_config.stepIds.indexOf(stepId);\n\n      this.setState({\n        currentStepId: stepId,\n        nextStepId: _steps_config.stepIds[currentStepIndex + 1],\n        previousStepId: _steps_config.stepIds[currentStepIndex - 1],\n        areStepErrorsVisible: false,\n        isSaving: false\n      });\n\n      if (_steps_config.stepIds.indexOf(stepId) > _steps_config.stepIds.indexOf(this.state.checkpointStepId)) {\n        this.setState({ checkpointStepId: stepId });\n      }\n    }\n  }, {\n    key: 'canGoToStep',\n    value: function canGoToStep(stepId) {\n      var _this3 = this;\n\n      var indexOfStep = _steps_config.stepIds.indexOf(stepId);\n\n      // Check every step before this one and see if it's been completed.\n      var prerequisiteSteps = _steps_config.stepIds.slice(0, indexOfStep);\n\n      return prerequisiteSteps.every(function (prerequisiteStepId) {\n        return !_this3.hasStepErrors(prerequisiteStepId);\n      });\n    }\n  }, {\n    key: 'hasStepErrors',\n    value: function hasStepErrors(stepId) {\n      var _state2 = this.state,\n          indexPatternAsyncErrors = _state2.indexPatternAsyncErrors,\n          stepsFieldErrors = _state2.stepsFieldErrors;\n\n\n      if (stepId === _steps_config.STEP_LOGISTICS) {\n        if (Boolean(indexPatternAsyncErrors)) {\n          return true;\n        }\n      }\n\n      var stepFieldErrors = stepsFieldErrors[stepId];\n      return Object.values(stepFieldErrors).some(function (error) {\n        return error != null;\n      });\n    }\n  }, {\n    key: 'getStepsFieldsErrors',\n    value: function getStepsFieldsErrors(newStepsFields) {\n      return Object.keys(newStepsFields).reduce(function (stepsFieldErrors, stepId) {\n        var stepFields = newStepsFields[stepId];\n        var fieldsValidator = _steps_config.stepIdToStepConfigMap[stepId].fieldsValidator;\n        stepsFieldErrors[stepId] = typeof fieldsValidator === 'function' ? fieldsValidator(stepFields) : {};\n        return stepsFieldErrors;\n      }, {});\n    }\n  }, {\n    key: 'getAllFields',\n    value: function getAllFields() {\n      var _state$stepsFields = this.state.stepsFields,\n          _state$stepsFields$ST = _state$stepsFields[_steps_config.STEP_LOGISTICS],\n          id = _state$stepsFields$ST.id,\n          indexPattern = _state$stepsFields$ST.indexPattern,\n          rollupIndex = _state$stepsFields$ST.rollupIndex,\n          rollupCron = _state$stepsFields$ST.rollupCron,\n          rollupDelay = _state$stepsFields$ST.rollupDelay,\n          rollupPageSize = _state$stepsFields$ST.rollupPageSize,\n          _state$stepsFields$ST2 = _state$stepsFields[_steps_config.STEP_DATE_HISTOGRAM],\n          dateHistogramInterval = _state$stepsFields$ST2.dateHistogramInterval,\n          dateHistogramTimeZone = _state$stepsFields$ST2.dateHistogramTimeZone,\n          dateHistogramField = _state$stepsFields$ST2.dateHistogramField,\n          terms = _state$stepsFields[_steps_config.STEP_TERMS].terms,\n          _state$stepsFields$ST3 = _state$stepsFields[_steps_config.STEP_HISTOGRAM],\n          histogram = _state$stepsFields$ST3.histogram,\n          histogramInterval = _state$stepsFields$ST3.histogramInterval,\n          metrics = _state$stepsFields[_steps_config.STEP_METRICS].metrics;\n\n\n      return {\n        id: id,\n        indexPattern: indexPattern,\n        rollupIndex: rollupIndex,\n        rollupCron: rollupCron,\n        rollupPageSize: rollupPageSize,\n        rollupDelay: rollupDelay,\n        dateHistogramInterval: dateHistogramInterval,\n        dateHistogramTimeZone: dateHistogramTimeZone,\n        dateHistogramField: dateHistogramField,\n        terms: terms,\n        histogram: histogram,\n        histogramInterval: histogramInterval,\n        metrics: metrics\n      };\n    }\n  }, {\n    key: 'getIndexPattern',\n    value: function getIndexPattern() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;\n\n      return state.stepsFields[_steps_config.STEP_LOGISTICS].indexPattern;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          isSaving = _props.isSaving,\n          saveError = _props.saveError;\n\n\n      var savingFeedback = void 0;\n\n      if (isSaving) {\n        savingFeedback = _react2.default.createElement(\n          _eui.EuiOverlayMask,\n          null,\n          _react2.default.createElement(_eui.EuiLoadingKibana, { size: 'xl' })\n        );\n      }\n\n      var saveErrorFeedback = void 0;\n\n      if (saveError) {\n        var message = saveError.message,\n            cause = saveError.cause;\n\n\n        var errorBody = void 0;\n\n        if (cause) {\n          if (cause.length === 1) {\n            errorBody = _react2.default.createElement(\n              'p',\n              null,\n              cause[0]\n            );\n          } else {\n            errorBody = _react2.default.createElement(\n              'ul',\n              null,\n              cause.map(function (causeValue) {\n                return _react2.default.createElement(\n                  'li',\n                  { key: causeValue },\n                  causeValue\n                );\n              })\n            );\n          }\n        }\n\n        saveErrorFeedback = _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(\n            _eui.EuiCallOut,\n            {\n              title: message,\n              icon: 'cross',\n              color: 'danger'\n            },\n            errorBody\n          ),\n          _react2.default.createElement(_eui.EuiSpacer, null)\n        );\n      }\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPageContent,\n          null,\n          _react2.default.createElement(\n            _eui.EuiPageContentHeader,\n            null,\n            _react2.default.createElement(\n              _eui.EuiTitle,\n              { size: 'm' },\n              _react2.default.createElement(\n                'h1',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.createTitle',\n                  defaultMessage: 'Create rollup job'\n                })\n              )\n            )\n          ),\n          saveErrorFeedback,\n          _react2.default.createElement(_eui.EuiStepsHorizontal, { steps: this.getSteps() }),\n          _react2.default.createElement(_eui.EuiSpacer, null),\n          this.renderCurrentStep(),\n          _react2.default.createElement(_eui.EuiSpacer, { size: 'l' }),\n          this.renderNavigation()\n        ),\n        savingFeedback\n      );\n    }\n  }, {\n    key: 'renderCurrentStep',\n    value: function renderCurrentStep() {\n      var _state3 = this.state,\n          currentStepId = _state3.currentStepId,\n          stepsFields = _state3.stepsFields,\n          stepsFieldErrors = _state3.stepsFieldErrors,\n          areStepErrorsVisible = _state3.areStepErrorsVisible,\n          isValidatingIndexPattern = _state3.isValidatingIndexPattern,\n          indexPatternDateFields = _state3.indexPatternDateFields,\n          indexPatternAsyncErrors = _state3.indexPatternAsyncErrors,\n          indexPatternTermsFields = _state3.indexPatternTermsFields,\n          indexPatternHistogramFields = _state3.indexPatternHistogramFields,\n          indexPatternMetricsFields = _state3.indexPatternMetricsFields;\n\n\n      var currentStepFields = stepsFields[currentStepId];\n      var currentStepFieldErrors = stepsFieldErrors[currentStepId];\n\n      switch (currentStepId) {\n        case _steps_config.STEP_LOGISTICS:\n          return _react2.default.createElement(_steps.StepLogistics, {\n            fields: currentStepFields,\n            onFieldsChange: this.onFieldsChange,\n            fieldErrors: currentStepFieldErrors,\n            hasErrors: (0, _steps_config.hasErrors)(currentStepFieldErrors),\n            areStepErrorsVisible: areStepErrorsVisible,\n            isValidatingIndexPattern: isValidatingIndexPattern,\n            indexPatternAsyncErrors: indexPatternAsyncErrors,\n            hasMatchingIndices: Boolean(indexPatternDateFields.length)\n          });\n\n        case _steps_config.STEP_DATE_HISTOGRAM:\n          return _react2.default.createElement(_steps.StepDateHistogram, {\n            indexPattern: this.getIndexPattern(),\n            fields: currentStepFields,\n            onFieldsChange: this.onFieldsChange,\n            fieldErrors: currentStepFieldErrors,\n            hasErrors: (0, _steps_config.hasErrors)(currentStepFieldErrors),\n            areStepErrorsVisible: areStepErrorsVisible,\n            dateFields: indexPatternDateFields\n          });\n\n        case _steps_config.STEP_TERMS:\n          return _react2.default.createElement(_steps.StepTerms, {\n            fields: currentStepFields,\n            onFieldsChange: this.onFieldsChange,\n            termsFields: indexPatternTermsFields\n          });\n\n        case _steps_config.STEP_HISTOGRAM:\n          return _react2.default.createElement(_steps.StepHistogram, {\n            fields: currentStepFields,\n            onFieldsChange: this.onFieldsChange,\n            fieldErrors: currentStepFieldErrors,\n            hasErrors: (0, _steps_config.hasErrors)(currentStepFieldErrors),\n            areStepErrorsVisible: areStepErrorsVisible,\n            histogramFields: indexPatternHistogramFields\n          });\n\n        case _steps_config.STEP_METRICS:\n          return _react2.default.createElement(_steps.StepMetrics, {\n            fields: currentStepFields,\n            onFieldsChange: this.onFieldsChange,\n            fieldErrors: currentStepFieldErrors,\n            areStepErrorsVisible: areStepErrorsVisible,\n            metricsFields: indexPatternMetricsFields\n          });\n\n        case _steps_config.STEP_REVIEW:\n          return _react2.default.createElement(_steps.StepReview, {\n            job: this.getAllFields()\n          });\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: 'renderNavigation',\n    value: function renderNavigation() {\n      var _state4 = this.state,\n          isValidatingIndexPattern = _state4.isValidatingIndexPattern,\n          nextStepId = _state4.nextStepId,\n          previousStepId = _state4.previousStepId,\n          areStepErrorsVisible = _state4.areStepErrorsVisible;\n      var isSaving = this.props.isSaving;\n\n      var hasNextStep = nextStepId != null;\n\n      // Users can click the next step button as long as validation hasn't executed, and as long\n      // as we're not waiting on async validation to complete.\n      var canGoToNextStep = !isValidatingIndexPattern && hasNextStep && (!areStepErrorsVisible || this.canGoToStep(nextStepId));\n\n      return _react2.default.createElement(_navigation.Navigation, {\n        isSaving: isSaving,\n        hasNextStep: hasNextStep,\n        hasPreviousStep: previousStepId != null,\n        goToNextStep: this.goToNextStep,\n        goToPreviousStep: this.goToPreviousStep,\n        canGoToNextStep: canGoToNextStep,\n        save: this.save\n      });\n    }\n  }]);\n\n  return JobCreateUi;\n}(_react.Component);\n\nJobCreateUi.propTypes = {\n  createJob: _propTypes2.default.func,\n  isSaving: _propTypes2.default.bool,\n  createJobError: _propTypes2.default.node\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this4 = this;\n\n  this.requestIndexPatternValidation = (0, _debounce2.default)(function () {\n    var indexPattern = _this4.getIndexPattern();\n\n    var lastIndexPatternValidationTime = _this4.lastIndexPatternValidationTime = Date.now();\n    (0, _services.validateIndexPattern)(indexPattern).then(function (response) {\n      // We don't need to do anything if this component has been unmounted.\n      if (!_this4._isMounted) {\n        return;\n      }\n\n      // Ignore all responses except that to the most recent request.\n      if (lastIndexPatternValidationTime !== _this4.lastIndexPatternValidationTime) {\n        return;\n      }\n\n      var _response$data = response.data,\n          doesIndexPatternMatchIndices = _response$data.doesMatchIndices,\n          doesIndexPatternMatchRollupIndices = _response$data.doesMatchRollupIndices,\n          indexPatternDateFields = _response$data.dateFields,\n          numericFields = _response$data.numericFields,\n          keywordFields = _response$data.keywordFields;\n\n\n      var indexPatternAsyncErrors = void 0;\n\n      if (doesIndexPatternMatchRollupIndices) {\n        indexPatternAsyncErrors = [_react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.rollupJobs.create.errors.indexPatternMatchesRollupIndices',\n          defaultMessage: 'Index pattern must not match rollup indices.'\n        })];\n      } else if (!doesIndexPatternMatchIndices) {\n        indexPatternAsyncErrors = [_react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.rollupJobs.create.errors.indexPatternNoMatchingIndices',\n          defaultMessage: 'Index pattern doesn\\'t match any indices.'\n        })];\n      } else if (!indexPatternDateFields.length) {\n        indexPatternAsyncErrors = [_react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.rollupJobs.create.errors.indexPatternNoTimeFields',\n          defaultMessage: 'Index pattern must match indices that contain time fields.'\n        })];\n      }\n\n      var formattedNumericFields = (0, _services.formatFields)(numericFields, _i18n.i18n.translate('xpack.rollupJobs.create.numericTypeField', { defaultMessage: 'numeric' }));\n      var formattedKeywordFields = (0, _services.formatFields)(keywordFields, _i18n.i18n.translate('xpack.rollupJobs.create.keywordTypeField', { defaultMessage: 'keyword' }));\n      var formattedDateFields = (0, _services.formatFields)(indexPatternDateFields, _i18n.i18n.translate('xpack.rollupJobs.create.dateTypeField', { defaultMessage: 'date' }));\n\n      function sortFields(a, b) {\n        var nameA = a.name.toUpperCase();\n        var nameB = b.name.toUpperCase();\n\n        if (nameA < nameB) {\n          return -1;\n        }\n\n        if (nameA > nameB) {\n          return 1;\n        }\n\n        return 0;\n      }\n\n      var indexPatternTermsFields = [].concat(_toConsumableArray(formattedNumericFields), _toConsumableArray(formattedKeywordFields)).sort(sortFields);\n\n      var indexPatternHistogramFields = [].concat(_toConsumableArray(formattedNumericFields)).sort(sortFields);\n\n      var indexPatternMetricsFields = [].concat(_toConsumableArray(formattedNumericFields), _toConsumableArray(formattedDateFields)).sort(sortFields);\n\n      _this4.setState({\n        indexPatternAsyncErrors: indexPatternAsyncErrors,\n        indexPatternDateFields: indexPatternDateFields,\n        indexPatternTermsFields: indexPatternTermsFields,\n        indexPatternHistogramFields: indexPatternHistogramFields,\n        indexPatternMetricsFields: indexPatternMetricsFields,\n        isValidatingIndexPattern: false\n      });\n\n      // Select first time field by default.\n      _this4.onFieldsChange({\n        dateHistogramField: indexPatternDateFields.length ? indexPatternDateFields[0] : null\n      }, _steps_config.STEP_DATE_HISTOGRAM);\n    }).catch(function (error) {\n      // We don't need to do anything if this component has been unmounted.\n      if (!_this4._isMounted) {\n        return;\n      }\n\n      // Ignore all responses except that to the most recent request.\n      if (lastIndexPatternValidationTime !== _this4.lastIndexPatternValidationTime) {\n        return;\n      }\n\n      // Expect an error in the shape provided by Angular's $http service.\n      if (error && error.data) {\n        var _error$data = error.data,\n            errorString = _error$data.error,\n            statusCode = _error$data.statusCode;\n\n\n        var indexPatternAsyncErrors = [_react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.rollupJobs.create.errors.indexPatternValidationError',\n          defaultMessage: 'There was a problem validating this index pattern: {statusCode} {error}',\n          values: { error: errorString, statusCode: statusCode }\n        })];\n\n        _this4.setState({\n          indexPatternAsyncErrors: indexPatternAsyncErrors,\n          indexPatternDateFields: [],\n          indexPatternTermsFields: [],\n          indexPatternHistogramFields: [],\n          indexPatternMetricsFields: [],\n          isValidatingIndexPattern: false\n        });\n\n        return;\n      }\n\n      // This error isn't an HTTP error, so let the fatal error screen tell the user something\n      // unexpected happened.\n      (0, _notify.fatalError)(error, _i18n.i18n.translate('xpack.rollupJobs.create.errors.indexPatternValidationFatalErrorTitle', {\n        defaultMessage: 'Rollup Job Wizard index pattern validation'\n      }));\n    });\n  }, 300);\n\n  this.goToNextStep = function () {\n    _this4.goToStep(_this4.state.nextStepId);\n  };\n\n  this.goToPreviousStep = function () {\n    _this4.goToStep(_this4.state.previousStepId);\n  };\n\n  this.onFieldsChange = function (fields) {\n    var currentStepId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this4.state.currentStepId;\n    var stepsFields = _this4.state.stepsFields;\n\n    var prevFields = stepsFields[currentStepId];\n\n    var affectedStepsFields = (0, _steps_config.getAffectedStepsFields)(fields, stepsFields);\n\n    var newFields = _extends({}, prevFields, fields);\n\n    var newStepsFields = _extends({}, affectedStepsFields, _defineProperty({}, currentStepId, newFields));\n\n    _this4.setState({\n      stepsFields: newStepsFields,\n      stepsFieldErrors: _this4.getStepsFieldsErrors(newStepsFields)\n    });\n  };\n\n  this.save = function () {\n    var createJob = _this4.props.createJob;\n\n    var jobConfig = _this4.getAllFields();\n\n    createJob(jobConfig);\n  };\n};\n\nvar JobCreate = exports.JobCreate = (0, _react3.injectI18n)(JobCreateUi);",null]}