{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/discover/_hit_sort_fn.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/discover/_hit_sort_fn.js","mtime":1567631711563},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HitSortFnFactory;\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// eslint-disable-next-line @elastic/kibana-custom/no-default-export\nfunction HitSortFnFactory() {\n  /**\n   * Creates a sort function that will resort hits based on the value\n   * es used to sort them.\n   *\n   * background:\n   * When a hit is sorted by elasticsearch, es will write the values that it used\n   * to sort them into an array at the top level of the hit like so\n   *\n   * ```\n   * hits: {\n   *   total: x,\n   *   hits: [\n   *     {\n   *       _id: i,\n   *       _source: {},\n   *       sort: [\n   *         // all values used to sort, in the order of precedence\n   *       ]\n   *     }\n   *   ]\n   * };\n   * ```\n   *\n   * @param  {[type]} field     [description]\n   * @param  {[type]} direction [description]\n   * @return {[type]}           [description]\n   */\n  return function createHitSortFn(direction) {\n    var descending = direction === 'desc';\n\n    return function sortHits(hitA, hitB) {\n      var bBelowa = null;\n\n      var aSorts = hitA.sort || [];\n      var bSorts = hitB.sort || [];\n\n      // walk each sort value, and compare until one is different\n      for (var i = 0; i < bSorts.length; i++) {\n        var a = aSorts[i];\n        var b = bSorts[i];\n\n        if (a == null || b > a) {\n          bBelowa = !descending;\n          break;\n        }\n\n        if (b < a) {\n          bBelowa = descending;\n          break;\n        }\n      }\n\n      if (bBelowa !== null) {\n        return bBelowa ? -1 : 1;\n      } else {\n        return 0;\n      }\n    };\n  };\n}\nmodule.exports = exports['default'];",null]}