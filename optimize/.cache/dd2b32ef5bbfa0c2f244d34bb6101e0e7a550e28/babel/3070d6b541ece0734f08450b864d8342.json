{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/sections/policy_table/components/policy_table/policy_table.container.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/sections/policy_table/components/policy_table/policy_table.container.js","mtime":1567631711966},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PolicyTable = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _policy_table = require('./policy_table');\n\nvar _actions = require('../../../../store/actions');\n\nvar _selectors = require('../../../../store/selectors');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    policyFilterChanged: function policyFilterChanged(filter) {\n      dispatch((0, _actions.policyFilterChanged)({ filter: filter }));\n    },\n    policyPageChanged: function policyPageChanged(pageNumber) {\n      dispatch((0, _actions.policyPageChanged)({ pageNumber: pageNumber }));\n    },\n    policyPageSizeChanged: function policyPageSizeChanged(pageSize) {\n      dispatch((0, _actions.policyPageSizeChanged)({ pageSize: pageSize }));\n    },\n    policySortChanged: function policySortChanged(sortField, isSortAscending) {\n      dispatch((0, _actions.policySortChanged)({ sortField: sortField, isSortAscending: isSortAscending }));\n    },\n    fetchPolicies: function fetchPolicies(withIndices) {\n      dispatch((0, _actions.fetchPolicies)(withIndices));\n    }\n  };\n};\n\nvar PolicyTable = exports.PolicyTable = (0, _reactRedux.connect)(function (state) {\n  return {\n    totalNumberOfPolicies: (0, _selectors.getPolicies)(state).length,\n    policies: (0, _selectors.getPageOfPolicies)(state),\n    pager: (0, _selectors.getPolicyPager)(state),\n    filter: (0, _selectors.getPolicyFilter)(state),\n    sortField: (0, _selectors.getPolicySort)(state).sortField,\n    isSortAscending: (0, _selectors.getPolicySort)(state).isSortAscending,\n    policyListLoaded: (0, _selectors.isPolicyListLoaded)(state)\n  };\n}, mapDispatchToProps)(_policy_table.PolicyTable);",null]}