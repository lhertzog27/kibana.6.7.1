{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/exactly.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/exactly.js","mtime":1567631711897},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar exactly = exports.exactly = function exactly() {\n  return {\n    name: 'exactly',\n    aliases: [],\n    type: 'filter',\n    context: {\n      types: ['filter']\n    },\n    help: 'Create a filter that matches a given column for a perfectly exact value',\n    args: {\n      column: {\n        types: ['string'],\n        aliases: ['field', 'c'],\n        help: 'The column or field to attach the filter to'\n      },\n      value: {\n        types: ['string'],\n        aliases: ['v', 'val'],\n        help: 'The value to match exactly, including white space and capitalization'\n      }\n    },\n    fn: function fn(context, args) {\n      var value = args.value,\n          column = args.column;\n\n\n      var filter = {\n        type: 'exactly',\n        value: value,\n        column: column\n      };\n\n      return _extends({}, context, { and: [].concat(_toConsumableArray(context.and), [filter]) });\n    }\n  };\n};",null]}