{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/renderers/dropdown_filter/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/renderers/dropdown_filter/index.js","mtime":1567631711903},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dropdownFilter = undefined;\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _common = require('@kbn/interpreter/common');\n\nvar _component = require('./component');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dropdownFilter = exports.dropdownFilter = function dropdownFilter() {\n  return {\n    name: 'dropdown_filter',\n    displayName: 'Dropdown filter',\n    help: 'A dropdown from which you can select values for an \"exactly\" filter',\n    reuseDomNode: true,\n    height: 50,\n    render: function render(domNode, config, handlers) {\n      var value = '%%CANVAS_MATCH_ALL%%';\n      if (handlers.getFilter() !== '') {\n        var filterAST = (0, _common.fromExpression)(handlers.getFilter());\n        value = (0, _lodash.get)(filterAST, 'chain[0].arguments.value[0]');\n      }\n\n      var commit = function commit(value) {\n        if (value === '%%CANVAS_MATCH_ALL%%') {\n          handlers.setFilter('');\n        } else {\n          var newFilterAST = {\n            type: 'expression',\n            chain: [{\n              type: 'function',\n              function: 'exactly',\n              arguments: {\n                value: [value],\n                column: [config.column]\n              }\n            }]\n          };\n\n          var filter = (0, _common.toExpression)(newFilterAST);\n          handlers.setFilter(filter);\n        }\n      };\n\n      // Get choices\n      var choices = config.choices;\n\n      _reactDom2.default.render(_react2.default.createElement(_component.DropdownFilter, { commit: commit, choices: choices || [], value: value }), domNode, function () {\n        return handlers.done();\n      });\n\n      handlers.onDestroy(function () {\n        _reactDom2.default.unmountComponentAtNode(domNode);\n      });\n    }\n  };\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */",null]}