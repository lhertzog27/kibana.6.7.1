{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/state/middleware/fullscreen.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/state/middleware/fullscreen.js","mtime":1567631711935},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fullscreen = undefined;\n\nvar _fullscreen2 = require('../../lib/fullscreen');\n\nvar _transient = require('../actions/transient');\n\nvar _app = require('../selectors/app');\n\nvar fullscreen = exports.fullscreen = function fullscreen(_ref) {\n  var getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      // execute the default action\n      next(action);\n\n      // pass current state's fullscreen info to the fullscreen service\n      if (action.type === _transient.setFullscreen.toString()) {\n        var _fullscreen = (0, _app.getFullscreen)(getState());\n        (0, _fullscreen2.setFullscreen)(_fullscreen);\n      }\n    };\n  };\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */",null]}