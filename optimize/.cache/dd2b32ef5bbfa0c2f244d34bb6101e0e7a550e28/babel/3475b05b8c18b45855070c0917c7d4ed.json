{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/private/private.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/private/private.js","mtime":1567631711748},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _modules = require('../modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * # `Private()`\n * Private module loader, used to merge angular and require js dependency styles\n * by allowing a require.js module to export a single provider function that will\n * create a value used within an angular application. This provider can declare\n * angular dependencies by listing them as arguments, and can be require additional\n * Private modules.\n *\n * ## Define a private module provider:\n * ```js\n * export default function PingProvider($http) {\n *   this.ping = function () {\n *     return $http.head('/health-check');\n *   };\n * };\n * ```\n *\n * ## Require a private module:\n * ```js\n * export default function ServerHealthProvider(Private, Promise) {\n *   let ping = Private(require('ui/ping'));\n *   return {\n *     check: Promise.method(function () {\n *       let attempts = 0;\n *       return (function attempt() {\n *         attempts += 1;\n *         return ping.ping()\n *         .catch(function (err) {\n *           if (attempts < 3) return attempt();\n *         })\n *       }())\n *       .then(function () {\n *         return true;\n *       })\n *       .catch(function () {\n *         return false;\n *       });\n *     })\n *   }\n * };\n * ```\n *\n * # `Private.stub(provider, newInstance)`\n * `Private.stub()` replaces the instance of a module with another value. This is all we have needed until now.\n *\n * ```js\n * beforeEach(inject(function ($injector, Private) {\n *   Private.stub(\n *     // since this module just exports a function, we need to change\n *     // what Private returns in order to modify it's behavior\n *     require('ui/agg_response/hierarchical/_build_split'),\n *     sinon.stub().returns(fakeSplit)\n *   );\n * }));\n * ```\n *\n * # `Private.swap(oldProvider, newProvider)`\n * This new method does an 1-for-1 swap of module providers, unlike `stub()` which replaces a modules instance.\n * Pass the module you want to swap out, and the one it should be replaced with, then profit.\n *\n * Note: even though this example shows `swap()` being called in a config\n * function, it can be called from anywhere. It is particularly useful\n * in this scenario though.\n *\n * ```js\n * beforeEach(module('kibana', function (PrivateProvider) {\n *   PrivateProvider.swap(\n *     // since the courier is required automatically before the tests are loaded,\n *     // we can't stub it's internal components unless we do so before the\n *     // application starts. This is why angular has config functions\n *     require('ui/courier/_redirect_when_missing'),\n *     function StubbedRedirectProvider($decorate) {\n *       // $decorate is a function that will instantiate the original module when called\n *       return sinon.spy($decorate());\n *     }\n *   );\n * }));\n * ```\n *\n * @param {[type]} prov [description]\n */\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar nextId = _lodash2.default.partial(_lodash2.default.uniqueId, 'privateProvider#');\n\nfunction name(fn) {\n  return fn.name || fn.toString().split('\\n').shift();\n}\n\n_modules.uiModules.get('kibana/private').provider('Private', function () {\n  var provider = this;\n\n  // one cache/swaps per Provider\n  var cache = {};\n  var swaps = {};\n\n  // return the uniq id for this function\n  function identify(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('Expected private module \"' + fn + '\" to be a function');\n    }\n\n    if (fn.$$id) return fn.$$id;else return fn.$$id = nextId();\n  }\n\n  provider.stub = function (fn, instance) {\n    cache[identify(fn)] = instance;\n    return instance;\n  };\n\n  provider.swap = function (fn, prov) {\n    var id = identify(fn);\n    swaps[id] = prov;\n  };\n\n  provider.$get = ['$injector', function PrivateFactory($injector) {\n\n    // prevent circular deps by tracking where we came from\n    var privPath = [];\n    var pathToString = function pathToString() {\n      return privPath.map(name).join(' -> ');\n    };\n\n    // call a private provider and return the instance it creates\n    function instantiate(prov, locals) {\n      if (~privPath.indexOf(prov)) {\n        throw new Error('Circular reference to \"' + name(prov) + '\"' + ' found while resolving private deps: ' + pathToString());\n      }\n\n      privPath.push(prov);\n\n      var context = {};\n      var instance = $injector.invoke(prov, context, locals);\n      if (!_lodash2.default.isObject(instance)) instance = context;\n\n      privPath.pop();\n      return instance;\n    }\n\n    // retrieve an instance from cache or create and store on\n    function get(id, prov, $delegateId, $delegateProv) {\n      if (cache[id]) return cache[id];\n\n      var instance = void 0;\n\n      if ($delegateId != null && $delegateProv != null) {\n        instance = instantiate(prov, {\n          $decorate: _lodash2.default.partial(get, $delegateId, $delegateProv)\n        });\n      } else {\n        instance = instantiate(prov);\n      }\n\n      return cache[id] = instance;\n    }\n\n    // main api, get the appropriate instance for a provider\n    function Private(prov) {\n      var id = identify(prov);\n      var $delegateId = void 0;\n      var $delegateProv = void 0;\n\n      if (swaps[id]) {\n        $delegateId = id;\n        $delegateProv = prov;\n\n        prov = swaps[$delegateId];\n        id = identify(prov);\n      }\n\n      return get(id, prov, $delegateId, $delegateProv);\n    }\n\n    Private.stub = provider.stub;\n    Private.swap = provider.swap;\n\n    return Private;\n  }];\n});",null]}