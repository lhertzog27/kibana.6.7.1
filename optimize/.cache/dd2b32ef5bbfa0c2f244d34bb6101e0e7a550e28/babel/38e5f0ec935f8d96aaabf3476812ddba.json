{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/renderers/metric/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/renderers/metric/index.js","mtime":1567631711904},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.metric = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar metric = exports.metric = function metric() {\n  return {\n    name: 'metric',\n    displayName: 'Metric',\n    help: 'Render HTML Markup for the Metric element',\n    reuseDomNode: true,\n    render: function render(domNode, config, handlers) {\n      var metricFontStyle = config.metricFont ? config.metricFont.spec : {};\n      var labelFontStyle = config.labelFont ? config.labelFont.spec : {};\n\n      _reactDom2.default.render(_react2.default.createElement(\n        'div',\n        { className: 'canvasMetric' },\n        _react2.default.createElement(\n          'div',\n          { className: 'canvasMetric__metric', style: metricFontStyle },\n          config.metric\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'canvasMetric__label', style: labelFontStyle },\n          config.label\n        )\n      ), domNode, function () {\n        return handlers.done();\n      });\n\n      handlers.onDestroy(function () {\n        return _reactDom2.default.unmountComponentAtNode(domNode);\n      });\n    }\n  };\n};",null]}