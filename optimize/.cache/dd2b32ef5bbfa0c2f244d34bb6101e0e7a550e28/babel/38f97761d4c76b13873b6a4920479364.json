{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/store/actions/nodes.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/store/actions/nodes.js","mtime":1567631711967},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchNodeDetails = exports.fetchedNodeDetails = exports.fetchNodes = exports.fetchedNodes = exports.setSelectedReplicaCount = exports.setSelectedPrimaryShardCount = exports.setSelectedNodeAttrs = undefined;\n\nvar _i18n = require('@kbn/i18n');\n\nvar _reduxActions = require('redux-actions');\n\nvar _api_errors = require('../../services/api_errors');\n\nvar _api = require('../../services/api');\n\nvar _constants = require('../constants');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\n\nvar setSelectedNodeAttrs = exports.setSelectedNodeAttrs = (0, _reduxActions.createAction)(_constants.SET_SELECTED_NODE_ATTRS);\nvar setSelectedPrimaryShardCount = exports.setSelectedPrimaryShardCount = (0, _reduxActions.createAction)('SET_SELECTED_PRIMARY_SHARED_COUNT');\nvar setSelectedReplicaCount = exports.setSelectedReplicaCount = (0, _reduxActions.createAction)('SET_SELECTED_REPLICA_COUNT');\nvar fetchedNodes = exports.fetchedNodes = (0, _reduxActions.createAction)('FETCHED_NODES');\nvar fetchingNodes = false;\nvar fetchNodes = exports.fetchNodes = function fetchNodes() {\n  return function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch) {\n      var nodes, title;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (fetchingNodes) {\n                _context.next = 7;\n                break;\n              }\n\n              fetchingNodes = true;\n              _context.next = 5;\n              return (0, _api.loadNodes)();\n\n            case 5:\n              nodes = _context.sent;\n\n              dispatch(fetchedNodes(nodes));\n\n            case 7:\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context['catch'](0);\n              title = _i18n.i18n.translate('xpack.indexLifecycleMgmt.editPolicy.nodeInfoErrorMessage', {\n                defaultMessage: 'Error loading node attribute information'\n              });\n\n              (0, _api_errors.showApiError)(_context.t0, title);\n\n            case 13:\n              _context.prev = 13;\n\n              fetchingNodes = false;\n              return _context.finish(13);\n\n            case 16:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined, [[0, 9, 13, 16]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nvar fetchedNodeDetails = exports.fetchedNodeDetails = (0, _reduxActions.createAction)('FETCHED_NODE_DETAILS', function (selectedNodeAttrs, details) {\n  return {\n    selectedNodeAttrs: selectedNodeAttrs,\n    details: details\n  };\n});\nvar fetchNodeDetails = exports.fetchNodeDetails = function fetchNodeDetails(selectedNodeAttrs) {\n  return function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(dispatch) {\n      var details, title;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              details = void 0;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return (0, _api.loadNodeDetails)(selectedNodeAttrs);\n\n            case 4:\n              details = _context2.sent;\n              _context2.next = 12;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2['catch'](1);\n              title = _i18n.i18n.translate('xpack.indexLifecycleMgmt.editPolicy.nodeDetailErrorMessage', {\n                defaultMessage: 'Error loading node attribute details'\n              });\n\n              (0, _api_errors.showApiError)(_context2.t0, title);\n              return _context2.abrupt('return', false);\n\n            case 12:\n              dispatch(fetchedNodeDetails(selectedNodeAttrs, details));\n\n            case 13:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, undefined, [[1, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};",null]}