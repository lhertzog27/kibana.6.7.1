{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/revealImage.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/revealImage.js","mtime":1567631711899},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.revealImage = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nvar _resolve_dataurl = require('../../../common/lib/resolve_dataurl');\n\nvar _elastic_outline = require('../../lib/elastic_outline');\n\nvar revealImage = exports.revealImage = function revealImage() {\n  return {\n    name: 'revealImage',\n    aliases: [],\n    type: 'render',\n    help: 'Configure a image reveal element',\n    context: {\n      types: ['number']\n    },\n    args: {\n      image: {\n        types: ['string', 'null'],\n        help: 'The image to reveal',\n        default: _elastic_outline.elasticOutline\n      },\n      emptyImage: {\n        types: ['string', 'null'],\n        help: 'An optional background image to reveal over',\n        default: null\n      },\n      origin: {\n        types: ['string'],\n        help: 'Where to start from. Eg, top, left, bottom or right',\n        default: 'bottom',\n        options: ['top', 'left', 'bottom', 'right']\n      }\n    },\n    fn: function fn(percent, args) {\n      if (percent > 1 || percent < 0) {\n        throw new Error('Invalid value: \\'' + percent + '\\'. Percentage must be between 0 and 1');\n      }\n\n      return {\n        type: 'render',\n        as: 'revealImage',\n        value: _extends({\n          percent: percent\n        }, args, {\n          image: (0, _resolve_dataurl.resolveWithMissingImage)(args.image, _elastic_outline.elasticOutline),\n          emptyImage: (0, _resolve_dataurl.resolveWithMissingImage)(args.emptyImage)\n        })\n      };\n    }\n  };\n};",null]}