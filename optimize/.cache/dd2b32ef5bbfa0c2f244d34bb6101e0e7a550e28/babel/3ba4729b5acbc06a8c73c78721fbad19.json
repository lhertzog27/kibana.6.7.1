{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/layer_addpanel/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/layer_addpanel/index.js","mtime":1567631712013},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddLayerPanel = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _view = require('./view');\n\nvar _ui = require('../../store/ui');\n\nvar _map_selectors = require('../../selectors/map_selectors');\n\nvar _store_actions = require('../../actions/store_actions');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nfunction mapStateToProps() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var selectedLayer = (0, _map_selectors.getSelectedLayer)(state);\n  return {\n    flyoutVisible: (0, _ui.getFlyoutDisplay)(state) !== _ui.FLYOUT_STATE.NONE,\n    hasLayerSelected: !!selectedLayer,\n    isLoading: selectedLayer && selectedLayer.isLayerLoading()\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  var _this = this;\n\n  return {\n    closeFlyout: function closeFlyout() {\n      dispatch((0, _store_actions.clearTransientLayerStateAndCloseFlyout)());\n    },\n    previewLayer: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(layer) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch((0, _store_actions.setSelectedLayer)(null));\n\n              case 2:\n                _context.next = 4;\n                return dispatch((0, _store_actions.removeTransientLayer)());\n\n              case 4:\n                dispatch((0, _store_actions.addLayer)(layer.toLayerDescriptor()));\n                dispatch((0, _store_actions.setSelectedLayer)(layer.getId()));\n                dispatch((0, _store_actions.setTransientLayer)(layer.getId()));\n\n              case 7:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this);\n      }));\n\n      function previewLayer(_x2) {\n        return _ref.apply(this, arguments);\n      }\n\n      return previewLayer;\n    }(),\n    removeTransientLayer: function removeTransientLayer() {\n      dispatch((0, _store_actions.setSelectedLayer)(null));\n      dispatch((0, _store_actions.removeTransientLayer)());\n    },\n    selectLayerAndAdd: function selectLayerAndAdd() {\n      dispatch((0, _store_actions.setTransientLayer)(null));\n      dispatch((0, _ui.updateFlyout)(_ui.FLYOUT_STATE.LAYER_PANEL));\n    }\n  };\n}\n\nvar connectedFlyOut = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, null, { withRef: true })(_view.AddLayerPanel);\nexports.AddLayerPanel = connectedFlyOut;",null]}