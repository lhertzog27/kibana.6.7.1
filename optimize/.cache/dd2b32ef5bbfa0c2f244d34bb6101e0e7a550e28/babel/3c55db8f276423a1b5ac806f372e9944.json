{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/agg_types_filter/agg_types_filter.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/agg_types_filter/agg_types_filter.js","mtime":1567631712054},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _field_types = require('plugins/ml/../common/constants/field_types');\n\nvar _general = require('plugins/ml/jobs/new_job/simple/components/constants/general');\n\nvar _modules = require('ui/modules');\n\nvar _module = _modules.uiModules.get('apps/ml'); /*\n                                                  * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                  * or more contributor license agreements. Licensed under the Elastic License;\n                                                  * you may not use this file except in compliance with the Elastic License.\n                                                  */\n\n_module.filter('filterAggTypes', function () {\n  return function (aggTypes, field) {\n    return aggTypes.filter(function (type) {\n      if (field.id === _general.EVENT_RATE_COUNT_FIELD) {\n        if (type.isCountType) {\n          return true;\n        }\n      } else {\n        if (!type.isCountType) {\n          if (field.mlType === _field_types.ML_JOB_FIELD_TYPES.KEYWORD || field.mlType === _field_types.ML_JOB_FIELD_TYPES.IP) {\n            // keywords and ips can't have the full list of aggregations.\n            // currently limited to Distinct count only\n            if (type.isAggregatableStringType) {\n              return true;\n            }\n          } else {\n            return true;\n          }\n        }\n      }\n      return false;\n    });\n  };\n});",null]}