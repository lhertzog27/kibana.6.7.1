{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/sidebar/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/sidebar/index.js","mtime":1567631711927},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sidebar = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nvar _reactRedux = require('react-redux');\n\nvar _clone_subgraphs = require('../../lib/clone_subgraphs');\n\nvar _elements = require('../../state/actions/elements');\n\nvar _workpad = require('../../state/selectors/workpad');\n\nvar _transient = require('./../../state/actions/transient');\n\nvar _sidebar = require('./sidebar');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectedPage: (0, _workpad.getSelectedPage)(state),\n    selectedElement: (0, _workpad.getSelectedElement)(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    duplicateElement: function duplicateElement(pageId, selectedElement) {\n      return function () {\n        // gradually unifying code with copy/paste\n        // todo: more unification w/ copy/paste; group cloning\n        var newElements = (0, _clone_subgraphs.cloneSubgraphs)([selectedElement]);\n        dispatch((0, _elements.insertNodes)(newElements, pageId));\n        dispatch((0, _transient.selectElement)(newElements[0].id));\n      };\n    },\n    elementLayer: function elementLayer(pageId, selectedElement) {\n      return function (movement) {\n        return dispatch((0, _elements.elementLayer)({\n          pageId: pageId,\n          elementId: selectedElement.id,\n          movement: movement\n        }));\n      };\n    }\n  };\n};\n\nvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n  var selectedElement = stateProps.selectedElement,\n      selectedPage = stateProps.selectedPage;\n\n\n  return _extends({}, stateProps, dispatchProps, ownProps, {\n    elementIsSelected: Boolean(selectedElement),\n    duplicateElement: dispatchProps.duplicateElement(selectedPage, selectedElement),\n    elementLayer: dispatchProps.elementLayer(selectedPage, selectedElement)\n  });\n};\n\nvar Sidebar = exports.Sidebar = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(_sidebar.Sidebar);",null]}