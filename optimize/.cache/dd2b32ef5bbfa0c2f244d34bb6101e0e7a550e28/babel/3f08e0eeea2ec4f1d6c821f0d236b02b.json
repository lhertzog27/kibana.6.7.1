{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/widget_overlay/view_control/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/widget_overlay/view_control/index.js","mtime":1567631712016},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ViewControl = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _view_control = require('./view_control');\n\nvar _map_selectors = require('../../../selectors/map_selectors');\n\nvar _ui = require('../../../store/ui');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction mapStateToProps() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return {\n    isSetViewOpen: (0, _ui.getIsSetViewOpen)(state),\n    mouseCoordinates: (0, _map_selectors.getMouseCoordinates)(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    closeSetView: function closeSetView() {\n      dispatch((0, _ui.closeSetView)());\n    },\n    openSetView: function openSetView() {\n      dispatch((0, _ui.openSetView)());\n    }\n  };\n}\n\nvar connectedViewControl = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_view_control.ViewControl);\nexports.ViewControl = connectedViewControl;",null]}