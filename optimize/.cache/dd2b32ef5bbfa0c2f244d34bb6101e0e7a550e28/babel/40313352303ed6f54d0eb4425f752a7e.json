{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/lib/render_badges.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/lib/render_badges.js","mtime":1567631711971},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderBadges = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _i18n = require('@kbn/i18n');\n\nvar _eui = require('@elastic/eui');\n\nvar _index_management_extensions = require('../index_management_extensions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar renderBadges = exports.renderBadges = function renderBadges(index, filterChanged) {\n  var badgeLabels = [];\n  (0, _index_management_extensions.getBadgeExtensions)().forEach(function (_ref) {\n    var matchIndex = _ref.matchIndex,\n        label = _ref.label,\n        color = _ref.color,\n        filterExpression = _ref.filterExpression;\n\n    if (matchIndex(index)) {\n      var clickHandler = function clickHandler() {\n        filterChanged && filterExpression && filterChanged(_eui.EuiSearchBar.Query.parse(filterExpression));\n      };\n      var ariaLabel = _i18n.i18n.translate('xpack.idxMgmt.badgeAriaLabel', {\n        defaultMessage: '{label}. Select to filter on this.',\n        values: { label: label }\n      });\n      badgeLabels.push(_react2.default.createElement(\n        _react.Fragment,\n        { key: label },\n        ' ',\n        _react2.default.createElement(\n          _eui.EuiBadge,\n          {\n            color: color,\n            onClick: clickHandler,\n            onClickAriaLabel: ariaLabel\n          },\n          label\n        )\n      ));\n    }\n  });\n  return _react2.default.createElement(\n    _react.Fragment,\n    null,\n    badgeLabels\n  );\n};",null]}