{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/logstash/nodes/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/logstash/nodes/index.js","mtime":1567631712103},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _route_init = require('plugins/monitoring/lib/route_init');\n\nvar _ = require('../../');\n\nvar _get_page_data = require('./get_page_data');\n\nvar _index = require('./index.html');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _i18n = require('ui/i18n');\n\nvar _listing = require('../../../components/logstash/listing');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n_routes2.default.when('/logstash/nodes', {\n  template: _index2.default,\n  resolve: {\n    clusters: function clusters(Private) {\n      var routeInit = Private(_route_init.routeInitProvider);\n      return routeInit();\n    },\n\n    pageData: _get_page_data.getPageData\n  },\n  controllerAs: 'lsNodes',\n  controller: function (_MonitoringViewBaseEu) {\n    _inherits(LsNodesList, _MonitoringViewBaseEu);\n\n    function LsNodesList($injector, $scope) {\n      _classCallCheck(this, LsNodesList);\n\n      var kbnUrl = $injector.get('kbnUrl');\n\n      var _this = _possibleConstructorReturn(this, (LsNodesList.__proto__ || Object.getPrototypeOf(LsNodesList)).call(this, {\n        title: 'Logstash - Nodes',\n        storageKey: 'logstash.nodes',\n        getPageData: _get_page_data.getPageData,\n        reactNodeId: 'monitoringLogstashNodesApp',\n        $scope: $scope,\n        $injector: $injector\n      }));\n\n      $scope.$watch(function () {\n        return _this.data;\n      }, function (data) {\n        _this.renderReact(_react2.default.createElement(\n          _i18n.I18nContext,\n          null,\n          _react2.default.createElement(_listing.Listing, {\n            data: data.nodes,\n            stats: data.clusterStatus,\n            sorting: _this.sorting,\n            pagination: _this.pagination,\n            onTableChange: _this.onTableChange,\n            angular: { kbnUrl: kbnUrl, scope: $scope }\n          })\n        ));\n      });\n      return _this;\n    }\n\n    return LsNodesList;\n  }(_.MonitoringViewBaseEuiTableController)\n});",null]}