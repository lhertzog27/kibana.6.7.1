{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/jobs_list/components/job_details/format_values.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/jobs_list/components/job_details/format_values.js","mtime":1567631712049},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nexports.formatValues = formatValues;\nexports.filterObjects = filterObjects;\n\nvar _numeral = require('@elastic/numeral');\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nvar _format = require('@elastic/eui/lib/services/format');\n\nvar _string_utils = require('plugins/ml/util/string_utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TIME_FORMAT = 'YYYY-MM-DD HH:mm:ss';\nvar DATA_FORMAT = '0.0 b';\n\nfunction formatData(txt) {\n  return (0, _numeral2.default)(txt).format(DATA_FORMAT);\n}\n\nfunction formatValues(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n\n  // time\n  switch (key) {\n    case 'finished_time':\n    case 'create_time':\n    case 'log_time':\n    case 'timestamp':\n    case 'earliest_record_timestamp':\n    case 'latest_record_timestamp':\n    case 'last_data_time':\n    case 'latest_empty_bucket_timestamp':\n    case 'latest_sparse_bucket_timestamp':\n      value = (0, _format.formatDate)(value, TIME_FORMAT);\n      break;\n\n    // data\n    case 'established_model_memory':\n    case 'input_bytes':\n    case 'model_bytes':\n      value = formatData(value);\n      break;\n\n    // numbers\n    case 'processed_record_count':\n    case 'processed_field_count':\n    case 'input_field_count':\n    case 'invalid_date_count':\n    case 'missing_field_count':\n    case 'out_of_order_timestamp_count':\n    case 'empty_bucket_count':\n    case 'sparse_bucket_count':\n    case 'bucket_count':\n    case 'input_record_count':\n    case 'total_by_field_count':\n    case 'total_over_field_count':\n    case 'total_partition_field_count':\n    case 'bucket_allocation_failures_count':\n      value = (0, _string_utils.toLocaleString)(value);\n      break;\n\n    default:\n      break;\n  }\n  return [key, value];\n}\n\n// utility function to filter child object and arrays out of the supplied object.\n// overrides can be supplied to allow either objects or arrays\n// used to remove lists or nested objects from the job config when displaying it in the expanded row\nfunction filterObjects(obj, allowArrays, allowObjects) {\n  return Object.keys(obj).filter(function (k) {\n    return allowObjects || _typeof(obj[k]) !== 'object' || allowArrays && Array.isArray(obj[k]);\n  }).map(function (k) {\n    var item = obj[k];\n    if (Array.isArray(item)) {\n      item = item.join(', ');\n    } else if (_typeof(obj[k]) === 'object') {\n      item = JSON.stringify(item);\n    }\n    return [k, item];\n  });\n}",null]}