{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/sections/follower_index_edit/follower_index_edit.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/sections/follower_index_edit/follower_index_edit.js","mtime":1567631711952},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FollowerIndexEdit = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp2; /*\n                     * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                     * or more contributor license agreements. Licensed under the Elastic License;\n                     * you may not use this file except in compliance with the Elastic License.\n                     */\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _management = require('ui/management');\n\nvar _eui = require('@elastic/eui');\n\nvar _breadcrumbs = require('../../services/breadcrumbs');\n\nvar _routing = require('../../services/routing');\n\nvar _routing2 = _interopRequireDefault(_routing);\n\nvar _components = require('../../components');\n\nvar _constants = require('../../constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FollowerIndexEdit = (0, _react3.injectI18n)((_temp2 = _class = function (_PureComponent) {\n  _inherits(_class, _PureComponent);\n\n  function _class() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, _class);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      lastFollowerIndexId: undefined,\n      showConfirmModal: false\n    }, _this.saveFollowerIndex = function (name, followerIndex) {\n      _this.editedFollowerIndexPayload = { name: name, followerIndex: followerIndex };\n      _this.showConfirmModal();\n    }, _this.confirmSaveFollowerIhdex = function () {\n      var _this$editedFollowerI = _this.editedFollowerIndexPayload,\n          name = _this$editedFollowerI.name,\n          followerIndex = _this$editedFollowerI.followerIndex;\n\n      _this.props.saveFollowerIndex(name, followerIndex);\n      _this.closeConfirmModal();\n    }, _this.showConfirmModal = function () {\n      return _this.setState({ showConfirmModal: true });\n    }, _this.closeConfirmModal = function () {\n      return _this.setState({ showConfirmModal: false });\n    }, _this.renderConfirmModal = function () {\n      var _this$props = _this.props,\n          followerIndexId = _this$props.followerIndexId,\n          intl = _this$props.intl,\n          isPaused = _this$props.followerIndex.isPaused;\n\n      var title = intl.formatMessage({\n        id: 'xpack.crossClusterReplication.followerIndexEditForm.confirmModal.title',\n        defaultMessage: 'Update follower index \\'{id}\\'?'\n      }, { id: followerIndexId });\n\n      return _react2.default.createElement(\n        _eui.EuiOverlayMask,\n        null,\n        _react2.default.createElement(\n          _eui.EuiConfirmModal,\n          {\n            title: title,\n            onCancel: _this.closeConfirmModal,\n            onConfirm: _this.confirmSaveFollowerIhdex,\n            cancelButtonText: intl.formatMessage({\n              id: 'xpack.crossClusterReplication.followerIndexEditForm.confirmModal.cancelButtonText',\n              defaultMessage: 'Cancel'\n            }),\n            confirmButtonText: isPaused ? _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.followerIndexEditForm.confirmModal.confirmAndResumeButtonText',\n              defaultMessage: 'Update and resume'\n            }) : _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.followerIndexEditForm.confirmModal.confirmButtonText',\n              defaultMessage: 'Update'\n            })\n          },\n          _react2.default.createElement(\n            'p',\n            null,\n            isPaused ? _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.followerIndexEditForm.confirmModal.resumeDescription',\n              defaultMessage: 'Updating a follower index resumes replication of its leader index.'\n            }) : _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.followerIndexEditForm.confirmModal.description',\n              defaultMessage: 'The follower index is paused, then resumed. If the update fails, try manually resuming replication.'\n            })\n          )\n        )\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(_class, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          id = _props.match.params.id,\n          selectFollowerIndex = _props.selectFollowerIndex;\n\n      var decodedId = void 0;\n      try {\n        // When we navigate through the router (history.push) we need to decode both the uri and the id\n        decodedId = decodeURI(id);\n        decodedId = decodeURIComponent(decodedId);\n      } catch (e) {\n        // This is a page load. I guess that AngularJS router does already a decodeURI so it is not\n        // necessary in this case.\n        decodedId = decodeURIComponent(id);\n      }\n\n      selectFollowerIndex(decodedId);\n\n      _chrome2.default.breadcrumbs.set([_management.MANAGEMENT_BREADCRUMB, _breadcrumbs.listBreadcrumb, _breadcrumbs.editBreadcrumb]);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _props2 = this.props,\n          followerIndex = _props2.followerIndex,\n          getFollowerIndex = _props2.getFollowerIndex;\n      // Fetch the follower index on the server if we don't have it (i.e. page reload)\n\n      if (!followerIndex && prevState.lastFollowerIndexId !== this.state.lastFollowerIndexId) {\n        getFollowerIndex(this.state.lastFollowerIndexId);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.clearApiError();\n    }\n  }, {\n    key: 'renderLoadingFollowerIndex',\n    value: function renderLoadingFollowerIndex() {\n      return _react2.default.createElement(\n        _components.SectionLoading,\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.crossClusterReplication.followerIndexEditForm.loadingFollowerIndexTitle',\n          defaultMessage: 'Loading follower index...'\n        })\n      );\n    }\n  }, {\n    key: 'renderGetFollowerIndexError',\n    value: function renderGetFollowerIndexError(error) {\n      var _props3 = this.props,\n          intl = _props3.intl,\n          name = _props3.match.params.id;\n\n      var title = intl.formatMessage({\n        id: 'xpack.crossClusterReplication.followerIndexEditForm.loadingErrorTitle',\n        defaultMessage: 'Error loading follower index'\n      });\n      var errorMessage = error.status === 404 ? {\n        data: {\n          error: intl.formatMessage({\n            id: 'xpack.crossClusterReplication.followerIndexEditForm.loadingErrorMessage',\n            defaultMessage: 'The follower index \\'{name}\\' does not exist.'\n          }, { name: name })\n        }\n      } : error;\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(_components.SectionError, { title: title, error: errorMessage }),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n        _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          null,\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiButtonEmpty,\n              _extends({}, _routing2.default.getRouterLinkProps('/follower_indices'), {\n                iconType: 'arrowLeft',\n                flush: 'left'\n              }),\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.followerIndexEditForm.viewFollowerIndicesButtonLabel',\n                defaultMessage: 'View follower indices'\n              })\n            )\n          )\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props4 = this.props,\n          clearApiError = _props4.clearApiError,\n          apiStatus = _props4.apiStatus,\n          apiError = _props4.apiError,\n          followerIndex = _props4.followerIndex,\n          currentUrl = _props4.match.url;\n      var showConfirmModal = this.state.showConfirmModal;\n\n      /* remove non-editable properties */\n\n      var _ref2 = followerIndex || {},\n          shards = _ref2.shards,\n          rest = _objectWithoutProperties(_ref2, ['shards']); // eslint-disable-line no-unused-vars\n\n      return _react2.default.createElement(\n        _eui.EuiPageContent,\n        {\n          horizontalPosition: 'center',\n          className: 'ccrPageContent'\n        },\n        _react2.default.createElement(_components.FollowerIndexPageTitle, {\n          title: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.followerIndex.editTitle',\n            defaultMessage: 'Edit follower index'\n          })\n        }),\n        apiStatus.get === _constants.API_STATUS.LOADING && this.renderLoadingFollowerIndex(),\n        apiError.get && this.renderGetFollowerIndexError(apiError.get),\n        followerIndex && _react2.default.createElement(\n          _components.RemoteClustersProvider,\n          null,\n          function (_ref3) {\n            var isLoading = _ref3.isLoading,\n                error = _ref3.error,\n                remoteClusters = _ref3.remoteClusters;\n\n            if (isLoading) {\n              return _react2.default.createElement(\n                _components.SectionLoading,\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.crossClusterReplication.followerIndexCreateForm.loadingRemoteClusters',\n                  defaultMessage: 'Loading remote clusters...'\n                })\n              );\n            }\n\n            return _react2.default.createElement(_components.FollowerIndexForm, {\n              followerIndex: rest,\n              apiStatus: apiStatus.save,\n              apiError: apiError.save,\n              currentUrl: currentUrl,\n              remoteClusters: error ? [] : remoteClusters,\n              saveFollowerIndex: _this2.saveFollowerIndex,\n              clearApiError: clearApiError,\n              saveButtonLabel: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.followerIndexEditForm.saveButtonLabel',\n                defaultMessage: 'Update'\n              })\n            });\n          }\n        ),\n        showConfirmModal && this.renderConfirmModal()\n      );\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(_ref4, _ref5) {\n      var followerIndexId = _ref4.followerIndexId;\n      var lastFollowerIndexId = _ref5.lastFollowerIndexId;\n\n      if (lastFollowerIndexId !== followerIndexId) {\n        return { lastFollowerIndexId: followerIndexId };\n      }\n      return null;\n    }\n  }]);\n\n  return _class;\n}(_react.PureComponent), _class.propTypes = {\n  getFollowerIndex: _propTypes2.default.func.isRequired,\n  selectFollowerIndex: _propTypes2.default.func.isRequired,\n  saveFollowerIndex: _propTypes2.default.func.isRequired,\n  clearApiError: _propTypes2.default.func.isRequired,\n  apiError: _propTypes2.default.object.isRequired,\n  apiStatus: _propTypes2.default.object.isRequired,\n  followerIndex: _propTypes2.default.object,\n  followerIndexId: _propTypes2.default.string\n}, _temp2));\nexports.FollowerIndexEdit = FollowerIndexEdit;",null]}