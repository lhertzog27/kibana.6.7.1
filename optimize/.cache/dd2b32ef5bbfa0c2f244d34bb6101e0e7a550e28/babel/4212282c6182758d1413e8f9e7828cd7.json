{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/es_source.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/es_source.js","mtime":1567631712020},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractESSource = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vector_source = require('./vector_source');\n\nvar _kibana_services = require('../../../kibana_services');\n\nvar _elasticsearch_geo_utils = require('../../../elasticsearch_geo_utils');\n\nvar _timefilter = require('ui/timefilter/timefilter');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _agg_configs = require('ui/vis/agg_configs');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar AbstractESSource = exports.AbstractESSource = function (_AbstractVectorSource) {\n  _inherits(AbstractESSource, _AbstractVectorSource);\n\n  function AbstractESSource(descriptor) {\n    _classCallCheck(this, AbstractESSource);\n\n    return _possibleConstructorReturn(this, (AbstractESSource.__proto__ || Object.getPrototypeOf(AbstractESSource)).call(this, descriptor));\n  }\n\n  _createClass(AbstractESSource, [{\n    key: 'isFieldAware',\n    value: function isFieldAware() {\n      return true;\n    }\n  }, {\n    key: 'isRefreshTimerAware',\n    value: function isRefreshTimerAware() {\n      return true;\n    }\n  }, {\n    key: 'isQueryAware',\n    value: function isQueryAware() {\n      return true;\n    }\n  }, {\n    key: 'getIndexPatternIds',\n    value: function getIndexPatternIds() {\n      return [this._descriptor.indexPatternId];\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      _kibana_services.inspectorAdapters.requests.resetRequest(this._descriptor.id);\n    }\n  }, {\n    key: '_getValidMetrics',\n    value: function _getValidMetrics() {\n      var metrics = _lodash2.default.get(this._descriptor, 'metrics', []).filter(function (_ref) {\n        var type = _ref.type,\n            field = _ref.field;\n\n        if (type === 'count') {\n          return true;\n        }\n\n        if (field) {\n          return true;\n        }\n        return false;\n      });\n      if (metrics.length === 0) {\n        metrics.push({ type: 'count' });\n      }\n      return metrics;\n    }\n  }, {\n    key: '_formatMetricKey',\n    value: function _formatMetricKey() {\n      throw new Error('should implement');\n    }\n  }, {\n    key: '_formatMetricLabel',\n    value: function _formatMetricLabel() {\n      throw new Error('should implement');\n    }\n  }, {\n    key: 'getMetricFields',\n    value: function getMetricFields() {\n      var _this2 = this;\n\n      return this._getValidMetrics().map(function (metric) {\n        var metricKey = _this2._formatMetricKey(metric);\n        var metricLabel = _this2._formatMetricLabel(metric);\n        return _extends({}, metric, {\n          propertyKey: metricKey,\n          propertyLabel: metricLabel\n        });\n      });\n    }\n  }, {\n    key: '_runEsQuery',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(layerName, searchSource, requestDescription) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return (0, _kibana_services.fetchSearchSourceAndRecordWithInspector)({\n                  searchSource: searchSource,\n                  requestName: layerName,\n                  requestId: this._descriptor.id,\n                  requestDesc: requestDescription\n                });\n\n              case 3:\n                return _context.abrupt('return', _context.sent);\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context['catch'](0);\n                throw new Error('xpack.maps.source.esSource.requestFailedErrorMessage', {\n                  defaultMessage: 'Elasticsearch search request failed, error: {message}',\n                  values: { message: _context.t0.message }\n                });\n\n              case 9:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n\n      function _runEsQuery(_x, _x2, _x3) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return _runEsQuery;\n    }()\n  }, {\n    key: '_makeSearchSource',\n    value: function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3, limit) {\n        var _this3 = this;\n\n        var buffer = _ref3.buffer,\n            query = _ref3.query,\n            timeFilters = _ref3.timeFilters;\n        var indexPattern, geoField, isTimeAware, searchSource;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._getIndexPattern();\n\n              case 2:\n                indexPattern = _context2.sent;\n                _context2.next = 5;\n                return this._getGeoField();\n\n              case 5:\n                geoField = _context2.sent;\n                _context2.next = 8;\n                return this.isTimeAware();\n\n              case 8:\n                isTimeAware = _context2.sent;\n                searchSource = new _kibana_services.SearchSource();\n\n                searchSource.setField('index', indexPattern);\n                searchSource.setField('size', limit);\n                searchSource.setField('filter', function () {\n                  var filters = [];\n                  if (_this3.isFilterByMapBounds() && buffer) {\n                    //buffer can be empty\n                    filters.push((0, _elasticsearch_geo_utils.createExtentFilter)(buffer, geoField.name, geoField.type));\n                  }\n                  if (isTimeAware) {\n                    filters.push(_timefilter.timefilter.createFilter(indexPattern, timeFilters));\n                  }\n                  return filters;\n                });\n                searchSource.setField('query', query);\n                return _context2.abrupt('return', searchSource);\n\n              case 15:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _makeSearchSource(_x4, _x5) {\n        return _ref4.apply(this, arguments);\n      }\n\n      return _makeSearchSource;\n    }()\n  }, {\n    key: 'getBoundsForFilters',\n    value: function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5) {\n        var query = _ref5.query,\n            timeFilters = _ref5.timeFilters;\n        var searchSource, geoField, indexPattern, geoBoundsAgg, aggConfigs, esBounds, esResp;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this._makeSearchSource({ query: query, timeFilters: timeFilters }, 0);\n\n              case 2:\n                searchSource = _context3.sent;\n                _context3.next = 5;\n                return this._getGeoField();\n\n              case 5:\n                geoField = _context3.sent;\n                _context3.next = 8;\n                return this._getIndexPattern();\n\n              case 8:\n                indexPattern = _context3.sent;\n                geoBoundsAgg = [{\n                  type: 'geo_bounds',\n                  enabled: true,\n                  params: {\n                    field: geoField\n                  },\n                  schema: 'metric'\n                }];\n                aggConfigs = new _agg_configs.AggConfigs(indexPattern, geoBoundsAgg);\n\n                searchSource.setField('aggs', aggConfigs.toDsl());\n\n                esBounds = void 0;\n                _context3.prev = 13;\n                _context3.next = 16;\n                return searchSource.fetch();\n\n              case 16:\n                esResp = _context3.sent;\n\n                esBounds = _lodash2.default.get(esResp, 'aggregations.1.bounds');\n                _context3.next = 23;\n                break;\n\n              case 20:\n                _context3.prev = 20;\n                _context3.t0 = _context3['catch'](13);\n\n                esBounds = {\n                  top_left: {\n                    lat: 90,\n                    lon: -180\n                  },\n                  bottom_right: {\n                    lat: -90,\n                    lon: 180\n                  }\n                };\n\n              case 23:\n                return _context3.abrupt('return', {\n                  min_lon: esBounds.top_left.lon,\n                  max_lon: esBounds.bottom_right.lon,\n                  min_lat: esBounds.bottom_right.lat,\n                  max_lat: esBounds.top_left.lat\n                });\n\n              case 24:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[13, 20]]);\n      }));\n\n      function getBoundsForFilters(_x6) {\n        return _ref6.apply(this, arguments);\n      }\n\n      return getBoundsForFilters;\n    }()\n  }, {\n    key: 'isTimeAware',\n    value: function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var indexPattern, timeField;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this._getIndexPattern();\n\n              case 3:\n                indexPattern = _context4.sent;\n                timeField = indexPattern.timeFieldName;\n                return _context4.abrupt('return', !!timeField);\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4['catch'](0);\n                return _context4.abrupt('return', false);\n\n              case 11:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 8]]);\n      }));\n\n      function isTimeAware() {\n        return _ref7.apply(this, arguments);\n      }\n\n      return isTimeAware;\n    }()\n  }, {\n    key: '_getIndexPattern',\n    value: function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this.indexPattern) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt('return', this.indexPattern);\n\n              case 2:\n                _context5.prev = 2;\n                _context5.next = 5;\n                return _kibana_services.indexPatternService.get(this._descriptor.indexPatternId);\n\n              case 5:\n                this.indexPattern = _context5.sent;\n                return _context5.abrupt('return', this.indexPattern);\n\n              case 9:\n                _context5.prev = 9;\n                _context5.t0 = _context5['catch'](2);\n                throw new Error(_i18n.i18n.translate('xpack.maps.source.esSource.noIndexPatternErrorMessage', {\n                  defaultMessage: 'Unable to find Index pattern for id: {indexPatternId}',\n                  values: { indexPatternId: this._descriptor.indexPatternId }\n                }));\n\n              case 12:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 9]]);\n      }));\n\n      function _getIndexPattern() {\n        return _ref8.apply(this, arguments);\n      }\n\n      return _getIndexPattern;\n    }()\n  }, {\n    key: 'supportsFitToBounds',\n    value: function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var geoField;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return this._getGeoField();\n\n              case 3:\n                geoField = _context6.sent;\n                return _context6.abrupt('return', geoField.type !== 'geo_shape');\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6['catch'](0);\n                return _context6.abrupt('return', false);\n\n              case 10:\n              case 'end':\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 7]]);\n      }));\n\n      function supportsFitToBounds() {\n        return _ref9.apply(this, arguments);\n      }\n\n      return supportsFitToBounds;\n    }()\n  }, {\n    key: '_getGeoField',\n    value: function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var indexPattern, geoField;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this._getIndexPattern();\n\n              case 2:\n                indexPattern = _context7.sent;\n                geoField = indexPattern.fields.byName[this._descriptor.geoField];\n\n                if (geoField) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                throw new Error(_i18n.i18n.translate('xpack.maps.source.esSource.noGeoFieldErrorMessage', {\n                  defaultMessage: 'Index pattern {indexPatternTitle} no longer contains the geo field {geoField}',\n                  values: { indexPatternTitle: indexPattern.title, geoField: this._descriptor.geoField }\n                }));\n\n              case 6:\n                return _context7.abrupt('return', geoField);\n\n              case 7:\n              case 'end':\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function _getGeoField() {\n        return _ref10.apply(this, arguments);\n      }\n\n      return _getGeoField;\n    }()\n  }, {\n    key: 'getDisplayName',\n    value: function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var indexPattern;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return this._getIndexPattern();\n\n              case 3:\n                indexPattern = _context8.sent;\n                return _context8.abrupt('return', indexPattern.title);\n\n              case 7:\n                _context8.prev = 7;\n                _context8.t0 = _context8['catch'](0);\n                return _context8.abrupt('return', this._descriptor.indexPatternId);\n\n              case 10:\n              case 'end':\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 7]]);\n      }));\n\n      function getDisplayName() {\n        return _ref11.apply(this, arguments);\n      }\n\n      return getDisplayName;\n    }()\n  }, {\n    key: 'isBoundsAware',\n    value: function isBoundsAware() {\n      return true;\n    }\n  }]);\n\n  return AbstractESSource;\n}(_vector_source.AbstractVectorSource);\n\nAbstractESSource.icon = 'logoElasticsearch';",null]}