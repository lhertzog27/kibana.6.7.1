{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/services/manage_angular_lifecycle.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/services/manage_angular_lifecycle.js","mtime":1567631711966},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.manageAngularLifecycle = undefined;\n\nvar _reactDom = require('react-dom');\n\nvar manageAngularLifecycle = exports.manageAngularLifecycle = function manageAngularLifecycle($scope, $route, elem) {\n  var lastRoute = $route.current;\n\n  var deregister = $scope.$on('$locationChangeSuccess', function () {\n    var currentRoute = $route.current;\n    if (lastRoute.$$route.template === currentRoute.$$route.template) {\n      $route.current = lastRoute;\n    }\n  });\n\n  $scope.$on('$destroy', function () {\n    deregister && deregister();\n    elem && (0, _reactDom.unmountComponentAtNode)(elem);\n  });\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */",null]}