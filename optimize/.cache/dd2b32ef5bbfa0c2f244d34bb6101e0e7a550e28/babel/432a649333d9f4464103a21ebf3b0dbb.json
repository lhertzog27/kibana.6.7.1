{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/explorer/explorer_charts/components/explorer_chart_label/explorer_chart_label.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/explorer/explorer_charts/components/explorer_chart_label/explorer_chart_label.js","mtime":1567631712040},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExplorerChartLabel = ExplorerChartLabel;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _explorer_chart_label_badge = require('./explorer_chart_label_badge');\n\nvar _explorer_chart_info_tooltip = require('../../explorer_chart_info_tooltip');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ExplorerChartLabel(_ref) {\n  var detectorLabel = _ref.detectorLabel,\n      entityFields = _ref.entityFields,\n      infoTooltip = _ref.infoTooltip,\n      _ref$wrapLabel = _ref.wrapLabel,\n      wrapLabel = _ref$wrapLabel === undefined ? false : _ref$wrapLabel;\n\n  // Depending on whether we wrap the entityField badges to a new line, we render this differently:\n  //\n  // 1. All in one line:\n  //   <detectorLabel> - <entityBadge1> <entityBadge2> ... <infoIcon>\n  //\n  // 2. Multiple lines:\n  //   <detectorLabel> <infoIcon>\n  //   <entityBadge1> <entityBadge2> ...\n\n  // Using &nbsp;s here to make sure those spaces get rendered.\n  var labelSeparator = wrapLabel === true || entityFields.length === 0 || detectorLabel.length === 0 ? _react2.default.createElement(\n    _react2.default.Fragment,\n    null,\n    '\\xA0'\n  ) : _react2.default.createElement(\n    _react2.default.Fragment,\n    null,\n    '\\xA0\\u2013\\xA0'\n  );\n\n  var entityFieldBadges = entityFields.map(function (entity) {\n    return _react2.default.createElement(_explorer_chart_label_badge.ExplorerChartLabelBadge, { entity: entity, key: entity.fieldName + ' ' + entity.fieldValue });\n  });\n\n  var infoIcon = _react2.default.createElement(\n    'span',\n    { className: 'ml-explorer-chart-info-icon' },\n    _react2.default.createElement(_eui.EuiIconTip, {\n      className: 'ml-explorer-chart-eui-icon-tip',\n      content: _react2.default.createElement(_explorer_chart_info_tooltip.ExplorerChartInfoTooltip, infoTooltip),\n      position: 'top',\n      size: 's'\n    })\n  );\n\n  return _react2.default.createElement(\n    _react2.default.Fragment,\n    null,\n    _react2.default.createElement(\n      'span',\n      { className: 'ml-explorer-chart-label' },\n      _react2.default.createElement(\n        'span',\n        { className: 'ml-explorer-chart-label-detector' },\n        detectorLabel,\n        labelSeparator\n      ),\n      wrapLabel && infoIcon,\n      !wrapLabel && _react2.default.createElement(\n        _react2.default.Fragment,\n        null,\n        entityFieldBadges,\n        ' ',\n        infoIcon\n      )\n    ),\n    wrapLabel && _react2.default.createElement(\n      'span',\n      { className: 'ml-explorer-chart-label-badges' },\n      entityFieldBadges\n    )\n  );\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */\n\nExplorerChartLabel.propTypes = {\n  detectorLabel: _propTypes2.default.object.isRequired,\n  entityFields: _propTypes2.default.arrayOf(_explorer_chart_label_badge.ExplorerChartLabelBadge.propTypes.entity),\n  infoTooltip: _propTypes2.default.object.isRequired,\n  wrapLabel: _propTypes2.default.bool\n};",null]}