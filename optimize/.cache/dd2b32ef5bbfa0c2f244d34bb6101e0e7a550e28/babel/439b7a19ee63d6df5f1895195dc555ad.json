{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/common/formatting.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/common/formatting.js","mtime":1567631712081},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LARGE_ABBREVIATED = exports.SMALL_BYTES = exports.LARGE_BYTES = exports.SMALL_FLOAT = exports.LARGE_FLOAT = undefined;\nexports.formatDateTimeLocal = formatDateTimeLocal;\nexports.shortenPipelineHash = shortenPipelineHash;\n\nvar _momentTimezone = require('moment-timezone');\n\nvar _momentTimezone2 = _interopRequireDefault(_momentTimezone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LARGE_FLOAT = exports.LARGE_FLOAT = '0,0.[00]'; /*\n                                                     * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                     * or more contributor license agreements. Licensed under the Elastic License;\n                                                     * you may not use this file except in compliance with the Elastic License.\n                                                     */\n\nvar SMALL_FLOAT = exports.SMALL_FLOAT = '0.[00]';\nvar LARGE_BYTES = exports.LARGE_BYTES = '0,0.0 b';\nvar SMALL_BYTES = exports.SMALL_BYTES = '0.0 b';\nvar LARGE_ABBREVIATED = exports.LARGE_ABBREVIATED = '0,0.[0]a';\n\n/**\n * Format the {@code date} in the user's expected date/time format using their <em>guessed</em> local time zone.\n * @param date Either a numeric Unix timestamp or a {@code Date} object\n * @returns The date formatted using 'LL LTS'\n */\nfunction formatDateTimeLocal(date) {\n  return _momentTimezone2.default.tz(date, _momentTimezone2.default.tz.guess()).format('LL LTS');\n}\n\n/**\n * Shorten a Logstash Pipeline's hash for display purposes\n * @param {string} hash The complete hash\n * @return {string} The shortened hash\n */\nfunction shortenPipelineHash(hash) {\n  return hash.substr(0, 6);\n}",null]}