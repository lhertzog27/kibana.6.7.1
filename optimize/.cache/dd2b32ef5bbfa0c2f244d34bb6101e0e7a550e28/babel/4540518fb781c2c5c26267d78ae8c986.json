{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_edit/components/watch_edit_title_panel/watch_edit_title_panel.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_edit/components/watch_edit_title_panel/watch_edit_title_panel.js","mtime":1567631712348},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _modules = require('ui/modules');\n\nvar _compat = require('ui/compat');\n\nvar _watch_edit_title_panel = require('./watch_edit_title_panel.html');\n\nvar _watch_edit_title_panel2 = _interopRequireDefault(_watch_edit_title_panel);\n\nvar _constants = require('plugins/watcher/../common/constants');\n\nrequire('plugins/watcher/components/index_select');\n\nrequire('plugins/watcher/components/duration_select');\n\nrequire('plugins/watcher/services/html_id_generator');\n\nrequire('plugins/watcher/components/xpack_aria_describes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar app = _modules.uiModules.get('xpack/watcher');\n\nvar VALID_NORMALIZED_TYPES = ['date'];\n\napp.directive('watchEditTitlePanel', function ($injector, i18n) {\n  var htmlIdGeneratorFactory = $injector.get('xpackWatcherHtmlIdGeneratorFactory');\n\n  return {\n    restrict: 'E',\n    template: _watch_edit_title_panel2.default,\n    replace: true,\n    scope: {\n      watch: '=xpackWatch', // Property names differ due to https://git.io/vSWXV\n      fields: '=',\n      onChange: '=',\n      onInvalid: '=',\n      onValid: '='\n    },\n    bindToController: true,\n    controllerAs: 'watchEditTitlePanel',\n    controller: function (_InitAfterBindingsWor) {\n      _inherits(WatchEditTitlePanelController, _InitAfterBindingsWor);\n\n      function WatchEditTitlePanelController() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, WatchEditTitlePanelController);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WatchEditTitlePanelController.__proto__ || Object.getPrototypeOf(WatchEditTitlePanelController)).call.apply(_ref, [this].concat(args))), _this), _this.onIndexSelectTouched = function () {\n          _this.indexSelectTouched = true;\n        }, _this.onIndexSelection = function (indices) {\n          _this.watch.index = indices;\n          _this.indexSelectTouched = true;\n          _this.updateValidity();\n          _this.onChange(_this.watch);\n        }, _this.updateValidity = function () {\n          var isValid = _this.form.$valid && _this.hasAnyValidSelectedIndices();\n\n          if (isValid) {\n            _this.onValid();\n          } else {\n            _this.onInvalid();\n          }\n        }, _this.hasAnySelectedIndices = function () {\n          if (Array.isArray(_this.watch.index)) {\n            return _this.watch.index.length > 0;\n          }\n          return Boolean(_this.watch.index);\n        }, _this.hasAnyValidSelectedIndices = function () {\n          return _this.hasAnySelectedIndices() && Boolean(_this.fields) && _this.fields.length > 0;\n        }, _this.isValidationMessageVisible = function (fieldName, errorType) {\n          var showIfOtherErrors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n          if (!_this.form[fieldName]) {\n            return false;\n          }\n\n          var showMessage = (_this.form[fieldName].$touched || _this.form[fieldName].$dirty) && _this.form[fieldName].$error[errorType];\n\n          if (showMessage && !showIfOtherErrors && (0, _lodash.size)(_this.form[fieldName].$error) > 1) {\n            showMessage = false;\n          }\n\n          return showMessage;\n        }, _this.showIndexSelectionValidationState = function () {\n          return !_this.hasAnySelectedIndices() || _this.showInvalidIndexValidationMessage() || _this.showNoTimeFieldsValidationMessage();\n        }, _this.showRequiredIndexSelectionValidationMessage = function () {\n          return _this.indexSelectTouched && !_this.hasAnySelectedIndices();\n        }, _this.showInvalidIndexValidationMessage = function () {\n          return _this.hasAnySelectedIndices() && Boolean(_this.fields) && _this.fields.length === 0;\n        }, _this.showNoTimeFieldsValidationMessage = function () {\n          return _this.hasAnyValidSelectedIndices() && _this.timeFields.length === 0;\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n      }\n\n      _createClass(WatchEditTitlePanelController, [{\n        key: 'initAfterBindings',\n        value: function initAfterBindings($scope) {\n          var _this2 = this;\n\n          this.makeId = htmlIdGeneratorFactory.create();\n\n          this.triggerIntervalSize = this.watch.triggerIntervalSize;\n          this.triggerIntervalUnit = this.watch.triggerIntervalUnit;\n\n          this.triggerIntervalMinimumUnit = _constants.TIME_UNITS.SECOND;\n          this.triggerIntervalMinimumSize = 10;\n\n          this.timeFields = [];\n          this.indexSelectTouched = false;\n\n          $scope.$watch('watchEditTitlePanel.triggerIntervalSize', function (newSize) {\n            _this2.watch.triggerIntervalSize = Number(newSize);\n            _this2.onChange(_this2.watch);\n          });\n\n          $scope.$watch('watchEditTitlePanel.triggerIntervalUnit', function (newUnit) {\n            _this2.watch.triggerIntervalUnit = newUnit;\n            _this2.onChange(_this2.watch);\n          });\n\n          $scope.$watchMulti(['watchEditTitlePanel.watch.name', 'watchEditTitlePanel.watch.timeField'], function () {\n            _this2.onChange(_this2.watch);\n          });\n\n          $scope.$watch('watchEditTitlePanel.watch.index', function (newIndex) {\n            if (!Boolean(newIndex) || newIndex.length === 0) {\n              _this2.watch.timeField = undefined;\n              _this2.timeFields = [];\n            }\n          });\n\n          $scope.$watchMulti(['watchEditTitlePanel.form.$valid', 'watchEditTitlePanel.watch.index'], this.updateValidity);\n\n          $scope.$watch('watchEditTitlePanel.fields', function (fields) {\n            _this2.timeFields = Boolean(fields) ? fields.filter(function (field) {\n              return VALID_NORMALIZED_TYPES.includes(field.normalizedType);\n            }) : [];\n            _this2.updateValidity();\n          });\n        }\n      }, {\n        key: 'title',\n        get: function get() {\n          if (this.watch.isNew) {\n            var typeName = this.watch.typeName.toLowerCase();\n            return i18n('xpack.watcher.sections.watchEdit.titlePanel.createNewTypeOfWatchTitle', {\n              defaultMessage: 'Create a new {typeName}',\n              values: { typeName: typeName }\n            });\n          } else {\n            return this.watch.name;\n          }\n        }\n      }, {\n        key: 'description',\n        get: function get() {\n          return this.watch.titleDescription;\n        }\n      }]);\n\n      return WatchEditTitlePanelController;\n    }(_compat.InitAfterBindingsWorkaround)\n  };\n});",null]}