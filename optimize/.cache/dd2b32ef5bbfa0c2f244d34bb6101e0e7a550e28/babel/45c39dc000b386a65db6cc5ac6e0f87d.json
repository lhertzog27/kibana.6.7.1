{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/sections/job_create/steps_config/validate_index_pattern.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/sections/job_create/steps_config/validate_index_pattern.js","mtime":1567631712289},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateIndexPattern = validateIndexPattern;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _index_patterns = require('ui/index_patterns');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validateIndexPattern(indexPattern, rollupIndex) {\n  if (!indexPattern || !indexPattern.trim()) {\n    return [_react2.default.createElement(_react3.FormattedMessage, {\n      id: 'xpack.rollupJobs.create.errors.indexPatternMissing',\n      defaultMessage: 'Index pattern is required.'\n    })];\n  }\n\n  if (indexPattern === rollupIndex) {\n    return [_react2.default.createElement(_react3.FormattedMessage, {\n      id: 'xpack.rollupJobs.create.errors.indexPatternSameAsRollupIndex',\n      defaultMessage: 'Index pattern cannot have the same as the rollup index.'\n    })];\n  }\n\n  var illegalCharacters = _index_patterns.INDEX_PATTERN_ILLEGAL_CHARACTERS_VISIBLE.reduce(function (chars, char) {\n    if (indexPattern.includes(char)) {\n      chars.push(char);\n    }\n\n    return chars;\n  }, []);\n\n  if (illegalCharacters.length) {\n    return [_react2.default.createElement(_react3.FormattedMessage, {\n      id: 'xpack.rollupJobs.create.errors.indexPatternIllegalCharacters',\n      defaultMessage: 'Remove the characters {characterList} from your index pattern.',\n      values: { characterList: _react2.default.createElement(\n          'strong',\n          null,\n          illegalCharacters.join(' ')\n        ) }\n    })];\n  }\n\n  if (indexPattern.includes(' ')) {\n    return [_react2.default.createElement(_react3.FormattedMessage, {\n      id: 'xpack.rollupJobs.create.errors.indexPatternSpaces',\n      defaultMessage: 'Remove the spaces from your index pattern.'\n    })];\n  }\n\n  return undefined;\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */",null]}