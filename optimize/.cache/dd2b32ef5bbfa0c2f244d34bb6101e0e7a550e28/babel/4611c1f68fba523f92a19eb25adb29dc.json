{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/watcher/create_watch_service.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/watcher/create_watch_service.js","mtime":1567631712057},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mlCreateWatchService = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * or more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _http_service = require('../../../../../services/http_service');\n\nvar _email = require('./email.html');\n\nvar _email2 = _interopRequireDefault(_email);\n\nvar _emailInfluencers = require('./email-influencers.html');\n\nvar _emailInfluencers2 = _interopRequireDefault(_emailInfluencers);\n\nvar _watch = require('./watch.js');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar compiledEmailBody = _lodash2.default.template(_email2.default);\nvar compiledEmailInfluencersBody = _lodash2.default.template(_emailInfluencers2.default);\n\nvar emailSection = {\n  send_email: {\n    throttle_period_in_millis: 900000, // 15m\n    email: {\n      profile: 'standard',\n      to: [],\n      subject: _i18n.i18n.translate('xpack.ml.newJob.simple.watcher.email.mlWatcherAlertSubjectTitle', { defaultMessage: 'ML Watcher Alert' }),\n      body: {\n        html: ''\n      }\n    }\n  }\n};\n\n// generate a random number between min and max\nfunction randomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction saveWatch(watchModel) {\n  var basePath = _chrome2.default.addBasePath('/api/watcher');\n  var url = basePath + '/watch/' + watchModel.id;\n\n  return (0, _http_service.http)({\n    url: url,\n    method: 'PUT',\n    data: watchModel.upstreamJSON\n  });\n}\n\nvar CreateWatchService = function () {\n  function CreateWatchService() {\n    _classCallCheck(this, CreateWatchService);\n\n    this.createNewWatch = function (jobId) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.status.watch = _this.STATUS.SAVING;\n        if (jobId !== undefined) {\n          var id = 'ml-' + jobId;\n          _this.config.id = id;\n\n          // set specific properties of the the watch\n          _watch.watch.input.search.request.body.query.bool.filter[0].term.job_id = jobId;\n          _watch.watch.input.search.request.body.query.bool.filter[1].range.timestamp.gte = 'now-' + _this.config.interval;\n          _watch.watch.input.search.request.body.aggs.bucket_results.filter.range.anomaly_score.gte = _this.config.threshold.val;\n\n          if (_this.config.includeEmail && _this.config.email !== '') {\n            var emails = _this.config.email.split(',');\n            emailSection.send_email.email.to = emails;\n\n            // create the html by adding the variables to the compiled email body.\n            emailSection.send_email.email.body.html = compiledEmailBody({\n              serverAddress: _chrome2.default.getAppUrl(),\n              influencersSection: _this.config.includeInfluencers === true ? compiledEmailInfluencersBody({\n                topInfluencersLabel: _i18n.i18n.translate('xpack.ml.newJob.simple.watcher.email.topInfluencersLabel', {\n                  defaultMessage: 'Top influencers:'\n                })\n              }) : '',\n              elasticStackMachineLearningAlertLabel: _i18n.i18n.translate('xpack.ml.newJob.simple.watcher.email.elasticStackMachineLearningAlertLabel', {\n                defaultMessage: 'Elastic Stack Machine Learning Alert'\n              }),\n              jobLabel: _i18n.i18n.translate('xpack.ml.newJob.simple.watcher.email.jobLabel', { defaultMessage: 'Job' }),\n              timeLabel: _i18n.i18n.translate('xpack.ml.newJob.simple.watcher.email.timeLabel', { defaultMessage: 'Time' }),\n              anomalyScoreLabel: _i18n.i18n.translate('xpack.ml.newJob.simple.watcher.email.anomalyScoreLabel', {\n                defaultMessage: 'Anomaly score'\n              }),\n              openInAnomalyExplorerLinkText: _i18n.i18n.translate('xpack.ml.newJob.simple.watcher.email.openInAnomalyExplorerLinkText', {\n                defaultMessage: 'Click here to open in Anomaly Explorer.'\n              }),\n              topRecordsLabel: _i18n.i18n.translate('xpack.ml.newJob.simple.watcher.email.topRecordsLabel', { defaultMessage: 'Top records:' })\n\n            });\n\n            // add email section to watch\n            _watch.watch.actions.send_email = emailSection.send_email;\n          }\n\n          // set the trigger interval to be a random number between 60 and 120 seconds\n          // this is to avoid all watches firing at once if the server restarts\n          // and the watches synchronize\n          var triggerInterval = randomNumber(60, 120);\n          _watch.watch.trigger.schedule.interval = triggerInterval + 's';\n\n          var watchModel = {\n            id: id,\n            upstreamJSON: {\n              id: id,\n              type: 'json',\n              watch: _watch.watch\n            }\n          };\n\n          if (id !== '') {\n            saveWatch(watchModel).then(function () {\n              _this.status.watch = _this.STATUS.SAVED;\n              _this.config.watcherEditURL = _chrome2.default.getBasePath() + '/app/kibana#/management/elasticsearch/watcher/watches/watch/' + id + '/edit?_g=()';\n              resolve({\n                id: id,\n                url: _this.config.watcherEditURL\n              });\n            }).catch(function (resp) {\n              _this.status.watch = _this.STATUS.SAVE_FAILED;\n              reject(resp);\n            });\n          }\n        } else {\n          _this.status.watch = _this.STATUS.SAVE_FAILED;\n          reject();\n        }\n      });\n    };\n\n    this.config = {};\n\n    this.STATUS = {\n      SAVE_FAILED: -1,\n      SAVING: 0,\n      SAVED: 1\n    };\n\n    this.status = {\n      realtimeJob: null,\n      watch: null\n    };\n  }\n\n  _createClass(CreateWatchService, [{\n    key: 'reset',\n    value: function reset() {\n      this.status.realtimeJob = null;\n      this.status.watch = null;\n\n      this.config.id = '';\n      this.config.includeEmail = false;\n      this.config.email = '';\n      this.config.interval = '20m';\n      this.config.watcherEditURL = '';\n      this.config.includeInfluencers = false;\n      this.config.threshold = { display: 'critical', val: 75 };\n    }\n  }, {\n    key: 'loadWatch',\n    value: function loadWatch(jobId) {\n      var id = 'ml-' + jobId;\n      var basePath = _chrome2.default.addBasePath('/api/watcher');\n      var url = basePath + '/watch/' + id;\n      return (0, _http_service.http)({\n        url: url,\n        method: 'GET'\n      });\n    }\n  }]);\n\n  return CreateWatchService;\n}();\n\nvar mlCreateWatchService = exports.mlCreateWatchService = new CreateWatchService();",null]}