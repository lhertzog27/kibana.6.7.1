{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/components/auto_follow_pattern_form.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/components/auto_follow_pattern_form.js","mtime":1567631711951},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AutoFollowPatternForm = exports.AutoFollowPatternFormUI = exports.updateFormErrors = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nvar _index_patterns = require('ui/index_patterns');\n\nvar _indices = require('ui/indices');\n\nvar _routing = require('../services/routing');\n\nvar _routing2 = _interopRequireDefault(_routing);\n\nvar _query_params = require('../services/query_params');\n\nvar _get_remote_cluster_name = require('../services/get_remote_cluster_name');\n\nvar _constants = require('../constants');\n\nvar _section_error = require('./section_error');\n\nvar _auto_follow_pattern_indices_preview = require('./auto_follow_pattern_indices_preview');\n\nvar _remote_clusters_form_field = require('./remote_clusters_form_field');\n\nvar _auto_follow_pattern_validators = require('../services/auto_follow_pattern_validators');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar indexPatternIllegalCharacters = _index_patterns.INDEX_PATTERN_ILLEGAL_CHARACTERS_VISIBLE.join(' ');\nvar indexNameIllegalCharacters = _indices.INDEX_ILLEGAL_CHARACTERS_VISIBLE.join(' ');\n\nvar getEmptyAutoFollowPattern = function getEmptyAutoFollowPattern() {\n  var remoteClusterName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return {\n    name: '',\n    remoteCluster: remoteClusterName,\n    leaderIndexPatterns: [],\n    followIndexPatternPrefix: '',\n    followIndexPatternSuffix: ''\n  };\n};\n\nvar updateFormErrors = exports.updateFormErrors = function updateFormErrors(errors, existingErrors) {\n  return {\n    fieldsErrors: _extends({}, existingErrors, errors)\n  };\n};\n\nvar AutoFollowPatternFormUI = exports.AutoFollowPatternFormUI = function (_PureComponent) {\n  _inherits(AutoFollowPatternFormUI, _PureComponent);\n\n  function AutoFollowPatternFormUI(props) {\n    _classCallCheck(this, AutoFollowPatternFormUI);\n\n    var _this = _possibleConstructorReturn(this, (AutoFollowPatternFormUI.__proto__ || Object.getPrototypeOf(AutoFollowPatternFormUI)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var isNew = _this.props.autoFollowPattern === undefined;\n    var search = _routing2.default.reactRouter.route.location.search;\n\n    var queryParams = (0, _query_params.extractQueryParams)(search);\n    var remoteClusterName = (0, _get_remote_cluster_name.getRemoteClusterName)(_this.props.remoteClusters, queryParams.cluster);\n    var autoFollowPattern = isNew ? getEmptyAutoFollowPattern(remoteClusterName) : _extends({}, _this.props.autoFollowPattern);\n\n    _this.state = {\n      autoFollowPattern: autoFollowPattern,\n      fieldsErrors: (0, _auto_follow_pattern_validators.validateAutoFollowPattern)(autoFollowPattern),\n      areErrorsVisible: false,\n      isNew: isNew\n    };\n    return _this;\n  }\n\n  _createClass(AutoFollowPatternFormUI, [{\n    key: 'isFormValid',\n    value: function isFormValid() {\n      return Object.values(this.state.fieldsErrors).every(function (error) {\n        return error === undefined || error === null;\n      });\n    }\n  }, {\n    key: 'renderApiErrors',\n\n\n    /**\n     * Secctions Renders\n     */\n    value: function renderApiErrors() {\n      var _props = this.props,\n          apiError = _props.apiError,\n          intl = _props.intl;\n\n\n      if (apiError) {\n        var title = intl.formatMessage({\n          id: 'xpack.crossClusterReplication.autoFollowPatternForm.savingErrorTitle',\n          defaultMessage: 'Can\\'t create auto-follow pattern'\n        });\n\n        return _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(_section_error.SectionError, { title: title, error: apiError }),\n          _react2.default.createElement(_eui.EuiSpacer, { size: 'l' })\n        );\n      }\n\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        this.renderForm(),\n        this.renderLoading()\n      );\n    }\n  }]);\n\n  return AutoFollowPatternFormUI;\n}(_react.PureComponent);\n\nAutoFollowPatternFormUI.propTypes = {\n  saveAutoFollowPattern: _propTypes2.default.func.isRequired,\n  autoFollowPattern: _propTypes2.default.object,\n  apiError: _propTypes2.default.object,\n  apiStatus: _propTypes2.default.string.isRequired,\n  currentUrl: _propTypes2.default.string.isRequired,\n  remoteClusters: _propTypes2.default.array,\n  saveButtonLabel: _propTypes2.default.node\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onFieldsChange = function (fields) {\n    _this2.setState(function (_ref) {\n      var autoFollowPattern = _ref.autoFollowPattern;\n      return {\n        autoFollowPattern: _extends({}, autoFollowPattern, fields)\n      };\n    });\n\n    var errors = (0, _auto_follow_pattern_validators.validateAutoFollowPattern)(fields);\n    _this2.onFieldsErrorChange(errors);\n  };\n\n  this.onFieldsErrorChange = function (errors) {\n    return _this2.setState(function (_ref2) {\n      var fieldsErrors = _ref2.fieldsErrors;\n      return updateFormErrors(errors, fieldsErrors);\n    });\n  };\n\n  this.onClusterChange = function (remoteCluster) {\n    _this2.onFieldsChange({ remoteCluster: remoteCluster });\n  };\n\n  this.onCreateLeaderIndexPattern = function (indexPattern) {\n    var error = (0, _auto_follow_pattern_validators.validateLeaderIndexPattern)(indexPattern);\n\n    if (error) {\n      var errors = {\n        leaderIndexPatterns: _extends({}, error, {\n          alwaysVisible: true\n        })\n      };\n\n      _this2.setState(function (_ref3) {\n        var fieldsErrors = _ref3.fieldsErrors;\n        return updateFormErrors(errors, fieldsErrors);\n      });\n\n      // Return false to explicitly reject the user's input.\n      return false;\n    }\n\n    var leaderIndexPatterns = _this2.state.autoFollowPattern.leaderIndexPatterns;\n\n\n    var newLeaderIndexPatterns = [].concat(_toConsumableArray(leaderIndexPatterns), [indexPattern]);\n\n    _this2.onFieldsChange({ leaderIndexPatterns: newLeaderIndexPatterns });\n  };\n\n  this.onLeaderIndexPatternChange = function (indexPatterns) {\n    _this2.onFieldsChange({\n      leaderIndexPatterns: indexPatterns.map(function (_ref4) {\n        var label = _ref4.label;\n        return label;\n      })\n    });\n  };\n\n  this.onLeaderIndexPatternInputChange = function (leaderIndexPattern) {\n    if (!leaderIndexPattern || !leaderIndexPattern.trim()) {\n      return;\n    }\n\n    var leaderIndexPatterns = _this2.state.autoFollowPattern.leaderIndexPatterns;\n\n\n    if (leaderIndexPatterns.includes(leaderIndexPattern)) {\n      var intl = _this2.props.intl;\n\n      var errorMsg = intl.formatMessage({\n        id: 'xpack.crossClusterReplication.autoFollowPatternForm.leaderIndexPatternError.duplicateMessage',\n        defaultMessage: 'Duplicate leader index pattern aren\\'t allowed.'\n      });\n\n      var errors = {\n        leaderIndexPatterns: {\n          message: errorMsg,\n          alwaysVisible: true\n        }\n      };\n\n      _this2.setState(function (_ref5) {\n        var fieldsErrors = _ref5.fieldsErrors;\n        return updateFormErrors(errors, fieldsErrors);\n      });\n    } else {\n      _this2.setState(function (_ref6) {\n        var fieldsErrors = _ref6.fieldsErrors,\n            leaderIndexPatterns = _ref6.autoFollowPattern.leaderIndexPatterns;\n\n        var errors = (0, _auto_follow_pattern_validators.validateAutoFollowPattern)({ leaderIndexPatterns: leaderIndexPatterns });\n        return updateFormErrors(errors, fieldsErrors);\n      });\n    }\n  };\n\n  this.getFields = function () {\n    var stateFields = _this2.state.autoFollowPattern;\n\n    var followIndexPatternPrefix = stateFields.followIndexPatternPrefix,\n        followIndexPatternSuffix = stateFields.followIndexPatternSuffix,\n        rest = _objectWithoutProperties(stateFields, ['followIndexPatternPrefix', 'followIndexPatternSuffix']);\n\n    return _extends({}, rest, {\n      followIndexPattern: followIndexPatternPrefix + '{{leader_index}}' + followIndexPatternSuffix\n    });\n  };\n\n  this.sendForm = function () {\n    var isFormValid = _this2.isFormValid();\n\n    if (!isFormValid) {\n      _this2.setState({ areErrorsVisible: true });\n      return;\n    }\n\n    _this2.setState({ areErrorsVisible: false });\n\n    var _getFields = _this2.getFields(),\n        name = _getFields.name,\n        autoFollowPattern = _objectWithoutProperties(_getFields, ['name']);\n\n    _this2.props.saveAutoFollowPattern(name, autoFollowPattern);\n  };\n\n  this.cancelForm = function () {\n    _routing2.default.navigate('/auto_follow_patterns');\n  };\n\n  this.renderForm = function () {\n    var intl = _this2.props.intl;\n    var _state = _this2.state,\n        _state$autoFollowPatt = _state.autoFollowPattern,\n        name = _state$autoFollowPatt.name,\n        remoteCluster = _state$autoFollowPatt.remoteCluster,\n        leaderIndexPatterns = _state$autoFollowPatt.leaderIndexPatterns,\n        followIndexPatternPrefix = _state$autoFollowPatt.followIndexPatternPrefix,\n        followIndexPatternSuffix = _state$autoFollowPatt.followIndexPatternSuffix,\n        isNew = _state.isNew,\n        areErrorsVisible = _state.areErrorsVisible,\n        fieldsErrors = _state.fieldsErrors;\n\n    /**\n     * Auto-follow pattern Name\n     */\n\n    var renderAutoFollowPatternName = function renderAutoFollowPatternName() {\n      var isInvalid = areErrorsVisible && !!fieldsErrors.name;\n\n      return _react2.default.createElement(\n        _eui.EuiDescribedFormGroup,\n        {\n          title: _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h4',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.autoFollowPatternForm.sectionAutoFollowPatternNameTitle',\n                defaultMessage: 'Name'\n              })\n            )\n          ),\n          description: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.autoFollowPatternForm.sectionAutoFollowPatternNameDescription',\n            defaultMessage: 'A unique name for the auto-follow pattern.'\n          }),\n          fullWidth: true\n        },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.autoFollowPatternForm.autoFollowPatternName.fieldNameLabel',\n              defaultMessage: 'Name'\n            }),\n            error: fieldsErrors.name,\n            isInvalid: isInvalid,\n            fullWidth: true\n          },\n          _react2.default.createElement(_eui.EuiFieldText, {\n            isInvalid: isInvalid,\n            value: name,\n            onChange: function onChange(e) {\n              return _this2.onFieldsChange({ name: e.target.value });\n            },\n            fullWidth: true,\n            disabled: !isNew\n          })\n        )\n      );\n    };\n\n    /**\n     * Remote Cluster\n     */\n    var renderRemoteClusterField = function renderRemoteClusterField() {\n      var _props2 = _this2.props,\n          remoteClusters = _props2.remoteClusters,\n          currentUrl = _props2.currentUrl;\n\n\n      var errorMessages = {\n        noClusterFound: function noClusterFound() {\n          return _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.autoFollowPatternForm.emptyRemoteClustersCallOutDescription',\n            defaultMessage: 'Auto-follow patterns capture indices on remote clusters.'\n          });\n        },\n        remoteClusterNotConnectedNotEditable: function remoteClusterNotConnectedNotEditable(name) {\n          return {\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.autoFollowPatternForm.currentRemoteClusterNotConnectedCallOutTitle',\n              defaultMessage: 'Can\\'t edit auto-follow pattern because remote cluster \\'{name}\\' is not connected',\n              values: { name: name }\n            }),\n            description: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.autoFollowPatternForm.currentRemoteClusterNotConnectedCallOutDescription',\n              defaultMessage: 'You can address this by editing the remote cluster.'\n            })\n          };\n        },\n        remoteClusterDoesNotExist: function remoteClusterDoesNotExist(name) {\n          return _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.autoFollowPatternForm.currentRemoteClusterNotFoundCallOutDescription',\n            defaultMessage: 'To edit this auto-follow pattern, you must add a remote cluster named \\'{name}\\'.',\n            values: { name: name }\n          });\n        }\n      };\n\n      return _react2.default.createElement(\n        _eui.EuiDescribedFormGroup,\n        {\n          title: _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h4',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.autoFollowPatternForm.sectionRemoteClusterTitle',\n                defaultMessage: 'Remote cluster'\n              })\n            )\n          ),\n          description: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.autoFollowPatternForm.sectionRemoteClusterDescription',\n            defaultMessage: 'The remote cluster to replicate leader indices from.'\n          }),\n          fullWidth: true\n        },\n        _react2.default.createElement(_remote_clusters_form_field.RemoteClustersFormField, {\n          selected: remoteCluster ? remoteCluster : null,\n          remoteClusters: remoteClusters,\n          currentUrl: currentUrl,\n          isEditable: isNew,\n          areErrorsVisible: areErrorsVisible,\n          onChange: _this2.onClusterChange,\n          onError: function onError(error) {\n            return _this2.onFieldsErrorChange({ remoteCluster: error });\n          },\n          errorMessages: errorMessages\n        })\n      );\n    };\n\n    /**\n     * Leader index pattern(s)\n     */\n    var renderLeaderIndexPatterns = function renderLeaderIndexPatterns() {\n      var hasError = !!fieldsErrors.leaderIndexPatterns;\n      var isInvalid = hasError && (fieldsErrors.leaderIndexPatterns.alwaysVisible || areErrorsVisible);\n      var formattedLeaderIndexPatterns = leaderIndexPatterns.map(function (pattern) {\n        return { label: pattern };\n      });\n\n      return _react2.default.createElement(\n        _eui.EuiDescribedFormGroup,\n        {\n          title: _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h4',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.autoFollowPatternForm.sectionLeaderIndexPatternsTitle',\n                defaultMessage: 'Leader indices'\n              })\n            )\n          ),\n          description: _react2.default.createElement(\n            _react.Fragment,\n            null,\n            _react2.default.createElement(\n              'p',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.autoFollowPatternForm.sectionLeaderIndexPatternsDescription1',\n                defaultMessage: 'One or more index patterns that identify the indices you want to replicate from the remote cluster. As new indices matching these patterns are created, they are replicated to follower indices on the local cluster.'\n              })\n            ),\n            _react2.default.createElement(\n              'p',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.autoFollowPatternForm.sectionLeaderIndexPatternsDescription2',\n                defaultMessage: '{note} Indices that already exist are not replicated.',\n                values: { note: _react2.default.createElement(\n                    'strong',\n                    null,\n                    _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'xpack.crossClusterReplication.autoFollowPatternForm.sectionLeaderIndexPatternsDescription2.noteLabel',\n                      defaultMessage: 'Note:'\n                    })\n                  ) }\n              })\n            )\n          ),\n          fullWidth: true\n        },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.autoFollowPatternForm.fieldLeaderIndexPatternsLabel',\n              defaultMessage: 'Index patterns'\n            }),\n            helpText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.autoFollowPatternForm.fieldLeaderIndexPatternsHelpLabel',\n              defaultMessage: 'Spaces and the characters {characterList} are not allowed.',\n              values: { characterList: _react2.default.createElement(\n                  'strong',\n                  null,\n                  indexPatternIllegalCharacters\n                ) }\n            }),\n            isInvalid: isInvalid,\n            error: fieldsErrors.leaderIndexPatterns && fieldsErrors.leaderIndexPatterns.message,\n            fullWidth: true\n          },\n          _react2.default.createElement(_eui.EuiComboBox, {\n            noSuggestions: true,\n            placeholder: intl.formatMessage({\n              id: 'xpack.crossClusterReplication.autoFollowPatternForm.fieldLeaderIndexPatternsPlaceholder',\n              defaultMessage: 'Type and then hit ENTER'\n            }),\n            selectedOptions: formattedLeaderIndexPatterns,\n            onCreateOption: _this2.onCreateLeaderIndexPattern,\n            onChange: _this2.onLeaderIndexPatternChange,\n            onSearchChange: _this2.onLeaderIndexPatternInputChange,\n            fullWidth: true\n          })\n        )\n      );\n    };\n\n    /**\n     * Auto-follow pattern prefix/suffix\n     */\n    var renderAutoFollowPatternPrefixSuffix = function renderAutoFollowPatternPrefixSuffix() {\n      var isPrefixInvalid = areErrorsVisible && !!fieldsErrors.followIndexPatternPrefix;\n      var isSuffixInvalid = areErrorsVisible && !!fieldsErrors.followIndexPatternSuffix;\n\n      return _react2.default.createElement(\n        _eui.EuiDescribedFormGroup,\n        {\n          title: _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h4',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.autoFollowPatternForm.sectionAutoFollowPatternTitle',\n                defaultMessage: 'Follower indices (optional)'\n              })\n            )\n          ),\n          description: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.autoFollowPatternForm.sectionAutoFollowPatternDescription',\n            defaultMessage: 'A custom prefix or suffix to apply to the names of the follower indices so you can more easily identify replicated indices. By default, a follower index has the same name as the leader index.'\n          }),\n          fullWidth: true\n        },\n        _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { gutterSize: 's' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            null,\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                className: 'ccrFollowerIndicesFormRow',\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.crossClusterReplication.autoFollowPatternForm.autoFollowPattern.fieldPrefixLabel',\n                  defaultMessage: 'Prefix'\n                }),\n                error: fieldsErrors.followIndexPatternPrefix,\n                isInvalid: isPrefixInvalid,\n                fullWidth: true\n              },\n              _react2.default.createElement(_eui.EuiFieldText, {\n                isInvalid: isPrefixInvalid,\n                value: followIndexPatternPrefix,\n                onChange: function onChange(e) {\n                  return _this2.onFieldsChange({ followIndexPatternPrefix: e.target.value });\n                },\n                fullWidth: true\n              })\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            null,\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                className: 'ccrFollowerIndicesFormRow',\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.crossClusterReplication.autoFollowPatternForm.autoFollowPattern.fieldSuffixLabel',\n                  defaultMessage: 'Suffix'\n                }),\n                error: fieldsErrors.followIndexPatternSuffix,\n                isInvalid: isSuffixInvalid,\n                fullWidth: true\n              },\n              _react2.default.createElement(_eui.EuiFieldText, {\n                isInvalid: isSuffixInvalid,\n                value: followIndexPatternSuffix,\n                onChange: function onChange(e) {\n                  return _this2.onFieldsChange({ followIndexPatternSuffix: e.target.value });\n                },\n                fullWidth: true\n              })\n            )\n          )\n        ),\n        _react2.default.createElement(\n          _eui.EuiFormHelpText,\n          { className: isPrefixInvalid || isSuffixInvalid ? null : 'ccrFollowerIndicesHelpText' },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.autoFollowPatternForm.fieldFollowerIndicesHelpLabel',\n            defaultMessage: 'Spaces and the characters {characterList} are not allowed.',\n            values: { characterList: _react2.default.createElement(\n                'strong',\n                null,\n                indexNameIllegalCharacters\n              ) }\n          })\n        ),\n        !!leaderIndexPatterns.length && _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n          _react2.default.createElement(_auto_follow_pattern_indices_preview.AutoFollowPatternIndicesPreview, {\n            prefix: followIndexPatternPrefix,\n            suffix: followIndexPatternSuffix,\n            leaderIndexPatterns: leaderIndexPatterns\n          })\n        )\n      );\n    };\n\n    /**\n     * Form Error warning message\n     */\n    var renderFormErrorWarning = function renderFormErrorWarning() {\n      var areErrorsVisible = _this2.state.areErrorsVisible;\n\n      var isFormValid = _this2.isFormValid();\n\n      if (!areErrorsVisible || isFormValid) {\n        return null;\n      }\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(_eui.EuiCallOut, {\n          title: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.crossClusterReplication.autoFollowPatternForm.validationErrorTitle',\n            defaultMessage: 'Fix errors before continuing.'\n          }),\n          color: 'danger',\n          iconType: 'cross'\n        }),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'l' })\n      );\n    };\n\n    /**\n     * Form Actions\n     */\n    var renderActions = function renderActions() {\n      var _props3 = _this2.props,\n          apiStatus = _props3.apiStatus,\n          saveButtonLabel = _props3.saveButtonLabel;\n      var areErrorsVisible = _this2.state.areErrorsVisible;\n\n\n      if (apiStatus === _constants.API_STATUS.SAVING) {\n        return _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { justifyContent: 'flexStart', gutterSize: 'm' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(_eui.EuiLoadingSpinner, { size: 'l' })\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiText,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.crossClusterReplication.autoFollowPatternForm.actions.savingText',\n                defaultMessage: 'Saving'\n              })\n            )\n          )\n        );\n      }\n\n      var isSaveDisabled = areErrorsVisible && !_this2.isFormValid();\n\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { gutterSize: 'm', alignItems: 'center' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButton,\n            {\n              color: 'secondary',\n              iconType: 'check',\n              onClick: _this2.sendForm,\n              fill: true,\n              disabled: isSaveDisabled\n            },\n            saveButtonLabel\n          )\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButtonEmpty,\n            {\n              color: 'primary',\n              onClick: _this2.cancelForm\n            },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.crossClusterReplication.autoFollowPatternForm.cancelButtonLabel',\n              defaultMessage: 'Cancel'\n            })\n          )\n        )\n      );\n    };\n\n    return _react2.default.createElement(\n      _react.Fragment,\n      null,\n      _react2.default.createElement(\n        _eui.EuiForm,\n        null,\n        renderAutoFollowPatternName(),\n        renderRemoteClusterField(),\n        renderLeaderIndexPatterns(),\n        renderAutoFollowPatternPrefixSuffix()\n      ),\n      renderFormErrorWarning(),\n      _this2.renderApiErrors(),\n      renderActions()\n    );\n  };\n\n  this.renderLoading = function () {\n    var apiStatus = _this2.props.apiStatus;\n\n\n    if (apiStatus === _constants.API_STATUS.SAVING) {\n      return _react2.default.createElement(\n        _eui.EuiOverlayMask,\n        null,\n        _react2.default.createElement(_eui.EuiLoadingKibana, { size: 'xl' })\n      );\n    }\n    return null;\n  };\n};\n\nvar AutoFollowPatternForm = exports.AutoFollowPatternForm = (0, _react3.injectI18n)(AutoFollowPatternFormUI);",null]}