{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/splits/terms.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/splits/terms.js","mtime":1567631711628},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SplitByTerms = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                   * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                   * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                   * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                   * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                   * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                   * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                   * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                   * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                   * under the License.\n                                                                                                                                                                                                                                                                   */\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _group_by_select = require('./group_by_select');\n\nvar _group_by_select2 = _interopRequireDefault(_group_by_select);\n\nvar _create_text_handler = require('../lib/create_text_handler');\n\nvar _create_text_handler2 = _interopRequireDefault(_create_text_handler);\n\nvar _create_select_handler = require('../lib/create_select_handler');\n\nvar _create_select_handler2 = _interopRequireDefault(_create_select_handler);\n\nvar _field_select = require('../aggs/field_select');\n\nvar _field_select2 = _interopRequireDefault(_field_select);\n\nvar _metric_select = require('../aggs/metric_select');\n\nvar _metric_select2 = _interopRequireDefault(_metric_select);\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SplitByTermsUi = function SplitByTermsUi(props) {\n  var htmlId = (0, _eui.htmlIdGenerator)();\n  var handleTextChange = (0, _create_text_handler2.default)(props.onChange);\n  var handleSelectChange = (0, _create_select_handler2.default)(props.onChange);\n  var indexPattern = props.indexPattern,\n      intl = props.intl;\n\n  var defaults = { terms_direction: 'desc', terms_size: 10, terms_order_by: '_count' };\n  var model = _extends({}, defaults, props.model);\n  var metrics = model.metrics;\n\n  var defaultCount = {\n    value: '_count',\n    label: intl.formatMessage({ id: 'tsvb.splits.terms.defaultCountLabel', defaultMessage: 'Doc Count (default)' })\n  };\n  var terms = {\n    value: '_term',\n    label: intl.formatMessage({ id: 'tsvb.splits.terms.termsLabel', defaultMessage: 'Terms' })\n  };\n\n  var dirOptions = [{\n    value: 'desc',\n    label: intl.formatMessage({ id: 'tsvb.splits.terms.dirOptions.descendingLabel', defaultMessage: 'Descending' })\n  }, {\n    value: 'asc',\n    label: intl.formatMessage({ id: 'tsvb.splits.terms.dirOptions.ascendingLabel', defaultMessage: 'Ascending' })\n  }];\n  var selectedDirectionOption = dirOptions.find(function (option) {\n    return model.terms_direction === option.value;\n  });\n\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      { alignItems: 'center' },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('group'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.splits.terms.groupByLabel',\n              defaultMessage: 'Group by'\n            })\n          },\n          _react2.default.createElement(_group_by_select2.default, {\n            value: model.split_mode,\n            onChange: handleSelectChange('split_mode')\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('by'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.splits.terms.byLabel',\n              defaultMessage: 'By'\n            })\n          },\n          _react2.default.createElement(_field_select2.default, {\n            indexPattern: indexPattern,\n            onChange: handleSelectChange('terms_field'),\n            value: model.terms_field,\n            fields: props.fields\n          })\n        )\n      )\n    ),\n    _react2.default.createElement(_eui.EuiSpacer, null),\n    _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      { alignItems: 'center' },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('top'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.splits.terms.topLabel',\n              defaultMessage: 'Top'\n            })\n          },\n          _react2.default.createElement(_eui.EuiFieldNumber, {\n            placeholder: intl.formatMessage({ id: 'tsvb.splits.terms.sizePlaceholder', defaultMessage: 'Size' }),\n            value: Number(model.terms_size),\n            onChange: handleTextChange('terms_size')\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('order'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.splits.terms.orderByLabel',\n              defaultMessage: 'Order by'\n            })\n          },\n          _react2.default.createElement(_metric_select2.default, {\n            metrics: metrics,\n            clearable: false,\n            additionalOptions: [defaultCount, terms],\n            onChange: handleSelectChange('terms_order_by'),\n            restrict: 'basic',\n            value: model.terms_order_by\n          })\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            id: htmlId('direction'),\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.splits.terms.directionLabel',\n              defaultMessage: 'Direction'\n            })\n          },\n          _react2.default.createElement(_eui.EuiComboBox, {\n            isClearable: false,\n            options: dirOptions,\n            selectedOptions: selectedDirectionOption ? [selectedDirectionOption] : [],\n            onChange: handleSelectChange('terms_direction'),\n            singleSelection: true\n          })\n        )\n      )\n    )\n  );\n};\n\nSplitByTermsUi.propTypes = {\n  model: _propTypes2.default.object,\n  onChange: _propTypes2.default.func,\n  indexPattern: _propTypes2.default.string,\n  fields: _propTypes2.default.object\n};\n\nvar SplitByTerms = exports.SplitByTerms = (0, _react3.injectI18n)(SplitByTermsUi);",null]}