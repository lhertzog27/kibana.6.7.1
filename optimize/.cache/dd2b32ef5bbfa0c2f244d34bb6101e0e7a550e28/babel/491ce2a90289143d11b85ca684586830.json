{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/markdown/markdown.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/markdown/markdown.js","mtime":1567631711744},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Markdown = exports.markdownFactory = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _markdownIt = require('markdown-it');\n\nvar _markdownIt2 = _interopRequireDefault(_markdownIt);\n\nvar _lodash = require('lodash');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * Return a memoized markdown rendering function that use the specified\n * whiteListedRules and openLinksInNewTab configurations.\n * @param {Array of Strings} whiteListedRules - white list of markdown rules\n * list of rules can be found at https://github.com/markdown-it/markdown-it/issues/361\n * @param {Boolean} openLinksInNewTab\n * @return {Function} Returns an Object to use with dangerouslySetInnerHTML\n * with the rendered markdown HTML\n */\nvar markdownFactory = exports.markdownFactory = (0, _lodash.memoize)(function () {\n  var whiteListedRules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var openLinksInNewTab = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var markdownIt = void 0;\n\n  // It is imperative that the html config property be set to false, to mitigate XSS: the output of markdown-it is\n  // fed directly to the DOM via React's dangerouslySetInnerHTML below.\n\n  if (whiteListedRules && whiteListedRules.length > 0) {\n    markdownIt = new _markdownIt2.default('zero', { html: false, linkify: true });\n    markdownIt.enable(whiteListedRules);\n  } else {\n    markdownIt = new _markdownIt2.default({ html: false, linkify: true });\n  }\n\n  if (openLinksInNewTab) {\n    // All links should open in new browser tab.\n    // Define custom renderer to add 'target' attribute\n    // https://github.com/markdown-it/markdown-it/blob/master/docs/architecture.md#renderer\n    var originalLinkRender = markdownIt.renderer.rules.link_open || function (tokens, idx, options, env, self) {\n      return self.renderToken(tokens, idx, options);\n    };\n    markdownIt.renderer.rules.link_open = function (tokens, idx, options, env, self) {\n      var href = tokens[idx].attrGet('href');\n      var target = '_blank';\n      var rel = (0, _eui.getSecureRelForTarget)({ href: href, target: target });\n\n      // https://www.jitbit.com/alexblog/256-targetblank---the-most-underestimated-vulnerability-ever/\n      tokens[idx].attrPush(['target', target]);\n      tokens[idx].attrPush(['rel', rel]);\n      return originalLinkRender(tokens, idx, options, env, self);\n    };\n  }\n  /**\n   * This method is used to render markdown from the passed parameter\n   * into HTML. It will just return an empty string when the markdown is empty.\n   * @param {String} markdown - The markdown String\n   * @return {String} - Returns the rendered HTML as string.\n   */\n  return function (markdown) {\n    return markdown ? markdownIt.render(markdown) : '';\n  };\n}, function () {\n  var whiteListedRules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var openLinksInNewTab = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  return whiteListedRules.join('_').concat(openLinksInNewTab);\n});\n\nvar Markdown = exports.Markdown = function (_PureComponent) {\n  _inherits(Markdown, _PureComponent);\n\n  function Markdown() {\n    _classCallCheck(this, Markdown);\n\n    return _possibleConstructorReturn(this, (Markdown.__proto__ || Object.getPrototypeOf(Markdown)).apply(this, arguments));\n  }\n\n  _createClass(Markdown, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          markdown = _props.markdown,\n          openLinksInNewTab = _props.openLinksInNewTab,\n          whiteListedRules = _props.whiteListedRules,\n          rest = _objectWithoutProperties(_props, ['className', 'markdown', 'openLinksInNewTab', 'whiteListedRules']);\n\n      var classes = (0, _classnames2.default)('kbnMarkdown__body', className);\n      var markdownRenderer = markdownFactory(whiteListedRules, openLinksInNewTab);\n      var renderedMarkdown = markdownRenderer(markdown);\n      return _react2.default.createElement('div', _extends({}, rest, {\n        className: classes\n        /*\n         * Justification for dangerouslySetInnerHTML:\n         * The Markdown Visualization is, believe it or not, responsible for rendering Markdown.\n         * This relies on `markdown-it` to produce safe and correct HTML.\n         */\n        , dangerouslySetInnerHTML: { __html: renderedMarkdown } //eslint-disable-line react/no-danger\n      }));\n    }\n  }]);\n\n  return Markdown;\n}(_react.PureComponent);\n\nMarkdown.propTypes = {\n  className: _propTypes2.default.string,\n  markdown: _propTypes2.default.string,\n  openLinksInNewTab: _propTypes2.default.bool,\n  whiteListedRules: _propTypes2.default.arrayOf(_propTypes2.default.string)\n};",null]}