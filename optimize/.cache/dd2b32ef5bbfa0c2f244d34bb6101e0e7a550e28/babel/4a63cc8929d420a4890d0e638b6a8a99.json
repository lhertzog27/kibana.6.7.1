{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/sparkline/sparkline_flot_chart.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/sparkline/sparkline_flot_chart.js","mtime":1567631712095},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SparklineFlotChart = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * or more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n// webpackShim\n\n\nvar _lodash = require('lodash');\n\nvar _jqueryFlot = require('jquery-flot');\n\nvar _jqueryFlot2 = _interopRequireDefault(_jqueryFlot);\n\nvar _constants = require('../../../common/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Helper class for operations done by Sparkline component on its flot chart\n */\n\nvar flotOptions = {\n  grid: {\n    // No grid\n    show: false,\n\n    margin: 4, // px\n\n    hoverable: true\n  },\n\n  // Set series line color\n  colors: ['#3b73ac'], // Cribbed from components/chart/get_color.js\n\n  series: {\n    // No shadow on series lines\n    shadowSize: 0, // Cribbed from components/chart/get_options.js\n\n    lines: {\n      // Set series line width\n      lineWidth: 2 // Cribbed from components/chart/get_options.js\n    },\n\n    highlightColor: '#3b73ac',\n\n    points: {\n      radius: 2\n    }\n  }\n};\n\nfunction makeData() {\n  var series = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var data = [];\n\n  // The actual series to be rendered\n  data.push(series);\n\n  // A fake series, containing only the last point from the actual series, to trick flot\n  // into showing the \"spark\" point of the sparkline.\n  data.push({\n    data: [(0, _lodash.last)(series)],\n    points: {\n      show: true,\n      radius: 2,\n      fill: 1,\n      fillColor: false\n    }\n  });\n\n  return data;\n}\n\nvar SparklineFlotChart = exports.SparklineFlotChart = function () {\n  function SparklineFlotChart(containerElem, initialSeries, onBrush, onHover, overrideOptions) {\n    _classCallCheck(this, SparklineFlotChart);\n\n    _initialiseProps.call(this);\n\n    this.containerElem = containerElem;\n    this.data = makeData(initialSeries);\n    this.options = _extends({}, flotOptions, overrideOptions);\n\n    if ((0, _lodash.isFunction)(onBrush)) {\n      this.setupBrushHandling(onBrush);\n    }\n\n    if ((0, _lodash.isFunction)(onHover)) {\n      this.setupHoverHandling(onHover);\n    }\n\n    this.render();\n    window.addEventListener('resize', this.render);\n  }\n\n  _createClass(SparklineFlotChart, [{\n    key: 'update',\n    value: function update(series) {\n      this.flotChart.setData(makeData(series));\n      this.flotChart.setupGrid();\n      this.flotChart.draw();\n    }\n  }, {\n    key: 'shutdown',\n\n\n    /**\n     * Necessary to prevent a memory leak. Should be called any time\n     * the chart is being removed from the DOM\n     */\n    value: function shutdown() {\n      this.flotChart.shutdown();\n      var container = (0, _jqueryFlot2.default)(this.containerElem);\n      container.off('plotselected');\n      container.off('plothover');\n      window.removeEventListener('resize', this.render);\n    }\n  }]);\n\n  return SparklineFlotChart;\n}();\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this = this;\n\n  this.render = function () {\n    _this.flotChart = _jqueryFlot2.default.plot(_this.containerElem, _this.data, _this.options);\n  };\n\n  this.setupBrushHandling = function (onBrush) {\n    // Requires `selection` flot plugin\n    _this.options.selection = {\n      mode: 'x',\n      color: '#9c9c9c'\n    };\n    (0, _jqueryFlot2.default)(_this.containerElem).off('plotselected');\n    (0, _jqueryFlot2.default)(_this.containerElem).on('plotselected', function (_event, range) {\n      onBrush(range.xaxis);\n      _this.flotChart.clearSelection();\n    });\n  };\n\n  this.setupHoverHandling = function (onHover) {\n    var container = (0, _jqueryFlot2.default)(_this.containerElem);\n    var debouncedOnHover = (0, _lodash.debounce)(function (_event, _range, item) {\n      if (item === null) {\n        return onHover();\n      }\n\n      onHover({\n        xValue: item.datapoint[0],\n        yValue: item.datapoint[1],\n        xPosition: item.pageX - window.pageXOffset,\n        yPosition: item.pageY - window.pageYOffset,\n        plotTop: container.offset().top,\n        plotLeft: container.offset().left,\n        plotHeight: container.height(),\n        plotWidth: container.width()\n      });\n    }, _constants.DEBOUNCE_FAST_MS, { leading: true });\n\n    container.off('plothover');\n    container.on('plothover', debouncedOnHover);\n  };\n};",null]}