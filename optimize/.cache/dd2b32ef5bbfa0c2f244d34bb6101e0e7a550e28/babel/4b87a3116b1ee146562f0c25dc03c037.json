{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/chrome/services/global_nav_state.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/services/global_nav_state.js","mtime":1567631711711},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__newPlatformInit__ = __newPlatformInit__;\n\nvar _operators = require('rxjs/operators');\n\nvar _modules = require('../../modules');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar newPlatformChrome = void 0;\nfunction __newPlatformInit__(instance) {\n  if (newPlatformChrome) {\n    throw new Error('ui/chrome/global_nav_state is already initialized');\n  }\n\n  newPlatformChrome = instance;\n}\n\n_modules.uiModules.get('kibana').service('globalNavState', function ($rootScope) {\n  var _isOpen = false;\n  newPlatformChrome.getIsCollapsed$().pipe((0, _operators.distinctUntilChanged)()).subscribe(function (isCollapsed) {\n    $rootScope.$evalAsync(function () {\n      _isOpen = !isCollapsed;\n      $rootScope.$broadcast('globalNavState:change');\n    });\n  });\n\n  return {\n    isOpen: function isOpen() {\n      return _isOpen;\n    },\n\n    setOpen: function setOpen(newValue) {\n      newPlatformChrome.setIsCollapsed(!newValue);\n    }\n  };\n});",null]}