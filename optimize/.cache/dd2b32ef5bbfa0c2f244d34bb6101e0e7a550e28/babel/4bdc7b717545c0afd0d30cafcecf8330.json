{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/vega/public/vega_visualization.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/vega/public/vega_visualization.js","mtime":1567631711657},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nicensed to Elasticsearch B.V. under one or more contributor\nlicense agreements. See the NOTICE file distributed with\nthis work for additional information regarding copyright\nownership. Elasticsearch B.V. licenses this file to you under\nthe Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License.\nou may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn\nexports.VegaVisualizationProvider = VegaVisualizationProvider;\n\nvar _i18n = require('@kbn/i18n');\n\nvar _notify = require('ui/notify');\n\nvar _vega_view = require('./vega_view/vega_view');\n\nvar _vega_map_view = require('./vega_view/vega_map_view');\n\nvar _saved_objects = require('ui/saved_objects');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// $rootScope is for the removeFilter() workaround, see vega_view/vega_base_view.js\nfunction VegaVisualizationProvider(Private, vegaConfig, serviceSettings, $rootScope) {\n\n  var savedObjectsClient = Private(_saved_objects.SavedObjectsClientProvider);\n  var notify = new _notify.Notifier({ location: 'Vega' });\n\n  return function () {\n    function VegaVisualization(el, vis) {\n      _classCallCheck(this, VegaVisualization);\n\n      this._el = el;\n      this._vis = vis;\n    }\n\n    /**\n     * Find index pattern by its title, of if not given, gets default\n     * @param {string} [index]\n     * @returns {Promise<string>} index id\n     */\n\n\n    _createClass(VegaVisualization, [{\n      key: 'findIndex',\n      value: function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(index) {\n          var idxObj;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  idxObj = void 0;\n\n                  if (!index) {\n                    _context.next = 9;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return (0, _saved_objects.findObjectByTitle)(savedObjectsClient, 'index-pattern', index);\n\n                case 4:\n                  idxObj = _context.sent;\n\n                  if (idxObj) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  throw new Error(_i18n.i18n.translate('vega.visualization.indexNotFoundErrorMessage', {\n                    defaultMessage: 'Index {index} not found',\n                    values: { index: '\"' + index + '\"' }\n                  }));\n\n                case 7:\n                  _context.next = 14;\n                  break;\n\n                case 9:\n                  _context.next = 11;\n                  return this._vis.API.indexPatterns.getDefault();\n\n                case 11:\n                  idxObj = _context.sent;\n\n                  if (idxObj) {\n                    _context.next = 14;\n                    break;\n                  }\n\n                  throw new Error(_i18n.i18n.translate('vega.visualization.unableToFindDefaultIndexErrorMessage', {\n                    defaultMessage: 'Unable to find default index'\n                  }));\n\n                case 14:\n                  return _context.abrupt('return', idxObj.id);\n\n                case 15:\n                case 'end':\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function findIndex(_x) {\n          return _ref.apply(this, arguments);\n        }\n\n        return findIndex;\n      }()\n\n      /**\n       *\n       * @param {VegaParser} visData\n       * @param {*} status\n       * @returns {Promise<void>}\n       */\n\n    }, {\n      key: 'render',\n      value: function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(visData, status) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!(!visData && !this._vegaView)) {\n                    _context2.next = 3;\n                    break;\n                  }\n\n                  _notify.toastNotifications.addWarning(_i18n.i18n.translate('vega.visualization.unableToRenderWithoutDataWarningMessage', {\n                    defaultMessage: 'Unable to render without data'\n                  }));\n                  return _context2.abrupt('return');\n\n                case 3:\n                  _context2.prev = 3;\n                  _context2.next = 6;\n                  return this._render(visData, status);\n\n                case 6:\n                  _context2.next = 11;\n                  break;\n\n                case 8:\n                  _context2.prev = 8;\n                  _context2.t0 = _context2['catch'](3);\n\n                  if (this._vegaView) {\n                    this._vegaView.onError(_context2.t0);\n                  } else {\n                    notify.error(_context2.t0);\n                  }\n\n                case 11:\n                case 'end':\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this, [[3, 8]]);\n        }));\n\n        function render(_x2, _x3) {\n          return _ref2.apply(this, arguments);\n        }\n\n        return render;\n      }()\n    }, {\n      key: '_render',\n      value: function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(vegaParser, status) {\n          var vegaViewParams;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!(vegaParser && (status.data || !this._vegaView))) {\n                    _context3.next = 11;\n                    break;\n                  }\n\n                  if (!this._vegaView) {\n                    _context3.next = 5;\n                    break;\n                  }\n\n                  _context3.next = 4;\n                  return this._vegaView.destroy();\n\n                case 4:\n                  this._vegaView = null;\n\n                case 5:\n                  vegaViewParams = {\n                    vegaConfig: vegaConfig,\n                    parentEl: this._el,\n                    vegaParser: vegaParser,\n                    serviceSettings: serviceSettings,\n                    queryfilter: this._vis.API.queryFilter,\n                    timefilter: this._vis.API.timeFilter,\n                    findIndex: this.findIndex.bind(this),\n                    $rootScope: $rootScope\n                  };\n\n\n                  if (vegaParser.useMap) {\n                    this._vegaView = new _vega_map_view.VegaMapView(vegaViewParams);\n                  } else {\n                    this._vegaView = new _vega_view.VegaView(vegaViewParams);\n                  }\n                  _context3.next = 9;\n                  return this._vegaView.init();\n\n                case 9:\n                  _context3.next = 14;\n                  break;\n\n                case 11:\n                  if (!status.resize) {\n                    _context3.next = 14;\n                    break;\n                  }\n\n                  _context3.next = 14;\n                  return this._vegaView.resize();\n\n                case 14:\n                case 'end':\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function _render(_x4, _x5) {\n          return _ref3.apply(this, arguments);\n        }\n\n        return _render;\n      }()\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        return this._vegaView && this._vegaView.destroy();\n      }\n    }]);\n\n    return VegaVisualization;\n  }();\n}",null]}