{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/message_call_out/message_call_out.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/message_call_out/message_call_out.js","mtime":1567631712034},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.MessageCallOut = MessageCallOut;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _message_levels = require('../../../common/constants/message_levels');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /*\n                                                                                                                                                                                                                              * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                              * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                              * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                              */\n\n/*\n * Provides a wrapper around EuiCallOut for the display of error messages,\n * setting the icon and color according to a supplied MESSAGE_LEVEL.\n */\n\n// don't use something like plugins/ml/../common\n// because it won't work with the jest tests\n\n\nfunction getCallOutAttributes(message, status) {\n  switch (status) {\n    case _message_levels.MESSAGE_LEVEL.ERROR:\n      return { title: message, iconType: 'cross', color: 'danger' };\n    case _message_levels.MESSAGE_LEVEL.WARNING:\n      return { title: message, iconType: 'alert', color: 'warning' };\n    case _message_levels.MESSAGE_LEVEL.SUCCESS:\n      return { title: message, iconType: 'check', color: 'success' };\n    case _message_levels.MESSAGE_LEVEL.INFO:\n      return { title: message, iconType: 'iInCircle', color: 'primary' };\n  }\n}\n\nfunction MessageCallOut(_ref) {\n  var message = _ref.message,\n      status = _ref.status,\n      rest = _objectWithoutProperties(_ref, ['message', 'status']);\n\n  return _react2.default.createElement(_eui.EuiCallOut, _extends({\n    size: 's'\n  }, getCallOutAttributes(message, status), rest));\n}\n\nMessageCallOut.propTypes = {\n  message: _propTypes2.default.string,\n  status: _propTypes2.default.oneOf([_message_levels.MESSAGE_LEVEL.ERROR, _message_levels.MESSAGE_LEVEL.WARNING, _message_levels.MESSAGE_LEVEL.SUCCESS, _message_levels.MESSAGE_LEVEL.INFO])\n};",null]}