{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/buckets/terms.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/buckets/terms.js","mtime":1567631711698},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.termsBucketAgg = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _bucket_agg_type = require('./_bucket_agg_type');\n\nvar _agg_config = require('../../vis/agg_config');\n\nvar _schemas = require('../../vis/editors/default/schemas');\n\nvar _terms = require('./create_filter/terms');\n\nvar _order_agg = require('../controls/order_agg.html');\n\nvar _order_agg2 = _interopRequireDefault(_order_agg);\n\nvar _order_and_size = require('../controls/order_and_size.html');\n\nvar _order_and_size2 = _interopRequireDefault(_order_and_size);\n\nvar _other_bucket = require('../controls/other_bucket.html');\n\nvar _other_bucket2 = _interopRequireDefault(_other_bucket);\n\nvar _i18n = require('@kbn/i18n');\n\nvar _courier_inspector_utils = require('../../courier/utils/courier_inspector_utils');\n\nvar _terms_other_bucket_helper = require('./_terms_other_bucket_helper');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * software distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar aggFilter = ['!top_hits', '!percentiles', '!median', '!std_dev', '!derivative', '!moving_avg', '!serial_diff', '!cumulative_sum', '!avg_bucket', '!max_bucket', '!min_bucket', '!sum_bucket'];\n\nvar orderAggSchema = new _schemas.Schemas([{\n  group: 'none',\n  name: 'orderAgg',\n  title: _i18n.i18n.translate('common.ui.aggTypes.buckets.terms.orderAggTitle', {\n    defaultMessage: 'Order Agg'\n  }),\n  hideCustomLabel: true,\n  aggFilter: aggFilter\n}]).all[0];\n\nfunction isNotType(type) {\n  return function (agg) {\n    var field = agg.params.field;\n    return !field || field.type !== type;\n  };\n}\n\nvar migrateIncludeExcludeFormat = {\n  serialize: function serialize(value) {\n    if (!value || _lodash2.default.isString(value)) return value;else return value.pattern;\n  },\n  write: function write(aggConfig, output) {\n    var value = aggConfig.params[this.name];\n    if (_lodash2.default.isObject(value)) {\n      output.params[this.name] = value.pattern;\n    } else if (value) {\n      output.params[this.name] = value;\n    }\n  }\n};\n\nvar termsBucketAgg = exports.termsBucketAgg = new _bucket_agg_type.BucketAggType({\n  name: 'terms',\n  title: _i18n.i18n.translate('common.ui.aggTypes.buckets.termsTitle', {\n    defaultMessage: 'Terms'\n  }),\n  makeLabel: function makeLabel(agg) {\n    var params = agg.params;\n    return agg.getFieldDisplayName() + ': ' + params.order.display;\n  },\n  getFormat: function getFormat(bucket) {\n    return {\n      getConverterFor: function getConverterFor(type) {\n        return function (val) {\n          if (val === '__other__') {\n            return bucket.params.otherBucketLabel;\n          }\n          if (val === '__missing__') {\n            return bucket.params.missingBucketLabel;\n          }\n          var parsedUrl = {\n            origin: window.location.origin,\n            pathname: window.location.pathname,\n            basePath: _chrome2.default.getBasePath()\n          };\n          var converter = bucket.params.field.format.getConverterFor(type);\n          return converter(val, undefined, undefined, parsedUrl);\n        };\n      }\n    };\n  },\n  createFilter: _terms.createFilterTerms,\n  postFlightRequest: function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resp, aggConfigs, aggConfig, searchSource, inspectorAdapters) {\n      var nestedSearchSource, filterAgg, request, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              nestedSearchSource = searchSource.createChild();\n\n              if (!aggConfig.params.otherBucket) {\n                _context.next = 12;\n                break;\n              }\n\n              filterAgg = (0, _terms_other_bucket_helper.buildOtherBucketAgg)(aggConfigs, aggConfig, resp);\n\n              nestedSearchSource.setField('aggs', filterAgg);\n\n              request = inspectorAdapters.requests.start(_i18n.i18n.translate('common.ui.aggTypes.buckets.terms.otherBucketTitle', { defaultMessage: 'Other bucket' }), {\n                description: _i18n.i18n.translate('common.ui.aggTypes.buckets.terms.otherBucketDescription', {\n                  defaultMessage: 'This request counts the number of documents that fall ' + 'outside the criterion of the data buckets.'\n                })\n              });\n\n              nestedSearchSource.getSearchRequestBody().then(function (body) {\n                request.json(body);\n              });\n              request.stats((0, _courier_inspector_utils.getRequestInspectorStats)(nestedSearchSource));\n\n              _context.next = 9;\n              return nestedSearchSource.fetch();\n\n            case 9:\n              response = _context.sent;\n\n              request.stats((0, _courier_inspector_utils.getResponseInspectorStats)(nestedSearchSource, response)).ok({ json: response });\n              resp = (0, _terms_other_bucket_helper.mergeOtherBucketAggResponse)(aggConfigs, resp, response, aggConfig, filterAgg());\n\n            case 12:\n              if (aggConfig.params.missingBucket) {\n                resp = (0, _terms_other_bucket_helper.updateMissingBucket)(resp, aggConfigs, aggConfig);\n              }\n              return _context.abrupt('return', resp);\n\n            case 14:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    function postFlightRequest(_x, _x2, _x3, _x4, _x5) {\n      return _ref.apply(this, arguments);\n    }\n\n    return postFlightRequest;\n  }(),\n  params: [{\n    name: 'field',\n    type: 'field',\n    filterFieldTypes: ['number', 'boolean', 'date', 'ip', 'string']\n  }, {\n    name: 'size',\n    default: 5\n  }, {\n    name: 'orderAgg',\n    type: _agg_config.AggConfig,\n    default: null,\n    editor: _order_agg2.default,\n    serialize: function serialize(orderAgg) {\n      return orderAgg.toJSON();\n    },\n    deserialize: function deserialize(state, agg) {\n      return this.makeOrderAgg(agg, state);\n    },\n    makeOrderAgg: function makeOrderAgg(termsAgg, state) {\n      state = state || {};\n      state.schema = orderAggSchema;\n      var orderAgg = termsAgg.aggConfigs.createAggConfig(state, { addToAggConfigs: false });\n      orderAgg.id = termsAgg.id + '-orderAgg';\n      return orderAgg;\n    },\n    controller: function controller($scope) {\n      $scope.safeMakeLabel = function (agg) {\n        try {\n          return agg.makeLabel();\n        } catch (e) {\n          return _i18n.i18n.translate('common.ui.aggTypes.buckets.terms.aggNotValidLabel', {\n            defaultMessage: '- agg not valid -'\n          });\n        }\n      };\n\n      var INIT = {}; // flag to know when prevOrderBy has changed\n      var prevOrderBy = INIT;\n\n      $scope.$watch('responseValueAggs', updateOrderAgg);\n      $scope.$watch('agg.params.orderBy', updateOrderAgg);\n\n      // Returns true if the agg is not compatible with the terms bucket\n      $scope.rejectAgg = function rejectAgg(agg) {\n        return aggFilter.includes('!' + agg.type.name);\n      };\n\n      $scope.$watch('agg.params.field.type', function (type) {\n        if (type !== 'string') {\n          $scope.agg.params.missingBucket = false;\n        }\n      });\n\n      function updateOrderAgg() {\n        // abort until we get the responseValueAggs\n        if (!$scope.responseValueAggs) return;\n        var agg = $scope.agg;\n        var params = agg.params;\n        var orderBy = params.orderBy;\n        var paramDef = agg.type.params.byName.orderAgg;\n\n        // setup the initial value of orderBy\n        if (!orderBy && prevOrderBy === INIT) {\n          var respAgg = (0, _lodash2.default)($scope.responseValueAggs).filter(function (agg) {\n            return !$scope.rejectAgg(agg);\n          }).first();\n          if (!respAgg) {\n            respAgg = { id: '_key' };\n          }\n          params.orderBy = respAgg.id;\n          return;\n        }\n\n        // track the previous value\n        prevOrderBy = orderBy;\n\n        // we aren't creating a custom aggConfig\n        if (!orderBy || orderBy !== 'custom') {\n          params.orderAgg = null;\n          // ensure that orderBy is set to a valid agg\n          var _respAgg = (0, _lodash2.default)($scope.responseValueAggs).filter(function (agg) {\n            return !$scope.rejectAgg(agg);\n          }).find({ id: orderBy });\n          if (!_respAgg) {\n            params.orderBy = '_key';\n          }\n          return;\n        }\n\n        params.orderAgg = params.orderAgg || paramDef.makeOrderAgg(agg);\n      }\n    },\n    write: function write(agg, output, aggs) {\n      var dir = agg.params.order.val;\n      var order = output.params.order = {};\n\n      var orderAgg = agg.params.orderAgg || aggs.getResponseAggById(agg.params.orderBy);\n\n      // TODO: This works around an Elasticsearch bug the always casts terms agg scripts to strings\n      // thus causing issues with filtering. This probably causes other issues since float might not\n      // be able to contain the number on the elasticsearch side\n      if (output.params.script) {\n        output.params.valueType = agg.getField().type === 'number' ? 'float' : agg.getField().type;\n      }\n\n      if (agg.params.missingBucket && agg.params.field.type === 'string') {\n        output.params.missing = '__missing__';\n      }\n\n      if (!orderAgg) {\n        order[agg.params.orderBy || '_count'] = dir;\n        return;\n      }\n\n      if (orderAgg.type.name === 'count') {\n        order._count = dir;\n        return;\n      }\n\n      var orderAggId = orderAgg.id;\n      if (orderAgg.parentId) {\n        orderAgg = aggs.byId[orderAgg.parentId];\n      }\n\n      output.subAggs = (output.subAggs || []).concat(orderAgg);\n      order[orderAggId] = dir;\n    }\n  }, {\n    name: 'order',\n    type: 'optioned',\n    default: 'desc',\n    editor: _order_and_size2.default,\n    options: [{\n      display: _i18n.i18n.translate('common.ui.aggTypes.buckets.terms.orderDescendingTitle', {\n        defaultMessage: 'Descending'\n      }),\n      val: 'desc'\n    }, {\n      display: _i18n.i18n.translate('common.ui.aggTypes.buckets.terms.orderAscendingTitle', {\n        defaultMessage: 'Ascending'\n      }),\n      val: 'asc'\n    }],\n    write: _lodash2.default.noop // prevent default write, it's handled by orderAgg\n  }, {\n    name: 'orderBy',\n    write: _lodash2.default.noop // prevent default write, it's handled by orderAgg\n  }, {\n    name: 'otherBucket',\n    default: false,\n    editor: _other_bucket2.default,\n    write: _lodash2.default.noop\n  }, {\n    name: 'otherBucketLabel',\n    default: _i18n.i18n.translate('common.ui.aggTypes.buckets.terms.otherBucketLabel', {\n      defaultMessage: 'Other'\n    }),\n    write: _lodash2.default.noop\n  }, {\n    name: 'missingBucket',\n    default: false,\n    write: _lodash2.default.noop\n  }, {\n    name: 'missingBucketLabel',\n    default: _i18n.i18n.translate('common.ui.aggTypes.buckets.terms.missingBucketLabel', {\n      defaultMessage: 'Missing'\n    }),\n    write: _lodash2.default.noop\n  }, _extends({\n    name: 'exclude',\n    type: 'string',\n    advanced: true,\n    disabled: isNotType('string')\n  }, migrateIncludeExcludeFormat), _extends({\n    name: 'include',\n    type: 'string',\n    advanced: true,\n    disabled: isNotType('string')\n  }, migrateIncludeExcludeFormat)]\n});",null]}