{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/common/format_timestamp_to_duration.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/common/format_timestamp_to_duration.js","mtime":1567631712081},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatTimestampToDuration = formatTimestampToDuration;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nrequire('moment-duration-format');\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Formats a timestamp string\n * @param timestamp: ISO time string\n * @param calculationFlag: control \"since\" or \"until\" logic\n * @param initialTime {Object} moment object (not required)\n * @return string\n */\nfunction formatTimestampToDuration(timestamp, calculationFlag, initialTime) {\n  initialTime = initialTime || (0, _moment2.default)();\n  var timeDuration = void 0;\n  if (calculationFlag === _constants.CALCULATE_DURATION_SINCE) {\n    timeDuration = _moment2.default.duration(initialTime - (0, _moment2.default)(timestamp)); // since: now - timestamp\n  } else if (calculationFlag === _constants.CALCULATE_DURATION_UNTIL) {\n    timeDuration = _moment2.default.duration((0, _moment2.default)(timestamp) - initialTime); // until: timestamp - now\n  } else {\n    throw new Error('[formatTimestampToDuration] requires a [calculationFlag] parameter to specify format as \"since\" or \"until\" the given time.');\n  }\n\n  // See https://github.com/elastic/x-pack-kibana/issues/3554\n  var duration = void 0;\n  if (Math.abs(initialTime.diff(timestamp, 'months')) >= 1) {\n    // time diff is greater than 1 month, show months / days\n    duration = _moment2.default.duration(timeDuration).format(_constants.FORMAT_DURATION_TEMPLATE_LONG);\n  } else if (Math.abs(initialTime.diff(timestamp, 'minutes')) >= 1) {\n    // time diff is less than 1 month but greater than a minute, show days / hours / minutes\n    duration = _moment2.default.duration(timeDuration).format(_constants.FORMAT_DURATION_TEMPLATE_SHORT);\n  } else {\n    // time diff is less than a minute, show seconds\n    duration = _moment2.default.duration(timeDuration).format(_constants.FORMAT_DURATION_TEMPLATE_TINY);\n  }\n\n  return duration.replace(/ 0 min$/, '').replace(/ 0 hrs$/, '').replace(/ 0 days$/, ''); // See https://github.com/jsmreese/moment-duration-format/issues/64\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */",null]}