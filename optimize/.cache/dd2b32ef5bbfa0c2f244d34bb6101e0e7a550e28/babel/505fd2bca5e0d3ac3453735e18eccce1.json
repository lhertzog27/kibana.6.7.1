{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/kuery_autocomplete/public/autocomplete_providers/conjunction.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/kuery_autocomplete/public/autocomplete_providers/conjunction.js","mtime":1567631712000},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSuggestionsProvider = getSuggestionsProvider;\n\nvar _i18n = require('@kbn/i18n');\n\nvar type = 'conjunction'; /*\n                           * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                           * or more contributor license agreements. Licensed under the Elastic License;\n                           * you may not use this file except in compliance with the Elastic License.\n                           */\n\nvar bothArgumentsText = _i18n.i18n.translate('xpack.kueryAutocomplete.andOperatorDescription.bothArgumentsText', {\n  defaultMessage: 'both arguments',\n  description: 'Part of xpack.kueryAutocomplete.andOperatorDescription. Full text: \"Requires both arguments to be true\"'\n});\nvar oneOrMoreArgumentsText = _i18n.i18n.translate('xpack.kueryAutocomplete.orOperatorDescription.oneOrMoreArgumentsText', {\n  defaultMessage: 'one or more arguments',\n  description: 'Part of xpack.kueryAutocomplete.orOperatorDescription. Full text: \"Requires one or more arguments to be true\"'\n});\n\nvar conjunctions = {\n  and: '<p>' + _i18n.i18n.translate('xpack.kueryAutocomplete.andOperatorDescription', {\n    defaultMessage: 'Requires {bothArguments} to be true',\n    values: { bothArguments: '<span class=\"kbnSuggestionItem__callout\">' + bothArgumentsText + '</span>' },\n    description: 'Full text: \"Requires both arguments to be true\". See ' + 'xpack.kueryAutocomplete.andOperatorDescription.bothArgumentsText for \"both arguments\" part.'\n  }) + '</p>',\n  or: '<p>' + _i18n.i18n.translate('xpack.kueryAutocomplete.orOperatorDescription', {\n    defaultMessage: 'Requires {oneOrMoreArguments} to be true',\n    values: { oneOrMoreArguments: '<span class=\"kbnSuggestionItem__callout\">' + oneOrMoreArgumentsText + '</span>' },\n    description: 'Full text: \"Requires one or more arguments to be true\". See ' + 'xpack.kueryAutocomplete.orOperatorDescription.oneOrMoreArgumentsText for \"one or more arguments\" part.'\n  }) + '</p>'\n};\n\nfunction getDescription(conjunction) {\n  return conjunctions[conjunction];\n}\n\nfunction getSuggestionsProvider() {\n  return function getConjunctionSuggestions(_ref) {\n    var text = _ref.text,\n        end = _ref.end;\n\n    if (!text.endsWith(' ')) return [];\n    var suggestions = Object.keys(conjunctions).map(function (conjunction) {\n      var text = conjunction + ' ';\n      var description = getDescription(conjunction);\n      return { type: type, text: text, description: description, start: end, end: end };\n    });\n    return suggestions;\n  };\n}",null]}