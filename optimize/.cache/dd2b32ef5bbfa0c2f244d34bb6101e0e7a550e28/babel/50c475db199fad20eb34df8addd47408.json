{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/models/watch/threshold_watch.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/models/watch/threshold_watch.js","mtime":1567631712345},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ThresholdWatch = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base_watch = require('./base_watch');\n\nvar _uuid = require('uuid');\n\nvar _uuid2 = _interopRequireDefault(_uuid);\n\nvar _constants = require('plugins/watcher/../common/constants');\n\nvar _get_time_units_label = require('plugins/watcher/lib/get_time_units_label');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar DEFAULT_VALUES = {\n  AGG_TYPE: 'count',\n  TERM_SIZE: 5,\n  THRESHOLD_COMPARATOR: _constants.COMPARATORS.GREATER_THAN,\n  TIME_WINDOW_SIZE: 5,\n  TIME_WINDOW_UNIT: 'm',\n  TRIGGER_INTERVAL_SIZE: 1,\n  TRIGGER_INTERVAL_UNIT: 'm',\n  THRESHOLD: 1000\n};\n\n/**\n * {@code ThresholdWatch} allows the user to create a watch by defining a threshold.\n */\n\nvar ThresholdWatch = exports.ThresholdWatch = function (_BaseWatch) {\n  _inherits(ThresholdWatch, _BaseWatch);\n\n  function ThresholdWatch() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ThresholdWatch);\n\n    props.id = props.id || _uuid2.default.v4();\n    props.type = _constants.WATCH_TYPES.THRESHOLD;\n\n    var _this = _possibleConstructorReturn(this, (ThresholdWatch.__proto__ || Object.getPrototypeOf(ThresholdWatch)).call(this, props));\n\n    _this.index = props.index;\n    _this.timeField = props.timeField;\n    _this.triggerIntervalSize = props.triggerIntervalSize || DEFAULT_VALUES.TRIGGER_INTERVAL_SIZE;\n    _this.triggerIntervalUnit = props.triggerIntervalUnit || DEFAULT_VALUES.TRIGGER_INTERVAL_UNIT;\n    _this.aggType = props.aggType || DEFAULT_VALUES.AGG_TYPE;\n    _this.aggField = props.aggField;\n    _this.termSize = props.termSize || DEFAULT_VALUES.TERM_SIZE;\n    _this.termField = props.termField;\n    _this.thresholdComparator = props.thresholdComparator || DEFAULT_VALUES.THRESHOLD_COMPARATOR;\n    _this.timeWindowSize = props.timeWindowSize || DEFAULT_VALUES.TIME_WINDOW_SIZE;\n    _this.timeWindowUnit = props.timeWindowUnit || DEFAULT_VALUES.TIME_WINDOW_UNIT;\n\n    //NOTE: The threshold must be of the appropriate type, i.e.,number/date.\n    //Conversion from string must occur by consumer when assigning a\n    //value to this property.\n    _this.threshold = props.threshold || DEFAULT_VALUES.THRESHOLD;\n    return _this;\n  }\n\n  _createClass(ThresholdWatch, [{\n    key: 'hasTermsAgg',\n    get: function get() {\n      return Boolean(this.termField);\n    }\n  }, {\n    key: 'termOrder',\n    get: function get() {\n      return this.thresholdComparator === _constants.COMPARATORS.GREATER_THAN ? _constants.SORT_ORDERS.DESCENDING : _constants.SORT_ORDERS.ASCENDING;\n    }\n  }, {\n    key: 'titleDescription',\n    get: function get() {\n      var staticPart = _i18n.i18n.translate('xpack.watcher.models.thresholdWatch.sendAlertOnSpecificConditionTitleDescription', {\n        defaultMessage: 'Send an alert when a specific condition is met.'\n      });\n      if (isNaN(this.triggerIntervalSize)) {\n        return staticPart;\n      }\n\n      var timeUnitLabel = (0, _get_time_units_label.getTimeUnitsLabel)(this.triggerIntervalUnit, this.triggerIntervalSize);\n      var dynamicPartText = _i18n.i18n.translate('xpack.watcher.models.thresholdWatch.thresholdWatchIntervalTitleDescription', {\n        defaultMessage: 'This will run every {triggerIntervalSize} {timeUnitLabel}.',\n        values: {\n          triggerIntervalSize: this.triggerIntervalSize,\n          timeUnitLabel: timeUnitLabel\n        }\n      });\n      return staticPart + ' ' + dynamicPartText;\n    }\n  }, {\n    key: 'upstreamJson',\n    get: function get() {\n      var result = _get(ThresholdWatch.prototype.__proto__ || Object.getPrototypeOf(ThresholdWatch.prototype), 'upstreamJson', this);\n      Object.assign(result, {\n        index: this.index,\n        timeField: this.timeField,\n        triggerIntervalSize: this.triggerIntervalSize,\n        triggerIntervalUnit: this.triggerIntervalUnit,\n        aggType: this.aggType,\n        aggField: this.aggField,\n        termSize: this.termSize,\n        termField: this.termField,\n        thresholdComparator: this.thresholdComparator,\n        timeWindowSize: this.timeWindowSize,\n        timeWindowUnit: this.timeWindowUnit,\n        threshold: this.threshold\n      });\n\n      return result;\n    }\n  }, {\n    key: 'DEFAULT_VALUES',\n    get: function get() {\n      return DEFAULT_VALUES;\n    }\n  }], [{\n    key: 'fromUpstreamJson',\n    value: function fromUpstreamJson(upstreamWatch) {\n      return new ThresholdWatch(upstreamWatch);\n    }\n  }]);\n\n  return ThresholdWatch;\n}(_base_watch.BaseWatch);\n\nThresholdWatch.typeName = _i18n.i18n.translate('xpack.watcher.models.thresholdWatch.typeName', {\n  defaultMessage: 'Threshold Alert'\n});\nThresholdWatch.iconClass = '';\nThresholdWatch.selectMessage = _i18n.i18n.translate('xpack.watcher.models.thresholdWatch.selectMessageText', {\n  defaultMessage: 'Send an alert on a specific condition'\n});\nThresholdWatch.isCreatable = true;\nThresholdWatch.selectSortOrder = 1;",null]}