{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/kbn_vis_types/request_handler.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/kbn_vis_types/request_handler.js","mtime":1567631711630},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetricsRequestHandlerProvider = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                   * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                   * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                   * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                   * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                   * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                   * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                   * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                   * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                   * under the License.\n                                                                                                                                                                                                                                                                   */\n\nvar _validate_interval = require('../lib/validate_interval');\n\nvar _timezone = require('ui/vis/lib/timezone');\n\nvar _timefilter = require('ui/timefilter');\n\nvar MetricsRequestHandlerProvider = function MetricsRequestHandlerProvider(Private, Notifier, config, $http, i18n) {\n  var notify = new Notifier({ location: i18n('tsvb.requestHandler.notifier.locationNameTitle', { defaultMessage: 'Metrics' }) });\n\n  return {\n    name: 'metrics',\n    handler: function handler(_ref) {\n      var uiState = _ref.uiState,\n          timeRange = _ref.timeRange,\n          filters = _ref.filters,\n          query = _ref.query,\n          visParams = _ref.visParams;\n\n      var timezone = Private(_timezone.timezoneProvider)();\n      return new Promise(function (resolve) {\n        var panel = visParams;\n        var uiStateObj = uiState.get(panel.type, {});\n        var parsedTimeRange = _timefilter.timefilter.calculateBounds(timeRange);\n        var scaledDataFormat = config.get('dateFormat:scaled');\n        var dateFormat = config.get('dateFormat');\n        if (panel && panel.id) {\n          var params = {\n            timerange: _extends({ timezone: timezone }, parsedTimeRange),\n            query: Array.isArray(query) ? query : [query],\n            filters: filters,\n            panels: [panel],\n            state: uiStateObj\n          };\n\n          try {\n            var maxBuckets = config.get('metrics:max_buckets');\n            (0, _validate_interval.validateInterval)(parsedTimeRange, panel, maxBuckets);\n            var httpResult = $http.post('../api/metrics/vis/data', params).then(function (resp) {\n              return _extends({ dateFormat: dateFormat, scaledDataFormat: scaledDataFormat, timezone: timezone }, resp.data);\n            }).catch(function (resp) {\n              throw resp.data;\n            });\n\n            return httpResult.then(resolve).catch(function (resp) {\n              resolve({});\n              var err = new Error(resp.message);\n              err.stack = resp.stack;\n              notify.error(err);\n            });\n          } catch (e) {\n            notify.error(e);\n            return resolve();\n          }\n        }\n      });\n    }\n  };\n};\n\nexports.MetricsRequestHandlerProvider = MetricsRequestHandlerProvider;",null]}