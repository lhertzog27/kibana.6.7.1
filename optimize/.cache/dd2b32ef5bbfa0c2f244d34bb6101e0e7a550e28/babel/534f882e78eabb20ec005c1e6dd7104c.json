{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/ccr_shard/status.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/ccr_shard/status.js","mtime":1567631712085},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Status = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _summary_status = require('../../summary_status');\n\nvar _format_number = require('../../../lib/format_number');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction StatusUI(_ref) {\n  var stat = _ref.stat,\n      formattedLeader = _ref.formattedLeader,\n      oldestStat = _ref.oldestStat,\n      intl = _ref.intl;\n  var followerIndex = stat.follower_index,\n      shardId = stat.shard_id,\n      operationsReceived = stat.operations_written,\n      failedFetches = stat.failed_read_requests;\n  var oldestOperationsReceived = oldestStat.operations_written,\n      oldestFailedFetches = oldestStat.failed_read_requests;\n\n\n  var metrics = [{\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.elasticsearch.ccrShard.status.followerIndexLabel',\n      defaultMessage: 'Follower Index'\n    }),\n    value: followerIndex,\n    'data-test-subj': 'followerIndex'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.elasticsearch.ccrShard.status.shardIdLabel',\n      defaultMessage: 'Shard Id'\n    }),\n    value: shardId,\n    'data-test-subj': 'shardId'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.elasticsearch.ccrShard.status.leaderIndexLabel',\n      defaultMessage: 'Leader Index'\n    }),\n    value: formattedLeader,\n    'data-test-subj': 'leaderIndex'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.elasticsearch.ccrShard.status.opsSyncedLabel',\n      defaultMessage: 'Ops Synced'\n    }),\n    value: (0, _format_number.formatMetric)(operationsReceived - oldestOperationsReceived, 'int_commas'),\n    'data-test-subj': 'operationsReceived'\n  }, {\n    label: intl.formatMessage({\n      id: 'xpack.monitoring.elasticsearch.ccrShard.status.failedFetchesLabel',\n      defaultMessage: 'Failed Fetches'\n    }),\n    value: (0, _format_number.formatMetric)(failedFetches - oldestFailedFetches, 'int_commas'),\n    'data-test-subj': 'failedFetches'\n  }];\n\n  return _react2.default.createElement(_summary_status.SummaryStatus, {\n    metrics: metrics,\n    'data-test-subj': 'ccrDetailStatus'\n  });\n}\n\nvar Status = exports.Status = (0, _react3.injectI18n)(StatusUI);",null]}