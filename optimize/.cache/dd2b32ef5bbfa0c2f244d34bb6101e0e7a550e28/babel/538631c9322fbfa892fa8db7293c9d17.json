{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/index_management_extensions.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/index_management_extensions.js","mtime":1567631711970},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBadgeExtensions = exports.addBadgeExtension = exports.getToggleExtensions = exports.addToggleExtension = exports.getFilterExtensions = exports.addFilterExtension = exports.getBannerExtensions = exports.addBannerExtension = exports.getActionExtensions = exports.addActionExtension = exports.getSummaryExtensions = exports.addSummaryExtension = undefined;\n\nvar _i18n = require('@kbn/i18n');\n\nvar summaryExtensions = []; /*\n                             * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                             * or more contributor license agreements. Licensed under the Elastic License;\n                             * you may not use this file except in compliance with the Elastic License.\n                             */\nvar addSummaryExtension = exports.addSummaryExtension = function addSummaryExtension(summaryExtension) {\n  summaryExtensions.push(summaryExtension);\n};\nvar getSummaryExtensions = exports.getSummaryExtensions = function getSummaryExtensions() {\n  return summaryExtensions;\n};\nvar actionExtensions = [];\nvar addActionExtension = exports.addActionExtension = function addActionExtension(actionExtension) {\n  actionExtensions.push(actionExtension);\n};\nvar getActionExtensions = exports.getActionExtensions = function getActionExtensions() {\n  return actionExtensions;\n};\nvar bannerExtensions = [];\nvar addBannerExtension = exports.addBannerExtension = function addBannerExtension(actionExtension) {\n  bannerExtensions.push(actionExtension);\n};\nvar getBannerExtensions = exports.getBannerExtensions = function getBannerExtensions() {\n  return bannerExtensions;\n};\nvar filterExtensions = [];\nvar addFilterExtension = exports.addFilterExtension = function addFilterExtension(filterExtension) {\n  filterExtensions.push(filterExtension);\n};\nvar getFilterExtensions = exports.getFilterExtensions = function getFilterExtensions() {\n  return filterExtensions;\n};\nvar toggleExtensions = [];\nvar addToggleExtension = exports.addToggleExtension = function addToggleExtension(toggleExtension) {\n  toggleExtensions.push(toggleExtension);\n};\nvar getToggleExtensions = exports.getToggleExtensions = function getToggleExtensions() {\n  return toggleExtensions;\n};\nvar badgeExtensions = [{\n  matchIndex: function matchIndex(index) {\n    return index.isFrozen;\n  },\n  label: _i18n.i18n.translate('xpack.idxMgmt.frozenBadgeLabel', {\n    defaultMessage: 'Frozen'\n  }),\n  filterExpression: 'isFrozen:true',\n  color: 'primary'\n}];\nvar addBadgeExtension = exports.addBadgeExtension = function addBadgeExtension(badgeExtension) {\n  badgeExtensions.push(badgeExtension);\n};\nvar getBadgeExtensions = exports.getBadgeExtensions = function getBadgeExtensions() {\n  return badgeExtensions;\n};",null]}