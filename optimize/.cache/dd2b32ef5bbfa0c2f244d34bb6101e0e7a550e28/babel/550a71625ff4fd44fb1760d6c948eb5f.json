{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/beats/stats.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/beats/stats.js","mtime":1567631712083},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stats = Stats;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _format_number = require('plugins/monitoring/lib/format_number');\n\nvar _summary_status = require('../summary_status');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                     * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                     * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                     * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                     */\n\nfunction Stats(_ref) {\n  var stats = _ref.stats;\n  var total = stats.total,\n      types = stats.types,\n      _stats$stats = stats.stats,\n      bytesSent = _stats$stats.bytesSent,\n      totalEvents = _stats$stats.totalEvents;\n\n\n  var metrics = [{\n    label: _i18n.i18n.translate('xpack.monitoring.beats.overview.totalBeatsLabel', {\n      defaultMessage: 'Total Beats'\n    }),\n    value: (0, _format_number.formatMetric)(total, 'int_commas'),\n    'data-test-subj': 'totalBeats'\n  }];\n\n  metrics.push.apply(metrics, _toConsumableArray(types.map(function (_ref2) {\n    var type = _ref2.type,\n        count = _ref2.count;\n    return {\n      label: type,\n      value: (0, _format_number.formatMetric)(count, 'int_commas'),\n      'data-test-subj': 'typeCount',\n      'data-test-type-count': type + ':' + count\n    };\n  })));\n\n  metrics.push({\n    label: _i18n.i18n.translate('xpack.monitoring.beats.overview.totalEventsLabel', {\n      defaultMessage: 'Total Events'\n    }),\n    value: (0, _format_number.formatMetric)(totalEvents, '0.[0]a'),\n    'data-test-subj': 'totalEvents'\n  });\n\n  metrics.push({\n    label: _i18n.i18n.translate('xpack.monitoring.beats.overview.bytesSentLabel', {\n      defaultMessage: 'Bytes Sent'\n    }),\n    value: (0, _format_number.formatMetric)(bytesSent, 'byte'),\n    'data-test-subj': 'bytesSent'\n  });\n\n  return _react2.default.createElement(_summary_status.SummaryStatus, {\n    metrics: metrics,\n    'data-test-subj': 'beatsSummaryStatus'\n  });\n}",null]}