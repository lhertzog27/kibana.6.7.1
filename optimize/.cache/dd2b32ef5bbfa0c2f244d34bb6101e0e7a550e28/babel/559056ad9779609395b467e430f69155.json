{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/services/calendar_service.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/services/calendar_service.js","mtime":1567631712062},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mlCalendarService = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * or more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _i18n = require('@kbn/i18n');\n\nvar _ml_api_service = require('plugins/ml/services/ml_api_service');\n\nvar _job_service = require('plugins/ml/services/job_service');\n\nvar _messagebar_service = require('plugins/ml/components/messagebar/messagebar_service');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar msgs = _messagebar_service.mlMessageBarService;\n\nvar CalendarService = function () {\n  function CalendarService() {\n    _classCallCheck(this, CalendarService);\n\n    this.calendars = [];\n    // list of calendar ids per job id\n    this.jobCalendars = {};\n    // list of calendar ids per group id\n    this.groupCalendars = {};\n  }\n\n  _createClass(CalendarService, [{\n    key: 'loadCalendars',\n    value: function loadCalendars(jobs) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var calendars = [];\n        jobs.forEach(function (j) {\n          _this.jobCalendars[j.job_id] = [];\n        });\n        var groups = {};\n        _job_service.mlJobService.getJobGroups().forEach(function (g) {\n          groups[g.id] = g;\n        });\n\n        _ml_api_service.ml.calendars().then(function (resp) {\n          calendars = resp;\n          // loop through calendars and their job_ids and create jobCalendars\n          // if a group is found, expand it out to its member jobs\n          calendars.forEach(function (cal) {\n            cal.job_ids.forEach(function (id) {\n              var isGroup = false;\n              // the job_id could be either a job id or a group id\n              if (_this.jobCalendars[id] !== undefined) {\n                _this.jobCalendars[id].push(cal.calendar_id);\n              } else if (groups[id] !== undefined) {\n                isGroup = true;\n                // expand out the group into its jobs and add each job\n                groups[id].jobs.forEach(function (j) {\n                  _this.jobCalendars[j.job_id].push(cal.calendar_id);\n                });\n              } else {\n                // not a known job or a known group. assume it's a unused group\n                isGroup = true;\n              }\n\n              if (isGroup) {\n                // keep track of calendars per group\n                if (_this.groupCalendars[id] === undefined) {\n                  _this.groupCalendars[id] = [cal.calendar_id];\n                } else {\n                  _this.groupCalendars[id].push(cal.calendar_id);\n                }\n              }\n            });\n          });\n\n          // deduplicate as group expansion may have added dupes.\n          _lodash2.default.each(_this.jobCalendars, function (cal, id) {\n            _this.jobCalendars[id] = _lodash2.default.uniq(cal);\n          });\n\n          _this.calendars = calendars;\n          resolve({ calendars: calendars });\n        }).catch(function (err) {\n          msgs.error(_i18n.i18n.translate('xpack.ml.calendarService.calendarsListCouldNotBeRetrievedErrorMessage', {\n            defaultMessage: 'Calendars list could not be retrieved'\n          }));\n          msgs.error('', err);\n          reject({ calendars: calendars, err: err });\n        });\n      });\n    }\n\n    // get the list of calendar groups\n\n  }, {\n    key: 'getCalendarGroups',\n    value: function getCalendarGroups() {\n      return Object.keys(this.groupCalendars).map(function (id) {\n        return { id: id };\n      });\n    }\n  }]);\n\n  return CalendarService;\n}();\n\nvar mlCalendarService = exports.mlCalendarService = new CalendarService();",null]}