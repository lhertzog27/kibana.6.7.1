{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/apps/export/export/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/apps/export/export/index.js","mtime":1567631711917},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExportApp = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _recompose = require('recompose');\n\nvar _workpad = require('../../../state/actions/workpad');\n\nvar _workpad2 = require('../../../state/selectors/workpad');\n\nvar _load_workpad = require('./load_workpad');\n\nvar _export_app = require('./export_app');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    workpad: (0, _workpad2.getWorkpad)(state),\n    selectedPageId: (0, _workpad2.getSelectedPage)(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    initializeWorkpad: function initializeWorkpad() {\n      dispatch((0, _workpad.initializeWorkpad)());\n    }\n  };\n};\n\nvar branches = [(0, _recompose.branch)(function (_ref) {\n  var workpad = _ref.workpad;\n  return workpad == null;\n}, (0, _recompose.renderComponent)(_load_workpad.LoadWorkpad))];\n\nvar ExportApp = exports.ExportApp = _recompose.compose.apply(undefined, [(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)].concat(branches))(_export_app.ExportApp);",null]}