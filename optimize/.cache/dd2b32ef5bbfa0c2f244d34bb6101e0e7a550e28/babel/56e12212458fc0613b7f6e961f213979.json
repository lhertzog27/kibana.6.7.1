{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/test_harness/test_sharding/find_test_bundle_url.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/test_harness/test_sharding/find_test_bundle_url.js","mtime":1567631711760},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findTestBundleUrl = findTestBundleUrl;\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n *  We don't have a lot of options for passing arguments to the page that karma\n *  creates, so we tack some query string params onto the test bundle script url.\n *\n *  This function finds that url by looking for a script tag that has\n *  the \"/tests.bundle.js\" segment\n *\n *  @return {string} url\n */\nfunction findTestBundleUrl() {\n  var scriptTags = document.querySelectorAll('script[src]');\n  var scriptUrls = [].map.call(scriptTags, function (el) {\n    return el.getAttribute('src');\n  });\n  var testBundleUrl = scriptUrls.find(function (url) {\n    return url.includes('/tests.bundle.js');\n  });\n\n  if (!testBundleUrl) {\n    throw new Error('test bundle url couldn\\'t be found');\n  }\n\n  return testBundleUrl;\n}",null]}