{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/saved_visualizations/saved_visualizations.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/saved_visualizations/saved_visualizations.js","mtime":1567631711601},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nrequire('./_saved_vis');\n\nvar _vis_types = require('ui/registry/vis_types');\n\nvar _modules = require('ui/modules');\n\nvar _saved_object_loader = require('ui/courier/saved_object/saved_object_loader');\n\nvar _saved_object_registry = require('../../management/saved_object_registry');\n\nvar _saved_objects = require('ui/saved_objects');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar app = _modules.uiModules.get('app/visualize');\n\n// Register this service with the saved object registry so it can be\n// edited by the object editor.\n_saved_object_registry.savedObjectManagementRegistry.register({\n  service: 'savedVisualizations',\n  title: 'visualizations'\n});\n\napp.service('savedVisualizations', function (Promise, kbnIndex, SavedVis, Private, kbnUrl, $http, chrome) {\n  var visTypes = Private(_vis_types.VisTypesRegistryProvider);\n\n  var savedObjectClient = Private(_saved_objects.SavedObjectsClientProvider);\n  var saveVisualizationLoader = new _saved_object_loader.SavedObjectLoader(SavedVis, kbnIndex, kbnUrl, $http, chrome, savedObjectClient);\n\n  saveVisualizationLoader.mapHitSource = function (source, id) {\n    source.id = id;\n    source.url = this.urlFor(id);\n\n    var typeName = source.typeName;\n    if (source.visState) {\n      try {\n        typeName = JSON.parse(source.visState).type;\n      } catch (e) {} /* missing typename handled below */ // eslint-disable-line no-empty\n    }\n\n    if (!typeName || !visTypes.byName[typeName]) {\n      source.error = 'Unknown visualization type';\n      return source;\n    }\n\n    source.type = visTypes.byName[typeName];\n    source.icon = source.type.icon;\n    return source;\n  };\n\n  saveVisualizationLoader.urlFor = function (id) {\n    return kbnUrl.eval('#/visualize/edit/{{id}}', { id: id });\n  };\n  return saveVisualizationLoader;\n});",null]}