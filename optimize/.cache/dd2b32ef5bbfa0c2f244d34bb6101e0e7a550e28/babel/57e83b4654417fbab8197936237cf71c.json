{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/edit_index_pattern/edit_index_pattern.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/edit_index_pattern/edit_index_pattern.js","mtime":1567631711572},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nrequire('./index_header');\n\nrequire('./create_edit_field');\n\nvar _url = require('ui/url');\n\nvar _edit_sections = require('./edit_sections');\n\nvar _notify = require('ui/notify');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _modules = require('ui/modules');\n\nvar _edit_index_pattern = require('./edit_index_pattern.html');\n\nvar _edit_index_pattern2 = _interopRequireDefault(_edit_index_pattern);\n\nvar _field_wildcard = require('ui/field_wildcard');\n\nvar _index_pattern_list = require('ui/management/index_pattern_list');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _source_filters_table = require('./source_filters_table');\n\nvar _indexed_fields_table = require('./indexed_fields_table');\n\nvar _scripted_fields_table = require('./scripted_fields_table');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _i18n2 = require('ui/i18n');\n\nvar _breadcrumbs = require('../breadcrumbs');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * software distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar REACT_SOURCE_FILTERS_DOM_ELEMENT_ID = 'reactSourceFiltersTable';\nvar REACT_INDEXED_FIELDS_DOM_ELEMENT_ID = 'reactIndexedFieldsTable';\nvar REACT_SCRIPTED_FIELDS_DOM_ELEMENT_ID = 'reactScriptedFieldsTable';\n\nfunction updateSourceFiltersTable($scope, $state) {\n  if ($state.tab === 'sourceFilters') {\n    $scope.$$postDigest(function () {\n      var node = document.getElementById(REACT_SOURCE_FILTERS_DOM_ELEMENT_ID);\n      if (!node) {\n        return;\n      }\n\n      (0, _reactDom.render)(_react2.default.createElement(\n        _i18n2.I18nContext,\n        null,\n        _react2.default.createElement(_source_filters_table.SourceFiltersTable, {\n          indexPattern: $scope.indexPattern,\n          filterFilter: $scope.fieldFilter,\n          fieldWildcardMatcher: $scope.fieldWildcardMatcher,\n          onAddOrRemoveFilter: function onAddOrRemoveFilter() {\n            $scope.editSections = $scope.editSectionsProvider($scope.indexPattern, $scope.indexPatternListProvider);\n            $scope.refreshFilters();\n            $scope.$apply();\n          }\n        })\n      ), node);\n    });\n  } else {\n    destroySourceFiltersTable();\n  }\n}\n\nfunction destroySourceFiltersTable() {\n  var node = document.getElementById(REACT_SOURCE_FILTERS_DOM_ELEMENT_ID);\n  node && (0, _reactDom.unmountComponentAtNode)(node);\n}\n\nfunction updateScriptedFieldsTable($scope, $state) {\n  if ($state.tab === 'scriptedFields') {\n    $scope.$$postDigest(function () {\n      var node = document.getElementById(REACT_SCRIPTED_FIELDS_DOM_ELEMENT_ID);\n      if (!node) {\n        return;\n      }\n\n      (0, _reactDom.render)(_react2.default.createElement(\n        _i18n2.I18nContext,\n        null,\n        _react2.default.createElement(_scripted_fields_table.ScriptedFieldsTable, {\n          indexPattern: $scope.indexPattern,\n          fieldFilter: $scope.fieldFilter,\n          scriptedFieldLanguageFilter: $scope.scriptedFieldLanguageFilter,\n          helpers: {\n            redirectToRoute: function redirectToRoute(obj, route) {\n              $scope.kbnUrl.redirectToRoute(obj, route);\n              $scope.$apply();\n            },\n            getRouteHref: function getRouteHref(obj, route) {\n              return $scope.kbnUrl.getRouteHref(obj, route);\n            }\n          },\n          onRemoveField: function onRemoveField() {\n            $scope.editSections = $scope.editSectionsProvider($scope.indexPattern, $scope.indexPatternListProvider);\n            $scope.refreshFilters();\n          }\n        })\n      ), node);\n    });\n  } else {\n    destroyScriptedFieldsTable();\n  }\n}\n\nfunction destroyScriptedFieldsTable() {\n  var node = document.getElementById(REACT_SCRIPTED_FIELDS_DOM_ELEMENT_ID);\n  node && (0, _reactDom.unmountComponentAtNode)(node);\n}\n\nfunction updateIndexedFieldsTable($scope, $state) {\n  if ($state.tab === 'indexedFields') {\n    $scope.$$postDigest(function () {\n      var node = document.getElementById(REACT_INDEXED_FIELDS_DOM_ELEMENT_ID);\n      if (!node) {\n        return;\n      }\n\n      (0, _reactDom.render)(_react2.default.createElement(\n        _i18n2.I18nContext,\n        null,\n        _react2.default.createElement(_indexed_fields_table.IndexedFieldsTable, {\n          fields: $scope.fields,\n          indexPattern: $scope.indexPattern,\n          fieldFilter: $scope.fieldFilter,\n          fieldWildcardMatcher: $scope.fieldWildcardMatcher,\n          indexedFieldTypeFilter: $scope.indexedFieldTypeFilter,\n          helpers: {\n            redirectToRoute: function redirectToRoute(obj, route) {\n              $scope.kbnUrl.redirectToRoute(obj, route);\n              $scope.$apply();\n            },\n            getFieldInfo: $scope.getFieldInfo\n          }\n        })\n      ), node);\n    });\n  } else {\n    destroyIndexedFieldsTable();\n  }\n}\n\nfunction destroyIndexedFieldsTable() {\n  var node = document.getElementById(REACT_INDEXED_FIELDS_DOM_ELEMENT_ID);\n  node && (0, _reactDom.unmountComponentAtNode)(node);\n}\n\n_routes2.default.when('/management/kibana/indices/:indexPatternId', {\n  template: _edit_index_pattern2.default,\n  k7Breadcrumbs: _breadcrumbs.getEditBreadcrumbs,\n  resolve: {\n    indexPattern: function indexPattern($route, redirectWhenMissing, indexPatterns) {\n      return indexPatterns.get($route.current.params.indexPatternId).catch(redirectWhenMissing('/management/kibana/index'));\n    }\n  }\n});\n\n_routes2.default.when('/management/kibana/indices', {\n  redirectTo: function redirectTo() {\n    var defaultIndex = _chrome2.default.getUiSettingsClient().get('defaultIndex');\n    if (defaultIndex) {\n      return '/management/kibana/indices/' + defaultIndex;\n    }\n\n    return '/management/kibana/index';\n  }\n});\n\n_modules.uiModules.get('apps/management').controller('managementIndicesEdit', function ($scope, $location, $route, config, indexPatterns, Private, AppState, docTitle, confirmModal) {\n  var $state = $scope.state = new AppState();\n\n  var _Private = Private(_field_wildcard.FieldWildcardProvider),\n      fieldWildcardMatcher = _Private.fieldWildcardMatcher;\n\n  var indexPatternListProvider = Private(_index_pattern_list.IndexPatternListFactory)();\n\n  $scope.fieldWildcardMatcher = fieldWildcardMatcher;\n  $scope.editSectionsProvider = Private(_edit_sections.IndicesEditSectionsProvider);\n  $scope.kbnUrl = Private(_url.KbnUrlProvider);\n  $scope.indexPattern = $route.current.locals.indexPattern;\n  $scope.indexPatternListProvider = indexPatternListProvider;\n  $scope.indexPattern.tags = indexPatternListProvider.getIndexPatternTags($scope.indexPattern);\n  $scope.getFieldInfo = indexPatternListProvider.getFieldInfo;\n  docTitle.change($scope.indexPattern.title);\n\n  var otherPatterns = _lodash2.default.filter($route.current.locals.indexPatterns, function (pattern) {\n    return pattern.id !== $scope.indexPattern.id;\n  });\n\n  $scope.$watch('indexPattern.fields', function () {\n    $scope.editSections = $scope.editSectionsProvider($scope.indexPattern, indexPatternListProvider);\n    $scope.refreshFilters();\n    $scope.fields = $scope.indexPattern.getNonScriptedFields();\n    updateIndexedFieldsTable($scope, $state);\n    updateScriptedFieldsTable($scope, $state);\n  });\n\n  $scope.refreshFilters = function () {\n    var indexedFieldTypes = [];\n    var scriptedFieldLanguages = [];\n    $scope.indexPattern.fields.forEach(function (field) {\n      if (field.scripted) {\n        scriptedFieldLanguages.push(field.lang);\n      } else {\n        indexedFieldTypes.push(field.type);\n      }\n    });\n\n    $scope.indexedFieldTypes = _lodash2.default.unique(indexedFieldTypes);\n    $scope.scriptedFieldLanguages = _lodash2.default.unique(scriptedFieldLanguages);\n  };\n\n  $scope.changeFilter = function (filter, val) {\n    $scope[filter] = val || ''; // null causes filter to check for null explicitly\n  };\n\n  $scope.changeTab = function (obj) {\n    $state.tab = obj.index;\n    updateIndexedFieldsTable($scope, $state);\n    updateScriptedFieldsTable($scope, $state);\n    updateSourceFiltersTable($scope, $state);\n    $state.save();\n  };\n\n  $scope.$watch('state.tab', function (tab) {\n    if (!tab) $scope.changeTab($scope.editSections[0]);\n  });\n\n  $scope.$watchCollection('indexPattern.fields', function () {\n    $scope.conflictFields = $scope.indexPattern.fields.filter(function (field) {\n      return field.type === 'conflict';\n    });\n  });\n\n  $scope.refreshFields = function () {\n    var _this = this;\n\n    var confirmMessage = _i18n.i18n.translate('kbn.management.editIndexPattern.refreshLabel', {\n      defaultMessage: 'This action resets the popularity counter of each field.'\n    });\n    var confirmModalOptions = {\n      confirmButtonText: _i18n.i18n.translate('kbn.management.editIndexPattern.refreshButton', { defaultMessage: 'Refresh' }),\n      onConfirm: function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return $scope.indexPattern.init(true);\n\n                case 2:\n                  $scope.fields = $scope.indexPattern.getNonScriptedFields();\n\n                case 3:\n                case 'end':\n                  return _context.stop();\n              }\n            }\n          }, _callee, _this);\n        }));\n\n        function onConfirm() {\n          return _ref.apply(this, arguments);\n        }\n\n        return onConfirm;\n      }(),\n      title: _i18n.i18n.translate('kbn.management.editIndexPattern.refreshHeader', { defaultMessage: 'Refresh field list?' })\n    };\n    confirmModal(confirmMessage, confirmModalOptions);\n  };\n\n  $scope.removePattern = function () {\n    function doRemove() {\n      if ($scope.indexPattern.id === config.get('defaultIndex')) {\n        config.remove('defaultIndex');\n\n        if (otherPatterns.length) {\n          config.set('defaultIndex', otherPatterns[0].id);\n        }\n      }\n\n      indexPatterns.delete($scope.indexPattern).then(function () {\n        $location.url('/management/kibana/index');\n      }).catch(_notify.fatalError);\n    }\n\n    var confirmModalOptions = {\n      confirmButtonText: _i18n.i18n.translate('kbn.management.editIndexPattern.deleteButton', { defaultMessage: 'Delete' }),\n      onConfirm: doRemove,\n      title: _i18n.i18n.translate('kbn.management.editIndexPattern.deleteHeader', { defaultMessage: 'Delete index pattern?' })\n    };\n    confirmModal('', confirmModalOptions);\n  };\n\n  $scope.setDefaultPattern = function () {\n    config.set('defaultIndex', $scope.indexPattern.id);\n  };\n\n  $scope.setIndexPatternsTimeField = function (field) {\n    if (field.type !== 'date') {\n      var errorMessage = _i18n.i18n.translate('kbn.management.editIndexPattern.notDateErrorMessage', {\n        defaultMessage: 'That field is a {fieldType} not a date.', values: { fieldType: field.type }\n      });\n      _notify.toastNotifications.addDanger(errorMessage);\n      return;\n    }\n    $scope.indexPattern.timeFieldName = field.name;\n    return $scope.indexPattern.save();\n  };\n\n  $scope.$watch('fieldFilter', function () {\n    if ($scope.fieldFilter === undefined) {\n      return;\n    }\n\n    switch ($state.tab) {\n      case 'indexedFields':\n        updateIndexedFieldsTable($scope, $state);\n      case 'scriptedFields':\n        updateScriptedFieldsTable($scope, $state);\n      case 'sourceFilters':\n        updateSourceFiltersTable($scope, $state);\n    }\n  });\n\n  $scope.$watch('indexedFieldTypeFilter', function () {\n    if ($scope.indexedFieldTypeFilter !== undefined && $state.tab === 'indexedFields') {\n      updateIndexedFieldsTable($scope, $state);\n    }\n  });\n\n  $scope.$watch('scriptedFieldLanguageFilter', function () {\n    if ($scope.scriptedFieldLanguageFilter !== undefined && $state.tab === 'scriptedFields') {\n      updateScriptedFieldsTable($scope, $state);\n    }\n  });\n\n  $scope.$on('$destroy', function () {\n    destroyIndexedFieldsTable();\n    destroyScriptedFieldsTable();\n  });\n\n  updateScriptedFieldsTable($scope, $state);\n  updateSourceFiltersTable($scope, $state);\n});",null]}