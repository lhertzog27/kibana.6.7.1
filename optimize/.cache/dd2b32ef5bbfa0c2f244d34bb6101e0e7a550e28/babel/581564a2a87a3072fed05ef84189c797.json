{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/courier/utils/courier_inspector_utils.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/courier/utils/courier_inspector_utils.js","mtime":1567631711715},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getResponseInspectorStats = exports.getRequestInspectorStats = undefined;\n\nvar _i18n = require('@kbn/i18n');\n\nfunction getRequestInspectorStats(searchSource) {\n  var stats = {};\n  var index = searchSource.getField('index');\n\n  if (index) {\n    stats.indexPattern = {\n      label: _i18n.i18n.translate('common.ui.courier.indexPatternLabel', {\n        defaultMessage: 'Index pattern'\n      }),\n      value: index.title,\n      description: _i18n.i18n.translate('common.ui.courier.indexPatternDescription', {\n        defaultMessage: 'The index pattern that connected to the Elasticsearch indices.'\n      })\n    };\n    stats.indexPatternId = {\n      label: _i18n.i18n.translate('common.ui.courier.indexPatternIdLabel', {\n        defaultMessage: 'Index pattern ID'\n      }),\n      value: index.id,\n      description: _i18n.i18n.translate('common.ui.courier.indexPatternIdDescription', {\n        defaultMessage: 'The ID in the {kibanaIndexPattern} index.',\n        values: { kibanaIndexPattern: '.kibana' }\n      })\n    };\n  }\n\n  return stats;\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */\n\n/**\n * This function collects statistics from a SearchSource and a response\n * for the usage in the inspector stats panel. Pass in a searchSource and a response\n * and the returned object can be passed to the `stats` method of the request\n * logger.\n */\n\nfunction getResponseInspectorStats(searchSource, resp) {\n  var lastRequest = searchSource.history && searchSource.history[searchSource.history.length - 1];\n  var stats = {};\n\n  if (resp && resp.took) {\n    stats.queryTime = {\n      label: _i18n.i18n.translate('common.ui.courier.queryTimeLabel', {\n        defaultMessage: 'Query time'\n      }),\n      value: _i18n.i18n.translate('common.ui.courier.queryTimeValue', {\n        defaultMessage: '{queryTime}ms',\n        values: { queryTime: resp.took }\n      }),\n      description: _i18n.i18n.translate('common.ui.courier.queryTimeDescription', {\n        defaultMessage: 'The time it took to process the query. ' + 'Does not include the time to send the request or parse it in the browser.'\n      })\n    };\n  }\n\n  if (resp && resp.hits) {\n    stats.hitsTotal = {\n      label: _i18n.i18n.translate('common.ui.courier.hitsTotalLabel', {\n        defaultMessage: 'Hits (total)'\n      }),\n      value: '' + resp.hits.total,\n      description: _i18n.i18n.translate('common.ui.courier.hitsTotalDescription', {\n        defaultMessage: 'The number of documents that match the query.'\n      })\n    };\n\n    stats.hits = {\n      label: _i18n.i18n.translate('common.ui.courier.hitsLabel', {\n        defaultMessage: 'Hits'\n      }),\n      value: '' + resp.hits.hits.length,\n      description: _i18n.i18n.translate('common.ui.courier.hitsDescription', {\n        defaultMessage: 'The number of documents returned by the query.'\n      })\n    };\n  }\n\n  if (lastRequest && (lastRequest.ms === 0 || lastRequest.ms)) {\n    stats.requestTime = {\n      label: _i18n.i18n.translate('common.ui.courier.requestTimeLabel', {\n        defaultMessage: 'Request time'\n      }),\n      value: _i18n.i18n.translate('common.ui.courier.requestTimeValue', {\n        defaultMessage: '{requestTime}ms',\n        values: { requestTime: lastRequest.ms }\n      }),\n      description: _i18n.i18n.translate('common.ui.courier.requestTimeDescription', {\n        defaultMessage: 'The time of the request from the browser to Elasticsearch and back. ' + 'Does not include the time the requested waited in the queue.'\n      })\n    };\n  }\n\n  return stats;\n}\n\nexports.getRequestInspectorStats = getRequestInspectorStats;\nexports.getResponseInspectorStats = getResponseInspectorStats;",null]}