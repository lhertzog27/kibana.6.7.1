{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/vislib/lib/layout/splits/column_chart/chart_split.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vislib/lib/layout/splits/column_chart/chart_split.js","mtime":1567631711778},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VislibLibLayoutSplitsColumnChartChartSplitProvider = VislibLibLayoutSplitsColumnChartChartSplitProvider;\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction VislibLibLayoutSplitsColumnChartChartSplitProvider() {\n  /*\n   * Adds div DOM elements to the `.visWrapper__chart` element based on the data layout.\n   * For example, if the data has rows, it returns the same number of\n   * `.chart` elements as row objects.\n   */\n  return function split(selection, parent) {\n    selection.each(function (data) {\n      var div = _d2.default.select(this).attr('class', function () {\n        if (data.rows) {\n          return 'visWrapper__splitCharts--row';\n        } else if (data.columns) {\n          return 'visWrapper__splitCharts--column';\n        } else {\n          if (parent) {\n            return 'visWrapper__chart--first visWrapper__chart--last visWrapper__chart';\n          }\n          return this.className + ' visWrapper__chart';\n        }\n      });\n      var divClass = '';\n      var chartsNumber = void 0;\n\n      var charts = div.selectAll('charts').append('div').data(function (d) {\n        if (d.rows) {\n          chartsNumber = d.rows.length;\n          return d.rows;\n        } else if (d.columns) {\n          chartsNumber = d.columns.length;\n          return d.columns;\n        } else {\n          divClass = 'chart';\n          chartsNumber = 1;\n          return [d];\n        }\n      }).enter().append('div').attr('class', function (d, i) {\n        var fullDivClass = divClass;\n        if (fullDivClass !== 'chart') {\n          if (chartsNumber > 1) {\n            if (i === 0) {\n              fullDivClass += ' visWrapper__chart--first';\n            } else if (i === chartsNumber - 1) {\n              fullDivClass += ' visWrapper__chart--last';\n            }\n          } else {\n            fullDivClass += ' visWrapper__chart--first visWrapper__chart--last';\n          }\n        }\n        return fullDivClass;\n      });\n\n      if (!data.series) {\n        charts.call(split);\n      }\n    });\n  };\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */",null]}