{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/cluster/overview/apm_panel.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/cluster/overview/apm_panel.js","mtime":1567631712084},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApmPanel = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _lodash = require('lodash');\n\nvar _format_number = require('plugins/monitoring/lib/format_number');\n\nvar _helpers = require('./helpers');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nvar _common = require('../../../../common');\n\nvar _constants = require('../../../../common/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ApmPanelUi(props) {\n  if (!(0, _lodash.get)(props, 'apms.total', 0) > 0) {\n    return null;\n  }\n\n  var goToApm = function goToApm() {\n    return props.changeUrl('apm');\n  };\n  var goToInstances = function goToInstances() {\n    return props.changeUrl('apm/instances');\n  };\n\n  return _react2.default.createElement(\n    _helpers.ClusterItemContainer,\n    _extends({}, props, {\n      url: 'apm',\n      title: props.intl.formatMessage({ id: 'xpack.monitoring.cluster.overview.apmPanel.apmTitle', defaultMessage: 'APM' })\n    }),\n    _react2.default.createElement(\n      _eui.EuiFlexGrid,\n      { columns: 4 },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPanel,\n          { paddingSize: 'm' },\n          _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h3',\n              null,\n              _react2.default.createElement(\n                _eui.EuiLink,\n                {\n                  onClick: goToApm,\n                  'aria-label': props.intl.formatMessage({\n                    id: 'xpack.monitoring.cluster.overview.apmPanel.overviewLinkAriaLabel', defaultMessage: 'APM Overview' }),\n                  'data-test-subj': 'apmOverview'\n                },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.monitoring.cluster.overview.apmPanel.overviewLinkLabel',\n                  defaultMessage: 'Overview'\n                })\n              )\n            )\n          ),\n          _react2.default.createElement(_eui.EuiHorizontalRule, { margin: 'm' }),\n          _react2.default.createElement(\n            _eui.EuiDescriptionList,\n            { type: 'column' },\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.apmPanel.processedEventsLabel',\n                defaultMessage: 'Processed Events'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'apmsTotalEvents' },\n              (0, _format_number.formatMetric)(props.totalEvents, '0.[0]a')\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.apmPanel.lastEventLabel',\n                defaultMessage: 'Last Event'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'apmsBytesSent' },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.apmPanel.lastEventDescription',\n                defaultMessage: '{timeOfLastEvent} ago',\n                values: { timeOfLastEvent: (0, _common.formatTimestampToDuration)(+(0, _moment2.default)(props.timeOfLastEvent), _constants.CALCULATE_DURATION_SINCE) }\n              })\n            )\n          )\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPanel,\n          { paddingSize: 'm' },\n          _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h3',\n              null,\n              _react2.default.createElement(\n                _eui.EuiLink,\n                {\n                  onClick: goToInstances,\n                  'aria-label': props.intl.formatMessage({\n                    id: 'xpack.monitoring.cluster.overview.apmPanel.instancesTotalLinkAriaLabel',\n                    defaultMessage: 'Apm Instances: {apmsTotal}' }, { apmsTotal: props.apms.total }),\n                  'data-test-subj': 'apmListing'\n                },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.monitoring.cluster.overview.apmPanel.serversTotalLinkLabel',\n                  defaultMessage: 'APM Servers: {apmsTotal}',\n                  values: { apmsTotal: _react2.default.createElement(\n                      'span',\n                      { 'data-test-subj': 'apmsTotal' },\n                      props.apms.total\n                    ) }\n                })\n              )\n            )\n          ),\n          _react2.default.createElement(_eui.EuiHorizontalRule, { margin: 'm' }),\n          _react2.default.createElement(\n            _eui.EuiDescriptionList,\n            { type: 'column' },\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.apmPanel.memoryUsageLabel',\n                defaultMessage: 'Memory Usage'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'apmMemoryUsage' },\n              _react2.default.createElement(_helpers.BytesPercentageUsage, { usedBytes: props.memRss, maxBytes: props.memTotal })\n            )\n          )\n        )\n      )\n    )\n  );\n}\n\nvar ApmPanel = exports.ApmPanel = (0, _react3.injectI18n)(ApmPanelUi);",null]}