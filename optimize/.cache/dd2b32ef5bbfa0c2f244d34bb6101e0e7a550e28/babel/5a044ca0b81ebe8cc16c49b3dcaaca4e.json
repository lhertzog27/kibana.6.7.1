{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/uis/arguments/number.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/uis/arguments/number.js","mtime":1567631711909},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.number = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _recompose = require('recompose');\n\nvar _eui = require('@elastic/eui');\n\nvar _lodash = require('lodash');\n\nvar _stateful_prop = require('../../../public/components/enhance/stateful_prop');\n\nvar _template_from_react_component = require('../../../public/lib/template_from_react_component');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// This is basically a direct copy of the string input, but with some Number() goodness maybe you think that's cheating and it should be\n// abstracted. If you can think of a 3rd or 4th usage for that abstraction, cool, do it, just don't make it more confusing. Copying is the\n// most understandable way to do this. There, I said it.\n\n// TODO: Support max/min as options\nvar NumberArgInput = function NumberArgInput(_ref) {\n  var updateValue = _ref.updateValue,\n      value = _ref.value,\n      confirm = _ref.confirm,\n      commit = _ref.commit,\n      argId = _ref.argId;\n  return _react2.default.createElement(\n    _eui.EuiFlexGroup,\n    { gutterSize: 's' },\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      null,\n      _react2.default.createElement(_eui.EuiFieldNumber, {\n        compressed: true,\n        id: argId,\n        value: Number(value),\n        onChange: confirm ? updateValue : function (ev) {\n          return commit(Number(ev.target.value));\n        }\n      })\n    ),\n    confirm && _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: false },\n      _react2.default.createElement(\n        _eui.EuiButton,\n        { size: 's', onClick: function onClick() {\n            return commit(Number(value));\n          } },\n        confirm\n      )\n    )\n  );\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */\n\nNumberArgInput.propTypes = {\n  argId: _propTypes2.default.string.isRequired,\n  updateValue: _propTypes2.default.func.isRequired,\n  value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,\n  confirm: _propTypes2.default.string,\n  commit: _propTypes2.default.func.isRequired\n};\n\nvar EnhancedNumberArgInput = (0, _recompose.compose)((0, _recompose.withProps)(function (_ref2) {\n  var onValueChange = _ref2.onValueChange,\n      typeInstance = _ref2.typeInstance,\n      argValue = _ref2.argValue;\n  return {\n    confirm: (0, _lodash.get)(typeInstance, 'options.confirm'),\n    commit: onValueChange,\n    value: argValue\n  };\n}), (0, _stateful_prop.createStatefulPropHoc)('value'))(NumberArgInput);\n\nEnhancedNumberArgInput.propTypes = {\n  argValue: _propTypes2.default.any.isRequired,\n  onValueChange: _propTypes2.default.func.isRequired,\n  typeInstance: _propTypes2.default.object.isRequired\n};\n\nvar number = exports.number = function number() {\n  return {\n    name: 'number',\n    displayName: 'number',\n    help: 'Input a number',\n    simpleTemplate: (0, _template_from_react_component.templateFromReactComponent)(EnhancedNumberArgInput),\n    default: '0'\n  };\n};",null]}