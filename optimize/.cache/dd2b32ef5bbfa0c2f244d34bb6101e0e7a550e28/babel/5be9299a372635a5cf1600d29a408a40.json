{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/chart/monitoring_timeseries_container.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/chart/monitoring_timeseries_container.js","mtime":1567631712084},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MonitoringTimeseriesContainer = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _get_title = require('./get_title');\n\nvar _get_units = require('./get_units');\n\nvar _monitoring_timeseries = require('./monitoring_timeseries');\n\nvar _info_tooltip = require('./info_tooltip');\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction MonitoringTimeseriesContainerUI(_ref) {\n  var series = _ref.series,\n      onBrush = _ref.onBrush,\n      intl = _ref.intl;\n\n  if (series === undefined) {\n    return null; // still loading\n  }\n\n  var title = (0, _get_title.getTitle)(series);\n  var titleForAriaIds = title.replace(/\\s+/, '--');\n  var units = (0, _get_units.getUnits)(series);\n  var bucketSize = (0, _lodash.get)((0, _lodash.first)(series), 'bucket_size'); // bucket size will be the same for all metrics in all series\n\n  var seriesScreenReaderTextList = [intl.formatMessage({\n    id: 'xpack.monitoring.chart.seriesScreenReaderListDescription',\n    defaultMessage: 'Interval: {bucketSize}' }, {\n    bucketSize: bucketSize\n  })].concat(series.map(function (item) {\n    return item.metric.label + ': ' + item.metric.description;\n  }));\n\n  return _react2.default.createElement(\n    _eui.EuiFlexGroup,\n    { direction: 'column', gutterSize: 's' },\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: false },\n      _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { gutterSize: 's', alignItems: 'center' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's', tabIndex: '0' },\n            _react2.default.createElement(\n              'h2',\n              null,\n              (0, _get_title.getTitle)(series),\n              units ? ' (' + units + ')' : '',\n              _react2.default.createElement(\n                _eui.EuiScreenReaderOnly,\n                null,\n                _react2.default.createElement(\n                  'span',\n                  null,\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.monitoring.chart.screenReaderUnaccessibleTitle',\n                    defaultMessage: 'This chart is not screen reader accessible'\n                  })\n                )\n              )\n            )\n          )\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _react.Fragment,\n            null,\n            _react2.default.createElement(_eui.EuiIconTip, {\n              anchorClassName: 'eui-textRight eui-alignMiddle monChart__tooltipTrigger',\n              type: 'iInCircle',\n              position: 'right',\n              content: _react2.default.createElement(_info_tooltip.InfoTooltip, { series: series, bucketSize: bucketSize })\n            }),\n            _react2.default.createElement(\n              _eui.EuiScreenReaderOnly,\n              null,\n              _react2.default.createElement(\n                'span',\n                { id: 'monitoringChart' + titleForAriaIds },\n                seriesScreenReaderTextList.join('. ')\n              )\n            )\n          )\n        )\n      )\n    ),\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { style: { minHeight: '200px' } },\n      _react2.default.createElement(_monitoring_timeseries.MonitoringTimeseries, {\n        series: series,\n        onBrush: onBrush\n      })\n    )\n  );\n}\n\nvar MonitoringTimeseriesContainer = exports.MonitoringTimeseriesContainer = (0, _react3.injectI18n)(MonitoringTimeseriesContainerUI);",null]}