{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/services/navigation.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/services/navigation.js","mtime":1567631711973},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIndexListUri = exports.getUrlService = exports.setUrlService = undefined;\n\nvar _constants = require('../../common/constants');\n\nvar urlService = void 0; /*\n                          * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                          * or more contributor license agreements. Licensed under the Elastic License;\n                          * you may not use this file except in compliance with the Elastic License.\n                          */\nvar setUrlService = exports.setUrlService = function setUrlService(aUrlService) {\n  urlService = aUrlService;\n};\nvar getUrlService = exports.getUrlService = function getUrlService() {\n  return urlService;\n};\nvar getIndexListUri = exports.getIndexListUri = function getIndexListUri(filter) {\n  if (filter) {\n    // React router tries to decode url params but it can't because the browser partially\n    // decodes them. So we have to encode both the URL and the filter to get it all to\n    // work correctly for filters with URL unsafe characters in them.\n    return encodeURI('#' + _constants.BASE_PATH + 'indices/filter/' + encodeURIComponent(filter));\n  }\n\n  // If no filter, URI is already safe so no need to encode.\n  return '#' + _constants.BASE_PATH + 'indices';\n};",null]}