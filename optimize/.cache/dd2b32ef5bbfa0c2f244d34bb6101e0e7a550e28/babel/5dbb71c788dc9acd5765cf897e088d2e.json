{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/sections/edit_policy/edit_policy.container.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/sections/edit_policy/edit_policy.container.js","mtime":1567631711965},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EditPolicy = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _edit_policy = require('./edit_policy');\n\nvar _selectors = require('../../store/selectors');\n\nvar _actions = require('../../store/actions');\n\nvar _find_errors = require('../../services/find_errors');\n\nvar EditPolicy = exports.EditPolicy = (0, _reactRedux.connect)(function (state) {\n  var errors = (0, _selectors.validateLifecycle)(state);\n  var firstError = (0, _find_errors.findFirstError)(errors);\n  return {\n    firstError: firstError,\n    errors: errors,\n    selectedPolicy: (0, _selectors.getSelectedPolicy)(state),\n    saveAsNewPolicy: (0, _selectors.getSaveAsNewPolicy)(state),\n    lifecycle: (0, _selectors.getLifecycle)(state),\n    policies: (0, _selectors.getPolicies)(state),\n    isPolicyListLoaded: (0, _selectors.isPolicyListLoaded)(state),\n    isNewPolicy: (0, _selectors.getIsNewPolicy)(state),\n    originalPolicyName: (0, _selectors.getSelectedOriginalPolicyName)(state)\n  };\n}, {\n  setSelectedPolicy: _actions.setSelectedPolicy,\n  setSelectedPolicyName: _actions.setSelectedPolicyName,\n  setSaveAsNewPolicy: _actions.setSaveAsNewPolicy,\n  saveLifecyclePolicy: _actions.saveLifecyclePolicy,\n  fetchPolicies: _actions.fetchPolicies\n})(_edit_policy.EditPolicy); /*\n                              * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                              * or more contributor license agreements. Licensed under the Elastic License;\n                              * you may not use this file except in compliance with the Elastic License.\n                              */",null]}