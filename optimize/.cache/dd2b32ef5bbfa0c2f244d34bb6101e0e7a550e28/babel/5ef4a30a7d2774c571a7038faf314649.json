{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/services/api.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/services/api.js","mtime":1567631711954},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadPermissions = exports.loadIndices = exports.loadAutoFollowStats = exports.updateFollowerIndex = exports.unfollowLeaderIndex = exports.resumeFollowerIndex = exports.pauseFollowerIndex = exports.createFollowerIndex = exports.getFollowerIndex = exports.loadFollowerIndices = exports.deleteAutoFollowPattern = exports.updateAutoFollowPattern = exports.createAutoFollowPattern = exports.loadRemoteClusters = exports.getAutoFollowPattern = exports.loadAutoFollowPatterns = undefined;\nexports.setHttpClient = setHttpClient;\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _constants = require('../../../common/constants');\n\nvar _utils = require('../../../common/services/utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar apiPrefix = _chrome2.default.addBasePath(_constants.API_BASE_PATH); /*\n                                                                         * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                         * or more contributor license agreements. Licensed under the Elastic License;\n                                                                         * you may not use this file except in compliance with the Elastic License.\n                                                                         */\n\nvar apiPrefixRemoteClusters = _chrome2.default.addBasePath(_constants.API_REMOTE_CLUSTERS_BASE_PATH);\nvar apiPrefixIndexManagement = _chrome2.default.addBasePath(_constants.API_INDEX_MANAGEMENT_BASE_PATH);\n\n// This is an Angular service, which is why we use this provider pattern\n// to access it within our React app.\nvar httpClient = void 0;\n\n// The deffered AngularJS api allows us to create deferred promise\n// to be resolved later. This allows us to cancel in flight Http Requests\n// https://docs.angularjs.org/api/ng/service/$q#the-deferred-api\nvar $q = void 0;\n\nfunction setHttpClient(client, $deffered) {\n  httpClient = client;\n  $q = $deffered;\n}\n\n// ---\n\nvar extractData = function extractData(response) {\n  return response.data;\n};\n\n/* Auto Follow Pattern */\nvar loadAutoFollowPatterns = exports.loadAutoFollowPatterns = function loadAutoFollowPatterns() {\n  return httpClient.get(apiPrefix + '/auto_follow_patterns').then(extractData);\n};\n\nvar getAutoFollowPattern = exports.getAutoFollowPattern = function getAutoFollowPattern(id) {\n  return httpClient.get(apiPrefix + '/auto_follow_patterns/' + encodeURIComponent(id)).then(extractData);\n};\n\nvar loadRemoteClusters = exports.loadRemoteClusters = function loadRemoteClusters() {\n  return httpClient.get('' + apiPrefixRemoteClusters).then(extractData);\n};\n\nvar createAutoFollowPattern = exports.createAutoFollowPattern = function createAutoFollowPattern(autoFollowPattern) {\n  return httpClient.post(apiPrefix + '/auto_follow_patterns', autoFollowPattern).then(extractData);\n};\n\nvar updateAutoFollowPattern = exports.updateAutoFollowPattern = function updateAutoFollowPattern(id, autoFollowPattern) {\n  return httpClient.put(apiPrefix + '/auto_follow_patterns/' + encodeURIComponent(id), autoFollowPattern).then(extractData);\n};\n\nvar deleteAutoFollowPattern = exports.deleteAutoFollowPattern = function deleteAutoFollowPattern(id) {\n  var ids = (0, _utils.arrify)(id).map(function (_id) {\n    return encodeURIComponent(_id);\n  }).join(',');\n\n  return httpClient.delete(apiPrefix + '/auto_follow_patterns/' + ids).then(extractData);\n};\n\n/* Follower Index */\nvar loadFollowerIndices = exports.loadFollowerIndices = function loadFollowerIndices() {\n  return httpClient.get(apiPrefix + '/follower_indices').then(extractData);\n};\n\nvar getFollowerIndex = exports.getFollowerIndex = function getFollowerIndex(id) {\n  return httpClient.get(apiPrefix + '/follower_indices/' + encodeURIComponent(id)).then(extractData);\n};\n\nvar createFollowerIndex = exports.createFollowerIndex = function createFollowerIndex(followerIndex) {\n  return httpClient.post(apiPrefix + '/follower_indices', followerIndex).then(extractData);\n};\n\nvar pauseFollowerIndex = exports.pauseFollowerIndex = function pauseFollowerIndex(id) {\n  var ids = (0, _utils.arrify)(id).map(function (_id) {\n    return encodeURIComponent(_id);\n  }).join(',');\n  return httpClient.put(apiPrefix + '/follower_indices/' + ids + '/pause').then(extractData);\n};\n\nvar resumeFollowerIndex = exports.resumeFollowerIndex = function resumeFollowerIndex(id) {\n  var ids = (0, _utils.arrify)(id).map(function (_id) {\n    return encodeURIComponent(_id);\n  }).join(',');\n  return httpClient.put(apiPrefix + '/follower_indices/' + ids + '/resume').then(extractData);\n};\n\nvar unfollowLeaderIndex = exports.unfollowLeaderIndex = function unfollowLeaderIndex(id) {\n  var ids = (0, _utils.arrify)(id).map(function (_id) {\n    return encodeURIComponent(_id);\n  }).join(',');\n  return httpClient.put(apiPrefix + '/follower_indices/' + ids + '/unfollow').then(extractData);\n};\n\nvar updateFollowerIndex = exports.updateFollowerIndex = function updateFollowerIndex(id, followerIndex) {\n  return httpClient.put(apiPrefix + '/follower_indices/' + encodeURIComponent(id), followerIndex).then(extractData);\n};\n\n/* Stats */\nvar loadAutoFollowStats = exports.loadAutoFollowStats = function loadAutoFollowStats() {\n  return httpClient.get(apiPrefix + '/stats/auto_follow').then(extractData);\n};\n\n/* Indices */\nvar canceler = null;\nvar loadIndices = exports.loadIndices = function loadIndices() {\n  if (canceler) {\n    // If there is a previous request in flight we cancel it by resolving the canceler\n    canceler.resolve();\n  }\n  canceler = $q.defer();\n  return httpClient.get(apiPrefixIndexManagement + '/indices', { timeout: canceler.promise }).then(function (response) {\n    canceler = null;\n    return extractData(response);\n  });\n};\n\nvar loadPermissions = exports.loadPermissions = function loadPermissions() {\n  return httpClient.get(apiPrefix + '/permissions').then(extractData);\n};",null]}