{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/models/action/action.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/models/action/action.js","mtime":1567631712343},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Action = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _lodash = require('lodash');\n\nvar _constants = require('plugins/watcher/../common/constants');\n\nvar _email_action = require('./email_action');\n\nvar _logging_action = require('./logging_action');\n\nvar _slack_action = require('./slack_action');\n\nvar _webhook = require('./webhook.action');\n\nvar _index = require('./index.action');\n\nvar _hipchat = require('./hipchat.action');\n\nvar _pagerduty = require('./pagerduty.action');\n\nvar _jira = require('./jira.action');\n\nvar _unknown_action = require('./unknown_action');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ActionTypes = {};\n(0, _lodash.set)(ActionTypes, _constants.ACTION_TYPES.EMAIL, _email_action.EmailAction);\n(0, _lodash.set)(ActionTypes, _constants.ACTION_TYPES.LOGGING, _logging_action.LoggingAction);\n(0, _lodash.set)(ActionTypes, _constants.ACTION_TYPES.SLACK, _slack_action.SlackAction);\n(0, _lodash.set)(ActionTypes, _constants.ACTION_TYPES.WEBHOOK, _webhook.WebhookAction);\n(0, _lodash.set)(ActionTypes, _constants.ACTION_TYPES.INDEX, _index.IndexAction);\n(0, _lodash.set)(ActionTypes, _constants.ACTION_TYPES.HIPCHAT, _hipchat.HipchatAction);\n(0, _lodash.set)(ActionTypes, _constants.ACTION_TYPES.PAGERDUTY, _pagerduty.PagerDutyAction);\n(0, _lodash.set)(ActionTypes, _constants.ACTION_TYPES.JIRA, _jira.JiraAction);\n\nvar Action = exports.Action = function () {\n  function Action() {\n    _classCallCheck(this, Action);\n  }\n\n  _createClass(Action, null, [{\n    key: 'fromUpstreamJson',\n    value: function fromUpstreamJson(upstreamAction) {\n      var type = (0, _lodash.get)(upstreamAction, 'type');\n      var ActionType = ActionTypes[type] || _unknown_action.UnknownAction;\n\n      return ActionType.fromUpstreamJson(upstreamAction);\n    }\n  }]);\n\n  return Action;\n}();\n\nAction.getActionTypes = function () {\n  return ActionTypes;\n};",null]}