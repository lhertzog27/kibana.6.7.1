{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/apm/overview/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/apm/overview/index.js","mtime":1567631712100},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _lodash = require('lodash');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _route_init = require('plugins/monitoring/lib/route_init');\n\nvar _index = require('./index.html');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _base_controller = require('../../base_controller');\n\nvar _overview = require('../../../components/apm/overview');\n\nvar _timefilter = require('ui/timefilter');\n\nvar _i18n = require('ui/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n_routes2.default.when('/apm', {\n  template: _index2.default,\n  resolve: {\n    clusters: function clusters(Private) {\n      var routeInit = Private(_route_init.routeInitProvider);\n      return routeInit();\n    }\n  },\n  controller: function (_MonitoringViewBaseCo) {\n    _inherits(controller, _MonitoringViewBaseCo);\n\n    function controller($injector, $scope) {\n      _classCallCheck(this, controller);\n\n      var $route = $injector.get('$route');\n      var globalState = $injector.get('globalState');\n      $scope.cluster = (0, _lodash.find)($route.current.locals.clusters, {\n        cluster_uuid: globalState.cluster_uuid\n      });\n\n      var _this = _possibleConstructorReturn(this, (controller.__proto__ || Object.getPrototypeOf(controller)).call(this, {\n        title: 'APM',\n        api: '../api/monitoring/v1/clusters/' + globalState.cluster_uuid + '/apm',\n        defaultData: {},\n        reactNodeId: 'apmOverviewReact',\n        $scope: $scope,\n        $injector: $injector\n      }));\n\n      function onBrush(_ref) {\n        var xaxis = _ref.xaxis;\n\n        _timefilter.timefilter.setTime({\n          from: (0, _moment2.default)(xaxis.from),\n          to: (0, _moment2.default)(xaxis.to),\n          mode: 'absolute'\n        });\n      }\n\n      $scope.$watch(function () {\n        return _this.data;\n      }, function (data) {\n        _this.renderReact(data, onBrush);\n      });\n      return _this;\n    }\n\n    _createClass(controller, [{\n      key: 'renderReact',\n      value: function renderReact(data, onBrush) {\n        var component = _react2.default.createElement(\n          _i18n.I18nContext,\n          null,\n          _react2.default.createElement(_overview.ApmOverview, _extends({}, data, {\n            onBrush: onBrush\n          }))\n        );\n        _get(controller.prototype.__proto__ || Object.getPrototypeOf(controller.prototype), 'renderReact', this).call(this, component);\n      }\n    }]);\n\n    return controller;\n  }(_base_controller.MonitoringViewBaseController)\n});",null]}