{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/xpack_main/public/services/gate_keeper.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/xpack_main/public/services/gate_keeper.js","mtime":1567631712359},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GateKeeperProvider = GateKeeperProvider;\n\nvar _notify = require('ui/notify');\n\nfunction GateKeeperProvider(kbnUrl, esDataIsTribe) {\n  var notifier = new _notify.Notifier();\n\n  return {\n    redirectAndNotifyIfTribe: function redirectAndNotifyIfTribe() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Not available when using a Tribe node';\n      var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/management';\n\n      this.assertOrRedirectToPathWithMessage(!esDataIsTribe, message, path);\n    },\n    assertOrRedirectToPathWithMessage: function assertOrRedirectToPathWithMessage(assertion, message, path) {\n      if (assertion) {\n        return;\n      }\n\n      this.redirectToPathWithMessage(path, message);\n    },\n    redirectToPathWithMessage: function redirectToPathWithMessage(path, message) {\n      notifier.error(message);\n      kbnUrl.redirect(path);\n    }\n  };\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */",null]}