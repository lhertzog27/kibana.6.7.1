{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/packages/kbn-es-query/target/kuery/node_types/function.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/packages/kbn-es-query/target/kuery/node_types/function.js","mtime":1567666388236},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n}; /*\n    * Licensed to Elasticsearch B.V. under one or more contributor\n    * license agreements. See the NOTICE file distributed with\n    * this work for additional information regarding copyright\n    * ownership. Elasticsearch B.V. licenses this file to you under\n    * the Apache License, Version 2.0 (the \"License\"); you may\n    * not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *    http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing,\n    * software distributed under the License is distributed on an\n    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    * KIND, either express or implied.  See the License for the\n    * specific language governing permissions and limitations\n    * under the License.\n    */\n\nexports.buildNode = buildNode;\nexports.buildNodeWithArgumentNodes = buildNodeWithArgumentNodes;\nexports.toElasticsearchQuery = toElasticsearchQuery;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _functions = require('../functions');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction buildNode(functionName) {\n  var kueryFunction = _functions.functions[functionName];\n\n  if (_lodash2.default.isUndefined(kueryFunction)) {\n    throw new Error('Unknown function \"' + functionName + '\"');\n  }\n\n  for (var _len = arguments.length, functionArgs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    functionArgs[_key - 1] = arguments[_key];\n  }\n\n  return _extends({\n    type: 'function',\n    function: functionName\n  }, kueryFunction.buildNodeParams.apply(kueryFunction, functionArgs));\n}\n\n// Mainly only useful in the grammar where we'll already have real argument nodes in hand\nfunction buildNodeWithArgumentNodes(functionName, argumentNodes) {\n  if (_lodash2.default.isUndefined(_functions.functions[functionName])) {\n    throw new Error('Unknown function \"' + functionName + '\"');\n  }\n\n  return {\n    type: 'function',\n    function: functionName,\n    arguments: argumentNodes\n  };\n}\n\nfunction toElasticsearchQuery(node, indexPattern) {\n  var kueryFunction = _functions.functions[node.function];\n  return kueryFunction.toElasticsearchQuery(node, indexPattern);\n}",null]}