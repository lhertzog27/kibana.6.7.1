{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/tile_map/public/coordinate_maps_visualization.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/tile_map/public/coordinate_maps_visualization.js","mtime":1567631711644},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nexports.CoordinateMapsVisualizationProvider = CoordinateMapsVisualizationProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _geohash_layer = require('./geohash_layer');\n\nvar _base_maps_visualization = require('./base_maps_visualization');\n\nvar _tooltip_formatter = require('./editors/_tooltip_formatter');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction CoordinateMapsVisualizationProvider(Notifier, Private) {\n  var BaseMapsVisualization = Private(_base_maps_visualization.BaseMapsVisualizationProvider);\n\n  var tooltipFormatter = Private(_tooltip_formatter.TileMapTooltipFormatterProvider);\n\n  var CoordinateMapsVisualization = function (_BaseMapsVisualizatio) {\n    _inherits(CoordinateMapsVisualization, _BaseMapsVisualizatio);\n\n    function CoordinateMapsVisualization(element, vis) {\n      _classCallCheck(this, CoordinateMapsVisualization);\n\n      var _this = _possibleConstructorReturn(this, (CoordinateMapsVisualization.__proto__ || Object.getPrototypeOf(CoordinateMapsVisualization)).call(this, element, vis));\n\n      _this._geohashLayer = null;\n      _this._notify = new Notifier({ location: 'Coordinate Map' });\n      return _this;\n    }\n\n    _createClass(CoordinateMapsVisualization, [{\n      key: '_makeKibanaMap',\n      value: function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n          var _this2 = this;\n\n          var updateGeohashAgg, uiState, previousPrecision, precisionChange;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _get(CoordinateMapsVisualization.prototype.__proto__ || Object.getPrototypeOf(CoordinateMapsVisualization.prototype), '_makeKibanaMap', this).call(this);\n\n                case 2:\n                  updateGeohashAgg = function updateGeohashAgg() {\n                    var geohashAgg = _this2._getGeoHashAgg();\n                    if (!geohashAgg) return;\n                    geohashAgg.params.mapBounds = _this2._kibanaMap.getBounds();\n                    geohashAgg.params.mapZoom = _this2._kibanaMap.getZoomLevel();\n                    geohashAgg.params.mapCenter = _this2._kibanaMap.getCenter();\n                  };\n\n                  updateGeohashAgg();\n\n                  uiState = this.vis.getUiState();\n\n                  uiState.on('change', function (prop) {\n                    if (prop === 'mapZoom' || prop === 'mapCenter') {\n                      updateGeohashAgg();\n                    }\n                  });\n\n                  previousPrecision = this._kibanaMap.getGeohashPrecision();\n                  precisionChange = false;\n\n                  this._kibanaMap.on('zoomchange', function () {\n                    var geohashAgg = _this2._getGeoHashAgg();\n                    precisionChange = previousPrecision !== _this2._kibanaMap.getGeohashPrecision();\n                    previousPrecision = _this2._kibanaMap.getGeohashPrecision();\n                    if (!geohashAgg) {\n                      return;\n                    }\n                    var isAutoPrecision = typeof geohashAgg.params.autoPrecision === 'boolean' ? geohashAgg.params.autoPrecision : true;\n                    if (isAutoPrecision) {\n                      geohashAgg.params.precision = previousPrecision;\n                    }\n                  });\n                  this._kibanaMap.on('zoomend', function () {\n                    var geohashAgg = _this2._getGeoHashAgg();\n                    if (!geohashAgg) {\n                      return;\n                    }\n                    var isAutoPrecision = typeof geohashAgg.params.autoPrecision === 'boolean' ? geohashAgg.params.autoPrecision : true;\n                    if (!isAutoPrecision) {\n                      return;\n                    }\n                    if (precisionChange) {\n                      _this2.vis.updateState();\n                    } else {\n                      //when we filter queries by collar\n                      _this2._updateData(_this2._geoJsonFeatureCollectionAndMeta);\n                    }\n                  });\n\n                  this._kibanaMap.addDrawControl();\n                  this._kibanaMap.on('drawCreated:rectangle', function (event) {\n                    var geohashAgg = _this2._getGeoHashAgg();\n                    _this2.addSpatialFilter(geohashAgg, 'geo_bounding_box', event.bounds);\n                  });\n                  this._kibanaMap.on('drawCreated:polygon', function (event) {\n                    var geohashAgg = _this2._getGeoHashAgg();\n                    _this2.addSpatialFilter(geohashAgg, 'geo_polygon', { points: event.points });\n                  });\n\n                case 13:\n                case 'end':\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function _makeKibanaMap() {\n          return _ref.apply(this, arguments);\n        }\n\n        return _makeKibanaMap;\n      }()\n    }, {\n      key: '_updateData',\n      value: function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(geojsonFeatureCollectionAndMeta) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!(this._getMapsParams().mapType !== 'Heatmap' && geojsonFeatureCollectionAndMeta === this._geoJsonFeatureCollectionAndMeta)) {\n                    _context2.next = 2;\n                    break;\n                  }\n\n                  return _context2.abrupt('return');\n\n                case 2:\n\n                  if (this._geohashLayer) {\n                    this._kibanaMap.removeLayer(this._geohashLayer);\n                    this._geohashLayer = null;\n                  }\n\n                  if (geojsonFeatureCollectionAndMeta) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  this._geoJsonFeatureCollectionAndMeta = null;\n                  this._kibanaMap.removeLayer(this._geohashLayer);\n                  this._geohashLayer = null;\n                  return _context2.abrupt('return');\n\n                case 8:\n\n                  this._geoJsonFeatureCollectionAndMeta = geojsonFeatureCollectionAndMeta;\n                  this._recreateGeohashLayer();\n\n                case 10:\n                case 'end':\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        function _updateData(_x) {\n          return _ref2.apply(this, arguments);\n        }\n\n        return _updateData;\n      }()\n    }, {\n      key: '_recreateGeohashLayer',\n      value: function _recreateGeohashLayer() {\n        if (this._geohashLayer) {\n          this._kibanaMap.removeLayer(this._geohashLayer);\n          this._geohashLayer = null;\n        }\n        var geohashOptions = this._getGeohashOptions();\n        this._geohashLayer = new _geohash_layer.GeohashLayer(this._geoJsonFeatureCollectionAndMeta.featureCollection, this._geoJsonFeatureCollectionAndMeta.meta, geohashOptions, this._kibanaMap.getZoomLevel(), this._kibanaMap);\n        this._kibanaMap.addLayer(this._geohashLayer);\n      }\n    }, {\n      key: '_updateParams',\n      value: function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n          var geohashOptions;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return _get(CoordinateMapsVisualization.prototype.__proto__ || Object.getPrototypeOf(CoordinateMapsVisualization.prototype), '_updateParams', this).call(this);\n\n                case 2:\n\n                  this._kibanaMap.setDesaturateBaseLayer(this.vis.params.isDesaturated);\n\n                  //avoid recreating the leaflet layer when there are option-changes that do not effect the representation\n                  //e.g. tooltip-visibility, legend position, basemap-desaturation, ...\n                  geohashOptions = this._getGeohashOptions();\n\n                  if (!this._geohashLayer || !this._geohashLayer.isReusable(geohashOptions)) {\n                    if (this._geoJsonFeatureCollectionAndMeta) {\n                      this._recreateGeohashLayer();\n                    }\n                    this._updateData(this._geoJsonFeatureCollectionAndMeta);\n                  }\n\n                case 5:\n                case 'end':\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function _updateParams() {\n          return _ref3.apply(this, arguments);\n        }\n\n        return _updateParams;\n      }()\n    }, {\n      key: '_getGeohashOptions',\n      value: function _getGeohashOptions() {\n        var _this3 = this;\n\n        var newParams = this._getMapsParams();\n        var metricAgg = this._getMetricAgg();\n        var boundTooltipFormatter = tooltipFormatter.bind(null, this.vis.getAggConfig(), metricAgg);\n\n        return {\n          label: metricAgg ? metricAgg.makeLabel() : '',\n          valueFormatter: this._geoJsonFeatureCollectionAndMeta ? metricAgg && metricAgg.fieldFormatter() : null,\n          tooltipFormatter: this._geoJsonFeatureCollectionAndMeta ? boundTooltipFormatter : null,\n          mapType: newParams.mapType,\n          isFilteredByCollar: this._isFilteredByCollar(),\n          fetchBounds: function fetchBounds() {\n            return _this3.vis.API.getGeohashBounds();\n          }, // TODO: Remove this (elastic/kibana#30593)\n          colorRamp: newParams.colorSchema,\n          heatmap: {\n            heatClusterSize: newParams.heatClusterSize\n          }\n        };\n      }\n    }, {\n      key: 'addSpatialFilter',\n      value: function addSpatialFilter(agg, filterName, filterData) {\n        if (!agg) {\n          return;\n        }\n\n        var indexPatternName = agg.getIndexPattern().id;\n        var field = agg.fieldName();\n        var filter = { meta: { negate: false, index: indexPatternName } };\n        filter[filterName] = { ignore_unmapped: true };\n        filter[filterName][field] = filterData;\n\n        this.vis.API.queryFilter.addFilters([filter]);\n\n        this.vis.updateState();\n      }\n    }, {\n      key: '_getGeoHashAgg',\n      value: function _getGeoHashAgg() {\n        return this.vis.getAggConfig().find(function (agg) {\n          return _lodash2.default.get(agg, 'type.dslName') === 'geohash_grid';\n        });\n      }\n    }, {\n      key: '_getMetricAgg',\n      value: function _getMetricAgg() {\n        return this.vis.getAggConfig().find(function (agg) {\n          return agg.type.type === 'metrics';\n        });\n      }\n    }, {\n      key: '_isFilteredByCollar',\n      value: function _isFilteredByCollar() {\n        var DEFAULT = false;\n        var agg = this._getGeoHashAgg();\n        if (agg) {\n          return _lodash2.default.get(agg, 'params.isFilteredByCollar', DEFAULT);\n        } else {\n          return DEFAULT;\n        }\n      }\n    }]);\n\n    return CoordinateMapsVisualization;\n  }(BaseMapsVisualization);\n\n  return CoordinateMapsVisualization;\n}",null]}