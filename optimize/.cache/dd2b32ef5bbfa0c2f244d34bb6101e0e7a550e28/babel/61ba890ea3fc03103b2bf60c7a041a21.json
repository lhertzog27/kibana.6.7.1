{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/no_data/controller.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/no_data/controller.js","mtime":1567631712103},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoDataController = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _elasticsearch_settings = require('plugins/monitoring/lib/elasticsearch_settings');\n\nvar _model_updater = require('./model_updater');\n\nvar _reactDom = require('react-dom');\n\nvar _components = require('plugins/monitoring/components');\n\nvar _timefilter = require('ui/timefilter');\n\nvar _i18n = require('ui/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar REACT_NODE_ID_NO_DATA = 'noDataReact';\n\nvar NoDataController = exports.NoDataController = function () {\n  function NoDataController($injector, $scope) {\n    _classCallCheck(this, NoDataController);\n\n    var $executor = $injector.get('$executor');\n    this.enableTimefilter($executor, $scope);\n    this.registerCleanup($scope, $executor);\n\n    Object.assign(this, this.getDefaultModel());\n    this.start($scope, $injector, $executor);\n  }\n\n  _createClass(NoDataController, [{\n    key: 'getDefaultModel',\n    value: function getDefaultModel() {\n      return {\n        hasData: false, // control flag to control a redirect\n        errors: [], // errors can happen from trying to check or set ES settings\n        checkMessage: null, // message to show while waiting for api response\n        isLoading: true, // flag for in-progress state of checking for no data reason\n        isCollectionEnabledUpdating: false, // flags to indicate whether to show a spinner while waiting for ajax\n        isCollectionEnabledUpdated: false,\n        isCollectionIntervalUpdating: false,\n        isCollectionIntervalUpdated: false\n      };\n    }\n\n    /*\n     * Start the page logic of observing scope changes, and changes to the data model.\n     * @param {Object} $scope Angular $scope of the view controller\n     * @param {Object} $injector Angular $injector service\n     * @param {Object} $executor Kibana $executor service for Angular\n     */\n\n  }, {\n    key: 'start',\n    value: function start($scope, $injector, $executor) {\n      var model = this;\n\n      var $http = $injector.get('$http');\n      var kbnUrl = $injector.get('kbnUrl');\n      var monitoringClusters = $injector.get('monitoringClusters');\n\n      var _ref = new _model_updater.ModelUpdater($scope, model),\n          updateModel = _ref.updateModel;\n\n      var checkers = [new _elasticsearch_settings.ClusterSettingsChecker($http), new _elasticsearch_settings.NodeSettingsChecker($http)];\n      var enabler = new _elasticsearch_settings.Enabler($http, updateModel);\n\n      $scope.$$postDigest(function () {\n        (0, _elasticsearch_settings.startChecks)(checkers, updateModel); // Start the checkers that use APIs for finding the reason for no data\n      });\n\n      $scope.$watch(function () {\n        return model;\n      }, function (props) {\n        (0, _reactDom.render)(_react2.default.createElement(\n          _i18n.I18nContext,\n          null,\n          _react2.default.createElement(_components.NoData, _extends({}, props, { enabler: enabler }))\n        ), document.getElementById(REACT_NODE_ID_NO_DATA));\n      }, true // deep watch\n      );\n\n      $scope.$watch(function () {\n        return model.hasData;\n      }, function (hasData) {\n        if (hasData) {\n          kbnUrl.redirect('/home'); // redirect if to cluster overview if data is found from background refreshes\n        }\n      });\n\n      // register the monitoringClusters service.\n      $executor.register({\n        execute: function execute() {\n          return monitoringClusters();\n        },\n        handleResponse: function handleResponse(clusters) {\n          if (clusters.length) {\n            model.hasData = true; // use the control flag because we can't redirect from inside here\n          }\n        }\n      });\n\n      $executor.start($scope); // start the executor to keep refreshing the search for data\n    }\n  }, {\n    key: 'enableTimefilter',\n    value: function enableTimefilter($executor, $scope) {\n      _timefilter.timefilter.enableTimeRangeSelector();\n      _timefilter.timefilter.enableAutoRefreshSelector();\n      $scope.$listen(_timefilter.timefilter, 'timeUpdate', function () {\n        return $executor.run();\n      }); // re-fetch if they change the time filter\n    }\n  }, {\n    key: 'registerCleanup',\n    value: function registerCleanup($scope, $executor) {\n      // destroy the executor, unmount the react component\n      $scope.$on('$destroy', function () {\n        $executor.destroy();\n        (0, _reactDom.unmountComponentAtNode)(document.getElementById(REACT_NODE_ID_NO_DATA));\n      });\n    }\n  }]);\n\n  return NoDataController;\n}();",null]}