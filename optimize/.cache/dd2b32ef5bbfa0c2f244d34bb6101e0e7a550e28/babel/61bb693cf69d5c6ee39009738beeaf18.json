{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/utils/filter_agg_types.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/utils/filter_agg_types.js","mtime":1567631712057},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterAggTypes = filterAggTypes;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction filterAggTypes(aggTypes) {\n  var filteredAggTypes = [];\n  var typeCopy = void 0;\n  _lodash2.default.each(aggTypes, function (type) {\n    type.mlName = type.name;\n    type.mlModelPlotAgg = { max: type.name, min: type.name };\n    type.isCountType = false;\n    type.isAggregatableStringType = false;\n\n    _lodash2.default.each(type.params, function (p) {\n      if (p.filterFieldTypes && typeof p.filterFieldTypes === 'string') {\n        p.filterFieldTypes = p.filterFieldTypes.replace(',date', '');\n      }\n    });\n\n    if (type.name === 'count') {\n      type.mlModelPlotAgg = { max: 'max', min: 'min' };\n      type.isCountType = true;\n      filteredAggTypes.push(type);\n\n      typeCopy = _angular2.default.copy(type);\n      typeCopy.title = _i18n.i18n.translate('xpack.ml.newJob.simple.filterAggTypes.highCountLabel', {\n        defaultMessage: 'High count'\n      });\n      typeCopy.mlName = 'high_count';\n      filteredAggTypes.push(typeCopy);\n\n      typeCopy = _angular2.default.copy(type);\n      typeCopy.title = _i18n.i18n.translate('xpack.ml.newJob.simple.filterAggTypes.lowCountLabel', {\n        defaultMessage: 'Low count'\n      });\n      typeCopy.mlName = 'low_count';\n      filteredAggTypes.push(typeCopy);\n    } else if (type.name === 'sum') {\n      filteredAggTypes.push(type);\n\n      typeCopy = _angular2.default.copy(type);\n      typeCopy.title = _i18n.i18n.translate('xpack.ml.newJob.simple.filterAggTypes.highSumLabel', {\n        defaultMessage: 'High sum'\n      });\n      typeCopy.mlName = 'high_sum';\n      filteredAggTypes.push(typeCopy);\n\n      typeCopy = _angular2.default.copy(type);\n      typeCopy.title = _i18n.i18n.translate('xpack.ml.newJob.simple.filterAggTypes.lowSumLabel', {\n        defaultMessage: 'Low sum'\n      });\n      typeCopy.mlName = 'low_sum';\n      filteredAggTypes.push(typeCopy);\n    } else if (type.name === 'avg') {\n      type.title = _i18n.i18n.translate('xpack.ml.newJob.simple.filterAggTypes.meanLabel', {\n        defaultMessage: 'Mean'\n      });\n      type.mlName = 'mean';\n      filteredAggTypes.push(type);\n\n      typeCopy = _angular2.default.copy(type);\n      typeCopy.title = _i18n.i18n.translate('xpack.ml.newJob.simple.filterAggTypes.highMeanLabel', {\n        defaultMessage: 'High mean'\n      });\n      typeCopy.mlName = 'high_mean';\n      filteredAggTypes.push(typeCopy);\n\n      typeCopy = _angular2.default.copy(type);\n      typeCopy.title = _i18n.i18n.translate('xpack.ml.newJob.simple.filterAggTypes.lowMeanLabel', {\n        defaultMessage: 'Low mean'\n      });\n      typeCopy.mlName = 'low_mean';\n      filteredAggTypes.push(typeCopy);\n    } else if (type.name === 'median') {\n      type.mlModelPlotAgg = { max: 'max', min: 'min' };\n      filteredAggTypes.push(type);\n\n      typeCopy = _angular2.default.copy(type);\n      typeCopy.title = _i18n.i18n.translate('xpack.ml.newJob.simple.filterAggTypes.highMedianLabel', {\n        defaultMessage: 'High median'\n      });\n      typeCopy.mlName = 'high_median';\n      filteredAggTypes.push(typeCopy);\n\n      typeCopy = _angular2.default.copy(type);\n      typeCopy.title = _i18n.i18n.translate('xpack.ml.newJob.simple.filterAggTypes.lowMedianLabel', {\n        defaultMessage: 'Low median'\n      });\n      typeCopy.mlName = 'low_median';\n      filteredAggTypes.push(typeCopy);\n    } else if (type.name === 'min') {\n      filteredAggTypes.push(type);\n    } else if (type.name === 'max') {\n      filteredAggTypes.push(type);\n    } else if (type.name === 'cardinality') {\n      type.title = _i18n.i18n.translate('xpack.ml.newJob.simple.filterAggTypes.distinctCountLabel', {\n        defaultMessage: 'Distinct count'\n      });\n      type.mlName = 'distinct_count';\n      type.mlModelPlotAgg = { max: 'max', min: 'min' };\n      type.isAggregatableStringType = true;\n\n      _lodash2.default.each(type.params, function (p) {\n        if (p.filterFieldTypes) {\n          p.filterFieldTypes = 'number,boolean,ip,string';\n        }\n      });\n\n      filteredAggTypes.push(type);\n    }\n  });\n  return filteredAggTypes;\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */",null]}