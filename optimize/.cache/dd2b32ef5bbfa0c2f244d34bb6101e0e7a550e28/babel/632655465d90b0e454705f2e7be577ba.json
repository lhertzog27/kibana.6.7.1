{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/replace.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/replace.js","mtime":1567631711898},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar replace = exports.replace = function replace() {\n  return {\n    name: 'replace',\n    type: 'string',\n    help: 'Use a regular expression to replace parts of a string',\n    context: {\n      types: ['string']\n    },\n    args: {\n      pattern: {\n        aliases: ['_', 'regex'],\n        types: ['string'],\n        help: 'The text or pattern of a JavaScript regular expression, eg \"[aeiou]\". You can use capture groups here.'\n      },\n      flags: {\n        aliases: ['modifiers'],\n        types: ['string'],\n        help: 'Specify flags. See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp for reference.',\n        default: 'g'\n      },\n      replacement: {\n        types: ['string'],\n        help: 'The replacement for the matching parts of string. Capture groups can be accessed by their index, eg $1',\n        default: '\"\"'\n      }\n    },\n    fn: function fn(context, args) {\n      return context.replace(new RegExp(args.pattern, args.flags), args.replacement);\n    }\n  };\n};",null]}