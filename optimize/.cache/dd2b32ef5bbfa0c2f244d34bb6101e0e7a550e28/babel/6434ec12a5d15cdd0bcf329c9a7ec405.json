{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/watcher/create_watch_view.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/watcher/create_watch_view.js","mtime":1567631712057},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CreateWatch = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp; /*\n                    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                    * or more contributor license agreements. Licensed under the Elastic License;\n                    * you may not use this file except in compliance with the Elastic License.\n                    */\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _lodash = require('lodash');\n\nvar _parse_interval = require('ui/utils/parse_interval');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _ml_api_service = require('../../../../../services/ml_api_service');\n\nvar _select_severity = require('../../../../../components/controls/select_severity/select_severity');\n\nvar _create_watch_service = require('./create_watch_service');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar STATUS = _create_watch_service.mlCreateWatchService.STATUS;\n\nvar CreateWatch = exports.CreateWatch = (0, _react3.injectI18n)((_temp = _class = function (_Component) {\n  _inherits(CreateWatch, _Component);\n\n  function CreateWatch(props) {\n    _classCallCheck(this, CreateWatch);\n\n    var _this = _possibleConstructorReturn(this, (CreateWatch.__proto__ || Object.getPrototypeOf(CreateWatch)).call(this, props));\n\n    _this.onThresholdChange = function (threshold) {\n      _this.setState({ threshold: threshold }, function () {\n        _this.config.threshold = threshold;\n      });\n    };\n\n    _this.onIntervalChange = function (e) {\n      var interval = e.target.value;\n      _this.setState({ interval: interval }, function () {\n        _this.config.interval = interval;\n      });\n    };\n\n    _this.onIncludeEmailChanged = function (e) {\n      var includeEmail = e.target.checked;\n      _this.setState({ includeEmail: includeEmail }, function () {\n        _this.config.includeEmail = includeEmail;\n      });\n    };\n\n    _this.onEmailChange = function (e) {\n      var email = e.target.value;\n      _this.setState({ email: email }, function () {\n        _this.config.email = email;\n      });\n    };\n\n    _create_watch_service.mlCreateWatchService.reset();\n    _this.config = _create_watch_service.mlCreateWatchService.config;\n\n    _this.state = {\n      jobId: _this.props.jobId,\n      bucketSpan: _this.props.bucketSpan,\n      interval: _this.config.interval,\n      threshold: _this.config.threshold,\n      includeEmail: _this.config.emailIncluded,\n      email: _this.config.email,\n      emailEnabled: false,\n      status: null,\n      watchAlreadyExists: false\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateWatch, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // make the interval 2 times the bucket span\n      if (this.state.bucketSpan) {\n        var intervalObject = (0, _parse_interval.parseInterval)(this.state.bucketSpan);\n        var bs = intervalObject.asMinutes() * 2;\n        if (bs < 1) {\n          bs = 1;\n        }\n\n        var interval = bs + 'm';\n        this.setState({ interval: interval }, function () {\n          _this2.config.interval = interval;\n        });\n      }\n\n      // load elasticsearch settings to see if email has been configured\n      _ml_api_service.ml.getNotificationSettings().then(function (resp) {\n        if ((0, _lodash.has)(resp, 'defaults.xpack.notification.email')) {\n          _this2.setState({ emailEnabled: true });\n        }\n      });\n\n      _create_watch_service.mlCreateWatchService.loadWatch(this.state.jobId).then(function () {\n        _this2.setState({ watchAlreadyExists: true });\n      }).catch(function () {\n        _this2.setState({ watchAlreadyExists: false });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var intl = this.props.intl;\n\n      var mlSelectSeverityService = {\n        state: {\n          set: function set(name, threshold) {\n            _this3.onThresholdChange(threshold);\n            return {\n              changed: function changed() {}\n            };\n          },\n          get: function get() {\n            return _this3.config.threshold;\n          }\n        }\n      };\n      var status = this.state.status;\n\n\n      if (status === null || status === STATUS.SAVING || status === STATUS.SAVE_FAILED) {\n        return _react2.default.createElement(\n          'div',\n          { className: 'create-watch' },\n          _react2.default.createElement(\n            'div',\n            { className: 'form-group form-group-flex' },\n            _react2.default.createElement(\n              'div',\n              { className: 'sub-form-group' },\n              _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                  'label',\n                  {\n                    htmlFor: 'selectInterval',\n                    className: 'euiFormLabel'\n                  },\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.ml.newJob.simple.createWatchView.timeRangeLabel',\n                    defaultMessage: 'Time range'\n                  })\n                )\n              ),\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.ml.newJob.simple.createWatchView.nowLabel',\n                defaultMessage: 'Now - {selectInterval}',\n                values: { selectInterval: _react2.default.createElement(_eui.EuiFieldText, {\n                    id: 'selectInterval',\n                    value: this.state.interval,\n                    onChange: this.onIntervalChange\n                  }) }\n              })\n            ),\n            _react2.default.createElement(\n              'div',\n              { className: 'sub-form-group' },\n              _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                  'label',\n                  {\n                    htmlFor: 'selectSeverity',\n                    className: 'euiFormLabel'\n                  },\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.ml.newJob.simple.createWatchView.severityThresholdLabel',\n                    defaultMessage: 'Severity threshold'\n                  })\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'dropdown-group' },\n                _react2.default.createElement(_select_severity.SelectSeverity, {\n                  id: 'selectSeverity',\n                  mlSelectSeverityService: mlSelectSeverityService\n                })\n              )\n            )\n          ),\n          this.state.emailEnabled && _react2.default.createElement(\n            'div',\n            { className: 'form-group' },\n            _react2.default.createElement(_eui.EuiCheckbox, {\n              id: 'includeEmail',\n              label: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.ml.newJob.simple.createWatchView.sendEmailLabel',\n                defaultMessage: 'Send email'\n              }),\n              checked: this.state.includeEmail,\n              onChange: this.onIncludeEmailChanged\n            }),\n            this.state.includeEmail && _react2.default.createElement(\n              'div',\n              { className: 'email-section' },\n              _react2.default.createElement(_eui.EuiFieldText, {\n                value: this.state.email,\n                onChange: this.onEmailChange,\n                placeholder: intl.formatMessage({\n                  id: 'xpack.ml.newJob.simple.createWatchView.emailAddressPlaceholder',\n                  defaultMessage: 'email address'\n                }),\n                'aria-label': intl.formatMessage({\n                  id: 'xpack.ml.newJob.simple.createWatchView.watchEmailAddressAriaLabel',\n                  defaultMessage: 'Watch email address'\n                })\n              })\n            )\n          ),\n          this.state.watchAlreadyExists && _react2.default.createElement(_eui.EuiCallOut, {\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.ml.newJob.simple.createWatchView.watchAlreadyExistsWarningMessage',\n              defaultMessage: 'Warning, watch ml-{jobId} already exists, clicking apply will overwrite the original.',\n              values: {\n                jobId: this.state.jobId\n              }\n            })\n          })\n        );\n      } else if (status === STATUS.SAVED) {\n        return _react2.default.createElement(\n          'div',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.ml.newJob.simple.createWatchView.successLabel',\n            defaultMessage: 'Success'\n          })\n        );\n      } else {\n        return _react2.default.createElement('div', null);\n      }\n    }\n  }]);\n\n  return CreateWatch;\n}(_react.Component), _class.propTypes = {\n  jobId: _propTypes2.default.string.isRequired,\n  bucketSpan: _propTypes2.default.string.isRequired\n}, _temp));",null]}