{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/pipeline_viewer/views/plugin_statement.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/pipeline_viewer/views/plugin_statement.js","mtime":1567631712092},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PluginStatement = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _format_number = require('../../../../lib/format_number');\n\nvar _metric = require('./metric');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction getInputStatementMetrics(_ref) {\n  var latestEventsPerSecond = _ref.latestEventsPerSecond;\n\n  return [_react2.default.createElement(_metric.Metric, {\n    key: 'eventsEmitted',\n    className: 'monPipelineViewer__metric--eventsEmitted',\n    value: (0, _format_number.formatMetric)(latestEventsPerSecond, '0.[00]a', 'e/s emitted')\n  })];\n}\n\nfunction getProcessorStatementMetrics(processorVertex) {\n  var latestMillisPerEvent = processorVertex.latestMillisPerEvent,\n      latestEventsPerSecond = processorVertex.latestEventsPerSecond,\n      percentOfTotalProcessorTime = processorVertex.percentOfTotalProcessorTime;\n\n\n  return [_react2.default.createElement(_metric.Metric, {\n    key: 'cpuMetric',\n    className: 'monPipelineViewer__metric--cpuTime',\n    warning: processorVertex.isTimeConsuming(),\n    value: (0, _format_number.formatMetric)(Math.round(percentOfTotalProcessorTime || 0), '0', '%', { prependSpace: false })\n  }), _react2.default.createElement(_metric.Metric, {\n    key: 'eventMillis',\n    className: 'monPipelineViewer__metric--eventMillis',\n    warning: processorVertex.isSlow(),\n    value: (0, _format_number.formatMetric)(latestMillisPerEvent, '0.[00]a', 'ms/e')\n  }), _react2.default.createElement(_metric.Metric, {\n    key: 'eventsReceived',\n    className: 'monPipelineViewer__metric--events',\n    value: (0, _format_number.formatMetric)(latestEventsPerSecond, '0.[00]a', 'e/s received')\n  })];\n}\n\nfunction renderPluginStatementMetrics(pluginType, vertex) {\n  return pluginType === 'input' ? getInputStatementMetrics(vertex) : getProcessorStatementMetrics(vertex);\n}\n\nfunction PluginStatementUi(_ref2) {\n  var _ref2$statement = _ref2.statement,\n      hasExplicitId = _ref2$statement.hasExplicitId,\n      id = _ref2$statement.id,\n      name = _ref2$statement.name,\n      pluginType = _ref2$statement.pluginType,\n      vertex = _ref2$statement.vertex,\n      onShowVertexDetails = _ref2.onShowVertexDetails,\n      intl = _ref2.intl;\n\n  var statementMetrics = renderPluginStatementMetrics(pluginType, vertex);\n  var onNameButtonClick = function onNameButtonClick() {\n    onShowVertexDetails(vertex);\n  };\n\n  return _react2.default.createElement(\n    _eui.EuiFlexGroup,\n    {\n      alignItems: 'center',\n      className: 'monPipelineViewer__statement',\n      gutterSize: 'none',\n      justifyContent: 'spaceBetween'\n    },\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: false },\n      _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { alignItems: 'center', gutterSize: 'xs', responsive: false },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButtonEmpty,\n            {\n              'aria-label': name,\n              className: 'monPipelineViewer__plugin',\n              color: 'primary',\n              flush: 'left',\n              iconType: 'dot',\n              onClick: onNameButtonClick,\n              size: 'xs'\n            },\n            _react2.default.createElement(\n              'span',\n              null,\n              name\n            )\n          )\n        ),\n        hasExplicitId && _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiBadge,\n            {\n              onClick: onNameButtonClick,\n              onClickAriaLabel: intl.formatMessage({\n                id: 'xpack.monitoring.logstash.pipelineStatement.viewDetailsAriaLabel', defaultMessage: 'View details'\n              })\n            },\n            id\n          )\n        )\n      )\n    ),\n    statementMetrics && _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: false },\n      _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { gutterSize: 's' },\n        statementMetrics\n      )\n    )\n  );\n}\n\nPluginStatementUi.propTypes = {\n  onShowVertexDetails: _propTypes2.default.func.isRequired,\n  statement: _propTypes2.default.shape({\n    hasExplicitId: _propTypes2.default.bool.isRequired,\n    id: _propTypes2.default.string.isRequired,\n    name: _propTypes2.default.string.isRequired,\n    pluginType: _propTypes2.default.string.isRequired,\n    vertex: _propTypes2.default.shape({\n      latestEventsPerSecond: _propTypes2.default.number.isRequired,\n      latestMillisPerEvent: _propTypes2.default.number,\n      percentOfTotalProcessorTime: _propTypes2.default.number\n    }).isRequired\n  }).isRequired\n};\n\nvar PluginStatement = exports.PluginStatement = (0, _react3.injectI18n)(PluginStatementUi);",null]}