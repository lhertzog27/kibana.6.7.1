{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/formatters/abbreviate_whole_number.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/formatters/abbreviate_whole_number.js","mtime":1567631712046},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.abbreviateWholeNumber = abbreviateWholeNumber;\n\nvar _numeral = require('@elastic/numeral');\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction abbreviateWholeNumber(value, maxDigits) {\n  var maxNumDigits = maxDigits !== undefined ? maxDigits : 3;\n  if (Math.abs(value) < Math.pow(10, maxNumDigits)) {\n    return value;\n  } else {\n    return (0, _numeral2.default)(value).format('0a');\n  }\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */\n\n/*\n * Formatter to abbreviate large whole numbers with metric prefixes.\n * Uses numeral.js to format numbers longer than the specified number of\n * digits with metric abbreviations e.g. 12345 as 12k, or 98000000 as 98m.\n*/",null]}