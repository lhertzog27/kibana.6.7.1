{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/inspector/ui/inspector_panel.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/inspector/ui/inspector_panel.js","mtime":1567631711741},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InspectorPanel = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _inspector_view_chooser = require('./inspector_view_chooser');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction hasAdaptersChanged(oldAdapters, newAdapters) {\n  return Object.keys(oldAdapters).length !== Object.keys(newAdapters).length || Object.keys(oldAdapters).some(function (key) {\n    return oldAdapters[key] !== newAdapters[key];\n  });\n}\n\nvar inspectorTitle = _i18n.i18n.translate('common.ui.inspector.title', {\n  defaultMessage: 'Inspector'\n});\n\nvar InspectorPanel = function (_Component) {\n  _inherits(InspectorPanel, _Component);\n\n  function InspectorPanel(props) {\n    _classCallCheck(this, InspectorPanel);\n\n    var _this = _possibleConstructorReturn(this, (InspectorPanel.__proto__ || Object.getPrototypeOf(InspectorPanel)).call(this, props));\n\n    _this.onViewSelected = function (view) {\n      if (view !== _this.state.selectedView) {\n        _this.setState({\n          selectedView: view\n        });\n      }\n    };\n\n    _this.state = {\n      selectedView: props.views[0],\n      views: props.views,\n      // Clone adapters array so we can validate that this prop never change\n      adapters: _extends({}, props.adapters)\n    };\n    return _this;\n  }\n\n  _createClass(InspectorPanel, [{\n    key: 'renderSelectedPanel',\n    value: function renderSelectedPanel() {\n      return _react2.default.createElement(this.state.selectedView.component, {\n        adapters: this.props.adapters,\n        title: this.props.title\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          views = _props.views,\n          title = _props.title;\n      var selectedView = this.state.selectedView;\n\n\n      return _react2.default.createElement(\n        _react2.default.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFlyoutHeader,\n          { hasBorder: true },\n          _react2.default.createElement(\n            _eui.EuiFlexGroup,\n            {\n              justifyContent: 'spaceBetween',\n              alignItems: 'center'\n            },\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: true },\n              _react2.default.createElement(\n                _eui.EuiTitle,\n                { size: 's' },\n                _react2.default.createElement(\n                  'h1',\n                  null,\n                  title\n                )\n              )\n            ),\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false },\n              _react2.default.createElement(_inspector_view_chooser.InspectorViewChooser, {\n                views: views,\n                onViewSelected: this.onViewSelected,\n                selectedView: selectedView\n              })\n            )\n          )\n        ),\n        this.renderSelectedPanel()\n      );\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (hasAdaptersChanged(prevState.adapters, nextProps.adapters)) {\n        throw new Error('Adapters are not allowed to be changed on an open InspectorPanel.');\n      }\n      var selectedViewMustChange = nextProps.views !== prevState.views && !nextProps.views.includes(prevState.selectedView);\n      return {\n        views: nextProps.views,\n        selectedView: selectedViewMustChange ? nextProps.views[0] : prevState.selectedView\n      };\n    }\n  }]);\n\n  return InspectorPanel;\n}(_react.Component);\n\nInspectorPanel.defaultProps = {\n  title: inspectorTitle\n};\n\nInspectorPanel.propTypes = {\n  adapters: _propTypes2.default.object.isRequired,\n  views: function views(props, propName, componentName) {\n    if (!Array.isArray(props[propName]) || props[propName].length < 1) {\n      throw new Error(propName + ' prop must be an array of at least one element in ' + componentName + '.');\n    }\n  },\n  title: _propTypes2.default.string\n};\n\nexports.InspectorPanel = InspectorPanel;",null]}