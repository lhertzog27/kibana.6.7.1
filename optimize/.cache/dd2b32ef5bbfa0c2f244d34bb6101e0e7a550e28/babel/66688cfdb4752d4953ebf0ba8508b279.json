{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/timepicker/time_navigation.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/timepicker/time_navigation.js","mtime":1567631711762},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.timeNavigation = undefined;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar timeNavigation = exports.timeNavigation = {\n  // travel forward in time based on the interval between from and to\n  stepForward: function stepForward(_ref) {\n    var min = _ref.min,\n        max = _ref.max;\n\n    var diff = max.diff(min);\n    return {\n      from: (0, _moment2.default)(max).add(1, 'ms').toISOString(),\n      to: (0, _moment2.default)(max).add(diff + 1, 'ms').toISOString(),\n      mode: 'absolute'\n    };\n  },\n\n\n  // travel backwards in time based on the interval between from and to\n  stepBackward: function stepBackward(_ref2) {\n    var min = _ref2.min,\n        max = _ref2.max;\n\n    var diff = max.diff(min);\n    return {\n      from: (0, _moment2.default)(min).subtract(diff + 1, 'ms').toISOString(),\n      to: (0, _moment2.default)(min).subtract(1, 'ms').toISOString(),\n      mode: 'absolute'\n    };\n  },\n\n\n  // zoom out, doubling the difference between start and end, keeping the same time range center\n  zoomOut: function zoomOut(_ref3) {\n    var min = _ref3.min,\n        max = _ref3.max;\n\n    var diff = max.diff(min);\n    return {\n      from: (0, _moment2.default)(min).subtract(diff / 2, 'ms').toISOString(),\n      to: (0, _moment2.default)(max).add(diff / 2, 'ms').toISOString(),\n      mode: 'absolute'\n    };\n  },\n\n\n  // zoom in, halving the difference between start and end, keeping the same time range center\n  zoomIn: function zoomIn(_ref4) {\n    var min = _ref4.min,\n        max = _ref4.max;\n\n    var diff = max.diff(min);\n    return {\n      from: (0, _moment2.default)(min).add(diff / 4, 'ms').toISOString(),\n      to: (0, _moment2.default)(max).subtract(diff / 4, 'ms').toISOString(),\n      mode: 'absolute'\n    };\n  }\n}; /*\n    * Licensed to Elasticsearch B.V. under one or more contributor\n    * license agreements. See the NOTICE file distributed with\n    * this work for additional information regarding copyright\n    * ownership. Elasticsearch B.V. licenses this file to you under\n    * the Apache License, Version 2.0 (the \"License\"); you may\n    * not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *    http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing,\n    * software distributed under the License is distributed on an\n    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    * KIND, either express or implied.  See the License for the\n    * specific language governing permissions and limitations\n    * under the License.\n    */",null]}