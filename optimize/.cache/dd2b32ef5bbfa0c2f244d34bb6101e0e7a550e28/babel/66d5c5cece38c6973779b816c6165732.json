{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/expression_input/function_reference.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/expression_input/function_reference.js","mtime":1567631711923},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FunctionReference = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * you may not use this file except in compliance with the Elastic License.\nn\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _markdownIt = require('markdown-it');\n\nvar _markdownIt2 = _interopRequireDefault(_markdownIt);\n\nvar _eui = require('@elastic/eui');\n\nvar _lodash = require('lodash');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar md = new _markdownIt2.default();\n\nvar FunctionReference = exports.FunctionReference = function FunctionReference(_ref) {\n  var fnDef = _ref.fnDef;\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(\n      _eui.EuiTitle,\n      { size: 'xs' },\n      _react2.default.createElement(\n        'h3',\n        null,\n        fnDef.name\n      )\n    ),\n    _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n    _react2.default.createElement(_eui.EuiText, { dangerouslySetInnerHTML: getHelp(fnDef) }),\n    _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n    _react2.default.createElement(_eui.EuiDescriptionList, {\n      type: 'inline',\n      className: 'autocompleteDescList',\n      compressed: true,\n      listItems: getFnListItems(fnDef)\n    }),\n    _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n    _react2.default.createElement(_eui.EuiBasicTable, {\n      className: 'autocompleteTable',\n      items: getArgItems(fnDef.args),\n      columns: getArgColumns()\n    })\n  );\n};\n\nfunction getHelp(fnDef) {\n  return { __html: md.render(fnDef.help) };\n}\n\nfunction getFnListItems(fnDef) {\n  var aliases = fnDef.aliases,\n      context = fnDef.context,\n      type = fnDef.type;\n\n  var items = [];\n  if (aliases.length) {\n    items.push({ title: 'Aliases', description: aliases.join(', ') });\n  }\n  if (context.types) {\n    items.push({ title: 'Accepts', description: context.types.join(', ') });\n  }\n  if (type) {\n    items.push({ title: 'Returns', description: type });\n  }\n  return items;\n}\n\nfunction getArgItems(args) {\n  return Object.entries(args).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        name = _ref3[0],\n        argDef = _ref3[1];\n\n    return {\n      argument: name + (argDef.required ? '*' : ''),\n      aliases: (argDef.aliases || []).join(', '),\n      types: (argDef.types || []).join(', '),\n      default: argDef.default || '',\n      description: argDef.help || ''\n    };\n  });\n}\n\nfunction getArgColumns() {\n  return ['argument', 'aliases', 'types', 'default', 'description'].map(function (field) {\n    var column = { field: field, name: (0, _lodash.startCase)(field), truncateText: field !== 'description' };\n    if (field === 'description') {\n      column.width = '50%';\n    }\n    return column;\n  });\n}\n\nFunctionReference.propTypes = {\n  fnDef: _propTypes2.default.object\n};",null]}