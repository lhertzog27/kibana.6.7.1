{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/charts/CustomPlot/InteractivePlot.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/charts/CustomPlot/InteractivePlot.js","mtime":1567631711867},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _plotUtils = require('./plotUtils');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _SelectionMarker = require('./SelectionMarker');\n\nvar _SelectionMarker2 = _interopRequireDefault(_SelectionMarker);\n\nvar _reactVis = require('react-vis');\n\nvar _Tooltip = require('../Tooltip');\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction getPointByX(serie, x) {\n  return serie.data.find(function (point) {\n    return point.x === x;\n  });\n}\n\nvar InteractivePlot = function (_PureComponent) {\n  _inherits(InteractivePlot, _PureComponent);\n\n  function InteractivePlot() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, InteractivePlot);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = InteractivePlot.__proto__ || Object.getPrototypeOf(InteractivePlot)).call.apply(_ref, [this].concat(args))), _this), _this.getMarkPoints = function (hoverX) {\n      return _this.props.series.filter(function (serie) {\n        return serie.data.some(function (point) {\n          return point.x === hoverX && point.y != null;\n        });\n      }).map(function (serie) {\n        var _ref2 = getPointByX(serie, hoverX) || {},\n            x = _ref2.x,\n            y = _ref2.y;\n\n        return {\n          x: x,\n          y: y,\n          color: serie.color\n        };\n      });\n    }, _this.getTooltipPoints = function (hoverX) {\n      return _this.props.series.filter(function (series) {\n        return !series.hideTooltipValue;\n      }).map(function (serie) {\n        var point = getPointByX(serie, hoverX) || {};\n        return {\n          color: serie.color,\n          value: _this.props.formatTooltipValue(point),\n          text: serie.titleShort || serie.title\n        };\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(InteractivePlot, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          plotValues = _props.plotValues,\n          hoverX = _props.hoverX,\n          series = _props.series,\n          isDrawing = _props.isDrawing,\n          selectionStart = _props.selectionStart,\n          selectionEnd = _props.selectionEnd;\n\n\n      if ((0, _lodash.isEmpty)(series)) {\n        return null;\n      }\n\n      var tooltipPoints = this.getTooltipPoints(hoverX);\n      var markPoints = this.getMarkPoints(hoverX);\n      var x = plotValues.x,\n          yTickValues = plotValues.yTickValues;\n\n      var yValueMiddle = yTickValues[1];\n\n      return _react2.default.createElement(\n        _plotUtils.SharedPlot,\n        { plotValues: plotValues },\n        hoverX && _react2.default.createElement(_Tooltip2.default, { tooltipPoints: tooltipPoints, x: hoverX, y: yValueMiddle }),\n        hoverX && _react2.default.createElement(_reactVis.MarkSeries, { data: markPoints, colorType: 'literal' }),\n        hoverX && _react2.default.createElement(_reactVis.VerticalGridLines, { tickValues: [hoverX] }),\n        isDrawing && selectionEnd !== null && _react2.default.createElement(_SelectionMarker2.default, { start: x(selectionStart), end: x(selectionEnd) })\n      );\n    }\n  }]);\n\n  return InteractivePlot;\n}(_react.PureComponent);\n\nInteractivePlot.propTypes = {\n  formatTooltipValue: _propTypes2.default.func.isRequired,\n  hoverX: _propTypes2.default.number,\n  isDrawing: _propTypes2.default.bool.isRequired,\n  plotValues: _propTypes2.default.object.isRequired,\n  selectionEnd: _propTypes2.default.number,\n  selectionStart: _propTypes2.default.number,\n  series: _propTypes2.default.array.isRequired\n};\n\nexports.default = InteractivePlot;\nmodule.exports = exports['default'];",null]}