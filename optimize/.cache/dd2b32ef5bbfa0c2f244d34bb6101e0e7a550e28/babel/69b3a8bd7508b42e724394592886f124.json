{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/components/chart_tooltip/chart_tooltip.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/components/chart_tooltip/chart_tooltip.js","mtime":1567631712336},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _modules = require('ui/modules');\n\nvar _chart_tooltip = require('./chart_tooltip.html');\n\nvar _chart_tooltip2 = _interopRequireDefault(_chart_tooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*\n                                                                                                                                                           * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                           * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                           * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                           */\n\nfunction calculateTooltipPosition(pointPosition, plotPosition, tooltipWidth, tooltipHeight) {\n\n  var tooltipPosition = {\n    top: (0, _lodash.get)(pointPosition, 'top'),\n    left: (0, _lodash.get)(pointPosition, 'left')\n  };\n\n  var tooltipPositionBottom = pointPosition.top + tooltipHeight;\n  var isTooltipBeyondPlotBottom = tooltipPositionBottom > (0, _lodash.get)(plotPosition, 'bottom');\n  if (isTooltipBeyondPlotBottom) {\n    tooltipPosition.top -= tooltipHeight;\n  }\n\n  var tooltipPositionRight = pointPosition.left + tooltipWidth;\n  var isTooltipBeyondPlotRight = tooltipPositionRight > (0, _lodash.get)(plotPosition, 'right');\n  if (isTooltipBeyondPlotRight) {\n    tooltipPosition.left -= tooltipWidth;\n  }\n\n  return tooltipPosition;\n}\n\nvar app = _modules.uiModules.get('xpack/watcher');\n\napp.directive('chartTooltip', function () {\n  return {\n    restrict: 'E',\n    replace: true,\n    transclude: true,\n    template: _chart_tooltip2.default,\n    scope: {\n      pointPosition: '=',\n      plotPosition: '='\n    },\n    controllerAs: 'chartTooltip',\n    bindToController: true,\n    link: function link($scope, element) {\n      $scope.$watchGroup(['chartTooltip.pointPosition', 'chartTooltip.plotPosition'], function () {\n        // Calculate tooltip position. This is especially necessary to make sure the tooltip\n        // stays within the bounds of the chart.\n        var pointPosition = $scope.chartTooltip.pointPosition;\n        var plotPosition = $scope.chartTooltip.plotPosition;\n\n        var tooltipMargin = parseInt(element.css('margin')); // assumption: value is in px\n        var tooltipWidth = element[0].scrollWidth + 2 * tooltipMargin;\n        var tooltipHeight = element[0].scrollHeight + 2 * tooltipMargin;\n\n        var tooltipPosition = calculateTooltipPosition(pointPosition, plotPosition, tooltipWidth, tooltipHeight);\n        $scope.chartTooltip.style = tooltipPosition;\n      });\n    },\n    controller: function ChartTooltipController() {\n      _classCallCheck(this, ChartTooltipController);\n    }\n  };\n});",null]}