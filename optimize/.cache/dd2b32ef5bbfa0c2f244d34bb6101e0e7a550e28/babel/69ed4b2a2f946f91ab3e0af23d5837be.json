{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad/index.js","mtime":1567631711928},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Workpad = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _recompose = require('recompose');\n\nvar _transitions_registry = require('../../lib/transitions_registry');\n\nvar _history = require('../../state/actions/history');\n\nvar _elements = require('../../state/actions/elements');\n\nvar _app = require('../../state/selectors/app');\n\nvar _workpad = require('../../state/selectors/workpad');\n\nvar _workpad2 = require('./workpad');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _getWorkpad = (0, _workpad.getWorkpad)(state),\n      width = _getWorkpad.width,\n      height = _getWorkpad.height,\n      workpadId = _getWorkpad.id,\n      workpadCss = _getWorkpad.css;\n\n  return {\n    pages: (0, _workpad.getPages)(state),\n    selectedPageNumber: (0, _workpad.getSelectedPageIndex)(state) + 1,\n    totalElementCount: (0, _workpad.getAllElements)(state).length,\n    width: width,\n    height: height,\n    workpadCss: workpadCss,\n    workpadId: workpadId,\n    isFullscreen: (0, _app.getFullscreen)(state)\n  };\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */\n\nvar mapDispatchToProps = {\n  undoHistory: _history.undoHistory,\n  redoHistory: _history.redoHistory,\n  fetchAllRenderables: _elements.fetchAllRenderables\n};\n\nvar Workpad = exports.Workpad = (0, _recompose.compose)(_recompose.pure, (0, _recompose.getContext)({\n  router: _propTypes2.default.object\n}), (0, _recompose.withState)('grid', 'setGrid', false), (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps), (0, _recompose.withState)('transition', 'setTransition', null), (0, _recompose.withState)('prevSelectedPageNumber', 'setPrevSelectedPageNumber', 0), (0, _recompose.withProps)(function (_ref) {\n  var selectedPageNumber = _ref.selectedPageNumber,\n      prevSelectedPageNumber = _ref.prevSelectedPageNumber,\n      transition = _ref.transition;\n\n  function getAnimation(pageNumber) {\n    if (!transition || !transition.name) {\n      return null;\n    }\n    if (![selectedPageNumber, prevSelectedPageNumber].includes(pageNumber)) {\n      return null;\n    }\n\n    var _transitionsRegistry$ = _transitions_registry.transitionsRegistry.get(transition.name),\n        enter = _transitionsRegistry$.enter,\n        exit = _transitionsRegistry$.exit;\n\n    var laterPageNumber = Math.max(selectedPageNumber, prevSelectedPageNumber);\n    var name = pageNumber === laterPageNumber ? enter : exit;\n    var direction = prevSelectedPageNumber > selectedPageNumber ? 'reverse' : 'normal';\n    return { name: name, direction: direction };\n  }\n\n  return { getAnimation: getAnimation };\n}), (0, _recompose.withHandlers)({\n  onPageChange: function onPageChange(props) {\n    return function (pageNumber) {\n      if (pageNumber === props.selectedPageNumber) {\n        return;\n      }\n      props.setPrevSelectedPageNumber(props.selectedPageNumber);\n      var transitionPage = Math.max(props.selectedPageNumber, pageNumber) - 1;\n      var transition = props.pages[transitionPage].transition;\n\n      if (transition) {\n        props.setTransition(transition);\n      }\n      props.router.navigateTo('loadWorkpad', { id: props.workpadId, page: pageNumber });\n    };\n  }\n}), (0, _recompose.withHandlers)({\n  onTransitionEnd: function onTransitionEnd(_ref2) {\n    var setTransition = _ref2.setTransition;\n    return function () {\n      return setTransition(null);\n    };\n  },\n  nextPage: function nextPage(props) {\n    return function () {\n      var pageNumber = Math.min(props.selectedPageNumber + 1, props.pages.length);\n      props.onPageChange(pageNumber);\n    };\n  },\n  previousPage: function previousPage(props) {\n    return function () {\n      var pageNumber = Math.max(1, props.selectedPageNumber - 1);\n      props.onPageChange(pageNumber);\n    };\n  }\n}))(_workpad2.Workpad);",null]}