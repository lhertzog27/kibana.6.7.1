{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/indices/indices.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/indices/indices.js","mtime":1567631712085},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ElasticsearchIndices = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _formatting = require('../../../../common/formatting');\n\nvar _format_number = require('../../../lib/format_number');\n\nvar _status_icon = require('../status_icon');\n\nvar _cluster_status = require('../cluster_status');\n\nvar _table = require('../../table');\n\nvar _eui = require('@elastic/eui');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar columns = [{\n  name: _i18n.i18n.translate('xpack.monitoring.elasticsearch.indices.nameTitle', {\n    defaultMessage: 'Name'\n  }),\n  field: 'name',\n  width: '350px',\n  sortable: true,\n  render: function render(value) {\n    return _react2.default.createElement(\n      'div',\n      { 'data-test-subj': 'name' },\n      _react2.default.createElement(\n        _eui.EuiLink,\n        {\n          href: '#/elasticsearch/indices/' + value,\n          'data-test-subj': 'indexLink-' + value\n        },\n        value\n      )\n    );\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.elasticsearch.indices.statusTitle', {\n    defaultMessage: 'Status'\n  }),\n  field: 'status',\n  sortable: true,\n  render: function render(value) {\n    return _react2.default.createElement(\n      'div',\n      { title: 'Index status: ' + value },\n      _react2.default.createElement(_status_icon.ElasticsearchStatusIcon, { status: value }),\n      '\\xA0',\n      (0, _lodash.capitalize)(value)\n    );\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.elasticsearch.indices.documentCountTitle', {\n    defaultMessage: 'Document Count'\n  }),\n  field: 'doc_count',\n  sortable: true,\n  render: function render(value) {\n    return _react2.default.createElement(\n      'div',\n      { 'data-test-subj': 'documentCount' },\n      (0, _format_number.formatMetric)(value, _formatting.LARGE_ABBREVIATED)\n    );\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.elasticsearch.indices.dataTitle', {\n    defaultMessage: 'Data'\n  }),\n  field: 'data_size',\n  sortable: true,\n  render: function render(value) {\n    return _react2.default.createElement(\n      'div',\n      { 'data-test-subj': 'dataSize' },\n      (0, _format_number.formatMetric)(value, _formatting.LARGE_BYTES)\n    );\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.elasticsearch.indices.indexRateTitle', {\n    defaultMessage: 'Index Rate'\n  }),\n  field: 'index_rate',\n  sortable: true,\n  render: function render(value) {\n    return _react2.default.createElement(\n      'div',\n      { 'data-test-subj': 'indexRate' },\n      (0, _format_number.formatMetric)(value, _formatting.LARGE_FLOAT, '/s')\n    );\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.elasticsearch.indices.searchRateTitle', {\n    defaultMessage: 'Search Rate'\n  }),\n  field: 'search_rate',\n  sortable: true,\n  render: function render(value) {\n    return _react2.default.createElement(\n      'div',\n      { 'data-test-subj': 'searchRate' },\n      (0, _format_number.formatMetric)(value, _formatting.LARGE_FLOAT, '/s')\n    );\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.elasticsearch.indices.unassignedShardsTitle', {\n    defaultMessage: 'Unassigned Shards'\n  }),\n  field: 'unassigned_shards',\n  sortable: true,\n  render: function render(value) {\n    return _react2.default.createElement(\n      'div',\n      { 'data-test-subj': 'unassignedShards' },\n      (0, _format_number.formatMetric)(value, '0')\n    );\n  }\n}];\n\nvar getNoDataMessage = function getNoDataMessage() {\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(\n      'p',\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.monitoring.elasticsearch.indices.noIndicesMatchYourSelectionDescription',\n        defaultMessage: 'There are no indices that match your selections. Try changing the time range selection.'\n      })\n    ),\n    _react2.default.createElement(\n      'p',\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.monitoring.elasticsearch.indices.howToShowSystemIndicesDescription',\n        defaultMessage: 'If you are looking for system indices (e.g., .kibana), try checking \\u2018Show system indices\\u2019.'\n      })\n    )\n  );\n};\n\nvar ElasticsearchIndicesUI = function ElasticsearchIndicesUI(_ref) {\n  var clusterStatus = _ref.clusterStatus,\n      indices = _ref.indices,\n      intl = _ref.intl,\n      sorting = _ref.sorting,\n      pagination = _ref.pagination,\n      onTableChange = _ref.onTableChange,\n      toggleShowSystemIndices = _ref.toggleShowSystemIndices,\n      showSystemIndices = _ref.showSystemIndices;\n\n  return _react2.default.createElement(\n    _eui.EuiPage,\n    null,\n    _react2.default.createElement(\n      _eui.EuiPageBody,\n      null,\n      _react2.default.createElement(\n        _eui.EuiPanel,\n        null,\n        _react2.default.createElement(_cluster_status.ClusterStatus, { stats: clusterStatus })\n      ),\n      _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n      _react2.default.createElement(\n        _eui.EuiPageContent,\n        null,\n        _react2.default.createElement(_eui.EuiSwitch, {\n          label: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.monitoring.elasticsearch.indices.systemIndicesLabel',\n            defaultMessage: 'System indices'\n          }),\n          checked: showSystemIndices,\n          onChange: function onChange(e) {\n            return toggleShowSystemIndices(e.target.checked);\n          }\n        }),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n        _react2.default.createElement(_table.EuiMonitoringTable, {\n          className: 'elasticsearchIndicesTable',\n          rows: indices,\n          columns: columns,\n          sorting: sorting,\n          pagination: pagination,\n          message: getNoDataMessage(),\n          search: {\n            box: {\n              incremental: true,\n              placeholder: intl.formatMessage({\n                id: 'xpack.monitoring.elasticsearch.indices.monitoringTablePlaceholder',\n                defaultMessage: 'Filter Indicesâ€¦'\n              })\n            }\n          },\n          onTableChange: onTableChange,\n          executeQueryOptions: {\n            defaultFields: ['name']\n          }\n        })\n      )\n    )\n  );\n};\n\nvar ElasticsearchIndices = exports.ElasticsearchIndices = (0, _react3.injectI18n)(ElasticsearchIndicesUI);",null]}