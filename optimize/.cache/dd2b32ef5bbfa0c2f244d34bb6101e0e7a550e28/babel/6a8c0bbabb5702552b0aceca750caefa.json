{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/jobs_list/components/multi_job_actions/group_selector/group_list/group_list.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/jobs_list/components/multi_job_actions/group_selector/group_list/group_list.js","mtime":1567631712051},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GroupList = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _job_group = require('../../../job_group');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction Check(_ref) {\n  var group = _ref.group,\n      selectedGroups = _ref.selectedGroups;\n\n  if (selectedGroups[group.id] !== undefined) {\n    if (selectedGroups[group.id].partial) {\n      return _react2.default.createElement(\n        'div',\n        { className: 'check selected' },\n        _react2.default.createElement(\n          'span',\n          null,\n          '\\u2014'\n        )\n      );\n    } else {\n      return _react2.default.createElement(\n        'div',\n        { className: 'check selected' },\n        _react2.default.createElement(_eui.EuiIcon, { type: 'check' })\n      );\n    }\n  } else {\n    return _react2.default.createElement('div', { className: 'check' });\n  }\n}\n\nvar GroupList = exports.GroupList = function (_Component) {\n  _inherits(GroupList, _Component);\n\n  function GroupList(props) {\n    _classCallCheck(this, GroupList);\n\n    var _this = _possibleConstructorReturn(this, (GroupList.__proto__ || Object.getPrototypeOf(GroupList)).call(this, props));\n\n    _this.selectGroup = function (group) {\n      _this.props.selectGroup(group);\n    };\n\n    _this.moveUp = function (event, index) {\n      event.preventDefault();\n      if (index < 0) {\n        return;\n      } else if (index > 0) {\n        _this.selectItems[index - 1].focus();\n      }\n    };\n\n    _this.moveDown = function (event, index) {\n      event.preventDefault();\n      if (index < _this.selectItems.length - 1) {\n        _this.selectItems[index + 1].focus();\n      }\n    };\n\n    _this.handleKeyDown = function (event, group, index) {\n      switch (event.keyCode) {\n        case _eui.keyCodes.ENTER:\n          _this.selectGroup(group);\n          break;\n        case _eui.keyCodes.SPACE:\n          _this.selectGroup(group);\n          break;\n        case _eui.keyCodes.DOWN:\n          _this.moveDown(event, index);\n          break;\n        case _eui.keyCodes.UP:\n          _this.moveUp(event, index);\n          break;\n      }\n    };\n\n    _this.setRef = function (ref, index) {\n      _this.selectItems[index] = ref;\n    };\n\n    _this.state = {\n      groups: []\n    };\n    // keep track of each of the group item refs\n    _this.selectItems = [];\n    return _this;\n  }\n\n  _createClass(GroupList, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          selectedGroups = _props.selectedGroups,\n          groups = _props.groups;\n\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'group-list' },\n        groups.map(function (g, index) {\n          return _react2.default.createElement(\n            'div',\n            {\n              tabIndex: '0',\n              onKeyDown: function onKeyDown(event) {\n                return _this2.handleKeyDown(event, g, index);\n              },\n              key: g.id,\n              className: 'group-item',\n              onClick: function onClick() {\n                return _this2.selectGroup(g);\n              },\n              ref: function ref(_ref2) {\n                return _this2.setRef(_ref2, index);\n              }\n            },\n            _react2.default.createElement(Check, { group: g, selectedGroups: selectedGroups }),\n            _react2.default.createElement(_job_group.JobGroup, { name: g.id })\n          );\n        })\n      );\n    }\n  }]);\n\n  return GroupList;\n}(_react.Component);\n\nGroupList.propTypes = {\n  selectedGroups: _propTypes2.default.object.isRequired,\n  groups: _propTypes2.default.array.isRequired,\n  selectGroup: _propTypes2.default.func.isRequired\n};",null]}