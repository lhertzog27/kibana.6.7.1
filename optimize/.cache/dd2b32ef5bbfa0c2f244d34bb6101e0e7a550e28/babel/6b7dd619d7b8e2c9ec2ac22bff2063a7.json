{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/param_types/optioned.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/param_types/optioned.js","mtime":1567631711701},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionedParamType = undefined;\n\nvar _indexed_array = require('../../indexed_array');\n\nvar _base = require('./base');\n\nvar _legacy_class = require('../../utils/legacy_class');\n\n(0, _legacy_class.createLegacyClass)(OptionedParamType).inherits(_base.BaseParamType); /*\n                                                                                        * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                        * license agreements. See the NOTICE file distributed with\n                                                                                        * this work for additional information regarding copyright\n                                                                                        * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                        * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                        * not use this file except in compliance with the License.\n                                                                                        * You may obtain a copy of the License at\n                                                                                        *\n                                                                                        *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                        *\n                                                                                        * Unless required by applicable law or agreed to in writing,\n                                                                                        * software distributed under the License is distributed on an\n                                                                                        * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                        * KIND, either express or implied.  See the License for the\n                                                                                        * specific language governing permissions and limitations\n                                                                                        * under the License.\n                                                                                        */\n\nfunction OptionedParamType(config) {\n  OptionedParamType.Super.call(this, config);\n\n  this.options = new _indexed_array.IndexedArray({\n    index: ['val'],\n    immutable: true,\n    initialSet: this.options\n  });\n}\n\n/**\n * Serialize a selection to be stored in the database\n * @param  {object} selected - the option that was selected\n * @return {any}\n */\nOptionedParamType.prototype.serialize = function (selected) {\n  return selected.val;\n};\n\n/**\n * Take a value that was serialized to the database and\n * return the option that is represents\n *\n * @param  {any} val - the value that was saved\n * @return {object}\n */\nOptionedParamType.prototype.deserialize = function (val) {\n  return this.options.byVal[val];\n};\n\n/**\n * Write the aggregation parameter.\n *\n * @param  {AggConfig} aggConfig - the entire configuration for this agg\n * @param  {object} output - the result of calling write on all of the aggregations\n *                         parameters.\n * @param  {object} output.params - the final object that will be included as the params\n *                               for the agg\n * @return {undefined}\n */\nOptionedParamType.prototype.write = function (aggConfig, output) {\n  output.params[this.name] = aggConfig.params[this.name].val;\n};\n\nexports.OptionedParamType = OptionedParamType;",null]}