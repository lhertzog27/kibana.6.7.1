{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/panel_config.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/panel_config.js","mtime":1567631711627},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _timeseries = require('./panel_config/timeseries');\n\nvar _timeseries2 = _interopRequireDefault(_timeseries);\n\nvar _metric = require('./panel_config/metric');\n\nvar _metric2 = _interopRequireDefault(_metric);\n\nvar _top_n = require('./panel_config/top_n');\n\nvar _top_n2 = _interopRequireDefault(_top_n);\n\nvar _table = require('./panel_config/table');\n\nvar _table2 = _interopRequireDefault(_table);\n\nvar _gauge = require('./panel_config/gauge');\n\nvar _gauge2 = _interopRequireDefault(_gauge);\n\nvar _markdown = require('./panel_config/markdown');\n\nvar _markdown2 = _interopRequireDefault(_markdown);\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar types = {\n  timeseries: _timeseries2.default,\n  table: _table2.default,\n  metric: _metric2.default,\n  top_n: _top_n2.default,\n  gauge: _gauge2.default,\n  markdown: _markdown2.default\n}; /*\n    * Licensed to Elasticsearch B.V. under one or more contributor\n    * license agreements. See the NOTICE file distributed with\n    * this work for additional information regarding copyright\n    * ownership. Elasticsearch B.V. licenses this file to you under\n    * the Apache License, Version 2.0 (the \"License\"); you may\n    * not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *    http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing,\n    * software distributed under the License is distributed on an\n    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    * KIND, either express or implied.  See the License for the\n    * specific language governing permissions and limitations\n    * under the License.\n    */\n\nfunction PanelConfig(props) {\n  var model = props.model;\n\n  var component = types[model.type];\n  if (component) {\n    return _react2.default.createElement(component, props);\n  }\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(_react3.FormattedMessage, {\n      id: 'tsvb.missingPanelConfigDescription',\n      defaultMessage: 'Missing panel config for \\u201C{modelType}\\u201D',\n      values: { modelType: model.type }\n    })\n  );\n}\n\nPanelConfig.propTypes = {\n  fields: _propTypes2.default.object,\n  model: _propTypes2.default.object,\n  onChange: _propTypes2.default.func,\n  dateFormat: _propTypes2.default.string,\n  visData$: _propTypes2.default.object\n};\n\nexports.default = PanelConfig;\nmodule.exports = exports['default'];",null]}