{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_detail/components/watch_history_table/watch_history_table.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_detail/components/watch_history_table/watch_history_table.js","mtime":1567631712347},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nrequire('ui/filters/moment');\n\nvar _modules = require('ui/modules');\n\nvar _watch_history_table = require('./watch_history_table.html');\n\nvar _watch_history_table2 = _interopRequireDefault(_watch_history_table);\n\nrequire('plugins/watcher/components/watch_state_icon');\n\nvar _lodash = require('lodash');\n\nvar _constants = require('plugins/watcher/../common/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*\n                                                                                                                                                           * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                           * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                           * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                           */\n\nvar app = _modules.uiModules.get('xpack/watcher');\n\napp.directive('watchHistoryTable', function ($injector) {\n  var $timeout = $injector.get('$timeout');\n\n  return {\n    restrict: 'E',\n    replace: true,\n    template: _watch_history_table2.default,\n    scope: {\n      watch: '=xpackWatch', // Property names differ due to https://git.io/vSWXV\n      historyItems: '=',\n      sortField: '=',\n      sortReverse: '=',\n      onSortChange: '='\n    },\n    bindToController: true,\n    controllerAs: 'watchHistoryTable',\n    controller: function WatchHistoryTableController($scope) {\n      var _this = this;\n\n      _classCallCheck(this, WatchHistoryTableController);\n\n      $scope.$watch('watchHistoryTable.historyItems', function (historyItems) {\n        var previousItems = _this.items;\n        var isInitialLoad = (0, _lodash.isEmpty)(previousItems);\n\n        _this.items = historyItems.map(function (historyItem) {\n          var matchedItem = (0, _lodash.find)(previousItems, function (previousItem) {\n            return previousItem.historyItem.id === historyItem.id;\n          });\n          var isNew = !isInitialLoad && Boolean(!matchedItem);\n          return { historyItem: historyItem, isNew: isNew };\n        });\n\n        $timeout(function () {\n          _this.items.forEach(function (item) {\n            item.isNew = false;\n          });\n        }, _constants.LISTS.NEW_ITEMS_HIGHLIGHT_DURATION);\n      });\n    }\n  };\n});",null]}