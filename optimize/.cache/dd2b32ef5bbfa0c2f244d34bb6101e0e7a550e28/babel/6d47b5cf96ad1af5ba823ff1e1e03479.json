{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/kibana/instances/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/kibana/instances/index.js","mtime":1567631712102},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _i18n = require('ui/i18n');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _route_init = require('plugins/monitoring/lib/route_init');\n\nvar _ = require('../../');\n\nvar _get_page_data = require('./get_page_data');\n\nvar _index = require('./index.html');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _eui = require('@elastic/eui');\n\nvar _cluster_status = require('../../../components/kibana/cluster_status');\n\nvar _table = require('../../../components/table');\n\nvar _status_icon = require('../../../components/kibana/status_icon');\n\nvar _format_number = require('../../../lib/format_number');\n\nvar _i18n2 = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar getColumns = function getColumns(kbnUrl, scope) {\n  return [{\n    name: _i18n2.i18n.translate('xpack.monitoring.kibana.listing.nameColumnTitle', {\n      defaultMessage: 'Name'\n    }),\n    field: 'name',\n    render: function render(name, kibana) {\n      return _react2.default.createElement(\n        _eui.EuiLink,\n        {\n          onClick: function onClick() {\n            scope.$evalAsync(function () {\n              kbnUrl.changePath('/kibana/instances/' + kibana.kibana.uuid);\n            });\n          },\n          'data-test-subj': 'kibanaLink-' + name\n        },\n        name\n      );\n    }\n  }, {\n    name: _i18n2.i18n.translate('xpack.monitoring.kibana.listing.statusColumnTitle', {\n      defaultMessage: 'Status'\n    }),\n    field: 'status',\n    render: function render(status, kibana) {\n      return _react2.default.createElement(\n        'div',\n        {\n          title: 'Instance status: ' + status,\n          className: 'monTableCell__status'\n        },\n        _react2.default.createElement(_status_icon.KibanaStatusIcon, { status: status, availability: kibana.availability }),\n        '\\xA0',\n        !kibana.availability ? _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.monitoring.kibana.listing.instanceStatus.offlineLabel',\n          defaultMessage: 'Offline'\n        }) : (0, _lodash.capitalize)(status)\n      );\n    }\n  }, {\n    name: _i18n2.i18n.translate('xpack.monitoring.kibana.listing.loadAverageColumnTitle', {\n      defaultMessage: 'Load Average'\n    }),\n    field: 'os.load.1m',\n    render: function render(value) {\n      return _react2.default.createElement(\n        'span',\n        null,\n        (0, _format_number.formatMetric)(value, '0.00')\n      );\n    }\n  }, {\n    name: _i18n2.i18n.translate('xpack.monitoring.kibana.listing.memorySizeColumnTitle', {\n      defaultMessage: 'Memory Size'\n    }),\n    field: 'process.memory.resident_set_size_in_bytes',\n    render: function render(value) {\n      return _react2.default.createElement(\n        'span',\n        null,\n        (0, _format_number.formatNumber)(value, 'byte')\n      );\n    }\n  }, {\n    name: _i18n2.i18n.translate('xpack.monitoring.kibana.listing.requestsColumnTitle', {\n      defaultMessage: 'Requests'\n    }),\n    field: 'requests.total',\n    render: function render(value) {\n      return _react2.default.createElement(\n        'span',\n        null,\n        (0, _format_number.formatNumber)(value, 'int_commas')\n      );\n    }\n  }, {\n    name: _i18n2.i18n.translate('xpack.monitoring.kibana.listing.responseTimeColumnTitle', {\n      defaultMessage: 'Response Times'\n    }),\n    field: 'response_times.average',\n    render: function render(value, kibana) {\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          'div',\n          { className: 'monTableCell__splitNumber' },\n          value && (0, _format_number.formatNumber)(value, 'int_commas') + ' ms avg'\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'monTableCell__splitNumber' },\n          (0, _format_number.formatNumber)(kibana.response_times.max, 'int_commas'),\n          ' ms max'\n        )\n      );\n    }\n  }];\n};\n\n_routes2.default.when('/kibana/instances', {\n  template: _index2.default,\n  resolve: {\n    clusters: function clusters(Private) {\n      var routeInit = Private(_route_init.routeInitProvider);\n      return routeInit();\n    },\n\n    pageData: _get_page_data.getPageData\n  },\n  controllerAs: 'kibanas',\n  controller: function (_MonitoringViewBaseEu) {\n    _inherits(KibanaInstancesList, _MonitoringViewBaseEu);\n\n    function KibanaInstancesList($injector, $scope) {\n      _classCallCheck(this, KibanaInstancesList);\n\n      var _this = _possibleConstructorReturn(this, (KibanaInstancesList.__proto__ || Object.getPrototypeOf(KibanaInstancesList)).call(this, {\n        title: 'Kibana Instances',\n        storageKey: 'kibana.instances',\n        getPageData: _get_page_data.getPageData,\n        reactNodeId: 'monitoringKibanaInstancesApp',\n        $scope: $scope,\n        $injector: $injector\n      }));\n\n      var kbnUrl = $injector.get('kbnUrl');\n\n      $scope.$watch(function () {\n        return _this.data;\n      }, function (data) {\n        if (!data || !data.kibanas) {\n          return;\n        }\n\n        var dataFlattened = data.kibanas.map(function (item) {\n          return _extends({}, item, {\n            name: item.kibana.name,\n            status: item.kibana.status\n          });\n        });\n\n        _this.renderReact(_react2.default.createElement(\n          _i18n.I18nContext,\n          null,\n          _react2.default.createElement(\n            _eui.EuiPage,\n            null,\n            _react2.default.createElement(\n              _eui.EuiPageBody,\n              null,\n              _react2.default.createElement(\n                _eui.EuiPanel,\n                null,\n                _react2.default.createElement(_cluster_status.ClusterStatus, { stats: $scope.pageData.clusterStatus })\n              ),\n              _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n              _react2.default.createElement(\n                _eui.EuiPageContent,\n                null,\n                _react2.default.createElement(_table.EuiMonitoringTable, {\n                  className: 'kibanaInstancesTable',\n                  rows: dataFlattened,\n                  columns: getColumns(kbnUrl, $scope),\n                  sorting: _this.sorting,\n                  pagination: _this.pagination,\n                  search: {\n                    box: {\n                      incremental: true,\n                      placeholder: _i18n2.i18n.translate('xpack.monitoring.kibana.listing.filterInstancesPlaceholder', {\n                        defaultMessage: 'Filter Instances…'\n                      })\n                    }\n                  },\n                  onTableChange: _this.onTableChange,\n                  executeQueryOptions: {\n                    defaultFields: ['name']\n                  }\n                })\n              )\n            )\n          )\n        ));\n      });\n      return _this;\n    }\n\n    return KibanaInstancesList;\n  }(_.MonitoringViewBaseEuiTableController)\n});",null]}