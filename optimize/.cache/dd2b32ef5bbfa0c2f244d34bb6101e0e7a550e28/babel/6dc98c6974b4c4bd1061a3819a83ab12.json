{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/font_picker/font_picker.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/font_picker/font_picker.js","mtime":1567631711923},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontPicker = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _fonts = require('../../../common/lib/fonts');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar FontPicker = exports.FontPicker = function FontPicker(_ref) {\n  var onSelect = _ref.onSelect,\n      value = _ref.value;\n\n  if (value && !_fonts.fonts.find(function (font) {\n    return font.value === value;\n  })) {\n    var label = (value.indexOf(',') >= 0 ? value.split(',')[0] : value).replace(/['\"]/g, '');\n    _fonts.fonts.push({ value: value, label: label });\n    _fonts.fonts.sort(function (a, b) {\n      return a.label.localeCompare(b.label);\n    });\n  }\n\n  return _react2.default.createElement(_eui.EuiSuperSelect, {\n    compressed: true,\n    options: _fonts.fonts.map(function (_ref2) {\n      var value = _ref2.value,\n          label = _ref2.label;\n      return {\n        value: value,\n        inputDisplay: _react2.default.createElement(\n          'div',\n          { style: { fontFamily: value } },\n          label\n        )\n      };\n    }),\n    valueOfSelected: value,\n    onChange: function onChange(value) {\n      return onSelect(value);\n    }\n  });\n};\n\nFontPicker.propTypes = {\n  value: _propTypes2.default.string,\n  onSelect: _propTypes2.default.func\n};",null]}