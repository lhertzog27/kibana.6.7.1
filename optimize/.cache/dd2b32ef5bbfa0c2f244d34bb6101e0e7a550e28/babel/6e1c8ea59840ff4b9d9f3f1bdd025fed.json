{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/edit_index_pattern/indexed_fields_table/indexed_fields_table.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/edit_index_pattern/indexed_fields_table/indexed_fields_table.js","mtime":1567631691244},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexedFieldsTable = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reselect = require('reselect');\n\nvar _table = require('./components/table');\n\nvar _lib = require('./lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar IndexedFieldsTable = exports.IndexedFieldsTable = function (_Component) {\n  _inherits(IndexedFieldsTable, _Component);\n\n  function IndexedFieldsTable(props) {\n    _classCallCheck(this, IndexedFieldsTable);\n\n    var _this = _possibleConstructorReturn(this, (IndexedFieldsTable.__proto__ || Object.getPrototypeOf(IndexedFieldsTable)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.state = {\n      fields: _this.mapFields(_this.props.fields)\n    };\n    return _this;\n  }\n\n  _createClass(IndexedFieldsTable, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.fields !== this.props.fields) {\n        this.setState({\n          fields: this.mapFields(nextProps.fields)\n        });\n      }\n    }\n  }, {\n    key: 'mapFields',\n    value: function mapFields(fields) {\n      var _props = this.props,\n          indexPattern = _props.indexPattern,\n          fieldWildcardMatcher = _props.fieldWildcardMatcher,\n          helpers = _props.helpers;\n\n      var sourceFilters = indexPattern.sourceFilters && indexPattern.sourceFilters.map(function (f) {\n        return f.value;\n      });\n      var fieldWildcardMatch = fieldWildcardMatcher(sourceFilters || []);\n\n      return fields && fields.map(function (field) {\n        return _extends({}, field, {\n          displayName: field.displayName,\n          routes: field.routes,\n          indexPattern: field.indexPattern,\n          format: (0, _lib.getFieldFormat)(indexPattern, field.name),\n          excluded: fieldWildcardMatch ? fieldWildcardMatch(field.name) : false,\n          info: helpers.getFieldInfo && helpers.getFieldInfo(indexPattern, field.name)\n        });\n      }) || [];\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var indexPattern = this.props.indexPattern;\n\n\n      var fields = this.getFilteredFields(this.state, this.props);\n\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(_table.Table, {\n          indexPattern: indexPattern,\n          items: fields,\n          editField: function editField(field) {\n            return _this2.props.helpers.redirectToRoute(field, 'edit');\n          }\n        })\n      );\n    }\n  }]);\n\n  return IndexedFieldsTable;\n}(_react.Component);\n\nIndexedFieldsTable.propTypes = {\n  fields: _propTypes2.default.array.isRequired,\n  indexPattern: _propTypes2.default.object.isRequired,\n  fieldFilter: _propTypes2.default.string,\n  indexedFieldTypeFilter: _propTypes2.default.string,\n  helpers: _propTypes2.default.shape({\n    redirectToRoute: _propTypes2.default.func.isRequired,\n    getFieldInfo: _propTypes2.default.func\n  }),\n  fieldWildcardMatcher: _propTypes2.default.func.isRequired\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  this.getFilteredFields = (0, _reselect.createSelector)(function (state) {\n    return state.fields;\n  }, function (state, props) {\n    return props.fieldFilter;\n  }, function (state, props) {\n    return props.indexedFieldTypeFilter;\n  }, function (fields, fieldFilter, indexedFieldTypeFilter) {\n    if (fieldFilter) {\n      var normalizedFieldFilter = fieldFilter.toLowerCase();\n      fields = fields.filter(function (field) {\n        return field.name.toLowerCase().includes(normalizedFieldFilter);\n      });\n    }\n\n    if (indexedFieldTypeFilter) {\n      fields = fields.filter(function (field) {\n        return field.type === indexedFieldTypeFilter;\n      });\n    }\n\n    return fields;\n  });\n};",null]}