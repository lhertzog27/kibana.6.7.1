{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/services/auto_follow_pattern.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/services/auto_follow_pattern.js","mtime":1567631711954},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrefixSuffixFromFollowPattern = exports.getPreviewIndicesFromAutoFollowPattern = undefined;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getFollowPattern = function getFollowPattern() {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var suffix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var template = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '{{leader_index}}';\n  return {\n    followPattern: {\n      prefix: prefix,\n      suffix: suffix,\n      template: template\n    },\n    toString: prefix + template + suffix\n  };\n};\n\n/**\n * Generate an array of indices preview that would be generated for an auto-follow pattern.\n * It concatenates the prefix + the leader index pattern populated with values + the suffix\n *\n * Example of the array returned:\n * [\"prefix_leader-index-0_suffix\", \"prefix_leader-index-1_suffix\", \"prefix_leader-index-2_suffix\"]\n */\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar getPreviewIndicesFromAutoFollowPattern = exports.getPreviewIndicesFromAutoFollowPattern = function getPreviewIndicesFromAutoFollowPattern(_ref) {\n  var prefix = _ref.prefix,\n      suffix = _ref.suffix,\n      leaderIndexPatterns = _ref.leaderIndexPatterns,\n      _ref$limit = _ref.limit,\n      limit = _ref$limit === undefined ? 5 : _ref$limit,\n      _ref$wildcardPlaceHol = _ref.wildcardPlaceHolders,\n      wildcardPlaceHolders = _ref$wildcardPlaceHol === undefined ? [(0, _moment2.default)().format('YYYY-MM-DD'), (0, _moment2.default)().add(1, 'days').format('YYYY-MM-DD'), (0, _moment2.default)().add(2, 'days').format('YYYY-MM-DD')] : _ref$wildcardPlaceHol;\n\n  var indicesPreview = [];\n  var indexPreview = void 0;\n  var leaderIndexTemplate = void 0;\n\n  leaderIndexPatterns.forEach(function (leaderIndexPattern) {\n    wildcardPlaceHolders.forEach(function (placeHolder) {\n      leaderIndexTemplate = leaderIndexPattern.replace(/\\*/g, placeHolder);\n      indexPreview = getFollowPattern(prefix, suffix, leaderIndexTemplate);\n\n      if (!indicesPreview.some(function (_indexPreview) {\n        return indexPreview.toString === _indexPreview.toString;\n      })) {\n        indicesPreview.push(indexPreview);\n      }\n    });\n  });\n\n  return {\n    indicesPreview: indicesPreview.slice(0, limit),\n    hasMore: indicesPreview.length > limit\n  };\n};\n\nvar getPrefixSuffixFromFollowPattern = exports.getPrefixSuffixFromFollowPattern = function getPrefixSuffixFromFollowPattern(followPattern) {\n  var followIndexPatternPrefix = void 0;\n  var followIndexPatternSuffix = void 0;\n\n  var template = '{{leader_index}}';\n  var index = followPattern.indexOf(template);\n\n  if (index >= 0) {\n    followIndexPatternPrefix = followPattern.slice(0, index);\n    followIndexPatternSuffix = followPattern.slice(index + template.length);\n  }\n\n  return { followIndexPatternPrefix: followIndexPatternPrefix, followIndexPatternSuffix: followIndexPatternSuffix };\n};",null]}