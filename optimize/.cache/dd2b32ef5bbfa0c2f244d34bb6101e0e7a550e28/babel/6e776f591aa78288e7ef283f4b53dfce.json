{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/color_rules.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/color_rules.js","mtime":1567631711611},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _add_delete_buttons = require('./add_delete_buttons');\n\nvar _add_delete_buttons2 = _interopRequireDefault(_add_delete_buttons);\n\nvar _collection_actions = require('./lib/collection_actions');\n\nvar collectionActions = _interopRequireWildcard(_collection_actions);\n\nvar _color_picker = require('./color_picker');\n\nvar _color_picker2 = _interopRequireDefault(_color_picker);\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar ColorRules = function (_Component) {\n  _inherits(ColorRules, _Component);\n\n  function ColorRules(props) {\n    _classCallCheck(this, ColorRules);\n\n    var _this = _possibleConstructorReturn(this, (ColorRules.__proto__ || Object.getPrototypeOf(ColorRules)).call(this, props));\n\n    _this.renderRow = _this.renderRow.bind(_this);\n    return _this;\n  }\n\n  _createClass(ColorRules, [{\n    key: 'handleChange',\n    value: function handleChange(item, name) {\n      var _this2 = this;\n\n      var cast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : String;\n\n      return function (e) {\n        var handleChange = collectionActions.handleChange.bind(null, _this2.props);\n        var part = {};\n        part[name] = cast(_lodash2.default.get(e, '[0].value', _lodash2.default.get(e, 'target.value')));\n        if (part[name] === 'undefined') part[name] = undefined;\n        if (part[name] === NaN) part[name] = undefined;\n        handleChange(_lodash2.default.assign({}, item, part));\n      };\n    }\n  }, {\n    key: 'renderRow',\n    value: function renderRow(row, i, items) {\n      var _this3 = this;\n\n      var defaults = { value: 0 };\n      var model = _extends({}, defaults, row);\n      var handleAdd = collectionActions.handleAdd.bind(null, this.props);\n      var handleDelete = collectionActions.handleDelete.bind(null, this.props, model);\n      var intl = this.props.intl;\n\n      var operatorOptions = [{ label: intl.formatMessage({ id: 'tsvb.colorRules.greaterThanLabel', defaultMessage: '> greater than' }), value: 'gt' }, {\n        label: intl.formatMessage({ id: 'tsvb.colorRules.greaterThanOrEqualLabel', defaultMessage: '>= greater than or equal' }),\n        value: 'gte'\n      }, { label: intl.formatMessage({ id: 'tsvb.colorRules.lessThanLabel', defaultMessage: '< less than' }), value: 'lt' }, { label: intl.formatMessage({ id: 'tsvb.colorRules.lessThanOrEqualLabel', defaultMessage: '<= less than or equal' }), value: 'lte' }];\n      var handleColorChange = function handleColorChange(part) {\n        var handleChange = collectionActions.handleChange.bind(null, _this3.props);\n        handleChange(_lodash2.default.assign({}, model, part));\n      };\n      var htmlId = (0, _eui.htmlIdGenerator)(model.id);\n      var selectedOperatorOption = operatorOptions.find(function (option) {\n        return model.operator === option.value;\n      });\n\n      var labelStyle = { marginBottom: 0 };\n\n      var secondary = void 0;\n      if (!this.props.hideSecondary) {\n        secondary = _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiFormLabel,\n              { style: labelStyle },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'tsvb.colorRules.setSecondaryColorLabel',\n                defaultMessage: 'and {secondaryName} to',\n                values: { secondaryName: this.props.secondaryName },\n                description: 'Part of a larger string: Set {primaryName} to {color} and {secondaryName} to {color} if metric is {greaterOrLessThan} {value}.'\n              })\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(_color_picker2.default, {\n              onChange: handleColorChange,\n              name: this.props.secondaryVarName,\n              value: model[this.props.secondaryVarName]\n            })\n          )\n        );\n      }\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { wrap: true, responsive: false, gutterSize: 's', key: model.id, alignItems: 'center', className: 'tvbColorRules__rule' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiFormLabel,\n            { style: labelStyle },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.colorRules.setPrimaryColorLabel',\n              defaultMessage: 'Set {primaryName} to',\n              values: { primaryName: this.props.primaryName },\n              description: 'Part of a larger string: Set {primaryName} to {color} and {secondaryName} to {color} if metric is {greaterOrLessThan} {value}.'\n            })\n          )\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(_color_picker2.default, {\n            onChange: handleColorChange,\n            name: this.props.primaryVarName,\n            value: model[this.props.primaryVarName]\n          })\n        ),\n        secondary,\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiFormLabel,\n            { style: labelStyle, htmlFor: htmlId('ifMetricIs') },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'tsvb.colorRules.ifMetricIsLabel',\n              defaultMessage: 'if metric is',\n              description: 'Part of a larger string: Set {primaryName} to {color} and {secondaryName} to {color} if metric is {greaterOrLessThan} {value}.'\n            })\n          )\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          null,\n          _react2.default.createElement(_eui.EuiComboBox, {\n            id: htmlId('ifMetricIs'),\n            options: operatorOptions,\n            selectedOptions: selectedOperatorOption ? [selectedOperatorOption] : [],\n            onChange: this.handleChange(model, 'operator'),\n            singleSelection: true,\n            fullWidth: true\n          })\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          null,\n          _react2.default.createElement(_eui.EuiFieldNumber, {\n            'aria-label': intl.formatMessage({ id: 'tsvb.colorRules.valueAriaLabel', defaultMessage: 'Value' }),\n            value: model.value,\n            onChange: this.handleChange(model, 'value', Number),\n            fullWidth: true\n          })\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(_add_delete_buttons2.default, {\n            onAdd: handleAdd,\n            onDelete: handleDelete,\n            disableDelete: items.length < 2,\n            responsive: false\n          })\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          model = _props.model,\n          name = _props.name;\n\n      if (!model[name]) return _react2.default.createElement('div', null);\n      var rows = model[name].map(this.renderRow);\n      return _react2.default.createElement(\n        'div',\n        null,\n        rows\n      );\n    }\n  }]);\n\n  return ColorRules;\n}(_react.Component);\n\nColorRules.defaultProps = {\n  name: 'color_rules',\n  primaryName: _i18n.i18n.translate('tsvb.colorRules.defaultPrimaryNameLabel', { defaultMessage: 'background' }),\n  primaryVarName: 'background_color',\n  secondaryName: _i18n.i18n.translate('tsvb.colorRules.defaultSecondaryNameLabel', { defaultMessage: 'text' }),\n  secondaryVarName: 'color',\n  hideSecondary: false\n};\n\nColorRules.propTypes = {\n  name: _propTypes2.default.string,\n  model: _propTypes2.default.object,\n  onChange: _propTypes2.default.func,\n  primaryName: _propTypes2.default.string,\n  primaryVarName: _propTypes2.default.string,\n  secondaryName: _propTypes2.default.string,\n  secondaryVarName: _propTypes2.default.string,\n  hideSecondary: _propTypes2.default.bool\n};\n\nexports.default = (0, _react3.injectI18n)(ColorRules);\nmodule.exports = exports['default'];",null]}