{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/arg_form/arg_form.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/arg_form/arg_form.js","mtime":1567631711918},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArgForm = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _recompose = require('recompose');\n\nvar _error_boundary = require('../enhance/error_boundary');\n\nvar _arg_simple_form = require('./arg_simple_form');\n\nvar _arg_template_form = require('./arg_template_form');\n\nvar _simple_failure = require('./simple_failure');\n\nvar _advanced_failure = require('./advanced_failure');\n\nvar _arg_label = require('./arg_label');\n\nvar _pending_arg_value = require('./pending_arg_value');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar branches = [\n// rendered argType args should be resolved, but are not\n(0, _recompose.branch)(function (_ref) {\n  var argTypeInstance = _ref.argTypeInstance,\n      resolvedArgValue = _ref.resolvedArgValue;\n  var argType = argTypeInstance.argType;\n\n  // arg does not need to be resolved, no need to branch\n\n  if (!argType.resolveArgValue) {\n    return false;\n  }\n\n  // arg needs to be resolved, render pending if the value is not defined\n  return typeof resolvedArgValue === 'undefined';\n}, (0, _recompose.renderComponent)(_pending_arg_value.PendingArgValue))];\n\n// This is what is being generated by render() from the Arg class. It is called in FunctionForm\n\nvar ArgFormComponent = function (_PureComponent) {\n  _inherits(ArgFormComponent, _PureComponent);\n\n  function ArgFormComponent() {\n    _classCallCheck(this, ArgFormComponent);\n\n    return _possibleConstructorReturn(this, (ArgFormComponent.__proto__ || Object.getPrototypeOf(ArgFormComponent)).apply(this, arguments));\n  }\n\n  _createClass(ArgFormComponent, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // keep track of whether or not the component is mounted, to prevent rogue setState calls\n      this._isMounted = true;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          argId = _props.argId,\n          argTypeInstance = _props.argTypeInstance,\n          templateProps = _props.templateProps,\n          valueMissing = _props.valueMissing,\n          label = _props.label,\n          _setLabel = _props.setLabel,\n          onValueRemove = _props.onValueRemove,\n          workpad = _props.workpad,\n          assets = _props.assets,\n          renderError = _props.renderError,\n          setRenderError = _props.setRenderError,\n          resolvedArgValue = _props.resolvedArgValue;\n\n\n      return _react2.default.createElement(\n        _error_boundary.ErrorBoundary,\n        null,\n        function (_ref2) {\n          var error = _ref2.error,\n              _resetErrorState = _ref2.resetErrorState;\n          var _argTypeInstance$argT = argTypeInstance.argType,\n              template = _argTypeInstance$argT.template,\n              simpleTemplate = _argTypeInstance$argT.simpleTemplate;\n\n          var hasError = Boolean(error) || renderError;\n\n          var argumentProps = _extends({}, templateProps, {\n            resolvedArgValue: resolvedArgValue,\n            defaultValue: argTypeInstance.default,\n\n            renderError: function renderError() {\n              // TODO: don't do this\n              // It's an ugly hack to avoid React's render cycle and ensure the error happens on the next tick\n              // This is important; Otherwise we end up updating state in the middle of a render cycle\n              Promise.resolve().then(function () {\n                // Provide templates with a renderError method, and wrap the error in a known error type\n                // to stop Kibana's window.error from being called\n                // see window_error_handler.js for details,\n                _this2._isMounted && setRenderError(true);\n              });\n            },\n            error: hasError,\n            setLabel: function setLabel(label) {\n              return _this2._isMounted && _setLabel(label);\n            },\n            resetErrorState: function resetErrorState() {\n              _resetErrorState();\n              _this2._isMounted && setRenderError(false);\n            },\n            label: label,\n            workpad: workpad,\n            argId: argId,\n            assets: assets\n          });\n\n          var expandableLabel = Boolean(hasError || template);\n\n          var simpleArg = _react2.default.createElement(\n            _arg_simple_form.ArgSimpleForm,\n            {\n              required: argTypeInstance.required,\n              valueMissing: valueMissing,\n              onRemove: onValueRemove\n            },\n            _react2.default.createElement(_arg_template_form.ArgTemplateForm, {\n              template: simpleTemplate,\n              errorTemplate: _simple_failure.SimpleFailure,\n              error: hasError,\n              argumentProps: argumentProps\n            })\n          );\n\n          var extendedArg = _react2.default.createElement(\n            'div',\n            { className: 'canvasArg--controls' },\n            _react2.default.createElement(_arg_template_form.ArgTemplateForm, {\n              template: template,\n              errorTemplate: _advanced_failure.AdvancedFailure,\n              error: hasError,\n              argumentProps: argumentProps\n            })\n          );\n\n          return _react2.default.createElement(\n            'div',\n            { className: 'canvasArg ' + (expandableLabel ? 'canvasArg--expandable' : null) },\n            _react2.default.createElement(\n              _arg_label.ArgLabel,\n              {\n                className: 'resolved',\n                argId: argId,\n                label: label,\n                help: argTypeInstance.help,\n                expandable: expandableLabel,\n                simpleArg: simpleArg,\n                initialIsOpen: !simpleTemplate\n              },\n              extendedArg\n            )\n          );\n        }\n      );\n    }\n  }]);\n\n  return ArgFormComponent;\n}(_react.PureComponent);\n\nArgFormComponent.propTypes = {\n  argId: _propTypes2.default.string.isRequired,\n  workpad: _propTypes2.default.object.isRequired,\n  argTypeInstance: _propTypes2.default.shape({\n    argType: _propTypes2.default.object.isRequired,\n    help: _propTypes2.default.string.isRequired,\n    required: _propTypes2.default.bool,\n    default: _propTypes2.default.any\n  }).isRequired,\n  templateProps: _propTypes2.default.object,\n  valueMissing: _propTypes2.default.bool,\n  label: _propTypes2.default.string,\n  setLabel: _propTypes2.default.func.isRequired,\n  expand: _propTypes2.default.bool,\n  setExpand: _propTypes2.default.func,\n  onValueRemove: _propTypes2.default.func,\n  renderError: _propTypes2.default.bool.isRequired,\n  setRenderError: _propTypes2.default.func.isRequired,\n  resolvedArgValue: _propTypes2.default.any\n};\n\nvar ArgForm = exports.ArgForm = _recompose.compose.apply(undefined, branches)(ArgFormComponent);",null]}