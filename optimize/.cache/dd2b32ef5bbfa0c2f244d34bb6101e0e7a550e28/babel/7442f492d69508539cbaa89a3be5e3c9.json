{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/file_datavisualizer/components/file_datavisualizer_view/file_datavisualizer_view.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/file_datavisualizer/components/file_datavisualizer_view/file_datavisualizer_view.js","mtime":1567631712044},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileDataVisualizerView = exports.MODE = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('@kbn/i18n/react');\n\nvar _react2 = require('react');\n\nvar _react3 = _interopRequireDefault(_react2);\n\nvar _eui = require('@elastic/eui');\n\nvar _lodash = require('lodash');\n\nvar _ml_api_service = require('../../../services/ml_api_service');\n\nvar _about_panel = require('../about_panel');\n\nvar _bottom_bar = require('../bottom_bar');\n\nvar _results_view = require('../results_view');\n\nvar _file_error_callouts = require('./file_error_callouts');\n\nvar _edit_flyout = require('../edit_flyout');\n\nvar _import_view = require('../import_view');\n\nvar _file_datavisualizer = require('../../../../common/constants/file_datavisualizer');\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar MODE = exports.MODE = {\n  READ: 0,\n  IMPORT: 1\n};\n\nvar UPLOAD_SIZE_MB = 5;\n\nvar FileDataVisualizerView = exports.FileDataVisualizerView = function (_Component) {\n  _inherits(FileDataVisualizerView, _Component);\n\n  function FileDataVisualizerView(props) {\n    _classCallCheck(this, FileDataVisualizerView);\n\n    var _this = _possibleConstructorReturn(this, (FileDataVisualizerView.__proto__ || Object.getPrototypeOf(FileDataVisualizerView)).call(this, props));\n\n    _this.onFilePickerChange = function (files) {\n      _this.overrides = {};\n\n      _this.setState({\n        loading: files.length > 0,\n        bottomBarVisible: files.length > 0,\n        loaded: false,\n        fileContents: '',\n        fileSize: 0,\n        fileTooLarge: false,\n        fileCouldNotBeRead: false,\n        serverErrorMessage: '',\n        results: undefined\n      }, function () {\n        if (files.length) {\n          _this.loadFile(files[0]);\n        }\n      });\n    };\n\n    _this.closeEditFlyout = function () {\n      _this.setState({ isEditFlyoutVisible: false });\n      _this.showBottomBar();\n    };\n\n    _this.showEditFlyout = function () {\n      _this.setState({ isEditFlyoutVisible: true });\n      _this.hideBottomBar();\n    };\n\n    _this.showBottomBar = function () {\n      _this.setState({ bottomBarVisible: true });\n    };\n\n    _this.hideBottomBar = function () {\n      _this.setState({ bottomBarVisible: false });\n    };\n\n    _this.setOverrides = function (overrides) {\n      console.log('setOverrides', overrides);\n      _this.setState({\n        loading: true,\n        loaded: false\n      }, function () {\n        var formattedOverrides = (0, _utils.createUrlOverrides)(overrides, _this.originalSettings);\n        _this.loadSettings(_this.state.fileContents, formattedOverrides);\n      });\n    };\n\n    _this.changeMode = function (mode) {\n      _this.setState({ mode: mode });\n    };\n\n    _this.onCancel = function () {\n      _this.changeMode(MODE.READ);\n      _this.onFilePickerChange([]);\n    };\n\n    _this.state = {\n      files: {},\n      fileContents: '',\n      fileSize: 0,\n      fileTooLarge: false,\n      fileCouldNotBeRead: false,\n      serverErrorMessage: '',\n      loading: false,\n      loaded: false,\n      results: undefined,\n      mode: MODE.READ,\n      isEditFlyoutVisible: false,\n      bottomBarVisible: false,\n      hasPermissionToImport: false\n    };\n\n    _this.overrides = {};\n    _this.previousOverrides = {};\n    _this.originalSettings = {};\n    return _this;\n  }\n\n  _createClass(FileDataVisualizerView, [{\n    key: 'componentDidMount',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var hasPermissionToImport;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _utils.hasImportPermission)();\n\n              case 2:\n                hasPermissionToImport = _context.sent;\n\n                this.setState({ hasPermissionToImport: hasPermissionToImport });\n\n              case 4:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _ref.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: 'loadFile',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(file) {\n        var fileContents, data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(file.size <= _file_datavisualizer.MAX_BYTES)) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                _context2.prev = 1;\n                _context2.next = 4;\n                return (0, _utils.readFile)(file);\n\n              case 4:\n                fileContents = _context2.sent;\n                data = fileContents.data;\n\n                this.setState({\n                  fileContents: data,\n                  fileSize: file.size\n                });\n\n                _context2.next = 9;\n                return this.loadSettings(data);\n\n              case 9:\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2['catch'](1);\n\n                console.error(_context2.t0);\n                this.setState({\n                  loaded: false,\n                  loading: false,\n                  fileCouldNotBeRead: true\n                });\n\n              case 15:\n                _context2.next = 18;\n                break;\n\n              case 17:\n                this.setState({\n                  loaded: false,\n                  loading: false,\n                  fileTooLarge: true,\n                  fileSize: file.size\n                });\n\n              case 18:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 11]]);\n      }));\n\n      function loadFile(_x) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return loadFile;\n    }()\n  }, {\n    key: 'loadSettings',\n    value: function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(data, overrides) {\n        var _this2 = this;\n\n        var isRetry = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var lessData, analyzeFile, resp, serverSettings, serverOverrides;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n\n                // reduce the amount of data being sent to the endpoint\n                // 5MB should be enough to contain 1000 lines\n                lessData = (0, _utils.reduceData)(data, UPLOAD_SIZE_MB);\n\n                console.log('overrides', overrides);\n                analyzeFile = _ml_api_service.ml.fileDatavisualizer.analyzeFile;\n                _context3.next = 6;\n                return analyzeFile(lessData, overrides);\n\n              case 6:\n                resp = _context3.sent;\n                serverSettings = (0, _utils.processResults)(resp.results);\n                serverOverrides = resp.overrides;\n\n\n                this.previousOverrides = this.overrides;\n                this.overrides = {};\n\n                if (!(serverSettings.format === 'xml')) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                throw {\n                  message: _react3.default.createElement(_react.FormattedMessage, {\n                    id: 'xpack.ml.fileDatavisualizer.fileDatavisualizerView.xmlNotCurrentlySupportedErrorMessage',\n                    defaultMessage: 'XML not currently supported'\n                  })\n                };\n\n              case 13:\n\n                if (serverOverrides === undefined) {\n                  // if no overrides were used, store all the settings returned from the endpoint\n                  this.originalSettings = serverSettings;\n                } else {\n                  Object.keys(serverOverrides).forEach(function (o) {\n                    var camelCaseO = o.replace(/_\\w/g, function (m) {\n                      return m[1].toUpperCase();\n                    });\n                    _this2.overrides[camelCaseO] = serverOverrides[o];\n                  });\n\n                  // check to see if the settings from the server which haven't been overridden have changed.\n                  // e.g. changing the name of the time field which is also the time field\n                  // will cause the timestamp_field setting to change.\n                  // if any have changed, update the originalSettings value\n                  Object.keys(serverSettings).forEach(function (o) {\n                    var value = serverSettings[o];\n                    if (_this2.overrides[o] === undefined && (Array.isArray(value) && (0, _lodash.isEqual)(value, _this2.originalSettings[o]) === false || value !== _this2.originalSettings[o])) {\n                      _this2.originalSettings[o] = value;\n                    }\n                  });\n                }\n\n                this.setState({\n                  results: resp.results,\n                  loaded: true,\n                  loading: false,\n                  fileCouldNotBeRead: isRetry\n                });\n                _context3.next = 22;\n                break;\n\n              case 17:\n                _context3.prev = 17;\n                _context3.t0 = _context3['catch'](0);\n\n                console.error(_context3.t0);\n                this.setState({\n                  results: undefined,\n                  loaded: false,\n                  loading: false,\n                  fileCouldNotBeRead: true,\n                  serverErrorMessage: _context3.t0.message\n                });\n\n                // as long as the previous overrides are different to the current overrides,\n                // reload the results with the previous overrides\n                if (overrides !== undefined && (0, _lodash.isEqual)(this.previousOverrides, overrides) === false) {\n                  this.setState({\n                    loading: true,\n                    loaded: false\n                  });\n                  this.loadSettings(data, this.previousOverrides, true);\n                }\n\n              case 22:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 17]]);\n      }));\n\n      function loadSettings(_x3, _x4) {\n        return _ref3.apply(this, arguments);\n      }\n\n      return loadSettings;\n    }()\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _state = this.state,\n          loading = _state.loading,\n          loaded = _state.loaded,\n          results = _state.results,\n          fileContents = _state.fileContents,\n          fileSize = _state.fileSize,\n          fileTooLarge = _state.fileTooLarge,\n          fileCouldNotBeRead = _state.fileCouldNotBeRead,\n          serverErrorMessage = _state.serverErrorMessage,\n          mode = _state.mode,\n          isEditFlyoutVisible = _state.isEditFlyoutVisible,\n          bottomBarVisible = _state.bottomBarVisible,\n          hasPermissionToImport = _state.hasPermissionToImport;\n\n\n      var fields = results !== undefined && results.field_stats !== undefined ? Object.keys(results.field_stats) : [];\n\n      return _react3.default.createElement(\n        _react3.default.Fragment,\n        null,\n        mode === MODE.READ && _react3.default.createElement(\n          _react3.default.Fragment,\n          null,\n          !loading && !loaded && _react3.default.createElement(_about_panel.AboutPanel, {\n            onFilePickerChange: this.onFilePickerChange\n          }),\n          loading && _react3.default.createElement(_about_panel.LoadingPanel, null),\n          fileTooLarge && _react3.default.createElement(_file_error_callouts.FileTooLarge, {\n            fileSize: fileSize,\n            maxFileSize: _file_datavisualizer.MAX_BYTES\n          }),\n          fileCouldNotBeRead && loading === false && _react3.default.createElement(\n            _react3.default.Fragment,\n            null,\n            _react3.default.createElement(_file_error_callouts.FileCouldNotBeRead, {\n              error: serverErrorMessage,\n              loaded: loaded\n            }),\n            _react3.default.createElement(_eui.EuiSpacer, { size: 'l' })\n          ),\n          loaded && _react3.default.createElement(_results_view.ResultsView, {\n            results: results,\n            data: fileContents,\n            showEditFlyout: function showEditFlyout() {\n              return _this3.showEditFlyout();\n            }\n          }),\n          _react3.default.createElement(_edit_flyout.EditFlyout, {\n            setOverrides: this.setOverrides,\n            closeEditFlyout: this.closeEditFlyout,\n            isFlyoutVisible: isEditFlyoutVisible,\n            originalSettings: this.originalSettings,\n            overrides: this.overrides,\n            fields: fields\n          }),\n          _react3.default.createElement(_bottom_bar.BottomBar, {\n            showBar: bottomBarVisible && loaded,\n            mode: MODE.READ,\n            changeMode: this.changeMode,\n            onCancel: this.onCancel,\n            disableImport: hasPermissionToImport === false\n          }),\n          _react3.default.createElement(BottomPadding, null)\n        ),\n        mode === MODE.IMPORT && _react3.default.createElement(\n          _react3.default.Fragment,\n          null,\n          _react3.default.createElement(_import_view.ImportView, {\n            results: results,\n            fileContents: fileContents,\n            fileSize: fileSize,\n            indexPatterns: this.props.indexPatterns,\n            kibanaConfig: this.props.kibanaConfig,\n            showBottomBar: this.showBottomBar,\n            hideBottomBar: this.hideBottomBar\n          }),\n          _react3.default.createElement(_bottom_bar.BottomBar, {\n            showBar: bottomBarVisible,\n            mode: MODE.IMPORT,\n            changeMode: this.changeMode,\n            onCancel: this.onCancel\n          }),\n          _react3.default.createElement(BottomPadding, null)\n        )\n      );\n    }\n  }]);\n\n  return FileDataVisualizerView;\n}(_react2.Component);\n\nfunction BottomPadding() {\n  // padding for the BottomBar\n  return _react3.default.createElement(\n    _react3.default.Fragment,\n    null,\n    _react3.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n    _react3.default.createElement(_eui.EuiSpacer, { size: 'l' }),\n    _react3.default.createElement(_eui.EuiSpacer, { size: 'l' })\n  );\n}",null]}