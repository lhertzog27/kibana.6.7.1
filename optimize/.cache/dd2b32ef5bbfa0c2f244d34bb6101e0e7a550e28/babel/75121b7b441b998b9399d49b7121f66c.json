{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/logstash/public/sections/pipeline_list/components/pipeline_list/pipeline_list.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/logstash/public/sections/pipeline_list/components/pipeline_list/pipeline_list.js","mtime":1567631712008},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _modules = require('ui/modules');\n\nvar _notify = require('ui/notify');\n\nvar _i18n = require('ui/i18n');\n\nvar _pipeline_list = require('../../../../components/pipeline_list');\n\nrequire('plugins/logstash/services/pipelines');\n\nrequire('plugins/logstash/services/license');\n\nrequire('plugins/logstash/services/cluster');\n\nrequire('plugins/logstash/services/monitoring');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar app = _modules.uiModules.get('xpack/logstash');\n\napp.directive('pipelineList', function ($injector) {\n  var pipelinesService = $injector.get('pipelinesService');\n  var licenseService = $injector.get('logstashLicenseService');\n  var clusterService = $injector.get('xpackLogstashClusterService');\n  var monitoringService = $injector.get('xpackLogstashMonitoringService');\n  var kbnUrl = $injector.get('kbnUrl');\n\n  return {\n    restrict: 'E',\n    link: function link(scope, el) {\n      var openPipeline = function openPipeline(id) {\n        return scope.$evalAsync(kbnUrl.change('management/logstash/pipelines/pipeline/' + id + '/edit'));\n      };\n      var createPipeline = function createPipeline() {\n        return scope.$evalAsync(kbnUrl.change('management/logstash/pipelines/new-pipeline'));\n      };\n      var clonePipeline = function clonePipeline(id) {\n        return scope.$evalAsync(kbnUrl.change('management/logstash/pipelines/pipeline/' + id + '/edit?clone'));\n      };\n      (0, _reactDom.render)(_react2.default.createElement(\n        _i18n.I18nContext,\n        null,\n        _react2.default.createElement(_pipeline_list.PipelineList, {\n          clonePipeline: clonePipeline,\n          clusterService: clusterService,\n          isReadOnly: licenseService.isReadOnly,\n          isForbidden: true,\n          isLoading: false,\n          licenseService: licenseService,\n          monitoringService: monitoringService,\n          openPipeline: openPipeline,\n          createPipeline: createPipeline,\n          pipelinesService: pipelinesService,\n          toastNotifications: _notify.toastNotifications\n        })\n      ), el[0]);\n    },\n    scope: {},\n    controllerAs: 'pipelineList'\n  };\n});",null]}