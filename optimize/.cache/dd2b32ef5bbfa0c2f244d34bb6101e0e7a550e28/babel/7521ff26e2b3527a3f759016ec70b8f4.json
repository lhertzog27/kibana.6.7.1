{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/field_data_card/field_data_card_directive.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/field_data_card/field_data_card_directive.js","mtime":1567631712030},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nrequire('ui/filters/moment');\n\nvar _field_data_card = require('./field_data_card.html');\n\nvar _field_data_card2 = _interopRequireDefault(_field_data_card);\n\nvar _field_types = require('plugins/ml/../common/constants/field_types');\n\nvar _string_utils = require('plugins/ml/util/string_utils');\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n/*\n * AngularJS directive for rendering a card showing data on a field in an index pattern.\n */\n\nvar _module = _modules.uiModules.get('apps/ml');\n\n_module.directive('mlFieldDataCard', function () {\n\n  function link(scope, element) {\n    scope.ML_JOB_FIELD_TYPES = _field_types.ML_JOB_FIELD_TYPES;\n    scope.mlEscape = _string_utils.mlEscape;\n\n    if (scope.card.type === _field_types.ML_JOB_FIELD_TYPES.NUMBER) {\n      if (scope.card.fieldName) {\n        scope.$watch('card.stats', function () {\n          var cardinality = _lodash2.default.get(scope, ['card', 'stats', 'cardinality'], 0);\n          scope.detailsMode = cardinality > 100 ? 'distribution' : 'top';\n        });\n\n        var cardinality = _lodash2.default.get(scope, ['card', 'stats', 'cardinality'], 0);\n        scope.detailsMode = cardinality > 100 ? 'distribution' : 'top';\n      }\n      // Create a div for the chart tooltip.\n      (0, _jquery2.default)('.ml-field-data-card-tooltip').remove();\n      (0, _jquery2.default)('body').append('<div class=\"ml-field-data-card-tooltip\" style=\"opacity:0; display: none;\">');\n    }\n\n    if (scope.card.type === _field_types.ML_JOB_FIELD_TYPES.DATE) {\n      scope.$watch('card.stats', function () {\n        // Convert earliest and latest to Dates for formatting with moment filter in the template.\n        if (_lodash2.default.has(scope, 'card.stats.earliest')) {\n          scope.card.stats.earliest = new Date(scope.card.stats.earliest);\n        }\n        if (_lodash2.default.has(scope, 'card.stats.latest')) {\n          scope.card.stats.latest = new Date(scope.card.stats.latest);\n        }\n      }, true);\n    }\n\n    scope.getCardUrl = function () {\n      var urlBasePath = _chrome2.default.getBasePath();\n      var baseCardPath = urlBasePath + '/plugins/ml/components/field_data_card/content_types';\n      var cardType = scope.card.type;\n      switch (cardType) {\n        case _field_types.ML_JOB_FIELD_TYPES.BOOLEAN:\n          return baseCardPath + '/card_boolean.html';\n        case _field_types.ML_JOB_FIELD_TYPES.DATE:\n          return baseCardPath + '/card_date.html';\n        case _field_types.ML_JOB_FIELD_TYPES.GEO_POINT:\n          return baseCardPath + '/card_geo_point.html';\n        case _field_types.ML_JOB_FIELD_TYPES.IP:\n          return baseCardPath + '/card_ip.html';\n        case _field_types.ML_JOB_FIELD_TYPES.KEYWORD:\n          return baseCardPath + '/card_keyword.html';\n        case _field_types.ML_JOB_FIELD_TYPES.NUMBER:\n          if (scope.card.fieldName) {\n            return baseCardPath + '/card_number.html';\n          } else {\n            return baseCardPath + '/card_document_count.html';\n          }\n        case _field_types.ML_JOB_FIELD_TYPES.TEXT:\n          return baseCardPath + '/card_text.html';\n        default:\n          return baseCardPath + '/card_other.html';\n      }\n    };\n\n    element.on('$destroy', function () {\n      scope.$destroy();\n    });\n  }\n\n  return {\n    scope: {\n      card: '=',\n      indexPattern: '=',\n      query: '=',\n      earliest: '=',\n      latest: '='\n    },\n    template: _field_data_card2.default,\n    link: link\n  };\n}).filter('formatField', function () {\n  // Filter to format the value of a field according to the defined format\n  // of the field in the index pattern.\n  return function (value, fieldFormat) {\n    return fieldFormat.convert(value, 'text');\n  };\n});",null]}