{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/buckets/ip_range.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/buckets/ip_range.js","mtime":1567631711697},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ipRangeBucketAgg = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nrequire('../../directives/validate_ip');\n\nrequire('../../directives/validate_cidr_mask');\n\nvar _bucket_agg_type = require('./_bucket_agg_type');\n\nvar _ip_range = require('./create_filter/ip_range');\n\nvar _ip_ranges = require('../controls/ip_ranges.html');\n\nvar _ip_ranges2 = _interopRequireDefault(_ip_ranges);\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ipRangeBucketAgg = exports.ipRangeBucketAgg = new _bucket_agg_type.BucketAggType({\n  name: 'ip_range',\n  title: _i18n.i18n.translate('common.ui.aggTypes.buckets.ipRangeTitle', {\n    defaultMessage: 'IPv4 Range'\n  }),\n  createFilter: _ip_range.createFilterIpRange,\n  getKey: function getKey(bucket, key) {\n    if (key) return key;\n    var from = _lodash2.default.get(bucket, 'from', '-Infinity');\n    var to = _lodash2.default.get(bucket, 'to', 'Infinity');\n    return from + ' to ' + to;\n  },\n  makeLabel: function makeLabel(aggConfig) {\n    return _i18n.i18n.translate('common.ui.aggTypes.buckets.ipRangeLabel', {\n      defaultMessage: '{fieldName} IP ranges',\n      values: {\n        fieldName: aggConfig.getFieldDisplayName()\n      }\n    });\n  },\n  params: [{\n    name: 'field',\n    type: 'field',\n    filterFieldTypes: 'ip'\n  }, {\n    name: 'ipRangeType',\n    default: 'fromTo',\n    write: _lodash2.default.noop\n  }, {\n    name: 'ranges',\n    default: {\n      fromTo: [{ from: '0.0.0.0', to: '127.255.255.255' }, { from: '128.0.0.0', to: '191.255.255.255' }],\n      mask: [{ mask: '0.0.0.0/1' }, { mask: '128.0.0.0/2' }]\n    },\n    editor: _ip_ranges2.default,\n    write: function write(aggConfig, output) {\n      var ipRangeType = aggConfig.params.ipRangeType;\n      var ranges = aggConfig.params.ranges[ipRangeType];\n\n      if (ipRangeType === 'fromTo') {\n        ranges = _lodash2.default.map(ranges, function (range) {\n          return _lodash2.default.omit(range, _lodash2.default.isNull);\n        });\n      }\n\n      output.params.ranges = ranges;\n    }\n  }]\n}); /*\n     * Licensed to Elasticsearch B.V. under one or more contributor\n     * license agreements. See the NOTICE file distributed with\n     * this work for additional information regarding copyright\n     * ownership. Elasticsearch B.V. licenses this file to you under\n     * the Apache License, Version 2.0 (the \"License\"); you may\n     * not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *    http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing,\n     * software distributed under the License is distributed on an\n     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     * KIND, either express or implied.  See the License for the\n     * specific language governing permissions and limitations\n     * under the License.\n     */",null]}