{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/renderers/time_filter/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/renderers/time_filter/index.js","mtime":1567631711907},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.timeFilter = undefined;\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _common = require('@kbn/interpreter/common');\n\nvar _time_filter = require('./components/time_filter');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar timeFilter = exports.timeFilter = function timeFilter() {\n  return {\n    name: 'time_filter',\n    displayName: 'Time filter',\n    help: 'Set a time window',\n    reuseDomNode: true, // must be true, otherwise filters get reset when re-rendered\n    render: function render(domNode, config, handlers) {\n      var ast = (0, _common.fromExpression)(handlers.getFilter());\n\n      // Check if the current column is what we expect it to be. If the user changes column this will be called again,\n      // but we don't want to run setFilter() unless we have to because it will cause a data refresh\n      var column = (0, _lodash.get)(ast, 'chain[0].arguments.column[0]');\n      if (column !== config.column) {\n        (0, _lodash.set)(ast, 'chain[0].arguments.column[0]', config.column);\n        handlers.setFilter((0, _common.toExpression)(ast));\n      }\n\n      _reactDom2.default.render(_react2.default.createElement(_time_filter.TimeFilter, {\n        compact: config.compact,\n        commit: handlers.setFilter,\n        filter: (0, _common.toExpression)(ast)\n      }), domNode, function () {\n        return handlers.done();\n      });\n\n      handlers.onDestroy(function () {\n        _reactDom2.default.unmountComponentAtNode(domNode);\n      });\n    }\n  };\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */",null]}