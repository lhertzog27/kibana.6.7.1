{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/alerts/map_severity.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/alerts/map_severity.js","mtime":1567631712081},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\n/**\n * Map the {@code severity} value to the associated alert level to be usable within the UI.\n *\n * <ol>\n * <li>Low: [0, 999) represents an informational level alert.</li>\n * <li>Medium: [1000, 1999) represents a warning level alert.</li>\n * <li>High: Any other value.</li>\n * </ol>\n *\n * The object returned is in the form of:\n *\n * <code>\n * {\n *   value: 'medium',\n *   color: 'warning',\n *   iconType: 'dot',\n *   title: 'Warning severity alert'\n * }\n * </code>\n *\n * @param {Number} severity The number representing the severity. Higher is \"worse\".\n * @return {Object} An object containing details about the severity.\n */\n\nexports.mapSeverity = mapSeverity;\n\nvar _lodash = require('lodash');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction mapSeverity(severity) {\n  var floor = Math.floor(severity / 1000);\n  var mapped = void 0;\n\n  switch (floor) {\n    case 0:\n      mapped = {\n        value: _i18n.i18n.translate('xpack.monitoring.alerts.lowSeverityName', { defaultMessage: 'low' }),\n        color: 'warning',\n        iconType: 'iInCircle'\n      };\n      break;\n    case 1:\n      mapped = {\n        value: _i18n.i18n.translate('xpack.monitoring.alerts.mediumSeverityName', { defaultMessage: 'medium' }),\n        color: 'warning',\n        iconType: 'alert'\n      };\n      break;\n    default:\n      // severity >= 2000\n      mapped = {\n        value: _i18n.i18n.translate('xpack.monitoring.alerts.highSeverityName', { defaultMessage: 'high' }),\n        color: 'danger',\n        iconType: 'bell'\n      };\n      break;\n  }\n\n  return _extends({\n    title: _i18n.i18n.translate('xpack.monitoring.alerts.severityTitle', { defaultMessage: '{severity} severity alert', values: { severity: (0, _lodash.capitalize)(mapped.value) } })\n  }, mapped);\n}",null]}