{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/utils/legacy_class.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/utils/legacy_class.js","mtime":1567631711765},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createLegacyClass = createLegacyClass;\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// create a property descriptor for properties\n// that won't change\nfunction describeConst(val) {\n  return {\n    writable: false,\n    enumerable: false,\n    configurable: false,\n    value: val\n  };\n}\n\nvar props = {\n  inherits: describeConst(function (SuperClass) {\n\n    var prototype = Object.create(SuperClass.prototype, {\n      constructor: describeConst(this),\n      superConstructor: describeConst(SuperClass)\n    });\n\n    Object.defineProperties(this, {\n      prototype: describeConst(prototype),\n      Super: describeConst(SuperClass)\n    });\n\n    return this;\n  })\n};\n\n/**\n     * Add class-related behavior to a function, currently this\n     * only attaches an .inherits() method.\n     *\n     * @param  {Constructor} ClassConstructor - The function that should be extended\n     * @return {Constructor} - the constructor passed in;\n     */\nfunction createLegacyClass(ClassConstructor) {\n  return Object.defineProperties(ClassConstructor, props);\n}",null]}