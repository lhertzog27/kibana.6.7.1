{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/post_save_options/post_save_options_directive.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/post_save_options/post_save_options_directive.js","mtime":1567631712056},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _post_save_service = require('./post_save_service');\n\nvar _create_watch_service = require('plugins/ml/jobs/new_job/simple/components/watcher/create_watch_service');\n\nvar _check_license = require('plugins/ml/license/check_license');\n\nvar _post_save_options = require('./post_save_options.html');\n\nvar _post_save_options2 = _interopRequireDefault(_post_save_options);\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = _modules.uiModules.get('apps/ml'); /*\n                                                  * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                  * or more contributor license agreements. Licensed under the Elastic License;\n                                                  * you may not use this file except in compliance with the Elastic License.\n                                                  */\n\n_module.directive('mlPostSaveOptions', function (Private, i18n) {\n  return {\n    restrict: 'AE',\n    replace: false,\n    scope: {\n      jobId: '=',\n      bucketSpan: '=',\n      includeInfluencers: '='\n    },\n    template: _post_save_options2.default,\n    link: function link($scope) {\n      var xpackFeature = Private(_check_license.xpackFeatureProvider);\n\n      $scope.watcherEnabled = xpackFeature.isAvailable('watcher');\n      $scope.status = _post_save_service.postSaveService.status;\n      $scope.STATUS = _post_save_service.postSaveService.STATUS;\n\n      _create_watch_service.mlCreateWatchService.reset();\n\n      _create_watch_service.mlCreateWatchService.config.includeInfluencers = $scope.includeInfluencers;\n      $scope.runInRealtime = false;\n      $scope.createWatch = false;\n      $scope.embedded = true;\n\n      $scope.clickRunInRealtime = function () {\n        $scope.createWatch = !$scope.runInRealtime ? false : $scope.createWatch;\n      };\n\n      $scope.apply = function () {\n        _post_save_service.postSaveService.apply($scope.jobId, $scope.runInRealtime, $scope.createWatch, i18n).catch(function () {}).then(function () {\n          $scope.$applyAsync();\n        });\n      };\n    }\n  };\n});",null]}