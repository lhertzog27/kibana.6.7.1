{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/elasticsearch/ccr/get_page_data.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/elasticsearch/ccr/get_page_data.js","mtime":1567631712101},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPageData = getPageData;\n\nvar _ajax_error_handler = require('plugins/monitoring/lib/ajax_error_handler');\n\nvar _timefilter = require('ui/timefilter');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction getPageData($injector) {\n  var $http = $injector.get('$http');\n  var globalState = $injector.get('globalState');\n  var timeBounds = _timefilter.timefilter.getBounds();\n  var url = '../api/monitoring/v1/clusters/' + globalState.cluster_uuid + '/elasticsearch/ccr';\n\n  return $http.post(url, {\n    ccs: globalState.ccs,\n    timeRange: {\n      min: timeBounds.min.toISOString(),\n      max: timeBounds.max.toISOString()\n    }\n  }).then(function (response) {\n    return response.data;\n  }).catch(function (err) {\n    var Private = $injector.get('Private');\n    var ajaxErrorHandlers = Private(_ajax_error_handler.ajaxErrorHandlersProvider);\n    return ajaxErrorHandlers(err);\n  });\n}",null]}