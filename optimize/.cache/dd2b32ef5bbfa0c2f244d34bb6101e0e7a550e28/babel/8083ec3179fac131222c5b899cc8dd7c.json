{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/common/lib/resolve_dataurl.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/common/lib/resolve_dataurl.js","mtime":1567631711912},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveWithMissingImage = exports.resolveFromArgs = undefined;\n\nvar _lodash = require('lodash');\n\nvar _url = require('../../common/lib/url');\n\nvar _missing_asset = require('../../common/lib/missing_asset');\n\n/*\n * NOTE: args.dataurl can come as an expression here.\n * For example:\n *   [{\"type\":\"expression\",\"chain\":[{\"type\":\"function\",\"function\":\"asset\",\"arguments\":{\"_\":[\"...\"]}}]}]\n */\nvar resolveFromArgs = exports.resolveFromArgs = function resolveFromArgs(args) {\n  var defaultDataurl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  var dataurl = (0, _lodash.get)(args, 'dataurl.0', null);\n  return (0, _url.isValidUrl)(dataurl) ? dataurl : defaultDataurl;\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */\n\nvar resolveWithMissingImage = exports.resolveWithMissingImage = function resolveWithMissingImage(img) {\n  var alt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if ((0, _url.isValidUrl)(img)) {\n    return img;\n  }\n  if (img === null) {\n    return alt;\n  }\n  return _missing_asset.missingImage;\n};",null]}