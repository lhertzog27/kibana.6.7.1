{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/lib/index_status_labels.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/lib/index_status_labels.js","mtime":1567631711971},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexStatusLabels = undefined;\n\nvar _indexStatusLabels;\n\nvar _i18n = require('@kbn/i18n');\n\nvar _constants = require('../../common/constants');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*\n                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                   */\n\nvar indexStatusLabels = exports.indexStatusLabels = (_indexStatusLabels = {}, _defineProperty(_indexStatusLabels, _constants.INDEX_CLEARING_CACHE, _i18n.i18n.translate('xpack.idxMgmt.indexStatusLabels.clearingCacheStatusLabel', {\n  defaultMessage: 'clearing cache...'\n})), _defineProperty(_indexStatusLabels, _constants.INDEX_CLOSED, _i18n.i18n.translate('xpack.idxMgmt.indexStatusLabels.closedStatusLabel', {\n  defaultMessage: 'closed'\n})), _defineProperty(_indexStatusLabels, _constants.INDEX_CLOSING, _i18n.i18n.translate('xpack.idxMgmt.indexStatusLabels.closingStatusLabel', {\n  defaultMessage: 'closing...'\n})), _defineProperty(_indexStatusLabels, _constants.INDEX_MERGING, _i18n.i18n.translate('xpack.idxMgmt.indexStatusLabels.mergingStatusLabel', {\n  defaultMessage: 'merging...'\n})), _defineProperty(_indexStatusLabels, _constants.INDEX_OPENING, _i18n.i18n.translate('xpack.idxMgmt.indexStatusLabels.openingStatusLabel', {\n  defaultMessage: 'opening...'\n})), _defineProperty(_indexStatusLabels, _constants.INDEX_REFRESHING, _i18n.i18n.translate('xpack.idxMgmt.indexStatusLabels.refreshingStatusLabel', {\n  defaultMessage: 'refreshing...'\n})), _defineProperty(_indexStatusLabels, _constants.INDEX_FLUSHING, _i18n.i18n.translate('xpack.idxMgmt.indexStatusLabels.flushingStatusLabel', {\n  defaultMessage: 'flushing...'\n})), _defineProperty(_indexStatusLabels, _constants.INDEX_FORCEMERGING, _i18n.i18n.translate('xpack.idxMgmt.indexStatusLabels.forcingMergeStatusLabel', {\n  defaultMessage: 'forcing merge...'\n})), _indexStatusLabels);",null]}