{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/kibana_services.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/kibana_services.js","mtime":1567631712017},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchSearchSourceAndRecordWithInspector = exports.inspectorAdapters = exports.emsServiceSettings = exports.SearchSource = exports.indexPatternService = exports.timeService = undefined;\n\nvar fetchSearchSourceAndRecordWithInspector = exports.fetchSearchSourceAndRecordWithInspector = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n    var searchSource = _ref.searchSource,\n        requestId = _ref.requestId,\n        requestName = _ref.requestName,\n        requestDesc = _ref.requestDesc;\n    var inspectorRequest, resp;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            inspectorRequest = inspectorAdapters.requests.start(requestName, { id: requestId, description: requestDesc });\n            resp = void 0;\n            _context.prev = 2;\n\n            inspectorRequest.stats((0, _courier_inspector_utils.getRequestInspectorStats)(searchSource));\n            searchSource.getSearchRequestBody().then(function (body) {\n              inspectorRequest.json(body);\n            });\n            _context.next = 7;\n            return searchSource.fetch();\n\n          case 7:\n            resp = _context.sent;\n\n            inspectorRequest.stats((0, _courier_inspector_utils.getResponseInspectorStats)(searchSource, resp)).ok({ json: resp });\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context['catch'](2);\n\n            inspectorRequest.error({ error: _context.t0 });\n            throw _context.t0;\n\n          case 15:\n            return _context.abrupt('return', resp);\n\n          case 16:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[2, 11]]);\n  }));\n\n  return function fetchSearchSourceAndRecordWithInspector(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _modules = require('ui/modules');\n\nvar _courier = require('ui/courier');\n\nvar _adapters = require('ui/inspector/adapters');\n\nvar _map_adapter = require('./inspector/adapters/map_adapter');\n\nvar _timefilter = require('ui/timefilter/timefilter');\n\nvar _courier_inspector_utils = require('ui/courier/utils/courier_inspector_utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar timeService = exports.timeService = _timefilter.timefilter;\nvar indexPatternService = exports.indexPatternService = void 0;\nvar SearchSource = exports.SearchSource = void 0;\nvar emsServiceSettings = exports.emsServiceSettings = void 0;\n\nvar inspectorAdapters = exports.inspectorAdapters = {\n  requests: new _adapters.RequestAdapter()\n};\nif (_chrome2.default.getInjected('showMapsInspectorAdapter', false)) {\n  inspectorAdapters.map = new _map_adapter.MapAdapter();\n}\n\n_modules.uiModules.get('app/maps').run(function ($injector) {\n  exports.indexPatternService = indexPatternService = $injector.get('indexPatterns');\n  var Private = $injector.get('Private');\n  exports.SearchSource = SearchSource = Private(_courier.SearchSourceProvider);\n  exports.emsServiceSettings = emsServiceSettings = $injector.get('serviceSettings');\n});",null]}