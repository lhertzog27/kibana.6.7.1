{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/server/lib/filters.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/server/lib/filters.js","mtime":1567631711937},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.time = time;\nexports.luceneQueryString = luceneQueryString;\nexports.exactly = exactly;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n/*\n TODO: This could be pluggable\n*/\n\nfunction time(filter) {\n  if (!filter.column) {\n    throw new Error('column is required for Elasticsearch range filters');\n  }\n  return {\n    range: _defineProperty({}, filter.column, { gte: filter.from, lte: filter.to })\n  };\n}\n\nfunction luceneQueryString(filter) {\n  return {\n    query_string: {\n      query: filter.query || '*'\n    }\n  };\n}\n\nfunction exactly(filter) {\n  return {\n    term: _defineProperty({}, filter.column, {\n      value: filter.value\n    })\n  };\n}",null]}