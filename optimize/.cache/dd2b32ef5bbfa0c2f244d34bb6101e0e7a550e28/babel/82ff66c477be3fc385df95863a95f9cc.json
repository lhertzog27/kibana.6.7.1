{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/autocomplete/components/object_component.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/autocomplete/components/object_component.js","mtime":1567631691125},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectComponent = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _2 = require('.');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\neither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @param constants list of components that represent constant keys\n * @param patternsAndWildCards list of components that represent patterns and should be matched only if\n * there is no constant matches\n */\nvar ObjectComponent = exports.ObjectComponent = function (_SharedComponent) {\n  _inherits(ObjectComponent, _SharedComponent);\n\n  function ObjectComponent(name, constants, patternsAndWildCards) {\n    _classCallCheck(this, ObjectComponent);\n\n    var _this = _possibleConstructorReturn(this, (ObjectComponent.__proto__ || Object.getPrototypeOf(ObjectComponent)).call(this, name));\n\n    _this.constants = constants;\n    _this.patternsAndWildCards = patternsAndWildCards;\n    return _this;\n  }\n\n  _createClass(ObjectComponent, [{\n    key: 'getTerms',\n    value: function getTerms(context, editor) {\n      var options = [];\n      _lodash2.default.each(this.constants, function (component) {\n        options.push.apply(options, component.getTerms(context, editor));\n      });\n      _lodash2.default.each(this.patternsAndWildCards, function (component) {\n        options.push.apply(options, component.getTerms(context, editor));\n      });\n      return options;\n    }\n  }, {\n    key: 'match',\n    value: function match(token, context, editor) {\n      var result = {\n        next: []\n      };\n      _lodash2.default.each(this.constants, function (component) {\n        var componentResult = component.match(token, context, editor);\n        if (componentResult && componentResult.next) {\n          result.next.push.apply(result.next, componentResult.next);\n        }\n      });\n\n      // try to link to GLOBAL rules\n      var globalRules = context.globalComponentResolver(token, false);\n      if (globalRules) {\n        result.next.push.apply(result.next, globalRules);\n      }\n\n      if (result.next.length) {\n        return result;\n      }\n      _lodash2.default.each(this.patternsAndWildCards, function (component) {\n        var componentResult = component.match(token, context, editor);\n        if (componentResult && componentResult.next) {\n          result.next.push.apply(result.next, componentResult.next);\n        }\n      });\n\n      return result;\n    }\n  }]);\n\n  return ObjectComponent;\n}(_2.SharedComponent);",null]}