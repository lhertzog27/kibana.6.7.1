{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--4-2!/home/anthony/git_workspaces/kibana/packages/kbn-i18n/target/web/core/helper.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/packages/kbn-i18n/target/web/core/helper.js","mtime":1567666389811},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeAll = exports.unique = exports.hasValues = exports.isObject = exports.isString = void 0;\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n  } else {\n    obj[key] = value;\n  }return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }return arr2;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n    };\n  }return _typeof(obj);\n}\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nexports.isString = isString;\n\nvar isObject = function isObject(value) {\n  return _typeof(value) === 'object' && value !== null;\n};\n\nexports.isObject = isObject;\n\nvar hasValues = function hasValues(values) {\n  return Object.keys(values).length > 0;\n};\n\nexports.hasValues = hasValues;\n\nvar unique = function unique() {\n  var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return _toConsumableArray(new Set(arr));\n};\n\nexports.unique = unique;\n\nvar merge = function merge(a, b) {\n  return unique([].concat(_toConsumableArray(Object.keys(a)), _toConsumableArray(Object.keys(b)))).reduce(function (acc, key) {\n    if (isObject(a[key]) && isObject(b[key]) && !Array.isArray(a[key]) && !Array.isArray(b[key])) {\n      return _objectSpread({}, acc, _defineProperty({}, key, merge(a[key], b[key])));\n    }\n\n    return _objectSpread({}, acc, _defineProperty({}, key, b[key] === undefined ? a[key] : b[key]));\n  }, {});\n};\n\nvar mergeAll = function mergeAll() {\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  return sources.filter(isObject).reduce(function (acc, source) {\n    return merge(acc, source);\n  });\n};\n\nexports.mergeAll = mergeAll;",null]}