{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/services/breadcrumbs_provider.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/services/breadcrumbs_provider.js","mtime":1567631712099},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.breadcrumbsProvider = breadcrumbsProvider;\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Helper for making objects to use in a link element\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar createCrumb = function createCrumb(url, label, testSubj) {\n  var crumb = { url: url, label: label };\n  if (testSubj) {\n    crumb.testSubj = testSubj;\n  }\n  return crumb;\n};\n\n// generate Elasticsearch breadcrumbs\nfunction getElasticsearchBreadcrumbs(mainInstance) {\n  var breadcrumbs = [];\n  if (mainInstance.instance) {\n    breadcrumbs.push(createCrumb('#/elasticsearch', 'Elasticsearch'));\n    if (mainInstance.name === 'indices') {\n      breadcrumbs.push(createCrumb('#/elasticsearch/indices', _i18n.i18n.translate('xpack.monitoring.breadcrumbs.es.indicesLabel', { defaultMessage: 'Indices' }), 'breadcrumbEsIndices'));\n    } else if (mainInstance.name === 'nodes') {\n      breadcrumbs.push(createCrumb('#/elasticsearch/nodes', _i18n.i18n.translate('xpack.monitoring.breadcrumbs.es.nodesLabel', { defaultMessage: 'Nodes' }), 'breadcrumbEsNodes'));\n    } else if (mainInstance.name === 'ml') {\n      // ML Instance (for user later)\n      breadcrumbs.push(createCrumb('#/elasticsearch/ml_jobs', _i18n.i18n.translate('xpack.monitoring.breadcrumbs.es.jobsLabel', { defaultMessage: 'Jobs' })));\n    } else if (mainInstance.name === 'ccr_shard') {\n      breadcrumbs.push(createCrumb('#/elasticsearch/ccr', _i18n.i18n.translate('xpack.monitoring.breadcrumbs.es.ccrLabel', { defaultMessage: 'CCR' })));\n    }\n    breadcrumbs.push(createCrumb(null, mainInstance.instance));\n  } else {\n    // don't link to Overview when we're possibly on Overview or its sibling tabs\n    breadcrumbs.push(createCrumb(null, 'Elasticsearch'));\n  }\n  return breadcrumbs;\n}\n\n// generate Kibana breadcrumbs\nfunction getKibanaBreadcrumbs(mainInstance) {\n  var breadcrumbs = [];\n  if (mainInstance.instance) {\n    breadcrumbs.push(createCrumb('#/kibana', 'Kibana'));\n    breadcrumbs.push(createCrumb('#/kibana/instances', _i18n.i18n.translate('xpack.monitoring.breadcrumbs.kibana.instancesLabel', { defaultMessage: 'Instances' })));\n  } else {\n    // don't link to Overview when we're possibly on Overview or its sibling tabs\n    breadcrumbs.push(createCrumb(null, 'Kibana'));\n  }\n  return breadcrumbs;\n}\n\n// generate Logstash breadcrumbs\nfunction getLogstashBreadcrumbs(mainInstance) {\n  var logstashLabel = _i18n.i18n.translate('xpack.monitoring.breadcrumbs.logstashLabel', { defaultMessage: 'Logstash' });\n  var breadcrumbs = [];\n  if (mainInstance.instance) {\n    breadcrumbs.push(createCrumb('#/logstash', logstashLabel));\n    if (mainInstance.name === 'nodes') {\n      breadcrumbs.push(createCrumb('#/logstash/nodes', _i18n.i18n.translate('xpack.monitoring.breadcrumbs.logstash.nodesLabel', { defaultMessage: 'Nodes' })));\n    }\n    breadcrumbs.push(createCrumb(null, mainInstance.instance));\n  } else if (mainInstance.page === 'pipeline') {\n    breadcrumbs.push(createCrumb('#/logstash', logstashLabel));\n    breadcrumbs.push(createCrumb('#/logstash/pipelines', _i18n.i18n.translate('xpack.monitoring.breadcrumbs.logstash.pipelinesLabel', { defaultMessage: 'Pipelines' })));\n  } else {\n    // don't link to Overview when we're possibly on Overview or its sibling tabs\n    breadcrumbs.push(createCrumb(null, logstashLabel));\n  }\n\n  return breadcrumbs;\n}\n\n// generate Beats breadcrumbs\nfunction getBeatsBreadcrumbs(mainInstance) {\n  var beatsLabel = _i18n.i18n.translate('xpack.monitoring.breadcrumbs.beatsLabel', { defaultMessage: 'Beats' });\n  var breadcrumbs = [];\n  if (mainInstance.instance) {\n    breadcrumbs.push(createCrumb('#/beats', beatsLabel));\n    breadcrumbs.push(createCrumb('#/beats/beats', _i18n.i18n.translate('xpack.monitoring.breadcrumbs.beats.instancesLabel', { defaultMessage: 'Instances' })));\n    breadcrumbs.push(createCrumb(null, mainInstance.instance));\n  } else {\n    breadcrumbs.push(createCrumb(null, beatsLabel));\n  }\n\n  return breadcrumbs;\n}\n\n// generate Apm breadcrumbs\nfunction getApmBreadcrumbs(mainInstance) {\n  var apmLabel = _i18n.i18n.translate('xpack.monitoring.breadcrumbs.apmLabel', { defaultMessage: 'APM' });\n  var breadcrumbs = [];\n  if (mainInstance.instance) {\n    breadcrumbs.push(createCrumb('#/apm', apmLabel));\n    breadcrumbs.push(createCrumb('#/apm/instances', _i18n.i18n.translate('xpack.monitoring.breadcrumbs.apm.instancesLabel', { defaultMessage: 'Instances' })));\n  } else {\n    // don't link to Overview when we're possibly on Overview or its sibling tabs\n    breadcrumbs.push(createCrumb(null, apmLabel));\n  }\n  return breadcrumbs;\n}\n\nfunction breadcrumbsProvider() {\n  return function createBreadcrumbs(clusterName, mainInstance) {\n    var breadcrumbs = [createCrumb('#/home', _i18n.i18n.translate('xpack.monitoring.breadcrumbs.clustersLabel', { defaultMessage: 'Clusters' }), 'breadcrumbClusters')];\n\n    if (!mainInstance.inOverview && clusterName) {\n      breadcrumbs.push(createCrumb('#/overview', clusterName));\n    }\n\n    if (mainInstance.inElasticsearch) {\n      breadcrumbs = breadcrumbs.concat(getElasticsearchBreadcrumbs(mainInstance));\n    }\n    if (mainInstance.inKibana) {\n      breadcrumbs = breadcrumbs.concat(getKibanaBreadcrumbs(mainInstance));\n    }\n    if (mainInstance.inLogstash) {\n      breadcrumbs = breadcrumbs.concat(getLogstashBreadcrumbs(mainInstance));\n    }\n    if (mainInstance.inBeats) {\n      breadcrumbs = breadcrumbs.concat(getBeatsBreadcrumbs(mainInstance));\n    }\n    if (mainInstance.inApm) {\n      breadcrumbs = breadcrumbs.concat(getApmBreadcrumbs(mainInstance));\n    }\n\n    _chrome2.default.breadcrumbs.set(breadcrumbs.map(function (b) {\n      return { text: b.label, href: b.url };\n    }));\n\n    return breadcrumbs;\n  };\n}",null]}