{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_edit/components/threshold_watch_edit/threshold_watch_edit.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_edit/components/threshold_watch_edit/threshold_watch_edit.js","mtime":1567631712347},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _modules = require('ui/modules');\n\nvar _compat = require('ui/compat');\n\nrequire('ui/dirty_prompt');\n\nvar _threshold_watch_edit = require('./threshold_watch_edit.html');\n\nvar _threshold_watch_edit2 = _interopRequireDefault(_threshold_watch_edit);\n\nrequire('../watch_edit_title_panel');\n\nrequire('plugins/watcher/components/threshold_watch_expression');\n\nrequire('plugins/watcher/components/threshold_preview_chart');\n\nrequire('plugins/watcher/components/watch_actions');\n\nrequire('plugins/watcher/components/panel_pager');\n\nrequire('plugins/watcher/services/fields');\n\nrequire('plugins/watcher/services/license');\n\nrequire('plugins/watcher/services/timezone');\n\nrequire('plugins/watcher/services/watch');\n\nrequire('plugins/watcher/services/interval');\n\nrequire('plugins/watcher/services/action_defaults');\n\nvar _datemath = require('@elastic/datemath');\n\nvar _datemath2 = _interopRequireDefault(_datemath);\n\nvar _notify = require('ui/notify');\n\nvar _visualize_options = require('plugins/watcher/models/visualize_options');\n\nvar _constants = require('plugins/watcher/../common/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar app = _modules.uiModules.get('xpack/watcher');\n\napp.directive('thresholdWatchEdit', function ($injector, i18n) {\n  var watchService = $injector.get('xpackWatcherWatchService');\n  var fieldsService = $injector.get('xpackWatcherFieldsService');\n  var timezoneService = $injector.get('xpackWatcherTimezoneService');\n  var licenseService = $injector.get('xpackWatcherLicenseService');\n  var intervalService = $injector.get('xpackWatcherIntervalService');\n  var actionDefaultsService = $injector.get('xpackWatcherActionDefaultsService');\n  var kbnUrl = $injector.get('kbnUrl');\n  var confirmModal = $injector.get('confirmModal');\n  // const dirtyPrompt = $injector.get('dirtyPrompt');\n  var $interval = $injector.get('$interval');\n\n  return {\n    restrict: 'E',\n    template: _threshold_watch_edit2.default,\n    scope: {\n      watch: '=xpackWatch' // Property names differ due to https://git.io/vSWXV\n    },\n    bindToController: true,\n    controllerAs: 'thresholdWatchEdit',\n    controller: function (_InitAfterBindingsWor) {\n      _inherits(ThresholdWatchEditController, _InitAfterBindingsWor);\n\n      function ThresholdWatchEditController() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, ThresholdWatchEditController);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ThresholdWatchEditController.__proto__ || Object.getPrototypeOf(ThresholdWatchEditController)).call.apply(_ref, [this].concat(args))), _this), _this.loadFields = function () {\n          if (!(0, _lodash.isEqual)(_this.watch.index, _this.index)) {\n            _this.index = _this.watch.index;\n\n            if (!_this.index.length) {\n              _this.fields = [];\n              return;\n            }\n\n            fieldsService.getFields(_this.index).then(function (fields) {\n              _this.fields = fields;\n            });\n          }\n        }, _this.onChange = function (watch) {\n          _this.loadFields();\n          _this.watch = watch;\n          _this.updateVisualizeTimeWindow();\n          _this.visualizeWatch();\n        }, _this.onActionChange = function () {}, _this.onTitlePanelValid = function () {\n          _this.titlePanelValid = true;\n          _this.visualizeWatch();\n        }, _this.onTitlePanelInvalid = function () {\n          _this.titlePanelValid = false;\n        }, _this.onConditionPanelValid = function () {\n          _this.conditionPanelValid = true;\n          _this.visualizeWatch();\n        }, _this.onConditionPanelInvalid = function () {\n          _this.conditionPanelValid = false;\n        }, _this.onActionsValid = function () {\n          _this.actionsPanelValid = true;\n        }, _this.onActionsInvalid = function () {\n          _this.actionsPanelValid = false;\n        }, _this.onActionAdd = function (actionType) {\n          var defaults = actionDefaultsService.getDefaults(_this.watch.type, actionType);\n          _this.watch.createAction(actionType, defaults);\n        }, _this.onActionDelete = function (action) {\n          _this.watch.deleteAction(action);\n        }, _this.onActionSimulate = function (action) {\n          watchService.simulateWatchAction(_this.watch, action).then(function (watchHistoryItem) {\n            var actionStatuses = watchHistoryItem.watchStatus.actionStatuses;\n            var actionStatus = actionStatuses.find(function (a) {\n              return a.id === action.id;\n            });\n\n            if (actionStatus.lastExecutionSuccessful === false) {\n              var message = actionStatus.lastExecutionReason || action.simulateFailMessage;\n              _notify.toastNotifications.addDanger(message);\n            } else {\n              _notify.toastNotifications.addSuccess(action.simulateMessage);\n            }\n          }).catch(function (err) {\n            _notify.toastNotifications.addDanger(err);\n          });\n        }, _this.onClose = function () {\n          // dirtyPrompt.deregister();\n          kbnUrl.change('/management/elasticsearch/watcher/watches', {});\n        }, _this.updateVisualizeTimeWindow = function () {\n          var VISUALIZE_TIME_WINDOW_MULTIPLIER = 5;\n\n          var fromExpression = 'now-' + _this.watch.timeWindowSize * VISUALIZE_TIME_WINDOW_MULTIPLIER + _this.watch.timeWindowUnit;\n          var toExpression = 'now';\n\n          var fromMoment = _datemath2.default.parse(fromExpression);\n          var toMoment = _datemath2.default.parse(toExpression);\n          _this.visualizeTimeWindowFrom = fromMoment ? fromMoment.valueOf() : undefined;\n          _this.visualizeTimeWindowTo = toMoment ? toMoment.valueOf() : undefined;\n        }, _this.visualizeWatch = (0, _lodash.debounce)(function () {\n          if (!_this.titlePanelValid || !_this.conditionPanelValid) {\n            return;\n          }\n\n          var interval = intervalService.getInterval({\n            min: _this.visualizeTimeWindowFrom,\n            max: _this.visualizeTimeWindowTo\n          }).expression;\n\n          var visualizeOptions = new _visualize_options.VisualizeOptions({\n            rangeFrom: _this.visualizeTimeWindowFrom,\n            rangeTo: _this.visualizeTimeWindowTo,\n            interval: interval,\n            timezone: timezoneService.getTimezone()\n          });\n\n          return watchService.visualizeWatch(_this.watch, visualizeOptions).then(function (_ref2) {\n            var visualizeData = _ref2.visualizeData;\n\n            _this.visualizeData = visualizeData;\n            _this.visualizeDataPageCount = Object.keys(visualizeData).length;\n            _this.setVisualizationPageByKey(_this.visualizeDataKey);\n            _this.restartRefreshWatchVisualizationTimer();\n          }).catch(function (e) {\n            _notify.toastNotifications.addDanger(e);\n            _this.stopRefreshWatchVisualizationTimer();\n          });\n        }, 500), _this.setVisualizationPageByKey = function (key) {\n          var newIndex = Object.keys(_this.visualizeData).indexOf(key);\n          if (newIndex === -1) {\n            _this.setVisualizationPage(0);\n          } else {\n            _this.setVisualizationPage(newIndex);\n          }\n        }, _this.setVisualizationPage = function (index) {\n          _this.visualizeDataKey = Object.keys(_this.visualizeData)[index];\n\n          _this.visualizeDataPageIndex = index;\n          _this.visualizeDataTitle = _this.watch.termField + ' (' + (index + 1) + ' of ' + _this.visualizeDataPageCount + '): ' + _this.visualizeDataKey;\n          _this.chartSeries = _this.visualizeData[_this.visualizeDataKey];\n        }, _this.onVisualizationNextPage = function () {\n          var newIndex = _this.visualizeDataPageIndex + 1;\n\n          if (newIndex < _this.visualizeDataPageCount) {\n            _this.setVisualizationPage(newIndex);\n          } else {\n            _this.setVisualizationPage(0);\n          }\n        }, _this.onVisualizationPreviousPage = function () {\n          var newIndex = _this.visualizeDataPageIndex - 1;\n\n          if (newIndex >= 0) {\n            _this.setVisualizationPage(newIndex);\n          } else {\n            _this.setVisualizationPage(_this.visualizeDataPageCount - 1);\n          }\n        }, _this.restartRefreshWatchVisualizationTimer = function () {\n          _this.stopRefreshWatchVisualizationTimer();\n          _this.refreshVisualizationWatchInterval = $interval(_this.visualizeWatch, _constants.REFRESH_INTERVALS.WATCH_VISUALIZATION);\n        }, _this.stopRefreshWatchVisualizationTimer = function () {\n          if (Boolean(_this.refreshVisualizationWatchInterval)) {\n            $interval.cancel(_this.refreshVisualizationWatchInterval);\n          }\n        }, _this.onWatchSave = function () {\n          if (!_this.watch.isNew) {\n            return _this.saveWatch();\n          }\n\n          return _this.isExistingWatch().then(function (existingWatch) {\n            if (!existingWatch) {\n              return _this.saveWatch();\n            }\n\n            var confirmModalOptions = {\n              onConfirm: _this.saveWatch,\n              confirmButtonText: i18n('xpack.watcher.sections.watchEdit.threshold.saveConfirmModal.overwriteWatchButtonLabel', {\n                defaultMessage: 'Overwrite Watch'\n              })\n            };\n\n            var message = i18n('xpack.watcher.sections.watchEdit.threshold.saveConfirmModal.description', {\n              defaultMessage: 'Watch with ID \"{watchId}\" {watchNameMessageFragment} already exists. Do you want to overwrite it?',\n              values: {\n                watchId: _this.watch.id,\n                watchNameMessageFragment: existingWatch.name ? i18n('xpack.watcher.sections.watchEdit.threshold.saveConfirmModal.descriptionFragmentText', {\n                  defaultMessage: '(name: \"{existingWatchName}\")',\n                  values: {\n                    existingWatchName: existingWatch.name\n                  }\n                }) : ''\n              }\n            });\n            return confirmModal(message, confirmModalOptions);\n          }).catch(function (err) {\n            return _notify.toastNotifications.addDanger(err);\n          });\n        }, _this.isExistingWatch = function () {\n          return watchService.loadWatch(_this.watch.id).then(function (existingWatch) {\n            return existingWatch;\n          }).catch(function (err) {\n            return licenseService.checkValidity().then(function () {\n              if (err.status === 404) {\n                return false;\n              }\n              throw err;\n            });\n          });\n        }, _this.saveWatch = function () {\n          return watchService.saveWatch(_this.watch).then(function () {\n            _this.watch.isNew = false; // without this, the message displays 'New Watch'\n            _notify.toastNotifications.addSuccess(i18n('xpack.watcher.sections.watchEdit.threshold.saveSuccessNotificationText', {\n              defaultMessage: 'Saved \\'{watchDisplayName}\\'',\n              values: {\n                watchDisplayName: _this.watch.displayName\n              }\n            }));\n            _this.onClose();\n          }).catch(function (err) {\n            return licenseService.checkValidity().then(function () {\n              return _notify.toastNotifications.addDanger(err);\n            });\n          });\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n      }\n\n      _createClass(ThresholdWatchEditController, [{\n        key: 'initAfterBindings',\n        value: function initAfterBindings($scope) {\n          var _this2 = this;\n\n          this.index = undefined;\n          this.originalWatch = _extends({}, this.watch);\n\n          this.omitBreadcrumbPages = ['new-watch', this.watch.id];\n          this.breadcrumb = this.watch.displayName;\n\n          // dirtyPrompt.register(() => !this.watch.isEqualTo(this.originalWatch));\n          $scope.$on('$destroy', function () {\n            // dirtyPrompt.deregister();\n            _this2.stopRefreshWatchVisualizationTimer();\n          });\n\n          this.loadFields();\n        }\n      }, {\n        key: 'saveDisabled',\n        get: function get() {\n          return !(this.titlePanelValid && this.conditionPanelValid && this.actionsPanelValid);\n        }\n      }]);\n\n      return ThresholdWatchEditController;\n    }(_compat.InitAfterBindingsWorkaround)\n  };\n});",null]}