{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/util/refresh_interval_watcher.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/util/refresh_interval_watcher.js","mtime":1567631712071},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.refreshIntervalWatcher = refreshIntervalWatcher;\n\nvar _timefilter = require('ui/timefilter');\n\n/*\n * Watches for changes to the refresh interval of the page time filter,\n * so that listeners can be notified when the auto-refresh interval has elapsed.\n */\n\nfunction refreshIntervalWatcher($timeout) {\n\n  var refresher = void 0;\n  var listener = void 0;\n\n  var onRefreshIntervalChange = function onRefreshIntervalChange() {\n    if (refresher) {\n      $timeout.cancel(refresher);\n    }\n    var interval = _timefilter.timefilter.getRefreshInterval();\n    if (interval.value > 0 && !interval.pause) {\n      var startRefresh = function startRefresh() {\n        refresher = $timeout(function () {\n          startRefresh();\n          listener();\n        }, interval.value);\n      };\n\n      startRefresh();\n    }\n  };\n\n  function init(listenerCallback) {\n    listener = listenerCallback;\n    _timefilter.timefilter.on('refreshIntervalUpdate', onRefreshIntervalChange);\n  }\n\n  function cancel() {\n    $timeout.cancel(refresher);\n    _timefilter.timefilter.off('refreshIntervalUpdate', onRefreshIntervalChange);\n  }\n\n  return {\n    init: init,\n    cancel: cancel\n  };\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */",null]}