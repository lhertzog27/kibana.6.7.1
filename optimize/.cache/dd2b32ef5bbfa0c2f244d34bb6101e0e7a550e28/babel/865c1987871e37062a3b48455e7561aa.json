{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/models/watch/watch.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/models/watch/watch.js","mtime":1567631712345},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Watch = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _lodash = require('lodash');\n\nvar _constants = require('plugins/watcher/../common/constants');\n\nvar _json_watch = require('./json_watch');\n\nvar _threshold_watch = require('./threshold_watch');\n\nvar _monitoring_watch = require('./monitoring_watch');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar WatchTypes = {};\n(0, _lodash.set)(WatchTypes, _constants.WATCH_TYPES.JSON, _json_watch.JsonWatch);\n(0, _lodash.set)(WatchTypes, _constants.WATCH_TYPES.THRESHOLD, _threshold_watch.ThresholdWatch);\n(0, _lodash.set)(WatchTypes, _constants.WATCH_TYPES.MONITORING, _monitoring_watch.MonitoringWatch);\n\nvar Watch = exports.Watch = function () {\n  function Watch() {\n    _classCallCheck(this, Watch);\n  }\n\n  _createClass(Watch, null, [{\n    key: 'fromUpstreamJson',\n    value: function fromUpstreamJson(upstreamWatch) {\n      var type = (0, _lodash.get)(upstreamWatch, 'type');\n      var WatchType = WatchTypes[type];\n\n      Object.assign(upstreamWatch, {\n        isNew: false\n      });\n\n      return WatchType.fromUpstreamJson(upstreamWatch);\n    }\n  }]);\n\n  return Watch;\n}();\n\nWatch.getWatchTypes = function () {\n  return WatchTypes;\n};",null]}