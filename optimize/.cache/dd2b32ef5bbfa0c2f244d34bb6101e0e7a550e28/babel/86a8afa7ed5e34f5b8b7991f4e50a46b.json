{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/file_datavisualizer/components/import_summary/import_summary.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/file_datavisualizer/components/import_summary/import_summary.js","mtime":1567631712045},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImportSummary = ImportSummary;\n\nvar _react = require('@kbn/i18n/react');\n\nvar _react2 = require('react');\n\nvar _react3 = _interopRequireDefault(_react2);\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ImportSummary(_ref) {\n  var index = _ref.index,\n      indexPattern = _ref.indexPattern,\n      ingestPipelineId = _ref.ingestPipelineId,\n      docCount = _ref.docCount,\n      importFailures = _ref.importFailures,\n      createIndexPattern = _ref.createIndexPattern,\n      createPipeline = _ref.createPipeline;\n\n  var items = createDisplayItems(index, indexPattern, ingestPipelineId, docCount, importFailures, createIndexPattern, createPipeline);\n\n  return _react3.default.createElement(\n    _react3.default.Fragment,\n    null,\n    _react3.default.createElement(\n      _eui.EuiCallOut,\n      {\n        title: _react3.default.createElement(_react.FormattedMessage, {\n          id: 'xpack.ml.fileDatavisualizer.importSummary.importCompleteTitle',\n          defaultMessage: 'Import complete'\n        }),\n        color: 'success',\n        iconType: 'check'\n      },\n      _react3.default.createElement(_eui.EuiDescriptionList, {\n        type: 'column',\n        listItems: items,\n        className: 'import-summary-list'\n      })\n    ),\n    importFailures && importFailures.length > 0 && _react3.default.createElement(\n      _react3.default.Fragment,\n      null,\n      _react3.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n      _react3.default.createElement(\n        _eui.EuiCallOut,\n        {\n          title: _react3.default.createElement(_react.FormattedMessage, {\n            id: 'xpack.ml.fileDatavisualizer.importSummary.documentsCouldNotBeImportedTitle',\n            defaultMessage: 'Some documents could not be imported'\n          }),\n          color: 'warning',\n          iconType: 'help'\n        },\n        _react3.default.createElement(\n          'p',\n          null,\n          _react3.default.createElement(_react.FormattedMessage, {\n            id: 'xpack.ml.fileDatavisualizer.importSummary.documentsCouldNotBeImportedDescription',\n            defaultMessage: '{importFailuresLength} out of {docCount} documents could not be imported. This could be due to lines not matching the Grok pattern.',\n            values: {\n              importFailuresLength: importFailures.length,\n              docCount: docCount\n            }\n          })\n        ),\n        _react3.default.createElement(Failures, { failedDocs: importFailures })\n      )\n    )\n  );\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */\n\nfunction Failures(_ref2) {\n  var failedDocs = _ref2.failedDocs;\n\n  return _react3.default.createElement(\n    _eui.EuiAccordion,\n    {\n      id: 'failureList',\n      buttonContent: _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importSummary.failedDocumentsButtonLabel',\n        defaultMessage: 'Failed documents'\n      }),\n      paddingSize: 'm'\n    },\n    _react3.default.createElement(\n      'div',\n      { className: 'failure-list' },\n      failedDocs.map(function (_ref3) {\n        var item = _ref3.item,\n            reason = _ref3.reason,\n            doc = _ref3.doc;\n        return _react3.default.createElement(\n          'div',\n          { key: item },\n          _react3.default.createElement(\n            'div',\n            { className: 'error-message' },\n            item,\n            ': ',\n            reason\n          ),\n          _react3.default.createElement(\n            'div',\n            null,\n            JSON.stringify(doc)\n          )\n        );\n      })\n    )\n  );\n}\n\nfunction createDisplayItems(index, indexPattern, ingestPipelineId, docCount, importFailures, createIndexPattern, createPipeline) {\n  var items = [{\n    title: _react3.default.createElement(_react.FormattedMessage, {\n      id: 'xpack.ml.fileDatavisualizer.importSummary.indexTitle',\n      defaultMessage: 'Index'\n    }),\n    description: index\n  }, {\n    title: _react3.default.createElement(_react.FormattedMessage, {\n      id: 'xpack.ml.fileDatavisualizer.importSummary.documentsIngestedTitle',\n      defaultMessage: 'Documents ingested'\n    }),\n    description: docCount - (importFailures && importFailures.length || 0)\n  }];\n\n  if (createPipeline) {\n    items.splice(1, 0, {\n      title: _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importSummary.ingestPipelineTitle',\n        defaultMessage: 'Ingest pipeline'\n      }),\n      description: ingestPipelineId\n    });\n  }\n\n  if (createIndexPattern) {\n    items.splice(1, 0, {\n      title: _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importSummary.indexPatternTitle',\n        defaultMessage: 'Index pattern'\n      }),\n      description: indexPattern\n    });\n  }\n\n  if (importFailures && importFailures.length > 0) {\n    items.push({\n      title: _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importSummary.failedDocumentsTitle',\n        defaultMessage: 'Failed documents'\n      }),\n      description: importFailures.length\n    });\n  }\n\n  return items;\n}",null]}