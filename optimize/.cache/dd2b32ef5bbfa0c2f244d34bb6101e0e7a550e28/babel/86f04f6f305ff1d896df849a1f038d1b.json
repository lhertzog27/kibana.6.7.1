{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/discover/embeddable/search_embeddable_factory.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/discover/embeddable/search_embeddable_factory.js","mtime":1567631711564},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SearchEmbeddableFactory = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nrequire('ui/doc_table');\n\nvar _embeddable = require('ui/embeddable');\n\nvar _search_embeddable = require('./search_embeddable');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar SearchEmbeddableFactory = exports.SearchEmbeddableFactory = function (_EmbeddableFactory) {\n  _inherits(SearchEmbeddableFactory, _EmbeddableFactory);\n\n  function SearchEmbeddableFactory($compile, $rootScope, searchLoader) {\n    _classCallCheck(this, SearchEmbeddableFactory);\n\n    var _this = _possibleConstructorReturn(this, (SearchEmbeddableFactory.__proto__ || Object.getPrototypeOf(SearchEmbeddableFactory)).call(this, { name: 'search' }));\n\n    _this.$compile = $compile;\n    _this.searchLoader = searchLoader;\n    _this.$rootScope = $rootScope;\n    return _this;\n  }\n\n  _createClass(SearchEmbeddableFactory, [{\n    key: 'getEditPath',\n    value: function getEditPath(panelId) {\n      return this.searchLoader.urlFor(panelId);\n    }\n\n    /**\n     *\n     * @param {Object} panelMetadata. Currently just passing in panelState but it's more than we need, so we should\n     * decouple this to only include data given to us from the embeddable when it's added to the dashboard. Generally\n     * will be just the object id, but could be anything depending on the plugin.\n     * @param onEmbeddableStateChanged\n     * @return {Promise.<Embeddable>}\n     */\n\n  }, {\n    key: 'create',\n    value: function create(panelMetadata, onEmbeddableStateChanged) {\n      var _this2 = this;\n\n      var searchId = panelMetadata.id;\n      var editUrl = this.getEditPath(searchId);\n\n      return this.searchLoader.get(searchId).then(function (savedObject) {\n        return new _search_embeddable.SearchEmbeddable({\n          onEmbeddableStateChanged: onEmbeddableStateChanged,\n          savedSearch: savedObject,\n          editUrl: editUrl,\n          $rootScope: _this2.$rootScope,\n          $compile: _this2.$compile\n        });\n      });\n    }\n  }]);\n\n  return SearchEmbeddableFactory;\n}(_embeddable.EmbeddableFactory);",null]}