{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/nav_control/nav_control.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/nav_control/nav_control.js","mtime":1567631712303},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _i18n = require('ui/i18n');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _lodash = require('lodash');\n\nvar _modules = require('ui/modules');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _chrome_nav_controls = require('ui/registry/chrome_nav_controls');\n\nvar _nav_control = require('plugins/security/views/nav_control/nav_control.html');\n\nvar _nav_control2 = _interopRequireDefault(_nav_control);\n\nrequire('plugins/security/services/shield_user');\n\nrequire('../account/account');\n\nvar _path = require('plugins/xpack_main/services/path');\n\nvar _xpack_info = require('plugins/xpack_main/services/xpack_info');\n\nvar _chrome_header_nav_controls = require('ui/registry/chrome_header_nav_controls');\n\nvar _nav_control_component = require('./nav_control_component');\n\nvar _header_global_nav = require('ui/chrome/directives/header_global_nav');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_chrome_nav_controls.chromeNavControlsRegistry.register((0, _lodash.constant)({\n  name: 'security',\n  order: 1000,\n  template: _nav_control2.default\n})); /*\n      * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n      * or more contributor license agreements. Licensed under the Elastic License;\n      * you may not use this file except in compliance with the Elastic License.\n      */\n\nvar _module = _modules.uiModules.get('security', ['kibana']);\n_module.controller('securityNavController', function ($scope, ShieldUser, globalNavState, kbnBaseUrl, Private, esDataIsTribe, i18n) {\n  var xpackInfo = Private(_xpack_info.XPackInfoProvider);\n  var showSecurityLinks = xpackInfo.get('features.security.showLinks');\n  if (Private(_path.PathProvider).isUnauthenticated() || !showSecurityLinks) return;\n\n  $scope.user = ShieldUser.getCurrent();\n  $scope.route = kbnBaseUrl + '#/account';\n  $scope.accountDisabled = esDataIsTribe;\n\n  $scope.formatTooltip = function (tooltip) {\n    // If the sidebar is open and there's no disabled message,\n    // then we don't need to show the tooltip.\n    if (globalNavState.isOpen()) {\n      return;\n    }\n    return tooltip;\n  };\n\n  $scope.accountTooltip = function (name) {\n    if (esDataIsTribe) {\n      var tribeTooltip = 'Not available when using a tribe node.';\n      return globalNavState.isOpen() ? tribeTooltip : name + ' - ' + tribeTooltip;\n    }\n    return $scope.formatTooltip(name);\n  };\n\n  $scope.onClick = function (event, disabled) {\n    if (disabled) {\n      event.preventDefault();\n    }\n  };\n\n  $scope.logoutLabel = i18n('xpack.security.navControl.logoutLabel', {\n    defaultMessage: \"Logout\"\n  });\n});\n\n_chrome_header_nav_controls.chromeHeaderNavControlsRegistry.register(function (ShieldUser, kbnBaseUrl, Private) {\n  return {\n    name: 'security',\n    order: 1000,\n    side: _header_global_nav.NavControlSide.Right,\n    render: function render(el) {\n      var xpackInfo = Private(_xpack_info.XPackInfoProvider);\n      var showSecurityLinks = xpackInfo.get('features.security.showLinks');\n      if (Private(_path.PathProvider).isUnauthenticated() || !showSecurityLinks) return null;\n\n      var props = {\n        user: ShieldUser.getCurrent(),\n        route: _chrome2.default.addBasePath(kbnBaseUrl + '#/account')\n      };\n\n      props.user.$promise.then(function () {\n        // Wait for the user to be propogated before rendering into the DOM.\n        _reactDom2.default.render(_react2.default.createElement(\n          _i18n.I18nContext,\n          null,\n          _react2.default.createElement(_nav_control_component.SecurityNavControl, props)\n        ), el);\n      });\n\n      return function () {\n        return _reactDom2.default.unmountComponentAtNode(el);\n      };\n    }\n  };\n});",null]}