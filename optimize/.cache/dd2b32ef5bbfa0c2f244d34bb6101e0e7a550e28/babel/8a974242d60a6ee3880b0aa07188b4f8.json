{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/directives/sense_history_viewer.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/directives/sense_history_viewer.js","mtime":1567631711527},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _sense_editor_resize = require('../sense_editor_resize');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar SenseEditor = require('../sense_editor/editor');\n\nrequire('ui/modules').get('app/sense').directive('senseHistoryViewer', function (i18n) {\n  return {\n    restrict: 'E',\n    scope: {\n      req: '='\n    },\n    link: function link($scope, $el) {\n      var viewer = new SenseEditor($el);\n      viewer.setReadOnly(true);\n      viewer.renderer.setShowPrintMargin(false);\n      (0, _sense_editor_resize.useResizeChecker)($scope, $el, viewer);\n      require('../settings').applyCurrentSettings(viewer);\n\n      $scope.$watch('req', function (req) {\n        if (req) {\n          var s = req.method + ' ' + req.endpoint + '\\n' + (req.data || '');\n          viewer.setValue(s);\n          viewer.clearSelection();\n        } else {\n          viewer.getSession().setValue(i18n('console.historyPage.noHistoryTextMessage', { defaultMessage: 'No history available' }));\n        }\n      });\n\n      $scope.$on('$destroy', function () {\n        viewer.destroy();\n      });\n    }\n  };\n});",null]}