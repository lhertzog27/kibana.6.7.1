{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/alerts/alerts.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/alerts/alerts.js","mtime":1567631712081},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Alerts = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _formatting = require('../../../common/formatting');\n\nvar _common = require('../../../common');\n\nvar _constants = require('../../../common/constants');\n\nvar _map_severity = require('./map_severity');\n\nvar _formatted_alert = require('plugins/monitoring/components/alerts/formatted_alert');\n\nvar _table = require('plugins/monitoring/components/table');\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar linkToCategories = {\n  'elasticsearch/nodes': 'Elasticsearch Nodes',\n  'elasticsearch/indices': 'Elasticsearch Indices',\n  'kibana/instances': 'Kibana Instances',\n  'logstash/instances': 'Logstash Nodes'\n};\nvar getColumns = function getColumns(kbnUrl, scope) {\n  return [{\n    name: _i18n.i18n.translate('xpack.monitoring.alerts.statusColumnTitle', {\n      defaultMessage: 'Status'\n    }),\n    field: 'status',\n    sortable: true,\n    render: function render(severity) {\n      var severityIcon = (0, _map_severity.mapSeverity)(severity);\n\n      return _react2.default.createElement(\n        _eui.EuiToolTip,\n        { content: severityIcon.title, position: 'bottom' },\n        _react2.default.createElement(\n          _eui.EuiHealth,\n          { color: severityIcon.color, 'data-test-subj': 'alertIcon', 'aria-label': severityIcon.title },\n          (0, _lodash.capitalize)(severityIcon.value)\n        )\n      );\n    }\n  }, {\n    name: _i18n.i18n.translate('xpack.monitoring.alerts.resolvedColumnTitle', {\n      defaultMessage: 'Resolved'\n    }),\n    field: 'resolved_timestamp',\n    sortable: true,\n    render: function render(resolvedTimestamp) {\n      var notResolvedLabel = _i18n.i18n.translate('xpack.monitoring.alerts.notResolvedDescription', {\n        defaultMessage: 'Not Resolved'\n      });\n\n      var resolution = {\n        icon: null,\n        text: notResolvedLabel\n      };\n\n      if (resolvedTimestamp) {\n        resolution.text = _i18n.i18n.translate('xpack.monitoring.alerts.resolvedAgoDescription', {\n          defaultMessage: '{duration} ago',\n          values: {\n            duration: (0, _common.formatTimestampToDuration)(resolvedTimestamp, _constants.CALCULATE_DURATION_SINCE)\n          }\n        });\n      } else {\n        resolution.icon = _react2.default.createElement(_eui.EuiIcon, { type: 'alert', size: 'm', 'aria-label': notResolvedLabel });\n      }\n\n      return _react2.default.createElement(\n        'span',\n        null,\n        resolution.icon,\n        ' ',\n        resolution.text\n      );\n    }\n  }, {\n    name: _i18n.i18n.translate('xpack.monitoring.alerts.messageColumnTitle', {\n      defaultMessage: 'Message'\n    }),\n    field: 'message',\n    sortable: true,\n    render: function render(message, alert) {\n      return _react2.default.createElement(_formatted_alert.FormattedAlert, {\n        prefix: alert.prefix,\n        suffix: alert.suffix,\n        message: message,\n        metadata: alert.metadata,\n        changeUrl: function changeUrl(target) {\n          scope.$evalAsync(function () {\n            kbnUrl.changePath(target);\n          });\n        }\n      });\n    }\n  }, {\n    name: _i18n.i18n.translate('xpack.monitoring.alerts.categoryColumnTitle', {\n      defaultMessage: 'Category'\n    }),\n    field: 'category',\n    sortable: true,\n    render: function render(link) {\n      return linkToCategories[link] ? linkToCategories[link] : _i18n.i18n.translate('xpack.monitoring.alerts.categoryColumn.generalLabel', {\n        defaultMessage: 'General'\n      });\n    }\n  }, {\n    name: _i18n.i18n.translate('xpack.monitoring.alerts.lastCheckedColumnTitle', {\n      defaultMessage: 'Last Checked'\n    }),\n    field: 'update_timestamp',\n    sortable: true,\n    render: function render(timestamp) {\n      return (0, _formatting.formatDateTimeLocal)(timestamp);\n    }\n  }, {\n    name: _i18n.i18n.translate('xpack.monitoring.alerts.triggeredColumnTitle', {\n      defaultMessage: 'Triggered'\n    }),\n    field: 'timestamp',\n    sortable: true,\n    render: function render(timestamp) {\n      return _i18n.i18n.translate('xpack.monitoring.alerts.triggeredColumnValue', {\n        defaultMessage: '{timestamp} ago',\n        values: {\n          timestamp: (0, _common.formatTimestampToDuration)(timestamp, _constants.CALCULATE_DURATION_SINCE)\n        }\n      });\n    }\n  }];\n};\n\nvar AlertsUI = function AlertsUI(_ref) {\n  var alerts = _ref.alerts,\n      angular = _ref.angular,\n      sorting = _ref.sorting,\n      pagination = _ref.pagination,\n      onTableChange = _ref.onTableChange,\n      intl = _ref.intl;\n\n  var alertsFlattened = alerts.map(function (alert) {\n    return _extends({}, alert, {\n      status: alert.metadata.severity,\n      category: alert.metadata.link\n    });\n  });\n\n  return _react2.default.createElement(_table.EuiMonitoringTable, {\n    className: 'alertsTable',\n    rows: alertsFlattened,\n    columns: getColumns(angular.kbnUrl, angular.scope),\n    sorting: _extends({}, sorting, {\n      sort: _extends({}, sorting.sort, {\n        field: 'status',\n        direction: _constants.EUI_SORT_DESCENDING\n      })\n    }),\n    pagination: pagination,\n    search: {\n      box: {\n        incremental: true,\n        placeholder: intl.formatMessage({\n          id: 'xpack.monitoring.alerts.filterAlertsPlaceholder',\n          defaultMessage: 'Filter Alertsâ€¦'\n        })\n\n      }\n    },\n    onTableChange: onTableChange,\n    executeQueryOptions: {\n      defaultFields: ['message', 'category']\n    }\n  });\n};\n\nvar Alerts = exports.Alerts = (0, _react3.injectI18n)(AlertsUI);",null]}