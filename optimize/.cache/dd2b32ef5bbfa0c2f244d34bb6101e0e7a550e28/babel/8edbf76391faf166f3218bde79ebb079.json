{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/packages/kbn-interpreter/target/common/lib/serialize.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/packages/kbn-interpreter/target/common/lib/serialize.js","mtime":1567666389710},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeProvider = serializeProvider;\n\nvar _lodash = require('lodash');\n\nvar _get_type = require('./get_type');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction serializeProvider(types) {\n  return {\n    serialize: provider('serialize'),\n    deserialize: provider('deserialize')\n  };\n\n  function provider(key) {\n    return function (context) {\n      var type = (0, _get_type.getType)(context);\n      var typeDef = types[type];\n      var fn = (0, _lodash.get)(typeDef, key) || _lodash.identity;\n      return fn(context);\n    };\n  }\n}",null]}