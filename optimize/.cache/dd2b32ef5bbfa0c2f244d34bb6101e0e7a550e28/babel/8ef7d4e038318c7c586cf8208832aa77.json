{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/remote_clusters/public/sections/remote_cluster_list/remote_cluster_list.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/remote_clusters/public/sections/remote_cluster_list/remote_cluster_list.js","mtime":1567631712123},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RemoteClusterList = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp; /*\n                    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                    * or more contributor license agreements. Licensed under the Elastic License;\n                    * you may not use this file except in compliance with the Elastic License.\n                    */\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _management = require('ui/management');\n\nvar _eui = require('@elastic/eui');\n\nvar _constants = require('../../constants');\n\nvar _services = require('../../services');\n\nvar _remote_cluster_table = require('./remote_cluster_table');\n\nvar _detail_panel = require('./detail_panel');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar REFRESH_RATE_MS = 30000;\n\nvar RemoteClusterList = exports.RemoteClusterList = (0, _react3.injectI18n)((_temp = _class = function (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      var _props = this.props,\n          openDetailPanel = _props.openDetailPanel,\n          closeDetailPanel = _props.closeDetailPanel,\n          isDetailPanelOpen = _props.isDetailPanelOpen,\n          search = _props.history.location.search;\n\n      var _extractQueryParams = (0, _services.extractQueryParams)(search),\n          clusterName = _extractQueryParams.cluster;\n\n      // Show deeplinked remoteCluster whenever remoteClusters get loaded or the URL changes.\n\n\n      if (clusterName != null) {\n        openDetailPanel(clusterName);\n      } else if (isDetailPanelOpen) {\n        closeDetailPanel();\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.loadClusters();\n      this.interval = setInterval(this.props.refreshClusters, REFRESH_RATE_MS);\n      _chrome2.default.breadcrumbs.set([_management.MANAGEMENT_BREADCRUMB, _services.listBreadcrumb]);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: 'getHeaderSection',\n    value: function getHeaderSection(isAuthorized) {\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPageContentHeader,\n          null,\n          _react2.default.createElement(\n            _eui.EuiPageContentHeaderSection,\n            null,\n            _react2.default.createElement(\n              _eui.EuiTitle,\n              { size: 'l' },\n              _react2.default.createElement(\n                'h1',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.remoteClusters.remoteClusterListTitle',\n                  defaultMessage: 'Remote clusters'\n                })\n              )\n            )\n          ),\n          isAuthorized && _react2.default.createElement(\n            _eui.EuiPageContentHeaderSection,\n            null,\n            _react2.default.createElement(\n              _eui.EuiButton,\n              _extends({}, (0, _services.getRouterLinkProps)(_constants.CRUD_APP_BASE_PATH + '/add'), {\n                fill: true\n              }),\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.remoteClusters.remoteClusterList.connectButtonLabel',\n                defaultMessage: 'Add a remote cluster'\n              })\n            )\n          )\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'm' })\n      );\n    }\n  }, {\n    key: 'renderBlockingAction',\n    value: function renderBlockingAction() {\n      var _props2 = this.props,\n          isCopyingCluster = _props2.isCopyingCluster,\n          isRemovingCluster = _props2.isRemovingCluster;\n\n\n      if (isCopyingCluster || isRemovingCluster) {\n        return _react2.default.createElement(\n          _eui.EuiOverlayMask,\n          null,\n          _react2.default.createElement(_eui.EuiLoadingKibana, { size: 'xl' })\n        );\n      }\n\n      return null;\n    }\n  }, {\n    key: 'renderNoPermission',\n    value: function renderNoPermission() {\n      var intl = this.props.intl;\n\n      var title = intl.formatMessage({\n        id: 'xpack.remoteClusters.remoteClusterList.noPermissionTitle',\n        defaultMessage: 'Permission error'\n      });\n      return _react2.default.createElement(\n        _eui.EuiCallOut,\n        {\n          title: title,\n          color: 'warning',\n          iconType: 'help'\n        },\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.remoteClusters.remoteClusterList.noPermissionText',\n          defaultMessage: 'You do not have permission to view or add remote clusters.'\n        })\n      );\n    }\n  }, {\n    key: 'renderError',\n    value: function renderError(error) {\n      // We can safely depend upon the shape of this error coming from Angular $http, because we\n      // handle unexpected error shapes in the API action.\n      var _error$data = error.data,\n          statusCode = _error$data.statusCode,\n          errorString = _error$data.error;\n      var intl = this.props.intl;\n\n      var title = intl.formatMessage({\n        id: 'xpack.remoteClusters.remoteClusterList.loadingErrorTitle',\n        defaultMessage: 'Error loading remote clusters'\n      });\n      return _react2.default.createElement(\n        _eui.EuiCallOut,\n        {\n          title: title,\n          color: 'danger',\n          iconType: 'alert'\n        },\n        statusCode,\n        ' ',\n        errorString\n      );\n    }\n  }, {\n    key: 'renderEmpty',\n    value: function renderEmpty() {\n      return _react2.default.createElement(_eui.EuiEmptyPrompt, {\n        'data-test-subj': 'remoteClusterListEmptyPrompt',\n        iconType: 'managementApp',\n        title: _react2.default.createElement(\n          'h1',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.remoteClusters.remoteClusterList.emptyPromptTitle',\n            defaultMessage: 'Add your first remote cluster'\n          })\n        ),\n        body: _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.remoteClusters.remoteClusterList.emptyPromptDescription',\n              defaultMessage: 'Remote clusters create a uni-directional connection from your local cluster to other clusters.'\n            })\n          )\n        ),\n        actions: _react2.default.createElement(\n          _eui.EuiButton,\n          _extends({}, (0, _services.getRouterLinkProps)(_constants.CRUD_APP_BASE_PATH + '/add'), {\n            fill: true,\n            iconType: 'plusInCircle'\n          }),\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.remoteClusters.remoteClusterList.emptyPrompt.connectButtonLabel',\n            defaultMessage: 'Add a remote cluster'\n          })\n        )\n      });\n    }\n  }, {\n    key: 'renderLoading',\n    value: function renderLoading() {\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        {\n          justifyContent: 'flexStart',\n          alignItems: 'center',\n          gutterSize: 's'\n        },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(_eui.EuiLoadingSpinner, { size: 'm' })\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiText,\n            null,\n            _react2.default.createElement(\n              _eui.EuiTextColor,\n              { color: 'subdued' },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.remoteClusters.remoteClusterList.loadingTitle',\n                defaultMessage: 'Loading remote clusters...'\n              })\n            )\n          )\n        )\n      );\n    }\n  }, {\n    key: 'renderList',\n    value: function renderList() {\n      var clusters = this.props.clusters;\n\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(_remote_cluster_table.RemoteClusterTable, { clusters: clusters }),\n        _react2.default.createElement(_detail_panel.DetailPanel, null)\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          isLoading = _props3.isLoading,\n          clusters = _props3.clusters,\n          clusterLoadError = _props3.clusterLoadError;\n\n      var isEmpty = !isLoading && !clusters.length;\n      var isAuthorized = !clusterLoadError || clusterLoadError.status !== 403;\n      var isHeaderVisible = clusterLoadError || !isEmpty;\n\n      var content = void 0;\n\n      if (clusterLoadError) {\n        if (!isAuthorized) {\n          content = this.renderNoPermission();\n        } else {\n          content = this.renderError(clusterLoadError);\n        }\n      } else if (isEmpty) {\n        content = this.renderEmpty();\n      } else if (isLoading) {\n        content = this.renderLoading();\n      } else {\n        content = this.renderList();\n      }\n\n      return _react2.default.createElement(\n        _eui.EuiPageBody,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPageContent,\n          null,\n          isHeaderVisible && this.getHeaderSection(isAuthorized),\n          content,\n          this.renderBlockingAction()\n        )\n      );\n    }\n  }]);\n\n  return _class;\n}(_react.Component), _class.propTypes = {\n  loadClusters: _propTypes2.default.func.isRequired,\n  refreshClusters: _propTypes2.default.func.isRequired,\n  openDetailPanel: _propTypes2.default.func.isRequired,\n  closeDetailPanel: _propTypes2.default.func.isRequired,\n  isDetailPanelOpen: _propTypes2.default.bool,\n  clusters: _propTypes2.default.array,\n  isLoading: _propTypes2.default.bool,\n  isCopyingCluster: _propTypes2.default.bool,\n  isRemovingCluster: _propTypes2.default.bool\n}, _temp));",null]}