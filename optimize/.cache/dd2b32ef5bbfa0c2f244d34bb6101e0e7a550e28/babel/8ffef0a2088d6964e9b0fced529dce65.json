{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/expression_types/arg.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/expression_types/arg.js","mtime":1567631711930},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Arg = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _react = require('react');\n\nvar _lodash = require('lodash');\n\nvar _arg_form = require('../components/arg_form');\n\nvar _arg_type = require('./arg_type');\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Arg = exports.Arg = function () {\n  function Arg(props) {\n    _classCallCheck(this, Arg);\n\n    var argType = _arg_type.argTypeRegistry.get(props.argType);\n    if (!argType) {\n      throw new Error('Invalid arg type: ' + props.argType);\n    }\n    if (!props.name) {\n      throw new Error('Args must have a name property');\n    }\n\n    // properties that can be overridden\n    var defaultProps = {\n      multi: false,\n      required: false,\n      types: [],\n      default: argType.default != null ? argType.default : null,\n      options: {},\n      resolve: function resolve() {\n        return {};\n      }\n    };\n\n    var viewOverrides = _extends({\n      argType: argType\n    }, (0, _lodash.pick)(props, ['name', 'displayName', 'help', 'multi', 'required', 'types', 'default', 'resolve', 'options']));\n\n    Object.assign(this, defaultProps, argType, viewOverrides);\n  }\n\n  // TODO: Document what these otherProps are. Maybe make them named arguments?\n\n\n  _createClass(Arg, [{\n    key: 'render',\n    value: function render(_ref) {\n      var onValueChange = _ref.onValueChange,\n          onValueRemove = _ref.onValueRemove,\n          argValue = _ref.argValue,\n          key = _ref.key,\n          label = _ref.label,\n          otherProps = _objectWithoutProperties(_ref, ['onValueChange', 'onValueRemove', 'argValue', 'key', 'label']);\n\n      // This is everything the arg_type template needs to render\n      var templateProps = _extends({}, otherProps, this.resolve(otherProps), {\n        onValueChange: onValueChange,\n        argValue: argValue,\n        typeInstance: this\n      });\n\n      var formProps = {\n        key: key,\n        argTypeInstance: this,\n        valueMissing: this.required && argValue == null,\n        label: label,\n        onValueChange: onValueChange,\n        onValueRemove: onValueRemove,\n        templateProps: templateProps,\n        argId: key\n      };\n\n      return (0, _react.createElement)(_arg_form.ArgForm, formProps);\n    }\n  }]);\n\n  return Arg;\n}();",null]}