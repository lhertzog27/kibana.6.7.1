{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/vislib/components/zero_injection/uniq_keys.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vislib/components/zero_injection/uniq_keys.js","mtime":1567631711777},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                   * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                   * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                   * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                   * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                   * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                   * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                   * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                   * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                   * under the License.\n                                                                                                                                                                                                                                                                   */\n\nexports.VislibComponentsZeroInjectionUniqKeysProvider = VislibComponentsZeroInjectionUniqKeysProvider;\n\nvar _lodash = require('lodash');\n\nvar _flatten_data = require('./flatten_data');\n\nfunction VislibComponentsZeroInjectionUniqKeysProvider(Private) {\n\n  var flattenDataArray = Private(_flatten_data.VislibComponentsZeroInjectionFlattenDataProvider);\n\n  /*\n   * Accepts a Kibana data object.\n   * Returns an object with unique x axis values as keys with an object of\n   * their index numbers and an isNumber boolean as their values.\n   * e.g. { 'xAxisValue': { index: 1, isNumber: false }}, ...\n   */\n\n  return function (obj) {\n    if (!(0, _lodash.isObject)(obj)) {\n      throw new TypeError('UniqueXValuesUtilService expects an object');\n    }\n\n    var flattenedData = flattenDataArray(obj);\n    var uniqueXValues = new Map();\n\n    var charts = void 0;\n    if (!obj.series) {\n      charts = obj.rows ? obj.rows : obj.columns;\n    } else {\n      charts = [obj];\n    }\n\n    var isDate = charts.every(function (chart) {\n      return chart.ordered && chart.ordered.date;\n    });\n\n    var isOrdered = charts.every(function (chart) {\n      return chart.ordered;\n    });\n\n    var initXValue = function initXValue(key, index) {\n      uniqueXValues.set(key, {\n        index: index,\n        isDate: isDate,\n        isOrdered: isOrdered,\n        isNumber: (0, _lodash.isNumber)(key),\n        sum: 0\n      });\n    };\n\n    // Populate `uniqueXValues` with the preserved x key order from the\n    // original tabified data. `flattenedData` only contains the first\n    // non-zero values in each series, and therefore is not guaranteed\n    // to match the order that came back from ES.\n    if (obj.xAxisOrderedValues) {\n      obj.xAxisOrderedValues.forEach(initXValue);\n    }\n\n    // Generate a sum for each value\n    flattenedData.forEach(function (d) {\n      var key = d.x;\n      var prev = uniqueXValues.get(key);\n      if (!prev) {\n        // Value doesn't exist in xAxisOrderedValues, so we create it\n        // and index it at the end.\n        initXValue(key, uniqueXValues.size);\n        prev = uniqueXValues.get(key);\n      }\n      uniqueXValues.set(key, _extends({}, prev, {\n        sum: prev.sum + d.y\n      }));\n    });\n\n    return uniqueXValues;\n  };\n}",null]}