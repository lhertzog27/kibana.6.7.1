{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/renderers/plot/plugins/text.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/renderers/plot/plugins/text.js","mtime":1567631711904},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.text = undefined;\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _lodash = require('lodash');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n  FreeBSD-License\n*/\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar options = {\n  numbers: {}\n};\n\nvar xAlign = function xAlign(x) {\n  return x;\n};\nvar yAlign = function yAlign(y) {\n  return y;\n};\n//const horizontalShift = 1;\n\nfunction processOptions() /*plot, options*/{\n  // Nothing\n}\n\nfunction draw(plot, ctx) {\n  (0, _jquery2.default)('.valueLabel', plot.getPlaceholder()).remove();\n  plot.getData().forEach(function (series) {\n    var show = (0, _lodash.get)(series.numbers, 'show');\n    if (!show) {\n      return;\n    }\n\n    var points = series.data;\n\n    // TODO: This might only work on single x and y axis charts.\n    if (series.stack != null) {\n      points = points.map(function (point, i) {\n        var p = point.slice(0);\n\n        // This magic * 3 and + 1 are due to the way the stacking plugin for flot modifies the series.\n        // Note that series.data and series.datapoints.point are different, both in meaning and in format\n        // series.data is the original data supplied by the user\n        // series.datapoints.point are the calculated points made as result of data processing.\n        p[1] = series.datapoints.points[i * 3 + 1];\n        return p;\n      });\n    }\n\n    var offset = plot.getPlotOffset();\n    ctx.save();\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'center';\n\n    function writeText(text, x, y) {\n      if (typeof text === 'undefined') {\n        return;\n      }\n      var textNode = (0, _jquery2.default)('<div/>').text(String(text)).addClass('valueLabel').css({\n        position: 'absolute'\n      });\n\n      plot.getPlaceholder().append(textNode);\n\n      textNode.css({\n        left: x - textNode.width() / 2,\n        top: y - textNode.height() / 2\n      });\n    }\n\n    for (var i = 0; i < points.length; i++) {\n      var point = {\n        x: xAlign(points[i][0]),\n        y: yAlign(points[i][1]) // Need to calculate here.\n      };\n\n      var _text = points[i][2].text;\n      var c = plot.p2c(point);\n      writeText(_text, c.left + offset.left, c.top + offset.top + 1);\n    }\n\n    ctx.restore();\n  });\n}\n\nfunction init(plot) {\n  plot.hooks.processOptions.push(processOptions);\n  plot.hooks.draw.push(draw);\n}\n\nvar text = exports.text = {\n  init: init,\n  options: options,\n  name: 'text',\n  version: '0.1.0'\n};",null]}