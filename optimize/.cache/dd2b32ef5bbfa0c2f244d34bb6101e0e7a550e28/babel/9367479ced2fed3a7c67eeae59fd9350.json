{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/recognize/create_job/create_job_service.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/recognize/create_job/create_job_service.js","mtime":1567631712059},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nexports.CreateRecognizerJobsServiceProvider = CreateRecognizerJobsServiceProvider;\n\nvar _saved_objects = require('ui/saved_objects');\n\nvar _job_service = require('plugins/ml/services/job_service');\n\nvar _ml_api_service = require('plugins/ml/services/ml_api_service');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction CreateRecognizerJobsServiceProvider(Private) {\n\n  var savedObjectsClient = Private(_saved_objects.SavedObjectsClientProvider);\n\n  var CreateRecognizerJobsService = function () {\n    function CreateRecognizerJobsService() {\n      _classCallCheck(this, CreateRecognizerJobsService);\n    }\n\n    _createClass(CreateRecognizerJobsService, [{\n      key: 'createDatafeed',\n      value: function createDatafeed(job, formConfig) {\n        return new Promise(function (resolve, reject) {\n          var jobId = formConfig.jobLabel + job.id;\n\n          _job_service.mlJobService.saveNewDatafeed(job.datafeedConfig, jobId).then(function (resp) {\n            resolve(resp);\n          }).catch(function (resp) {\n            reject(resp);\n          });\n        });\n      }\n    }, {\n      key: 'startDatafeed',\n      value: function startDatafeed(datafeedId, jobId, start, end) {\n        return _job_service.mlJobService.startDatafeed(datafeedId, jobId, start, end);\n      }\n    }, {\n      key: 'loadExistingSavedObjects',\n      value: function loadExistingSavedObjects(type) {\n        return savedObjectsClient.find({ type: type, perPage: 1000 });\n      }\n    }, {\n      key: 'indexTimeRange',\n      value: function indexTimeRange(indexPattern, formConfig) {\n        var query = formConfig.combinedQuery;\n        return _ml_api_service.ml.getTimeFieldRange({\n          index: indexPattern.title,\n          timeFieldName: indexPattern.timeFieldName,\n          query: query\n        });\n      }\n    }]);\n\n    return CreateRecognizerJobsService;\n  }();\n\n  return new CreateRecognizerJobsService();\n}",null]}