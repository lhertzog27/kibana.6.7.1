{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/viewport/dashboard_viewport.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/viewport/dashboard_viewport.js","mtime":1567631711562},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DashboardViewport = DashboardViewport;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _grid = require('../grid');\n\nvar _exit_full_screen = require('ui/exit_full_screen');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction DashboardViewport(_ref) {\n  var maximizedPanelId = _ref.maximizedPanelId,\n      getEmbeddableFactory = _ref.getEmbeddableFactory,\n      panelCount = _ref.panelCount,\n      title = _ref.title,\n      description = _ref.description,\n      useMargins = _ref.useMargins,\n      isFullScreenMode = _ref.isFullScreenMode,\n      onExitFullScreenMode = _ref.onExitFullScreenMode;\n\n  return _react2.default.createElement(\n    'div',\n    {\n      'data-shared-items-count': panelCount,\n      'data-shared-items-container': true,\n      'data-title': title,\n      'data-description': description,\n      className: useMargins ? 'dshDashboardViewport-withMargins' : 'dshDashboardViewport'\n    },\n    isFullScreenMode && _react2.default.createElement(_exit_full_screen.ExitFullScreenButton, { onExitFullScreenMode: onExitFullScreenMode }),\n    _react2.default.createElement(_grid.DashboardGrid, {\n      getEmbeddableFactory: getEmbeddableFactory,\n      maximizedPanelId: maximizedPanelId\n    })\n  );\n}\n\nDashboardViewport.propTypes = {\n  getEmbeddableFactory: _propTypes2.default.func,\n  maximizedPanelId: _propTypes2.default.string,\n  panelCount: _propTypes2.default.number,\n  title: _propTypes2.default.string,\n  description: _propTypes2.default.string,\n  useMargins: _propTypes2.default.bool.isRequired\n};",null]}