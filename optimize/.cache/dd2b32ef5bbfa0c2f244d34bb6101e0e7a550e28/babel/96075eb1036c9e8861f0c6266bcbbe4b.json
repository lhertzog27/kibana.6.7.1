{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/index_patterns/components/index_pattern_select.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/index_patterns/components/index_pattern_select.js","mtime":1567631711738},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexPatternSelect = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * software distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar getIndexPatterns = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(search, fields) {\n    var resp;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _chrome2.default.getSavedObjectsClient().find({\n              type: 'index-pattern',\n              fields: fields,\n              search: search + '*',\n              search_fields: ['title'],\n              perPage: 100\n            });\n\n          case 2:\n            resp = _context.sent;\n            return _context.abrupt('return', resp.savedObjects);\n\n          case 4:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function getIndexPatterns(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getIndexPatternTitle = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(indexPatternId) {\n    var savedObject;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _chrome2.default.getSavedObjectsClient().get('index-pattern', indexPatternId);\n\n          case 2:\n            savedObject = _context2.sent;\n\n            if (!savedObject.error) {\n              _context2.next = 5;\n              break;\n            }\n\n            throw new Error('Unable to get index-pattern title: ' + savedObject.error.message);\n\n          case 5:\n            return _context2.abrupt('return', savedObject.attributes.title);\n\n          case 6:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  }));\n\n  return function getIndexPatternTitle(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar IndexPatternSelect = exports.IndexPatternSelect = function (_Component) {\n  _inherits(IndexPatternSelect, _Component);\n\n  function IndexPatternSelect(props) {\n    var _this2 = this;\n\n    _classCallCheck(this, IndexPatternSelect);\n\n    var _this = _possibleConstructorReturn(this, (IndexPatternSelect.__proto__ || Object.getPrototypeOf(IndexPatternSelect)).call(this, props));\n\n    _this.fetchSelectedIndexPattern = function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(indexPatternId) {\n        var indexPatternTitle;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (indexPatternId) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                _this.setState({\n                  selectedIndexPattern: undefined\n                });\n                return _context3.abrupt('return');\n\n              case 3:\n                indexPatternTitle = void 0;\n                _context3.prev = 4;\n                _context3.next = 7;\n                return getIndexPatternTitle(indexPatternId);\n\n              case 7:\n                indexPatternTitle = _context3.sent;\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3['catch'](4);\n                return _context3.abrupt('return');\n\n              case 13:\n                if (_this._isMounted) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                return _context3.abrupt('return');\n\n              case 15:\n\n                _this.setState({\n                  selectedIndexPattern: {\n                    value: indexPatternId,\n                    label: indexPatternTitle\n                  }\n                });\n\n              case 16:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, _this2, [[4, 10]]);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.debouncedFetch = _lodash2.default.debounce(function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(searchValue) {\n        var _this$props, fieldTypes, onNoIndexPatterns, savedObjectFields, savedObjects, options;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this$props = _this.props, fieldTypes = _this$props.fieldTypes, onNoIndexPatterns = _this$props.onNoIndexPatterns;\n                savedObjectFields = ['title'];\n\n                if (fieldTypes) {\n                  savedObjectFields.push('fields');\n                }\n                _context4.next = 5;\n                return getIndexPatterns(searchValue, savedObjectFields);\n\n              case 5:\n                savedObjects = _context4.sent;\n\n\n                if (fieldTypes) {\n                  savedObjects = savedObjects.filter(function (savedObject) {\n                    try {\n                      var indexPatternFields = JSON.parse(savedObject.attributes.fields);\n                      return indexPatternFields.some(function (_ref5) {\n                        var type = _ref5.type;\n\n                        return fieldTypes.includes(type);\n                      });\n                    } catch (err) {\n                      // Unable to parse fields JSON, invalid index pattern\n                      return false;\n                    }\n                  });\n                }\n\n                if (_this._isMounted) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                return _context4.abrupt('return');\n\n              case 9:\n\n                // We need this check to handle the case where search results come back in a different\n                // order than they were sent out. Only load results for the most recent search.\n                if (searchValue === _this.state.searchValue) {\n                  options = savedObjects.map(function (indexPatternSavedObject) {\n                    return {\n                      label: indexPatternSavedObject.attributes.title,\n                      value: indexPatternSavedObject.id\n                    };\n                  });\n\n                  _this.setState({\n                    isLoading: false,\n                    options: options\n                  });\n\n                  if (onNoIndexPatterns && searchValue === '' && options.length === 0) {\n                    onNoIndexPatterns();\n                  }\n                }\n\n              case 10:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, _this2);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }(), 300);\n\n    _this.fetchOptions = function () {\n      var searchValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      _this.setState({\n        isLoading: true,\n        searchValue: searchValue\n      }, _this.debouncedFetch.bind(null, searchValue));\n    };\n\n    _this.onChange = function (selectedOptions) {\n      _this.props.onChange(_lodash2.default.get(selectedOptions, '0.value'));\n    };\n\n    _this.state = {\n      isLoading: false,\n      options: [],\n      selectedIndexPattern: undefined,\n      searchValue: undefined\n    };\n    return _this;\n  }\n\n  _createClass(IndexPatternSelect, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.debouncedFetch.cancel();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.fetchOptions();\n      this.fetchSelectedIndexPattern(this.props.indexPatternId);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.indexPatternId !== this.props.indexPatternId) {\n        this.fetchSelectedIndexPattern(nextProps.indexPatternId);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          fieldTypes = _props.fieldTypes,\n          onChange = _props.onChange,\n          indexPatternId = _props.indexPatternId,\n          placeholder = _props.placeholder,\n          onNoIndexPatterns = _props.onNoIndexPatterns,\n          rest = _objectWithoutProperties(_props, ['fieldTypes', 'onChange', 'indexPatternId', 'placeholder', 'onNoIndexPatterns']);\n\n      return _react2.default.createElement(_eui.EuiComboBox, _extends({\n        placeholder: placeholder,\n        singleSelection: true,\n        isLoading: this.state.isLoading,\n        onSearchChange: this.fetchOptions,\n        options: this.state.options,\n        selectedOptions: this.state.selectedIndexPattern ? [this.state.selectedIndexPattern] : [],\n        onChange: this.onChange\n      }, rest));\n    }\n  }]);\n\n  return IndexPatternSelect;\n}(_react.Component);\n\nIndexPatternSelect.propTypes = {\n  onChange: _propTypes2.default.func.isRequired,\n  indexPatternId: _propTypes2.default.string,\n  placeholder: _propTypes2.default.string,\n  /**\n   * Filter index patterns to only those that include the field types\n   */\n  fieldTypes: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  /**\n   * Callback called when there are no Kibana index patterns (or none that match the field types filter).\n   * Does not get called when user provided index pattern title search does match any index patterns.\n   */\n  onNoIndexPatterns: _propTypes2.default.func\n};",null]}