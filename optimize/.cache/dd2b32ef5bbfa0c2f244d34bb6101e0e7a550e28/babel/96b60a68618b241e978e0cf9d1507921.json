{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/lib/format_number.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/lib/format_number.js","mtime":1567631712098},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatBytesUsage = formatBytesUsage;\nexports.formatPercentageUsage = formatPercentageUsage;\nexports.formatNumber = formatNumber;\nexports.formatMetric = formatMetric;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nrequire('moment-duration-format');\n\nvar _numeral = require('@elastic/numeral');\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction formatBytesUsage(used, max) {\n  return formatNumber(used, 'byte') + ' / ' + formatNumber(max, 'byte');\n}\n\nfunction formatPercentageUsage(used, max) {\n  return formatNumber(used / max, '0.00%');\n}\n\nfunction formatNumber(num, which) {\n  var isNan = Number.isNaN(num);\n  var format = '0,0.0';\n  if (typeof num !== 'number' || isNan) {\n    if (num !== undefined && !isNan) {\n      return num; // strings such as 'N/A' stay untouched\n    }\n    num = 0;\n    format = '0'; // NaN/undefined becomes '0' not '0.0'\n  }\n  var postfix = '';\n  switch (which) {\n    case 'time_since':\n      return (0, _moment2.default)((0, _moment2.default)() - num).from((0, _moment2.default)(), true);\n    case 'time':\n      return (0, _moment2.default)(num).format('H:mm:ss');\n    case 'int_commas':\n      format = '0,0';\n      break;\n    case 'byte':\n    case 'bytes':\n      format += ' b';\n      break;\n    case 'ms':\n      postfix = 'ms';\n      break;\n    default:\n      if (which) {\n        format = which;\n      }\n  }\n  return (0, _numeral2.default)(num).format(format) + postfix;\n}\n\nfunction formatMetric(value, format, suffix) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$prependSpace = options.prependSpace,\n      prependSpace = _options$prependSpace === undefined ? true : _options$prependSpace;\n\n  if (Boolean(value) || value === 0) {\n    var _suffix = '';\n    if (suffix !== undefined) {\n      if (prependSpace) {\n        _suffix = ' ' + suffix;\n      } else {\n        _suffix = suffix;\n      }\n    }\n    return formatNumber(value, format) + _suffix;\n  }\n  return _i18n.i18n.translate('xpack.monitoring.formatNumbers.notAvailableLabel', { defaultMessage: 'N/A' });\n}",null]}