{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/es.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/es.js","mtime":1567631691126},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVersion = getVersion;\nexports.getContentType = getContentType;\nexports.send = send;\nexports.constructESUrl = constructESUrl;\n\nvar _querystring = require('querystring');\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar esVersion = [];\n\nfunction getVersion() {\n  return esVersion;\n}\n\nfunction getContentType(body) {\n  if (!body) return;\n  return 'application/json';\n}\n\nfunction send(method, path, data) {\n  var wrappedDfd = _jquery2.default.Deferred(); // eslint-disable-line new-cap\n\n  var isGetRequest = /^get$/i.test(method);\n  if (data && isGetRequest) {\n    method = 'POST';\n  }\n\n  var options = {\n    url: '../api/console/proxy?' + (0, _querystring.stringify)({ path: path, method: method }),\n    data: data,\n    contentType: getContentType(data),\n    cache: false,\n    crossDomain: true,\n    type: 'POST',\n    dataType: 'text' // disable automatic guessing\n  };\n\n  _jquery2.default.ajax(options).then(function (data, textStatus, jqXHR) {\n    wrappedDfd.resolveWith(this, [data, textStatus, jqXHR]);\n  }, function (jqXHR, textStatus, errorThrown) {\n    if (jqXHR.status === 0) {\n      jqXHR.responseText = '\\n\\nFailed to connect to Console\\'s backend.\\nPlease check the Kibana server is up and running';\n    }\n    wrappedDfd.rejectWith(this, [jqXHR, textStatus, errorThrown]);\n  });\n  return wrappedDfd;\n}\n\nfunction constructESUrl(baseUri, path) {\n  baseUri = baseUri.replace(/\\/+$/, '');\n  path = path.replace(/^\\/+/, '');\n  return baseUri + '/' + path;\n}",null]}