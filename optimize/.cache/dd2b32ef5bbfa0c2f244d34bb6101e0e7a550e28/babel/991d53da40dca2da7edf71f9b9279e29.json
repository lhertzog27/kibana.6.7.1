{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/models/watch/lib/create_action_id/create_action_id.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/models/watch/lib/create_action_id/create_action_id.js","mtime":1567631712345},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createActionId = createActionId;\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction createActionId(actions, type) {\n  var existingIds = actions.map(function (action) {\n    return action.id;\n  });\n\n  var nextValidIncrement = 1;\n  var nextValidId = undefined;\n  while (nextValidId === undefined) {\n    var proposedId = type + \"_\" + nextValidIncrement;\n    if (!existingIds.includes(proposedId)) {\n      nextValidId = proposedId;\n    } else {\n      nextValidIncrement++;\n    }\n  }\n\n  return nextValidId;\n}",null]}