{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/vis_types/timeseries/vis.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/vis_types/timeseries/vis.js","mtime":1567631711630},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _notify = require('ui/notify');\n\nvar _markdown = require('ui/markdown');\n\nvar _tick_formatter = require('../../lib/tick_formatter');\n\nvar _tick_formatter2 = _interopRequireDefault(_tick_formatter);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _timeseries = require('../../../visualizations/components/timeseries');\n\nvar _timeseries2 = _interopRequireDefault(_timeseries);\n\nvar _color = require('color');\n\nvar _color2 = _interopRequireDefault(_color);\n\nvar _replace_vars = require('../../lib/replace_vars');\n\nvar _replace_vars2 = _interopRequireDefault(_replace_vars);\n\nvar _get_axis_label_string = require('../../lib/get_axis_label_string');\n\nvar _create_xaxis_formatter = require('../../lib/create_xaxis_formatter');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction hasSeparateAxis(row) {\n  return row.separate_axis;\n}\n\nvar TimeseriesVisualization = function (_Component) {\n  _inherits(TimeseriesVisualization, _Component);\n\n  function TimeseriesVisualization(props) {\n    _classCallCheck(this, TimeseriesVisualization);\n\n    var _this = _possibleConstructorReturn(this, (TimeseriesVisualization.__proto__ || Object.getPrototypeOf(TimeseriesVisualization)).call(this, props));\n\n    _this.getInterval = function () {\n      var _this$props = _this.props,\n          visData = _this$props.visData,\n          model = _this$props.model;\n\n      var series = _lodash2.default.get(visData, model.id + '.series', []);\n      return series.reduce(function (currentInterval, item) {\n        if (item.data.length > 1) {\n          var seriesInterval = item.data[1][0] - item.data[0][0];\n          if (!currentInterval || seriesInterval < currentInterval) return seriesInterval;\n        }\n        return currentInterval;\n      }, 0);\n    };\n\n    _this.xaxisFormatter = function (val) {\n      var _this$props$visData = _this.props.visData,\n          scaledDataFormat = _this$props$visData.scaledDataFormat,\n          dateFormat = _this$props$visData.dateFormat;\n\n      if (!scaledDataFormat || !dateFormat) return val;\n      var formatter = (0, _create_xaxis_formatter.createXaxisFormatter)(_this.getInterval(), scaledDataFormat, dateFormat);\n      return formatter(val);\n    };\n\n    return _this;\n  }\n\n  _createClass(TimeseriesVisualization, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (this.showToastNotification && this.notificationReason !== this.showToastNotification.reason) {\n        if (this.notification) {\n          _notify.toastNotifications.remove(this.notification);\n        }\n\n        this.notificationReason = this.showToastNotification.reason;\n        this.notification = _notify.toastNotifications.addDanger({\n          title: this.showToastNotification.title,\n          text: _react2.default.createElement(\n            _markdown.MarkdownSimple,\n            null,\n            this.showToastNotification.reason\n          )\n        });\n      }\n\n      if (!this.showToastNotification && this.notification) {\n        _notify.toastNotifications.remove(this.notification);\n        this.notificationReason = null;\n        this.notification = null;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          backgroundColor = _props.backgroundColor,\n          model = _props.model,\n          visData = _props.visData;\n\n      var series = _lodash2.default.get(visData, model.id + '.series', []);\n      var annotations = void 0;\n\n      this.showToastNotification = null;\n\n      if (model.annotations && Array.isArray(model.annotations)) {\n        annotations = model.annotations.map(function (annotation) {\n          var data = _lodash2.default.get(visData, model.id + '.annotations.' + annotation.id, []).map(function (item) {\n            return [item.key, item.docs];\n          });\n          return {\n            id: annotation.id,\n            color: annotation.color,\n            icon: annotation.icon,\n            series: data.map(function (s) {\n              return [s[0], s[1].map(function (doc) {\n                var vars = (0, _replace_vars2.default)(annotation.template, null, doc);\n\n                if (vars instanceof Error) {\n                  _this2.showToastNotification = vars.error.caused_by;\n\n                  return annotation.template;\n                }\n\n                return vars;\n              })];\n            })\n          };\n        });\n      }\n      var seriesModel = model.series.map(function (s) {\n        return _lodash2.default.cloneDeep(s);\n      });\n      var firstSeries = seriesModel.find(function (s) {\n        return s.formatter && !s.separate_axis;\n      });\n      var formatter = (0, _tick_formatter2.default)(_lodash2.default.get(firstSeries, 'formatter'), _lodash2.default.get(firstSeries, 'value_template'), this.props.getConfig);\n\n      var mainAxis = {\n        position: model.axis_position,\n        tickFormatter: formatter,\n        axisFormatter: _lodash2.default.get(firstSeries, 'formatter', 'number'),\n        axisFormatterTemplate: _lodash2.default.get(firstSeries, 'value_template')\n      };\n\n      if (model.axis_min) mainAxis.min = model.axis_min;\n      if (model.axis_max) mainAxis.max = model.axis_max;\n      if (model.axis_scale === 'log') {\n        mainAxis.mode = 'log';\n        mainAxis.transform = function (value) {\n          return value > 0 ? Math.log(value) / Math.LN10 : null;\n        };\n        mainAxis.inverseTransform = function (value) {\n          return Math.pow(10, value);\n        };\n      }\n\n      var yaxes = [mainAxis];\n\n      seriesModel.forEach(function (s) {\n        series.filter(function (r) {\n          return _lodash2.default.startsWith(r.id, s.id);\n        }).forEach(function (r) {\n          return r.tickFormatter = (0, _tick_formatter2.default)(s.formatter, s.value_template, _this2.props.getConfig);\n        });\n\n        if (s.hide_in_legend) {\n          series.filter(function (r) {\n            return _lodash2.default.startsWith(r.id, s.id);\n          }).forEach(function (r) {\n            return delete r.label;\n          });\n        }\n        if (s.stacked !== 'none') {\n          series.filter(function (r) {\n            return _lodash2.default.startsWith(r.id, s.id);\n          }).forEach(function (row) {\n            row.data = row.data.map(function (point) {\n              if (!point[1]) return [point[0], 0];\n              return point;\n            });\n          });\n        }\n        if (s.stacked === 'percent') {\n          s.separate_axis = true;\n          s.axisFormatter = 'percent';\n          s.axis_min = 0;\n          s.axis_max = 1;\n          s.axis_position = model.axis_position;\n          var seriesData = series.filter(function (r) {\n            return _lodash2.default.startsWith(r.id, s.id);\n          });\n          var first = seriesData[0];\n          if (first) {\n            first.data.forEach(function (row, index) {\n              var rowSum = seriesData.reduce(function (acc, item) {\n                return item.data[index][1] + acc;\n              }, 0);\n              seriesData.forEach(function (item) {\n                item.data[index][1] = rowSum && item.data[index][1] / rowSum || 0;\n              });\n            });\n          }\n        }\n      });\n\n      var interval = this.getInterval();\n\n      var axisCount = 1;\n      if (seriesModel.some(hasSeparateAxis)) {\n        seriesModel.forEach(function (row) {\n          if (row.separate_axis) {\n            axisCount++;\n\n            var _formatter = (0, _tick_formatter2.default)(row.formatter, row.value_template, _this2.props.getConfig);\n\n            var yaxis = {\n              alignTicksWithAxis: 1,\n              position: row.axis_position,\n              tickFormatter: _formatter,\n              axisFormatter: row.axis_formatter,\n              axisFormatterTemplate: row.value_template\n            };\n\n            if (row.axis_min != null) yaxis.min = row.axis_min;\n            if (row.axis_max != null) yaxis.max = row.axis_max;\n\n            yaxes.push(yaxis);\n\n            // Assign axis and formatter to each series\n            series.filter(function (r) {\n              return _lodash2.default.startsWith(r.id, row.id);\n            }).forEach(function (r) {\n              r.yaxis = axisCount;\n            });\n          }\n        });\n      }\n\n      var params = {\n        dateFormat: this.props.dateFormat,\n        crosshair: true,\n        tickFormatter: formatter,\n        legendPosition: model.legend_position || 'right',\n        series: series,\n        annotations: annotations,\n        yaxes: yaxes,\n        reversed: this.props.reversed,\n        showGrid: Boolean(model.show_grid),\n        legend: Boolean(model.show_legend),\n        xAxisFormatter: this.xaxisFormatter,\n        onBrush: function onBrush(ranges) {\n          if (_this2.props.onBrush) _this2.props.onBrush(ranges);\n        }\n      };\n      if (interval) {\n        params.xaxisLabel = (0, _get_axis_label_string.getAxisLabelString)(interval);\n      }\n      var style = {};\n      var panelBackgroundColor = model.background_color || backgroundColor;\n      if (panelBackgroundColor) {\n        style.backgroundColor = panelBackgroundColor;\n        params.reversed = (0, _color2.default)(panelBackgroundColor || backgroundColor).luminosity() < 0.45;\n      }\n      return _react2.default.createElement(\n        'div',\n        { className: 'tvbVis', style: style },\n        _react2.default.createElement(_timeseries2.default, params)\n      );\n    }\n  }]);\n\n  return TimeseriesVisualization;\n}(_react.Component);\n\nTimeseriesVisualization.propTypes = {\n  backgroundColor: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  model: _propTypes2.default.object,\n  onBrush: _propTypes2.default.func,\n  onChange: _propTypes2.default.func,\n  reversed: _propTypes2.default.bool,\n  visData: _propTypes2.default.object,\n  dateFormat: _propTypes2.default.string,\n  getConfig: _propTypes2.default.func\n};\n\nexports.default = TimeseriesVisualization;\nmodule.exports = exports['default'];",null]}