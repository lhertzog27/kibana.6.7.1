{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/directives/validate_json.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/directives/validate_json.js","mtime":1567631711718},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('../modules');\n\nvar _module = _modules.uiModules.get('kibana'); /*\n                                                 * Licensed to Elasticsearch B.V. under one or more contributor\n                                                 * license agreements. See the NOTICE file distributed with\n                                                 * this work for additional information regarding copyright\n                                                 * ownership. Elasticsearch B.V. licenses this file to you under\n                                                 * the Apache License, Version 2.0 (the \"License\"); you may\n                                                 * not use this file except in compliance with the License.\n                                                 * You may obtain a copy of the License at\n                                                 *\n                                                 *    http://www.apache.org/licenses/LICENSE-2.0\n                                                 *\n                                                 * Unless required by applicable law or agreed to in writing,\n                                                 * software distributed under the License is distributed on an\n                                                 * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                 * KIND, either express or implied.  See the License for the\n                                                 * specific language governing permissions and limitations\n                                                 * under the License.\n                                                 */\n\n_module.directive('validateJson', function () {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      'ngModel': '=',\n      'queryInput': '=?'\n    },\n    link: function link($scope, $elem, attr, ngModel) {\n      $scope.$watch('ngModel', validator);\n\n      function validator(newValue) {\n        if (!newValue || newValue.length === 0) {\n          setValid();\n          return;\n        }\n\n        // We actually need a proper object in all JSON inputs\n        newValue = (newValue || '').trim();\n        if (newValue[0] === '{' || newValue[0] === '[') {\n          try {\n            JSON.parse(newValue);\n            setValid();\n          } catch (e) {\n            setInvalid();\n          }\n        } else {\n          setInvalid();\n        }\n      }\n\n      function setValid() {\n        ngModel.$setValidity('jsonInput', true);\n      }\n\n      function setInvalid() {\n        ngModel.$setValidity('jsonInput', false);\n      }\n    }\n  };\n});",null]}