{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/shard_allocation/components/shard.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/shard_allocation/components/shard.js","mtime":1567631712087},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Shard = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _calculate_class = require('../lib/calculate_class');\n\nvar _vents = require('../lib/vents');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction getColor(classes) {\n  var classList = classes.split(' ');\n\n  if (classList.includes('emergency')) {\n    return 'danger';\n  }\n\n  if (classList.includes('unassigned')) {\n    if (classList.includes('replica')) {\n      return 'warning';\n    }\n    return 'danger';\n  }\n\n  if (classList.includes('relocating')) {\n    return 'accent';\n  }\n\n  if (classList.includes('initializing')) {\n    return 'default';\n  }\n\n  if (classList.includes('primary')) {\n    return 'primary';\n  }\n\n  if (classList.includes('replica')) {\n    return 'secondary';\n  }\n}\n\nvar Shard = exports.Shard = function (_React$Component) {\n  _inherits(Shard, _React$Component);\n\n  function Shard() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Shard);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Shard.__proto__ || Object.getPrototypeOf(Shard)).call.apply(_ref, [this].concat(args))), _this), _this.state = { tooltipVisible: false }, _this.generateKey = function (relocating) {\n      var shard = _this.props.shard;\n      var shardType = shard.primary ? 'primary' : 'replica';\n      var additionId = shard.state === 'UNASSIGNED' ? Math.random() : '';\n      var node = relocating ? shard.relocating_node : shard.node;\n      return shard.index + '.' + node + '.' + shardType + '.' + shard.shard + additionId;\n    }, _this.toggle = function (event) {\n      if (_this.props.shard.tooltip_message) {\n        var action = event.type === 'mouseenter' ? 'show' : 'hide';\n        var key = _this.generateKey(true);\n        _this.setState({ tooltipVisible: action === 'show' });\n        _vents.vents.trigger(key, action);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Shard, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var key = void 0;\n      var shard = this.props.shard;\n      var self = this;\n      if (shard.tooltip_message) {\n        key = this.generateKey();\n        _vents.vents.on(key, function (action) {\n          self.setState({ tooltipVisible: action === 'show' });\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var key = void 0;\n      var shard = this.props.shard;\n      if (shard.tooltip_message) {\n        key = this.generateKey();\n        _vents.vents.clear(key);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var shard = this.props.shard;\n      var classes = (0, _calculate_class.calculateClass)(shard);\n      var color = getColor(classes);\n      var classification = classes + ' ' + shard.shard;\n\n      var shardUi = _react2.default.createElement(\n        _eui.EuiBadge,\n        { color: color },\n        shard.shard\n      );\n\n      if (this.state.tooltipVisible) {\n        shardUi = _react2.default.createElement(\n          _eui.EuiToolTip,\n          { content: this.props.shard.tooltip_message, position: 'bottom', 'data-test-subj': 'shardTooltip' },\n          _react2.default.createElement(\n            'p',\n            null,\n            shardUi\n          )\n        );\n      }\n\n      // data attrs for automated testing verification\n      return _react2.default.createElement(\n        'div',\n        {\n          onMouseEnter: this.toggle,\n          onMouseLeave: this.toggle,\n          className: classes,\n          'data-shard-tooltip': this.props.shard.tooltip_message,\n          'data-shard-classification': classification,\n          'data-test-subj': 'shardIcon'\n        },\n        shardUi\n      );\n    }\n  }]);\n\n  return Shard;\n}(_react2.default.Component);\n\nShard.displayName = _i18n.i18n.translate('xpack.monitoring.elasticsearch.shardAllocation.shardDisplayName', {\n  defaultMessage: 'Shard'\n});",null]}