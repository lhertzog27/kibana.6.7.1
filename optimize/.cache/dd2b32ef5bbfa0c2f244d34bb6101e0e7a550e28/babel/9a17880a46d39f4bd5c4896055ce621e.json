{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/alerts/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/alerts/index.js","mtime":1567631712100},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _lodash = require('lodash');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _index = require('./index.html');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _route_init = require('plugins/monitoring/lib/route_init');\n\nvar _ajax_error_handler = require('plugins/monitoring/lib/ajax_error_handler');\n\nvar _i18n = require('ui/i18n');\n\nvar _timefilter = require('ui/timefilter');\n\nvar _alerts = require('../../components/alerts');\n\nvar _base_eui_table_controller = require('../base_eui_table_controller');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction getPageData($injector) {\n  var globalState = $injector.get('globalState');\n  var $http = $injector.get('$http');\n  var Private = $injector.get('Private');\n  var url = '../api/monitoring/v1/clusters/' + globalState.cluster_uuid + '/alerts';\n\n  var timeBounds = _timefilter.timefilter.getBounds();\n\n  return $http.post(url, {\n    ccs: globalState.ccs,\n    timeRange: {\n      min: timeBounds.min.toISOString(),\n      max: timeBounds.max.toISOString()\n    }\n  }).then(function (response) {\n    return (0, _lodash.get)(response, 'data', []);\n  }).catch(function (err) {\n    var ajaxErrorHandlers = Private(_ajax_error_handler.ajaxErrorHandlersProvider);\n    return ajaxErrorHandlers(err);\n  });\n}\n\n_routes2.default.when('/alerts', {\n  template: _index2.default,\n  resolve: {\n    clusters: function clusters(Private) {\n      var routeInit = Private(_route_init.routeInitProvider);\n      return routeInit();\n    },\n\n    alerts: getPageData\n  },\n  controllerAs: 'alerts',\n  controller: function (_MonitoringViewBaseEu) {\n    _inherits(AlertsView, _MonitoringViewBaseEu);\n\n    function AlertsView($injector, $scope, i18n) {\n      _classCallCheck(this, AlertsView);\n\n      var $route = $injector.get('$route');\n      var globalState = $injector.get('globalState');\n      var kbnUrl = $injector.get('kbnUrl');\n\n      // breadcrumbs + page title\n      $scope.cluster = (0, _lodash.find)($route.current.locals.clusters, { cluster_uuid: globalState.cluster_uuid });\n\n      var _this = _possibleConstructorReturn(this, (AlertsView.__proto__ || Object.getPrototypeOf(AlertsView)).call(this, {\n        title: i18n('xpack.monitoring.alerts.clusterAlertsTitle', { defaultMessage: 'Cluster Alerts' }),\n        getPageData: getPageData,\n        $scope: $scope,\n        $injector: $injector\n      }));\n\n      _this.data = $route.current.locals.alerts;\n\n      var renderReact = function renderReact(data) {\n        var app = data.message ? _react2.default.createElement(\n          'p',\n          null,\n          data.message\n        ) : _react2.default.createElement(_alerts.Alerts, {\n          alerts: data,\n          angular: { kbnUrl: kbnUrl, scope: $scope },\n          sorting: _this.sorting,\n          pagination: _this.pagination,\n          onTableChange: _this.onTableChange\n        });\n\n        (0, _reactDom.render)(_react2.default.createElement(\n          _i18n.I18nContext,\n          null,\n          _react2.default.createElement(\n            _eui.EuiPage,\n            null,\n            _react2.default.createElement(\n              _eui.EuiPageBody,\n              null,\n              _react2.default.createElement(\n                _eui.EuiPageContent,\n                null,\n                app,\n                _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n                _react2.default.createElement(\n                  _eui.EuiLink,\n                  {\n                    href: '#/overview'\n                  },\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.monitoring.alerts.clusterOverviewLinkLabel',\n                    defaultMessage: '\\xAB Cluster Overview'\n                  })\n                )\n              )\n            )\n          )\n        ), document.getElementById('monitoringAlertsApp'));\n      };\n      $scope.$watch(function () {\n        return _this.data;\n      }, function (data) {\n        return renderReact(data);\n      });\n      return _this;\n    }\n\n    return AlertsView;\n  }(_base_eui_table_controller.MonitoringViewBaseEuiTableController)\n});",null]}