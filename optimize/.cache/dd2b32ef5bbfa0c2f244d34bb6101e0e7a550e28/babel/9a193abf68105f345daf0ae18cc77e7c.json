{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/services/ml_api_service/jobs.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/services/ml_api_service/jobs.js","mtime":1567631712062},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.jobs = undefined;\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _http_service = require('../../services/http_service');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar basePath = _chrome2.default.addBasePath('/api/ml');\n\nvar jobs = exports.jobs = {\n  jobsSummary: function jobsSummary(jobIds) {\n    return (0, _http_service.http)({\n      url: basePath + '/jobs/jobs_summary',\n      method: 'POST',\n      data: {\n        jobIds: jobIds\n      }\n    });\n  },\n  jobs: function jobs(jobIds) {\n    return (0, _http_service.http)({\n      url: basePath + '/jobs/jobs',\n      method: 'POST',\n      data: {\n        jobIds: jobIds\n      }\n    });\n  },\n  groups: function groups() {\n    return (0, _http_service.http)({\n      url: basePath + '/jobs/groups',\n      method: 'GET'\n    });\n  },\n  updateGroups: function updateGroups(updatedJobs) {\n    return (0, _http_service.http)({\n      url: basePath + '/jobs/update_groups',\n      method: 'POST',\n      data: {\n        jobs: updatedJobs\n      }\n    });\n  },\n  forceStartDatafeeds: function forceStartDatafeeds(datafeedIds, start, end) {\n    return (0, _http_service.http)({\n      url: basePath + '/jobs/force_start_datafeeds',\n      method: 'POST',\n      data: {\n        datafeedIds: datafeedIds,\n        start: start,\n        end: end\n      }\n    });\n  },\n  stopDatafeeds: function stopDatafeeds(datafeedIds) {\n    return (0, _http_service.http)({\n      url: basePath + '/jobs/stop_datafeeds',\n      method: 'POST',\n      data: {\n        datafeedIds: datafeedIds\n      }\n    });\n  },\n  deleteJobs: function deleteJobs(jobIds) {\n    return (0, _http_service.http)({\n      url: basePath + '/jobs/delete_jobs',\n      method: 'POST',\n      data: {\n        jobIds: jobIds\n      }\n    });\n  },\n  closeJobs: function closeJobs(jobIds) {\n    return (0, _http_service.http)({\n      url: basePath + '/jobs/close_jobs',\n      method: 'POST',\n      data: {\n        jobIds: jobIds\n      }\n    });\n  },\n  jobAuditMessages: function jobAuditMessages(jobId, from) {\n    var jobIdString = jobId !== undefined ? '/' + jobId : '';\n    var fromString = from !== undefined ? '?from=' + from : '';\n    return (0, _http_service.http)({\n      url: basePath + '/job_audit_messages/messages' + jobIdString + fromString,\n      method: 'GET'\n    });\n  },\n  deletingJobTasks: function deletingJobTasks() {\n    return (0, _http_service.http)({\n      url: basePath + '/jobs/deleting_jobs_tasks',\n      method: 'GET'\n    });\n  }\n};",null]}