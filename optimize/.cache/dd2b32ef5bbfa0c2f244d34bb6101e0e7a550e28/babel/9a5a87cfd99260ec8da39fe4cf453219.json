{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/styles/components/vector/color/dynamic_color_selection.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/styles/components/vector/color/dynamic_color_selection.js","mtime":1567631712021},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nexports.DynamicColorSelection = DynamicColorSelection;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _field_select = require('../field_select');\n\nvar _color_ramp_select = require('./color_ramp_select');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction DynamicColorSelection(_ref) {\n  var ordinalFields = _ref.ordinalFields,\n      onChange = _ref.onChange,\n      styleOptions = _ref.styleOptions;\n\n  var onFieldChange = function onFieldChange(_ref2) {\n    var field = _ref2.field;\n\n    onChange(_extends({}, styleOptions, { field: field }));\n  };\n\n  var onColorChange = function onColorChange(_ref3) {\n    var color = _ref3.color;\n\n    onChange(_extends({}, styleOptions, { color: color }));\n  };\n\n  return _react2.default.createElement(\n    _react.Fragment,\n    null,\n    _react2.default.createElement(_color_ramp_select.ColorRampSelect, {\n      onChange: onColorChange,\n      color: styleOptions.color\n    }),\n    _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n    _react2.default.createElement(_field_select.FieldSelect, {\n      fields: ordinalFields,\n      selectedField: _lodash2.default.get(styleOptions, 'field'),\n      onChange: onFieldChange\n    })\n  );\n}\n\nDynamicColorSelection.propTypes = {\n  ordinalFields: _propTypes2.default.arrayOf(_field_select.fieldShape).isRequired,\n  styleOptions: _propTypes2.default.shape({\n    color: _propTypes2.default.string.isRequired,\n    field: _field_select.fieldShape\n  }).isRequired,\n  onChange: _propTypes2.default.func.isRequired\n};",null]}