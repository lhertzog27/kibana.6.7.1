{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/function_form/function_form.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/function_form/function_form.js","mtime":1567631711923},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FunctionForm = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _recompose = require('recompose');\n\nvar _function_form_component = require('./function_form_component');\n\nvar _function_unknown = require('./function_unknown');\n\nvar _function_form_context_pending = require('./function_form_context_pending');\n\nvar _function_form_context_error = require('./function_form_context_error');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*\n                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                   */\n\n// helper to check the state of the passed in expression type\nfunction checkState(state) {\n  return function (_ref) {\n    var context = _ref.context,\n        expressionType = _ref.expressionType;\n\n    var matchState = !context || context.state === state;\n    return expressionType && expressionType.requiresContext && matchState;\n  };\n}\n\n// alternate render paths based on expression state\nvar branches = [\n// if no expressionType was provided, render the ArgTypeUnknown component\n(0, _recompose.branch)(function (props) {\n  return !props.expressionType;\n}, (0, _recompose.renderComponent)(_function_unknown.FunctionUnknown)),\n// if the expressionType is in a pending state, render ArgTypeContextPending\n(0, _recompose.branch)(checkState('pending'), (0, _recompose.renderComponent)(_function_form_context_pending.FunctionFormContextPending)),\n// if the expressionType is in an error state, render ArgTypeContextError\n(0, _recompose.branch)(checkState('error'), (0, _recompose.renderComponent)(_function_form_context_error.FunctionFormContextError))];\n\nvar FunctionForm = exports.FunctionForm = _recompose.compose.apply(undefined, branches)(_function_form_component.FunctionFormComponent);\n\nFunctionForm.propTypes = _defineProperty({\n  expressionType: _propTypes2.default.object,\n  context: _propTypes2.default.object\n}, 'expressionType', _propTypes2.default.object);",null]}