{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_response/point_series/_get_series.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_response/point_series/_get_series.js","mtime":1567631711693},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSeries = getSeries;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _get_point = require('./_get_point');\n\nvar _add_to_siri = require('./_add_to_siri');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                     * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                     * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                     * this work for additional information regarding copyright\n                                                                                                                                                                                                     * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                     * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                     * not use this file except in compliance with the License.\n                                                                                                                                                                                                     * You may obtain a copy of the License at\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                     *\n                                                                                                                                                                                                     * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                     * software distributed under the License is distributed on an\n                                                                                                                                                                                                     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                     * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                     * specific language governing permissions and limitations\n                                                                                                                                                                                                     * under the License.\n                                                                                                                                                                                                     */\n\nfunction getSeries(rows, chart) {\n  var aspects = chart.aspects;\n  var multiY = Array.isArray(aspects.y);\n  var yScale = chart.yScale;\n  var partGetPoint = _lodash2.default.partial(_get_point.getPoint, aspects.x, aspects.series, yScale);\n\n  var series = (0, _lodash2.default)(rows).transform(function (series, row) {\n    if (!multiY) {\n      var point = partGetPoint(row, aspects.y, aspects.z);\n      if (point) (0, _add_to_siri.addToSiri)(series, point, point.series, point.series, aspects.y.aggConfig);\n      return;\n    }\n\n    aspects.y.forEach(function (y) {\n      var point = partGetPoint(row, y, aspects.z);\n      if (!point) return;\n\n      // use the point's y-axis as it's series by default,\n      // but augment that with series aspect if it's actually\n      // available\n      var seriesId = y.aggConfig.id;\n      var seriesLabel = y.title;\n\n      if (aspects.series) {\n        var prefix = point.series ? point.series + ': ' : '';\n        seriesId = prefix + seriesId;\n        seriesLabel = prefix + seriesLabel;\n      }\n\n      (0, _add_to_siri.addToSiri)(series, point, seriesId, seriesLabel, y.aggConfig);\n    });\n  }, new Map()).thru(function (series) {\n    return [].concat(_toConsumableArray(series.values()));\n  }).value();\n\n  if (multiY) {\n    series = _lodash2.default.sortBy(series, function (siri) {\n      var firstVal = siri.values[0];\n      var y = void 0;\n\n      if (firstVal) {\n        var agg = firstVal.aggConfigResult.aggConfig;\n        y = _lodash2.default.find(aspects.y, function (y) {\n          return y.aggConfig === agg;\n        });\n      }\n\n      return y ? y.i : series.length;\n    });\n  }\n\n  return series;\n}",null]}