{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/nodes/cells.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/nodes/cells.js","mtime":1567631712086},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetricCell = exports.OfflineCell = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _format_number = require('../../../lib/format_number');\n\nvar _eui = require('@elastic/eui');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /*\n                                                                                                                                                                                                                              * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                              * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                              * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                              */\n\nfunction OfflineCell() {\n  return _react2.default.createElement(\n    'div',\n    { className: 'monTableCell__number monTableCell__offline' },\n    'N/A'\n  );\n}\n\nvar getSlopeArrow = function getSlopeArrow(slope) {\n  if (slope || slope === 0) {\n    return slope > 0 ? 'up' : 'down';\n  }\n  return null;\n};\n\nvar metricVal = function metricVal(metric, format, isPercent) {\n  if (isPercent) {\n    return (0, _format_number.formatMetric)(metric, format, '%', { prependSpace: false });\n  }\n  return (0, _format_number.formatMetric)(metric, format);\n};\n\nfunction MetricCell(_ref) {\n  var isOnline = _ref.isOnline,\n      _ref$metric = _ref.metric,\n      metric = _ref$metric === undefined ? {} : _ref$metric,\n      isPercent = _ref.isPercent,\n      props = _objectWithoutProperties(_ref, ['isOnline', 'metric', 'isPercent']);\n\n  if (isOnline) {\n    var _get = (0, _lodash.get)(metric, 'summary', {}),\n        lastVal = _get.lastVal,\n        maxVal = _get.maxVal,\n        minVal = _get.minVal,\n        slope = _get.slope;\n\n    var format = (0, _lodash.get)(metric, 'metric.format');\n\n    return _react2.default.createElement(\n      _eui.EuiFlexGroup,\n      _extends({ gutterSize: 'm', alignItems: 'center', wrap: true }, props),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiTitle,\n          { size: 'm' },\n          _react2.default.createElement(\n            'h4',\n            null,\n            metricVal(lastVal, format, isPercent),\n            '\\xA0',\n            _react2.default.createElement('span', { className: 'fa fa-long-arrow-' + getSlopeArrow(slope) })\n          )\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        { grow: false },\n        _react2.default.createElement(\n          _eui.EuiText,\n          { size: 'xs' },\n          _i18n.i18n.translate('xpack.monitoring.elasticsearch.nodes.cells.maxText', {\n            defaultMessage: '{metric} max',\n            values: {\n              metric: metricVal(maxVal, format, isPercent)\n            }\n          })\n        ),\n        _react2.default.createElement(\n          _eui.EuiText,\n          { size: 'xs' },\n          _i18n.i18n.translate('xpack.monitoring.elasticsearch.nodes.cells.minText', {\n            defaultMessage: '{metric} min',\n            values: {\n              metric: metricVal(minVal, format, isPercent)\n            }\n          })\n        )\n      )\n    );\n  }\n\n  return _react2.default.createElement(OfflineCell, null);\n}\n\nexports.OfflineCell = OfflineCell;\nexports.MetricCell = MetricCell;",null]}