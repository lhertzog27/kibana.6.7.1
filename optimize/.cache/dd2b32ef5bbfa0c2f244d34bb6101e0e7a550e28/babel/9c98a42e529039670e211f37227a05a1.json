{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/ccr/ccr.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/ccr/ccr.js","mtime":1567631712085},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Ccr = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nrequire('./ccr.css');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction toSeconds(ms) {\n  return Math.floor(ms / 1000) + 's';\n}\n\nvar CcrUI = function (_Component) {\n  _inherits(CcrUI, _Component);\n\n  function CcrUI(props) {\n    _classCallCheck(this, CcrUI);\n\n    var _this = _possibleConstructorReturn(this, (CcrUI.__proto__ || Object.getPrototypeOf(CcrUI)).call(this, props));\n\n    _this.state = {\n      itemIdToExpandedRowMap: {}\n    };\n    return _this;\n  }\n\n  _createClass(CcrUI, [{\n    key: 'toggleShards',\n    value: function toggleShards(index, shards) {\n      var intl = this.props.intl;\n\n      var itemIdToExpandedRowMap = _extends({}, this.state.itemIdToExpandedRowMap);\n\n      if (itemIdToExpandedRowMap[index]) {\n        delete itemIdToExpandedRowMap[index];\n      } else {\n        var pagination = {\n          initialPageSize: 5,\n          pageSizeOptions: [5, 10, 20]\n        };\n\n        if (shards.length <= pagination.initialPageSize) {\n          pagination = false;\n        }\n\n        itemIdToExpandedRowMap[index] = _react2.default.createElement(_eui.EuiInMemoryTable, {\n          items: shards,\n          columns: [{\n            field: 'shardId',\n            name: intl.formatMessage({\n              id: 'xpack.monitoring.elasticsearch.ccr.shardsTable.shardColumnTitle',\n              defaultMessage: 'Shard'\n            }),\n            render: function render(shardId) {\n              return _react2.default.createElement(\n                _eui.EuiLink,\n                { href: '#/elasticsearch/ccr/' + index + '/shard/' + shardId },\n                shardId\n              );\n            }\n          }, {\n            render: function render() {\n              return null;\n            }\n          }, {\n            field: 'syncLagOps',\n            name: intl.formatMessage({\n              id: 'xpack.monitoring.elasticsearch.ccr.shardsTable.syncLagOpsColumnTitle',\n              defaultMessage: 'Sync Lag (ops)'\n            }),\n            render: function render(syncLagOps, data) {\n              return _react2.default.createElement(\n                'span',\n                null,\n                syncLagOps,\n                '\\xA0\\xA0',\n                _react2.default.createElement(_eui.EuiIconTip, {\n                  size: 'm',\n                  type: 'iInCircle',\n                  content: _react2.default.createElement(\n                    _react.Fragment,\n                    null,\n                    _react2.default.createElement(\n                      'span',\n                      null,\n                      _react2.default.createElement(_react3.FormattedMessage, {\n                        id: 'xpack.monitoring.elasticsearch.ccr.shardsTable.syncLagOpsColumn.leaderLagTooltip',\n                        defaultMessage: 'Leader lag: {syncLagOpsLeader}',\n                        values: {\n                          syncLagOpsLeader: data.syncLagOpsLeader\n                        }\n                      })\n                    ),\n                    _react2.default.createElement('br', null),\n                    _react2.default.createElement(\n                      'span',\n                      null,\n                      _react2.default.createElement(_react3.FormattedMessage, {\n                        id: 'xpack.monitoring.elasticsearch.ccr.shardsTable.syncLagOpsColumn.followerLagTooltip',\n                        defaultMessage: 'Follower lag: {syncLagOpsFollower}',\n                        values: {\n                          syncLagOpsFollower: data.syncLagOpsFollower\n                        }\n                      })\n                    )\n                  ),\n                  position: 'right'\n                })\n              );\n            }\n          }, {\n            field: 'syncLagTime',\n            name: intl.formatMessage({\n              id: 'xpack.monitoring.elasticsearch.ccr.shardsTable.lastFetchTimeColumnTitle',\n              defaultMessage: 'Last fetch time'\n            }),\n            render: function render(syncLagTime) {\n              return _react2.default.createElement(\n                'span',\n                null,\n                toSeconds(syncLagTime)\n              );\n            }\n          }, {\n            field: 'opsSynced',\n            name: intl.formatMessage({\n              id: 'xpack.monitoring.elasticsearch.ccr.shardsTable.opsSyncedColumnTitle',\n              defaultMessage: 'Ops synced'\n            })\n          }, {\n            field: 'error',\n            name: intl.formatMessage({\n              id: 'xpack.monitoring.elasticsearch.ccr.shardsTable.errorColumnTitle',\n              defaultMessage: 'Error'\n            }),\n            render: function render(error) {\n              return _react2.default.createElement(\n                _eui.EuiTextColor,\n                { color: 'danger' },\n                error\n              );\n            }\n          }],\n          executeQueryOptions: {\n            defaultFields: ['shardId']\n          },\n          sorting: true,\n          pagination: pagination\n        });\n      }\n      this.setState({ itemIdToExpandedRowMap: itemIdToExpandedRowMap });\n    }\n  }, {\n    key: 'renderTable',\n    value: function renderTable() {\n      var _this2 = this;\n\n      var _props = this.props,\n          data = _props.data,\n          intl = _props.intl;\n\n      var items = data;\n\n      var pagination = {\n        initialPageSize: 5,\n        pageSizeOptions: [5, 10, 20]\n      };\n\n      if (items.length <= pagination.initialPageSize) {\n        pagination = false;\n      }\n\n      var sorting = {\n        sort: {\n          field: 'index',\n          direction: 'asc'\n        }\n      };\n\n      return _react2.default.createElement(_eui.EuiInMemoryTable, {\n        className: 'monitoringElasticsearchCcrListingTable',\n        columns: [{\n          field: 'index',\n          name: intl.formatMessage({\n            id: 'xpack.monitoring.elasticsearch.ccr.ccrListingTable.indexColumnTitle',\n            defaultMessage: 'Index'\n          }),\n          sortable: true,\n          render: function render(index, _ref) {\n            var shards = _ref.shards;\n\n            var expanded = !!_this2.state.itemIdToExpandedRowMap[index];\n            return _react2.default.createElement(\n              _eui.EuiLink,\n              { onClick: function onClick() {\n                  return _this2.toggleShards(index, shards);\n                } },\n              index,\n              '\\xA0',\n              expanded ? _react2.default.createElement(_eui.EuiIcon, { type: 'arrowUp' }) : _react2.default.createElement(_eui.EuiIcon, { type: 'arrowDown' })\n            );\n          }\n        }, {\n          field: 'follows',\n          sortable: true,\n          name: intl.formatMessage({\n            id: 'xpack.monitoring.elasticsearch.ccr.ccrListingTable.followsColumnTitle',\n            defaultMessage: 'Follows'\n          })\n        }, {\n          field: 'syncLagOps',\n          sortable: true,\n          name: intl.formatMessage({\n            id: 'xpack.monitoring.elasticsearch.ccr.ccrListingTable.syncLagOpsColumnTitle',\n            defaultMessage: 'Sync Lag (ops)'\n          })\n        }, {\n          field: 'syncLagTime',\n          sortable: true,\n          name: intl.formatMessage({\n            id: 'xpack.monitoring.elasticsearch.ccr.ccrListingTable.lastFetchTimeColumnTitle',\n            defaultMessage: 'Last fetch time'\n          }),\n          render: function render(syncLagTime) {\n            return _react2.default.createElement(\n              'span',\n              null,\n              toSeconds(syncLagTime)\n            );\n          }\n        }, {\n          field: 'opsSynced',\n          sortable: true,\n          name: intl.formatMessage({\n            id: 'xpack.monitoring.elasticsearch.ccr.ccrListingTable.opsSyncedColumnTitle',\n            defaultMessage: 'Ops synced'\n          })\n        }, {\n          field: 'error',\n          sortable: true,\n          name: intl.formatMessage({\n            id: 'xpack.monitoring.elasticsearch.ccr.ccrListingTable.errorColumnTitle',\n            defaultMessage: 'Error'\n          }),\n          render: function render(error) {\n            return _react2.default.createElement(\n              _eui.EuiTextColor,\n              { color: 'danger' },\n              error\n            );\n          }\n        }],\n        items: items,\n        pagination: pagination,\n        executeQueryOptions: {\n          defaultFields: ['index', 'follows']\n        },\n        sorting: sorting,\n        itemId: 'id',\n        itemIdToExpandedRowMap: this.state.itemIdToExpandedRowMap\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        _eui.EuiPage,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPageBody,\n          null,\n          _react2.default.createElement(\n            _eui.EuiPageContent,\n            null,\n            _react2.default.createElement(\n              _eui.EuiPageContentBody,\n              null,\n              this.renderTable()\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return CcrUI;\n}(_react.Component);\n\nvar Ccr = exports.Ccr = (0, _react3.injectI18n)(CcrUI);",null]}