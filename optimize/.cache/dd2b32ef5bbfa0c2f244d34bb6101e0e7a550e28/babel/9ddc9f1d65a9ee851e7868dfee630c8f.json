{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/es_search_source/es_search_source.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/es_search_source/es_search_source.js","mtime":1567631712020},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ESSearchSource = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _v = require('uuid/v4');\n\nvar _v2 = _interopRequireDefault(_v);\n\nvar _es_source = require('../es_source');\n\nvar _elasticsearch_geo_utils = require('../../../../elasticsearch_geo_utils');\n\nvar _create_source_editor = require('./create_source_editor');\n\nvar _update_source_editor = require('./update_source_editor');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _i18n_getters = require('../../../../../common/i18n_getters');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar DEFAULT_LIMIT = 2048;\n\nvar ESSearchSource = exports.ESSearchSource = function (_AbstractESSource) {\n  _inherits(ESSearchSource, _AbstractESSource);\n\n  _createClass(ESSearchSource, null, [{\n    key: 'renderEditor',\n    value: function renderEditor(_ref) {\n      var onPreviewSource = _ref.onPreviewSource;\n\n      var onSelect = function onSelect(sourceConfig) {\n        if (!sourceConfig) {\n          onPreviewSource(null);\n          return;\n        }\n\n        var source = new ESSearchSource(_extends({\n          id: (0, _v2.default)()\n        }, sourceConfig));\n        onPreviewSource(source);\n      };\n      return _react2.default.createElement(_create_source_editor.CreateSourceEditor, { onSelect: onSelect });\n    }\n  }]);\n\n  function ESSearchSource(descriptor) {\n    _classCallCheck(this, ESSearchSource);\n\n    return _possibleConstructorReturn(this, (ESSearchSource.__proto__ || Object.getPrototypeOf(ESSearchSource)).call(this, {\n      id: descriptor.id,\n      type: ESSearchSource.type,\n      indexPatternId: descriptor.indexPatternId,\n      geoField: descriptor.geoField,\n      limit: _lodash2.default.get(descriptor, 'limit', DEFAULT_LIMIT),\n      filterByMapBounds: _lodash2.default.get(descriptor, 'filterByMapBounds', true),\n      tooltipProperties: _lodash2.default.get(descriptor, 'tooltipProperties', [])\n    }));\n  }\n\n  _createClass(ESSearchSource, [{\n    key: 'renderSourceSettingsEditor',\n    value: function renderSourceSettingsEditor(_ref2) {\n      var onChange = _ref2.onChange;\n\n      return _react2.default.createElement(_update_source_editor.UpdateSourceEditor, {\n        indexPatternId: this._descriptor.indexPatternId,\n        onChange: onChange,\n        filterByMapBounds: this._descriptor.filterByMapBounds,\n        tooltipProperties: this._descriptor.tooltipProperties\n      });\n    }\n  }, {\n    key: 'getNumberFields',\n    value: function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var indexPattern;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this._getIndexPattern();\n\n              case 3:\n                indexPattern = _context.sent;\n                return _context.abrupt('return', indexPattern.fields.byType.number.map(function (field) {\n                  return { name: field.name, label: field.name };\n                }));\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context['catch'](0);\n                return _context.abrupt('return', []);\n\n              case 10:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function getNumberFields() {\n        return _ref3.apply(this, arguments);\n      }\n\n      return getNumberFields;\n    }()\n  }, {\n    key: 'getMetricFields',\n    value: function getMetricFields() {\n      return [];\n    }\n  }, {\n    key: 'getFieldNames',\n    value: function getFieldNames() {\n      return [this._descriptor.geoField].concat(_toConsumableArray(this._descriptor.tooltipProperties));\n    }\n  }, {\n    key: 'getImmutableProperties',\n    value: function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var indexPatternTitle, geoFieldType, indexPattern, geoField;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                indexPatternTitle = this._descriptor.indexPatternId;\n                geoFieldType = '';\n                _context2.prev = 2;\n                _context2.next = 5;\n                return this._getIndexPattern();\n\n              case 5:\n                indexPattern = _context2.sent;\n\n                indexPatternTitle = indexPattern.title;\n                _context2.next = 9;\n                return this._getGeoField();\n\n              case 9:\n                geoField = _context2.sent;\n\n                geoFieldType = geoField.type;\n                _context2.next = 15;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2['catch'](2);\n\n              case 15:\n                return _context2.abrupt('return', [{\n                  label: (0, _i18n_getters.getDataSourceLabel)(),\n                  value: ESSearchSource.title\n                }, {\n                  label: _i18n.i18n.translate('xpack.maps.source.esSearch.indexPatternLabel', {\n                    defaultMessage: 'Index pattern'\n                  }),\n                  value: indexPatternTitle\n                }, {\n                  label: _i18n.i18n.translate('xpack.maps.source.esSearch.geoFieldLabel', {\n                    defaultMessage: 'Geospatial field'\n                  }),\n                  value: this._descriptor.geoField\n                }, {\n                  label: _i18n.i18n.translate('xpack.maps.source.esSearch.geoFieldTypeLabel', {\n                    defaultMessage: 'Geospatial field type'\n                  }),\n                  value: geoFieldType\n                }]);\n\n              case 16:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 13]]);\n      }));\n\n      function getImmutableProperties() {\n        return _ref4.apply(this, arguments);\n      }\n\n      return getImmutableProperties;\n    }()\n  }, {\n    key: 'getGeoJsonWithMeta',\n    value: function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5, searchFilters) {\n        var layerName = _ref5.layerName;\n        var searchSource, featureCollection, indexPattern, flattenHit, resp, geoField;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this._makeSearchSource(searchFilters, this._descriptor.limit);\n\n              case 2:\n                searchSource = _context3.sent;\n\n                // Setting \"fields\" instead of \"source: { includes: []}\"\n                // because SearchSource automatically adds the following by default\n                // 1) all scripted fields\n                // 2) docvalue_fields value is added for each date field in an index - see getComputedFields\n                // By setting \"fields\", SearchSource removes all of defaults\n                searchSource.setField('fields', searchFilters.fieldNames);\n\n                featureCollection = void 0;\n                _context3.next = 7;\n                return this._getIndexPattern();\n\n              case 7:\n                indexPattern = _context3.sent;\n\n                flattenHit = function flattenHit(hit) {\n                  var properties = indexPattern.flattenHit(hit);\n                  // remove metaFields\n                  indexPattern.metaFields.forEach(function (metaField) {\n                    delete properties[metaField];\n                  });\n                  return properties;\n                };\n\n                _context3.next = 11;\n                return this._runEsQuery(layerName, searchSource, 'Elasticsearch document request');\n\n              case 11:\n                resp = _context3.sent;\n                _context3.prev = 12;\n                _context3.next = 15;\n                return this._getGeoField();\n\n              case 15:\n                geoField = _context3.sent;\n\n                featureCollection = (0, _elasticsearch_geo_utils.hitsToGeoJson)(resp.hits.hits, flattenHit, geoField.name, geoField.type);\n                _context3.next = 22;\n                break;\n\n              case 19:\n                _context3.prev = 19;\n                _context3.t0 = _context3['catch'](12);\n                throw new Error('Unable to convert search response to geoJson feature collection, error: ' + _context3.t0.message);\n\n              case 22:\n                return _context3.abrupt('return', {\n                  data: featureCollection,\n                  meta: {\n                    areResultsTrimmed: resp.hits.total > resp.hits.hits.length\n                  }\n                });\n\n              case 23:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[12, 19]]);\n      }));\n\n      function getGeoJsonWithMeta(_x, _x2) {\n        return _ref6.apply(this, arguments);\n      }\n\n      return getGeoJsonWithMeta;\n    }()\n  }, {\n    key: 'canFormatFeatureProperties',\n    value: function canFormatFeatureProperties() {\n      return this._descriptor.tooltipProperties.length > 0;\n    }\n  }, {\n    key: 'filterAndFormatProperties',\n    value: function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(properties) {\n        var filteredProperties, indexPattern;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                filteredProperties = {};\n\n                this._descriptor.tooltipProperties.forEach(function (propertyName) {\n                  filteredProperties[propertyName] = _lodash2.default.get(properties, propertyName, '-');\n                });\n\n                indexPattern = void 0;\n                _context4.prev = 3;\n                _context4.next = 6;\n                return this._getIndexPattern();\n\n              case 6:\n                indexPattern = _context4.sent;\n                _context4.next = 13;\n                break;\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4['catch'](3);\n\n                console.warn('Unable to find Index pattern ' + this._descriptor.indexPatternId + ', values are not formatted');\n                return _context4.abrupt('return', filteredProperties);\n\n              case 13:\n\n                this._descriptor.tooltipProperties.forEach(function (propertyName) {\n                  var field = indexPattern.fields.byName[propertyName];\n                  if (!field) {\n                    return;\n                  }\n\n                  filteredProperties[propertyName] = field.format.convert(filteredProperties[propertyName]);\n                });\n\n                return _context4.abrupt('return', filteredProperties);\n\n              case 15:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[3, 9]]);\n      }));\n\n      function filterAndFormatProperties(_x3) {\n        return _ref7.apply(this, arguments);\n      }\n\n      return filterAndFormatProperties;\n    }()\n  }, {\n    key: 'isFilterByMapBounds',\n    value: function isFilterByMapBounds() {\n      return _lodash2.default.get(this._descriptor, 'filterByMapBounds', false);\n    }\n  }, {\n    key: 'getStringFields',\n    value: function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var indexPattern, stringFields;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this._getIndexPattern();\n\n              case 2:\n                indexPattern = _context5.sent;\n                stringFields = indexPattern.fields.filter(function (field) {\n                  return field.type === 'string';\n                });\n                return _context5.abrupt('return', stringFields.map(function (stringField) {\n                  return { name: stringField.name, label: stringField.name };\n                }));\n\n              case 5:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getStringFields() {\n        return _ref8.apply(this, arguments);\n      }\n\n      return getStringFields;\n    }()\n  }]);\n\n  return ESSearchSource;\n}(_es_source.AbstractESSource);\n\nESSearchSource.type = 'ES_SEARCH';\nESSearchSource.title = _i18n.i18n.translate('xpack.maps.source.esSearchTitle', {\n  defaultMessage: 'Documents'\n});\nESSearchSource.description = _i18n.i18n.translate('xpack.maps.source.esSearchDescription', {\n  defaultMessage: 'Geospatial data from a Kibana index pattern'\n});",null]}