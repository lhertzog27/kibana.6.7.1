{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad_loader/workpad_loader.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad_loader/workpad_loader.js","mtime":1567631711929},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkpadLoader = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _lodash = require('lodash');\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _confirm_modal = require('../confirm_modal');\n\nvar _link = require('../link');\n\nvar _paginate = require('../paginate');\n\nvar _workpad_dropzone = require('./workpad_dropzone');\n\nvar _workpad_create = require('./workpad_create');\n\nvar _workpad_search = require('./workpad_search');\n\nvar _upload_workpad = require('./upload_workpad');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar formatDate = function formatDate(date) {\n  return date && (0, _moment2.default)(date).format('MMM D, YYYY @ h:mma');\n};\n\nvar getDisplayName = function getDisplayName(name, workpad, loadedWorkpad) {\n  var workpadName = name.length ? name : _react2.default.createElement(\n    'em',\n    null,\n    workpad.id\n  );\n  return workpad.id === loadedWorkpad ? _react2.default.createElement(\n    'strong',\n    null,\n    workpadName\n  ) : workpadName;\n};\n\nvar WorkpadLoader = exports.WorkpadLoader = function (_React$PureComponent) {\n  _inherits(WorkpadLoader, _React$PureComponent);\n\n  function WorkpadLoader() {\n    var _ref,\n        _this2 = this;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, WorkpadLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WorkpadLoader.__proto__ || Object.getPrototypeOf(WorkpadLoader)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      createPending: false,\n      deletingWorkpad: false,\n      sortField: '@timestamp',\n      sortDirection: 'desc',\n      selectedWorkpads: [],\n      pageSize: 10\n    }, _this.createWorkpad = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({ createPending: true });\n              _context.next = 3;\n              return _this.props.createWorkpad();\n\n            case 3:\n              _this._isMounted && _this.setState({ createPending: false });\n\n            case 4:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2);\n    })), _this.onUpload = function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(workpad) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({ createPending: true });\n                _context2.next = 3;\n                return _this.props.createWorkpad(workpad);\n\n              case 3:\n                _this._isMounted && _this.setState({ createPending: false });\n\n              case 4:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, _this2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }(), _this.cloneWorkpad = function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(workpad) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this.setState({ createPending: true });\n                _context3.next = 3;\n                return _this.props.cloneWorkpad(workpad.id);\n\n              case 3:\n                _this._isMounted && _this.setState({ createPending: false });\n\n              case 4:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, _this2);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }(), _this.openRemoveConfirm = function () {\n      return _this.setState({ deletingWorkpad: true });\n    }, _this.closeRemoveConfirm = function () {\n      return _this.setState({ deletingWorkpad: false });\n    }, _this.removeWorkpads = function () {\n      var selectedWorkpads = _this.state.selectedWorkpads;\n\n\n      _this.props.removeWorkpads(selectedWorkpads.map(function (_ref5) {\n        var id = _ref5.id;\n        return id;\n      })).then(function (remainingIds) {\n        var remainingWorkpads = remainingIds.length > 0 ? selectedWorkpads.filter(function (_ref6) {\n          var id = _ref6.id;\n          return remainingIds.includes(id);\n        }) : [];\n\n        _this._isMounted && _this.setState({\n          deletingWorkpad: false,\n          selectedWorkpads: remainingWorkpads\n        });\n      });\n    }, _this.downloadWorkpads = function () {\n      _this.state.selectedWorkpads.forEach(function (_ref7) {\n        var id = _ref7.id;\n        return _this.props.downloadWorkpad(id);\n      });\n    }, _this.onSelectionChange = function (selectedWorkpads) {\n      _this.setState({ selectedWorkpads: selectedWorkpads });\n    }, _this.onTableChange = function (_ref8) {\n      var _ref8$sort = _ref8.sort,\n          sort = _ref8$sort === undefined ? {} : _ref8$sort;\n      var sortField = sort.field,\n          sortDirection = sort.direction;\n\n      _this.setState({\n        sortField: sortField,\n        sortDirection: sortDirection\n      });\n    }, _this.renderWorkpadTable = function (_ref9) {\n      var rows = _ref9.rows,\n          pageNumber = _ref9.pageNumber,\n          totalPages = _ref9.totalPages,\n          setPage = _ref9.setPage;\n      var _this$state = _this.state,\n          sortField = _this$state.sortField,\n          sortDirection = _this$state.sortDirection;\n      var _this$props = _this.props,\n          canUserWrite = _this$props.canUserWrite,\n          createPending = _this$props.createPending,\n          loadedWorkpad = _this$props.workpadId;\n\n\n      var actions = [{\n        render: function render(workpad) {\n          return _react2.default.createElement(\n            _eui.EuiFlexGroup,\n            { gutterSize: 'xs', alignItems: 'center' },\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false },\n              _react2.default.createElement(\n                _eui.EuiToolTip,\n                { content: 'Download' },\n                _react2.default.createElement(_eui.EuiButtonIcon, {\n                  iconType: 'exportAction',\n                  onClick: function onClick() {\n                    return _this.props.downloadWorkpad(workpad.id);\n                  },\n                  'aria-label': 'Download Workpad'\n                })\n              )\n            ),\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false },\n              _react2.default.createElement(\n                _eui.EuiToolTip,\n                {\n                  content: canUserWrite ? 'Clone' : 'You don\\'t have permission to clone workpads'\n                },\n                _react2.default.createElement(_eui.EuiButtonIcon, {\n                  iconType: 'copy',\n                  onClick: function onClick() {\n                    return _this.cloneWorkpad(workpad);\n                  },\n                  'aria-label': 'Clone Workpad',\n                  disabled: !canUserWrite\n                })\n              )\n            )\n          );\n        }\n      }];\n\n      var columns = [{\n        field: 'name',\n        name: 'Workpad Name',\n        sortable: true,\n        dataType: 'string',\n        render: function render(name, workpad) {\n          var workpadName = getDisplayName(name, workpad, loadedWorkpad);\n\n          return _react2.default.createElement(\n            _link.Link,\n            {\n              'data-test-subj': 'canvasWorkpadLoaderWorkpad',\n              name: 'loadWorkpad',\n              params: { id: workpad.id },\n              'aria-label': 'Load workpad ' + workpadName\n            },\n            workpadName\n          );\n        }\n      }, {\n        field: '@created',\n        name: 'Created',\n        sortable: true,\n        dataType: 'date',\n        width: '20%',\n        render: function render(date) {\n          return formatDate(date);\n        }\n      }, {\n        field: '@timestamp',\n        name: 'Updated',\n        sortable: true,\n        dataType: 'date',\n        width: '20%',\n        render: function render(date) {\n          return formatDate(date);\n        }\n      }, { name: '', actions: actions, width: '5%' }];\n\n      var sorting = {\n        sort: {\n          field: sortField,\n          direction: sortDirection\n        }\n      };\n\n      var selection = {\n        itemId: 'id',\n        onSelectionChange: _this.onSelectionChange\n      };\n\n      var emptyTable = _react2.default.createElement(_eui.EuiEmptyPrompt, {\n        iconType: 'importAction',\n        title: _react2.default.createElement(\n          'h2',\n          null,\n          'Add your first workpad'\n        ),\n        titleSize: 's',\n        body: _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(\n            'p',\n            null,\n            'Create a new workpad or drag and drop previously built workpad JSON files here.'\n          )\n        )\n      });\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _workpad_dropzone.WorkpadDropzone,\n          { onUpload: _this.onUpload, disabled: createPending || !canUserWrite },\n          _react2.default.createElement(_eui.EuiBasicTable, {\n            compressed: true,\n            items: rows,\n            itemId: 'id',\n            columns: columns,\n            sorting: sorting,\n            noItemsMessage: emptyTable,\n            onChange: _this.onTableChange,\n            isSelectable: true,\n            selection: selection,\n            className: 'canvasWorkpad__dropzoneTable',\n            'data-test-subj': 'canvasWorkpadLoaderTable'\n          }),\n          _react2.default.createElement(_eui.EuiSpacer, null),\n          _react2.default.createElement(\n            _eui.EuiFlexGroup,\n            { gutterSize: 'none', justifyContent: 'flexEnd' },\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false },\n              _react2.default.createElement(_eui.EuiPagination, { activePage: pageNumber, onPageClick: setPage, pageCount: totalPages })\n            )\n          )\n        )\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(WorkpadLoader, [{\n    key: 'componentDidMount',\n    value: function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // on component load, kick off the workpad search\n                this.props.findWorkpads();\n\n                // keep track of whether or not the component is mounted, to prevent rogue setState calls\n                this._isMounted = true;\n\n              case 2:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidMount() {\n        return _ref10.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(newProps) {\n      // the workpadId prop will change when a is created or loaded, close the toolbar when it does\n      var _props = this.props,\n          workpadId = _props.workpadId,\n          onClose = _props.onClose;\n\n      if (workpadId !== newProps.workpadId) {\n        onClose();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n\n    // create new empty workpad\n\n\n    // create new workpad from uploaded JSON\n\n\n    // clone existing workpad\n\n\n    // Workpad remove methods\n\n\n    // downloads selected workpads as JSON files\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _state = this.state,\n          deletingWorkpad = _state.deletingWorkpad,\n          createPending = _state.createPending,\n          selectedWorkpads = _state.selectedWorkpads,\n          sortField = _state.sortField,\n          sortDirection = _state.sortDirection;\n      var canUserWrite = this.props.canUserWrite;\n\n      var isLoading = this.props.workpads == null;\n\n      var createButton = _react2.default.createElement(_workpad_create.WorkpadCreate, {\n        createPending: createPending,\n        onCreate: this.createWorkpad,\n        disabled: !canUserWrite\n      });\n\n      var deleteButton = _react2.default.createElement(\n        _eui.EuiButton,\n        {\n          color: 'danger',\n          iconType: 'trash',\n          onClick: this.openRemoveConfirm,\n          disabled: !canUserWrite\n        },\n        'Delete (' + selectedWorkpads.length + ')'\n      );\n\n      var downloadButton = _react2.default.createElement(\n        _eui.EuiButton,\n        { color: 'secondary', onClick: this.downloadWorkpads, iconType: 'exportAction' },\n        'Download (' + selectedWorkpads.length + ')'\n      );\n\n      var uploadButton = _react2.default.createElement(_eui.EuiFilePicker, {\n        compressed: true,\n        className: 'canvasWorkpad__upload--compressed',\n        initialPromptText: 'Import workpad JSON file',\n        onChange: function onChange(_ref11) {\n          var _ref12 = _slicedToArray(_ref11, 1),\n              file = _ref12[0];\n\n          return (0, _upload_workpad.uploadWorkpad)(file, _this3.onUpload);\n        },\n        accept: 'application/json',\n        disabled: createPending || !canUserWrite\n      });\n\n      if (!canUserWrite) {\n        createButton = _react2.default.createElement(\n          _eui.EuiToolTip,\n          { content: 'You don\\'t have permission to create workpads' },\n          createButton\n        );\n        deleteButton = _react2.default.createElement(\n          _eui.EuiToolTip,\n          { content: 'You don\\'t have permission to delete workpads' },\n          deleteButton\n        );\n        uploadButton = _react2.default.createElement(\n          _eui.EuiToolTip,\n          { content: 'You don\\'t have permission to upload workpads' },\n          uploadButton\n        );\n      }\n\n      var modalTitle = selectedWorkpads.length === 1 ? 'Delete workpad \\'' + selectedWorkpads[0].name + '\\'?' : 'Delete ' + selectedWorkpads.length + ' workpads?';\n\n      var confirmModal = _react2.default.createElement(_confirm_modal.ConfirmModal, {\n        isOpen: deletingWorkpad,\n        title: modalTitle,\n        message: 'You can\\'t recover deleted workpads.',\n        confirmButtonText: 'Delete',\n        onConfirm: this.removeWorkpads,\n        onCancel: this.closeRemoveConfirm\n      });\n\n      var sortedWorkpads = [];\n\n      if (!createPending && !isLoading) {\n        var workpads = this.props.workpads.workpads;\n\n        sortedWorkpads = (0, _lodash.sortByOrder)(workpads, [sortField, '@timestamp'], [sortDirection, 'desc']);\n      }\n\n      return _react2.default.createElement(\n        _paginate.Paginate,\n        { rows: sortedWorkpads },\n        function (pagination) {\n          return _react2.default.createElement(\n            _react.Fragment,\n            null,\n            _react2.default.createElement(\n              _eui.EuiFlexGroup,\n              { justifyContent: 'spaceBetween' },\n              _react2.default.createElement(\n                _eui.EuiFlexItem,\n                { grow: 2 },\n                _react2.default.createElement(\n                  _eui.EuiFlexGroup,\n                  { gutterSize: 's' },\n                  selectedWorkpads.length > 0 && _react2.default.createElement(\n                    _react.Fragment,\n                    null,\n                    _react2.default.createElement(\n                      _eui.EuiFlexItem,\n                      { grow: false },\n                      downloadButton\n                    ),\n                    _react2.default.createElement(\n                      _eui.EuiFlexItem,\n                      { grow: false },\n                      deleteButton\n                    )\n                  ),\n                  _react2.default.createElement(\n                    _eui.EuiFlexItem,\n                    { grow: 1 },\n                    _react2.default.createElement(_workpad_search.WorkpadSearch, {\n                      onChange: function onChange(text) {\n                        pagination.setPage(0);\n                        _this3.props.findWorkpads(text);\n                      }\n                    })\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                _eui.EuiFlexItem,\n                { grow: 2 },\n                _react2.default.createElement(\n                  _eui.EuiFlexGroup,\n                  { gutterSize: 's', justifyContent: 'flexEnd', wrap: true },\n                  _react2.default.createElement(\n                    _eui.EuiFlexItem,\n                    { grow: false },\n                    uploadButton\n                  ),\n                  _react2.default.createElement(\n                    _eui.EuiFlexItem,\n                    { grow: false },\n                    createButton\n                  )\n                )\n              )\n            ),\n            _react2.default.createElement(_eui.EuiSpacer, null),\n            createPending && _react2.default.createElement(\n              'div',\n              { style: { width: '100%' } },\n              'Creating Workpad...'\n            ),\n            !createPending && isLoading && _react2.default.createElement(\n              'div',\n              { style: { width: '100%' } },\n              'Fetching Workpads...'\n            ),\n            !createPending && !isLoading && _this3.renderWorkpadTable(pagination),\n            confirmModal\n          );\n        }\n      );\n    }\n  }]);\n\n  return WorkpadLoader;\n}(_react2.default.PureComponent);\n\nWorkpadLoader.propTypes = {\n  workpadId: _propTypes2.default.string.isRequired,\n  canUserWrite: _propTypes2.default.bool.isRequired,\n  createWorkpad: _propTypes2.default.func.isRequired,\n  findWorkpads: _propTypes2.default.func.isRequired,\n  downloadWorkpad: _propTypes2.default.func.isRequired,\n  cloneWorkpad: _propTypes2.default.func.isRequired,\n  removeWorkpads: _propTypes2.default.func.isRequired,\n  onClose: _propTypes2.default.func.isRequired,\n  workpads: _propTypes2.default.object\n};",null]}