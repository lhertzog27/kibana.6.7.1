{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/timeseriesexplorer/components/forecasting_modal/forecasts_list.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/timeseriesexplorer/components/forecasting_modal/forecasts_list.js","mtime":1567631712068},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForecastsList = ForecastsList;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _date_utils = require('../../../util/date_utils');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n/*\n * Lists details of previously run forecasts in a table.\n */\n\nfunction getColumns(viewForecast) {\n  return [{\n    field: 'forecast_create_timestamp',\n    name: _i18n.i18n.translate('xpack.ml.timeSeriesExplorer.forecastsList.createdColumnName', {\n      defaultMessage: 'Created'\n    }),\n    dataType: 'date',\n    render: function render(date) {\n      return (0, _date_utils.formatHumanReadableDateTimeSeconds)(date);\n    },\n    sortable: true\n  }, {\n    field: 'forecast_start_timestamp',\n    name: _i18n.i18n.translate('xpack.ml.timeSeriesExplorer.forecastsList.fromColumnName', {\n      defaultMessage: 'From'\n    }),\n    dataType: 'date',\n    render: function render(date) {\n      return (0, _date_utils.formatHumanReadableDateTimeSeconds)(date);\n    },\n    sortable: true\n  }, {\n    field: 'forecast_end_timestamp',\n    name: _i18n.i18n.translate('xpack.ml.timeSeriesExplorer.forecastsList.toColumnName', {\n      defaultMessage: 'To'\n    }),\n    dataType: 'date',\n    render: function render(date) {\n      return (0, _date_utils.formatHumanReadableDateTimeSeconds)(date);\n    },\n    sortable: true\n  }, {\n    name: _i18n.i18n.translate('xpack.ml.timeSeriesExplorer.forecastsList.viewColumnName', {\n      defaultMessage: 'View'\n    }),\n    render: function render(forecast) {\n      return _react2.default.createElement(\n        _eui.EuiButton,\n        {\n          className: 'view-forecast-btn',\n          onClick: function onClick() {\n            return viewForecast(forecast.forecast_id);\n          }\n        },\n        _react2.default.createElement('i', { 'aria-hidden': 'true', className: 'fa fa-line-chart' })\n      );\n    }\n  }];\n}\n\n// TODO - add in ml-info-icon to the h3 element,\n//        then remove tooltip and inline style.\nfunction ForecastsList(_ref) {\n  var forecasts = _ref.forecasts,\n      viewForecast = _ref.viewForecast;\n\n  return _react2.default.createElement(\n    _eui.EuiText,\n    null,\n    _react2.default.createElement(\n      'h3',\n      {\n        'aria-describedby': 'ml_aria_description_forecasting_modal_view_list',\n        style: { display: 'inline', paddingRight: '5px' }\n      },\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.ml.timeSeriesExplorer.forecastsList.previousForecastsTitle',\n        defaultMessage: 'Previous forecasts'\n      })\n    ),\n    _react2.default.createElement(\n      _eui.EuiToolTip,\n      {\n        position: 'right',\n        content: _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.ml.timeSeriesExplorer.forecastsList.listsOfFiveRecentlyRunForecastsTooltip',\n          defaultMessage: 'Lists a maximum of five of the most recently run forecasts.'\n        })\n      },\n      _react2.default.createElement(_eui.EuiIcon, {\n        type: 'questionInCircle',\n        size: 's'\n      })\n    ),\n    _react2.default.createElement(_eui.EuiInMemoryTable, {\n      items: forecasts,\n      columns: getColumns(viewForecast),\n      pagination: false\n    })\n  );\n}\n\nForecastsList.propType = {\n  forecasts: _propTypes2.default.array,\n  viewForecast: _propTypes2.default.func.isRequired\n};",null]}