{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad_loader/workpad_dropzone/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad_loader/workpad_dropzone/index.js","mtime":1567631711929},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkpadDropzone = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _recompose = require('recompose');\n\nvar _notify = require('../../../lib/notify');\n\nvar _upload_workpad = require('../upload_workpad');\n\nvar _workpad_dropzone = require('./workpad_dropzone');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkpadDropzone = exports.WorkpadDropzone = (0, _recompose.compose)((0, _recompose.withHandlers)({\n  onDropAccepted: function onDropAccepted(_ref) {\n    var onUpload = _ref.onUpload;\n    return function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 1),\n          file = _ref3[0];\n\n      return (0, _upload_workpad.uploadWorkpad)(file, onUpload);\n    };\n  },\n  onDropRejected: function onDropRejected() {\n    return function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 1),\n          file = _ref5[0];\n\n      _notify.notify.warning('Only JSON files are accepted', {\n        title: 'Couldn\\'t upload \\'' + (file.name || 'file') + '\\''\n      });\n    };\n  }\n}))(_workpad_dropzone.WorkpadDropzone);\n\nWorkpadDropzone.propTypes = {\n  onUpload: _propTypes2.default.func.isRequired\n};",null]}