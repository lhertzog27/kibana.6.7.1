{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/page_manager/page_manager.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/page_manager/page_manager.js","mtime":1567631711925},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PageManager = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _reactBeautifulDnd = require('react-beautiful-dnd');\n\nvar _styleIt = require('style-it');\n\nvar _styleIt2 = _interopRequireDefault(_styleIt);\n\nvar _confirm_modal = require('../confirm_modal');\n\nvar _link = require('../link');\n\nvar _page_preview = require('../page_preview');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar PageManager = exports.PageManager = function (_React$PureComponent) {\n  _inherits(PageManager, _React$PureComponent);\n\n  function PageManager() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PageManager);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PageManager.__proto__ || Object.getPrototypeOf(PageManager)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      showTrayPop: true\n    }, _this.scrollToActivePage = function () {\n      if (_this.activePageRef && _this.pageListRef) {\n        // not all target browsers support element.scrollTo\n        // TODO: replace this with something more cross-browser, maybe scrollIntoView\n        if (!_this.pageListRef.scrollTo) {\n          return;\n        }\n\n        var pageOffset = _this.activePageRef.offsetLeft;\n\n        var _this$activePageRef$g = _this.activePageRef.getBoundingClientRect(),\n            pageLeft = _this$activePageRef$g.left,\n            pageRight = _this$activePageRef$g.right,\n            pageWidth = _this$activePageRef$g.width;\n\n        var _this$pageListRef$get = _this.pageListRef.getBoundingClientRect(),\n            listLeft = _this$pageListRef$get.left,\n            listRight = _this$pageListRef$get.right,\n            listWidth = _this$pageListRef$get.width;\n\n        if (pageLeft < listLeft) {\n          _this.pageListRef.scrollTo({\n            left: pageOffset,\n            behavior: 'smooth'\n          });\n        }\n        if (pageRight > listRight) {\n          _this.pageListRef.scrollTo({\n            left: pageOffset - listWidth + pageWidth,\n            behavior: 'smooth'\n          });\n        }\n      }\n    }, _this.confirmDelete = function (pageId) {\n      _this._isMounted && _this.props.setDeleteId(pageId);\n    }, _this.resetDelete = function () {\n      return _this._isMounted && _this.props.setDeleteId(null);\n    }, _this.doDelete = function () {\n      var _this$props = _this.props,\n          previousPage = _this$props.previousPage,\n          removePage = _this$props.removePage,\n          deleteId = _this$props.deleteId,\n          selectedPage = _this$props.selectedPage;\n\n      _this.resetDelete();\n      if (deleteId === selectedPage) {\n        previousPage();\n      }\n      removePage(deleteId);\n    }, _this.onDragEnd = function (_ref2) {\n      var pageId = _ref2.draggableId,\n          source = _ref2.source,\n          destination = _ref2.destination;\n\n      // dropped outside the list\n      if (!destination) {\n        return;\n      }\n\n      var position = destination.index - source.index;\n\n      _this.props.movePage(pageId, position);\n    }, _this.renderPage = function (page, i) {\n      var _this$props2 = _this.props,\n          isWriteable = _this$props2.isWriteable,\n          selectedPage = _this$props2.selectedPage,\n          workpadId = _this$props2.workpadId,\n          movePage = _this$props2.movePage,\n          duplicatePage = _this$props2.duplicatePage,\n          workpadCSS = _this$props2.workpadCSS;\n\n      var pageNumber = i + 1;\n\n      return _react2.default.createElement(\n        _reactBeautifulDnd.Draggable,\n        { key: page.id, draggableId: page.id, index: i, isDragDisabled: !isWriteable },\n        function (provided) {\n          return _react2.default.createElement(\n            'div',\n            _extends({\n              key: page.id,\n              className: 'canvasPageManager__page ' + (page.id === selectedPage ? 'canvasPageManager__page-isActive' : ''),\n              ref: function ref(el) {\n                if (page.id === selectedPage) {\n                  _this.activePageRef = el;\n                }\n                provided.innerRef(el);\n              }\n            }, provided.draggableProps, provided.dragHandleProps),\n            _react2.default.createElement(\n              _eui.EuiFlexGroup,\n              { gutterSize: 's' },\n              _react2.default.createElement(\n                _eui.EuiFlexItem,\n                { grow: false },\n                _react2.default.createElement(\n                  _eui.EuiText,\n                  { size: 'xs', className: 'canvasPageManager__pageNumber' },\n                  pageNumber\n                )\n              ),\n              _react2.default.createElement(\n                _eui.EuiFlexItem,\n                { grow: false },\n                _react2.default.createElement(\n                  _link.Link,\n                  {\n                    name: 'loadWorkpad',\n                    params: { id: workpadId, page: pageNumber },\n                    'aria-label': 'Load page number ' + pageNumber\n                  },\n                  _styleIt2.default.it(workpadCSS, _react2.default.createElement(\n                    'div',\n                    null,\n                    _react2.default.createElement(_page_preview.PagePreview, {\n                      isWriteable: isWriteable,\n                      page: page,\n                      height: 100,\n                      pageNumber: pageNumber,\n                      movePage: movePage,\n                      selectedPage: selectedPage,\n                      duplicatePage: duplicatePage,\n                      confirmDelete: _this.confirmDelete\n                    })\n                  ))\n                )\n              )\n            )\n          );\n        }\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(PageManager, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // keep track of whether or not the component is mounted, to prevent rogue setState calls\n      this._isMounted = true;\n\n      // gives the tray pop animation time to finish\n      setTimeout(function () {\n        _this2.scrollToActivePage();\n        _this2._isMounted && _this2.setState({ showTrayPop: false });\n      }, 1000);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // scrolls to the active page on the next tick, otherwise new pages don't scroll completely into view\n      if (prevProps.selectedPage !== this.props.selectedPage) {\n        setTimeout(this.scrollToActivePage, 0);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          pages = _props.pages,\n          addPage = _props.addPage,\n          deleteId = _props.deleteId,\n          isWriteable = _props.isWriteable;\n      var showTrayPop = this.state.showTrayPop;\n\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { gutterSize: 'none', className: 'canvasPageManager' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { className: 'canvasPageManager__pages' },\n            _react2.default.createElement(\n              _reactBeautifulDnd.DragDropContext,\n              { onDragEnd: this.onDragEnd },\n              _react2.default.createElement(\n                _reactBeautifulDnd.Droppable,\n                { droppableId: 'droppable-page-manager', direction: 'horizontal' },\n                function (provided) {\n                  return _react2.default.createElement(\n                    'div',\n                    _extends({\n                      className: 'canvasPageManager__pageList ' + (showTrayPop ? 'canvasPageManager--trayPop' : ''),\n                      ref: function ref(el) {\n                        _this3.pageListRef = el;\n                        provided.innerRef(el);\n                      }\n                    }, provided.droppableProps),\n                    pages.map(_this3.renderPage),\n                    provided.placeholder\n                  );\n                }\n              )\n            )\n          ),\n          isWriteable && _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiToolTip,\n              {\n                anchorClassName: 'canvasPageManager__addPageTip',\n                content: 'Add a new page to this workpad',\n                position: 'left'\n              },\n              _react2.default.createElement(\n                'button',\n                { onClick: addPage, className: 'canvasPageManager__addPage' },\n                _react2.default.createElement(_eui.EuiIcon, { color: 'ghost', type: 'plusInCircle', size: 'l' })\n              )\n            )\n          )\n        ),\n        _react2.default.createElement(_confirm_modal.ConfirmModal, {\n          isOpen: deleteId != null,\n          title: 'Remove Page',\n          message: 'Are you sure you want to remove this page?',\n          confirmButtonText: 'Remove',\n          onConfirm: this.doDelete,\n          onCancel: this.resetDelete\n        })\n      );\n    }\n  }]);\n\n  return PageManager;\n}(_react2.default.PureComponent);\n\nPageManager.propTypes = {\n  isWriteable: _propTypes2.default.bool.isRequired,\n  pages: _propTypes2.default.array.isRequired,\n  workpadId: _propTypes2.default.string.isRequired,\n  addPage: _propTypes2.default.func.isRequired,\n  movePage: _propTypes2.default.func.isRequired,\n  previousPage: _propTypes2.default.func.isRequired,\n  duplicatePage: _propTypes2.default.func.isRequired,\n  removePage: _propTypes2.default.func.isRequired,\n  selectedPage: _propTypes2.default.string,\n  deleteId: _propTypes2.default.string,\n  setDeleteId: _propTypes2.default.func.isRequired,\n  workpadCSS: _propTypes2.default.string\n};",null]}