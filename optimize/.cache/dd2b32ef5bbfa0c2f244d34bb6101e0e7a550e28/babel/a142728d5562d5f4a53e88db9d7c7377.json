{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/xpack_main/public/hacks/fetch_telemetry.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/xpack_main/public/hacks/fetch_telemetry.js","mtime":1567631712359},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchTelemetry = fetchTelemetry;\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _moment2 = require('moment');\n\nvar _moment3 = _interopRequireDefault(_moment2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Fetch Telemetry data by calling the Kibana API.\n *\n * @param {Object} $http The HTTP handler\n * @param {String} basePath The base URI\n * @param {Function} _moment moment.js, but injectable for tests\n * @return {Promise} An array of cluster Telemetry objects.\n */\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction fetchTelemetry($http) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$basePath = _ref.basePath,\n      basePath = _ref$basePath === undefined ? _chrome2.default.getBasePath() : _ref$basePath,\n      _ref$_moment = _ref._moment,\n      _moment = _ref$_moment === undefined ? _moment3.default : _ref$_moment;\n\n  return $http.post(basePath + '/api/telemetry/v1/clusters/_stats', {\n    timeRange: {\n      min: _moment().subtract(20, 'minutes').toISOString(),\n      max: _moment().toISOString()\n    }\n  });\n}",null]}