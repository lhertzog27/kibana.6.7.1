{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/settings/filter_lists/edit/edit_filter_list.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/settings/filter_lists/edit/edit_filter_list.js","mtime":1567631712067},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EditFilterList = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _notify = require('ui/notify');\n\nvar _header = require('./header');\n\nvar _toolbar = require('./toolbar');\n\nvar _items_grid = require('../../../components/items_grid');\n\nvar _utils = require('./utils');\n\nvar _ml_api_service = require('../../../services/ml_api_service');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                     * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                     * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                     * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                     */\n\n/*\n * React component for viewing and editing a filter list, a list of items\n * used for example to safe list items via a job detector rule.\n */\n\nvar DEFAULT_ITEMS_PER_PAGE = 50;\n\n// Returns the list of items that match the query entered in the EuiSearchBar.\nfunction getMatchingFilterItems(searchBarQuery, items) {\n  if (items === undefined) {\n    return [];\n  }\n\n  if (searchBarQuery === undefined) {\n    return [].concat(_toConsumableArray(items));\n  }\n\n  // Convert the list of Strings into a list of Objects suitable for running through\n  // the search bar query.\n  var allItems = items.map(function (item) {\n    return { value: item };\n  });\n  var matchingObjects = _eui.EuiSearchBar.Query.execute(searchBarQuery, allItems, { defaultFields: ['value'] });\n  return matchingObjects.map(function (item) {\n    return item.value;\n  });\n}\n\nfunction getActivePage(activePageState, itemsPerPage, numMatchingItems) {\n  // Checks if supplied active page number from state is applicable for the number\n  // of matching items in the grid, and if not returns the last applicable page number.\n  var activePage = activePageState;\n  var activePageStartIndex = itemsPerPage * activePageState;\n  if (activePageStartIndex > numMatchingItems) {\n    activePage = Math.max(Math.ceil(numMatchingItems / itemsPerPage) - 1, 0); // Sets to 0 for 0 matches.\n  }\n  return activePage;\n}\n\nfunction returnToFiltersList() {\n  window.location.href = '#/settings/filter_lists';\n}\n\nvar EditFilterList = exports.EditFilterList = (0, _react3.injectI18n)((_temp = _class = function (_Component) {\n  _inherits(_class, _Component);\n\n  function _class(props) {\n    _classCallCheck(this, _class);\n\n    var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props));\n\n    _this.loadFilterList = function (filterId) {\n      var intl = _this.props.intl;\n\n\n      _ml_api_service.ml.filters.filters({ filterId: filterId }).then(function (filter) {\n        _this.setLoadedFilterState(filter);\n      }).catch(function (resp) {\n        console.log('Error loading filter ' + filterId + ':', resp);\n        _notify.toastNotifications.addDanger(intl.formatMessage({\n          id: 'xpack.ml.settings.filterLists.editFilterList.loadingDetailsOfFilterErrorMessage',\n          defaultMessage: 'An error occurred loading details of filter {filterId}'\n        }, {\n          filterId: filterId\n        }));\n      });\n    };\n\n    _this.setLoadedFilterState = function (loadedFilter) {\n      // Store the loaded filter so we can diff changes to the items when saving updates.\n      _this.setState(function (prevState) {\n        var itemsPerPage = prevState.itemsPerPage,\n            searchQuery = prevState.searchQuery;\n\n\n        var matchingItems = getMatchingFilterItems(searchQuery, loadedFilter.items);\n        var activePage = getActivePage(prevState.activePage, itemsPerPage, matchingItems.length);\n\n        return {\n          description: loadedFilter.description,\n          items: loadedFilter.items !== undefined ? [].concat(_toConsumableArray(loadedFilter.items)) : [],\n          matchingItems: matchingItems,\n          selectedItems: [],\n          loadedFilter: loadedFilter,\n          isNewFilterIdInvalid: false,\n          activePage: activePage,\n          searchQuery: searchQuery,\n          saveInProgress: false\n        };\n      });\n    };\n\n    _this.updateNewFilterId = function (newFilterId) {\n      _this.setState({\n        newFilterId: newFilterId,\n        isNewFilterIdInvalid: !(0, _utils.isValidFilterListId)(newFilterId)\n      });\n    };\n\n    _this.updateDescription = function (description) {\n      _this.setState({ description: description });\n    };\n\n    _this.addItems = function (itemsToAdd) {\n      var intl = _this.props.intl;\n\n\n      _this.setState(function (prevState) {\n        var itemsPerPage = prevState.itemsPerPage,\n            searchQuery = prevState.searchQuery;\n\n        var items = [].concat(_toConsumableArray(prevState.items));\n        var alreadyInFilter = [];\n        itemsToAdd.forEach(function (item) {\n          if (items.indexOf(item) === -1) {\n            items.push(item);\n          } else {\n            alreadyInFilter.push(item);\n          }\n        });\n        items.sort(function (str1, str2) {\n          return str1.localeCompare(str2);\n        });\n\n        if (alreadyInFilter.length > 0) {\n          _notify.toastNotifications.addWarning(intl.formatMessage({\n            id: 'xpack.ml.settings.filterLists.editFilterList.duplicatedItemsInFilterListWarningMessage',\n            defaultMessage: 'The following items were already in the filter list: {alreadyInFilter}'\n          }, {\n            alreadyInFilter: alreadyInFilter\n          }));\n        }\n\n        var matchingItems = getMatchingFilterItems(searchQuery, items);\n        var activePage = getActivePage(prevState.activePage, itemsPerPage, matchingItems.length);\n\n        return {\n          items: items,\n          matchingItems: matchingItems,\n          activePage: activePage,\n          searchQuery: searchQuery\n        };\n      });\n    };\n\n    _this.deleteSelectedItems = function () {\n      _this.setState(function (prevState) {\n        var selectedItems = prevState.selectedItems,\n            itemsPerPage = prevState.itemsPerPage,\n            searchQuery = prevState.searchQuery;\n\n        var items = [].concat(_toConsumableArray(prevState.items));\n        selectedItems.forEach(function (item) {\n          var index = items.indexOf(item);\n          if (index !== -1) {\n            items.splice(index, 1);\n          }\n        });\n\n        var matchingItems = getMatchingFilterItems(searchQuery, items);\n        var activePage = getActivePage(prevState.activePage, itemsPerPage, matchingItems.length);\n\n        return {\n          items: items,\n          matchingItems: matchingItems,\n          selectedItems: [],\n          activePage: activePage,\n          searchQuery: searchQuery\n        };\n      });\n    };\n\n    _this.onSearchChange = function (_ref) {\n      var query = _ref.query;\n\n      _this.setState(function (prevState) {\n        var items = prevState.items,\n            itemsPerPage = prevState.itemsPerPage;\n\n\n        var matchingItems = getMatchingFilterItems(query, items);\n        var activePage = getActivePage(prevState.activePage, itemsPerPage, matchingItems.length);\n\n        return {\n          matchingItems: matchingItems,\n          activePage: activePage,\n          searchQuery: query\n        };\n      });\n    };\n\n    _this.setItemSelected = function (item, isSelected) {\n      _this.setState(function (prevState) {\n        var selectedItems = [].concat(_toConsumableArray(prevState.selectedItems));\n        var index = selectedItems.indexOf(item);\n        if (isSelected === true && index === -1) {\n          selectedItems.push(item);\n        } else if (isSelected === false && index !== -1) {\n          selectedItems.splice(index, 1);\n        }\n\n        return {\n          selectedItems: selectedItems\n        };\n      });\n    };\n\n    _this.setActivePage = function (activePage) {\n      _this.setState({ activePage: activePage });\n    };\n\n    _this.setItemsPerPage = function (itemsPerPage) {\n      _this.setState({\n        itemsPerPage: itemsPerPage,\n        activePage: 0\n      });\n    };\n\n    _this.save = function () {\n      _this.setState({ saveInProgress: true });\n\n      var _this$state = _this.state,\n          loadedFilter = _this$state.loadedFilter,\n          newFilterId = _this$state.newFilterId,\n          description = _this$state.description,\n          items = _this$state.items;\n      var intl = _this.props.intl;\n\n      var filterId = _this.props.filterId !== undefined ? _this.props.filterId : newFilterId;\n      (0, _utils.saveFilterList)(filterId, description, items, loadedFilter).then(function (savedFilter) {\n        _this.setLoadedFilterState(savedFilter);\n        returnToFiltersList();\n      }).catch(function (resp) {\n        console.log('Error saving filter ' + filterId + ':', resp);\n        _notify.toastNotifications.addDanger(intl.formatMessage({\n          id: 'xpack.ml.settings.filterLists.editFilterList.savingFilterErrorMessage',\n          defaultMessage: 'An error occurred saving filter {filterId}'\n        }, {\n          filterId: filterId\n        }));\n        _this.setState({ saveInProgress: false });\n      });\n    };\n\n    _this.state = {\n      description: '',\n      items: [],\n      matchingItems: [],\n      selectedItems: [],\n      loadedFilter: {},\n      newFilterId: '',\n      isNewFilterIdInvalid: true,\n      activePage: 0,\n      itemsPerPage: DEFAULT_ITEMS_PER_PAGE,\n      saveInProgress: false\n    };\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var filterId = this.props.filterId;\n      if (filterId !== undefined) {\n        this.loadFilterList(filterId);\n      } else {\n        this.setState({ newFilterId: '' });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          loadedFilter = _state.loadedFilter,\n          newFilterId = _state.newFilterId,\n          isNewFilterIdInvalid = _state.isNewFilterIdInvalid,\n          description = _state.description,\n          items = _state.items,\n          matchingItems = _state.matchingItems,\n          selectedItems = _state.selectedItems,\n          itemsPerPage = _state.itemsPerPage,\n          activePage = _state.activePage,\n          saveInProgress = _state.saveInProgress;\n      var _props = this.props,\n          canCreateFilter = _props.canCreateFilter,\n          canDeleteFilter = _props.canDeleteFilter;\n\n\n      var totalItemCount = items !== undefined ? items.length : 0;\n\n      return _react2.default.createElement(\n        _eui.EuiPage,\n        { className: 'ml-edit-filter-lists' },\n        _react2.default.createElement(\n          _eui.EuiPageContent,\n          {\n            className: 'ml-edit-filter-lists-content',\n            verticalPosition: 'center',\n            horizontalPosition: 'center'\n          },\n          _react2.default.createElement(_header.EditFilterListHeader, {\n            canCreateFilter: canCreateFilter,\n            filterId: this.props.filterId,\n            newFilterId: newFilterId,\n            isNewFilterIdInvalid: isNewFilterIdInvalid,\n            updateNewFilterId: this.updateNewFilterId,\n            description: description,\n            updateDescription: this.updateDescription,\n            totalItemCount: totalItemCount,\n            usedBy: loadedFilter.used_by\n          }),\n          _react2.default.createElement(_toolbar.EditFilterListToolbar, {\n            canCreateFilter: canCreateFilter,\n            canDeleteFilter: canDeleteFilter,\n            onSearchChange: this.onSearchChange,\n            addItems: this.addItems,\n            deleteSelectedItems: this.deleteSelectedItems,\n            selectedItemCount: selectedItems.length\n          }),\n          _react2.default.createElement(_eui.EuiSpacer, { size: 'xl' }),\n          _react2.default.createElement(_items_grid.ItemsGrid, {\n            totalItemCount: totalItemCount,\n            items: matchingItems,\n            selectedItems: selectedItems,\n            itemsPerPage: itemsPerPage,\n            setItemsPerPage: this.setItemsPerPage,\n            setItemSelected: this.setItemSelected,\n            activePage: activePage,\n            setActivePage: this.setActivePage\n          }),\n          _react2.default.createElement(\n            _eui.EuiFlexGroup,\n            { justifyContent: 'flexEnd' },\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false },\n              _react2.default.createElement(\n                _eui.EuiButtonEmpty,\n                {\n                  onClick: returnToFiltersList\n                },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.ml.settings.filterLists.editFilterList.cancelButtonLabel',\n                  defaultMessage: 'Cancel'\n                })\n              )\n            ),\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false },\n              _react2.default.createElement(\n                _eui.EuiButton,\n                {\n                  onClick: this.save,\n                  disabled: saveInProgress === true || isNewFilterIdInvalid === true || canCreateFilter === false,\n                  fill: true\n                },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.ml.settings.filterLists.editFilterList.saveButtonLabel',\n                  defaultMessage: 'Save'\n                })\n              )\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return _class;\n}(_react.Component), _class.displayName = 'EditFilterList', _class.propTypes = {\n  filterId: _propTypes2.default.string,\n  canCreateFilter: _propTypes2.default.bool.isRequired,\n  canDeleteFilter: _propTypes2.default.bool.isRequired\n}, _temp));",null]}