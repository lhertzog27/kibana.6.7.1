{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/vector_layer.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/vector_layer.js","mtime":1567631712022},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VectorLayer = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } }; /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             */\n\nvar _mapboxGl = require('mapbox-gl');\n\nvar _mapboxGl2 = _interopRequireDefault(_mapboxGl);\n\nvar _turf = require('turf');\n\nvar _turf2 = _interopRequireDefault(_turf);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _layer = require('./layer');\n\nvar _vector_style = require('./styles/vector_style');\n\nvar _left_inner_join = require('./joins/left_inner_join');\n\nvar _constants = require('../../../common/constants');\n\nvar _feature_tooltip = require('../../components/map/feature_tooltip');\n\nvar _store = require('../../store/store');\n\nvar _map_selectors = require('../../selectors/map_selectors');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EMPTY_FEATURE_COLLECTION = {\n  type: 'FeatureCollection',\n  features: []\n};\n\nvar CLOSED_SHAPE_MB_FILTER = ['any', ['==', ['geometry-type'], 'Polygon'], ['==', ['geometry-type'], 'MultiPolygon']];\n\nvar ALL_SHAPE_MB_FILTER = ['any', ['==', ['geometry-type'], 'Polygon'], ['==', ['geometry-type'], 'MultiPolygon'], ['==', ['geometry-type'], 'LineString'], ['==', ['geometry-type'], 'MultiLineString']];\n\nvar VectorLayer = exports.VectorLayer = function (_AbstractLayer) {\n  _inherits(VectorLayer, _AbstractLayer);\n\n  _createClass(VectorLayer, null, [{\n    key: 'createDescriptor',\n    value: function createDescriptor(options) {\n      var layerDescriptor = _get(VectorLayer.__proto__ || Object.getPrototypeOf(VectorLayer), 'createDescriptor', this).call(this, options);\n      layerDescriptor.type = VectorLayer.type;\n\n      if (!options.style) {\n        var mapColors = (0, _map_selectors.getMapColors)((0, _store.getStore)().getState());\n        var styleProperties = _vector_style.VectorStyle.createDefaultStyleProperties(mapColors);\n        layerDescriptor.style = _vector_style.VectorStyle.createDescriptor(styleProperties);\n      }\n\n      return layerDescriptor;\n    }\n  }]);\n\n  function VectorLayer(options) {\n    _classCallCheck(this, VectorLayer);\n\n    var _this = _possibleConstructorReturn(this, (VectorLayer.__proto__ || Object.getPrototypeOf(VectorLayer)).call(this, options));\n\n    _this._joins = [];\n    if (options.layerDescriptor.joins) {\n      options.layerDescriptor.joins.forEach(function (joinDescriptor) {\n        _this._joins.push(new _left_inner_join.LeftInnerJoin(joinDescriptor));\n      });\n    }\n    return _this;\n  }\n\n  _createClass(VectorLayer, [{\n    key: 'destroy',\n    value: function destroy() {\n      if (this._source) {\n        this._source.destroy();\n      }\n      this._joins.forEach(function (joinSource) {\n        joinSource.destroy();\n      });\n    }\n  }, {\n    key: 'getJoins',\n    value: function getJoins() {\n      return this._joins.slice();\n    }\n  }, {\n    key: 'getValidJoins',\n    value: function getValidJoins() {\n      return this._joins.filter(function (join) {\n        return join.hasCompleteConfig();\n      });\n    }\n  }, {\n    key: 'getSupportedStyles',\n    value: function getSupportedStyles() {\n      return [_vector_style.VectorStyle];\n    }\n  }, {\n    key: 'getIcon',\n    value: function getIcon() {\n      var isPointsOnly = this._isPointsOnly();\n      return this._style.getIcon(isPointsOnly);\n    }\n  }, {\n    key: 'getLayerTypeIconName',\n    value: function getLayerTypeIconName() {\n      return 'vector';\n    }\n  }, {\n    key: 'getTOCDetails',\n    value: function getTOCDetails() {\n      return this._style.getTOCDetails();\n    }\n  }, {\n    key: '_getBoundsBasedOnData',\n    value: function _getBoundsBasedOnData() {\n      var featureCollection = this._getSourceFeatureCollection();\n      if (!featureCollection) {\n        return null;\n      }\n      var bbox = _turf2.default.bbox(featureCollection);\n      return {\n        min_lon: bbox[0],\n        min_lat: bbox[1],\n        max_lon: bbox[2],\n        max_lat: bbox[3]\n      };\n    }\n  }, {\n    key: 'getBounds',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(filters) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._source.isBoundsAware()) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return this._source.getBoundsForFilters(filters);\n\n              case 3:\n                return _context.abrupt('return', _context.sent);\n\n              case 4:\n                return _context.abrupt('return', this._getBoundsBasedOnData());\n\n              case 5:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBounds(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return getBounds;\n    }()\n  }, {\n    key: 'getStringFields',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._source.getStringFields();\n\n              case 2:\n                return _context2.abrupt('return', _context2.sent);\n\n              case 3:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getStringFields() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return getStringFields;\n    }()\n  }, {\n    key: 'getSourceName',\n    value: function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt('return', this._source.getDisplayName());\n\n              case 1:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getSourceName() {\n        return _ref3.apply(this, arguments);\n      }\n\n      return getSourceName;\n    }()\n  }, {\n    key: 'getOrdinalFields',\n    value: function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var numberFields, numberFieldOptions, joinFields;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._source.getNumberFields();\n\n              case 2:\n                numberFields = _context4.sent;\n                numberFieldOptions = numberFields.map(function (_ref5) {\n                  var label = _ref5.label,\n                      name = _ref5.name;\n\n                  return {\n                    label: label,\n                    name: name,\n                    origin: _constants.SOURCE_DATA_ID_ORIGIN\n                  };\n                });\n                joinFields = [];\n\n                this.getValidJoins().forEach(function (join) {\n                  var fields = join.getJoinFields().map(function (joinField) {\n                    return _extends({}, joinField, {\n                      origin: 'join'\n                    });\n                  });\n                  joinFields.push.apply(joinFields, _toConsumableArray(fields));\n                });\n\n                return _context4.abrupt('return', [].concat(_toConsumableArray(numberFieldOptions), joinFields));\n\n              case 7:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getOrdinalFields() {\n        return _ref4.apply(this, arguments);\n      }\n\n      return getOrdinalFields;\n    }()\n  }, {\n    key: 'getIndexPatternIds',\n    value: function getIndexPatternIds() {\n      var indexPatternIds = this._source.getIndexPatternIds();\n      this.getValidJoins().forEach(function (join) {\n        indexPatternIds.push.apply(indexPatternIds, _toConsumableArray(join.getIndexPatternIds()));\n      });\n      return indexPatternIds;\n    }\n  }, {\n    key: '_findDataRequestForSource',\n    value: function _findDataRequestForSource(sourceDataId) {\n      return this._dataRequests.find(function (dataRequest) {\n        return dataRequest.getDataId() === sourceDataId;\n      });\n    }\n  }, {\n    key: '_canSkipSourceUpdate',\n    value: function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(source, sourceDataId, searchFilters) {\n        var timeAware, refreshTimerAware, extentAware, isFieldAware, isQueryAware, isGeoGridPrecisionAware, _sourceDataRequest, sourceDataRequest, meta, updateDueToTime, updateDueToRefreshTimer, updateDueToFields, updateDueToQuery, updateDueToPrecisionChange, updateDueToExtentChange;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return source.isTimeAware();\n\n              case 2:\n                timeAware = _context5.sent;\n                _context5.next = 5;\n                return source.isRefreshTimerAware();\n\n              case 5:\n                refreshTimerAware = _context5.sent;\n                extentAware = source.isFilterByMapBounds();\n                isFieldAware = source.isFieldAware();\n                isQueryAware = source.isQueryAware();\n                isGeoGridPrecisionAware = source.isGeoGridPrecisionAware();\n\n                if (!(!timeAware && !refreshTimerAware && !extentAware && !isFieldAware && !isQueryAware && !isGeoGridPrecisionAware)) {\n                  _context5.next = 15;\n                  break;\n                }\n\n                _sourceDataRequest = this._findDataRequestForSource(sourceDataId);\n\n                if (!(_sourceDataRequest && _sourceDataRequest.hasDataOrRequestInProgress())) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                return _context5.abrupt('return', true);\n\n              case 14:\n                return _context5.abrupt('return', false);\n\n              case 15:\n                sourceDataRequest = this._findDataRequestForSource(sourceDataId);\n\n                if (sourceDataRequest) {\n                  _context5.next = 18;\n                  break;\n                }\n\n                return _context5.abrupt('return', false);\n\n              case 18:\n                meta = sourceDataRequest.getMeta();\n\n                if (meta) {\n                  _context5.next = 21;\n                  break;\n                }\n\n                return _context5.abrupt('return', false);\n\n              case 21:\n                updateDueToTime = false;\n\n                if (timeAware) {\n                  updateDueToTime = !_lodash2.default.isEqual(meta.timeFilters, searchFilters.timeFilters);\n                }\n\n                updateDueToRefreshTimer = false;\n\n                if (refreshTimerAware && searchFilters.refreshTimerLastTriggeredAt) {\n                  updateDueToRefreshTimer = !_lodash2.default.isEqual(meta.refreshTimerLastTriggeredAt, searchFilters.refreshTimerLastTriggeredAt);\n                }\n\n                updateDueToFields = false;\n\n                if (isFieldAware) {\n                  updateDueToFields = !_lodash2.default.isEqual(meta.fieldNames, searchFilters.fieldNames);\n                }\n\n                updateDueToQuery = false;\n\n                if (isQueryAware) {\n                  updateDueToQuery = !_lodash2.default.isEqual(meta.query, searchFilters.query);\n                }\n\n                updateDueToPrecisionChange = false;\n\n                if (isGeoGridPrecisionAware) {\n                  updateDueToPrecisionChange = !_lodash2.default.isEqual(meta.geogridPrecision, searchFilters.geogridPrecision);\n                }\n\n                updateDueToExtentChange = this.updateDueToExtent(source, meta, searchFilters);\n                return _context5.abrupt('return', !updateDueToTime && !updateDueToRefreshTimer && !updateDueToExtentChange && !updateDueToFields && !updateDueToQuery && !updateDueToPrecisionChange);\n\n              case 33:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function _canSkipSourceUpdate(_x2, _x3, _x4) {\n        return _ref6.apply(this, arguments);\n      }\n\n      return _canSkipSourceUpdate;\n    }()\n  }, {\n    key: '_syncJoin',\n    value: function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(join, _ref7) {\n        var startLoading = _ref7.startLoading,\n            stopLoading = _ref7.stopLoading,\n            onLoadError = _ref7.onLoadError,\n            dataFilters = _ref7.dataFilters;\n\n        var joinSource, sourceDataId, requestToken, canSkip, sourceDataRequest, _propertiesMap, leftSourceName, _ref9, propertiesMap;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                joinSource = join.getJoinSource();\n                sourceDataId = join.getSourceId();\n                requestToken = Symbol('layer-join-refresh:' + this.getId() + ' - ' + sourceDataId);\n                _context6.prev = 3;\n                _context6.next = 6;\n                return this._canSkipSourceUpdate(joinSource, sourceDataId, dataFilters);\n\n              case 6:\n                canSkip = _context6.sent;\n\n                if (!canSkip) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                sourceDataRequest = this._findDataRequestForSource(sourceDataId);\n                _propertiesMap = sourceDataRequest ? sourceDataRequest.getData() : null;\n                return _context6.abrupt('return', {\n                  dataHasChanged: false,\n                  join: join,\n                  propertiesMap: _propertiesMap\n                });\n\n              case 11:\n                startLoading(sourceDataId, requestToken, dataFilters);\n                _context6.next = 14;\n                return this.getSourceName();\n\n              case 14:\n                leftSourceName = _context6.sent;\n                _context6.next = 17;\n                return joinSource.getPropertiesMap(dataFilters, leftSourceName, join.getLeftFieldName());\n\n              case 17:\n                _ref9 = _context6.sent;\n                propertiesMap = _ref9.propertiesMap;\n\n                stopLoading(sourceDataId, requestToken, propertiesMap);\n                return _context6.abrupt('return', {\n                  dataHasChanged: true,\n                  join: join,\n                  propertiesMap: propertiesMap\n                });\n\n              case 23:\n                _context6.prev = 23;\n                _context6.t0 = _context6['catch'](3);\n\n                onLoadError(sourceDataId, requestToken, 'Join error: ' + _context6.t0.message);\n                return _context6.abrupt('return', {\n                  dataHasChanged: false,\n                  join: join,\n                  propertiesMap: null\n                });\n\n              case 27:\n              case 'end':\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[3, 23]]);\n      }));\n\n      function _syncJoin(_x5, _x6) {\n        return _ref8.apply(this, arguments);\n      }\n\n      return _syncJoin;\n    }()\n  }, {\n    key: '_syncJoins',\n    value: function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref10) {\n        var _this2 = this;\n\n        var startLoading = _ref10.startLoading,\n            stopLoading = _ref10.stopLoading,\n            onLoadError = _ref10.onLoadError,\n            dataFilters = _ref10.dataFilters;\n        var joinSyncs;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                joinSyncs = this.getValidJoins().map(function () {\n                  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(join) {\n                    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            return _context7.abrupt('return', _this2._syncJoin(join, { startLoading: startLoading, stopLoading: stopLoading, onLoadError: onLoadError, dataFilters: dataFilters }));\n\n                          case 1:\n                          case 'end':\n                            return _context7.stop();\n                        }\n                      }\n                    }, _callee7, _this2);\n                  }));\n\n                  return function (_x8) {\n                    return _ref12.apply(this, arguments);\n                  };\n                }());\n                _context8.next = 3;\n                return Promise.all(joinSyncs);\n\n              case 3:\n                return _context8.abrupt('return', _context8.sent);\n\n              case 4:\n              case 'end':\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function _syncJoins(_x7) {\n        return _ref11.apply(this, arguments);\n      }\n\n      return _syncJoins;\n    }()\n  }, {\n    key: '_getSearchFilters',\n    value: function _getSearchFilters(dataFilters) {\n      var fieldNames = [].concat(_toConsumableArray(this._source.getFieldNames()), _toConsumableArray(this._style.getSourceFieldNames()), _toConsumableArray(this.getValidJoins().map(function (join) {\n        return join.getLeftFieldName();\n      })));\n\n      return _extends({}, dataFilters, {\n        fieldNames: _lodash2.default.uniq(fieldNames).sort(),\n        geogridPrecision: this._source.getGeoGridPrecision(dataFilters.zoom)\n      });\n    }\n  }, {\n    key: '_syncSource',\n    value: function () {\n      var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(_ref13) {\n        var startLoading = _ref13.startLoading,\n            stopLoading = _ref13.stopLoading,\n            onLoadError = _ref13.onLoadError,\n            dataFilters = _ref13.dataFilters;\n\n        var requestToken, searchFilters, canSkip, sourceDataRequest, layerName, _ref15, data, meta;\n\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                requestToken = Symbol('layer-source-refresh:' + this.getId() + ' - source');\n                searchFilters = this._getSearchFilters(dataFilters);\n                _context9.next = 4;\n                return this._canSkipSourceUpdate(this._source, _constants.SOURCE_DATA_ID_ORIGIN, searchFilters);\n\n              case 4:\n                canSkip = _context9.sent;\n\n                if (!canSkip) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                sourceDataRequest = this.getSourceDataRequest();\n                return _context9.abrupt('return', {\n                  refreshed: false,\n                  featureCollection: sourceDataRequest.getData()\n                });\n\n              case 8:\n                _context9.prev = 8;\n\n                startLoading(_constants.SOURCE_DATA_ID_ORIGIN, requestToken, searchFilters);\n                _context9.next = 12;\n                return this.getDisplayName();\n\n              case 12:\n                layerName = _context9.sent;\n                _context9.next = 15;\n                return this._source.getGeoJsonWithMeta({\n                  layerName: layerName\n                }, searchFilters);\n\n              case 15:\n                _ref15 = _context9.sent;\n                data = _ref15.data;\n                meta = _ref15.meta;\n\n                stopLoading(_constants.SOURCE_DATA_ID_ORIGIN, requestToken, data, meta);\n                return _context9.abrupt('return', {\n                  refreshed: true,\n                  featureCollection: data\n                });\n\n              case 22:\n                _context9.prev = 22;\n                _context9.t0 = _context9['catch'](8);\n\n                onLoadError(_constants.SOURCE_DATA_ID_ORIGIN, requestToken, _context9.t0.message);\n                return _context9.abrupt('return', {\n                  refreshed: false\n                });\n\n              case 26:\n              case 'end':\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[8, 22]]);\n      }));\n\n      function _syncSource(_x9) {\n        return _ref14.apply(this, arguments);\n      }\n\n      return _syncSource;\n    }()\n  }, {\n    key: '_joinToFeatureCollection',\n    value: function _joinToFeatureCollection(sourceResult, joinState, updateSourceData) {\n      if (!sourceResult.refreshed && !joinState.dataHasChanged) {\n        //no data changes in both the source data or the join data\n        return false;\n      }\n      if (!sourceResult.featureCollection || !joinState.propertiesMap) {\n        //no data available in source or join (ie. request is pending or data errored)\n        return false;\n      }\n\n      //all other cases, perform the join\n      //- source data changed but join data has not\n      //- join data changed but source data has not\n      //- both source and join data changed\n      var updatedFeatureCollection = joinState.join.joinPropertiesToFeatureCollection(sourceResult.featureCollection, joinState.propertiesMap);\n\n      updateSourceData(updatedFeatureCollection);\n\n      return true;\n    }\n  }, {\n    key: '_performJoins',\n    value: function () {\n      var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(sourceResult, joinStates, updateSourceData) {\n        var _this3 = this;\n\n        var hasJoined;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                hasJoined = joinStates.map(function (joinState) {\n                  return _this3._joinToFeatureCollection(sourceResult, joinState, updateSourceData);\n                });\n                return _context10.abrupt('return', hasJoined.some(function (shouldRefresh) {\n                  return shouldRefresh === true;\n                }));\n\n              case 2:\n              case 'end':\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function _performJoins(_x10, _x11, _x12) {\n        return _ref16.apply(this, arguments);\n      }\n\n      return _performJoins;\n    }()\n  }, {\n    key: 'syncData',\n    value: function () {\n      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(_ref17) {\n        var startLoading = _ref17.startLoading,\n            stopLoading = _ref17.stopLoading,\n            onLoadError = _ref17.onLoadError,\n            onRefreshStyle = _ref17.onRefreshStyle,\n            dataFilters = _ref17.dataFilters,\n            updateSourceData = _ref17.updateSourceData;\n        var sourceResult, joinResults, shouldRefresh;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (!(!this.isVisible() || !this.showAtZoomLevel(dataFilters.zoom))) {\n                  _context11.next = 2;\n                  break;\n                }\n\n                return _context11.abrupt('return');\n\n              case 2:\n                _context11.next = 4;\n                return this._syncSource({ startLoading: startLoading, stopLoading: stopLoading, onLoadError: onLoadError, dataFilters: dataFilters });\n\n              case 4:\n                sourceResult = _context11.sent;\n                _context11.next = 7;\n                return this._syncJoins({ startLoading: startLoading, stopLoading: stopLoading, onLoadError: onLoadError, dataFilters: dataFilters });\n\n              case 7:\n                joinResults = _context11.sent;\n                _context11.next = 10;\n                return this._performJoins(sourceResult, joinResults, updateSourceData);\n\n              case 10:\n                shouldRefresh = _context11.sent;\n\n                if (shouldRefresh) {\n                  onRefreshStyle();\n                }\n\n              case 12:\n              case 'end':\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function syncData(_x13) {\n        return _ref18.apply(this, arguments);\n      }\n\n      return syncData;\n    }()\n  }, {\n    key: '_getSourceFeatureCollection',\n    value: function _getSourceFeatureCollection() {\n      var sourceDataRequest = this.getSourceDataRequest();\n      return sourceDataRequest ? sourceDataRequest.getData() : null;\n    }\n  }, {\n    key: '_isPointsOnly',\n    value: function _isPointsOnly() {\n      var featureCollection = this._getSourceFeatureCollection();\n      if (!featureCollection) {\n        return false;\n      }\n      var isPointsOnly = true;\n      if (featureCollection) {\n        for (var i = 0; i < featureCollection.features.length; i++) {\n          if (featureCollection.features[i].geometry.type !== 'Point') {\n            isPointsOnly = false;\n            break;\n          }\n        }\n      } else {\n        isPointsOnly = false;\n      }\n      return isPointsOnly;\n    }\n  }, {\n    key: '_syncFeatureCollectionWithMb',\n    value: function _syncFeatureCollectionWithMb(mbMap) {\n      var mbGeoJSONSource = mbMap.getSource(this.getId());\n\n      var featureCollection = this._getSourceFeatureCollection();\n      if (!featureCollection) {\n        mbGeoJSONSource.setData(EMPTY_FEATURE_COLLECTION);\n        return;\n      }\n\n      var dataBoundToMap = _layer.AbstractLayer.getBoundDataForSource(mbMap, this.getId());\n      if (featureCollection !== dataBoundToMap) {\n        mbGeoJSONSource.setData(featureCollection);\n      }\n\n      var shouldRefresh = this._style.addScaledPropertiesBasedOnStyle(featureCollection);\n      if (shouldRefresh) {\n        mbGeoJSONSource.setData(featureCollection);\n      }\n    }\n  }, {\n    key: '_setMbPointsProperties',\n    value: function _setMbPointsProperties(mbMap) {\n      var sourceId = this.getId();\n      var pointLayerId = this.getId() + '_circle';\n      var pointLayer = mbMap.getLayer(pointLayerId);\n      if (!pointLayer) {\n        mbMap.addLayer({\n          id: pointLayerId,\n          type: 'circle',\n          source: sourceId,\n          paint: {}\n        });\n        mbMap.setFilter(pointLayerId, ['any', ['==', ['geometry-type'], 'Point'], ['==', ['geometry-type'], 'MultiPoint']]);\n      }\n      this._style.setMBPaintPropertiesForPoints({\n        alpha: this.getAlpha(),\n        mbMap: mbMap,\n        pointLayerId: pointLayerId\n      });\n      mbMap.setLayoutProperty(pointLayerId, 'visibility', this.isVisible() ? 'visible' : 'none');\n      mbMap.setLayerZoomRange(pointLayerId, this._descriptor.minZoom, this._descriptor.maxZoom);\n      this._addTooltipListeners(mbMap, pointLayerId);\n    }\n  }, {\n    key: '_setMbLinePolygonProperties',\n    value: function _setMbLinePolygonProperties(mbMap) {\n      var sourceId = this.getId();\n      var fillLayerId = this.getId() + '_fill';\n      var lineLayerId = this.getId() + '_line';\n      if (!mbMap.getLayer(fillLayerId)) {\n        mbMap.addLayer({\n          id: fillLayerId,\n          type: 'fill',\n          source: sourceId,\n          paint: {}\n        });\n        mbMap.setFilter(fillLayerId, CLOSED_SHAPE_MB_FILTER);\n      }\n      if (!mbMap.getLayer(lineLayerId)) {\n        mbMap.addLayer({\n          id: lineLayerId,\n          type: 'line',\n          source: sourceId,\n          paint: {}\n        });\n        mbMap.setFilter(lineLayerId, ALL_SHAPE_MB_FILTER);\n      }\n      this._style.setMBPaintProperties({\n        alpha: this.getAlpha(),\n        mbMap: mbMap,\n        fillLayerId: fillLayerId,\n        lineLayerId: lineLayerId\n      });\n      mbMap.setLayoutProperty(fillLayerId, 'visibility', this.isVisible() ? 'visible' : 'none');\n      mbMap.setLayoutProperty(lineLayerId, 'visibility', this.isVisible() ? 'visible' : 'none');\n      mbMap.setLayerZoomRange(lineLayerId, this._descriptor.minZoom, this._descriptor.maxZoom);\n      mbMap.setLayerZoomRange(fillLayerId, this._descriptor.minZoom, this._descriptor.maxZoom);\n      this._addTooltipListeners(mbMap, lineLayerId);\n      this._addTooltipListeners(mbMap, fillLayerId);\n    }\n  }, {\n    key: '_syncStylePropertiesWithMb',\n    value: function _syncStylePropertiesWithMb(mbMap) {\n      this._setMbPointsProperties(mbMap);\n      this._setMbLinePolygonProperties(mbMap);\n    }\n  }, {\n    key: '_syncSourceBindingWithMb',\n    value: function _syncSourceBindingWithMb(mbMap) {\n      var mbSource = mbMap.getSource(this.getId());\n      if (!mbSource) {\n        mbMap.addSource(this.getId(), {\n          type: 'geojson',\n          data: EMPTY_FEATURE_COLLECTION\n        });\n      }\n    }\n  }, {\n    key: 'syncLayerWithMB',\n    value: function syncLayerWithMB(mbMap) {\n      this._syncSourceBindingWithMb(mbMap);\n      this._syncFeatureCollectionWithMb(mbMap);\n      this._syncStylePropertiesWithMb(mbMap);\n    }\n  }, {\n    key: 'renderStyleEditor',\n    value: function renderStyleEditor(Style, options) {\n      return Style.renderEditor(_extends({\n        layer: this\n      }, options));\n    }\n  }, {\n    key: '_canShowTooltips',\n    value: function _canShowTooltips() {\n      return this._source.canFormatFeatureProperties();\n    }\n  }, {\n    key: '_getPropertiesForTooltip',\n    value: function () {\n      var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(feature) {\n        var tooltipsFromSource, allProps;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this._source.filterAndFormatProperties(feature.properties);\n\n              case 2:\n                tooltipsFromSource = _context12.sent;\n\n\n                //add tooltips from joins\n                allProps = this._joins.reduce(function (acc, join) {\n                  var propsFromJoin = join.filterAndFormatPropertiesForTooltip(feature.properties);\n                  return _extends({}, propsFromJoin, acc);\n                }, _extends({}, tooltipsFromSource));\n                return _context12.abrupt('return', allProps);\n\n              case 5:\n              case 'end':\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function _getPropertiesForTooltip(_x14) {\n        return _ref19.apply(this, arguments);\n      }\n\n      return _getPropertiesForTooltip;\n    }()\n  }, {\n    key: '_addTooltipListeners',\n    value: function _addTooltipListeners(mbMap, mbLayerId) {\n      var _this4 = this;\n\n      if (!this._canShowTooltips()) {\n        return;\n      }\n\n      var showTooltip = function () {\n        var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(feature, eventLngLat) {\n          var popupAnchorLocation, coordinates, properties;\n          return regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  popupAnchorLocation = eventLngLat; // default popup location to mouse location\n\n                  if (feature.geometry.type === 'Point') {\n                    coordinates = feature.geometry.coordinates.slice();\n\n                    // Ensure that if the map is zoomed out such that multiple\n                    // copies of the feature are visible, the popup appears\n                    // over the copy being pointed to.\n\n                    while (Math.abs(eventLngLat.lng - coordinates[0]) > 180) {\n                      coordinates[0] += eventLngLat.lng > coordinates[0] ? 360 : -360;\n                    }\n\n                    popupAnchorLocation = coordinates;\n                  }\n\n                  _context13.next = 4;\n                  return _this4._getPropertiesForTooltip(feature);\n\n                case 4:\n                  properties = _context13.sent;\n\n\n                  _reactDom2.default.render(_react2.default.createElement(_feature_tooltip.FeatureTooltip, {\n                    properties: properties\n                  }), VectorLayer.tooltipContainer);\n\n                  VectorLayer.popup.setLngLat(popupAnchorLocation).setDOMContent(VectorLayer.tooltipContainer).addTo(mbMap);\n\n                case 7:\n                case 'end':\n                  return _context13.stop();\n              }\n            }\n          }, _callee13, _this4);\n        }));\n\n        return function showTooltip(_x15, _x16) {\n          return _ref20.apply(this, arguments);\n        };\n      }();\n\n      var activeFeature = void 0;\n      var isTooltipOpen = false;\n      mbMap.on('mousemove', mbLayerId, _lodash2.default.debounce(function (e) {\n        if (!isTooltipOpen) {\n          return;\n        }\n\n        var PADDING = 2; //in pixels\n        var mbBbox = [{\n          x: e.point.x - PADDING,\n          y: e.point.y - PADDING\n        }, {\n          x: e.point.x + PADDING,\n          y: e.point.y + PADDING\n        }];\n        var features = mbMap.queryRenderedFeatures(mbBbox).filter(function (feature) {\n          return feature.layer.source === _this4.getId();\n        });\n        if (features.length === 0) {\n          return;\n        }\n\n        var propertiesUnchanged = _lodash2.default.isEqual(activeFeature.properties, features[0].properties);\n        var geometryUnchanged = _lodash2.default.isEqual(activeFeature.geometry, features[0].geometry);\n        if (propertiesUnchanged && geometryUnchanged) {\n          // mouse over same feature, no need to update tooltip\n          return;\n        }\n\n        activeFeature = features[0];\n        showTooltip(activeFeature, e.lngLat);\n      }, 100));\n\n      mbMap.on('mouseenter', mbLayerId, function (e) {\n        isTooltipOpen = true;\n        mbMap.getCanvas().style.cursor = 'pointer';\n\n        activeFeature = e.features[0];\n        showTooltip(activeFeature, e.lngLat);\n      });\n\n      mbMap.on('mouseleave', mbLayerId, function () {\n        isTooltipOpen = false;\n        mbMap.getCanvas().style.cursor = '';\n        VectorLayer.popup.remove();\n        _reactDom2.default.unmountComponentAtNode(VectorLayer.tooltipContainer);\n      });\n    }\n  }]);\n\n  return VectorLayer;\n}(_layer.AbstractLayer);\n\nVectorLayer.type = 'VECTOR';\nVectorLayer.popup = new _mapboxGl2.default.Popup({\n  closeButton: false,\n  closeOnClick: false\n});\nVectorLayer.tooltipContainer = document.createElement('div');",null]}