{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/pipeline_viewer/views/statement_list.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/pipeline_viewer/views/statement_list.js","mtime":1567631712092},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StatementList = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _statement = require('./statement');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction getCollapsedChildIds(elements, collapsedIds) {\n  var collapsedChildIds = new Set();\n  elements.forEach(function (_ref) {\n    var id = _ref.id,\n        parentId = _ref.parentId;\n\n    if (collapsedIds.has(parentId) || collapsedChildIds.has(parentId)) {\n      collapsedChildIds.add(id);\n    }\n  });\n  return collapsedChildIds;\n}\n\nvar StatementList = exports.StatementList = function (_React$PureComponent) {\n  _inherits(StatementList, _React$PureComponent);\n\n  function StatementList(props) {\n    _classCallCheck(this, StatementList);\n\n    var _this = _possibleConstructorReturn(this, (StatementList.__proto__ || Object.getPrototypeOf(StatementList)).call(this, props));\n\n    _this.expand = function (elementId) {\n      var collapsedIds = new Set(_this.state.collapsedIds);\n      collapsedIds.delete(elementId);\n      _this.updateCollapsedElement(collapsedIds);\n    };\n\n    _this.collapse = function (elementId) {\n      var collapsedIds = new Set(_this.state.collapsedIds);\n      collapsedIds.add(elementId);\n      _this.updateCollapsedElement(collapsedIds);\n    };\n\n    _this.updateCollapsedElement = function (collapsedIds) {\n      var elements = _this.props.elements;\n\n      var collapsedChildIds = getCollapsedChildIds(elements, collapsedIds);\n\n      _this.setState({\n        collapsedIds: collapsedIds,\n        collapsedChildIds: collapsedChildIds\n      });\n    };\n\n    _this.elementIsCollapsed = function (elementId) {\n      return _this.state.collapsedIds.has(elementId);\n    };\n\n    _this.renderStatement = function (element) {\n      var id = element.id,\n          parentId = element.parentId;\n      var onShowVertexDetails = _this.props.onShowVertexDetails;\n\n\n      return _this.state.collapsedIds.has(parentId) || _this.state.collapsedChildIds.has(parentId) ? null : _react2.default.createElement(_statement.Statement, {\n        key: id,\n        element: element,\n        collapse: _this.collapse,\n        expand: _this.expand,\n        isCollapsed: _this.elementIsCollapsed(id),\n        onShowVertexDetails: onShowVertexDetails\n      });\n    };\n\n    _this.state = {\n      collapsedIds: new Set(),\n      collapsedChildIds: new Set()\n    };\n    return _this;\n  }\n\n  _createClass(StatementList, [{\n    key: 'render',\n    value: function render() {\n      var elements = this.props.elements;\n\n\n      return _react2.default.createElement(\n        'ul',\n        { className: 'monPipelineViewer__list' },\n        elements.map(this.renderStatement)\n      );\n    }\n  }]);\n\n  return StatementList;\n}(_react2.default.PureComponent);\n\nStatementList.propTypes = {\n  elements: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    id: _propTypes2.default.string.isRequired,\n    // top-level elements have null parentId\n    parentId: _propTypes2.default.string\n  })).isRequired,\n  onShowVertexDetails: _propTypes2.default.func.isRequired\n};",null]}