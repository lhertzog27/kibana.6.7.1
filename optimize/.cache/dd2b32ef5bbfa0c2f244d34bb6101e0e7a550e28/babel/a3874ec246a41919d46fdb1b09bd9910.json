{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/objects/_objects.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/objects/_objects.js","mtime":1567631711574},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _saved_object_registry = require('../../saved_object_registry');\n\nvar _objects = require('./_objects.html');\n\nvar _objects2 = _interopRequireDefault(_objects);\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _notify = require('ui/notify');\n\nvar _saved_objects = require('ui/saved_objects');\n\nvar _modules = require('ui/modules');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _objects_table = require('./components/objects_table');\n\nvar _get_in_app_url = require('./lib/get_in_app_url');\n\nvar _i18n = require('ui/i18n');\n\nvar _breadcrumbs = require('./breadcrumbs');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar REACT_OBJECTS_TABLE_DOM_ELEMENT_ID = 'reactSavedObjectsTable'; /*\n                                                                    * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                    * license agreements. See the NOTICE file distributed with\n                                                                    * this work for additional information regarding copyright\n                                                                    * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                    * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                    * not use this file except in compliance with the License.\n                                                                    * You may obtain a copy of the License at\n                                                                    *\n                                                                    *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                    *\n                                                                    * Unless required by applicable law or agreed to in writing,\n                                                                    * software distributed under the License is distributed on an\n                                                                    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                    * KIND, either express or implied.  See the License for the\n                                                                    * specific language governing permissions and limitations\n                                                                    * under the License.\n                                                                    */\n\nfunction updateObjectsTable($scope, $injector, i18n) {\n  var Private = $injector.get('Private');\n  var indexPatterns = $injector.get('indexPatterns');\n  var $http = $injector.get('$http');\n  var kbnUrl = $injector.get('kbnUrl');\n  var config = $injector.get('config');\n\n  var savedObjectsClient = Private(_saved_objects.SavedObjectsClientProvider);\n  var services = _saved_object_registry.savedObjectManagementRegistry.all().map(function (obj) {\n    return $injector.get(obj.service);\n  });\n  var allServices = _saved_object_registry.savedObjectManagementRegistry.all();\n  var typeToServiceName = function typeToServiceName(type) {\n    return allServices.reduce(function (serviceName, service) {\n      return service.title.includes(type) ? service.service : serviceName;\n    }, null);\n  };\n\n  $scope.$$postDigest(function () {\n    var node = document.getElementById(REACT_OBJECTS_TABLE_DOM_ELEMENT_ID);\n    if (!node) {\n      return;\n    }\n\n    (0, _reactDom.render)(_react2.default.createElement(\n      _i18n.I18nContext,\n      null,\n      _react2.default.createElement(_objects_table.ObjectsTable, {\n        savedObjectsClient: savedObjectsClient,\n        services: services,\n        indexPatterns: indexPatterns,\n        $http: $http,\n        perPageConfig: config.get('savedObjects:perPage'),\n        basePath: _chrome2.default.getBasePath(),\n        newIndexPatternUrl: kbnUrl.eval('#/management/kibana/index'),\n        getEditUrl: function getEditUrl(id, type) {\n          if (type === 'index-pattern' || type === 'indexPatterns') {\n            return kbnUrl.eval('#/management/kibana/indices/' + id);\n          }\n          var serviceName = typeToServiceName(type);\n          if (!serviceName) {\n            _notify.toastNotifications.addWarning(i18n('kbn.management.objects.unknownSavedObjectTypeNotificationMessage', {\n              defaultMessage: 'Unknown saved object type: {type}',\n              values: { type: type }\n            }));\n            return null;\n          }\n\n          return kbnUrl.eval('#/management/kibana/objects/' + serviceName + '/' + id);\n        },\n        goInApp: function goInApp(id, type) {\n          kbnUrl.change((0, _get_in_app_url.getInAppUrl)(id, type));\n          $scope.$apply();\n        }\n      })\n    ), node);\n  });\n}\n\nfunction destroyObjectsTable() {\n  var node = document.getElementById(REACT_OBJECTS_TABLE_DOM_ELEMENT_ID);\n  node && (0, _reactDom.unmountComponentAtNode)(node);\n}\n\n_routes2.default.when('/management/kibana/objects', {\n  template: _objects2.default,\n  k7Breadcrumbs: _breadcrumbs.getIndexBreadcrumbs\n}).when('/management/kibana/objects/:service', {\n  redirectTo: '/management/kibana/objects'\n});\n\n_modules.uiModules.get('apps/management').directive('kbnManagementObjects', function () {\n  return {\n    restrict: 'E',\n    controllerAs: 'managementObjectsController',\n    controller: function controller($scope, $injector, i18n) {\n      updateObjectsTable($scope, $injector, i18n);\n      $scope.$on('$destroy', destroyObjectsTable);\n    }\n  };\n});",null]}