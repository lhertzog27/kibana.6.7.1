{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/widget_overlay/view_control/set_view/set_view.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/widget_overlay/view_control/set_view/set_view.js","mtime":1567631712016},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SetView = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar SetView = exports.SetView = function (_React$Component) {\n  _inherits(SetView, _React$Component);\n\n  function SetView() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SetView);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SetView.__proto__ || Object.getPrototypeOf(SetView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      lat: _this.props.center.lat,\n      lon: _this.props.center.lon,\n      zoom: _this.props.zoom\n    }, _this._onLatChange = function (evt) {\n      _this._onChange('lat', evt);\n    }, _this._onLonChange = function (evt) {\n      _this._onChange('lon', evt);\n    }, _this._onZoomChange = function (evt) {\n      _this._onChange('zoom', evt);\n    }, _this._onChange = function (name, evt) {\n      var sanitizedValue = parseFloat(evt.target.value);\n      _this.setState(_defineProperty({}, name, isNaN(sanitizedValue) ? '' : sanitizedValue));\n    }, _this._renderNumberFormRow = function (_ref2) {\n      var value = _ref2.value,\n          min = _ref2.min,\n          max = _ref2.max,\n          onChange = _ref2.onChange,\n          label = _ref2.label,\n          dataTestSubj = _ref2.dataTestSubj;\n\n      var isInvalid = value === '' || value > max || value < min;\n      var error = isInvalid ? 'Must be between ' + min + ' and ' + max : null;\n      return {\n        isInvalid: isInvalid,\n        component: _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            label: label,\n            isInvalid: isInvalid,\n            error: error,\n            compressed: true\n          },\n          _react2.default.createElement(_eui.EuiFieldNumber, {\n            value: value,\n            onChange: onChange,\n            isInvalid: isInvalid,\n            'data-test-subj': dataTestSubj\n          })\n        )\n      };\n    }, _this.onSubmit = function () {\n      var _this$state = _this.state,\n          lat = _this$state.lat,\n          lon = _this$state.lon,\n          zoom = _this$state.zoom;\n\n      _this.props.onSubmit({ lat: lat, lon: lon, zoom: zoom });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(SetView, [{\n    key: 'render',\n    value: function render() {\n      var _renderNumberFormRow = this._renderNumberFormRow({\n        value: this.state.lat,\n        min: -90,\n        max: 90,\n        onChange: this._onLatChange,\n        label: 'Latitude',\n        dataTestSubj: 'latitudeInput'\n      }),\n          isLatInvalid = _renderNumberFormRow.isInvalid,\n          latFormRow = _renderNumberFormRow.component;\n\n      var _renderNumberFormRow2 = this._renderNumberFormRow({\n        value: this.state.lon,\n        min: -180,\n        max: 180,\n        onChange: this._onLonChange,\n        label: 'Longitude',\n        dataTestSubj: 'longitudeInput'\n      }),\n          isLonInvalid = _renderNumberFormRow2.isInvalid,\n          lonFormRow = _renderNumberFormRow2.component;\n\n      var _renderNumberFormRow3 = this._renderNumberFormRow({\n        value: this.state.zoom,\n        min: 0,\n        max: 24,\n        onChange: this._onZoomChange,\n        label: 'Zoom',\n        dataTestSubj: 'zoomInput'\n      }),\n          isZoomInvalid = _renderNumberFormRow3.isInvalid,\n          zoomFormRow = _renderNumberFormRow3.component;\n\n      return _react2.default.createElement(\n        _eui.EuiForm,\n        null,\n        latFormRow,\n        lonFormRow,\n        zoomFormRow,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          { hasEmptyLabelSpace: true },\n          _react2.default.createElement(\n            _eui.EuiButton,\n            {\n              size: 's',\n              disabled: isLatInvalid || isLonInvalid || isZoomInvalid,\n              onClick: this.onSubmit,\n              'data-test-subj': 'submitViewButton'\n            },\n            'Go'\n          )\n        )\n      );\n    }\n  }]);\n\n  return SetView;\n}(_react2.default.Component);\n\nSetView.propTypes = {\n  zoom: _propTypes2.default.number.isRequired,\n  center: _propTypes2.default.shape({\n    lat: _propTypes2.default.number.isRequired,\n    lon: _propTypes2.default.number.isRequired\n  }),\n  onSubmit: _propTypes2.default.func.isRequired\n};",null]}