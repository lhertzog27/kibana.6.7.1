{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/timelion/public/services/tick_formatters.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/timelion/public/services/tick_formatters.js","mtime":1567631691301},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = tickFormatters;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction baseTickFormatter(value, axis) {\n  var factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n  var formatted = '' + Math.round(value * factor) / factor;\n\n  // If tickDecimals was specified, ensure that we have exactly that\n  // much precision; otherwise default to the value's own precision.\n\n  if (axis.tickDecimals != null) {\n    var decimal = formatted.indexOf('.');\n    var precision = decimal === -1 ? 0 : formatted.length - decimal - 1;\n    if (precision < axis.tickDecimals) {\n      return (precision ? formatted : formatted + '.') + ('' + factor).substr(1, axis.tickDecimals - precision);\n    }\n  }\n\n  return formatted;\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */\n\nfunction unitFormatter(divisor, units) {\n  return function (val) {\n    var index = 0;\n    var isNegative = val < 0;\n    val = Math.abs(val);\n    while (val >= divisor && index < units.length) {\n      val /= divisor;\n      index++;\n    }\n    var value = Math.round(val * 100) / 100 * (isNegative ? -1 : 1);\n    return '' + value + units[index];\n  };\n}\n\nfunction tickFormatters() {\n  var formatters = {\n    'bits': unitFormatter(1000, ['b', 'kb', 'mb', 'gb', 'tb', 'pb']),\n    'bits/s': unitFormatter(1000, ['b/s', 'kb/s', 'mb/s', 'gb/s', 'tb/s', 'pb/s']),\n    'bytes': unitFormatter(1024, ['B', 'KB', 'MB', 'GB', 'TB', 'PB']),\n    'bytes/s': unitFormatter(1024, ['B/s', 'KB/s', 'MB/s', 'GB/s', 'TB/s', 'PB/s']),\n    'currency': function currency(val, axis) {\n      return val.toLocaleString('en', { style: 'currency', currency: axis.options.units.prefix || 'USD' });\n    },\n    'percent': function percent(val, axis) {\n      var precision = _lodash2.default.get(axis, 'tickDecimals', 0) - _lodash2.default.get(axis, 'options.units.tickDecimalsShift', 0);\n      // toFixed only accepts values between 0 and 20\n      if (precision < 0) {\n        precision = 0;\n      } else if (precision > 20) {\n        precision = 20;\n      }\n\n      return (val * 100).toFixed(precision) + '%';\n    },\n    'custom': function custom(val, axis) {\n      var formattedVal = baseTickFormatter(val, axis);\n      var prefix = axis.options.units.prefix;\n      var suffix = axis.options.units.suffix;\n      return prefix + formattedVal + suffix;\n    }\n  };\n\n  return formatters;\n}\nmodule.exports = exports['default'];",null]}