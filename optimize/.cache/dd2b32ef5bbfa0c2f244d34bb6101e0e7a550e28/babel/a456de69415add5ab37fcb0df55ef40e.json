{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/apm/instances/instances.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/apm/instances/instances.js","mtime":1567631712082},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApmServerInstances = undefined;\nexports.ApmServerInstancesUI = ApmServerInstancesUI;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _lodash = require('lodash');\n\nvar _table = require('../../table');\n\nvar _eui = require('@elastic/eui');\n\nvar _status = require('./status');\n\nvar _format_number = require('../../../lib/format_number');\n\nvar _common = require('../../../../common');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar columns = [{\n  name: _i18n.i18n.translate('xpack.monitoring.apm.instances.nameTitle', {\n    defaultMessage: 'Name'\n  }),\n  field: 'name',\n  render: function render(name, instance) {\n    return _react2.default.createElement(\n      _eui.EuiLink,\n      {\n        href: '#/apm/instances/' + instance.uuid,\n        'data-test-subj': 'apmLink-' + name\n      },\n      name\n    );\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.apm.instances.outputEnabledTitle', {\n    defaultMessage: 'Output Enabled'\n  }),\n  field: 'output'\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.apm.instances.totalEventsRateTitle', {\n    defaultMessage: 'Total Events Rate'\n  }),\n  field: 'total_events_rate',\n  render: function render(value) {\n    return (0, _format_number.formatMetric)(value, '', '/s');\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.apm.instances.bytesSentRateTitle', {\n    defaultMessage: 'Bytes Sent Rate'\n  }),\n  field: 'bytes_sent_rate',\n  render: function render(value) {\n    return (0, _format_number.formatMetric)(value, 'byte', '/s');\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.apm.instances.outputErrorsTitle', {\n    defaultMessage: 'Output Errors'\n  }),\n  field: 'errors',\n  render: function render(value) {\n    return (0, _format_number.formatMetric)(value, '0');\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.apm.instances.lastEventTitle', {\n    defaultMessage: 'Last Event'\n  }),\n  field: 'time_of_last_event',\n  render: function render(value) {\n    return _i18n.i18n.translate('xpack.monitoring.apm.instances.lastEventValue', {\n      defaultMessage: '{timeOfLastEvent} ago',\n      values: {\n        timeOfLastEvent: (0, _common.formatTimestampToDuration)(+(0, _moment2.default)(value), 'since')\n      }\n    });\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.apm.instances.allocatedMemoryTitle', {\n    defaultMessage: 'Allocated Memory'\n  }),\n  field: 'memory',\n  render: function render(value) {\n    return (0, _format_number.formatMetric)(value, 'byte');\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.apm.instances.versionTitle', {\n    defaultMessage: 'Version'\n  }),\n  field: 'version'\n}];\n\nfunction ApmServerInstancesUI(_ref) {\n  var apms = _ref.apms,\n      intl = _ref.intl;\n  var pagination = apms.pagination,\n      sorting = apms.sorting,\n      onTableChange = apms.onTableChange,\n      data = apms.data;\n\n\n  var versions = (0, _lodash.uniq)(data.apms.map(function (item) {\n    return item.version;\n  })).map(function (version) {\n    return { value: version };\n  });\n\n  return _react2.default.createElement(\n    _eui.EuiPage,\n    null,\n    _react2.default.createElement(\n      _eui.EuiPageBody,\n      null,\n      _react2.default.createElement(\n        _eui.EuiPageContent,\n        null,\n        _react2.default.createElement(_status.Status, { stats: data.stats }),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n        _react2.default.createElement(_table.EuiMonitoringTable, {\n          className: 'apmInstancesTable',\n          rows: data.apms,\n          columns: columns,\n          sorting: sorting,\n          pagination: pagination,\n          search: {\n            box: {\n              incremental: true,\n              placeholder: intl.formatMessage({\n                id: 'xpack.monitoring.apm.instances.filterInstancesPlaceholder',\n                defaultMessage: 'Filter Instancesâ€¦'\n              })\n            },\n            filters: [{\n              type: 'field_value_selection',\n              field: 'version',\n              name: intl.formatMessage({\n                id: 'xpack.monitoring.apm.instances.versionFilter',\n                defaultMessage: 'Version'\n              }),\n              options: versions,\n              multiSelect: 'or'\n            }]\n          },\n          onTableChange: onTableChange,\n          executeQueryOptions: {\n            defaultFields: ['name']\n          }\n        })\n      )\n    )\n  );\n}\n\nvar ApmServerInstances = exports.ApmServerInstances = (0, _react3.injectI18n)(ApmServerInstancesUI);",null]}