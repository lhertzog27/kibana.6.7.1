{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/toolbar/toolbar.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/toolbar/toolbar.js","mtime":1567631711927},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Toolbar = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _navbar = require('../navbar');\n\nvar _workpad_manager = require('../workpad_manager');\n\nvar _page_manager = require('../page_manager');\n\nvar _expression = require('../expression');\n\nvar _tray = require('./tray');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar Toolbar = exports.Toolbar = function Toolbar(props) {\n  var selectedElement = props.selectedElement,\n      tray = props.tray,\n      setTray = props.setTray,\n      previousPage = props.previousPage,\n      nextPage = props.nextPage,\n      selectedPageNumber = props.selectedPageNumber,\n      workpadName = props.workpadName,\n      totalPages = props.totalPages,\n      showWorkpadManager = props.showWorkpadManager,\n      setShowWorkpadManager = props.setShowWorkpadManager;\n\n\n  var elementIsSelected = Boolean(selectedElement);\n\n  var done = function done() {\n    return setTray(null);\n  };\n\n  var showHideTray = function showHideTray(exp) {\n    if (tray && tray === exp) {\n      return done();\n    }\n    setTray(exp);\n  };\n\n  var closeWorkpadManager = function closeWorkpadManager() {\n    return setShowWorkpadManager(false);\n  };\n  var openWorkpadManager = function openWorkpadManager() {\n    return setShowWorkpadManager(true);\n  };\n\n  var workpadManager = _react2.default.createElement(\n    _eui.EuiOverlayMask,\n    null,\n    _react2.default.createElement(\n      _eui.EuiModal,\n      { onClose: closeWorkpadManager, className: 'canvasModal--fixedSize', maxWidth: '1000px' },\n      _react2.default.createElement(_workpad_manager.WorkpadManager, { onClose: closeWorkpadManager }),\n      _react2.default.createElement(\n        _eui.EuiModalFooter,\n        null,\n        _react2.default.createElement(\n          _eui.EuiButton,\n          { size: 's', onClick: closeWorkpadManager },\n          'Dismiss'\n        )\n      )\n    )\n  );\n\n  var trays = {\n    pageManager: _react2.default.createElement(_page_manager.PageManager, { previousPage: previousPage }),\n    expression: !elementIsSelected ? null : _react2.default.createElement(_expression.Expression, { done: done })\n  };\n\n  return _react2.default.createElement(\n    'div',\n    { className: 'canvasToolbar hide-for-sharing' },\n    trays[tray] && _react2.default.createElement(\n      _tray.Tray,\n      { done: done },\n      trays[tray]\n    ),\n    _react2.default.createElement(\n      _navbar.Navbar,\n      null,\n      _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { alignItems: 'center', gutterSize: 'none', className: 'canvasToolbar__controls' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButtonEmpty,\n            { color: 'text', iconType: 'grid', onClick: function onClick() {\n                return openWorkpadManager();\n              } },\n            workpadName\n          )\n        ),\n        _react2.default.createElement(_eui.EuiFlexItem, { grow: false }),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(_eui.EuiButtonIcon, {\n            color: 'text',\n            onClick: previousPage,\n            iconType: 'arrowLeft',\n            disabled: selectedPageNumber <= 1,\n            'aria-label': 'Previous Page'\n          })\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButtonEmpty,\n            { color: 'text', onClick: function onClick() {\n                return showHideTray('pageManager');\n              } },\n            'Page ',\n            selectedPageNumber,\n            totalPages > 1 ? ' of ' + totalPages : null\n          )\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(_eui.EuiButtonIcon, {\n            color: 'text',\n            onClick: nextPage,\n            iconType: 'arrowRight',\n            disabled: selectedPageNumber >= totalPages,\n            'aria-label': 'Next Page'\n          })\n        ),\n        _react2.default.createElement(_eui.EuiFlexItem, null),\n        elementIsSelected && _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButtonEmpty,\n            {\n              color: 'text',\n              iconType: 'editorCodeBlock',\n              onClick: function onClick() {\n                return showHideTray('expression');\n              }\n            },\n            'Expression editor'\n          )\n        )\n      )\n    ),\n    showWorkpadManager && workpadManager\n  );\n};\n\nToolbar.propTypes = {\n  workpadName: _propTypes2.default.string,\n  tray: _propTypes2.default.node,\n  setTray: _propTypes2.default.func.isRequired,\n  nextPage: _propTypes2.default.func.isRequired,\n  previousPage: _propTypes2.default.func.isRequired,\n  selectedPageNumber: _propTypes2.default.number.isRequired,\n  totalPages: _propTypes2.default.number.isRequired,\n  selectedElement: _propTypes2.default.object,\n  showWorkpadManager: _propTypes2.default.bool.isRequired,\n  setShowWorkpadManager: _propTypes2.default.func.isRequired\n};",null]}