{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/extend_index_management/components/add_lifecycle_confirm_modal.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/extend_index_management/components/add_lifecycle_confirm_modal.js","mtime":1567631711964},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddLifecyclePolicyConfirmModal = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _eui = require('@elastic/eui');\n\nvar _constants = require('../../../common/constants');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _notify = require('ui/notify');\n\nvar _api = require('../../services/api');\n\nvar _api_errors = require('../../services/api_errors');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar AddLifecyclePolicyConfirmModal = exports.AddLifecyclePolicyConfirmModal = function (_Component) {\n  _inherits(AddLifecyclePolicyConfirmModal, _Component);\n\n  function AddLifecyclePolicyConfirmModal(props) {\n    var _this2 = this;\n\n    _classCallCheck(this, AddLifecyclePolicyConfirmModal);\n\n    var _this = _possibleConstructorReturn(this, (AddLifecyclePolicyConfirmModal.__proto__ || Object.getPrototypeOf(AddLifecyclePolicyConfirmModal)).call(this, props));\n\n    _this.addPolicy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var _this$props, indexName, httpClient, closeModal, reloadIndices, _this$state, selectedPolicyName, selectedAlias, body;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, indexName = _this$props.indexName, httpClient = _this$props.httpClient, closeModal = _this$props.closeModal, reloadIndices = _this$props.reloadIndices;\n              _this$state = _this.state, selectedPolicyName = _this$state.selectedPolicyName, selectedAlias = _this$state.selectedAlias;\n\n              if (selectedPolicyName) {\n                _context.next = 5;\n                break;\n              }\n\n              _this.setState({ policyError: _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.noPolicySelectedErrorMessage', { defaultMessage: 'You must select a policy.' }) });\n              return _context.abrupt('return');\n\n            case 5:\n              _context.prev = 5;\n              body = {\n                indexName: indexName,\n                policyName: selectedPolicyName,\n                alias: selectedAlias\n              };\n              _context.next = 9;\n              return (0, _api.addLifecyclePolicyToIndex)(body, httpClient);\n\n            case 9:\n              closeModal();\n              _notify.toastNotifications.addSuccess(_i18n.i18n.translate('xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.addPolicyToIndexSuccess', {\n                defaultMessage: 'Added policy {policyName} to index {indexName}.',\n                values: {\n                  policyName: selectedPolicyName,\n                  indexName: indexName\n                }\n              }));\n              reloadIndices();\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context['catch'](5);\n\n              (0, _api_errors.showApiError)(_context.t0, _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.addPolicyToIndexError', {\n                defaultMessage: 'Error adding policy to index'\n              }));\n\n            case 17:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2, [[5, 14]]);\n    }));\n\n    _this.renderAliasFormElement = function (selectedPolicy) {\n      var selectedAlias = _this.state.selectedAlias;\n      var index = _this.props.index;\n\n      var showAliasSelect = selectedPolicy && (0, _lodash.get)(selectedPolicy, 'policy.phases.hot.actions.rollover');\n      if (!showAliasSelect) {\n        return null;\n      }\n      var aliases = index.aliases;\n\n      if (aliases === 'none') {\n        return _react2.default.createElement(\n          _eui.EuiCallOut,\n          {\n            style: { maxWidth: 400 },\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.indexHasNoAliasesWarningTitle',\n              defaultMessage: 'Index has no aliases'\n            }),\n            color: 'warning'\n          },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.indexHasNoAliasesWarningMessage',\n            defaultMessage: 'Policy {policyName} is configured for rollover, but index {indexName} does not have an alias, which is required for rollover.',\n            values: {\n              policyName: selectedPolicy.name,\n              indexName: index.name\n            }\n          })\n        );\n      }\n      var aliasOptions = aliases.map(function (alias) {\n        return {\n          text: alias,\n          value: alias\n        };\n      });\n      aliasOptions.unshift({\n        text: _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.chooseAliasMessage', {\n          defaultMessage: 'Choose an alias'\n        }),\n        value: ''\n      });\n      return _react2.default.createElement(\n        _eui.EuiFormRow,\n        {\n          label: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.chooseAliasLabel',\n            defaultMessage: 'Index rollover alias'\n          })\n        },\n        _react2.default.createElement(_eui.EuiSelect, {\n          options: aliasOptions,\n          value: selectedAlias,\n          onChange: function onChange(e) {\n            _this.setState({ selectedAlias: e.target.value });\n          }\n        })\n      );\n    };\n\n    _this.state = {\n      policies: [],\n      selectedPolicyName: '',\n      selectedAlias: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddLifecyclePolicyConfirmModal, [{\n    key: 'renderForm',\n    value: function renderForm() {\n      var _this3 = this;\n\n      var _state = this.state,\n          policies = _state.policies,\n          selectedPolicyName = _state.selectedPolicyName,\n          policyError = _state.policyError;\n\n      var selectedPolicy = selectedPolicyName ? policies.find(function (policy) {\n        return policy.name === selectedPolicyName;\n      }) : null;\n\n      var options = policies.map(function (_ref2) {\n        var name = _ref2.name;\n\n        return {\n          value: name,\n          text: name\n        };\n      });\n      options.unshift({\n        value: '',\n        text: _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.choosePolicyMessage', {\n          defaultMessage: 'Select a lifecycle policy'\n        })\n      });\n      return _react2.default.createElement(\n        _eui.EuiForm,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            isInvalid: !!policyError,\n            error: policyError,\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.choosePolicyLabel',\n              defaultMessage: 'Lifecycle policy'\n            })\n          },\n          _react2.default.createElement(_eui.EuiSelect, {\n            options: options,\n            value: selectedPolicyName,\n            onChange: function onChange(e) {\n              _this3.setState({ policyError: null, selectedPolicyName: e.target.value });\n            }\n          })\n        ),\n        this.renderAliasFormElement(selectedPolicy)\n      );\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var policies;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return (0, _api.loadPolicies)(false, this.props.httpClient);\n\n              case 3:\n                policies = _context2.sent;\n\n                this.setState({ policies: policies });\n                _context2.next = 11;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2['catch'](0);\n\n                (0, _api_errors.showApiError)(_context2.t0, _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.loadPolicyError', {\n                  defaultMessage: 'Error loading policy list'\n                }));\n                this.props.closeModal();\n\n              case 11:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      function componentDidMount() {\n        return _ref3.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: 'render',\n    value: function render() {\n      var policies = this.state.policies;\n      var _props = this.props,\n          indexName = _props.indexName,\n          closeModal = _props.closeModal;\n\n      var title = _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.modalTitle',\n        defaultMessage: 'Add lifecycle policy to \"{indexName}\"',\n        values: {\n          indexName: indexName\n        }\n      });\n      if (!policies.length) {\n        return _react2.default.createElement(\n          _eui.EuiOverlayMask,\n          null,\n          _react2.default.createElement(\n            _eui.EuiModal,\n            {\n              onClose: closeModal\n            },\n            _react2.default.createElement(\n              _eui.EuiModalHeader,\n              null,\n              _react2.default.createElement(\n                _eui.EuiModalHeaderTitle,\n                null,\n                title\n              )\n            ),\n            _react2.default.createElement(\n              _eui.EuiModalBody,\n              null,\n              _react2.default.createElement(\n                _eui.EuiCallOut,\n                {\n                  style: { maxWidth: 400 },\n                  title: _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.noPoliciesWarningTitle',\n                    defaultMessage: 'No index lifecycle policies defined'\n                  }),\n                  color: 'warning'\n                },\n                _react2.default.createElement(\n                  'p',\n                  null,\n                  _react2.default.createElement(\n                    _eui.EuiLink,\n                    { href: '#' + _constants.BASE_PATH + 'policies/edit' },\n                    _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.defineLifecyclePolicyLinkText',\n                      defaultMessage: 'Define lifecycle policy'\n                    })\n                  )\n                )\n              )\n            )\n          )\n        );\n      }\n      return _react2.default.createElement(\n        _eui.EuiOverlayMask,\n        null,\n        _react2.default.createElement(\n          _eui.EuiConfirmModal,\n          {\n            title: title,\n            onCancel: closeModal,\n            onConfirm: this.addPolicy,\n            cancelButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.cancelButtonText',\n              defaultMessage: 'Cancel'\n            }),\n            confirmButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.addPolicyButtonText',\n              defaultMessage: 'Add policy'\n            })\n          },\n          this.renderForm()\n        )\n      );\n    }\n  }]);\n\n  return AddLifecyclePolicyConfirmModal;\n}(_react.Component);",null]}