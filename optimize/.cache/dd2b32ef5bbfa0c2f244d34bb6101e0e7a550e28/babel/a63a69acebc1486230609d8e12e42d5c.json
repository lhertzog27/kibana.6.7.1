{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/extend_index_management/components/remove_lifecycle_confirm_modal.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/extend_index_management/components/remove_lifecycle_confirm_modal.js","mtime":1567631711964},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RemoveLifecyclePolicyConfirmModal = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _i18n = require('@kbn/i18n');\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _notify = require('ui/notify');\n\nvar _api = require('../../services/api');\n\nvar _api_errors = require('../../services/api_errors');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar RemoveLifecyclePolicyConfirmModal = exports.RemoveLifecyclePolicyConfirmModal = function (_Component) {\n  _inherits(RemoveLifecyclePolicyConfirmModal, _Component);\n\n  function RemoveLifecyclePolicyConfirmModal(props) {\n    var _this2 = this;\n\n    _classCallCheck(this, RemoveLifecyclePolicyConfirmModal);\n\n    var _this = _possibleConstructorReturn(this, (RemoveLifecyclePolicyConfirmModal.__proto__ || Object.getPrototypeOf(RemoveLifecyclePolicyConfirmModal)).call(this, props));\n\n    _this.oneIndexSelected = function () {\n      return _this.props.indexNames.length === 1;\n    };\n\n    _this.getEntity = function (oneIndexSelected) {\n      return oneIndexSelected ? _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.indexMessage',\n        defaultMessage: 'index'\n      }) : _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.indexLifecycleMgmt.indexManagementTable.addLifecyclePolicyConfirmModal.indicesMessage',\n        defaultMessage: 'indices'\n      });\n    };\n\n    _this.removePolicy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var _this$props, indexNames, httpClient, closeModal, reloadIndices, target;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, indexNames = _this$props.indexNames, httpClient = _this$props.httpClient, closeModal = _this$props.closeModal, reloadIndices = _this$props.reloadIndices;\n              target = _this.getTarget();\n              _context.prev = 2;\n              _context.next = 5;\n              return (0, _api.removeLifecycleForIndex)(indexNames, httpClient);\n\n            case 5:\n              closeModal();\n              _notify.toastNotifications.addSuccess(_i18n.i18n.translate('xpack.indexLifecycleMgmt.indexManagementTable.removeLifecyclePolicyConfirmModal.removePolicySuccess', {\n                defaultMessage: 'Removed lifecycle policy from {target}',\n                values: {\n                  target: target\n                }\n              }));\n              reloadIndices();\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context['catch'](2);\n\n              (0, _api_errors.showApiError)(_context.t0, _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexManagementTable.removeLifecyclePolicyConfirmModal.removePolicyToIndexError', {\n                defaultMessage: 'Error removing policy'\n              }));\n\n            case 13:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2, [[2, 10]]);\n    }));\n\n    _this.state = {\n      policies: [],\n      selectedPolicyName: null,\n      selectedAlias: null\n    };\n    return _this;\n  }\n\n  _createClass(RemoveLifecyclePolicyConfirmModal, [{\n    key: 'getTarget',\n    value: function getTarget() {\n      var indexNames = this.props.indexNames;\n\n      var oneIndexSelected = this.oneIndexSelected();\n      var entity = this.getEntity(oneIndexSelected);\n      return oneIndexSelected ? indexNames[0] : indexNames.length + ' ' + entity;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var closeModal = this.props.closeModal;\n\n      var target = this.getTarget();\n      return _react2.default.createElement(\n        _eui.EuiOverlayMask,\n        null,\n        _react2.default.createElement(\n          _eui.EuiConfirmModal,\n          {\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.indexLifecycleMgmt.indexManagementTable.removeLifecyclePolicyConfirmModal.modalTitle',\n              defaultMessage: 'Remove lifecycle policy from \"{target}\"',\n              values: {\n                target: target\n              }\n            }),\n            onCancel: closeModal,\n            onConfirm: this.removePolicy,\n            cancelButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.indexLifecycleMgmt.indexManagementTable.removeLifecyclePolicyConfirmModal.cancelButtonText',\n              defaultMessage: 'Cancel'\n            }),\n            confirmButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.indexLifecycleMgmt.indexManagementTable.removeLifecyclePolicyConfirmModal.removePolicyButtonText',\n              defaultMessage: 'Remove policy'\n            })\n          },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.indexLifecycleMgmt.indexManagementTable.removeLifecyclePolicyConfirmModal.removeMessage',\n            defaultMessage: 'You are about to remove the index lifecycle policy from \"{target}\". This operation cannot be undone.',\n            values: {\n              target: target\n            }\n          })\n        )\n      );\n    }\n  }]);\n\n  return RemoveLifecyclePolicyConfirmModal;\n}(_react.Component);",null]}