{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kbn_vislib_vis_types/public/gauge.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kbn_vislib_vis_types/public/gauge.js","mtime":1567631711536},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = GaugeVisType;\n\nvar _vis_factory = require('ui/vis/vis_factory');\n\nvar _schemas = require('ui/vis/editors/default/schemas');\n\nvar _gauge = require('./editors/gauge.html');\n\nvar _gauge2 = _interopRequireDefault(_gauge);\n\nvar _colormaps = require('ui/vislib/components/color/colormaps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction GaugeVisType(Private, i18n) {\n  var VisFactory = Private(_vis_factory.VisFactoryProvider);\n\n  return VisFactory.createVislibVisualization({\n    name: 'gauge',\n    title: i18n('kbnVislibVisTypes.gauge.gaugeTitle', { defaultMessage: 'Gauge' }),\n    icon: 'visGauge',\n    description: i18n('kbnVislibVisTypes.gauge.gaugeDescription', {\n      defaultMessage: 'Gauges indicate the status of a metric. Use it to show how a metric\\'s value relates to reference threshold values.'\n    }),\n    visConfig: {\n      defaults: {\n        type: 'gauge',\n        addTooltip: true,\n        addLegend: true,\n        isDisplayWarning: false,\n        gauge: {\n          verticalSplit: false,\n          extendRange: true,\n          percentageMode: false,\n          gaugeType: 'Arc',\n          gaugeStyle: 'Full',\n          backStyle: 'Full',\n          orientation: 'vertical',\n          colorSchema: 'Green to Red',\n          gaugeColorMode: 'Labels',\n          colorsRange: [{ from: 0, to: 50 }, { from: 50, to: 75 }, { from: 75, to: 100 }],\n          invertColors: false,\n          labels: {\n            show: true,\n            color: 'black'\n          },\n          scale: {\n            show: true,\n            labels: false,\n            color: '#333'\n          },\n          type: 'meter',\n          style: {\n            bgWidth: 0.9,\n            width: 0.9,\n            mask: false,\n            bgMask: false,\n            maskBars: 50,\n            bgFill: '#eee',\n            bgColor: true,\n            subText: '',\n            fontSize: 60\n          }\n        }\n      }\n    },\n    events: {\n      brush: { disabled: true }\n    },\n    editorConfig: {\n      collections: {\n        gaugeTypes: ['Arc', 'Circle'],\n        gaugeColorMode: ['None', 'Labels', 'Background'],\n        scales: ['linear', 'log', 'square root'],\n        colorSchemas: Object.values(_colormaps.vislibColorMaps).map(function (value) {\n          return { id: value.id, label: value.label };\n        })\n      },\n      optionsTemplate: _gauge2.default,\n      schemas: new _schemas.Schemas([{\n        group: 'metrics',\n        name: 'metric',\n        title: i18n('kbnVislibVisTypes.gauge.metricTitle', { defaultMessage: 'Metric' }),\n        min: 1,\n        aggFilter: ['!std_dev', '!geo_centroid', '!percentiles', '!percentile_ranks', '!derivative', '!serial_diff', '!moving_avg', '!cumulative_sum', '!geo_bounds'],\n        defaults: [{ schema: 'metric', type: 'count' }]\n      }, {\n        group: 'buckets',\n        name: 'group',\n        title: i18n('kbnVislibVisTypes.gauge.groupTitle', { defaultMessage: 'Split Group' }),\n        min: 0,\n        max: 1,\n        aggFilter: ['!geohash_grid', '!filter']\n      }])\n    },\n    useCustomNoDataScreen: true\n  });\n}\nmodule.exports = exports['default'];",null]}