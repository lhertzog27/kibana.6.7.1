{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/inspector_views/public/requests/request_selector.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/inspector_views/public/requests/request_selector.js","mtime":1567631711534},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RequestSelector = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _adapters = require('ui/inspector/adapters');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar RequestSelector = function (_Component) {\n  _inherits(RequestSelector, _Component);\n\n  function RequestSelector() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RequestSelector);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RequestSelector.__proto__ || Object.getPrototypeOf(RequestSelector)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      isPopoverOpen: false\n    }, _this.togglePopover = function () {\n      _this.setState(function (prevState) {\n        return {\n          isPopoverOpen: !prevState.isPopoverOpen\n        };\n      });\n    }, _this.closePopover = function () {\n      _this.setState({\n        isPopoverOpen: false\n      });\n    }, _this.renderRequestDropdownItem = function (request, index) {\n      var hasFailed = request.status === _adapters.RequestStatus.ERROR;\n      var inProgress = request.status === _adapters.RequestStatus.PENDING;\n\n      return _react2.default.createElement(\n        _eui.EuiContextMenuItem,\n        {\n          key: index,\n          icon: request === _this.props.selectedRequest ? 'check' : 'empty',\n          onClick: function onClick() {\n            _this.props.onRequestChanged(request);\n            _this.closePopover();\n          },\n          toolTipContent: request.description,\n          toolTipPosition: 'left',\n          'data-test-subj': 'inspectorRequestChooser' + request.name\n        },\n        _react2.default.createElement(\n          _eui.EuiTextColor,\n          { color: hasFailed ? 'danger' : 'default' },\n          request.name,\n          hasFailed && _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'inspectorViews.requests.failedLabel',\n            defaultMessage: ' (failed)'\n          }),\n          inProgress && _react2.default.createElement(_eui.EuiLoadingSpinner, {\n            size: 's',\n            'aria-label': _i18n.i18n.translate('inspectorViews.requests.requestInProgressAriaLabel', {\n              defaultMessage: 'Request in progress'\n            }),\n            className: 'insRequestSelector__menuSpinner'\n          })\n        )\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(RequestSelector, [{\n    key: 'renderRequestDropdown',\n    value: function renderRequestDropdown() {\n      var button = _react2.default.createElement(\n        _eui.EuiButtonEmpty,\n        {\n          iconType: 'arrowDown',\n          iconSide: 'right',\n          size: 's',\n          onClick: this.togglePopover,\n          'data-test-subj': 'inspectorRequestChooser'\n        },\n        this.props.selectedRequest.name\n      );\n\n      return _react2.default.createElement(\n        _eui.EuiPopover,\n        {\n          id: 'inspectorRequestChooser',\n          button: button,\n          isOpen: this.state.isPopoverOpen,\n          closePopover: this.closePopover,\n          panelPaddingSize: 'none',\n          anchorPosition: 'downLeft',\n          repositionOnScroll: true\n        },\n        _react2.default.createElement(_eui.EuiContextMenuPanel, {\n          items: this.props.requests.map(this.renderRequestDropdownItem)\n        })\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          selectedRequest = _props.selectedRequest,\n          requests = _props.requests;\n\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        {\n          alignItems: 'center',\n          gutterSize: 'xs'\n        },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          {\n            grow: false\n          },\n          _react2.default.createElement(\n            'strong',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'inspectorViews.requests.requestLabel',\n              defaultMessage: 'Request:'\n            })\n          )\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: true },\n          requests.length <= 1 && _react2.default.createElement(\n            'div',\n            { className: 'insRequestSelector__singleRequest' },\n            selectedRequest.name\n          ),\n          requests.length > 1 && this.renderRequestDropdown()\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          selectedRequest.status !== _adapters.RequestStatus.PENDING && _react2.default.createElement(\n            _eui.EuiToolTip,\n            {\n              position: 'left',\n              title: selectedRequest.status === _adapters.RequestStatus.OK ? _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'inspectorViews.requests.requestSucceededTooltipTitle',\n                defaultMessage: 'Request succeeded'\n              }) : _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'inspectorViews.requests.requestFailedTooltipTitle',\n                defaultMessage: 'Request failed'\n              }),\n              content: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'inspectorViews.requests.requestTooltipDescription',\n                defaultMessage: 'The total time the request took.'\n              })\n            },\n            _react2.default.createElement(\n              _eui.EuiBadge,\n              {\n                color: selectedRequest.status === _adapters.RequestStatus.OK ? 'secondary' : 'danger',\n                iconType: selectedRequest.status === _adapters.RequestStatus.OK ? 'check' : 'cross'\n              },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'inspectorViews.requests.requestTimeLabel',\n                defaultMessage: '{requestTime}ms',\n                values: { requestTime: selectedRequest.time }\n              })\n            )\n          ),\n          selectedRequest.status === _adapters.RequestStatus.PENDING && _react2.default.createElement(_eui.EuiLoadingSpinner, {\n            size: 'm',\n            'aria-label': _i18n.i18n.translate('inspectorViews.requests.requestInProgressAriaLabel', {\n              defaultMessage: 'Request in progress'\n            })\n          })\n        )\n      );\n    }\n  }]);\n\n  return RequestSelector;\n}(_react.Component);\n\nRequestSelector.propTypes = {\n  requests: _propTypes2.default.array.isRequired,\n  selectedRequest: _propTypes2.default.object.isRequired\n};\n\nexports.RequestSelector = RequestSelector;",null]}