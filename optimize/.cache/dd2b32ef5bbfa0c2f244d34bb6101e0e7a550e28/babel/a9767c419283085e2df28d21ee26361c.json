{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/directives/kibana/listing/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/directives/kibana/listing/index.js","mtime":1567631712097},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _modules = require('ui/modules');\n\nvar _components = require('@kbn/ui-framework/components');\n\nvar _status_icon = require('plugins/monitoring/components/kibana/status_icon');\n\nvar _table = require('plugins/monitoring/components/table');\n\nvar _constants = require('../../../../common/constants');\n\nvar _format_number = require('../../../lib/format_number');\n\nvar _eui = require('@elastic/eui');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _i18n2 = require('ui/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar filterFields = ['kibana.name', 'kibana.host', 'kibana.status', 'kibana.transport_address']; /*\n                                                                                                 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                 * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                 * you may not use this file except in compliance with the Elastic License.\n                                                                                                 */\n\nvar columns = [{\n  title: _i18n.i18n.translate('xpack.monitoring.kibana.listing.nameColumnTitle', {\n    defaultMessage: 'Name'\n  }),\n  sortKey: 'kibana.name',\n  sortOrder: _constants.SORT_ASCENDING\n}, {\n  title: _i18n.i18n.translate('xpack.monitoring.kibana.listing.statusColumnTitle', {\n    defaultMessage: 'Status'\n  }),\n  sortKey: 'kibana.status'\n}, {\n  title: _i18n.i18n.translate('xpack.monitoring.kibana.listing.loadAverageColumnTitle', {\n    defaultMessage: 'Load Average'\n  }),\n  sortKey: 'os.load.1m'\n}, {\n  title: _i18n.i18n.translate('xpack.monitoring.kibana.listing.memorySizeColumnTitle', {\n    defaultMessage: 'Memory Size'\n  }),\n  sortKey: 'process.memory.resident_set_size_in_bytes'\n}, {\n  title: _i18n.i18n.translate('xpack.monitoring.kibana.listing.requestsColumnTitle', {\n    defaultMessage: 'Requests'\n  }),\n  sortKey: 'requests.total'\n}, {\n  title: _i18n.i18n.translate('xpack.monitoring.kibana.listing.responseTimeColumnTitle', {\n    defaultMessage: 'Response Times'\n  }),\n  sortKey: 'response_times.average'\n}];\nvar instanceRowFactory = function instanceRowFactory(scope, kbnUrl) {\n  var goToInstance = function goToInstance(uuid) {\n    scope.$evalAsync(function () {\n      kbnUrl.changePath('/kibana/instances/' + uuid);\n    });\n  };\n\n  return (0, _react3.injectI18n)(function KibanaRow(props) {\n    return _react2.default.createElement(\n      _components.KuiTableRow,\n      null,\n      _react2.default.createElement(\n        _components.KuiTableRowCell,\n        null,\n        _react2.default.createElement(\n          'div',\n          { className: 'monTableCell__name' },\n          _react2.default.createElement(\n            _eui.EuiLink,\n            {\n              onClick: goToInstance.bind(null, (0, _lodash.get)(props, 'kibana.uuid')),\n              'data-test-subj': 'kibanaLink-' + props.kibana.name\n            },\n            props.kibana.name\n          )\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'monTableCell__transportAddress' },\n          (0, _lodash.get)(props, 'kibana.transport_address')\n        )\n      ),\n      _react2.default.createElement(\n        _components.KuiTableRowCell,\n        null,\n        _react2.default.createElement(\n          'div',\n          {\n            className: 'monTableCell__status',\n            title: props.intl.formatMessage({\n              id: 'xpack.monitoring.kibana.listing.instanceStatusTitle',\n              defaultMessage: 'Instance status: {kibanaStatus}'\n            }, {\n              kibanaStatus: props.kibana.status\n            })\n          },\n          _react2.default.createElement(_status_icon.KibanaStatusIcon, { status: props.kibana.status, availability: props.availability }),\n          '\\xA0',\n          !props.availability ? _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.monitoring.kibana.listing.instanceStatus.offlineLabel',\n            defaultMessage: 'Offline'\n          }) : (0, _lodash.capitalize)(props.kibana.status)\n        )\n      ),\n      _react2.default.createElement(\n        _components.KuiTableRowCell,\n        null,\n        _react2.default.createElement(\n          'div',\n          { className: 'monTableCell__number' },\n          (0, _format_number.formatMetric)((0, _lodash.get)(props, 'os.load[\"1m\"]'), '0.00')\n        )\n      ),\n      _react2.default.createElement(\n        _components.KuiTableRowCell,\n        null,\n        _react2.default.createElement(\n          'div',\n          { className: 'monTableCell__number' },\n          (0, _format_number.formatNumber)(props.process.memory.resident_set_size_in_bytes, 'byte')\n        )\n      ),\n      _react2.default.createElement(\n        _components.KuiTableRowCell,\n        null,\n        _react2.default.createElement(\n          'div',\n          { className: 'monTableCell__number' },\n          (0, _format_number.formatNumber)(props.requests.total, 'int_commas')\n        )\n      ),\n      _react2.default.createElement(\n        _components.KuiTableRowCell,\n        null,\n        _react2.default.createElement(\n          'div',\n          { className: 'monTableCell__splitNumber' },\n          props.response_times.average && (0, _format_number.formatNumber)(props.response_times.average, 'int_commas') + ' ms avg'\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'monTableCell__splitNumber' },\n          (0, _format_number.formatNumber)(props.response_times.max, 'int_commas'),\n          ' ms max'\n        )\n      )\n    );\n  });\n};\n\nvar uiModule = _modules.uiModules.get('monitoring/directives', []);\nuiModule.directive('monitoringKibanaListing', function (kbnUrl, i18n) {\n  return {\n    restrict: 'E',\n    scope: {\n      instances: '=',\n      pageIndex: '=',\n      filterText: '=',\n      sortKey: '=',\n      sortOrder: '=',\n      onNewState: '='\n    },\n    link: function link(scope, $el) {\n      var filterInstancesPlaceholder = i18n('xpack.monitoring.kibana.listing.filterInstancesPlaceholder', {\n        defaultMessage: 'Filter Instancesâ€¦'\n      });\n\n      scope.$watch('instances', function () {\n        var instances = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        var kibanasTable = _react2.default.createElement(\n          _i18n2.I18nContext,\n          null,\n          _react2.default.createElement(_table.MonitoringTable, {\n            className: 'kibanaInstancesTable',\n            rows: instances,\n            pageIndex: scope.pageIndex,\n            filterText: scope.filterText,\n            sortKey: scope.sortKey,\n            sortOrder: scope.sortOrder,\n            onNewState: scope.onNewState,\n            placeholder: filterInstancesPlaceholder,\n            filterFields: filterFields,\n            columns: columns,\n            rowComponent: instanceRowFactory(scope, kbnUrl)\n          })\n        );\n        (0, _reactDom.render)(kibanasTable, $el[0]);\n      });\n    }\n  };\n});",null]}