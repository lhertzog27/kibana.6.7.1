{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/graph/public/services/outlink_encoders.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/graph/public/services/outlink_encoders.js","mtime":1567631711959},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOutlinkEncoders = undefined;\n\nvar _risonNode = require('rison-node');\n\nvar _risonNode2 = _interopRequireDefault(_risonNode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getOutlinkEncoders = exports.getOutlinkEncoders = function getOutlinkEncoders(i18n) {\n  return [{\n    id: 'esq-rison-loose',\n    title: i18n('xpack.graph.outlinkEncoders.esqRisonLooseTitle', {\n      defaultMessage: 'elasticsearch OR query (rison encoded)'\n    }),\n    description: i18n('xpack.graph.outlinkEncoders.esqRisonLooseDescription', {\n      defaultMessage: 'rison-encoded JSON, minimum_should_match=1, compatible with most Kibana URLs'\n    }),\n    encode: function encode(workspace) {\n      return encodeURIComponent(_risonNode2.default.encode(workspace.getQuery(workspace.getSelectedOrAllNodes(), true)));\n    }\n  }, {\n    id: 'esq-rison',\n    title: i18n('xpack.graph.outlinkEncoders.esqRisonTitle', {\n      defaultMessage: 'elasticsearch AND query (rison encoded)'\n    }),\n    description: i18n('xpack.graph.outlinkEncoders.esqRisonDescription', {\n      defaultMessage: 'rison-encoded JSON, minimum_should_match=2, compatible with most Kibana URLs'\n    }),\n    encode: function encode(workspace) {\n      return encodeURIComponent(_risonNode2.default.encode(workspace.getQuery(workspace.getSelectedOrAllNodes())));\n    }\n  }, {\n    id: 'esq-similar-rison',\n    title: i18n('xpack.graph.outlinkEncoders.esqSimilarRisonTitle', {\n      defaultMessage: 'elasticsearch more like this query (rison encoded)'\n    }),\n    description: i18n('xpack.graph.outlinkEncoders.esqSimilarRisonDescription', {\n      defaultMessage: 'rison-encoded JSON, \"like this but not this\" type query to find missing docs'\n    }),\n    encode: function encode(workspace) {\n      return encodeURIComponent(_risonNode2.default.encode(workspace.getLikeThisButNotThisQuery(workspace.getSelectedOrAllNodes())));\n    }\n  }, {\n    id: 'esq-plain',\n    title: i18n('xpack.graph.outlinkEncoders.esqPlainTitle', {\n      defaultMessage: 'elasticsearch query (plain encoding)'\n    }),\n    description: i18n('xpack.graph.outlinkEncoders.esqPlainDescription', {\n      defaultMessage: 'JSON encoded using standard url encoding'\n    }),\n    encode: function encode(workspace) {\n      return encodeURIComponent(JSON.stringify(workspace.getQuery(workspace.getSelectedOrAllNodes())));\n    }\n  }, {\n    id: 'text-plain',\n    title: i18n('xpack.graph.outlinkEncoders.textPlainTitle', {\n      defaultMessage: 'plain text'\n    }),\n    description: i18n('xpack.graph.outlinkEncoders.textPlainDescription', {\n      defaultMessage: 'Text of selected vertex labels as a plain url-encoded string'\n    }),\n    encode: function encode(workspace) {\n      var q = '';\n      var nodes = workspace.getSelectedOrAllNodes();\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        if (i > 0) {\n          q += ' ';\n        }\n        q += node.label;\n      }\n      return encodeURIComponent(q);\n    }\n  }, {\n    id: 'text-lucene',\n    title: i18n('xpack.graph.outlinkEncoders.textLuceneTitle', {\n      defaultMessage: 'Lucene-escaped text'\n    }),\n    description: i18n('xpack.graph.outlinkEncoders.textLuceneDescription', {\n      defaultMessage: 'Text of selected vertex labels with any Lucene special characters encoded'\n    }),\n    encode: function encode(workspace) {\n      var q = '';\n      var nodes = workspace.getSelectedOrAllNodes();\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        if (i > 0) {\n          q += ' ';\n        }\n        q += node.label;\n      }\n      //escape the Lucene special characters https://lucene.apache.org/core/2_9_4/queryparsersyntax.html#Escaping Special Characters\n      var luceneChars = '+-&|!(){}[]^\"~*?:\\\\';\n      q = q.split('').map(function (char) {\n        return luceneChars.includes(char) ? '\\\\' + char : char;\n      }).join('');\n      return encodeURIComponent(q);\n    }\n  }];\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */",null]}