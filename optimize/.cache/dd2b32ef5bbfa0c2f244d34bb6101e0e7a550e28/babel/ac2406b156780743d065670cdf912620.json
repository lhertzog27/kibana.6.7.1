{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/element_share_container/element_share_container.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/element_share_container/element_share_container.js","mtime":1567631711922},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ElementShareContainer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar ElementShareContainer = exports.ElementShareContainer = function (_React$PureComponent) {\n  _inherits(ElementShareContainer, _React$PureComponent);\n\n  function ElementShareContainer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ElementShareContainer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ElementShareContainer.__proto__ || Object.getPrototypeOf(ElementShareContainer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      renderComplete: false\n    }, _this.createDoneChecker = function () {\n      var isDevelopment = process.env.NODE_ENV !== 'production';\n      if (!isDevelopment) {\n        return;\n      }\n\n      var functionName = _this.props.functionName;\n\n      var timeout = 15; // timeout, in seconds\n      _this.timeout = setTimeout(function () {\n        // TODO: show this message in a proper notification\n        console.warn('done handler not called in render function after ' + timeout + ' seconds: ' + functionName);\n      }, timeout * 1000);\n    }, _this.clearDoneChecker = function () {\n      clearTimeout(_this.timeout);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ElementShareContainer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var onComplete = this.props.onComplete;\n\n      // check that the done event is called within a certain time\n\n      this.createDoneChecker();\n\n      // dispatches a custom DOM event on the container when the element is complete\n      onComplete(function () {\n        _this2.clearDoneChecker();\n        if (!_this2.sharedItemRef) {\n          return;\n        } // without this, crazy fast forward/backward paging leads to an error\n        var ev = new CustomEvent('renderComplete');\n        _this2.sharedItemRef.dispatchEvent(ev);\n\n        // if the element is finished before reporting is listening for the\n        // renderComplete event, the report never completes. to get around that\n        // issue, track the completed state locally and set the\n        // [data-render-complete] value accordingly.\n        // this is similar to renderComplete directive in Kibana,\n        // see: src/ui/public/render_complete/directive.js\n        _this2.setState({ renderComplete: true });\n      });\n    }\n  }, {\n    key: 'getSnapshotBeforeUpdate',\n    value: function getSnapshotBeforeUpdate(prevProps) {\n      return { functionName: prevProps.functionName };\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      // if function name changed, clear and recreate done checker\n      if (snapshot.functionName !== this.props.functionName) {\n        this.clearDoneChecker();\n        this.createDoneChecker();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.clearDoneChecker();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      // NOTE: the data-shared-item and data-render-complete attributes are used for reporting\n      return _react2.default.createElement(\n        'div',\n        {\n          'data-shared-item': true,\n          'data-render-complete': this.state.renderComplete,\n          className: this.props.className,\n          ref: function ref(_ref2) {\n            return _this3.sharedItemRef = _ref2;\n          }\n        },\n        this.props.children\n      );\n    }\n  }]);\n\n  return ElementShareContainer;\n}(_react2.default.PureComponent);\n\nElementShareContainer.propTypes = {\n  functionName: _propTypes2.default.string.isRequired,\n  onComplete: _propTypes2.default.func.isRequired,\n  className: _propTypes2.default.string,\n  children: _propTypes2.default.node.isRequired\n};",null]}