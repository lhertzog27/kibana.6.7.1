{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/param_types/regex.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/param_types/regex.js","mtime":1567631711701},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegexParamType = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _regular_expression = require('../controls/regular_expression.html');\n\nvar _regular_expression2 = _interopRequireDefault(_regular_expression);\n\nvar _base = require('./base');\n\nvar _legacy_class = require('../../utils/legacy_class');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n(0, _legacy_class.createLegacyClass)(RegexParamType).inherits(_base.BaseParamType);\nfunction RegexParamType(config) {\n  _lodash2.default.defaults(config, { pattern: '' });\n  RegexParamType.Super.call(this, config);\n}\n\nRegexParamType.prototype.editor = _regular_expression2.default;\n\n/**\n * Disabled state of the agg param\n *\n * @return {bool}\n */\nRegexParamType.prototype.disabled = function () {\n  return false;\n};\n\n/**\n * Write the aggregation parameter.\n *\n * @param  {AggConfig} aggConfig - the entire configuration for this agg\n * @param  {object} output - the result of calling write on all of the aggregations\n *                         parameters.\n * @param  {object} output.params - the final object that will be included as the params\n *                               for the agg\n * @return {undefined}\n */\nRegexParamType.prototype.write = function (aggConfig, output) {\n  var param = aggConfig.params[this.name];\n  var paramType = aggConfig.type.params.byName[this.name];\n\n  // clear aggParam if pattern is not set or is disabled\n  if (!param || !param.pattern || !param.pattern.length || paramType.disabled(aggConfig)) {\n    return;\n  }\n\n  var obj = {\n    pattern: param.pattern\n  };\n\n  output.params[this.name] = obj;\n};\n\nexports.RegexParamType = RegexParamType;",null]}