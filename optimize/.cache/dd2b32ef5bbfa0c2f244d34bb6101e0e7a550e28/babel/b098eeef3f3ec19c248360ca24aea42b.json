{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/lib/sibling_pipeline_agg_writer.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/lib/sibling_pipeline_agg_writer.js","mtime":1567631711700},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar siblingPipelineAggWriter = function siblingPipelineAggWriter(agg, output) {\n  if (!agg.params.customMetric) return;\n\n  var metricAgg = agg.params.customMetric;\n  var bucketAgg = agg.params.customBucket;\n\n  // if a bucket is selected, we must add this agg as a sibling to it, and add a metric to that bucket (or select one of its)\n  if (metricAgg.type.name !== 'count') {\n    bucketAgg.subAggs = (output.subAggs || []).concat(metricAgg);\n    output.params.buckets_path = bucketAgg.id + '>' + metricAgg.id;\n  } else {\n    output.params.buckets_path = bucketAgg.id + '>_count';\n  }\n\n  output.parentAggs = (output.parentAggs || []).concat(bucketAgg);\n};\n\nexports.siblingPipelineAggWriter = siblingPipelineAggWriter;",null]}