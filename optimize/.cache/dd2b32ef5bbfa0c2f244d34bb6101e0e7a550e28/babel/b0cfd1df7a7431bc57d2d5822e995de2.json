{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/field_editor/components/field_format_editor/field_format_editor.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/field_editor/components/field_format_editor/field_format_editor.js","mtime":1567631711727},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FieldFormatEditor = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar FieldFormatEditor = exports.FieldFormatEditor = function (_PureComponent) {\n  _inherits(FieldFormatEditor, _PureComponent);\n\n  function FieldFormatEditor(props) {\n    _classCallCheck(this, FieldFormatEditor);\n\n    var _this = _possibleConstructorReturn(this, (FieldFormatEditor.__proto__ || Object.getPrototypeOf(FieldFormatEditor)).call(this, props));\n\n    _this.state = {\n      EditorComponent: null\n    };\n    return _this;\n  }\n\n  _createClass(FieldFormatEditor, [{\n    key: 'render',\n    value: function render() {\n      var EditorComponent = this.state.EditorComponent;\n      var _props = this.props,\n          fieldType = _props.fieldType,\n          fieldFormat = _props.fieldFormat,\n          fieldFormatParams = _props.fieldFormatParams,\n          onChange = _props.onChange,\n          onError = _props.onError;\n\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        EditorComponent ? _react2.default.createElement(EditorComponent, {\n          fieldType: fieldType,\n          format: fieldFormat,\n          formatParams: fieldFormatParams,\n          onChange: onChange,\n          onError: onError\n        }) : null\n      );\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps) {\n      return {\n        EditorComponent: nextProps.fieldFormatEditors.getEditor(nextProps.fieldFormatId) || null\n      };\n    }\n  }]);\n\n  return FieldFormatEditor;\n}(_react.PureComponent);\n\nFieldFormatEditor.propTypes = {\n  fieldType: _propTypes2.default.string.isRequired,\n  fieldFormat: _propTypes2.default.object.isRequired,\n  fieldFormatId: _propTypes2.default.string.isRequired,\n  fieldFormatParams: _propTypes2.default.object.isRequired,\n  fieldFormatEditors: _propTypes2.default.object.isRequired,\n  onChange: _propTypes2.default.func.isRequired,\n  onError: _propTypes2.default.func.isRequired\n};",null]}