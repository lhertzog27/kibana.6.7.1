{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/xpack_main/public/components/telemetry/opt_in_details_component.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/xpack_main/public/components/telemetry/opt_in_details_component.js","mtime":1567631712358},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptInExampleFlyout = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * React component for displaying the example data associated with the Telemetry opt-in banner.\n */\nvar OptInExampleFlyout = exports.OptInExampleFlyout = function (_Component) {\n  _inherits(OptInExampleFlyout, _Component);\n\n  function OptInExampleFlyout(props) {\n    _classCallCheck(this, OptInExampleFlyout);\n\n    var _this = _possibleConstructorReturn(this, (OptInExampleFlyout.__proto__ || Object.getPrototypeOf(OptInExampleFlyout)).call(this, props));\n\n    _this.state = {\n      data: null,\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(OptInExampleFlyout, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.fetchTelemetry().then(function (response) {\n        return _this2.setState({ data: Array.isArray(response.data) ? response.data : null, isLoading: false });\n      }).catch(function () {\n        return _this2.setState({ isLoading: false });\n      });\n    }\n  }, {\n    key: 'renderBody',\n    value: function renderBody(_ref) {\n      var data = _ref.data,\n          isLoading = _ref.isLoading;\n\n      if (isLoading) {\n        return _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { justifyContent: 'spaceAround' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(_eui.EuiLoadingSpinner, { size: 'xl' })\n          )\n        );\n      }\n\n      if (data === null) {\n        return _react2.default.createElement(\n          _eui.EuiCallOut,\n          {\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.main.telemetry.callout.errorLoadingClusterStatisticsTitle',\n              defaultMessage: 'Error loading cluster statistics'\n            }),\n            color: 'danger',\n            iconType: 'cross'\n          },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.main.telemetry.callout.errorLoadingClusterStatisticsDescription',\n            defaultMessage: 'An unexpected error occured while attempting to fetch the cluster statistics. This can occur because Elasticsearch failed, Kibana failed, or there is a network error. Check Kibana, then reload the page and try again.'\n          })\n        );\n      }\n\n      return _react2.default.createElement(\n        _eui.EuiCodeBlock,\n        { language: 'js' },\n        JSON.stringify(data, null, 2)\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        _eui.EuiPortal,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFlyout,\n          {\n            ownFocus: true,\n            onClose: this.props.onClose,\n            maxWidth: true\n          },\n          _react2.default.createElement(\n            _eui.EuiFlyoutHeader,\n            null,\n            _react2.default.createElement(\n              _eui.EuiTitle,\n              null,\n              _react2.default.createElement(\n                'h2',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.main.telemetry.callout.clusterStatisticsTitle',\n                  defaultMessage: 'Cluster statistics'\n                })\n              )\n            ),\n            _react2.default.createElement(\n              _eui.EuiTextColor,\n              { color: 'subdued' },\n              _react2.default.createElement(\n                _eui.EuiText,\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.main.telemetry.callout.clusterStatisticsDescription',\n                  defaultMessage: 'This is an example of the basic cluster statistics that we\\'ll collect. It includes the number of indices, shards, and nodes. It also includes high-level usage statistics, such as whether monitoring is turned on.'\n                })\n              )\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlyoutBody,\n            null,\n            this.renderBody(this.state)\n          )\n        )\n      );\n    }\n  }]);\n\n  return OptInExampleFlyout;\n}(_react.Component);\n\nOptInExampleFlyout.propTypes = {\n  /**\n   * Callback function with no parameters that returns a {@code Promise} containing the\n   * telemetry data (expected to be an array).\n   */\n  fetchTelemetry: _propTypes2.default.func.isRequired,\n  /**\n   * Callback function with no parameters that closes this flyout.\n   */\n  onClose: _propTypes2.default.func.isRequired\n};",null]}