{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/elasticsearch/node/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/elasticsearch/node/index.js","mtime":1567631712102},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _route_init = require('plugins/monitoring/lib/route_init');\n\nvar _get_page_data = require('./get_page_data');\n\nvar _index = require('./index.html');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _node = require('../../../components/elasticsearch/node/node');\n\nvar _i18n = require('ui/i18n');\n\nvar _labels = require('../../../components/elasticsearch/shard_allocation/lib/labels');\n\nvar _nodes_by_indices = require('../../../components/elasticsearch/shard_allocation/transformers/nodes_by_indices');\n\nvar _base_controller = require('../../base_controller');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * Controller for Node Detail\n */\n\n\n_routes2.default.when('/elasticsearch/nodes/:node', {\n  template: _index2.default,\n  resolve: {\n    clusters: function clusters(Private) {\n      var routeInit = Private(_route_init.routeInitProvider);\n      return routeInit();\n    },\n    pageData: _get_page_data.getPageData\n  },\n  controllerAs: 'monitoringElasticsearchNodeApp',\n  controller: function (_MonitoringViewBaseCo) {\n    _inherits(controller, _MonitoringViewBaseCo);\n\n    function controller($injector, $scope, i18n) {\n      _classCallCheck(this, controller);\n\n      var $route = $injector.get('$route');\n      var kbnUrl = $injector.get('kbnUrl');\n      var nodeName = $route.current.params.node;\n\n      var _this = _possibleConstructorReturn(this, (controller.__proto__ || Object.getPrototypeOf(controller)).call(this, {\n        title: i18n('xpack.monitoring.elasticsearch.node.overview.routeTitle', {\n          defaultMessage: 'Elasticsearch - Nodes - {nodeName} - Overview',\n          values: {\n            nodeName: nodeName\n          }\n        }),\n        defaultData: {},\n        getPageData: _get_page_data.getPageData,\n        reactNodeId: 'monitoringElasticsearchNodeApp',\n        $scope: $scope,\n        $injector: $injector\n      }));\n\n      _this.nodeName = nodeName;\n\n      var features = $injector.get('features');\n      var callPageData = (0, _lodash.partial)(_get_page_data.getPageData, $injector);\n      // show/hide system indices in shard allocation view\n      $scope.showSystemIndices = features.isEnabled('showSystemIndices', false);\n      $scope.toggleShowSystemIndices = function (isChecked) {\n        $scope.showSystemIndices = isChecked;\n        // preserve setting in localStorage\n        features.update('showSystemIndices', isChecked);\n        // update the page\n        callPageData().then(function (data) {\n          return _this.data = data;\n        });\n      };\n\n      var transformer = (0, _nodes_by_indices.nodesByIndices)();\n      $scope.$watch(function () {\n        return _this.data;\n      }, function (data) {\n        if (!data || !data.shards) {\n          return;\n        }\n\n        var shards = data.shards;\n        $scope.totalCount = shards.length;\n        $scope.showing = transformer(shards, data.nodes);\n        $scope.labels = _labels.labels.node;\n\n        _this.renderReact(_react2.default.createElement(\n          _i18n.I18nContext,\n          null,\n          _react2.default.createElement(_node.Node, _extends({\n            scope: $scope,\n            kbnUrl: kbnUrl,\n            onBrush: _this.onBrush\n          }, data))\n        ));\n      });\n      return _this;\n    }\n\n    return controller;\n  }(_base_controller.MonitoringViewBaseController)\n});",null]}