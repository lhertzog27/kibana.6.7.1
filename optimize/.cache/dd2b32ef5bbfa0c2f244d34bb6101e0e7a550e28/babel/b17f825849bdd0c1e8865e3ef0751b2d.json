{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad_export/workpad_export.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad_export/workpad_export.js","mtime":1567631711929},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkpadExport = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _popover = require('../popover');\n\nvar _clipboard = require('../clipboard');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar WorkpadExport = exports.WorkpadExport = function (_React$PureComponent) {\n  _inherits(WorkpadExport, _React$PureComponent);\n\n  function WorkpadExport() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, WorkpadExport);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WorkpadExport.__proto__ || Object.getPrototypeOf(WorkpadExport)).call.apply(_ref, [this].concat(args))), _this), _this.anchorElement = _react2.default.createRef(), _this.exportPdf = function () {\n      _this.props.onExport('pdf');\n    }, _this.downloadWorkpad = function () {\n      _this.props.onExport('json');\n    }, _this.renderPDFControls = function (closePopover) {\n      var pdfUrl = _this.props.getExportUrl('pdf');\n      return _react2.default.createElement(\n        'div',\n        { className: 'canvasWorkpadExport__panelContent' },\n        _react2.default.createElement(\n          _eui.EuiText,\n          { size: 's' },\n          _react2.default.createElement(\n            'p',\n            null,\n            'PDFs can take a minute or two to generate based upon the size of your workpad'\n          )\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        _this.props.options,\n        _react2.default.createElement(\n          _eui.EuiButton,\n          {\n            fill: true,\n            onClick: function onClick() {\n              closePopover();\n              _this.exportPdf();\n            },\n            size: 's',\n            style: { width: '100%' }\n          },\n          'Generate PDF'\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        _react2.default.createElement(\n          _eui.EuiText,\n          { size: 's' },\n          _react2.default.createElement(\n            'p',\n            null,\n            'Alternatively, copy this POST URL to call generation from outside Kibana or from Watcher.'\n          )\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        _react2.default.createElement(\n          _clipboard.Clipboard,\n          {\n            content: pdfUrl,\n            onCopy: function onCopy() {\n              _this.props.onCopy('pdf');\n              closePopover();\n            }\n          },\n          _react2.default.createElement(\n            _eui.EuiButton,\n            {\n              'aria-label': 'Copy to clipboard',\n              iconType: 'copy',\n              size: 's',\n              style: { width: '100%' }\n            },\n            'Copy POST URL'\n          )\n        )\n      );\n    }, _this.renderPanelTree = function (closePopover) {\n      return {\n        id: 0,\n        title: 'Share this workpad',\n        items: [{\n          name: 'Download as JSON',\n          icon: _react2.default.createElement(_eui.EuiIcon, { type: 'exportAction', size: 'm' }),\n          onClick: function onClick() {\n            closePopover();\n            _this.downloadWorkpad();\n          }\n        }, {\n          name: 'PDF Reports',\n          icon: 'document',\n          panel: {\n            id: 1,\n            title: 'PDF Reports',\n            content: _this.props.enabled ? _this.renderPDFControls(closePopover) : _this.renderDisabled()\n          }\n        }]\n      };\n    }, _this.renderDisabled = function () {\n      var reportingConfig = 'xpack.reporting:\\n  enabled: true\\n  capture.browser.type: chromium';\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'canvasWorkpadExport__panelContent' },\n        _react2.default.createElement(\n          _eui.EuiText,\n          { size: 's' },\n          _react2.default.createElement(\n            'p',\n            null,\n            'Export to PDF is disabled. You must configure reporting to use the Chromium browser. Add this to your ',\n            _react2.default.createElement(\n              _eui.EuiCode,\n              null,\n              'kibana.yml'\n            ),\n            ' file.'\n          )\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, null),\n        _react2.default.createElement(\n          _clipboard.Clipboard,\n          { content: reportingConfig, onCopy: function onCopy() {\n              return _this.props.onCopy('reportingConfig');\n            } },\n          _react2.default.createElement(\n            _eui.EuiCodeBlock,\n            {\n              className: 'canvasWorkpadExport__reportingConfig',\n              paddingSize: 's',\n              fontSize: 's',\n              language: 'yml'\n            },\n            reportingConfig\n          )\n        )\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(WorkpadExport, [{\n    key: 'flattenPanelTree',\n    value: function flattenPanelTree(tree) {\n      var _this2 = this;\n\n      var array = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      array.push(tree);\n\n      if (tree.items) {\n        tree.items.forEach(function (item) {\n          if (item.panel) {\n            _this2.flattenPanelTree(item.panel, array);\n            item.panel = item.panel.id;\n          }\n        });\n      }\n\n      return array;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var exportControl = function exportControl(togglePopover) {\n        return _react2.default.createElement(_eui.EuiButtonIcon, { iconType: 'share', 'aria-label': 'Share this workpad', onClick: togglePopover });\n      };\n\n      // TODO: replace this with `showShareContextMenu` in `ui/share` once it's been converted to React\n      return _react2.default.createElement(\n        _popover.Popover,\n        {\n          button: exportControl,\n          panelPaddingSize: 'none',\n          tooltip: 'Share workpad',\n          tooltipPosition: 'bottom'\n        },\n        function (_ref2) {\n          var closePopover = _ref2.closePopover;\n          return _react2.default.createElement(_eui.EuiContextMenu, {\n            initialPanelId: 0,\n            panels: _this3.flattenPanelTree(_this3.renderPanelTree(closePopover))\n          });\n        }\n      );\n    }\n  }]);\n\n  return WorkpadExport;\n}(_react2.default.PureComponent);\n\nWorkpadExport.propTypes = {\n  enabled: _propTypes2.default.bool.isRequired,\n  onCopy: _propTypes2.default.func.isRequired,\n  onExport: _propTypes2.default.func.isRequired,\n  getExportUrl: _propTypes2.default.func.isRequired\n};",null]}