{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/tile_map/public/editors/wms_options.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/tile_map/public/editors/wms_options.js","mtime":1567631711644},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('ui/modules');\n\nvar _wms_options = require('./wms_options.html');\n\nvar _wms_options2 = _interopRequireDefault(_wms_options);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _module = _modules.uiModules.get('kibana');\n\n_module.directive('wmsOptions', function (serviceSettings, i18n) {\n  return {\n    restrict: 'E',\n    template: _wms_options2.default,\n    replace: true,\n    scope: {\n      options: '=',\n      collections: '='\n    },\n    link: function link($scope) {\n      $scope.wmsLinkText = i18n('tileMap.wmsOptions.wmsLinkText', { defaultMessage: 'here' });\n\n      new Promise(function (resolve, reject) {\n\n        serviceSettings.getTMSServices().then(function (allTMSServices) {\n          var newBaseLayers = $scope.collections.tmsLayers.slice();\n\n          var _loop = function _loop(i) {\n            var layerFromService = allTMSServices[i];\n            var alreadyAdded = newBaseLayers.some(function (layer) {\n              return layerFromService.id === layer.id;\n            });\n            if (!alreadyAdded) {\n              newBaseLayers.push(layerFromService);\n            }\n          };\n\n          for (var i = 0; i < allTMSServices.length; i += 1) {\n            _loop(i);\n          }\n          $scope.collections.tmsLayers = newBaseLayers;\n\n          if (!$scope.options.selectedTmsLayer && $scope.collections.tmsLayers.length) {\n            $scope.options.selectedTmsLayer = $scope.collections.tmsLayers[0];\n          }\n          resolve(true);\n        }).catch(function (e) {\n          reject(e);\n        });\n      });\n    }\n  };\n});",null]}