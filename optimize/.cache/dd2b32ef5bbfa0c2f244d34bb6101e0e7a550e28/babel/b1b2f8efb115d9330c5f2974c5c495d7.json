{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/grid/dashboard_grid_container.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/grid/dashboard_grid_container.js","mtime":1567631711558},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DashboardGridContainer = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _dashboard_grid = require('./dashboard_grid');\n\nvar _actions = require('../actions');\n\nvar _selectors = require('../selectors');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var dashboard = _ref.dashboard;\n  return {\n    panels: (0, _selectors.getPanels)(dashboard),\n    dashboardViewMode: (0, _selectors.getViewMode)(dashboard),\n    useMargins: (0, _selectors.getUseMargins)(dashboard)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onPanelsUpdated: function onPanelsUpdated(updatedPanels) {\n      return dispatch((0, _actions.updatePanels)(updatedPanels));\n    }\n  };\n};\n\nvar DashboardGridContainer = exports.DashboardGridContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_dashboard_grid.DashboardGrid);",null]}