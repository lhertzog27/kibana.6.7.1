{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/store/selectors/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/store/selectors/index.js","mtime":1567631712291},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSortField = exports.isSortAscending = exports.getFilter = exports.getCurrentPage = exports.getHasPreviousPage = exports.getHasNextPage = exports.getPageOfJobs = exports.getPager = exports.getTotalItems = exports.getJobStatusByJobName = exports.isUpdating = exports.getCreateJobError = exports.isSaving = exports.jobLoadError = exports.isLoading = exports.getDetailPanelJobId = exports.getDetailPanelJob = exports.isDetailPanelOpen = exports.getDetailPanelType = exports.getTableState = exports.getFilteredIds = exports.getJobByJobId = exports.getJobsList = exports.getJobs = undefined;\n\nvar _eui = require('@elastic/eui');\n\nvar _reselect = require('reselect');\n\nvar _services = require('../../services');\n\nvar getJobs = exports.getJobs = function getJobs(state) {\n  return state.jobs.byId;\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */\n\nvar getJobsList = exports.getJobsList = function getJobsList(state) {\n  return state.jobs.allIds;\n};\nvar getJobByJobId = exports.getJobByJobId = function getJobByJobId(state, id) {\n  return getJobs(state)[id];\n};\nvar getFilteredIds = exports.getFilteredIds = function getFilteredIds(state) {\n  return state.jobs.filteredIds;\n};\nvar getTableState = exports.getTableState = function getTableState(state) {\n  return state.tableState;\n};\n\nvar getDetailPanelType = exports.getDetailPanelType = function getDetailPanelType(state) {\n  return state.detailPanel.panelType;\n};\nvar isDetailPanelOpen = exports.isDetailPanelOpen = function isDetailPanelOpen(state) {\n  return state.detailPanel.isOpen;\n};\nvar getDetailPanelJob = exports.getDetailPanelJob = function getDetailPanelJob(state) {\n  return getJobByJobId(state, state.detailPanel.jobId);\n};\nvar getDetailPanelJobId = exports.getDetailPanelJobId = function getDetailPanelJobId(state) {\n  return state.detailPanel.jobId;\n};\n\nvar isLoading = exports.isLoading = function isLoading(state) {\n  return state.jobs.isLoading;\n};\nvar jobLoadError = exports.jobLoadError = function jobLoadError(state) {\n  return state.jobs.jobLoadError;\n};\nvar isSaving = exports.isSaving = function isSaving(state) {\n  return state.createJob.isSaving;\n};\nvar getCreateJobError = exports.getCreateJobError = function getCreateJobError(state) {\n  return state.createJob.error;\n};\nvar isUpdating = exports.isUpdating = function isUpdating(state) {\n  return state.updateJob.isUpdating;\n};\n\nvar getJobStatusByJobName = exports.getJobStatusByJobName = function getJobStatusByJobName(state, jobName) {\n  var jobs = getJobs(state);\n\n  var _ref = jobs[jobName] || {},\n      status = _ref.status;\n\n  return status;\n};\n\nvar getFilteredJobs = (0, _reselect.createSelector)(getJobs, getTableState, function (jobs, tableState) {\n  var jobArray = Object.keys(jobs).map(function (jobName) {\n    return jobs[jobName];\n  });\n  return (0, _services.filterItems)(['id', 'indexPattern', 'rollupIndex'], tableState.filter, jobArray);\n});\n\nvar getTotalItems = exports.getTotalItems = (0, _reselect.createSelector)(getFilteredJobs, function (filteredJobs) {\n  return Object.keys(filteredJobs).length;\n});\n\nvar getPager = exports.getPager = (0, _reselect.createSelector)(getTableState, getTotalItems, function (_ref2, totalItems) {\n  var currentPage = _ref2.currentPage,\n      pageSize = _ref2.pageSize;\n\n  return new _eui.Pager(totalItems, pageSize, currentPage);\n});\n\nvar getPageOfJobs = exports.getPageOfJobs = (0, _reselect.createSelector)(getFilteredJobs, getTableState, getPager, function (filteredJobs, tableState, pager) {\n  var sortedIndexes = (0, _services.sortTable)(filteredJobs, tableState.sortField, tableState.isSortAscending);\n  var firstItemIndex = pager.firstItemIndex,\n      lastItemIndex = pager.lastItemIndex;\n\n  var pagedIndexes = sortedIndexes.slice(firstItemIndex, lastItemIndex + 1);\n  return pagedIndexes;\n});\n\nvar getHasNextPage = exports.getHasNextPage = (0, _reselect.createSelector)(getPager, function (pager) {\n  return pager.hasNextPage;\n});\n\nvar getHasPreviousPage = exports.getHasPreviousPage = (0, _reselect.createSelector)(getPager, function (pager) {\n  return pager.hasPreviousPage;\n});\n\nvar getCurrentPage = exports.getCurrentPage = (0, _reselect.createSelector)(getPager, function (pager) {\n  return pager.currentPage;\n});\n\nvar getFilter = exports.getFilter = (0, _reselect.createSelector)(getTableState, function (_ref3) {\n  var filter = _ref3.filter;\n  return filter;\n});\n\nvar isSortAscending = exports.isSortAscending = (0, _reselect.createSelector)(getTableState, function (_ref4) {\n  var isSortAscending = _ref4.isSortAscending;\n  return isSortAscending;\n});\n\nvar getSortField = exports.getSortField = (0, _reselect.createSelector)(getTableState, function (_ref5) {\n  var sortField = _ref5.sortField;\n  return sortField;\n});",null]}