{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/expression_types/arg_types/container_style/border_form.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/expression_types/arg_types/container_style/border_form.js","mtime":1567631711930},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BorderForm = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _color_picker_mini = require('../../../components/color_picker_mini');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar styles = ['none', 'solid', 'dotted', 'dashed', 'double', 'groove', 'ridge', 'inset', 'outset'];\n\nvar BorderForm = exports.BorderForm = function BorderForm(_ref) {\n  var value = _ref.value,\n      radius = _ref.radius,\n      onChange = _ref.onChange,\n      colors = _ref.colors;\n\n  var border = value || '';\n\n  var _border$split = border.split(' '),\n      _border$split2 = _slicedToArray(_border$split, 3),\n      _border$split2$ = _border$split2[0],\n      borderWidth = _border$split2$ === undefined ? '' : _border$split2$,\n      _border$split2$2 = _border$split2[1],\n      borderStyle = _border$split2$2 === undefined ? '' : _border$split2$2,\n      _border$split2$3 = _border$split2[2],\n      borderColor = _border$split2$3 === undefined ? '' : _border$split2$3;\n\n  var borderWidthVal = borderWidth ? borderWidth.replace('px', '') : '';\n  var radiusVal = radius ? radius.replace('px', '') : '';\n\n  var namedChange = function namedChange(name) {\n    return function (val) {\n      if (name === 'borderWidth') {\n        return onChange('border', val + 'px ' + borderStyle + ' ' + borderColor);\n      }\n      if (name === 'borderStyle') {\n        if (val === '') {\n          return onChange('border', '0px');\n        }\n        return onChange('border', borderWidth + ' ' + val + ' ' + borderColor);\n      }\n      if (name === 'borderRadius') {\n        return onChange('borderRadius', val + 'px');\n      }\n\n      onChange(name, val);\n    };\n  };\n\n  var borderColorChange = function borderColorChange(color) {\n    return onChange('border', borderWidth + ' ' + borderStyle + ' ' + color);\n  };\n\n  return _react2.default.createElement(\n    _eui.EuiFlexGroup,\n    { gutterSize: 's' },\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: 2 },\n      _react2.default.createElement(\n        _eui.EuiFormRow,\n        { label: 'Thickness', compressed: true },\n        _react2.default.createElement(_eui.EuiFieldNumber, {\n          value: Number(borderWidthVal),\n          onChange: function onChange(e) {\n            return namedChange('borderWidth')(e.target.value);\n          }\n        })\n      )\n    ),\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: 3 },\n      _react2.default.createElement(\n        _eui.EuiFormRow,\n        { label: 'Style', compressed: true },\n        _react2.default.createElement(_eui.EuiSuperSelect, {\n          valueOfSelected: borderStyle || 'none',\n          options: styles.map(function (style) {\n            return {\n              value: style,\n              inputDisplay: _react2.default.createElement('div', { style: { height: 16, border: '4px ' + style } })\n            };\n          }),\n          onChange: namedChange('borderStyle')\n        })\n      )\n    ),\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: 2 },\n      _react2.default.createElement(\n        _eui.EuiFormRow,\n        { label: 'Radius', compressed: true },\n        _react2.default.createElement(_eui.EuiFieldNumber, {\n          value: Number(radiusVal),\n          onChange: function onChange(e) {\n            return namedChange('borderRadius')(e.target.value);\n          }\n        })\n      )\n    ),\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: 1 },\n      _react2.default.createElement(\n        _eui.EuiFormRow,\n        { label: 'Color', style: { fontSize: 0 } },\n        _react2.default.createElement(_color_picker_mini.ColorPickerMini, {\n          value: borderColor,\n          onChange: borderColorChange,\n          colors: colors,\n          anchorPosition: 'upCenter'\n        })\n      )\n    )\n  );\n};\n\nBorderForm.propTypes = {\n  value: _propTypes2.default.string,\n  radius: _propTypes2.default.string,\n  onChange: _propTypes2.default.func.isRequired,\n  colors: _propTypes2.default.array.isRequired\n};",null]}