{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/store/actions/table_state.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/store/actions/table_state.js","mtime":1567631712291},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortChanged = exports.pageSizeChanged = exports.pageChanged = exports.filterChanged = undefined;\n\nvar _action_types = require('../action_types');\n\nvar filterChanged = exports.filterChanged = function filterChanged(_ref) {\n  var filter = _ref.filter;\n  return function (dispatch) {\n    dispatch({\n      type: _action_types.FILTER_CHANGED,\n      payload: { filter: filter }\n    });\n  };\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */\n\nvar pageChanged = exports.pageChanged = function pageChanged(_ref2) {\n  var pageNumber = _ref2.pageNumber;\n  return function (dispatch) {\n    dispatch({\n      type: _action_types.PAGE_CHANGED,\n      payload: { pageNumber: pageNumber }\n    });\n  };\n};\n\nvar pageSizeChanged = exports.pageSizeChanged = function pageSizeChanged(_ref3) {\n  var pageSize = _ref3.pageSize;\n  return function (dispatch) {\n    dispatch({\n      type: _action_types.PAGE_SIZE_CHANGED,\n      payload: { pageSize: pageSize }\n    });\n  };\n};\n\nvar sortChanged = exports.sortChanged = function sortChanged(_ref4) {\n  var sortField = _ref4.sortField,\n      isSortAscending = _ref4.isSortAscending;\n  return function (dispatch) {\n    dispatch({\n      type: _action_types.SORT_CHANGED,\n      payload: { sortField: sortField, isSortAscending: isSortAscending }\n    });\n  };\n};",null]}