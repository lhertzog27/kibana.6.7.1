{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/schemas.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/schemas.js","mtime":1567631711771},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Schemas = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _indexed_array = require('../../../indexed_array');\n\nvar _agg_params = require('../../../agg_types/agg_params');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*\n                                                                                                                                                           * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                           * license agreements. See the NOTICE file distributed with\n                                                                                                                                                           * this work for additional information regarding copyright\n                                                                                                                                                           * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                           * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                           * not use this file except in compliance with the License.\n                                                                                                                                                           * You may obtain a copy of the License at\n                                                                                                                                                           *\n                                                                                                                                                           *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                           *\n                                                                                                                                                           * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                           * software distributed under the License is distributed on an\n                                                                                                                                                           * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                           * KIND, either express or implied.  See the License for the\n                                                                                                                                                           * specific language governing permissions and limitations\n                                                                                                                                                           * under the License.\n                                                                                                                                                           */\n\nvar Schemas = function Schemas(schemas) {\n  var _this = this;\n\n  _classCallCheck(this, Schemas);\n\n  (0, _lodash2.default)(schemas || []).map(function (schema) {\n    if (!schema.name) throw new Error('all schema must have a unique name');\n\n    if (schema.name === 'split') {\n      schema.params = [{\n        name: 'row',\n        default: true\n      }];\n      schema.editor = require('plugins/kbn_vislib_vis_types/controls/rows_or_columns.html');\n    } else if (schema.name === 'radius') {\n      schema.editor = require('plugins/kbn_vislib_vis_types/controls/radius_ratio_option.html');\n    }\n\n    _lodash2.default.defaults(schema, {\n      min: 0,\n      max: Infinity,\n      group: 'buckets',\n      title: schema.name,\n      aggFilter: '*',\n      editor: false,\n      params: [],\n      deprecate: false\n    });\n\n    // convert the params into a params registry\n    schema.params = new _agg_params.AggParams(schema.params);\n\n    return schema;\n  }).tap(function (schemas) {\n    _this.all = new _indexed_array.IndexedArray({\n      index: ['name'],\n      group: ['group'],\n      immutable: true,\n      initialSet: schemas\n    });\n  }).groupBy('group').forOwn(function (group, groupName) {\n    _this[groupName] = new _indexed_array.IndexedArray({\n      index: ['name'],\n      immutable: true,\n      initialSet: group\n    });\n  }).commit();\n};\n\nexports.Schemas = Schemas;",null]}