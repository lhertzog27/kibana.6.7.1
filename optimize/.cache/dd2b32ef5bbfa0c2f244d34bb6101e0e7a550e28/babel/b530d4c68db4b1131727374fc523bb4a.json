{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/anomalies_table/description_cell.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/anomalies_table/description_cell.js","mtime":1567631712027},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DescriptionCell = DescriptionCell;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _metric_change_description = require('../../formatters/metric_change_description');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Component for rendering the description cell in the anomalies table, which provides a\n * concise description of how the actual value of an anomaly compares to the typical value.\n */\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction DescriptionCell(_ref) {\n  var actual = _ref.actual,\n      typical = _ref.typical;\n\n  var _getMetricChangeDescr = (0, _metric_change_description.getMetricChangeDescription)(actual, typical),\n      iconType = _getMetricChangeDescr.iconType,\n      message = _getMetricChangeDescr.message;\n\n  return _react2.default.createElement(\n    _eui.EuiFlexGroup,\n    { gutterSize: 's' },\n    iconType !== undefined && _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: false },\n      _react2.default.createElement(_eui.EuiIcon, {\n        type: iconType,\n        size: 's'\n      })\n    ),\n    _react2.default.createElement(\n      _eui.EuiFlexItem,\n      { grow: false },\n      _react2.default.createElement(\n        _eui.EuiText,\n        { size: 'xs' },\n        _react2.default.createElement(\n          'p',\n          null,\n          message\n        )\n      )\n    )\n  );\n}\n\nDescriptionCell.propTypes = {\n  actual: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.number]),\n  typical: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.number])\n};",null]}