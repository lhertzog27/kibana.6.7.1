{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/nav_menu/nav_menu.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/nav_menu/nav_menu.js","mtime":1567631712034},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _nav_menu = require('./nav_menu.html');\n\nvar _nav_menu2 = _interopRequireDefault(_nav_menu);\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _check_license = require('../../license/check_license');\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = _modules.uiModules.get('apps/ml'); /*\n                                                  * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                  * or more contributor license agreements. Licensed under the Elastic License;\n                                                  * you may not use this file except in compliance with the Elastic License.\n                                                  */\n\n_module.directive('mlNavMenu', function (config, i18n) {\n  return {\n    restrict: 'E',\n    transclude: true,\n    template: _nav_menu2.default,\n    link: function link(scope, el, attrs) {\n\n      // Tabs\n      scope.name = attrs.name;\n\n      scope.showTabs = false;\n      if (scope.name === 'jobs' || scope.name === 'settings' || scope.name === 'datavisualizer' || scope.name === 'filedatavisualizer' || scope.name === 'timeseriesexplorer' || scope.name === 'explorer') {\n        scope.showTabs = true;\n      }\n      scope.isActiveTab = function (path) {\n        return scope.name === path;\n      };\n\n      scope.disableLinks = (0, _check_license.isFullLicense)() === false;\n\n      // Breadcrumbs\n      var crumbNames = {\n        jobs: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.jobManagementLabel', { defaultMessage: 'Job Management' }),\n          url: '#/jobs'\n        },\n        new_job: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.createNewJobLabel', { defaultMessage: 'Create New Job' }),\n          url: '#/jobs/new_job'\n        },\n        single_metric: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.singleMetricJobLabel', { defaultMessage: 'Single Metric Job' }),\n          url: ''\n        },\n        multi_metric: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.multiMetricJobLabel', { defaultMessage: 'Multi Metric job' }),\n          url: ''\n        },\n        population: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.populationJobLabel', { defaultMessage: 'Population job' }),\n          url: ''\n        },\n        advanced: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.advancedJobConfigurationLabel', { defaultMessage: 'Advanced Job Configuration' }),\n          url: ''\n        },\n        datavisualizer: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.dataVisualizerLabel', { defaultMessage: 'Data Visualizer' }),\n          url: ''\n        },\n        filedatavisualizer: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.fileDataVisualizerLabel', { defaultMessage: 'File Data Visualizer (Experimental)' }),\n          url: ''\n        },\n        explorer: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.anomalyExplorerLabel', { defaultMessage: 'Anomaly Explorer' }),\n          url: '#/explorer'\n        },\n        timeseriesexplorer: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.singleMetricViewerLabel', { defaultMessage: 'Single Metric Viewer' }),\n          url: '#/timeseriesexplorer'\n        },\n        settings: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.settingsLabel', { defaultMessage: 'Settings' }),\n          url: '#/settings'\n        },\n        calendars_list: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.calendarManagementLabel', { defaultMessage: 'Calendar Management' }),\n          url: '#/settings/calendars_list'\n        },\n        new_calendar: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.newCalendarLabel', { defaultMessage: 'New Calendar' }),\n          url: '#/settings/calendars_list/new_calendar'\n        },\n        edit_calendar: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.editCalendarLabel', { defaultMessage: 'Edit Calendar' }),\n          url: '#/settings/calendars_list/edit_calendar'\n        },\n        filter_lists: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.filterListsLabel', { defaultMessage: 'Filter Lists' }),\n          url: '#/settings/filter_lists'\n        },\n        new_filter_list: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.newFilterListLabel', { defaultMessage: 'New Filter List' }),\n          url: '#/settings/filter_lists/new'\n        },\n        edit_filter_list: {\n          label: i18n('xpack.ml.navMenu.breadcrumbs.editFilterListLabel', { defaultMessage: 'Edit Filter List' }),\n          url: '#/settings/filter_lists/edit'\n        }\n      };\n\n      var breadcrumbs = [{\n        label: i18n('xpack.ml.navMenu.breadcrumbs.machineLearningLabel', { defaultMessage: 'Machine Learning' }),\n        url: '#/'\n      }];\n\n      // get crumbs from url\n      var crumbs = _routes2.default.getBreadcrumbs();\n      _lodash2.default.each(crumbs, function (crumb) {\n        breadcrumbs.push(crumbNames[crumb.id]);\n      });\n      scope.breadcrumbs = breadcrumbs.filter(Boolean);\n\n      config.watch('k7design', function (val) {\n        return scope.showPluginBreadcrumbs = !val;\n      });\n      _chrome2.default.breadcrumbs.set(scope.breadcrumbs.map(function (b) {\n        return { text: b.label, href: b.url };\n      }));\n\n      // when the page loads, focus on the first breadcrumb\n      el.ready(function () {\n        var $crumbs = (0, _jquery2.default)('.kuiLocalBreadcrumbs a');\n        if ($crumbs.length) {\n          $crumbs[0].focus();\n        }\n      });\n    }\n  };\n});",null]}