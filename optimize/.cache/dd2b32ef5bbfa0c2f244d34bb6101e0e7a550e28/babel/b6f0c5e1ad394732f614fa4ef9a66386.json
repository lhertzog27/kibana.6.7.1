{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/license_management/public/store/actions/start_basic.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/license_management/public/store/actions/start_basic.js","mtime":1567631712003},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startBasicLicense = exports.cancelStartBasicLicense = exports.startBasicLicenseStatus = undefined;\n\nvar _reduxActions = require('redux-actions');\n\nvar _es = require('../../lib/es');\n\nvar _notify = require('ui/notify');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar startBasicLicenseStatus = exports.startBasicLicenseStatus = (0, _reduxActions.createAction)('LICENSE_MANAGEMENT_START_BASIC_LICENSE_STATUS');\n\nvar cancelStartBasicLicense = exports.cancelStartBasicLicense = (0, _reduxActions.createAction)('LICENSE_MANAGEMENT_CANCEL_START_BASIC_LICENSE');\n\nvar startBasicLicense = exports.startBasicLicense = function startBasicLicense(currentLicenseType, ack) {\n  return function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState, _ref) {\n      var xPackInfo = _ref.xPackInfo;\n\n      var _ref3, acknowledged, basic_was_started, error_message, acknowledge, messages, first;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return (0, _es.startBasic)(ack);\n\n            case 2:\n              _ref3 = _context.sent;\n              acknowledged = _ref3.acknowledged;\n              basic_was_started = _ref3.basic_was_started;\n              error_message = _ref3.error_message;\n              acknowledge = _ref3.acknowledge;\n\n              if (!acknowledged) {\n                _context.next = 17;\n                break;\n              }\n\n              if (!basic_was_started) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 11;\n              return xPackInfo.refresh();\n\n            case 11:\n              // reload necessary to get left nav to refresh with proper links\n              window.location.reload();\n              _context.next = 15;\n              break;\n\n            case 14:\n              return _context.abrupt('return', _notify.toastNotifications.addDanger(error_message));\n\n            case 15:\n              _context.next = 20;\n              break;\n\n            case 17:\n              //messages coming back in arrays\n              messages = Object.values(acknowledge).slice(1).map(function (item) {\n                return item[0];\n              });\n              first = _i18n.i18n.translate('xpack.licenseMgmt.replacingCurrentLicenseWithBasicLicenseWarningMessage', {\n                //eslint-disable-next-line\n                defaultMessage: 'Some functionality will be lost if you replace your {currentLicenseType} license with a BASIC license. Review the list of features below.',\n                values: {\n                  currentLicenseType: currentLicenseType.toUpperCase()\n                }\n              });\n\n              dispatch(startBasicLicenseStatus({ acknowledge: true, messages: [first].concat(_toConsumableArray(messages)) }));\n\n            case 20:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};",null]}