{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/controllers/sense_top_nav_controller.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/controllers/sense_top_nav_controller.js","mtime":1567631711526},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SenseTopNavController = SenseTopNavController;\n\nvar _kbn_top_nav_controller = require('ui/kbn_top_nav/kbn_top_nav_controller');\n\nvar _storage = require('../storage');\n\nvar _storage2 = _interopRequireDefault(_storage);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction SenseTopNavController(Private, i18n) {\n  var KbnTopNavController = Private(_kbn_top_nav_controller.KbnTopNavControllerProvider);\n\n  var controller = new KbnTopNavController([{\n    key: 'welcome',\n    label: i18n('console.topNav.welcomeTabLabel', {\n      defaultMessage: 'Welcome'\n    }),\n    hideButton: true,\n    template: '<sense-welcome></sense-welcome>',\n    testId: 'consoleWelcomeButton'\n  }, {\n    key: 'history',\n    label: i18n('console.topNav.historyTabLabel', {\n      defaultMessage: 'History'\n    }),\n    description: i18n('console.topNav.historyTabDescription', {\n      defaultMessage: 'History'\n    }),\n    template: '<sense-history></sense-history>',\n    testId: 'consoleHistoryButton'\n  }, {\n    key: 'settings',\n    label: i18n('console.topNav.settingsTabLabel', {\n      defaultMessage: 'Settings'\n    }),\n    description: i18n('console.topNav.settingsTabDescription', {\n      defaultMessage: 'Settings'\n    }),\n    template: '<sense-settings></sense-settings>',\n    testId: 'consoleSettingsButton'\n  }, {\n    key: 'help',\n    label: i18n('console.topNav.helpTabLabel', {\n      defaultMessage: 'Help'\n    }),\n    description: i18n('console.topNav.helpTabDescription', {\n      defaultMessage: 'Help'\n    }),\n    template: '<sense-help></sense-help>',\n    testId: 'consoleHelpButton'\n  }]);\n\n  if (_storage2.default.get('version_welcome_shown') !== '@@SENSE_REVISION') {\n    controller.open('welcome');\n  }\n\n  return controller;\n}",null]}