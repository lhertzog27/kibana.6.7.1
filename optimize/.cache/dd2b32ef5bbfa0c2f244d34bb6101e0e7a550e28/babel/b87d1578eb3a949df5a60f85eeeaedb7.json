{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/apps/export/routes.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/apps/export/routes.js","mtime":1567631711917},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.routes = undefined;\n\nvar _workpad_service = require('../../lib/workpad_service');\n\nvar workpadService = _interopRequireWildcard(_workpad_service);\n\nvar _workpad = require('../../state/actions/workpad');\n\nvar _elements = require('../../state/actions/elements');\n\nvar _pages = require('../../state/actions/pages');\n\nvar _assets = require('../../state/actions/assets');\n\nvar _export = require('./export');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar routes = [{\n  path: '/export/workpad',\n  children: [{\n    name: 'exportWorkpad',\n    path: '/pdf/:id/page/:page',\n    action: function action(dispatch) {\n      return function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n          var params = _ref.params,\n              router = _ref.router;\n          var fetchedWorkpad, pageNumber, assets, workpad;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return workpadService.get(params.id);\n\n                case 2:\n                  fetchedWorkpad = _context.sent;\n                  pageNumber = parseInt(params.page, 10);\n\n                  // redirect to home app on invalid workpad id or page number\n\n                  if (!(fetchedWorkpad == null && isNaN(pageNumber))) {\n                    _context.next = 6;\n                    break;\n                  }\n\n                  return _context.abrupt('return', router.redirectTo('home'));\n\n                case 6:\n                  assets = fetchedWorkpad.assets, workpad = _objectWithoutProperties(fetchedWorkpad, ['assets']);\n\n                  dispatch((0, _assets.setAssets)(assets));\n                  dispatch((0, _workpad.setWorkpad)(workpad, { loadPages: false }));\n                  dispatch((0, _pages.setPage)(pageNumber - 1));\n                  dispatch((0, _elements.fetchAllRenderables)({ onlyActivePage: true }));\n\n                case 11:\n                case 'end':\n                  return _context.stop();\n              }\n            }\n          }, _callee, undefined);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n    },\n    meta: {\n      component: _export.ExportApp\n    }\n  }]\n}];\nexports.routes = routes;",null]}