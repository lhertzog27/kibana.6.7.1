{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/KueryBar/get_bool_filter.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/KueryBar/get_bool_filter.js","mtime":1567631711864},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBoolFilter = getBoolFilter;\n\nvar _constants = require('../../../../common/constants');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*\n                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                   */\n\nfunction getBoolFilter(urlParams) {\n  var boolFilter = [{\n    range: {\n      '@timestamp': {\n        gte: new Date(urlParams.start).getTime(),\n        lte: new Date(urlParams.end).getTime(),\n        format: 'epoch_millis'\n      }\n    }\n  }];\n\n  if (urlParams.serviceName) {\n    boolFilter.push({\n      term: _defineProperty({}, _constants.SERVICE_NAME, urlParams.serviceName)\n    });\n  }\n\n  switch (urlParams.processorEvent) {\n    case 'transaction':\n      boolFilter.push({\n        term: _defineProperty({}, _constants.PROCESSOR_EVENT, 'transaction')\n      });\n\n      if (urlParams.transactionName) {\n        boolFilter.push({\n          term: _defineProperty({}, _constants.TRANSACTION_NAME + '.keyword', urlParams.transactionName)\n        });\n      }\n\n      if (urlParams.transactionType) {\n        boolFilter.push({\n          term: _defineProperty({}, _constants.TRANSACTION_TYPE, urlParams.transactionType)\n        });\n      }\n      break;\n\n    case 'error':\n      boolFilter.push({\n        term: _defineProperty({}, _constants.PROCESSOR_EVENT, 'error')\n      });\n\n      if (urlParams.errorGroupId) {\n        boolFilter.push({\n          term: _defineProperty({}, _constants.ERROR_GROUP_ID, urlParams.errorGroupId)\n        });\n      }\n      break;\n\n    default:\n      boolFilter.push({\n        bool: {\n          should: [{ term: _defineProperty({}, _constants.PROCESSOR_EVENT, 'error') }, { term: _defineProperty({}, _constants.PROCESSOR_EVENT, 'transaction') }]\n        }\n      });\n  }\n\n  return boolFilter;\n}",null]}