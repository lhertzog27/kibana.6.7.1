{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/widget_overlay/view_control/set_view/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/widget_overlay/view_control/set_view/index.js","mtime":1567631712016},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SetView = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _set_view = require('./set_view');\n\nvar _store_actions = require('../../../../actions/store_actions');\n\nvar _map_selectors = require('../../../../selectors/map_selectors');\n\nvar _ui = require('../../../../store/ui');\n\nfunction mapStateToProps() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return {\n    zoom: (0, _map_selectors.getMapZoom)(state),\n    center: (0, _map_selectors.getMapCenter)(state)\n  };\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSubmit: function onSubmit(_ref) {\n      var lat = _ref.lat,\n          lon = _ref.lon,\n          zoom = _ref.zoom;\n\n      dispatch((0, _ui.closeSetView)());\n      dispatch((0, _store_actions.setGotoWithCenter)({ lat: lat, lon: lon, zoom: zoom }));\n    }\n  };\n}\n\nvar connectedSetView = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, null, { withRef: true })(_set_view.SetView);\nexports.SetView = connectedSetView;",null]}