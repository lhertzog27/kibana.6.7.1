{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/register_routes.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/register_routes.js","mtime":1567631711964},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactRedux = require('react-redux');\n\nvar _api = require('./services/api');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _app = require('./app');\n\nvar _constants = require('../common/constants');\n\nvar _store = require('./store');\n\nvar _i18n = require('ui/i18n');\n\nvar _navigation = require('./services/navigation');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _main = require('./main.html');\n\nvar _main2 = _interopRequireDefault(_main);\n\nvar _manage_angular_lifecycle = require('./services/manage_angular_lifecycle');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar elem = void 0;\nvar renderReact = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(elem) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            (0, _reactDom.render)(_react2.default.createElement(\n              _i18n.I18nContext,\n              null,\n              _react2.default.createElement(\n                _reactRedux.Provider,\n                { store: (0, _store.indexLifecycleManagementStore)() },\n                _react2.default.createElement(_app.App, null)\n              )\n            ), elem);\n\n          case 1:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function renderReact(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nif (_chrome2.default.getInjected('ilmUiEnabled')) {\n  _routes2.default.when(_constants.BASE_PATH + ':view?/:action?/:id?', {\n    template: _main2.default,\n    controllerAs: 'indexLifecycleManagement',\n    controller: function IndexLifecycleManagementController($scope, $route, $http, kbnUrl, $rootScope) {\n      _classCallCheck(this, IndexLifecycleManagementController);\n\n      // clean up previously rendered React app if one exists\n      // this happens because of React Router redirects\n      elem && (0, _reactDom.unmountComponentAtNode)(elem);\n      (0, _api.setHttpClient)($http);\n      (0, _navigation.setUrlService)({\n        change: function change(url) {\n          kbnUrl.change(url);\n          $rootScope.$digest();\n        }\n      });\n      $scope.$$postDigest(function () {\n        elem = document.getElementById('indexLifecycleManagementReactRoot');\n        renderReact(elem);\n        (0, _manage_angular_lifecycle.manageAngularLifecycle)($scope, $route, elem);\n      });\n    }\n  });\n}",null]}