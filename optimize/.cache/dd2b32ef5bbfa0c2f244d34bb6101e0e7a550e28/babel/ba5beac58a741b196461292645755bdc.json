{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/filter_editor/lib/filter_editor_utils.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/filter_editor/lib/filter_editor_utils.js","mtime":1567631711733},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getQueryDslFromFilter = getQueryDslFromFilter;\nexports.getFieldFromFilter = getFieldFromFilter;\nexports.getOperatorFromFilter = getOperatorFromFilter;\nexports.getParamsFromFilter = getParamsFromFilter;\nexports.getFilterableFields = getFilterableFields;\nexports.getOperatorOptions = getOperatorOptions;\nexports.isFilterValid = isFilterValid;\nexports.buildFilter = buildFilter;\nexports.areIndexPatternsProvided = areIndexPatternsProvided;\nexports.isFilterPinned = isFilterPinned;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _filter_operators = require('./filter_operators');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*\n                                                                                                                                                                                                                   * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                   * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                   * this work for additional information regarding copyright\n                                                                                                                                                                                                                   * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                   * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                   * not use this file except in compliance with the License.\n                                                                                                                                                                                                                   * You may obtain a copy of the License at\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                   * software distributed under the License is distributed on an\n                                                                                                                                                                                                                   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                   * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                   * specific language governing permissions and limitations\n                                                                                                                                                                                                                   * under the License.\n                                                                                                                                                                                                                   */\n\nfunction getQueryDslFromFilter(filter) {\n  return (0, _lodash2.default)(filter).omit(['meta', '$state']).cloneDeep();\n}\n\nfunction getFieldFromFilter(filter, indexPatterns) {\n  var _filter$meta = filter.meta,\n      index = _filter$meta.index,\n      key = _filter$meta.key;\n\n  return indexPatterns.get(index).then(function (indexPattern) {\n    return indexPattern.id && indexPattern.fields.byName[key];\n  });\n}\n\nfunction getOperatorFromFilter(filter) {\n  var _filter$meta2 = filter.meta,\n      type = _filter$meta2.type,\n      negate = _filter$meta2.negate;\n\n  return _filter_operators.FILTER_OPERATORS.find(function (operator) {\n    return operator.type === type && operator.negate === negate;\n  });\n}\n\nfunction getParamsFromFilter(filter) {\n  var _filter$meta3 = filter.meta,\n      type = _filter$meta3.type,\n      key = _filter$meta3.key;\n\n  var params = void 0;\n  if (type === 'phrase') {\n    params = filter.query ? filter.query.match[key].query : filter.script.script.params.value;\n  } else if (type === 'phrases') {\n    params = filter.meta.params;\n  } else if (type === 'range') {\n    var range = filter.range ? filter.range[key] : filter.script.script.params;\n    var from = _lodash2.default.has(range, 'gte') ? range.gte : range.gt;\n    var to = _lodash2.default.has(range, 'lte') ? range.lte : range.lt;\n    params = { from: from, to: to };\n  }\n  return _defineProperty({}, type, params);\n}\n\nfunction getFilterableFields(indexPatterns) {\n  return (indexPatterns || []).reduce(function (fields, indexPattern) {\n    var filterableFields = indexPattern.fields.filter(function (field) {\n      return field.filterable;\n    });\n    return [].concat(_toConsumableArray(fields), _toConsumableArray(filterableFields));\n  }, []);\n}\n\nfunction getOperatorOptions(field) {\n  var type = _lodash2.default.get(field, 'type');\n  return _filter_operators.FILTER_OPERATORS.filter(function (operator) {\n    return !operator.fieldTypes || operator.fieldTypes.includes(type);\n  });\n}\n\nfunction isFilterValid(_ref2) {\n  var field = _ref2.field,\n      operator = _ref2.operator,\n      params = _ref2.params;\n\n  if (!field || !operator) {\n    return false;\n  } else if (operator.type === 'phrase') {\n    return _lodash2.default.has(params, 'phrase') && params.phrase !== '';\n  } else if (operator.type === 'phrases') {\n    return _lodash2.default.has(params, 'phrases') && params.phrases.length > 0;\n  } else if (operator.type === 'range') {\n    var hasFrom = _lodash2.default.has(params, ['range', 'from']) && params.range.from !== '';\n    var hasTo = _lodash2.default.has(params, ['range', 'to']) && params.range.to !== '';\n    return hasFrom || hasTo;\n  }\n  return true;\n}\n\nfunction buildFilter(_ref3) {\n  var indexPattern = _ref3.indexPattern,\n      field = _ref3.field,\n      operator = _ref3.operator,\n      params = _ref3.params,\n      filterBuilder = _ref3.filterBuilder;\n\n  var filter = void 0;\n  if (operator.type === 'phrase') {\n    filter = filterBuilder.buildPhraseFilter(field, params.phrase, indexPattern);\n  } else if (operator.type === 'phrases') {\n    filter = filterBuilder.buildPhrasesFilter(field, params.phrases, indexPattern);\n  } else if (operator.type === 'range') {\n    filter = filterBuilder.buildRangeFilter(field, { gte: params.range.from, lt: params.range.to }, indexPattern);\n  } else if (operator.type === 'exists') {\n    filter = filterBuilder.buildExistsFilter(field, indexPattern);\n  }\n  filter.meta.negate = operator.negate;\n  return filter;\n}\n\nfunction areIndexPatternsProvided(indexPatterns) {\n  return _lodash2.default.compact(indexPatterns).length !== 0;\n}\n\nfunction isFilterPinned(filter, pinnedByDefault) {\n  if (!filter.hasOwnProperty('$state')) return pinnedByDefault;\n  return filter.$state.store === 'globalState';\n}",null]}