{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/as.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/as.js","mtime":1567631711897},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asFn = undefined;\n\nvar _common = require('@kbn/interpreter/common');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*\n                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                   */\n\nvar asFn = exports.asFn = function asFn() {\n  return {\n    name: 'as',\n    type: 'datatable',\n    context: {\n      types: ['string', 'boolean', 'number', 'null']\n    },\n    help: 'Creates a datatable with a single value',\n    args: {\n      name: {\n        types: ['string'],\n        aliases: ['_'],\n        help: 'A name to give the column',\n        default: 'value'\n      }\n    },\n    fn: function fn(context, args) {\n      return {\n        type: 'datatable',\n        columns: [{\n          name: args.name,\n          type: (0, _common.getType)(context)\n        }],\n        rows: [_defineProperty({}, args.name, context)]\n      };\n    }\n  };\n};",null]}