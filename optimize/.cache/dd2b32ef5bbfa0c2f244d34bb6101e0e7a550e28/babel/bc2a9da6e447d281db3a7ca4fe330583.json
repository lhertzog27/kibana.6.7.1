{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/license_management/public/sections/upload_license/upload_license.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/license_management/public/sections/upload_license/upload_license.js","mtime":1567631712003},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UploadLicense = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _constants = require('../../../common/constants');\n\nvar _eui = require('@elastic/eui');\n\nvar _telemetry_opt_in = require('../../components/telemetry_opt_in');\n\nvar _telemetry = require('../../lib/telemetry');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar UploadLicense = exports.UploadLicense = function (_React$PureComponent) {\n  _inherits(UploadLicense, _React$PureComponent);\n\n  function UploadLicense() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, UploadLicense);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = UploadLicense.__proto__ || Object.getPrototypeOf(UploadLicense)).call.apply(_ref, [this].concat(args))), _this), _this.send = function (acknowledge) {\n      var file = _this.file;\n      var fr = new FileReader();\n      fr.onload = function (_ref2) {\n        var result = _ref2.target.result;\n\n        if (_this.telemetryOptIn.isOptingInToTelemetry()) {\n          (0, _telemetry.optInToTelemetry)(true);\n        }\n        _this.props.uploadLicense(result, _this.props.currentLicenseType, acknowledge);\n      };\n      fr.readAsText(file);\n    }, _this.cancel = function () {\n      _this.props.uploadLicenseStatus({});\n    }, _this.handleFile = function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          file = _ref4[0];\n\n      if (file) {\n        _this.props.addUploadErrorMessage('');\n      }\n      _this.file = file;\n    }, _this.submit = function (event) {\n      event.preventDefault();\n      if (_this.file) {\n        _this.send();\n      } else {\n        _this.props.addUploadErrorMessage(_react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.licenseMgmt.uploadLicense.licenseFileNotSelectedErrorMessage',\n          defaultMessage: 'You must select a license file.'\n        }));\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(UploadLicense, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.addUploadErrorMessage('');\n    }\n  }, {\n    key: 'acknowledgeModal',\n    value: function acknowledgeModal() {\n      var _this2 = this;\n\n      var _props = this.props,\n          needsAcknowledgement = _props.needsAcknowledgement,\n          _props$messages = _props.messages;\n      _props$messages = _props$messages === undefined ? [] : _props$messages;\n\n      var _props$messages2 = _toArray(_props$messages),\n          firstLine = _props$messages2[0],\n          messages = _props$messages2.slice(1);\n\n      if (!needsAcknowledgement) {\n        return null;\n      }\n      return _react2.default.createElement(\n        _eui.EuiOverlayMask,\n        null,\n        _react2.default.createElement(\n          _eui.EuiConfirmModal,\n          {\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.licenseMgmt.uploadLicense.confirmModalTitle',\n              defaultMessage: 'Confirm License Upload'\n            }),\n            onCancel: this.cancel,\n            onConfirm: function onConfirm() {\n              return _this2.send(true);\n            },\n            cancelButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.licenseMgmt.uploadLicense.confirmModal.cancelButtonLabel',\n              defaultMessage: 'Cancel'\n            }),\n            confirmButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.licenseMgmt.uploadLicense.confirmModal.confirmButtonLabel',\n              defaultMessage: 'Confirm'\n            })\n          },\n          _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n              _eui.EuiText,\n              null,\n              firstLine\n            ),\n            _react2.default.createElement(\n              _eui.EuiText,\n              null,\n              _react2.default.createElement(\n                'ul',\n                null,\n                messages.map(function (message) {\n                  return _react2.default.createElement(\n                    'li',\n                    { key: message },\n                    message\n                  );\n                })\n              )\n            )\n          )\n        )\n      );\n    }\n  }, {\n    key: 'errorMessage',\n    value: function errorMessage() {\n      var errorMessage = this.props.errorMessage;\n\n      if (!errorMessage) {\n        return null;\n      }\n      return [errorMessage];\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          currentLicenseType = _props2.currentLicenseType,\n          applying = _props2.applying;\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPageContent,\n          { horizontalPosition: 'center', verticalPosition: 'center' },\n          _react2.default.createElement(\n            _eui.EuiPageContentBody,\n            null,\n            _react2.default.createElement(\n              _eui.EuiTitle,\n              { size: 'm' },\n              _react2.default.createElement(\n                'h1',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.licenseMgmt.uploadLicense.uploadLicenseTitle',\n                  defaultMessage: 'Upload your license'\n                })\n              )\n            ),\n            _react2.default.createElement(_eui.EuiSpacer, null),\n            this.acknowledgeModal(),\n            _react2.default.createElement(\n              _eui.EuiText,\n              null,\n              _react2.default.createElement(\n                'p',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.licenseMgmt.uploadLicense.licenseKeyTypeDescription',\n                  defaultMessage: 'Your license key is a JSON file with a signature attached.'\n                })\n              ),\n              _react2.default.createElement(\n                'p',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.licenseMgmt.uploadLicense.replacingCurrentLicenseWarningMessage',\n                  defaultMessage: 'Uploading a license will replace your current {currentLicenseType} license.',\n                  values: {\n                    currentLicenseType: _react2.default.createElement(\n                      'strong',\n                      null,\n                      currentLicenseType.toUpperCase()\n                    )\n                  }\n                })\n              )\n            ),\n            _react2.default.createElement(_eui.EuiSpacer, null),\n            _react2.default.createElement(\n              _eui.EuiForm,\n              { isInvalid: !!this.errorMessage(), error: this.errorMessage() },\n              _react2.default.createElement(\n                _eui.EuiText,\n                null,\n                _react2.default.createElement(_eui.EuiFilePicker, {\n                  id: 'licenseFile',\n                  initialPromptText: _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.licenseMgmt.uploadLicense.selectLicenseFileDescription',\n                    defaultMessage: 'Select or drag your license file'\n                  }),\n                  onChange: this.handleFile\n                })\n              ),\n              _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n              _react2.default.createElement(_telemetry_opt_in.TelemetryOptIn, {\n                ref: function ref(_ref5) {\n                  _this3.telemetryOptIn = _ref5;\n                }\n              }),\n              _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n              _react2.default.createElement(\n                _eui.EuiFlexGroup,\n                { justifyContent: 'spaceBetween' },\n                _react2.default.createElement(\n                  _eui.EuiFlexItem,\n                  { grow: false },\n                  _react2.default.createElement(\n                    _eui.EuiButtonEmpty,\n                    { href: '#' + _constants.BASE_PATH + 'home' },\n                    _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'xpack.licenseMgmt.uploadLicense.cancelButtonLabel',\n                      defaultMessage: 'Cancel'\n                    })\n                  )\n                ),\n                _react2.default.createElement(\n                  _eui.EuiFlexItem,\n                  { grow: false },\n                  _react2.default.createElement(\n                    _eui.EuiButton,\n                    {\n                      'data-test-subj': 'uploadLicenseButton',\n                      fill: true,\n                      isLoading: applying,\n                      onClick: this.submit\n                    },\n                    applying ? _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'xpack.licenseMgmt.uploadLicense.uploadingButtonLabel',\n                      defaultMessage: 'Uploading\\u2026'\n                    }) : _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'xpack.licenseMgmt.uploadLicense.uploadButtonLabel',\n                      defaultMessage: 'Upload'\n                    })\n                  )\n                )\n              )\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return UploadLicense;\n}(_react2.default.PureComponent);",null]}