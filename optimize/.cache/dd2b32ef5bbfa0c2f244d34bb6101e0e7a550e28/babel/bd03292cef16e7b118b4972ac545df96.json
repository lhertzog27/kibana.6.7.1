{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/expression_input/expression_input.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/expression_input/expression_input.js","mtime":1567631711923},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExpressionInput = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _lodash = require('lodash');\n\nvar _autocomplete = require('../autocomplete');\n\nvar _autocomplete2 = require('../../../common/lib/autocomplete');\n\nvar _function_reference = require('./function_reference');\n\nvar _argument_reference = require('./argument_reference');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar ExpressionInput = exports.ExpressionInput = function (_React$Component) {\n  _inherits(ExpressionInput, _React$Component);\n\n  function ExpressionInput(_ref) {\n    var value = _ref.value;\n\n    _classCallCheck(this, ExpressionInput);\n\n    var _this = _possibleConstructorReturn(this, (ExpressionInput.__proto__ || Object.getPrototypeOf(ExpressionInput)).call(this));\n\n    _initialiseProps.call(_this);\n\n    _this.undoHistory = [];\n    _this.redoHistory = [];\n\n    _this.state = {\n      selection: {\n        start: value.length,\n        end: value.length\n      },\n      suggestions: []\n    };\n    return _this;\n  }\n\n  _createClass(ExpressionInput, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (!this.ref) {\n        return;\n      }\n      var selection = this.state.selection;\n      var start = selection.start,\n          end = selection.end;\n\n      this.ref.setSelectionRange(start, end);\n    }\n  }, {\n    key: 'undo',\n    value: function undo() {\n      if (!this.undoHistory.length) {\n        return;\n      }\n      var value = this.undoHistory.pop();\n      this.redoHistory.push(this.props.value);\n      this.props.onChange(value);\n    }\n  }, {\n    key: 'redo',\n    value: function redo() {\n      if (!this.redoHistory.length) {\n        return;\n      }\n      var value = this.redoHistory.pop();\n      this.undoHistory.push(this.props.value);\n      this.props.onChange(value);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          value = _props.value,\n          error = _props.error,\n          isAutocompleteEnabled = _props.isAutocompleteEnabled;\n      var suggestions = this.state.suggestions;\n\n\n      var helpText = error ? null : 'This is the coded expression that backs this element. You better know what you are doing here.';\n      return _react2.default.createElement(\n        'div',\n        { className: 'expressionInput' },\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          { fullWidth: true, isInvalid: Boolean(error), error: error, helpText: helpText },\n          isAutocompleteEnabled ? _react2.default.createElement(\n            _autocomplete.Autocomplete,\n            {\n              header: this.getHeader(),\n              items: suggestions,\n              onSelect: this.onSuggestionSelect,\n              reference: this.getReference\n            },\n            _react2.default.createElement(_eui.EuiTextArea, {\n              onKeyDown: this.onKeyDown,\n              className: 'canvasTextArea--code',\n              value: value,\n              onChange: this.onChange,\n              inputRef: function inputRef(ref) {\n                return _this2.ref = ref;\n              },\n              spellCheck: 'false'\n            })\n          ) : _react2.default.createElement(_eui.EuiTextArea, {\n            onKeyDown: this.onKeyDown,\n            className: 'canvasTextArea--code',\n            value: value,\n            onChange: this.onChange,\n            inputRef: function inputRef(ref) {\n              return _this2.ref = ref;\n            },\n            spellCheck: 'false'\n          })\n        )\n      );\n    }\n  }]);\n\n  return ExpressionInput;\n}(_react2.default.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.stash = (0, _lodash.debounce)(function (value) {\n    _this3.undoHistory.push(value);\n    _this3.redoHistory = [];\n  }, 500, { leading: true, trailing: false });\n\n  this.onKeyDown = function (e) {\n    if (e.ctrlKey || e.metaKey) {\n      if (e.key === 'z') {\n        e.preventDefault();\n        if (e.shiftKey) {\n          _this3.redo();\n        } else {\n          _this3.undo();\n        }\n      }\n      if (e.key === 'y') {\n        e.preventDefault();\n        _this3.redo();\n      }\n    }\n  };\n\n  this.onSuggestionSelect = function (item) {\n    var text = item.text,\n        start = item.start,\n        end = item.end;\n\n    var value = _this3.props.value.substr(0, start) + text + _this3.props.value.substr(end);\n    var selection = { start: start + text.length, end: start + text.length };\n    _this3.updateState({ value: value, selection: selection });\n\n    // This is needed for when the suggestion was selected by clicking on it\n    _this3.ref.focus();\n  };\n\n  this.onChange = function (e) {\n    var target = e.target;\n    var value = target.value,\n        selectionStart = target.selectionStart,\n        selectionEnd = target.selectionEnd;\n\n    var selection = {\n      start: selectionStart,\n      end: selectionEnd\n    };\n    _this3.updateState({ value: value, selection: selection });\n  };\n\n  this.updateState = function (_ref2) {\n    var value = _ref2.value,\n        selection = _ref2.selection;\n\n    _this3.stash(_this3.props.value);\n    var suggestions = (0, _autocomplete2.getAutocompleteSuggestions)(_this3.props.functionDefinitions, value, selection.start);\n    _this3.props.onChange(value);\n    _this3.setState({ selection: selection, suggestions: suggestions });\n  };\n\n  this.getHeader = function () {\n    var suggestions = _this3.state.suggestions;\n\n    if (!suggestions.length) {\n      return '';\n    }\n    return _react2.default.createElement(\n      _eui.EuiTitle,\n      { className: 'autocompleteType', size: 'xs' },\n      _react2.default.createElement(\n        'h3',\n        null,\n        (0, _lodash.startCase)(suggestions[0].type)\n      )\n    );\n  };\n\n  this.getReference = function (selectedItem) {\n    var _ref3 = selectedItem || {},\n        fnDef = _ref3.fnDef,\n        argDef = _ref3.argDef;\n\n    if (argDef) {\n      return _react2.default.createElement(_argument_reference.ArgumentReference, { argDef: argDef });\n    }\n    if (fnDef) {\n      return _react2.default.createElement(_function_reference.FunctionReference, { fnDef: fnDef });\n    }\n\n    var _getFnArgDefAtPositio = (0, _autocomplete2.getFnArgDefAtPosition)(_this3.props.functionDefinitions, _this3.props.value, _this3.state.selection.start),\n        fnDefAtPosition = _getFnArgDefAtPositio.fnDef,\n        argDefAtPosition = _getFnArgDefAtPositio.argDef;\n\n    if (argDefAtPosition) {\n      return _react2.default.createElement(_argument_reference.ArgumentReference, { argDef: argDefAtPosition });\n    }\n    if (fnDefAtPosition) {\n      return _react2.default.createElement(_function_reference.FunctionReference, { fnDef: fnDefAtPosition });\n    }\n\n    return '';\n  };\n};\n\nExpressionInput.propTypes = {\n  functionDefinitions: _propTypes2.default.array,\n  value: _propTypes2.default.string,\n  onChange: _propTypes2.default.func,\n  error: _propTypes2.default.string,\n  isAutocompleteEnabled: _propTypes2.default.bool\n};",null]}