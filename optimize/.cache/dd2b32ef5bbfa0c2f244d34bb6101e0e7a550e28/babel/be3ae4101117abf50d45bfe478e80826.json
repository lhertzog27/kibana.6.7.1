{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/logstash/pipeline/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/views/logstash/pipeline/index.js","mtime":1567631712103},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\n/*\n * Logstash Node Pipeline View\n */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _ajax_error_handler = require('plugins/monitoring/lib/ajax_error_handler');\n\nvar _route_init = require('plugins/monitoring/lib/route_init');\n\nvar _constants = require('../../../../common/constants');\n\nvar _format_timestamp_to_duration = require('../../../../common/format_timestamp_to_duration');\n\nvar _index = require('./index.html');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _i18n = require('@kbn/i18n');\n\nvar _list = require('plugins/monitoring/components/logstash/pipeline_viewer/models/list');\n\nvar _pipeline_state = require('plugins/monitoring/components/logstash/pipeline_viewer/models/pipeline_state');\n\nvar _pipeline_viewer = require('plugins/monitoring/components/logstash/pipeline_viewer');\n\nvar _pipeline = require('plugins/monitoring/components/logstash/pipeline_viewer/models/pipeline');\n\nvar _vertex_factory = require('plugins/monitoring/components/logstash/pipeline_viewer/models/graph/vertex_factory');\n\nvar _base_controller = require('../../base_controller');\n\nvar _i18n2 = require('ui/i18n');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar previousPipelineHash = undefined;\nvar detailVertexId = undefined;\n\nfunction getPageData($injector) {\n  var $route = $injector.get('$route');\n  var $http = $injector.get('$http');\n  var globalState = $injector.get('globalState');\n  var minIntervalSeconds = $injector.get('minIntervalSeconds');\n  var Private = $injector.get('Private');\n\n  var ccs = globalState.ccs,\n      clusterUuid = globalState.cluster_uuid;\n\n  var pipelineId = $route.current.params.id;\n  var pipelineHash = $route.current.params.hash || '';\n\n  // Pipeline version was changed, so clear out detailVertexId since that vertex won't\n  // exist in the updated pipeline version\n  if (pipelineHash !== previousPipelineHash) {\n    previousPipelineHash = pipelineHash;\n    detailVertexId = undefined;\n  }\n\n  var url = pipelineHash ? '../api/monitoring/v1/clusters/' + clusterUuid + '/logstash/pipeline/' + pipelineId + '/' + pipelineHash : '../api/monitoring/v1/clusters/' + clusterUuid + '/logstash/pipeline/' + pipelineId;\n  return $http.post(url, {\n    ccs: ccs,\n    detailVertexId: detailVertexId\n  }).then(function (response) {\n    return response.data;\n  }).then(function (data) {\n    data.versions = data.versions.map(function (version) {\n      var relativeFirstSeen = (0, _format_timestamp_to_duration.formatTimestampToDuration)(version.firstSeen, _constants.CALCULATE_DURATION_SINCE);\n      var relativeLastSeen = (0, _format_timestamp_to_duration.formatTimestampToDuration)(version.lastSeen, _constants.CALCULATE_DURATION_SINCE);\n\n      var fudgeFactorSeconds = 2 * minIntervalSeconds;\n      var isLastSeenCloseToNow = Date.now() - version.lastSeen <= fudgeFactorSeconds * 1000;\n\n      return _extends({}, version, {\n        relativeFirstSeen: _i18n.i18n.translate('xpack.monitoring.logstash.pipeline.relativeFirstSeenAgoLabel', {\n          defaultMessage: '{relativeFirstSeen} ago', values: { relativeFirstSeen: relativeFirstSeen }\n        }),\n        relativeLastSeen: isLastSeenCloseToNow ? _i18n.i18n.translate('xpack.monitoring.logstash.pipeline.relativeLastSeenNowLabel', {\n          defaultMessage: 'now'\n        }) : _i18n.i18n.translate('xpack.monitoring.logstash.pipeline.relativeLastSeenAgoLabel', {\n          defaultMessage: 'until {relativeLastSeen} ago', values: { relativeLastSeen: relativeLastSeen }\n        })\n      });\n    });\n\n    return data;\n  }).catch(function (err) {\n    var ajaxErrorHandlers = Private(_ajax_error_handler.ajaxErrorHandlersProvider);\n    return ajaxErrorHandlers(err);\n  });\n}\n\n_routes2.default.when('/logstash/pipelines/:id/:hash?', {\n  template: _index2.default,\n  resolve: {\n    clusters: function clusters(Private) {\n      var routeInit = Private(_route_init.routeInitProvider);\n      return routeInit();\n    },\n\n    pageData: getPageData\n  },\n  controller: function (_MonitoringViewBaseCo) {\n    _inherits(controller, _MonitoringViewBaseCo);\n\n    function controller($injector, $scope, i18n) {\n      _classCallCheck(this, controller);\n\n      var config = $injector.get('config');\n      var dateFormat = config.get('dateFormat');\n\n      var _this = _possibleConstructorReturn(this, (controller.__proto__ || Object.getPrototypeOf(controller)).call(this, {\n        title: i18n('xpack.monitoring.logstash.pipeline.routeTitle', {\n          defaultMessage: 'Logstash - Pipeline'\n        }),\n        storageKey: 'logstash.pipelines',\n        getPageData: getPageData,\n        reactNodeId: 'monitoringLogstashPipelineApp',\n        $scope: $scope,\n        options: {\n          enableTimeFilter: false\n        },\n        $injector: $injector\n      }));\n\n      var timeseriesTooltipXValueFormatter = function timeseriesTooltipXValueFormatter(xValue) {\n        return (0, _moment2.default)(xValue).format(dateFormat);\n      };\n\n      var setDetailVertexId = function setDetailVertexId(vertex) {\n        if (!vertex) {\n          detailVertexId = undefined;\n        } else {\n          detailVertexId = vertex.id;\n        }\n\n        return _this.updateData();\n      };\n\n      $scope.$watch(function () {\n        return _this.data;\n      }, function (data) {\n        if (!data || !data.pipeline) {\n          return;\n        }\n        _this.pipelineState = new _pipeline_state.PipelineState(data.pipeline);\n        _this.detailVertex = data.vertex ? (0, _vertex_factory.vertexFactory)(null, data.vertex) : null;\n        _this.renderReact(_react2.default.createElement(\n          _i18n2.I18nContext,\n          null,\n          _react2.default.createElement(\n            _eui.EuiPage,\n            null,\n            _react2.default.createElement(\n              _eui.EuiPageBody,\n              null,\n              _react2.default.createElement(\n                _eui.EuiPageContent,\n                null,\n                _react2.default.createElement(_pipeline_viewer.PipelineViewer, {\n                  pipeline: _list.List.fromPipeline(_pipeline.Pipeline.fromPipelineGraph(_this.pipelineState.config.graph)),\n                  timeseriesTooltipXValueFormatter: timeseriesTooltipXValueFormatter,\n                  setDetailVertexId: setDetailVertexId,\n                  detailVertex: _this.detailVertex\n                })\n              )\n            )\n          )\n        ));\n      });\n\n      $scope.$on('$destroy', function () {\n        previousPipelineHash = undefined;\n        detailVertexId = undefined;\n      });\n      return _this;\n    }\n\n    return controller;\n  }(_base_controller.MonitoringViewBaseController)\n});",null]}