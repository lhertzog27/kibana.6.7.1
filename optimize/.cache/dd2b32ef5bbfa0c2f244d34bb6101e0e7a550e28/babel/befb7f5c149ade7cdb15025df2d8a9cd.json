{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_list/watch_list_route.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_list/watch_list_route.js","mtime":1567631712350},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _management = require('ui/management');\n\nvar _notify = require('ui/notify');\n\nvar _watch_list_route = require('./watch_list_route.html');\n\nvar _watch_list_route2 = _interopRequireDefault(_watch_list_route);\n\nrequire('./components/watch_list');\n\nrequire('plugins/watcher/services/license');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*\n                                                                                                                                                           * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                           * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                           * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                           */\n\n_routes2.default.when('/management/elasticsearch/watcher/', {\n  redirectTo: '/management/elasticsearch/watcher/watches/'\n});\n\n_routes2.default.when('/management/elasticsearch/watcher/watches/', {\n  template: _watch_list_route2.default,\n  controller: function WatchListRouteController($injector) {\n    _classCallCheck(this, WatchListRouteController);\n\n    var $route = $injector.get('$route');\n    this.watches = $route.current.locals.watches;\n  },\n  controllerAs: 'watchListRoute',\n  resolve: {\n    watches: function watches($injector) {\n      var watchesService = $injector.get('xpackWatcherWatchesService');\n      var licenseService = $injector.get('xpackWatcherLicenseService');\n      var kbnUrl = $injector.get('kbnUrl');\n\n      return watchesService.getWatchList().catch(function (err) {\n        return licenseService.checkValidity().then(function () {\n          if (err.status === 403) {\n            return null;\n          }\n\n          _notify.toastNotifications.addDanger(err.data.message);\n          kbnUrl.redirect('/management');\n          return Promise.reject();\n        });\n      });\n    },\n    checkLicense: function checkLicense($injector) {\n      var licenseService = $injector.get('xpackWatcherLicenseService');\n      return licenseService.checkValidity();\n    }\n  }\n});\n\n_routes2.default.defaults(/\\/management/, {\n  resolve: {\n    watcherManagementSection: function watcherManagementSection($injector) {\n      var licenseService = $injector.get('xpackWatcherLicenseService');\n      var watchesSection = _management.management.getSection('elasticsearch/watcher');\n\n      if (licenseService.showLinks) {\n        watchesSection.show();\n      } else {\n        watchesSection.hide();\n      }\n\n      if (licenseService.enableLinks) {\n        watchesSection.enable();\n        watchesSection.tooltip = '';\n      } else {\n        watchesSection.disable();\n        watchesSection.tooltip = licenseService.message;\n      }\n    }\n  }\n});",null]}