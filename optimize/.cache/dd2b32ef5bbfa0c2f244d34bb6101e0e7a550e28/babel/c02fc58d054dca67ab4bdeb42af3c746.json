{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/directives/sense_history.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/console/public/src/directives/sense_history.js","mtime":1567631711527},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _eui = require('@elastic/eui');\n\nvar _require = require('lodash'),\n    memoize = _require.memoize; /*\n                                 * Licensed to Elasticsearch B.V. under one or more contributor\n                                 * license agreements. See the NOTICE file distributed with\n                                 * this work for additional information regarding copyright\n                                 * ownership. Elasticsearch B.V. licenses this file to you under\n                                 * the Apache License, Version 2.0 (the \"License\"); you may\n                                 * not use this file except in compliance with the License.\n                                 * You may obtain a copy of the License at\n                                 *\n                                 *    http://www.apache.org/licenses/LICENSE-2.0\n                                 *\n                                 * Unless required by applicable law or agreed to in writing,\n                                 * software distributed under the License is distributed on an\n                                 * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                 * KIND, either express or implied.  See the License for the\n                                 * specific language governing permissions and limitations\n                                 * under the License.\n                                 */\n\nvar moment = require('moment');\n\nvar history = require('../history');\nrequire('./sense_history_viewer');\n\nrequire('ui/modules').get('app/sense').directive('senseHistory', function () {\n  return {\n    restrict: 'E',\n    template: require('./history.html'),\n    controllerAs: 'history',\n    controller: function controller($scope, $element) {\n      var _this = this;\n\n      this.reqs = history.getHistory();\n      this.selectedIndex = 0;\n      this.selectedReq = this.reqs[this.selectedIndex];\n      this.viewingReq = this.selectedReq;\n\n      // calculate the text description of a request\n      this.describeReq = memoize(function (req) {\n        var endpoint = req.endpoint;\n        var date = moment(req.time);\n\n        var formattedDate = date.format('MMM D');\n        if (date.diff(moment(), 'days') > -7) {\n          formattedDate = date.fromNow();\n        }\n\n        return endpoint + ' (' + formattedDate + ')';\n      });\n      this.describeReq.cache = new WeakMap();\n\n      // main actions\n      this.clear = function () {\n        history.clearHistory($element);\n        $scope.kbnTopNav.close();\n      };\n\n      this.restore = function () {\n        var req = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.selectedReq;\n\n        history.restoreFromHistory(req);\n        $scope.kbnTopNav.close();\n      };\n\n      this.onKeyDown = function (ev) {\n        if (ev.keyCode === _eui.keyCodes.ENTER) {\n          _this.restore();\n          return;\n        }\n\n        if (ev.keyCode === _eui.keyCodes.UP) {\n          ev.preventDefault();\n          _this.selectedIndex--;\n        } else if (ev.keyCode === _eui.keyCodes.DOWN) {\n          ev.preventDefault();\n          _this.selectedIndex++;\n        }\n\n        _this.selectedIndex = Math.min(Math.max(0, _this.selectedIndex), _this.reqs.length - 1);\n        _this.selectedReq = _this.reqs[_this.selectedIndex];\n        _this.viewingReq = _this.reqs[_this.selectedIndex];\n      };\n    }\n  };\n});",null]}