{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/license_management/public/components/telemetry_opt_in/telemetry_opt_in.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/license_management/public/components/telemetry_opt_in/telemetry_opt_in.js","mtime":1567631712002},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TelemetryOptIn = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _telemetry = require('../../lib/telemetry');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar TelemetryOptIn = exports.TelemetryOptIn = function (_React$Component) {\n  _inherits(TelemetryOptIn, _React$Component);\n\n  function TelemetryOptIn() {\n    _classCallCheck(this, TelemetryOptIn);\n\n    var _this = _possibleConstructorReturn(this, (TelemetryOptIn.__proto__ || Object.getPrototypeOf(TelemetryOptIn)).call(this));\n\n    _this.isOptingInToTelemetry = function () {\n      return _this.state.isOptingInToTelemetry;\n    };\n\n    _this.closeReadMorePopover = function () {\n      _this.setState({ showMoreTelemetryInfo: false });\n    };\n\n    _this.onClickReadMore = function () {\n      var showMoreTelemetryInfo = _this.state.showMoreTelemetryInfo;\n\n      _this.setState({ showMoreTelemetryInfo: !showMoreTelemetryInfo });\n    };\n\n    _this.onClickExample = function () {\n      _this.setState({ showExample: true });\n      _this.closeReadMorePopover();\n    };\n\n    _this.onChangeOptIn = function (event) {\n      var isOptingInToTelemetry = event.target.checked;\n      _this.setState({ isOptingInToTelemetry: isOptingInToTelemetry });\n    };\n\n    _this.state = {\n      showMoreTelemetryInfo: false,\n      isOptingInToTelemetry: false,\n      showExample: false\n    };\n    return _this;\n  }\n\n  _createClass(TelemetryOptIn, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _state = this.state,\n          showMoreTelemetryInfo = _state.showMoreTelemetryInfo,\n          isOptingInToTelemetry = _state.isOptingInToTelemetry,\n          showExample = _state.showExample;\n      var isStartTrial = this.props.isStartTrial;\n\n\n      var example = null;\n      if (showExample) {\n        example = _react2.default.createElement(_telemetry.OptInExampleFlyout, {\n          onClose: function onClose() {\n            return _this2.setState({ showExample: false });\n          },\n          fetchTelemetry: _telemetry.getTelemetryFetcher\n        });\n      }\n\n      var toCurrentCustomers = void 0;\n      if (!isStartTrial) {\n        toCurrentCustomers = _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n          _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h4',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.licenseMgmt.telemetryOptIn.customersHelpSupportDescription',\n                defaultMessage: 'Help Elastic support provide better service'\n              })\n            )\n          ),\n          _react2.default.createElement(_eui.EuiSpacer, { size: 's' })\n        );\n      }\n\n      var readMoreButton = _react2.default.createElement(\n        _eui.EuiLink,\n        { onClick: this.onClickReadMore },\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.licenseMgmt.telemetryOptIn.readMoreLinkText',\n          defaultMessage: 'Read more'\n        })\n      );\n\n      var popover = _react2.default.createElement(\n        _eui.EuiPopover,\n        {\n          ownFocus: true,\n          id: 'readMorePopover',\n          button: readMoreButton,\n          isOpen: showMoreTelemetryInfo,\n          closePopover: this.closeReadMorePopover,\n          className: 'eui-AlignBaseline'\n        },\n        _react2.default.createElement(\n          _eui.EuiText,\n          { className: 'licManagement__narrowText' },\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.licenseMgmt.telemetryOptIn.featureUsageWarningMessage',\n              defaultMessage: 'This feature periodically sends basic feature usage statistics. This information will not be shared outside of Elastic. See an {exampleLink} or read our {telemetryPrivacyStatementLink}. You can disable this feature any time.',\n              values: {\n                exampleLink: _react2.default.createElement(\n                  _eui.EuiLink,\n                  { onClick: this.onClickExample },\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.licenseMgmt.telemetryOptIn.exampleLinkText',\n                    defaultMessage: 'example'\n                  })\n                ),\n                telemetryPrivacyStatementLink: _react2.default.createElement(\n                  _eui.EuiLink,\n                  {\n                    href: _telemetry.PRIVACY_STATEMENT_URL,\n                    target: '_blank'\n                  },\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.licenseMgmt.telemetryOptIn.telemetryPrivacyStatementLinkText',\n                    defaultMessage: 'telemetry privacy statement'\n                  })\n                )\n              }\n            })\n          )\n        )\n      );\n\n      return (0, _telemetry.showTelemetryOptIn)() ? _react2.default.createElement(\n        _react.Fragment,\n        null,\n        example,\n        toCurrentCustomers,\n        _react2.default.createElement(_eui.EuiCheckbox, {\n          label: _react2.default.createElement(\n            'span',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.licenseMgmt.telemetryOptIn.sendBasicFeatureStatisticsLabel',\n              defaultMessage: 'Send basic feature usage statistics to Elastic periodically. {popover}',\n              values: {\n                popover: popover\n              }\n            })\n          ),\n          id: 'isOptingInToTelemetry',\n          checked: isOptingInToTelemetry,\n          onChange: this.onChangeOptIn\n        })\n      ) : null;\n    }\n  }]);\n\n  return TelemetryOptIn;\n}(_react2.default.Component);",null]}