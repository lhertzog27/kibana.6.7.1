{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/dashboard_panel.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/dashboard_panel.js","mtime":1567631711559},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DashboardPanel = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _panel_header = require('./panel_header');\n\nvar _panel_error = require('./panel_error');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar DashboardPanelUi = function (_React$Component) {\n  _inherits(DashboardPanelUi, _React$Component);\n\n  function DashboardPanelUi(props) {\n    _classCallCheck(this, DashboardPanelUi);\n\n    var _this = _possibleConstructorReturn(this, (DashboardPanelUi.__proto__ || Object.getPrototypeOf(DashboardPanelUi)).call(this, props));\n\n    _this.onFocus = function () {\n      var _this$props = _this.props,\n          onPanelFocused = _this$props.onPanelFocused,\n          panel = _this$props.panel;\n\n      if (onPanelFocused) {\n        onPanelFocused(panel.panelIndex);\n      }\n    };\n\n    _this.onBlur = function () {\n      var _this$props2 = _this.props,\n          onPanelBlurred = _this$props2.onPanelBlurred,\n          panel = _this$props2.panel;\n\n      if (onPanelBlurred) {\n        onPanelBlurred(panel.panelIndex);\n      }\n    };\n\n    _this.state = {\n      error: props.embeddableFactory ? null : props.intl.formatMessage({\n        id: 'kbn.dashboard.panel.noEmbeddableFactoryErrorMessage',\n        defaultMessage: 'No factory found for embeddable'\n      })\n    };\n\n    _this.mounted = false;\n    return _this;\n  }\n\n  _createClass(DashboardPanelUi, [{\n    key: 'componentDidMount',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var _props, initialized, embeddableFactory, embeddableIsInitializing, panel, embeddableStateChanged, embeddableIsInitialized, embeddableError;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.mounted = true;\n                _props = this.props, initialized = _props.initialized, embeddableFactory = _props.embeddableFactory, embeddableIsInitializing = _props.embeddableIsInitializing, panel = _props.panel, embeddableStateChanged = _props.embeddableStateChanged, embeddableIsInitialized = _props.embeddableIsInitialized, embeddableError = _props.embeddableError;\n\n\n                if (!initialized) {\n                  embeddableIsInitializing();\n                  embeddableFactory.create(panel, embeddableStateChanged).then(function (embeddable) {\n                    if (_this2.mounted) {\n                      _this2.embeddable = embeddable;\n                      embeddableIsInitialized(embeddable.metadata);\n                      _this2.embeddable.render(_this2.panelElement, _this2.props.containerState);\n                    } else {\n                      embeddable.destroy();\n                    }\n                  }).catch(function (error) {\n                    if (_this2.mounted) {\n                      embeddableError(error.message);\n                    }\n                  });\n                }\n\n              case 3:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _ref.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.destroy();\n      this.mounted = false;\n      if (this.embeddable) {\n        this.embeddable.destroy();\n      }\n    }\n  }, {\n    key: 'renderEmbeddableViewport',\n    value: function renderEmbeddableViewport() {\n      var _this3 = this;\n\n      return _react2.default.createElement(\n        'div',\n        {\n          id: 'embeddedPanel',\n          className: 'panel-content',\n          ref: function ref(panelElement) {\n            return _this3.panelElement = panelElement;\n          }\n        },\n        !this.props.initialized && _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'kbn.dashboard.panel.embeddableViewport.loadingLabel',\n          defaultMessage: 'loading\\u2026'\n        })\n      );\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      if (this.embeddable && !_lodash2.default.isEqual(nextProps.containerState, this.props.containerState)) {\n        this.embeddable.onContainerStateChanged(nextProps.containerState);\n      }\n\n      if (this.embeddable && nextProps.lastReloadRequestTime !== this.props.lastReloadRequestTime) {\n        this.embeddable.reload();\n      }\n\n      return nextProps.error !== this.props.error || nextProps.initialized !== this.props.initialized;\n    }\n  }, {\n    key: 'renderEmbeddedError',\n    value: function renderEmbeddedError() {\n      return _react2.default.createElement(_panel_error.PanelError, { error: this.props.error });\n    }\n  }, {\n    key: 'renderContent',\n    value: function renderContent() {\n      var error = this.props.error;\n\n      if (error) {\n        return this.renderEmbeddedError(error);\n      } else {\n        return this.renderEmbeddableViewport();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          viewOnlyMode = _props2.viewOnlyMode,\n          panel = _props2.panel;\n\n      var classes = (0, _classnames2.default)('dshPanel', this.props.className, {\n        'dshPanel--editing': !viewOnlyMode\n      });\n      return _react2.default.createElement(\n        _eui.EuiPanel,\n        {\n          className: classes,\n          'data-test-subj': 'dashboardPanel',\n          onFocus: this.onFocus,\n          onBlur: this.onBlur,\n          paddingSize: 'none'\n        },\n        _react2.default.createElement(_panel_header.PanelHeader, {\n          panelId: panel.panelIndex,\n          embeddable: this.embeddable\n        }),\n        this.renderContent()\n      );\n    }\n  }]);\n\n  return DashboardPanelUi;\n}(_react2.default.Component);\n\nDashboardPanelUi.propTypes = {\n  viewOnlyMode: _propTypes2.default.bool.isRequired,\n  onPanelFocused: _propTypes2.default.func,\n  onPanelBlurred: _propTypes2.default.func,\n  error: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  destroy: _propTypes2.default.func.isRequired,\n  containerState: _propTypes2.default.shape({\n    timeRange: _propTypes2.default.object,\n    filters: _propTypes2.default.array,\n    query: _propTypes2.default.object,\n    embeddableCustomization: _propTypes2.default.object,\n    hidePanelTitles: _propTypes2.default.bool.isRequired\n  }),\n  embeddableFactory: _propTypes2.default.shape({\n    create: _propTypes2.default.func\n  }).isRequired,\n  lastReloadRequestTime: _propTypes2.default.number.isRequired,\n  embeddableStateChanged: _propTypes2.default.func.isRequired,\n  embeddableIsInitialized: _propTypes2.default.func.isRequired,\n  embeddableError: _propTypes2.default.func.isRequired,\n  embeddableIsInitializing: _propTypes2.default.func.isRequired,\n  initialized: _propTypes2.default.bool.isRequired,\n  panel: _propTypes2.default.shape({\n    panelIndex: _propTypes2.default.string\n  }).isRequired\n};\n\nvar DashboardPanel = exports.DashboardPanel = (0, _react3.injectI18n)(DashboardPanelUi);",null]}