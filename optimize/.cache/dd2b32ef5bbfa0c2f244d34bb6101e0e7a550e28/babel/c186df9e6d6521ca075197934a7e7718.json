{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/services/features.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/services/features.js","mtime":1567631712099},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar uiModule = _modules.uiModules.get('monitoring/features', []);\nuiModule.service('features', function ($window) {\n  function getData() {\n    var returnData = {};\n    var monitoringData = $window.localStorage.getItem('xpack.monitoring.data');\n\n    try {\n      returnData = monitoringData && JSON.parse(monitoringData) || {};\n    } catch (e) {\n      console.error('Monitoring UI: error parsing locally stored monitoring data', e);\n    }\n\n    return returnData;\n  }\n\n  function update(featureName, value) {\n    var monitoringDataObj = getData();\n    monitoringDataObj[featureName] = value;\n    $window.localStorage.setItem('xpack.monitoring.data', JSON.stringify(monitoringDataObj));\n  }\n\n  function isEnabled(featureName, defaultSetting) {\n    var monitoringDataObj = getData();\n    if (_lodash2.default.has(monitoringDataObj, featureName)) {\n      return monitoringDataObj[featureName];\n    }\n\n    if (_lodash2.default.isUndefined(defaultSetting)) {\n      return false;\n    }\n\n    return defaultSetting;\n  }\n\n  return {\n    isEnabled: isEnabled,\n    update: update\n  };\n});",null]}