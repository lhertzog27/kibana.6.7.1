{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/sections/follower_index_edit/follower_index_edit.container.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/sections/follower_index_edit/follower_index_edit.container.js","mtime":1567631711952},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FollowerIndexEdit = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _constants = require('../../constants');\n\nvar _selectors = require('../../store/selectors');\n\nvar _actions = require('../../store/actions');\n\nvar _follower_index_edit = require('./follower_index_edit');\n\nvar scope = _constants.SECTIONS.FOLLOWER_INDEX; /*\n                                                 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                 * or more contributor license agreements. Licensed under the Elastic License;\n                                                 * you may not use this file except in compliance with the Elastic License.\n                                                 */\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    apiStatus: {\n      get: (0, _selectors.getApiStatus)(scope + '-get')(state),\n      save: (0, _selectors.getApiStatus)(scope + '-save')(state)\n    },\n    apiError: {\n      get: (0, _selectors.getApiError)(scope + '-get')(state),\n      save: (0, _selectors.getApiError)(scope + '-save')(state)\n    },\n    followerIndexId: (0, _selectors.getSelectedFollowerIndexId)('edit')(state),\n    followerIndex: (0, _selectors.getSelectedFollowerIndex)('edit')(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getFollowerIndex: function getFollowerIndex(id) {\n      return dispatch((0, _actions.getFollowerIndex)(id));\n    },\n    selectFollowerIndex: function selectFollowerIndex(id) {\n      return dispatch((0, _actions.selectEditFollowerIndex)(id));\n    },\n    saveFollowerIndex: function saveFollowerIndex(id, followerIndex) {\n      return dispatch((0, _actions.saveFollowerIndex)(id, followerIndex, true));\n    },\n    clearApiError: function clearApiError() {\n      dispatch((0, _actions.clearApiError)(scope + '-get'));\n      dispatch((0, _actions.clearApiError)(scope + '-save'));\n    }\n  };\n};\n\nvar FollowerIndexEdit = exports.FollowerIndexEdit = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_follower_index_edit.FollowerIndexEdit);",null]}