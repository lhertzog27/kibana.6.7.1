{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/shape.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/shape.js","mtime":1567631711899},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar shape = exports.shape = function shape() {\n  return {\n    name: 'shape',\n    aliases: [],\n    type: 'shape',\n    help: 'Create a shape',\n    context: {\n      types: ['null']\n    },\n    args: {\n      shape: {\n        types: ['string', 'null'],\n        help: 'Pick a shape',\n        aliases: ['_'],\n        default: 'square',\n        options: ['arrow', 'arrowMulti', 'bookmark', 'cross', 'circle', 'hexagon', 'kite', 'pentagon', 'rhombus', 'semicircle', 'speechBubble', 'square', 'star', 'tag', 'triangle', 'triangleRight']\n      },\n      fill: {\n        types: ['string', 'null'],\n        help: 'Valid CSS color string',\n        default: 'black'\n      },\n      border: {\n        types: ['string', 'null'],\n        aliases: ['stroke'],\n        help: 'Valid CSS color string'\n      },\n      borderWidth: {\n        types: ['number', 'null'],\n        aliases: ['strokeWidth'],\n        help: 'Thickness of the border',\n        default: '0'\n      },\n      maintainAspect: {\n        types: ['boolean'],\n        help: 'Select true to maintain aspect ratio',\n        default: false,\n        options: [true, false]\n      }\n    },\n    fn: function fn(context, _ref) {\n      var shape = _ref.shape,\n          fill = _ref.fill,\n          border = _ref.border,\n          borderWidth = _ref.borderWidth,\n          maintainAspect = _ref.maintainAspect;\n      return {\n        type: 'shape',\n        shape: shape,\n        fill: fill,\n        border: border,\n        borderWidth: borderWidth,\n        maintainAspect: maintainAspect\n      };\n    }\n  };\n};",null]}