{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/charts/CustomPlot/plotUtils.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/charts/CustomPlot/plotUtils.js","mtime":1567631711868},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.getPlotValues = getPlotValues;\nexports.SharedPlot = SharedPlot;\n\nvar _lodash = require('lodash');\n\nvar _d3Scale = require('d3-scale');\n\nvar _reactVis = require('react-vis');\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _variables = require('../../../../style/variables');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /*\n                                                                                                                                                                                                                              * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                              * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                              * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                              */\n\nvar XY_HEIGHT = _variables.unit * 16;\nvar XY_MARGIN = {\n  top: _variables.unit,\n  left: _variables.unit * 5,\n  right: 0,\n  bottom: _variables.unit * 2\n};\n\nvar getXScale = function getXScale(xMin, xMax, width) {\n  return (0, _d3Scale.scaleLinear)().domain([xMin, xMax]).range([XY_MARGIN.left, width - XY_MARGIN.right]);\n};\n\nvar getYScale = function getYScale(yMin, yMax) {\n  return (0, _d3Scale.scaleLinear)().domain([yMin, yMax]).range([XY_HEIGHT, 0]).nice();\n};\n\nfunction getFlattenedCoordinates(visibleSeries, enabledSeries) {\n  var enabledCoordinates = (0, _lodash.flatten)(enabledSeries.map(function (serie) {\n    return serie.data;\n  }));\n  if (!(0, _lodash.isEmpty)(enabledCoordinates)) {\n    return enabledCoordinates;\n  }\n\n  return (0, _lodash.flatten)(visibleSeries.map(function (serie) {\n    return serie.data;\n  }));\n}\n\nfunction getPlotValues(visibleSeries, enabledSeries, _ref) {\n  var width = _ref.width,\n      _ref$yMin = _ref.yMin,\n      yMin = _ref$yMin === undefined ? 0 : _ref$yMin,\n      _ref$yMax = _ref.yMax,\n      yMax = _ref$yMax === undefined ? 'max' : _ref$yMax;\n\n  var flattenedCoordinates = getFlattenedCoordinates(visibleSeries, enabledSeries);\n  if ((0, _lodash.isEmpty)(flattenedCoordinates)) {\n    return null;\n  }\n\n  var xMin = _d2.default.min(flattenedCoordinates, function (d) {\n    return d.x;\n  });\n  var xMax = _d2.default.max(flattenedCoordinates, function (d) {\n    return d.x;\n  });\n  if (yMax === 'max') {\n    yMax = _d2.default.max(flattenedCoordinates, function (d) {\n      return d.y;\n    });\n  }\n  if (yMin === 'min') {\n    yMin = _d2.default.min(flattenedCoordinates, function (d) {\n      return d.y;\n    });\n  }\n  var xScale = getXScale(xMin, xMax, width);\n  var yScale = getYScale(yMin, yMax);\n\n  var yMaxNice = yScale.domain()[1];\n  var yTickValues = [0, yMaxNice / 2, yMaxNice];\n\n  return {\n    x: xScale,\n    y: yScale,\n    yTickValues: yTickValues,\n    XY_MARGIN: XY_MARGIN,\n    XY_HEIGHT: XY_HEIGHT,\n    XY_WIDTH: width\n  };\n}\n\nfunction SharedPlot(_ref2) {\n  var plotValues = _ref2.plotValues,\n      props = _objectWithoutProperties(_ref2, ['plotValues']);\n\n  return _react2.default.createElement(\n    'div',\n    { style: { position: 'absolute', top: 0, left: 0 } },\n    _react2.default.createElement(_reactVis.XYPlot, _extends({\n      dontCheckIfEmpty: true,\n      height: XY_HEIGHT,\n      margin: XY_MARGIN,\n      xType: 'time',\n      width: plotValues.XY_WIDTH,\n      xDomain: plotValues.x.domain(),\n      yDomain: plotValues.y.domain()\n    }, props))\n  );\n}\n\nSharedPlot.propTypes = {\n  plotValues: _propTypes2.default.shape({\n    x: _propTypes2.default.func.isRequired,\n    y: _propTypes2.default.func.isRequired,\n    XY_WIDTH: _propTypes2.default.number.isRequired\n  }).isRequired\n};",null]}