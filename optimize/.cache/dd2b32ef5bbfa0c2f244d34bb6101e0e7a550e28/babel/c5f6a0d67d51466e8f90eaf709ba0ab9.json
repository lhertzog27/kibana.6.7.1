{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/gis_map/view.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/gis_map/view.js","mtime":1567631712013},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GisMap = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _mb = require('../map/mb');\n\nvar _index = require('../widget_overlay/index');\n\nvar _index2 = require('../layer_panel/index');\n\nvar _index3 = require('../layer_addpanel/index');\n\nvar _eui = require('@elastic/eui');\n\nvar _exit_full_screen = require('ui/exit_full_screen');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar GisMap = exports.GisMap = function (_Component) {\n  _inherits(GisMap, _Component);\n\n  function GisMap() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, GisMap);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GisMap.__proto__ || Object.getPrototypeOf(GisMap)).call.apply(_ref, [this].concat(args))), _this), _this.setRefreshTimer = function () {\n      var _this$props$refreshCo = _this.props.refreshConfig,\n          isPaused = _this$props$refreshCo.isPaused,\n          interval = _this$props$refreshCo.interval;\n\n\n      if (_this.isPaused === isPaused && _this.interval === interval) {\n        // refreshConfig is the same, nothing to do\n        return;\n      }\n\n      _this.isPaused = isPaused;\n      _this.interval = interval;\n\n      _this.clearRefreshTimer();\n\n      if (!isPaused && interval > 0) {\n        _this.refreshTimerId = setInterval(function () {\n          _this.props.triggerRefreshTimer();\n        }, interval);\n      }\n    }, _this.clearRefreshTimer = function () {\n      if (_this.refreshTimerId) {\n        clearInterval(_this.refreshTimerId);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(GisMap, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setRefreshTimer();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.setRefreshTimer();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.clearRefreshTimer();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          layerDetailsVisible = _props.layerDetailsVisible,\n          addLayerVisible = _props.addLayerVisible,\n          noFlyoutVisible = _props.noFlyoutVisible,\n          isFullScreen = _props.isFullScreen,\n          exitFullScreen = _props.exitFullScreen;\n\n\n      var currentPanel = void 0;\n      var currentPanelClassName = void 0;\n\n      if (noFlyoutVisible) {\n        currentPanel = null;\n      } else if (addLayerVisible) {\n        currentPanelClassName = \"mapMapLayerPanel-isVisible\";\n        currentPanel = _react2.default.createElement(_index3.AddLayerPanel, null);\n      } else if (layerDetailsVisible) {\n        currentPanelClassName = \"mapMapLayerPanel-isVisible\";\n        currentPanel = _react2.default.createElement(_index2.LayerPanel, null);\n      }\n\n      var exitFullScreenButton = void 0;\n      if (isFullScreen) {\n        exitFullScreenButton = _react2.default.createElement(_exit_full_screen.ExitFullScreenButton, {\n          onExitFullScreenMode: exitFullScreen\n        });\n      }\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { gutterSize: 'none', responsive: false },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { className: 'mapMapWrapper' },\n          _react2.default.createElement(_mb.MBMapContainer, null),\n          _react2.default.createElement(_index.WidgetOverlay, null)\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { className: 'mapMapLayerPanel ' + currentPanelClassName, grow: false },\n          currentPanel\n        ),\n        exitFullScreenButton\n      );\n    }\n  }]);\n\n  return GisMap;\n}(_react.Component);",null]}