{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/services/timezone/xpack_watcher_timezone_service.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/services/timezone/xpack_watcher_timezone_service.js","mtime":1567631712351},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.XpackWatcherTimezoneService = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _jstimezonedetect = require('jstimezonedetect');\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XpackWatcherTimezoneService = exports.XpackWatcherTimezoneService = function () {\n  function XpackWatcherTimezoneService(config) {\n    _classCallCheck(this, XpackWatcherTimezoneService);\n\n    this.config = config;\n  }\n\n  _createClass(XpackWatcherTimezoneService, [{\n    key: 'getTimezone',\n    value: function getTimezone() {\n      var DATE_FORMAT_CONFIG_KEY = 'dateFormat:tz';\n      var isCustomTimezone = !this.config.isDefault(DATE_FORMAT_CONFIG_KEY);\n      if (isCustomTimezone) {\n        return this.config.get(DATE_FORMAT_CONFIG_KEY);\n      }\n\n      var detectedTimezone = _jstimezonedetect.jstz.determine().name();\n      if (detectedTimezone) {\n        return detectedTimezone;\n      }\n\n      var tzOffset = (0, _moment2.default)().format('Z');\n      return tzOffset;\n    }\n  }]);\n\n  return XpackWatcherTimezoneService;\n}();",null]}