{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/services/http_service.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/services/http_service.js","mtime":1567631712062},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\n// service for interacting with the server\n\nexports.http = http;\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _system_api = require('ui/system_api');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction http(options) {\n  return new Promise(function (resolve, reject) {\n    if (options && options.url) {\n      var url = '';\n      url = url + (options.url || '');\n      var headers = (0, _system_api.addSystemApiHeader)(_extends({\n        'Content-Type': 'application/json',\n        'kbn-version': _chrome2.default.getXsrfToken()\n      }, options.headers));\n\n      var allHeaders = options.headers === undefined ? headers : _extends({}, options.headers, headers);\n      var body = options.data === undefined ? null : JSON.stringify(options.data);\n\n      var payload = {\n        method: options.method || 'GET',\n        headers: allHeaders,\n        credentials: 'same-origin'\n      };\n\n      if (body !== null) {\n        payload.body = body;\n      }\n\n      fetch(url, payload).then(function (resp) {\n        resp.json().then(resp.ok === true ? resolve : reject);\n      }).catch(function (resp) {\n        reject(resp);\n      });\n    } else {\n      reject();\n    }\n  });\n}",null]}