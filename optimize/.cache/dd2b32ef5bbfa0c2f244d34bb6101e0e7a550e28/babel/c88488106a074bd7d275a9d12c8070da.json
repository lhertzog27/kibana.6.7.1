{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/table/storage.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/table/storage.js","mtime":1567631712096},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.euiTableStorageSetter = exports.euiTableStorageGetter = exports.tableStorageSetter = exports.tableStorageGetter = undefined;\n\nvar _lodash = require('lodash');\n\nvar _constants = require('../../../common/constants');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar tableStorageGetter = exports.tableStorageGetter = function tableStorageGetter(keyPrefix) {\n  return function (storage) {\n    var localStorageData = storage.get(_constants.STORAGE_KEY) || {};\n    var filterText = (0, _lodash.get)(localStorageData, [keyPrefix, 'filterText']);\n    var pageIndex = (0, _lodash.get)(localStorageData, [keyPrefix, 'pageIndex']);\n    var sortKey = (0, _lodash.get)(localStorageData, [keyPrefix, 'sortKey']);\n    var sortOrder = (0, _lodash.get)(localStorageData, [keyPrefix, 'sortOrder']);\n\n    return { pageIndex: pageIndex, filterText: filterText, sortKey: sortKey, sortOrder: sortOrder };\n  };\n};\n\nvar tableStorageSetter = exports.tableStorageSetter = function tableStorageSetter(keyPrefix) {\n  return function (storage, _ref) {\n    var filterText = _ref.filterText,\n        pageIndex = _ref.pageIndex,\n        sortKey = _ref.sortKey,\n        sortOrder = _ref.sortOrder;\n\n    var localStorageData = storage.get(_constants.STORAGE_KEY) || {};\n\n    (0, _lodash.set)(localStorageData, [keyPrefix, 'filterText'], filterText || undefined); // don`t store empty data\n    (0, _lodash.set)(localStorageData, [keyPrefix, 'pageIndex'], pageIndex || undefined);\n    (0, _lodash.set)(localStorageData, [keyPrefix, 'sortKey'], sortKey || undefined);\n    (0, _lodash.set)(localStorageData, [keyPrefix, 'sortOrder'], sortOrder || undefined);\n\n    storage.set(_constants.STORAGE_KEY, localStorageData);\n\n    return localStorageData;\n  };\n};\n\nvar euiTableStorageGetter = exports.euiTableStorageGetter = function euiTableStorageGetter(keyPrefix) {\n  return function (storage) {\n    var localStorageData = storage.get(_constants.STORAGE_KEY) || {};\n    var sort = (0, _lodash.get)(localStorageData, [keyPrefix, 'sort']);\n    var page = (0, _lodash.get)(localStorageData, [keyPrefix, 'page']);\n\n    return { page: page, sort: sort };\n  };\n};\n\nvar euiTableStorageSetter = exports.euiTableStorageSetter = function euiTableStorageSetter(keyPrefix) {\n  return function (storage, _ref2) {\n    var sort = _ref2.sort,\n        page = _ref2.page;\n\n    var localStorageData = storage.get(_constants.STORAGE_KEY) || {};\n\n    (0, _lodash.set)(localStorageData, [keyPrefix, 'sort'], sort || undefined); // don`t store empty data\n    (0, _lodash.set)(localStorageData, [keyPrefix, 'page'], page || undefined);\n\n    storage.set(_constants.STORAGE_KEY, localStorageData);\n\n    return localStorageData;\n  };\n};",null]}