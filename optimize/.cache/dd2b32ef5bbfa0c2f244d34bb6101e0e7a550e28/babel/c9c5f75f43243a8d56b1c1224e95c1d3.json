{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/packages/kbn-es-query/target/es_query/build_es_query.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/packages/kbn-es-query/target/es_query/build_es_query.js","mtime":1567666387236},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildEsQuery = buildEsQuery;\n\nvar _lodash = require('lodash');\n\nvar _from_kuery = require('./from_kuery');\n\nvar _from_filters = require('./from_filters');\n\nvar _from_lucene = require('./from_lucene');\n\n/**\n * @param indexPattern\n * @param queries - an array of query objects. Each query has a language property and a query property.\n * @param filters - an array of filter objects\n * @param config - an objects with query:allowLeadingWildcards and query:queryString:options UI\n * settings in form of { allowLeadingWildcards, queryStringOptions }\n */\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction buildEsQuery(indexPattern) {\n  var queries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var filters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    allowLeadingWildcards: false,\n    queryStringOptions: {},\n    ignoreFilterIfFieldNotInIndex: false\n  };\n\n  var validQueries = queries.filter(function (query) {\n    return (0, _lodash.has)(query, 'query');\n  });\n  var queriesByLanguage = (0, _lodash.groupBy)(validQueries, 'language');\n\n  var kueryQuery = (0, _from_kuery.buildQueryFromKuery)(indexPattern, queriesByLanguage.kuery, config.allowLeadingWildcards);\n  var luceneQuery = (0, _from_lucene.buildQueryFromLucene)(queriesByLanguage.lucene, config.queryStringOptions);\n  var filterQuery = (0, _from_filters.buildQueryFromFilters)(filters, indexPattern, config);\n\n  return {\n    bool: {\n      must: [].concat(kueryQuery.must, luceneQuery.must, filterQuery.must),\n      filter: [].concat(kueryQuery.filter, luceneQuery.filter, filterQuery.filter),\n      should: [].concat(kueryQuery.should, luceneQuery.should, filterQuery.should),\n      must_not: [].concat(kueryQuery.must_not, luceneQuery.must_not, filterQuery.must_not)\n    }\n  };\n}",null]}