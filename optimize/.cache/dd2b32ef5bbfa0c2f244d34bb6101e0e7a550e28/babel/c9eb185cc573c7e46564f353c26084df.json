{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/shard_activity/shard_activity.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/shard_activity/shard_activity.js","mtime":1567631712086},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShardActivity = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _table = require('plugins/monitoring/components/table');\n\nvar _recovery_index = require('./recovery_index');\n\nvar _total_time = require('./total_time');\n\nvar _source_destination = require('./source_destination');\n\nvar _progress = require('./progress');\n\nvar _parse_props = require('./parse_props');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar columns = [{\n  name: _i18n.i18n.translate('xpack.monitoring.kibana.shardActivity.indexTitle', {\n    defaultMessage: 'Index'\n  }),\n  field: 'name',\n  render: function render(_name, shard) {\n    return _react2.default.createElement(_recovery_index.RecoveryIndex, shard);\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.kibana.shardActivity.stageTitle', {\n    defaultMessage: 'Stage'\n  }),\n  field: 'stage'\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.kibana.shardActivity.totalTimeTitle', {\n    defaultMessage: 'Total Time'\n  }),\n  field: null,\n  render: function render(shard) {\n    return _react2.default.createElement(_total_time.TotalTime, shard);\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.kibana.shardActivity.sourceDestinationTitle', {\n    defaultMessage: 'Source / Destination'\n  }),\n  field: null,\n  render: function render(shard) {\n    return _react2.default.createElement(_source_destination.SourceDestination, shard);\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.kibana.shardActivity.filesTitle', {\n    defaultMessage: 'Files'\n  }),\n  field: null,\n  render: function render(shard) {\n    return _react2.default.createElement(_progress.FilesProgress, shard);\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.kibana.shardActivity.bytesTitle', {\n    defaultMessage: 'Bytes'\n  }),\n  field: null,\n  render: function render(shard) {\n    return _react2.default.createElement(_progress.BytesProgress, shard);\n  }\n}, {\n  name: _i18n.i18n.translate('xpack.monitoring.kibana.shardActivity.translogTitle', {\n    defaultMessage: 'Translog'\n  }),\n  field: null,\n  render: function render(shard) {\n    return _react2.default.createElement(_progress.TranslogProgress, shard);\n  }\n}];\n\nvar ShardActivityUI = function (_React$Component) {\n  _inherits(ShardActivityUI, _React$Component);\n\n  function ShardActivityUI(props) {\n    _classCallCheck(this, ShardActivityUI);\n\n    var _this = _possibleConstructorReturn(this, (ShardActivityUI.__proto__ || Object.getPrototypeOf(ShardActivityUI)).call(this, props));\n\n    _this.getNoDataMessage = _this.getNoDataMessage.bind(_this);\n    return _this;\n  }\n\n  _createClass(ShardActivityUI, [{\n    key: 'getNoDataMessage',\n    value: function getNoDataMessage() {\n      if (this.props.showShardActivityHistory) {\n        return this.props.intl.formatMessage({\n          id: 'xpack.monitoring.elasticsearch.shardActivity.noDataMessage',\n          defaultMessage: 'There are no historical shard activity records for the selected time range.'\n        });\n      }\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.monitoring.elasticsearch.shardActivity.noActiveShardRecoveriesMessage.completedRecoveriesLinkTextProblem',\n          defaultMessage: 'There are no active shard recoveries for this cluster.'\n        }),\n        _react2.default.createElement('br', null),\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.monitoring.elasticsearch.shardActivity.noActiveShardRecoveriesMessage.completedRecoveriesLinkTextSolution',\n          defaultMessage: 'Try viewing {shardActivityHistoryLink}.',\n          values: {\n            shardActivityHistoryLink: _react2.default.createElement(\n              _eui.EuiLink,\n              { onClick: this.props.toggleShardActivityHistory },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.elasticsearch.shardActivity.noActiveShardRecoveriesMessage.completedRecoveriesLinkText',\n                defaultMessage: 'completed recoveries'\n              })\n            )\n          }\n        })\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      // data prop is an array of table row data, or null (which triggers no data message)\n      var _props = this.props,\n          rawData = _props.data,\n          sorting = _props.sorting,\n          pagination = _props.pagination,\n          onTableChange = _props.onTableChange,\n          toggleShardActivityHistory = _props.toggleShardActivityHistory,\n          showShardActivityHistory = _props.showShardActivityHistory;\n\n\n      if (rawData === null) {\n        return null;\n      }\n\n      var rows = rawData.map(_parse_props.parseProps);\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiText,\n          null,\n          _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h2',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.elasticsearch.shardActivityTitle',\n                defaultMessage: 'Shard Activity'\n              })\n            )\n          )\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, null),\n        _react2.default.createElement(_eui.EuiSwitch, {\n          id: 'monitoring_completed_recoveries',\n          label: _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.monitoring.elasticsearch.shardActivity.completedRecoveriesLabel',\n            defaultMessage: 'Completed recoveries'\n          }),\n          onChange: toggleShardActivityHistory,\n          checked: showShardActivityHistory\n        }),\n        _react2.default.createElement(_eui.EuiSpacer, null),\n        _react2.default.createElement(_table.EuiMonitoringTable, {\n          className: 'esShardActivityTable',\n          rows: rows,\n          columns: columns,\n          message: this.getNoDataMessage(),\n          sorting: sorting,\n          search: false,\n          pagination: pagination,\n          onTableChange: onTableChange,\n          executeQueryOptions: {\n            defaultFields: ['name']\n          }\n        })\n      );\n    }\n  }]);\n\n  return ShardActivityUI;\n}(_react2.default.Component);\n\nvar ShardActivity = exports.ShardActivity = (0, _react3.injectI18n)(ShardActivityUI);",null]}