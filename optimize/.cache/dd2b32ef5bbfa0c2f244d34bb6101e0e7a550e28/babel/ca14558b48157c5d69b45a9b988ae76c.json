{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/pipeline_viewer/models/graph/vertex_factory.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/pipeline_viewer/models/graph/vertex_factory.js","mtime":1567631712090},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vertexFactory = vertexFactory;\n\nvar _plugin_vertex = require('./plugin_vertex');\n\nvar _if_vertex = require('./if_vertex');\n\nvar _queue_vertex = require('./queue_vertex');\n\nfunction vertexFactory(graph, vertexJson) {\n  var type = vertexJson.type;\n  switch (type) {\n    case 'plugin':\n      return new _plugin_vertex.PluginVertex(graph, vertexJson);\n    case 'if':\n      return new _if_vertex.IfVertex(graph, vertexJson);\n    case 'queue':\n      return new _queue_vertex.QueueVertex(graph, vertexJson);\n    default:\n      throw new Error('Unknown vertex type ' + type + '! This shouldn\\'t happen!');\n  }\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */",null]}