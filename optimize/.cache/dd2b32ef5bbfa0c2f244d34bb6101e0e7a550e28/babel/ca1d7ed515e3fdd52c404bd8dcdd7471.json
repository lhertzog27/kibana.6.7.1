{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/services/ml_api_service/filters.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/services/ml_api_service/filters.js","mtime":1567631712062},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filters = undefined;\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _http_service = require('../../services/http_service');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n// Service for querying filters, which hold lists of entities,\n// for example a list of known safe URL domains.\n\nvar basePath = _chrome2.default.addBasePath('/api/ml');\n\nvar filters = exports.filters = {\n  filters: function filters(obj) {\n    var filterId = obj && obj.filterId ? '/' + obj.filterId : '';\n    return (0, _http_service.http)({\n      url: basePath + '/filters' + filterId,\n      method: 'GET'\n    });\n  },\n  filtersStats: function filtersStats() {\n    return (0, _http_service.http)({\n      url: basePath + '/filters/_stats',\n      method: 'GET'\n    });\n  },\n  addFilter: function addFilter(filterId, description, items) {\n    return (0, _http_service.http)({\n      url: basePath + '/filters',\n      method: 'PUT',\n      data: {\n        filterId: filterId,\n        description: description,\n        items: items\n      }\n    });\n  },\n  updateFilter: function updateFilter(filterId, description, addItems, removeItems) {\n    var data = {};\n    if (description !== undefined) {\n      data.description = description;\n    }\n    if (addItems !== undefined) {\n      data.addItems = addItems;\n    }\n    if (removeItems !== undefined) {\n      data.removeItems = removeItems;\n    }\n\n    return (0, _http_service.http)({\n      url: basePath + '/filters/' + filterId,\n      method: 'PUT',\n      data: data\n    });\n  },\n  deleteFilter: function deleteFilter(filterId) {\n    return (0, _http_service.http)({\n      url: basePath + '/filters/' + filterId,\n      method: 'DELETE'\n    });\n  }\n};",null]}