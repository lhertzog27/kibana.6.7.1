{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/arg_form/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/arg_form/index.js","mtime":1567631711919},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArgForm = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _recompose = require('recompose');\n\nvar _assets = require('../../state/selectors/assets');\n\nvar _workpad = require('../../state/selectors/workpad');\n\nvar _arg_form = require('./arg_form');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar ArgForm = exports.ArgForm = (0, _recompose.compose)((0, _recompose.withState)('label', 'setLabel', function (_ref) {\n  var label = _ref.label,\n      argTypeInstance = _ref.argTypeInstance;\n\n  return label || argTypeInstance.displayName || argTypeInstance.name;\n}), (0, _recompose.withState)('resolvedArgValue', 'setResolvedArgValue'), (0, _recompose.withState)('renderError', 'setRenderError', false), (0, _recompose.lifecycle)({\n  componentDidUpdate: function componentDidUpdate(prevProps) {\n    if (prevProps.templateProps.argValue !== this.props.templateProps.argValue) {\n      this.props.setRenderError(false);\n      this.props.setResolvedArgValue();\n    }\n  }\n}), (0, _reactRedux.connect)(function (state) {\n  return { workpad: (0, _workpad.getWorkpadInfo)(state), assets: (0, _assets.getAssets)(state) };\n}))(_arg_form.ArgForm);\n\nArgForm.propTypes = {\n  label: _propTypes2.default.string,\n  argTypeInstance: _propTypes2.default.shape({\n    name: _propTypes2.default.string.isRequired,\n    displayName: _propTypes2.default.string,\n    expanded: _propTypes2.default.bool\n  }).isRequired\n};",null]}