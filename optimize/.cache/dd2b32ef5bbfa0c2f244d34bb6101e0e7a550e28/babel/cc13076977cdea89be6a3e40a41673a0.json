{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/sections/index_list/components/detail_panel/show_json/show_json.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/sections/index_list/components/detail_panel/show_json/show_json.js","mtime":1567631711971},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShowJson = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require(\"@elastic/eui\");\n\nrequire(\"brace/theme/textmate\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar ShowJson = exports.ShowJson = function (_React$PureComponent) {\n  _inherits(ShowJson, _React$PureComponent);\n\n  function ShowJson() {\n    _classCallCheck(this, ShowJson);\n\n    return _possibleConstructorReturn(this, (ShowJson.__proto__ || Object.getPrototypeOf(ShowJson)).apply(this, arguments));\n  }\n\n  _createClass(ShowJson, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.loadIndexData(this.props);\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(newProps) {\n      var data = newProps.data,\n          loadIndexData = newProps.loadIndexData;\n\n      if (!data) {\n        loadIndexData(newProps);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n\n      if (!data) {\n        return null;\n      }\n      var json = JSON.stringify(data, null, 2);\n      return _react2.default.createElement(_eui.EuiCodeEditor, {\n        mode: \"json\",\n        theme: \"textmate\",\n        isReadOnly: true,\n        setOptions: { maxLines: Infinity },\n        value: json,\n        editorProps: {\n          $blockScrolling: Infinity\n        }\n      });\n    }\n  }]);\n\n  return ShowJson;\n}(_react2.default.PureComponent);",null]}