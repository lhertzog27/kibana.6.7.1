{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/services/auto_follow_errors.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/services/auto_follow_errors.js","mtime":1567631711954},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar parseAutoFollowError = exports.parseAutoFollowError = function parseAutoFollowError(error) {\n  if (!error.leaderIndex) {\n    return null;\n  }\n\n  var leaderIndex = error.leaderIndex,\n      autoFollowException = error.autoFollowException;\n\n  var id = leaderIndex.substring(0, leaderIndex.lastIndexOf(':'));\n\n  return {\n    id: id,\n    leaderIndex: leaderIndex,\n    autoFollowException: autoFollowException\n  };\n};\n\n/**\n * Parse an array of auto-follow pattern errors and returns\n * an object where each key is an auto-follow pattern id\n */\nvar parseAutoFollowErrors = exports.parseAutoFollowErrors = function parseAutoFollowErrors(recentAutoFollowErrors) {\n  var maxErrorsToShow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  return recentAutoFollowErrors.map(parseAutoFollowError).filter(function (error) {\n    return error !== null;\n  }).reduce(function (byId, error) {\n    if (!byId[error.id]) {\n      byId[error.id] = [];\n    }\n\n    if (byId[error.id].length === maxErrorsToShow) {\n      return byId;\n    }\n\n    byId[error.id].push(error);\n    return byId;\n  }, {});\n};",null]}