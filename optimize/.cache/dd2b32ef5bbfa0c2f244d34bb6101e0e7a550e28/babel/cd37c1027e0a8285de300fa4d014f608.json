{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/lib/nested_agg_helpers.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/metrics/lib/nested_agg_helpers.js","mtime":1567631711700},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Forwards modifyAggConfigOnSearchRequestStart calls to a nested AggConfig.\n * This must be used for each parameter, that accepts a nested aggregation, otherwise\n * some parameters of the nested aggregation might not work properly (like auto interval\n * on a nested date histogram).\n * You should assign the return value of this function to the modifyAggConfigOnSearchRequestStart\n * of the parameter that accepts a nested aggregation. Example:\n * {\n *   name: 'customBucket',\n *   modifyAggConfigOnSearchRequestStart: forwardModifyAggConfigOnSearchRequestStart('customBucket')\n * }\n *\n * @param {string} paramName - The name of the parameter, that this function should forward\n *      calls to. That should match the name of the parameter the function is called on.\n * @returns {function} A function, that forwards the calls.\n */\nfunction forwardModifyAggConfigOnSearchRequestStart(paramName) {\n  return function (aggConfig) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (!aggConfig || !aggConfig.params) {\n      return;\n    }\n    var nestedAggConfig = aggConfig.params[paramName];\n    if (nestedAggConfig && nestedAggConfig.type && nestedAggConfig.type.params) {\n      nestedAggConfig.type.params.forEach(function (param) {\n        // Check if this parameter of the nested aggConfig has a modifyAggConfigOnSearchRequestStart\n        // function, that needs to be called.\n        if (param.modifyAggConfigOnSearchRequestStart) {\n          param.modifyAggConfigOnSearchRequestStart.apply(param, [nestedAggConfig].concat(args));\n        }\n      });\n    }\n  };\n}\n\nexports.forwardModifyAggConfigOnSearchRequestStart = forwardModifyAggConfigOnSearchRequestStart;",null]}