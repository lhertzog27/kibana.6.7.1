{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/shard_allocation/transformers/indices_by_nodes.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/elasticsearch/shard_allocation/transformers/indices_by_nodes.js","mtime":1567631712087},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indicesByNodes = indicesByNodes;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _decorate_shards = require('../lib/decorate_shards');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction indicesByNodes() {\n  return function indicesByNodesFn(shards, nodes) {\n\n    function createIndex(obj, shard) {\n      var id = shard.index;\n      if (obj[id]) {\n        return obj;\n      }\n      obj[id] = {\n        id: id,\n        name: id,\n        children: [],\n        unassigned: [],\n        unassignedPrimaries: false,\n        type: 'index'\n      };\n      return obj;\n    }\n\n    function createNodeAddShard(obj, shard) {\n      var node = shard.node,\n          index = shard.index;\n\n      // If the node is null then it's an unassigned shard and we need to\n      // add it to the unassigned array.\n\n      if (!shard.node || shard.node === null) {\n        obj[index].unassigned.push(shard);\n        // if the shard is a primary we need to set the unassignedPrimaries flag\n        if (shard.primary) {\n          obj[index].unassignedPrimaries = true;\n        }\n        return obj;\n      }\n\n      var nodeObj = _lodash2.default.find(obj[index].children, { id: node });\n      if (!nodeObj) {\n        nodeObj = {\n          id: node,\n          type: 'node',\n          name: nodes[node].name,\n          node_type: nodes[node].type,\n          ip_port: nodes[node].transport_address,\n          children: []\n        };\n        obj[index].children.push(nodeObj);\n      }\n      nodeObj.children.push(shard);\n      return obj;\n    }\n\n    var data = _lodash2.default.reduce((0, _decorate_shards.decorateShards)(shards, nodes), function (obj, shard) {\n      obj = createIndex(obj, shard);\n      obj = createNodeAddShard(obj, shard);\n      return obj;\n    }, {});\n\n    return (0, _lodash2.default)(data).values().sortBy(function (index) {\n      return [!index.unassignedPrimaries, /^\\./.test(index.name), index.name];\n    }).value();\n  };\n}",null]}