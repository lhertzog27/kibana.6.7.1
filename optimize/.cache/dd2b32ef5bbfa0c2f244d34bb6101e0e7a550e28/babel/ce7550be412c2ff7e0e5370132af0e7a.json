{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/packages/kbn-interpreter/target/public/interpreter.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/packages/kbn-interpreter/target/public/interpreter.js","mtime":1567666390024},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initializeInterpreter = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar initializeInterpreter = exports.initializeInterpreter = function () {\n  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(kfetch, typesRegistry, functionsRegistry) {\n    var _this = this;\n\n    var serverFunctionList, types, _serializeProvider, serialize, batch, interpretAst;\n\n    return _regenerator2.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return kfetch({ pathname: _consts.FUNCTIONS_URL });\n\n          case 2:\n            serverFunctionList = _context2.sent;\n            types = typesRegistry.toJS();\n            _serializeProvider = (0, _serialize.serializeProvider)(types), serialize = _serializeProvider.serialize;\n            batch = (0, _batched_fetch.batchedFetch)({ kfetch: kfetch, serialize: serialize });\n\n            // For every sever-side function, register a client-side\n            // function that matches its definition, but which simply\n            // calls the server-side function endpoint.\n\n            Object.keys(serverFunctionList).forEach(function (functionName) {\n              functionsRegistry.register(function () {\n                return (0, _extends3.default)({}, serverFunctionList[functionName], {\n                  fn: function fn(context, args) {\n                    return batch({ functionName: functionName, args: args, context: context });\n                  }\n                });\n              });\n            });\n\n            interpretAst = function () {\n              var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(ast, context, handlers) {\n                var interpretFn;\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return (0, _interpret.interpreterProvider)({\n                          types: typesRegistry.toJS(),\n                          handlers: (0, _extends3.default)({}, handlers, (0, _create_handlers.createHandlers)()),\n                          functions: functionsRegistry.toJS()\n                        });\n\n                      case 2:\n                        interpretFn = _context.sent;\n                        return _context.abrupt('return', interpretFn(ast, context));\n\n                      case 4:\n                      case 'end':\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, _this);\n              }));\n\n              return function interpretAst(_x4, _x5, _x6) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            return _context2.abrupt('return', { interpretAst: interpretAst });\n\n          case 9:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function initializeInterpreter(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}(); /*\n      * Licensed to Elasticsearch B.V. under one or more contributor\n      * license agreements. See the NOTICE file distributed with\n      * this work for additional information regarding copyright\n      * ownership. Elasticsearch B.V. licenses this file to you under\n      * the Apache License, Version 2.0 (the \"License\"); you may\n      * not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *    http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing,\n      * software distributed under the License is distributed on an\n      * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n      * KIND, either express or implied.  See the License for the\n      * specific language governing permissions and limitations\n      * under the License.\n      */\n\nvar _interpret = require('../common/interpreter/interpret');\n\nvar _serialize = require('../common/lib/serialize');\n\nvar _create_handlers = require('./create_handlers');\n\nvar _batched_fetch = require('./batched_fetch');\n\nvar _consts = require('./consts');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}",null]}