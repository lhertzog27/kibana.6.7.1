{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/tagcloud/public/tag_cloud_vis_params.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/tagcloud/public/tag_cloud_vis_params.js","mtime":1567631711643},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('ui/modules');\n\nvar _tag_cloud_vis_params = require('./tag_cloud_vis_params.html');\n\nvar _tag_cloud_vis_params2 = _interopRequireDefault(_tag_cloud_vis_params);\n\nvar _noUiSlider = require('no-ui-slider');\n\nvar _noUiSlider2 = _interopRequireDefault(_noUiSlider);\n\nrequire('no-ui-slider/css/nouislider.css');\n\nrequire('no-ui-slider/css/nouislider.pips.css');\n\nrequire('no-ui-slider/css/nouislider.tooltips.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n_modules.uiModules.get('kibana/table_vis').directive('tagcloudVisParams', function () {\n  return {\n    restrict: 'E',\n    template: _tag_cloud_vis_params2.default,\n    link: function link($scope, $element) {\n      var sliderContainer = $element[0];\n      var slider = sliderContainer.querySelector('.tgcFontSizeSlider');\n      $scope.config = $scope.vis.type.editorConfig;\n      _noUiSlider2.default.create(slider, {\n        start: [$scope.editorState.params.minFontSize, $scope.editorState.params.maxFontSize],\n        connect: true,\n        step: 1,\n        range: { 'min': 1, 'max': 100 },\n        format: { to: function to(value) {\n            return parseInt(value);\n          }, from: function from(value) {\n            return parseInt(value);\n          } }\n      });\n      slider.noUiSlider.on('slide', function () {\n        var fontSize = slider.noUiSlider.get();\n        $scope.$apply(function () {\n          $scope.editorState.params.minFontSize = fontSize[0];\n          $scope.editorState.params.maxFontSize = fontSize[1];\n        });\n      });\n\n      /**\n       * Whenever the params change (e.g. by hitting reset in the editor)\n       * set the uislider value to the new value.\n       */\n      $scope.$watch('editorState.params.minFontSize', function (val) {\n        val = parseInt(val);\n        if (slider.noUiSlider.get()[0] !== val) {\n          slider.noUiSlider.set([val, null]);\n        }\n      });\n      $scope.$watch('editorState.params.maxFontSize', function (val) {\n        val = parseInt(val);\n        if (slider.noUiSlider.get()[1] !== val) {\n          slider.noUiSlider.set([null, val]);\n        }\n      });\n    }\n  };\n});",null]}