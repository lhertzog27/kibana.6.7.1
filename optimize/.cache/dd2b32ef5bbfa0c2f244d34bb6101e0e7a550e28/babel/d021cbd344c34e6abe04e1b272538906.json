{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/services/get_remote_cluster_name.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/cross_cluster_replication/public/app/services/get_remote_cluster_name.js","mtime":1567631711954},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar getFirstConnectedCluster = function getFirstConnectedCluster(clusters) {\n  for (var i = 0; i < clusters.length; i++) {\n    if (clusters[i].isConnected) {\n      return clusters[i];\n    }\n  }\n\n  // No cluster connected, we return the first one in the list\n  return clusters.length ? clusters[0] : {};\n};\n\nvar getRemoteClusterName = exports.getRemoteClusterName = function getRemoteClusterName(remoteClusters, selected) {\n  return selected && remoteClusters.some(function (c) {\n    return c.name === selected;\n  }) ? selected : getFirstConnectedCluster(remoteClusters).name;\n};",null]}