{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/sections/job_create/steps/step_logistics.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/sections/job_create/steps/step_logistics.js","mtime":1567631712288},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StepLogistics = exports.StepLogisticsUi = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nvar _index_patterns = require('ui/index_patterns');\n\nvar _indices = require('ui/indices');\n\nvar _services = require('../../../services');\n\nvar _components = require('./components');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar indexPatternIllegalCharacters = _index_patterns.INDEX_PATTERN_ILLEGAL_CHARACTERS_VISIBLE.join(' ');\nvar indexIllegalCharacters = _indices.INDEX_ILLEGAL_CHARACTERS_VISIBLE.join(' ');\n\nvar StepLogisticsUi = exports.StepLogisticsUi = function (_Component) {\n  _inherits(StepLogisticsUi, _Component);\n\n  function StepLogisticsUi() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, StepLogisticsUi);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = StepLogisticsUi.__proto__ || Object.getPrototypeOf(StepLogisticsUi)).call.apply(_ref, [this].concat(args))), _this), _this.showAdvancedCron = function () {\n      var onFieldsChange = _this.props.onFieldsChange;\n\n\n      onFieldsChange({\n        isAdvancedCronVisible: true\n      });\n    }, _this.hideAdvancedCron = function () {\n      var _this$props = _this.props,\n          onFieldsChange = _this$props.onFieldsChange,\n          fields = _this$props.fields;\n      var simpleRollupCron = fields.simpleRollupCron;\n\n\n      onFieldsChange({\n        isAdvancedCronVisible: false,\n        // Restore the last value of the simple cron editor.\n        rollupCron: simpleRollupCron\n      });\n    }, _this.renderErrors = function () {\n      var _this$props2 = _this.props,\n          areStepErrorsVisible = _this$props2.areStepErrorsVisible,\n          hasErrors = _this$props2.hasErrors;\n\n\n      if (!areStepErrorsVisible || !hasErrors) {\n        return null;\n      }\n\n      return _react2.default.createElement(_components.StepError, null);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(StepLogisticsUi, [{\n    key: 'renderIndexPatternHelpText',\n    value: function renderIndexPatternHelpText() {\n      var _props = this.props,\n          isValidatingIndexPattern = _props.isValidatingIndexPattern,\n          hasMatchingIndices = _props.hasMatchingIndices;\n\n\n      if (!isValidatingIndexPattern && hasMatchingIndices) {\n        return _react2.default.createElement(\n          _eui.EuiTextColor,\n          { color: 'secondary', 'data-test-subj': 'fieldIndexPatternSuccessMessage' },\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.rollupJobs.create.stepLogistics.fieldIndexPattern.helpHasMatchesLabel',\n              defaultMessage: 'Success! Index pattern has matching indices.'\n            })\n          )\n        );\n      }\n\n      var indexPatternValidationStatus = void 0;\n\n      if (isValidatingIndexPattern) {\n        indexPatternValidationStatus = _react2.default.createElement(\n          'p',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.rollupJobs.create.stepLogistics.fieldIndexPattern.helpSearchingLabel',\n            defaultMessage: 'Looking for matching indices...'\n          })\n        );\n      } else {\n        indexPatternValidationStatus = _react2.default.createElement(\n          'p',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.rollupJobs.create.stepLogistics.fieldIndexPattern.helpMustMatchLabel',\n            defaultMessage: 'Index pattern must match at least one index that is not a rollup.'\n          })\n        );\n      }\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        indexPatternValidationStatus,\n        _react2.default.createElement(\n          'p',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.rollupJobs.create.stepLogistics.fieldIndexPattern.helpAllowLabel',\n            defaultMessage: 'Use a wildcard ({asterisk}) to match multiple indices.',\n            values: { asterisk: _react2.default.createElement(\n                'strong',\n                null,\n                '*'\n              ) }\n          })\n        ),\n        _react2.default.createElement(\n          'p',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.rollupJobs.create.stepLogistics.fieldIndexPattern.helpDisallowLabel',\n            defaultMessage: 'Spaces and the characters {characterList} are not allowed.',\n            values: { characterList: _react2.default.createElement(\n                'strong',\n                null,\n                indexPatternIllegalCharacters\n              ) }\n          })\n        )\n      );\n    }\n  }, {\n    key: 'renderCronEditor',\n    value: function renderCronEditor() {\n      var _props2 = this.props,\n          fields = _props2.fields,\n          onFieldsChange = _props2.onFieldsChange,\n          areStepErrorsVisible = _props2.areStepErrorsVisible,\n          fieldErrors = _props2.fieldErrors;\n      var rollupCron = fields.rollupCron,\n          cronFrequency = fields.cronFrequency,\n          isAdvancedCronVisible = fields.isAdvancedCronVisible,\n          fieldToPreferredValueMap = fields.fieldToPreferredValueMap;\n      var errorRollupCron = fieldErrors.rollupCron;\n\n\n      if (isAdvancedCronVisible) {\n        return _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(\n            _eui.EuiFormRow,\n            {\n              label: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.rollupJobs.create.stepLogistics.fieldCronLabel',\n                defaultMessage: 'Cron expression'\n              }),\n              error: errorRollupCron,\n              isInvalid: Boolean(areStepErrorsVisible && errorRollupCron),\n              helpText: _react2.default.createElement(\n                'p',\n                null,\n                _react2.default.createElement(\n                  _eui.EuiLink,\n                  { href: _services.cronUrl, target: '_blank' },\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.rollupJobs.create.stepLogistics.fieldCron.helpReferenceLinkLabel',\n                    defaultMessage: 'Learn more about cron expressions'\n                  })\n                )\n              ),\n              fullWidth: true\n            },\n            _react2.default.createElement(_eui.EuiFieldText, {\n              value: rollupCron,\n              onChange: function onChange(e) {\n                return onFieldsChange({ rollupCron: e.target.value });\n              },\n              isInvalid: Boolean(areStepErrorsVisible && errorRollupCron),\n              fullWidth: true\n            })\n          ),\n          _react2.default.createElement(\n            _eui.EuiText,\n            { size: 's' },\n            _react2.default.createElement(\n              _eui.EuiLink,\n              { onClick: this.hideAdvancedCron },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.rollupJobs.create.stepLogistics.sectionSchedule.buttonBasicLabel',\n                defaultMessage: 'Create basic interval'\n              })\n            )\n          )\n        );\n      }\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(_components.CronEditor, {\n          fieldToPreferredValueMap: fieldToPreferredValueMap,\n          cronExpression: rollupCron,\n          frequency: cronFrequency,\n          onChange: function onChange(_ref2) {\n            var cronExpression = _ref2.cronExpression,\n                frequency = _ref2.frequency,\n                fieldToPreferredValueMap = _ref2.fieldToPreferredValueMap;\n            return onFieldsChange({\n              rollupCron: cronExpression,\n              simpleRollupCron: cronExpression,\n              cronFrequency: frequency,\n              fieldToPreferredValueMap: fieldToPreferredValueMap\n            });\n          }\n        }),\n        _react2.default.createElement(\n          _eui.EuiText,\n          { size: 's' },\n          _react2.default.createElement(\n            _eui.EuiLink,\n            { onClick: this.showAdvancedCron },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.rollupJobs.create.stepLogistics.sectionSchedule.buttonAdvancedLabel',\n              defaultMessage: 'Create cron expression'\n            })\n          )\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          fields = _props3.fields,\n          onFieldsChange = _props3.onFieldsChange,\n          areStepErrorsVisible = _props3.areStepErrorsVisible,\n          fieldErrors = _props3.fieldErrors,\n          isValidatingIndexPattern = _props3.isValidatingIndexPattern,\n          indexPatternAsyncErrors = _props3.indexPatternAsyncErrors;\n      var id = fields.id,\n          indexPattern = fields.indexPattern,\n          rollupIndex = fields.rollupIndex,\n          rollupPageSize = fields.rollupPageSize,\n          rollupDelay = fields.rollupDelay;\n      var errorId = fieldErrors.id,\n          errorIndexPattern = fieldErrors.indexPattern,\n          errorRollupIndex = fieldErrors.rollupIndex,\n          errorRollupPageSize = fieldErrors.rollupPageSize,\n          errorRollupDelay = fieldErrors.rollupDelay;\n\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { justifyContent: 'spaceBetween' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiTitle,\n              null,\n              _react2.default.createElement(\n                'h3',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.create.stepLogisticsTitle',\n                  defaultMessage: 'Logistics'\n                })\n              )\n            ),\n            _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n            _react2.default.createElement(\n              _eui.EuiText,\n              null,\n              _react2.default.createElement(\n                'p',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.create.stepLogistics.logisticsDescription',\n                  defaultMessage: 'Define how to run the rollup job and when to index the documents.'\n                })\n              )\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiButtonEmpty,\n              {\n                size: 's',\n                flush: 'right',\n                href: _services.logisticalDetailsUrl,\n                target: '_blank',\n                iconType: 'help'\n              },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.rollupJobs.create.stepLogistics.readDocsButtonLabel',\n                defaultMessage: 'Logistics docs'\n              })\n            )\n          )\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'l' }),\n        _react2.default.createElement(\n          _eui.EuiForm,\n          null,\n          _react2.default.createElement(\n            _eui.EuiDescribedFormGroup,\n            {\n              title: _react2.default.createElement(\n                _eui.EuiTitle,\n                { size: 's' },\n                _react2.default.createElement(\n                  'h4',\n                  null,\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.rollupJobs.create.stepLogistics.sectionIdTitle',\n                    defaultMessage: 'Name'\n                  })\n                )\n              ),\n              description: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.rollupJobs.create.stepLogistics.sectionIdDescription',\n                defaultMessage: 'This name will be used as a unique identifier for this rollup job.'\n              }),\n              fullWidth: true\n            },\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.create.stepLogistics.fieldIdLabel',\n                  defaultMessage: 'Name'\n                }),\n                error: errorId,\n                isInvalid: Boolean(areStepErrorsVisible && errorId),\n                fullWidth: true\n              },\n              _react2.default.createElement(_eui.EuiFieldText, {\n                isInvalid: Boolean(areStepErrorsVisible && errorId),\n                value: id,\n                onChange: function onChange(e) {\n                  return onFieldsChange({ id: e.target.value });\n                },\n                fullWidth: true,\n                'data-test-subj': 'rollupJobName'\n              })\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiDescribedFormGroup,\n            {\n              title: _react2.default.createElement(\n                _eui.EuiTitle,\n                { size: 's' },\n                _react2.default.createElement(\n                  'h4',\n                  null,\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.rollupJobs.create.stepLogistics.sectionDataFlowTitle',\n                    defaultMessage: 'Data flow'\n                  })\n                )\n              ),\n              description: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.rollupJobs.create.stepLogistics.sectionDataFlowDescription',\n                defaultMessage: 'Which indices do you want to roll up and where do you want to store the data?'\n              }),\n              fullWidth: true\n            },\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.create.stepLogistics.fieldIndexPatternLabel',\n                  defaultMessage: 'Index pattern'\n                }),\n                error: isValidatingIndexPattern ? undefined : errorIndexPattern || indexPatternAsyncErrors,\n                isInvalid: Boolean(areStepErrorsVisible && errorIndexPattern) || Boolean(indexPatternAsyncErrors),\n                helpText: this.renderIndexPatternHelpText(),\n                fullWidth: true\n              },\n              _react2.default.createElement(_eui.EuiFieldText, {\n                value: indexPattern,\n                onChange: function onChange(e) {\n                  return onFieldsChange({ indexPattern: e.target.value });\n                },\n                isInvalid: Boolean(areStepErrorsVisible && errorIndexPattern) || Boolean(indexPatternAsyncErrors),\n                isLoading: isValidatingIndexPattern,\n                fullWidth: true,\n                'data-test-subj': 'rollupIndexPattern'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.create.stepLogistics.fieldRollupIndexLabel',\n                  defaultMessage: 'Rollup index name'\n                }),\n                error: errorRollupIndex,\n                isInvalid: Boolean(areStepErrorsVisible && errorRollupIndex),\n                helpText: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.create.stepLogistics.fieldRollupIndex.helpDisallowLabel',\n                  defaultMessage: 'Spaces, commas, and the characters {characterList} are not allowed.',\n                  values: { characterList: _react2.default.createElement(\n                      'strong',\n                      null,\n                      indexIllegalCharacters\n                    ) }\n                }),\n                fullWidth: true\n              },\n              _react2.default.createElement(_eui.EuiFieldText, {\n                value: rollupIndex,\n                onChange: function onChange(e) {\n                  return onFieldsChange({ rollupIndex: e.target.value });\n                },\n                isInvalid: Boolean(areStepErrorsVisible && errorRollupIndex),\n                fullWidth: true,\n                'data-test-subj': 'rollupIndexName'\n              })\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiDescribedFormGroup,\n            {\n              title: _react2.default.createElement(\n                _eui.EuiTitle,\n                { size: 's' },\n                _react2.default.createElement(\n                  'h4',\n                  null,\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.rollupJobs.create.stepLogistics.sectionScheduleTitle',\n                    defaultMessage: 'Schedule'\n                  })\n                )\n              ),\n              description: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.rollupJobs.create.stepLogistics.sectionScheduleDescription',\n                defaultMessage: 'How often do you want to roll up the data?'\n              }),\n              fullWidth: true\n            },\n            this.renderCronEditor()\n          ),\n          _react2.default.createElement(\n            _eui.EuiDescribedFormGroup,\n            {\n              title: _react2.default.createElement(\n                _eui.EuiTitle,\n                { size: 'xs' },\n                _react2.default.createElement(\n                  'h5',\n                  null,\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.rollupJobs.create.stepLogistics.sectionPageSizeTitle',\n                    defaultMessage: 'How many documents do you want to roll up at a time?'\n                  })\n                )\n              ),\n              description: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.rollupJobs.create.stepLogistics.sectionPageSizeDescription',\n                defaultMessage: 'A larger page size will roll up data quicker, but requires more memory.'\n              }),\n              fullWidth: true\n            },\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.create.stepLogistics.fieldPageSizeLabel',\n                  defaultMessage: 'Page size'\n                }),\n                error: errorRollupPageSize,\n                isInvalid: Boolean(areStepErrorsVisible && errorRollupPageSize),\n                fullWidth: true\n              },\n              _react2.default.createElement(_eui.EuiFieldNumber, {\n                value: rollupPageSize ? Number(rollupPageSize) : '',\n                onChange: function onChange(e) {\n                  return onFieldsChange({ rollupPageSize: e.target.value });\n                },\n                isInvalid: Boolean(areStepErrorsVisible && errorRollupPageSize),\n                fullWidth: true,\n                min: 0\n              })\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiDescribedFormGroup,\n            {\n              title: _react2.default.createElement(\n                _eui.EuiTitle,\n                { size: 'xs' },\n                _react2.default.createElement(\n                  'h5',\n                  null,\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.rollupJobs.create.stepLogistics.sectionDelayTitle',\n                    defaultMessage: 'How long should the rollup job wait before rolling up new data?'\n                  })\n                )\n              ),\n              description: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.rollupJobs.create.stepLogistics.sectionDelayDescription',\n                defaultMessage: 'A latency buffer will delay rolling up data. This will yield a higher-fidelity rollup by allowing for variable ingest latency. By default, the rollup job attempts to roll up all data that is available.'\n              }),\n              fullWidth: true\n            },\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.create.stepDateHistogram.fieldDelayLabel',\n                  defaultMessage: 'Latency buffer (optional)'\n                }),\n                error: errorRollupDelay,\n                isInvalid: Boolean(areStepErrorsVisible && errorRollupDelay),\n                helpText: _react2.default.createElement(\n                  _react.Fragment,\n                  null,\n                  _react2.default.createElement(\n                    'p',\n                    null,\n                    _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'xpack.rollupJobs.create.stepDateHistogram.fieldDelay.helpExampleLabel',\n                      defaultMessage: 'Example values: 30s, 20m, 24h, 2d, 1w, 1M'\n                    })\n                  )\n                ),\n                fullWidth: true\n              },\n              _react2.default.createElement(_eui.EuiFieldText, {\n                value: rollupDelay || '',\n                onChange: function onChange(e) {\n                  return onFieldsChange({ rollupDelay: e.target.value });\n                },\n                isInvalid: Boolean(areStepErrorsVisible && errorRollupDelay),\n                fullWidth: true\n              })\n            )\n          )\n        ),\n        this.renderErrors()\n      );\n    }\n  }]);\n\n  return StepLogisticsUi;\n}(_react.Component);\n\nStepLogisticsUi.propTypes = {\n  fields: _propTypes2.default.object.isRequired,\n  onFieldsChange: _propTypes2.default.func.isRequired,\n  fieldErrors: _propTypes2.default.object.isRequired,\n  hasErrors: _propTypes2.default.bool.isRequired,\n  areStepErrorsVisible: _propTypes2.default.bool.isRequired,\n  isValidatingIndexPattern: _propTypes2.default.bool.isRequired,\n  hasMatchingIndices: _propTypes2.default.bool.isRequired,\n  indexPatternAsyncErrors: _propTypes2.default.array\n};\nvar StepLogistics = exports.StepLogistics = (0, _react3.injectI18n)(StepLogisticsUi);",null]}