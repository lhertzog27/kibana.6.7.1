{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/graph/public/services/saved_workspaces.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/graph/public/services/saved_workspaces.js","mtime":1567631711959},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SavedWorkspacesProvider = SavedWorkspacesProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _modules = require('ui/modules');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nvar _saved_object_registry = require('ui/saved_objects/saved_object_registry');\n\nvar _saved_objects = require('ui/saved_objects');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _saved_workspace = require('./saved_workspace');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction SavedWorkspacesProvider(kbnUrl, Private, Promise) {\n  var savedObjectsClient = Private(_saved_objects.SavedObjectsClientProvider);\n  var SavedWorkspace = Private(_saved_workspace.SavedWorkspaceProvider);\n\n  this.type = SavedWorkspace.type;\n  this.Class = SavedWorkspace;\n\n  this.loaderProperties = {\n    name: 'Graph workspace',\n    noun: _i18n.i18n.translate('xpack.graph.savedWorkspaces.graphWorkspaceLabel', {\n      defaultMessage: 'Graph workspace'\n    }),\n    nouns: _i18n.i18n.translate('xpack.graph.savedWorkspaces.graphWorkspacesLabel', {\n      defaultMessage: 'Graph workspaces'\n    })\n  };\n\n  // Returns a single dashboard by ID, should be the name of the workspace\n  this.get = function (id) {\n    // Returns a promise that contains a workspace which is a subclass of docSource\n    return new SavedWorkspace(id).init();\n  };\n\n  this.urlFor = function (id) {\n    return _chrome2.default.addBasePath(kbnUrl.eval('/app/graph#/workspace/{{id}}', { id: id }));\n  };\n\n  this.delete = function (ids) {\n    ids = !_lodash2.default.isArray(ids) ? [ids] : ids;\n    return Promise.map(ids, function (id) {\n      return new SavedWorkspace(id).delete();\n    });\n  };\n\n  this.mapHits = function (hit) {\n    var source = hit.attributes;\n    source.id = hit.id;\n    source.url = this.urlFor(hit.id);\n    source.icon = 'fa-share-alt'; // looks like a graph\n    return source;\n  };\n\n  this.find = function (searchString) {\n    var _this = this;\n\n    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n    var body = void 0;\n    if (searchString) {\n      body = {\n        query: {\n          simple_query_string: {\n            query: searchString + '*',\n            fields: ['title^3', 'description'],\n            default_operator: 'AND'\n          }\n        }\n      };\n    } else {\n      body = { query: { match_all: {} } };\n    }\n\n    return savedObjectsClient.find({\n      type: SavedWorkspace.type,\n      search: searchString ? searchString + '*' : undefined,\n      perPage: size,\n      searchFields: ['title^3', 'description']\n    }).then(function (resp) {\n      return {\n        total: resp.total,\n        hits: resp.savedObjects.map(function (hit) {\n          return _this.mapHits(hit);\n        })\n      };\n    });\n  };\n}\n// This is the only thing that gets injected into controllers\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n_modules.uiModules.get('app/graph').service('savedGraphWorkspaces', function (Private) {\n  return Private(SavedWorkspacesProvider);\n});\n\n_saved_object_registry.SavedObjectRegistryProvider.register(SavedWorkspacesProvider);",null]}