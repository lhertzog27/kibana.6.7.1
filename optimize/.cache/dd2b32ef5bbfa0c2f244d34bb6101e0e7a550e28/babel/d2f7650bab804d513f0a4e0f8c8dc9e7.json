{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/visualize/editor_config.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/visualize/editor_config.js","mtime":1567631712292},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initEditorConfig = initEditorConfig;\n\nvar _editor_config_providers = require('ui/vis/editors/config/editor_config_providers');\n\nfunction initEditorConfig() {\n  // Limit agg params based on rollup capabilities\n  _editor_config_providers.editorConfigProviders.register(function (aggType, indexPattern, aggConfig) {\n    if (indexPattern.type !== 'rollup') {\n      return {};\n    }\n\n    var aggTypeName = aggConfig.type && aggConfig.type.name;\n\n    // Exclude certain param options for terms:\n    // otherBucket, missingBucket, orderBy, orderAgg\n    if (aggTypeName === 'terms') {\n      return {\n        otherBucket: {\n          hidden: true\n        },\n        missingBucket: {\n          hidden: true\n        }\n      };\n    }\n\n    var rollupAggs = indexPattern.typeMeta && indexPattern.typeMeta.aggs;\n    var field = aggConfig.params && aggConfig.params.field && aggConfig.params.field.name;\n    var fieldAgg = rollupAggs && field && rollupAggs[aggTypeName] && rollupAggs[aggTypeName][field];\n\n    if (!rollupAggs || !field || !fieldAgg) {\n      return {};\n    }\n\n    // Set interval and base interval for histograms based on rollup capabilities\n    if (aggTypeName === 'histogram') {\n      var interval = fieldAgg.interval;\n      return interval ? {\n        intervalBase: {\n          fixedValue: interval\n        },\n        interval: {\n          base: interval,\n          help: 'Must be a multiple of rollup configuration interval: ' + interval\n        }\n      } : {};\n    }\n\n    // Set date histogram time zone based on rollup capabilities\n    if (aggTypeName === 'date_histogram') {\n      var _interval = fieldAgg.interval;\n      return {\n        interval: {\n          fixedValue: 'custom'\n        },\n        useNormalizedEsInterval: {\n          fixedValue: false\n        },\n        customInterval: {\n          default: _interval,\n          timeBase: _interval,\n          help: 'Must be a multiple of rollup configuration interval: ' + _interval\n        }\n      };\n    }\n\n    return {};\n  });\n} /*\n  * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n  * or more contributor license agreements. Licensed under the Elastic License;\n  * you may not use this file except in compliance with the Elastic License.\n  */",null]}