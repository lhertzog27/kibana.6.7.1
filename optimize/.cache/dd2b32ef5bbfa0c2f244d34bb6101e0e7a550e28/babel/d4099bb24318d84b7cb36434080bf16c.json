{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/store/store.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/store/store.js","mtime":1567631712022},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStore = undefined;\n\nvar _redux = require('redux');\n\nvar _reduxThunk = require('redux-thunk');\n\nvar _reduxThunk2 = _interopRequireDefault(_reduxThunk);\n\nvar _ui = require('./ui');\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _map = require('./map');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar store = void 0;\n\nvar rootReducer = (0, _redux.combineReducers)({\n  map: _map.map,\n  ui: _ui2.default\n});\n\nvar enhancers = [(0, _redux.applyMiddleware)(_reduxThunk2.default)];\nwindow.__REDUX_DEVTOOLS_EXTENSION && enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__());\n\nvar getStore = exports.getStore = function getStore() {\n  if (store) {\n    return store;\n  }\n\n  var storeConfig = {};\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || _redux.compose;\n  store = (0, _redux.createStore)(rootReducer, storeConfig, composeEnhancers.apply(undefined, enhancers));\n  return store;\n};",null]}