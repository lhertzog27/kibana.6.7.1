{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/layer_panel/settings_panel/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/components/layer_panel/settings_panel/index.js","mtime":1567631712014},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SettingsPanel = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _settings_panel = require('./settings_panel');\n\nvar _map_selectors = require('../../../selectors/map_selectors');\n\nvar _store_actions = require('../../../actions/store_actions');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction mapStateToProps() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var selectedLayer = (0, _map_selectors.getSelectedLayer)(state);\n  return {\n    alpha: selectedLayer.getAlpha(),\n    label: selectedLayer.getLabel(),\n    layerId: selectedLayer.getId(),\n    maxZoom: selectedLayer.getMaxZoom(),\n    minZoom: selectedLayer.getMinZoom(),\n    layer: selectedLayer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateLabel: function updateLabel(id, label) {\n      return dispatch((0, _store_actions.updateLayerLabel)(id, label));\n    },\n    updateMinZoom: function updateMinZoom(id, minZoom) {\n      return dispatch((0, _store_actions.updateLayerMinZoom)(id, minZoom));\n    },\n    updateMaxZoom: function updateMaxZoom(id, maxZoom) {\n      return dispatch((0, _store_actions.updateLayerMaxZoom)(id, maxZoom));\n    },\n    updateAlpha: function updateAlpha(id, alpha) {\n      return dispatch((0, _store_actions.updateLayerAlpha)(id, alpha));\n    },\n    updateSourceProp: function updateSourceProp(id, propName, value) {\n      return dispatch((0, _store_actions.updateSourceProp)(id, propName, value));\n    }\n  };\n}\n\nvar connectedSettingsPanel = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_settings_panel.SettingsPanel);\nexports.SettingsPanel = connectedSettingsPanel;",null]}