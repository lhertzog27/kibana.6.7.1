{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/case.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/functions/common/case.js","mtime":1567631711897},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar doesMatch = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(context, args) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(typeof args.if !== 'undefined')) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt('return', args.if);\n\n          case 2:\n            if (!(typeof args.when !== 'undefined')) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 5;\n            return args.when();\n\n          case 5:\n            _context2.t0 = _context2.sent;\n            _context2.t1 = context;\n            return _context2.abrupt('return', _context2.t0 === _context2.t1);\n\n          case 8:\n            return _context2.abrupt('return', true);\n\n          case 9:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function doesMatch(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getResult = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(context, args) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(typeof args.then !== 'undefined')) {\n              _context3.next = 4;\n              break;\n            }\n\n            _context3.next = 3;\n            return args.then();\n\n          case 3:\n            return _context3.abrupt('return', _context3.sent);\n\n          case 4:\n            return _context3.abrupt('return', context);\n\n          case 5:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  return function getResult(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar caseFn = exports.caseFn = function caseFn() {\n  return {\n    name: 'case',\n    type: 'case',\n    help: 'Build a case (including a condition/result) to pass to the switch function',\n    args: {\n      when: {\n        aliases: ['_'],\n        resolve: false,\n        help: 'This value is compared to the context to see if the condition is met. It is overridden by the \"if\" argument if both are provided.'\n      },\n      if: {\n        types: ['boolean'],\n        help: 'This value is used as whether or not the condition is met. It overrides the unnamed argument if both are provided.'\n      },\n      then: {\n        resolve: false,\n        help: 'The value to return if the condition is met'\n      }\n    },\n    fn: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(context, args) {\n        var matches, result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return doesMatch(context, args);\n\n              case 2:\n                matches = _context.sent;\n\n                if (!matches) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 6;\n                return getResult(context, args);\n\n              case 6:\n                _context.t0 = _context.sent;\n                _context.next = 10;\n                break;\n\n              case 9:\n                _context.t0 = null;\n\n              case 10:\n                result = _context.t0;\n                return _context.abrupt('return', { type: 'case', matches: matches, result: result });\n\n              case 12:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, undefined);\n      }));\n\n      function fn(_x, _x2) {\n        return _ref.apply(this, arguments);\n      }\n\n      return fn;\n    }()\n  };\n};",null]}