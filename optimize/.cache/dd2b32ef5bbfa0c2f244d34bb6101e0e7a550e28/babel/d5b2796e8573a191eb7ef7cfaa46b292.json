{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/packages/kbn-interpreter/target/common/lib/get_by_alias.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/packages/kbn-interpreter/target/common/lib/get_by_alias.js","mtime":1567666389563},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getByAlias = getByAlias;\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * This is used for looking up function/argument definitions. It looks through\n * the given object/array for a case-insensitive match, which could be either the\n * `name` itself, or something under the `aliases` property.\n */\nfunction getByAlias(specs, name) {\n  var lowerCaseName = name.toLowerCase();\n  return Object.values(specs).find(function (_ref) {\n    var name = _ref.name,\n        aliases = _ref.aliases;\n\n    if (name.toLowerCase() === lowerCaseName) return true;\n    return (aliases || []).some(function (alias) {\n      return alias.toLowerCase() === lowerCaseName;\n    });\n  });\n}",null]}