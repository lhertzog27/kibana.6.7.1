{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/source.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/source.js","mtime":1567631712021},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar AbstractSource = exports.AbstractSource = function () {\n  _createClass(AbstractSource, null, [{\n    key: 'renderEditor',\n    value: function renderEditor() {\n      throw new Error('Must implement Source.renderEditor');\n    }\n  }, {\n    key: 'createDescriptor',\n    value: function createDescriptor() {\n      throw new Error('Must implement Source.createDescriptor');\n    }\n  }, {\n    key: 'renderDropdownDisplayOption',\n    value: function renderDropdownDisplayOption() {\n      throw new Error('Must implement Source.renderDropdownDisplayOption');\n    }\n  }]);\n\n  function AbstractSource(descriptor) {\n    _classCallCheck(this, AbstractSource);\n\n    this._descriptor = descriptor;\n  }\n\n  _createClass(AbstractSource, [{\n    key: 'destroy',\n    value: function destroy() {}\n  }, {\n    key: 'supportsFitToBounds',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt('return', true);\n\n              case 1:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function supportsFitToBounds() {\n        return _ref.apply(this, arguments);\n      }\n\n      return supportsFitToBounds;\n    }()\n\n    /**\n     * return list of immutable source properties.\n     * Immutable source properties are properties that can not be edited by the user.\n     */\n\n  }, {\n    key: 'getImmutableProperties',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt('return', []);\n\n              case 1:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getImmutableProperties() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return getImmutableProperties;\n    }()\n  }, {\n    key: '_createDefaultLayerDescriptor',\n    value: function _createDefaultLayerDescriptor() {\n      throw new Error('Source#createDefaultLayerDescriptor not implemented');\n    }\n  }, {\n    key: 'createDefaultLayer',\n    value: function createDefaultLayer() {\n      throw new Error('Source#createDefaultLayer not implemented');\n    }\n  }, {\n    key: 'getDisplayName',\n    value: function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.warn('Source should implement Source#getDisplayName');\n                return _context3.abrupt('return', '');\n\n              case 2:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getDisplayName() {\n        return _ref3.apply(this, arguments);\n      }\n\n      return getDisplayName;\n    }()\n\n    /**\n     * return attribution for this layer as array of objects with url and label property.\n     * e.g. [{ url: 'example.com', label: 'foobar' }]\n     * @return {Promise<null>}\n     */\n\n  }, {\n    key: 'getAttributions',\n    value: function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt('return', []);\n\n              case 1:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getAttributions() {\n        return _ref4.apply(this, arguments);\n      }\n\n      return getAttributions;\n    }()\n  }, {\n    key: 'isFieldAware',\n    value: function isFieldAware() {\n      return false;\n    }\n  }, {\n    key: 'isRefreshTimerAware',\n    value: function isRefreshTimerAware() {\n      return false;\n    }\n  }, {\n    key: 'isGeoGridPrecisionAware',\n    value: function isGeoGridPrecisionAware() {\n      return false;\n    }\n  }, {\n    key: 'isQueryAware',\n    value: function isQueryAware() {\n      return false;\n    }\n  }, {\n    key: 'getFieldNames',\n    value: function getFieldNames() {\n      return [];\n    }\n  }, {\n    key: 'hasCompleteConfig',\n    value: function hasCompleteConfig() {\n      throw new Error('Source#hasCompleteConfig not implemented');\n    }\n  }, {\n    key: 'renderSourceSettingsEditor',\n    value: function renderSourceSettingsEditor() {\n      return null;\n    }\n  }, {\n    key: 'getIndexPatternIds',\n    value: function getIndexPatternIds() {\n      return [];\n    }\n  }, {\n    key: 'getGeoGridPrecision',\n    value: function getGeoGridPrecision() {\n      return 0;\n    }\n  }, {\n    key: 'isJoinable',\n    value: function isJoinable() {\n      return false;\n    }\n  }]);\n\n  return AbstractSource;\n}();",null]}