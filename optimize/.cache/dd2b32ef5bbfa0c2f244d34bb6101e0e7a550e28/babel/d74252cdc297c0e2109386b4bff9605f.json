{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/explorer/explorer_charts/explorer_chart_info_tooltip.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/explorer/explorer_charts/explorer_chart_info_tooltip.js","mtime":1567631712040},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExplorerChartInfoTooltip = undefined;\n\nvar _CHART_DESCRIPTION;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _explorer_constants = require('../explorer_constants');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*\n                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                   */\n\nvar CHART_DESCRIPTION = (_CHART_DESCRIPTION = {}, _defineProperty(_CHART_DESCRIPTION, _explorer_constants.CHART_TYPE.EVENT_DISTRIBUTION, _i18n.i18n.translate('xpack.ml.explorer.charts.infoTooltip.chartEventDistributionDescription', {\n  defaultMessage: 'The gray dots depict the approximate distribution of occurrences over time for a sample of {byFieldValuesParam} with' + ' more frequent event types at the top and rarer ones at the bottom.',\n  values: { byFieldValuesParam: 'by_field_values' }\n})), _defineProperty(_CHART_DESCRIPTION, _explorer_constants.CHART_TYPE.POPULATION_DISTRIBUTION, _i18n.i18n.translate('xpack.ml.explorer.charts.infoTooltip.chartPopulationDistributionDescription', {\n  defaultMessage: 'The gray dots depict the approximate distribution of values over time for a sample of {overFieldValuesParam}.',\n  values: { overFieldValuesParam: 'over_field_values' }\n})), _CHART_DESCRIPTION);\n\nfunction TooltipDefinitionList(_ref) {\n  var toolTipData = _ref.toolTipData;\n\n  return _react2.default.createElement(\n    'dl',\n    { className: 'mlDescriptionList' },\n    toolTipData.map(function (_ref2) {\n      var title = _ref2.title,\n          description = _ref2.description;\n      return _react2.default.createElement(\n        _react2.default.Fragment,\n        { key: title + ' ' + description },\n        _react2.default.createElement(\n          'dt',\n          { className: 'mlDescriptionList__title' },\n          title\n        ),\n        _react2.default.createElement(\n          'dd',\n          { className: 'mlDescriptionList__description' },\n          description\n        )\n      );\n    })\n  );\n}\n\nvar ExplorerChartInfoTooltip = exports.ExplorerChartInfoTooltip = (0, _react3.injectI18n)(function ExplorerChartInfoTooltip(_ref3) {\n  var jobId = _ref3.jobId,\n      aggregationInterval = _ref3.aggregationInterval,\n      chartFunction = _ref3.chartFunction,\n      chartType = _ref3.chartType,\n      _ref3$entityFields = _ref3.entityFields,\n      entityFields = _ref3$entityFields === undefined ? [] : _ref3$entityFields,\n      intl = _ref3.intl;\n\n  var chartDescription = CHART_DESCRIPTION[chartType];\n\n  var toolTipData = [{\n    title: intl.formatMessage({ id: 'xpack.ml.explorer.charts.infoTooltip.jobIdTitle', defaultMessage: 'job ID' }),\n    description: jobId\n  }, {\n    title: intl.formatMessage({\n      id: 'xpack.ml.explorer.charts.infoTooltip.aggregationIntervalTitle',\n      defaultMessage: 'aggregation interval'\n    }),\n    description: aggregationInterval\n  }, {\n    title: intl.formatMessage({ id: 'xpack.ml.explorer.charts.infoTooltip.chartFunctionTitle', defaultMessage: 'chart function' }),\n    description: chartFunction\n  }];\n\n  entityFields.forEach(function (entityField) {\n    toolTipData.push({\n      title: entityField.fieldName,\n      description: entityField.fieldValue\n    });\n  });\n\n  return _react2.default.createElement(\n    'div',\n    { className: 'ml-explorer-chart-info-tooltip' },\n    _react2.default.createElement(TooltipDefinitionList, { toolTipData: toolTipData }),\n    chartDescription && _react2.default.createElement(\n      _react2.default.Fragment,\n      null,\n      _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n      _react2.default.createElement(\n        'div',\n        { className: 'ml-explorer-chart-description' },\n        chartDescription\n      )\n    )\n  );\n});\nExplorerChartInfoTooltip.WrappedComponent.propTypes = {\n  jobId: _propTypes2.default.string.isRequired,\n  aggregationInterval: _propTypes2.default.string,\n  chartFunction: _propTypes2.default.string,\n  entityFields: _propTypes2.default.array\n};",null]}