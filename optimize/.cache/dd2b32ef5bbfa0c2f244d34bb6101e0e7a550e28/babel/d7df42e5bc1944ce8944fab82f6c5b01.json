{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/jobs_list/components/job_actions/management.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/jobs_list/components/job_actions/management.js","mtime":1567631712048},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.actionsMenuContent = actionsMenuContent;\n\nvar _check_privilege = require('../../../../privilege/check_privilege');\n\nvar _check_ml_nodes = require('../../../../ml_nodes_check/check_ml_nodes');\n\nvar _index_utils = require('../../../../util/index_utils');\n\nvar _utils = require('../utils');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction actionsMenuContent(showEditJobFlyout, showDeleteJobModal, showStartDatafeedModal, refreshJobs) {\n  var canCreateJob = (0, _check_privilege.checkPermission)('canCreateJob') && (0, _check_ml_nodes.mlNodesAvailable)();\n  var canUpdateJob = (0, _check_privilege.checkPermission)('canUpdateJob');\n  var canDeleteJob = (0, _check_privilege.checkPermission)('canDeleteJob');\n  var canUpdateDatafeed = (0, _check_privilege.checkPermission)('canUpdateDatafeed');\n  var canStartStopDatafeed = (0, _check_privilege.checkPermission)('canStartStopDatafeed') && (0, _check_ml_nodes.mlNodesAvailable)();\n  var canCloseJob = (0, _check_privilege.checkPermission)('canCloseJob') && (0, _check_ml_nodes.mlNodesAvailable)();\n\n  return [{\n    name: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.startDatafeedLabel', {\n      defaultMessage: 'Start datafeed'\n    }),\n    description: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.startDatafeedDescription', {\n      defaultMessage: 'Start datafeed'\n    }),\n    icon: 'play',\n    enabled: function enabled(item) {\n      return item.deleting !== true && canStartStopDatafeed;\n    },\n    available: function available(item) {\n      return (0, _utils.isStartable)([item]);\n    },\n    onClick: function onClick(item) {\n      showStartDatafeedModal([item]);\n      closeMenu();\n    }\n  }, {\n    name: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.stopDatafeedLabel', {\n      defaultMessage: 'Stop datafeed'\n    }),\n    description: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.stopDatafeedDescription', {\n      defaultMessage: 'Stop datafeed'\n    }),\n    icon: 'stop',\n    enabled: function enabled(item) {\n      return item.deleting !== true && canStartStopDatafeed;\n    },\n    available: function available(item) {\n      return (0, _utils.isStoppable)([item]);\n    },\n    onClick: function onClick(item) {\n      (0, _utils.stopDatafeeds)([item], refreshJobs);\n      closeMenu(true);\n    }\n  }, {\n    name: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.closeJobLabel', {\n      defaultMessage: 'Close job'\n    }),\n    description: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.closeJobDescription', {\n      defaultMessage: 'Close job'\n    }),\n    icon: 'cross',\n    enabled: function enabled(item) {\n      return item.deleting !== true && canCloseJob;\n    },\n    available: function available(item) {\n      return (0, _utils.isClosable)([item]);\n    },\n    onClick: function onClick(item) {\n      (0, _utils.closeJobs)([item], refreshJobs);\n      closeMenu(true);\n    }\n  }, {\n    name: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.cloneJobLabel', {\n      defaultMessage: 'Clone job'\n    }),\n    description: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.cloneJobDescription', {\n      defaultMessage: 'Clone job'\n    }),\n    icon: 'copy',\n    enabled: function enabled(item) {\n      // We only allow cloning of a job if the user has the right permissions and can still access\n      // the indexPattern the job was created for. An indexPattern could either have been deleted\n      // since the the job was created or the current user doesn't have the required permissions to\n      // access the indexPattern.\n      var indexPatternNames = (0, _index_utils.getIndexPatternNames)();\n      var jobIndicesAvailable = item.datafeedIndices.every(function (dfiName) {\n        return indexPatternNames.some(function (ipName) {\n          return ipName === dfiName;\n        });\n      });\n\n      return item.deleting !== true && canCreateJob && jobIndicesAvailable;\n    },\n    onClick: function onClick(item) {\n      (0, _utils.cloneJob)(item.id);\n      closeMenu(true);\n    }\n  }, {\n    name: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.editJobLabel', {\n      defaultMessage: 'Edit job'\n    }),\n    description: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.editJobDescription', {\n      defaultMessage: 'Edit job'\n    }),\n    icon: 'pencil',\n    enabled: function enabled(item) {\n      return item.deleting !== true && canUpdateJob && canUpdateDatafeed;\n    },\n    onClick: function onClick(item) {\n      showEditJobFlyout(item);\n      closeMenu();\n    }\n  }, {\n    name: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.deleteJobLabel', {\n      defaultMessage: 'Delete job'\n    }),\n    description: _i18n.i18n.translate('xpack.ml.jobsList.managementActions.deleteJobDescription', {\n      defaultMessage: 'Delete job'\n    }),\n    icon: 'trash',\n    color: 'danger',\n    enabled: function enabled() {\n      return canDeleteJob;\n    },\n    onClick: function onClick(item) {\n      showDeleteJobModal([item]);\n      closeMenu();\n    }\n  }];\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */\n\nfunction closeMenu() {\n  var now = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if (now) {\n    document.querySelector('.euiTable').click();\n  } else {\n    window.setTimeout(function () {\n      var modalBody = document.querySelector('.euiModalBody');\n      if (modalBody) {\n        modalBody.click();\n      } else {\n        document.querySelector('.euiTable').click();\n      }\n    }, 500);\n  }\n}",null]}