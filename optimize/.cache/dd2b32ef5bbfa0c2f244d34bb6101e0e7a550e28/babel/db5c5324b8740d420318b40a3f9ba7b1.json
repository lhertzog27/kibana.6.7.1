{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/uis/views/progress.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/canvas_plugin_src/uis/views/progress.js","mtime":1567631711910},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.progress = undefined;\n\nvar _fonts = require('../../../common/lib/fonts');\n\nvar _shapes = require('../../renderers/progress/shapes');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar progress = exports.progress = function progress() {\n  return {\n    name: 'progress',\n    displayName: 'Progress',\n    modelArgs: [['_', { label: 'Value' }]],\n    requiresContext: false,\n    args: [{\n      name: 'shape',\n      displayName: 'Shape',\n      help: 'Shape of the progress indicator',\n      argType: 'select',\n      options: {\n        choices: Object.keys(_shapes.shapes).map(function (key) {\n          return {\n            value: key,\n            //turns camel into title case\n            name: key[0].toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')\n          };\n        })\n      }\n    }, {\n      name: 'max',\n      displayName: 'Maximum value',\n      help: 'Maximum value of the progress element',\n      argType: 'number',\n      default: '1'\n    }, {\n      name: 'valueColor',\n      displayName: 'Progress color',\n      help: 'Color of the progress bar',\n      argType: 'color',\n      default: '#1785b0'\n    }, {\n      name: 'valueWeight',\n      displayName: 'Progress weight',\n      help: 'Thickness of the progress bar',\n      argType: 'number',\n      default: '20'\n    }, {\n      name: 'barColor',\n      displayName: 'Background color',\n      help: 'Color of the background bar',\n      argType: 'color',\n      default: '#f0f0f0'\n    }, {\n      name: 'barWeight',\n      displayName: 'Background weight',\n      help: 'Thickness of the background bar',\n      argType: 'number',\n      default: '20'\n    }, {\n      name: 'label',\n      displayName: 'Label',\n      help: 'Set true/false to show/hide label or provide a string to display as the label',\n      argType: 'toggle',\n      default: 'true'\n    }, {\n      name: 'font',\n      displayName: 'Label settings',\n      help: 'Font settings for the label. Technically, you can add other styles as well',\n      argType: 'font',\n      default: '{font size=24 family=\"' + _fonts.openSans.value + '\" color=\"#000000\" align=center}'\n    }]\n  };\n};",null]}