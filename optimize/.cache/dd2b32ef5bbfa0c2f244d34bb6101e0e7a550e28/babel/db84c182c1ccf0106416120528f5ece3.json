{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/file_datavisualizer/components/import_errors/errors.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/file_datavisualizer/components/import_errors/errors.js","mtime":1567631712044},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /*\n                                                                                                                                                                                                                                                                               * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                               * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                               */\n\nexports.ImportErrors = ImportErrors;\n\nvar _react = require('@kbn/i18n/react');\n\nvar _react2 = require('react');\n\nvar _react3 = _interopRequireDefault(_react2);\n\nvar _eui = require('@elastic/eui');\n\nvar _import_progress = require('../import_progress');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ImportErrors(_ref) {\n  var errors = _ref.errors,\n      statuses = _ref.statuses;\n\n  return _react3.default.createElement(\n    _eui.EuiCallOut,\n    {\n      title: title(statuses),\n      color: 'danger',\n      iconType: 'cross'\n    },\n    errors.map(function (e, i) {\n      return _react3.default.createElement(ImportError, { error: e, key: i });\n    })\n  );\n}\n\nfunction title(statuses) {\n  switch (_import_progress.IMPORT_STATUS.FAILED) {\n    case statuses.readStatus:\n      return _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importErrors.readingFileErrorMessage',\n        defaultMessage: 'Error reading file'\n      });\n    case statuses.parseJSONStatus:\n      return _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importErrors.parsingJSONErrorMessage',\n        defaultMessage: 'Error parsing JSON'\n      });\n    case statuses.indexCreatedStatus:\n      return _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importErrors.creatingIndexErrorMessage',\n        defaultMessage: 'Error creating index'\n      });\n    case statuses.ingestPipelineCreatedStatus:\n      return _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importErrors.creatingIngestPipelineErrorMessage',\n        defaultMessage: 'Error creating ingest pipeline'\n      });\n    case statuses.uploadStatus:\n      return _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importErrors.uploadingDataErrorMessage',\n        defaultMessage: 'Error uploading data'\n      });\n    case statuses.indexPatternCreatedStatus:\n      return _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importErrors.creatingIndexPatternErrorMessage',\n        defaultMessage: 'Error creating index pattern'\n      });\n    case statuses.permissionCheckStatus:\n      return _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importErrors.checkingPermissionErrorMessage',\n        defaultMessage: 'Import permissions error'\n      });\n    default:\n      return _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.importErrors.defaultErrorMessage',\n        defaultMessage: 'Error'\n      });\n  }\n}\n\nfunction ImportError(error, key) {\n  var errorObj = toString(error);\n  return _react3.default.createElement(\n    _react3.default.Fragment,\n    null,\n    _react3.default.createElement(\n      'p',\n      { key: key },\n      errorObj.msg\n    ),\n    errorObj.more !== undefined && _react3.default.createElement(\n      _eui.EuiAccordion,\n      {\n        id: 'more',\n        buttonContent: _react3.default.createElement(_react.FormattedMessage, {\n          id: 'xpack.ml.fileDatavisualizer.importErrors.moreButtonLabel',\n          defaultMessage: 'More'\n        }),\n        paddingSize: 'm'\n      },\n      errorObj.more\n    )\n  );\n}\n\nfunction toString(error) {\n  if (typeof error === 'string') {\n    return { msg: error };\n  }\n\n  if ((typeof error === 'undefined' ? 'undefined' : _typeof(error)) === 'object') {\n    if (error.msg !== undefined) {\n      return { msg: error.msg };\n    } else if (error.error !== undefined) {\n      if (_typeof(error.error) === 'object') {\n        if (error.error.msg !== undefined) {\n          // this will catch a bulk ingest failure\n          var errorObj = { msg: error.error.msg };\n          if (error.error.body !== undefined) {\n            errorObj.more = error.error.response;\n          }\n          return errorObj;\n        }\n\n        if (error.error.message !== undefined) {\n          // this will catch javascript errors such as JSON parsing issues\n          return { msg: error.error.message };\n        }\n      } else {\n        return { msg: error.error };\n      }\n    } else {\n      // last resort, just display the whole object\n      return { msg: JSON.stringify(error) };\n    }\n  }\n\n  return {\n    msg: _react3.default.createElement(_react.FormattedMessage, {\n      id: 'xpack.ml.fileDatavisualizer.importErrors.unknownErrorMessage',\n      defaultMessage: 'Unknown error'\n    })\n  };\n}",null]}