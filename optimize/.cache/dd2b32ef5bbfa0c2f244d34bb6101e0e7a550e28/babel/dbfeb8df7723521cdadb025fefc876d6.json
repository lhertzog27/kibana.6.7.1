{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/services/filter_items.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_management/public/services/filter_items.js","mtime":1567631711972},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterItems = undefined;\n\nvar _lodash = require('lodash');\n\nvar filterItems = exports.filterItems = function filterItems(fields) {\n  var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var items = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  var lowerFilter = filter.trim().toLowerCase();\n  return items.filter(function (item) {\n    var actualFields = fields || Object.keys(item);\n    var indexOfMatch = actualFields.findIndex(function (field) {\n      var normalizedField = String((0, _lodash.get)(item, field)).toLowerCase();\n      return normalizedField.includes(lowerFilter);\n    });\n    return indexOfMatch !== -1;\n  });\n}; /*\n    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n    * or more contributor license agreements. Licensed under the Elastic License;\n    * you may not use this file except in compliance with the Elastic License.\n    */",null]}