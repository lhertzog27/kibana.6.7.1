{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_detail/components/watch_detail/watch_detail.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/sections/watch_detail/components/watch_detail/watch_detail.js","mtime":1567631712346},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _modules = require('ui/modules');\n\nvar _compat = require('ui/compat');\n\nvar _momentTimezone = require('moment-timezone');\n\nvar _momentTimezone2 = _interopRequireDefault(_momentTimezone);\n\nvar _notify = require('ui/notify');\n\nrequire('ui/config');\n\nrequire('ui/url');\n\nrequire('ui/table_info');\n\nrequire('plugins/watcher/components/tool_bar_selected_count');\n\nrequire('plugins/watcher/services/watch');\n\nrequire('plugins/watcher/services/license');\n\nrequire('plugins/watcher/components/errors_display_modal');\n\nvar _watch_detail = require('./watch_detail.html');\n\nvar _watch_detail2 = _interopRequireDefault(_watch_detail);\n\nvar _errors_display_modal = require('plugins/watcher/components/errors_display_modal/errors_display_modal.html');\n\nvar _errors_display_modal2 = _interopRequireDefault(_errors_display_modal);\n\nrequire('../watch_history');\n\nrequire('../action_status_table');\n\nvar _constants = require('plugins/watcher/../common/constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar app = _modules.uiModules.get('xpack/watcher');\n\napp.directive('watchDetail', function ($injector, i18n) {\n  var watchService = $injector.get('xpackWatcherWatchService');\n  var licenseService = $injector.get('xpackWatcherLicenseService');\n\n  var config = $injector.get('config');\n  var kbnUrl = $injector.get('kbnUrl');\n  var confirmModal = $injector.get('confirmModal');\n  var $interval = $injector.get('$interval');\n\n  var $filter = $injector.get('$filter');\n  var orderBy = $filter('orderBy');\n  var $modal = $injector.get('$modal');\n\n  _momentTimezone2.default.tz.setDefault(config.get('dateFormat:tz'));\n\n  return {\n    restrict: 'E',\n    template: _watch_detail2.default,\n    scope: {\n      watch: '=xpackWatch', // Property names differ due to https://git.io/vSWXV\n      initialHistoryRange: '=',\n      watchHistoryItems: '='\n    },\n    bindToController: true,\n    controllerAs: 'watchDetail',\n    controller: function (_InitAfterBindingsWor) {\n      _inherits(WatchDetailController, _InitAfterBindingsWor);\n\n      function WatchDetailController() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, WatchDetailController);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WatchDetailController.__proto__ || Object.getPrototypeOf(WatchDetailController)).call.apply(_ref, [this].concat(args))), _this), _this.loadWatchHistory = function () {\n          return watchService.loadWatchHistory(_this.watch.id, _this.historyRange).then(function (watchHistoryItems) {\n            _this.isHistoryLoading = false;\n            _this.watchHistoryItems = watchHistoryItems;\n          }).catch(function (err) {\n            return licenseService.checkValidity().then(function () {\n              return _notify.toastNotifications.addDanger(err);\n            });\n          });\n        }, _this.onHistoryRangeChange = function (range) {\n          _this.historyRange = range;\n          _this.isHistoryLoading = true;\n          return _this.loadWatchHistory();\n        }, _this.onActionSortChange = function (field, reverse) {\n          _this.actionStatusTableSortField = field;\n          _this.actionStatusTableSortReverse = reverse;\n        }, _this.applySortToActionStatusTable = function () {\n          _this.sortedActionStatuses = orderBy(_this.watch.watchStatus.actionStatuses, _this.actionStatusTableSortField, _this.actionStatusTableSortReverse);\n        }, _this.onActionAcknowledge = function (actionStatus) {\n          return watchService.acknowledgeWatchAction(_this.watch.id, actionStatus.id).then(function (watchStatus) {\n            _this.watch.updateWatchStatus(watchStatus);\n            _this.applySortToActionStatusTable();\n          }).catch(function (err) {\n            return licenseService.checkValidity().then(function () {\n              return _notify.toastNotifications.addDanger(err);\n            });\n          });\n        }, _this.showErrors = function (actionId, errors) {\n          var errorsModal = $modal.open({\n            template: _errors_display_modal2.default,\n            controller: 'WatcherErrorsDisplayController',\n            controllerAs: 'vm',\n            backdrop: 'static',\n            keyboard: true,\n            ariaLabelledBy: 'watcher__error-display-modal-title',\n            resolve: {\n              params: function params() {\n                return {\n                  title: i18n('xpack.watcher.sections.watchDetail.errorDisplayModalTitleText', {\n                    defaultMessage: 'Errors in the \"{actionId}\" action',\n                    values: { actionId: actionId } }),\n                  errors: errors\n                };\n              }\n            }\n          });\n\n          errorsModal.result.catch(function () {\n            // We need to add this empty Promise catch to avoid\n            // a console error \"Possibly unhandled rejection\"\n          });\n        }, _this.onWatchDeactivate = function () {\n          return watchService.deactivateWatch(_this.watch.id).then(function (watchStatus) {\n            _this.watch.updateWatchStatus(watchStatus);\n          }).catch(function (err) {\n            return licenseService.checkValidity().then(function () {\n              return _notify.toastNotifications.addDanger(err);\n            });\n          });\n        }, _this.onWatchActivate = function () {\n          return watchService.activateWatch(_this.watch.id).then(function (watchStatus) {\n            _this.watch.updateWatchStatus(watchStatus);\n          }).catch(function (err) {\n            return licenseService.checkValidity().then(function () {\n              return _notify.toastNotifications.addDanger(err);\n            });\n          });\n        }, _this.onWatchDelete = function () {\n          var confirmModalOptions = {\n            confirmButtonText: i18n('xpack.watcher.sections.watchDetail.deleteConfirmModal.deleteWatchButtonLabel', {\n              defaultMessage: 'Delete Watch' }),\n            onConfirm: _this.deleteWatch\n          };\n\n          return confirmModal(i18n('xpack.watcher.sections.watchDetail.deleteConfirmModal.description', {\n            defaultMessage: 'This will permanently delete the watch. Are you sure?' }), confirmModalOptions);\n        }, _this.deleteWatch = function () {\n          return watchService.deleteWatch(_this.watch.id).then(function () {\n            _notify.toastNotifications.addSuccess(i18n('xpack.watcher.sections.watchDetail.deleteWatchSuccessNotificationText', {\n              defaultMessage: 'Deleted {watchName}',\n              values: { watchName: _this.watch.displayName } }));\n            _this.close();\n          }).catch(function (err) {\n            return licenseService.checkValidity().then(function () {\n              return _notify.toastNotifications.addDanger(err);\n            });\n          });\n        }, _this.close = function () {\n          kbnUrl.change('/management/elasticsearch/watcher/watches', {});\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n      }\n\n      _createClass(WatchDetailController, [{\n        key: 'initAfterBindings',\n        value: function initAfterBindings($scope) {\n          var _this2 = this;\n\n          // history settings\n          this.isHistoryLoading = false;\n          this.historyRange = this.initialHistoryRange;\n\n          this.actionStatusTableSortField = 'id';\n          this.actionStatusTableSortReverse = false;\n          this.actionErrors = this.watch.watchErrors && this.watch.watchErrors.actionErrors || null;\n\n          this.omitBreadcrumbPages = ['watch', this.watch.id];\n          this.breadcrumb = this.watch.displayName;\n\n          // Reload watch history periodically\n          var refreshInterval = $interval(function () {\n            return _this2.loadWatchHistory();\n          }, _constants.REFRESH_INTERVALS.WATCH_HISTORY);\n          $scope.$on('$destroy', function () {\n            return $interval.cancel(refreshInterval);\n          });\n\n          // react to data and UI changes\n          $scope.$watchMulti(['watchDetail.actionStatusTableSortField', 'watchDetail.actionStatusTableSortReverse'], this.applySortToActionStatusTable);\n        }\n\n        // update the watch history items when the time range changes\n\n      }, {\n        key: 'hasActionStatusTableActions',\n\n\n        /**\n         * Action status table methods\n         */\n\n        get: function get() {\n          return this.sortedActionStatuses.length > 0;\n        }\n\n        /**\n         * Event handler methods\n         */\n\n      }]);\n\n      return WatchDetailController;\n    }(_compat.InitAfterBindingsWorkaround)\n  };\n});",null]}