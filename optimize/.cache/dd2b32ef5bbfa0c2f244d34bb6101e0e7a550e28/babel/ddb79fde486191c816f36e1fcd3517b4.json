{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/aggs/agg_select.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/aggs/agg_select.js","mtime":1567631711609},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /*\n                                                                                                                                                                                                                              * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                              * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                              * this work for additional information regarding copyright\n                                                                                                                                                                                                                              * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                              * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                              * not use this file except in compliance with the License.\n                                                                                                                                                                                                                              * You may obtain a copy of the License at\n                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                              *\n                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                              * software distributed under the License is distributed on an\n                                                                                                                                                                                                                              * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                              * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                              * specific language governing permissions and limitations\n                                                                                                                                                                                                                              * under the License.\n                                                                                                                                                                                                                              */\n\nvar metricAggs = [{\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.averageLabel', { defaultMessage: 'Average' }),\n  value: 'avg'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.cardinalityLabel', { defaultMessage: 'Cardinality' }),\n  value: 'cardinality'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.countLabel', { defaultMessage: 'Count' }),\n  value: 'count'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.filterRatioLabel', { defaultMessage: 'Filter Ratio' }),\n  value: 'filter_ratio'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.maxLabel', { defaultMessage: 'Max' }),\n  value: 'max'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.minLabel', { defaultMessage: 'Min' }),\n  value: 'min'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.percentileLabel', { defaultMessage: 'Percentile' }),\n  value: 'percentile'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.percentileRankLabel', { defaultMessage: 'Percentile Rank' }),\n  value: 'percentile_rank'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.staticValueLabel', { defaultMessage: 'Static Value' }),\n  value: 'static'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.stdDeviationLabel', { defaultMessage: 'Std. Deviation' }),\n  value: 'std_deviation'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.sumLabel', { defaultMessage: 'Sum' }),\n  value: 'sum'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.sumOfSquaresLabel', { defaultMessage: 'Sum of Squares' }),\n  value: 'sum_of_squares'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.topHitLabel', { defaultMessage: 'Top Hit' }),\n  value: 'top_hit'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.valueCountLabel', { defaultMessage: 'Value Count' }),\n  value: 'value_count'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.metricsAggs.varianceLabel', { defaultMessage: 'Variance' }),\n  value: 'variance'\n}];\n\nvar pipelineAggs = [{\n  label: _i18n.i18n.translate('tsvb.aggSelect.pipelineAggs.bucketScriptLabel', { defaultMessage: 'Bucket Script' }),\n  value: 'calculation'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.pipelineAggs.cumulativeSumLabel', { defaultMessage: 'Cumulative Sum' }),\n  value: 'cumulative_sum'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.pipelineAggs.derivativeLabel', { defaultMessage: 'Derivative' }),\n  value: 'derivative'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.pipelineAggs.movingAverageLabel', { defaultMessage: 'Moving Average' }),\n  value: 'moving_average'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.pipelineAggs.positiveOnlyLabel', { defaultMessage: 'Positive Only' }),\n  value: 'positive_only'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.pipelineAggs.serialDifferenceLabel', { defaultMessage: 'Serial Difference' }),\n  value: 'serial_diff'\n}];\n\nvar siblingAggs = [{\n  label: _i18n.i18n.translate('tsvb.aggSelect.siblingAggs.overallAverageLabel', { defaultMessage: 'Overall Average' }),\n  value: 'avg_bucket' }, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.siblingAggs.overallMaxLabel', { defaultMessage: 'Overall Max' }),\n  value: 'max_bucket'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.siblingAggs.overallMinLabel', { defaultMessage: 'Overall Min' }),\n  value: 'min_bucket'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.siblingAggs.overallStdDeviationLabel', { defaultMessage: 'Overall Std. Deviation' }),\n  value: 'std_deviation_bucket'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.siblingAggs.overallSumLabel', { defaultMessage: 'Overall Sum' }),\n  value: 'sum_bucket'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.siblingAggs.overallSumOfSquaresLabel', { defaultMessage: 'Overall Sum of Squares' }),\n  value: 'sum_of_squares_bucket'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.siblingAggs.overallVarianceLabel', { defaultMessage: 'Overall Variance' }),\n  value: 'variance_bucket'\n}];\n\nvar specialAggs = [{\n  label: _i18n.i18n.translate('tsvb.aggSelect.specialAggs.seriesAggLabel', { defaultMessage: 'Series Agg' }),\n  value: 'series_agg'\n}, {\n  label: _i18n.i18n.translate('tsvb.aggSelect.specialAggs.mathLabel', { defaultMessage: 'Math' }),\n  value: 'math'\n}];\n\nvar allAggOptions = [].concat(metricAggs, pipelineAggs, siblingAggs, specialAggs);\n\nfunction filterByPanelType(panelType) {\n  return function (agg) {\n    if (panelType === 'table') return agg.value !== 'series_agg';\n    return true;\n  };\n}\n\nfunction AggSelectUi(props) {\n  var siblings = props.siblings,\n      panelType = props.panelType,\n      value = props.value,\n      onChange = props.onChange,\n      intl = props.intl,\n      rest = _objectWithoutProperties(props, ['siblings', 'panelType', 'value', 'onChange', 'intl']);\n\n  var selectedOption = allAggOptions.find(function (option) {\n    return value === option.value;\n  });\n  var selectedOptions = selectedOption ? [selectedOption] : [];\n\n  var enablePipelines = siblings.some(function (s) {\n    return !!metricAggs.find(function (m) {\n      return m.value === s.type;\n    });\n  });\n  if (siblings.length <= 1) enablePipelines = false;\n\n  var options = void 0;\n  if (panelType === 'metrics') {\n    options = metricAggs;\n  } else {\n    options = [{\n      label: intl.formatMessage({ id: 'tsvb.aggSelect.aggGroups.metricAggLabel', defaultMessage: 'Metric Aggregations' }),\n      options: metricAggs\n    }, {\n      label: intl.formatMessage({\n        id: 'tsvb.aggSelect.aggGroups.parentPipelineAggLabel', defaultMessage: 'Parent Pipeline Aggregations' }),\n      options: pipelineAggs.filter(filterByPanelType(panelType)).map(function (agg) {\n        return _extends({}, agg, { disabled: !enablePipelines });\n      })\n    }, {\n      label: intl.formatMessage({\n        id: 'tsvb.aggSelect.aggGroups.siblingPipelineAggLabel', defaultMessage: 'Sibling Pipeline Aggregations' }),\n      options: siblingAggs.map(function (agg) {\n        return _extends({}, agg, { disabled: !enablePipelines });\n      })\n    }, {\n      label: intl.formatMessage({ id: 'tsvb.aggSelect.aggGroups.specialAggLabel', defaultMessage: 'Special Aggregations' }),\n      options: specialAggs.map(function (agg) {\n        return _extends({}, agg, { disabled: !enablePipelines });\n      })\n    }];\n  }\n\n  var handleChange = function handleChange(selectedOptions) {\n    if (!selectedOptions || selectedOptions.length <= 0) return;\n    onChange(selectedOptions);\n  };\n\n  return _react2.default.createElement(\n    'div',\n    { 'data-test-subj': 'aggSelector' },\n    _react2.default.createElement(_eui.EuiComboBox, _extends({\n      isClearable: false,\n      placeholder: intl.formatMessage({ id: 'tsvb.aggSelect.selectAggPlaceholder', defaultMessage: 'Select aggregation' }),\n      options: options,\n      selectedOptions: selectedOptions,\n      onChange: handleChange,\n      singleSelection: { asPlainText: true }\n    }, rest))\n  );\n}\n\nAggSelectUi.propTypes = {\n  onChange: _propTypes2.default.func,\n  panelType: _propTypes2.default.string,\n  siblings: _propTypes2.default.array,\n  value: _propTypes2.default.string\n};\n\nvar AggSelect = (0, _react3.injectI18n)(AggSelectUi);\nexports.default = AggSelect;\nmodule.exports = exports['default'];",null]}