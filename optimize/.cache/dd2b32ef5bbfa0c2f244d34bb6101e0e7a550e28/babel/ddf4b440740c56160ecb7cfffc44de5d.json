{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/create_index_pattern_wizard.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/create_index_pattern_wizard.js","mtime":1567631711572},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CreateIndexPatternWizard = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _step_index_pattern = require('./components/step_index_pattern');\n\nvar _step_time_field = require('./components/step_time_field');\n\nvar _header = require('./components/header');\n\nvar _loading_state = require('./components/loading_state');\n\nvar _empty_state = require('./components/empty_state');\n\nvar _constants = require('./constants');\n\nvar _lib = require('./lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar CreateIndexPatternWizard = exports.CreateIndexPatternWizard = function (_Component) {\n  _inherits(CreateIndexPatternWizard, _Component);\n\n  function CreateIndexPatternWizard(props) {\n    var _this2 = this;\n\n    _classCallCheck(this, CreateIndexPatternWizard);\n\n    var _this = _possibleConstructorReturn(this, (CreateIndexPatternWizard.__proto__ || Object.getPrototypeOf(CreateIndexPatternWizard)).call(this, props));\n\n    _this.catchAndWarn = function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(asyncFn, errorValue, errorMsg) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return asyncFn;\n\n              case 3:\n                return _context.abrupt('return', _context.sent);\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context['catch'](0);\n\n                _this.setState(function (prevState) {\n                  return {\n                    toasts: prevState.toasts.concat([{\n                      title: errorMsg,\n                      id: errorMsg,\n                      color: 'warning',\n                      iconType: 'alert'\n                    }])\n                  };\n                });\n                return _context.abrupt('return', errorValue);\n\n              case 10:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this2, [[0, 6]]);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.fetchData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var services, indicesFailMsg, clustersFailMsg;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              services = _this.props.services;\n\n\n              _this.setState({\n                allIndices: [],\n                isInitiallyLoadingIndices: true,\n                remoteClustersExist: false\n              });\n\n              indicesFailMsg = _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.management.createIndexPattern.loadIndicesFailMsg',\n                defaultMessage: 'Failed to load indices'\n              });\n              clustersFailMsg = _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.management.createIndexPattern.loadClustersFailMsg',\n                defaultMessage: 'Failed to load remote clusters'\n              });\n\n              // query local and remote indices, updating state independently\n\n              (0, _lib.ensureMinimumTime)(_this.catchAndWarn((0, _lib.getIndices)(services.es, _this.indexPatternCreationType, '*', _constants.MAX_SEARCH_SIZE), [], indicesFailMsg)).then(function (allIndices) {\n                return _this.setState({ allIndices: allIndices, isInitiallyLoadingIndices: false });\n              });\n\n              _this.catchAndWarn(\n              // if we get an error from remote cluster query, supply fallback value that allows user entry.\n              // ['a'] is fallback value\n              (0, _lib.getIndices)(services.es, _this.indexPatternCreationType, '*:*', 1), ['a'], clustersFailMsg).then(function (remoteIndices) {\n                return _this.setState({ remoteClustersExist: !!remoteIndices.length });\n              });\n\n            case 6:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, _this2);\n    }));\n\n    _this.createIndexPattern = function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(timeFieldName, indexPatternId) {\n        var services, indexPattern, emptyPattern, createdId;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                services = _this.props.services;\n                indexPattern = _this.state.indexPattern;\n                _context3.next = 4;\n                return services.indexPatterns.get();\n\n              case 4:\n                emptyPattern = _context3.sent;\n\n\n                Object.assign(emptyPattern, _extends({\n                  id: indexPatternId,\n                  title: indexPattern,\n                  timeFieldName: timeFieldName\n                }, _this.indexPatternCreationType.getIndexPatternMappings()));\n\n                _context3.next = 8;\n                return emptyPattern.create();\n\n              case 8:\n                createdId = _context3.sent;\n\n                if (services.config.get('defaultIndex')) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                _context3.next = 12;\n                return services.config.set('defaultIndex', createdId);\n\n              case 12:\n\n                services.indexPatterns.cache.clear(createdId);\n                services.changeUrl('/management/kibana/indices/' + createdId);\n\n              case 14:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, _this2);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.goToTimeFieldStep = function (indexPattern) {\n      _this.setState({ step: 2, indexPattern: indexPattern });\n    };\n\n    _this.goToIndexPatternStep = function () {\n      _this.setState({ step: 1 });\n    };\n\n    _this.onChangeIncludingSystemIndices = function () {\n      _this.setState(function (state) {\n        return {\n          isIncludingSystemIndices: !state.isIncludingSystemIndices\n        };\n      });\n    };\n\n    _this.removeToast = function (removedToast) {\n      _this.setState(function (prevState) {\n        return {\n          toasts: prevState.toasts.filter(function (toast) {\n            return toast.id !== removedToast.id;\n          })\n        };\n      });\n    };\n\n    _this.indexPatternCreationType = _this.props.services.indexPatternCreationType;\n    _this.state = {\n      step: 1,\n      indexPattern: '',\n      allIndices: [],\n      remoteClustersExist: false,\n      isInitiallyLoadingIndices: true,\n      isIncludingSystemIndices: false,\n      toasts: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateIndexPatternWizard, [{\n    key: 'componentWillMount',\n    value: function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.fetchData();\n\n              case 1:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentWillMount() {\n        return _ref4.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: 'renderHeader',\n    value: function renderHeader() {\n      var isIncludingSystemIndices = this.state.isIncludingSystemIndices;\n\n\n      return _react2.default.createElement(_header.Header, {\n        prompt: this.indexPatternCreationType.renderPrompt(),\n        showSystemIndices: this.indexPatternCreationType.getShowSystemIndices(),\n        isIncludingSystemIndices: isIncludingSystemIndices,\n        onChangeIncludingSystemIndices: this.onChangeIncludingSystemIndices,\n        indexPatternName: this.indexPatternCreationType.getIndexPatternName(),\n        isBeta: this.indexPatternCreationType.getIsBeta()\n      });\n    }\n  }, {\n    key: 'renderContent',\n    value: function renderContent() {\n      var _state = this.state,\n          allIndices = _state.allIndices,\n          isInitiallyLoadingIndices = _state.isInitiallyLoadingIndices,\n          isIncludingSystemIndices = _state.isIncludingSystemIndices,\n          step = _state.step,\n          indexPattern = _state.indexPattern,\n          remoteClustersExist = _state.remoteClustersExist;\n\n\n      if (isInitiallyLoadingIndices) {\n        return _react2.default.createElement(_loading_state.LoadingState, null);\n      }\n\n      var hasDataIndices = allIndices.some(function (_ref5) {\n        var name = _ref5.name;\n        return !name.startsWith('.');\n      });\n      if (!hasDataIndices && !isIncludingSystemIndices && !remoteClustersExist) {\n        return _react2.default.createElement(_empty_state.EmptyState, { onRefresh: this.fetchData });\n      }\n\n      if (step === 1) {\n        var _props = this.props,\n            services = _props.services,\n            initialQuery = _props.initialQuery;\n\n        return _react2.default.createElement(_step_index_pattern.StepIndexPattern, {\n          allIndices: allIndices,\n          initialQuery: indexPattern || initialQuery,\n          isIncludingSystemIndices: isIncludingSystemIndices,\n          esService: services.es,\n          savedObjectsClient: services.savedObjectsClient,\n          indexPatternCreationType: this.indexPatternCreationType,\n          goToNextStep: this.goToTimeFieldStep\n        });\n      }\n\n      if (step === 2) {\n        var _services = this.props.services;\n\n        return _react2.default.createElement(_step_time_field.StepTimeField, {\n          indexPattern: indexPattern,\n          indexPatternsService: _services.indexPatterns,\n          goToPreviousStep: this.goToIndexPatternStep,\n          createIndexPattern: this.createIndexPattern,\n          indexPatternCreationType: this.indexPatternCreationType\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var header = this.renderHeader();\n      var content = this.renderContent();\n\n      return _react2.default.createElement(\n        _react2.default.Fragment,\n        null,\n        _react2.default.createElement(\n          'div',\n          null,\n          header,\n          content\n        ),\n        _react2.default.createElement(_eui.EuiGlobalToastList, {\n          toasts: this.state.toasts,\n          dismissToast: this.removeToast,\n          toastLifeTimeMs: 6000\n        })\n      );\n    }\n  }]);\n\n  return CreateIndexPatternWizard;\n}(_react.Component);\n\nCreateIndexPatternWizard.propTypes = {\n  initialQuery: _propTypes2.default.string,\n  services: _propTypes2.default.shape({\n    es: _propTypes2.default.object.isRequired,\n    indexPatterns: _propTypes2.default.object.isRequired,\n    savedObjectsClient: _propTypes2.default.object.isRequired,\n    indexPatternCreationType: _propTypes2.default.object.isRequired,\n    config: _propTypes2.default.object.isRequired,\n    changeUrl: _propTypes2.default.func.isRequired\n  }).isRequired\n};",null]}