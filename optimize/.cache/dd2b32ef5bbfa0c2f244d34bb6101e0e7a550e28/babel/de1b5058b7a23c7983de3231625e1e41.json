{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/kibana_tilemap_source/kibana_tilemap_source.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/kibana_tilemap_source/kibana_tilemap_source.js","mtime":1567631712021},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KibanaTilemapSource = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _tms_source = require('../tms_source');\n\nvar _tile_layer = require('../../tile_layer');\n\nvar _create_source_editor = require('./create_source_editor');\n\nvar _meta = require('../../../../meta');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _i18n_getters = require('../../../../../common/i18n_getters');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar KibanaTilemapSource = exports.KibanaTilemapSource = function (_AbstractTMSSource) {\n  _inherits(KibanaTilemapSource, _AbstractTMSSource);\n\n  function KibanaTilemapSource() {\n    _classCallCheck(this, KibanaTilemapSource);\n\n    return _possibleConstructorReturn(this, (KibanaTilemapSource.__proto__ || Object.getPrototypeOf(KibanaTilemapSource)).apply(this, arguments));\n  }\n\n  _createClass(KibanaTilemapSource, [{\n    key: 'getImmutableProperties',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = {\n                  label: (0, _i18n_getters.getDataSourceLabel)(),\n                  value: KibanaTilemapSource.title\n                };\n                _context.t1 = _i18n.i18n.translate('xpack.maps.source.kbnTMS.urlLabel', {\n                  defaultMessage: 'Tilemap url'\n                });\n                _context.next = 4;\n                return this.getUrlTemplate();\n\n              case 4:\n                _context.t2 = _context.sent;\n                _context.t3 = {\n                  label: _context.t1,\n                  value: _context.t2\n                };\n                return _context.abrupt('return', [_context.t0, _context.t3]);\n\n              case 7:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getImmutableProperties() {\n        return _ref.apply(this, arguments);\n      }\n\n      return getImmutableProperties;\n    }()\n  }, {\n    key: '_createDefaultLayerDescriptor',\n    value: function _createDefaultLayerDescriptor(options) {\n      return _tile_layer.TileLayer.createDescriptor(_extends({\n        sourceDescriptor: this._descriptor\n      }, options));\n    }\n  }, {\n    key: 'createDefaultLayer',\n    value: function createDefaultLayer(options) {\n      return new _tile_layer.TileLayer({\n        layerDescriptor: this._createDefaultLayerDescriptor(options),\n        source: this\n      });\n    }\n  }, {\n    key: 'getUrlTemplate',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var tilemap;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _meta.getKibanaTileMap)();\n\n              case 2:\n                tilemap = _context2.sent;\n\n                if (tilemap.url) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error(_i18n.i18n.translate('xpack.maps.source.kbnTMS.noConfigErrorMessage', {\n                  defaultMessage: 'Unable to find map.tilemap.url configuration in the kibana.yml'\n                }));\n\n              case 5:\n                return _context2.abrupt('return', tilemap.url);\n\n              case 6:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getUrlTemplate() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return getUrlTemplate;\n    }()\n  }, {\n    key: 'getDisplayName',\n    value: function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.getUrlTemplate();\n\n              case 3:\n                return _context3.abrupt('return', _context3.sent);\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3['catch'](0);\n                return _context3.abrupt('return', '');\n\n              case 9:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 6]]);\n      }));\n\n      function getDisplayName() {\n        return _ref3.apply(this, arguments);\n      }\n\n      return getDisplayName;\n    }()\n  }], [{\n    key: 'createDescriptor',\n    value: function createDescriptor() {\n      return {\n        type: KibanaTilemapSource.type\n      };\n    }\n  }]);\n\n  return KibanaTilemapSource;\n}(_tms_source.AbstractTMSSource);\n\nKibanaTilemapSource.type = 'KIBANA_TILEMAP';\nKibanaTilemapSource.title = _i18n.i18n.translate('xpack.maps.source.kbnTMSTitle', {\n  defaultMessage: 'Custom Tile Map Service'\n});\nKibanaTilemapSource.description = _i18n.i18n.translate('xpack.maps.source.kbnTMSDescription', {\n  defaultMessage: 'Map tiles configured in kibana.yml'\n});\nKibanaTilemapSource.icon = 'logoKibana';\n\nKibanaTilemapSource.renderEditor = function (_ref4) {\n  var onPreviewSource = _ref4.onPreviewSource;\n\n  var previewTilemap = function previewTilemap() {\n    var sourceDescriptor = KibanaTilemapSource.createDescriptor();\n    var source = new KibanaTilemapSource(sourceDescriptor);\n    onPreviewSource(source);\n  };\n  return _react2.default.createElement(_create_source_editor.CreateSourceEditor, { previewTilemap: previewTilemap });\n};",null]}