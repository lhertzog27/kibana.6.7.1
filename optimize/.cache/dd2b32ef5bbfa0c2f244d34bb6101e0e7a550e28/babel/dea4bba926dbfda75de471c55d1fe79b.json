{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/charts/Timeline/TimelineAxis.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/charts/Timeline/TimelineAxis.js","mtime":1567631711869},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash');\n\nvar _reactSticky = require('react-sticky');\n\nvar _reactVis = require('react-vis');\n\nvar _LastTickValue = require('./LastTickValue');\n\nvar _LastTickValue2 = _interopRequireDefault(_LastTickValue);\n\nvar _AgentMarker = require('./AgentMarker');\n\nvar _AgentMarker2 = _interopRequireDefault(_AgentMarker);\n\nvar _variables = require('../../../../style/variables');\n\nvar _formatters = require('../../../../utils/formatters');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Remove any tick that is too close to traceRootDuration\nvar getXAxisTickValues = function getXAxisTickValues(tickValues, traceRootDuration) {\n  if (traceRootDuration == null) {\n    return tickValues;\n  }\n\n  var padding = (tickValues[1] - tickValues[0]) / 2;\n  var lowerBound = traceRootDuration - padding;\n  var upperBound = traceRootDuration + padding;\n\n  return tickValues.filter(function (value) {\n    var isInRange = (0, _lodash.inRange)(value, lowerBound, upperBound);\n    return !isInRange && value !== traceRootDuration;\n  });\n};\n\nfunction TimelineAxis(_ref) {\n  var plotValues = _ref.plotValues,\n      agentMarks = _ref.agentMarks,\n      traceRootDuration = _ref.traceRootDuration;\n  var margins = plotValues.margins,\n      tickValues = plotValues.tickValues,\n      width = plotValues.width,\n      xDomain = plotValues.xDomain,\n      xMax = plotValues.xMax,\n      xScale = plotValues.xScale;\n\n  var tickFormat = (0, _formatters.getTimeFormatter)(xMax);\n  var xAxisTickValues = getXAxisTickValues(tickValues, traceRootDuration);\n\n  return _react2.default.createElement(\n    _reactSticky.Sticky,\n    { disableCompensation: true },\n    function (_ref2) {\n      var style = _ref2.style;\n\n      return _react2.default.createElement(\n        'div',\n        {\n          style: _extends({\n            position: 'absolute',\n            backgroundColor: _variables.colors.white,\n            borderBottom: '1px solid ' + _variables.colors.gray3,\n            height: (0, _variables.px)(margins.top),\n            zIndex: 2,\n            width: '100%'\n          }, style)\n        },\n        _react2.default.createElement(\n          _reactVis.XYPlot,\n          {\n            dontCheckIfEmpty: true,\n            width: width,\n            height: margins.top,\n            margin: {\n              top: margins.top,\n              left: margins.left,\n              right: margins.right\n            },\n            xDomain: xDomain\n          },\n          _react2.default.createElement(_reactVis.XAxis, {\n            hideLine: true,\n            orientation: 'top',\n            tickSize: 0,\n            tickValues: xAxisTickValues,\n            tickFormat: tickFormat,\n            tickPadding: 20,\n            style: {\n              text: { fill: _variables.colors.gray3 }\n            }\n          }),\n          traceRootDuration > 0 && _react2.default.createElement(_LastTickValue2.default, {\n            x: xScale(traceRootDuration),\n            value: tickFormat(traceRootDuration),\n            marginTop: 28\n          }),\n          agentMarks.map(function (agentMark) {\n            return _react2.default.createElement(_AgentMarker2.default, {\n              key: agentMark.name,\n              agentMark: agentMark,\n              x: xScale(agentMark.us)\n            });\n          })\n        )\n      );\n    }\n  );\n}\n\nTimelineAxis.propTypes = {\n  header: _propTypes2.default.node,\n  plotValues: _propTypes2.default.object.isRequired,\n  agentMarks: _propTypes2.default.array\n};\n\nTimelineAxis.defaultProps = {\n  agentMarks: []\n};\n\nexports.default = TimelineAxis;\nmodule.exports = exports['default'];",null]}