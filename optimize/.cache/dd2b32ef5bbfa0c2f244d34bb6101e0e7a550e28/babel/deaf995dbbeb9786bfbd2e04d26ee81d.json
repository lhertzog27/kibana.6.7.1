{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/components/threshold_watch_expression/components/threshold_watch_group_by/threshold_watch_group_by.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/components/threshold_watch_expression/components/threshold_watch_group_by/threshold_watch_group_by.js","mtime":1567631712340},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _modules = require('ui/modules');\n\nvar _threshold_watch_group_by = require('./threshold_watch_group_by.html');\n\nvar _threshold_watch_group_by2 = _interopRequireDefault(_threshold_watch_group_by);\n\nvar _threshold_watch_base = require('../threshold_watch_base');\n\nrequire('plugins/watcher/services/html_id_generator');\n\nrequire('plugins/watcher/components/xpack_aria_describes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar app = _modules.uiModules.get('xpack/watcher');\n\napp.directive('thresholdWatchGroupBy', function ($injector, i18n) {\n  var htmlIdGeneratorFactory = $injector.get('xpackWatcherHtmlIdGeneratorFactory');\n\n  return {\n    restrict: 'E',\n    template: _threshold_watch_group_by2.default,\n    scope: {\n      itemId: '@',\n      groupByTypes: '=',\n      groupByType: '=',\n      termSize: '=',\n      termFields: '=',\n      termField: '=',\n      isOpen: '=',\n      isVisible: '=',\n      onOpen: '=',\n      onClose: '=',\n      onChange: '=',\n      onValid: '=',\n      onInvalid: '=',\n      onDirty: '=',\n      onPristine: '='\n    },\n    bindToController: true,\n    controllerAs: 'thresholdWatchGroupBy',\n    controller: function (_ThresholdWatchBaseCo) {\n      _inherits(ThresholdWatchGroupByController, _ThresholdWatchBaseCo);\n\n      function ThresholdWatchGroupByController() {\n        _classCallCheck(this, ThresholdWatchGroupByController);\n\n        return _possibleConstructorReturn(this, (ThresholdWatchGroupByController.__proto__ || Object.getPrototypeOf(ThresholdWatchGroupByController)).apply(this, arguments));\n      }\n\n      _createClass(ThresholdWatchGroupByController, [{\n        key: 'initAfterBindings',\n        value: function initAfterBindings($scope) {\n          var _this2 = this;\n\n          this.makeId = htmlIdGeneratorFactory.create();\n\n          $scope.$watchMulti(['thresholdWatchGroupBy.groupByType', 'thresholdWatchGroupBy.termSize', 'thresholdWatchGroupBy.termField'], this.onChange);\n\n          $scope.$watch('thresholdWatchGroupBy.groupByType', function () {\n            _this2.resetForm();\n            _this2.checkDirty();\n          });\n\n          $scope.$watch('thresholdWatchGroupBy.form.$valid', this.checkValidity);\n          $scope.$watch('thresholdWatchGroupBy.form.$dirty', this.checkDirty);\n        }\n      }, {\n        key: 'itemDescription',\n        get: function get() {\n          var itemDescription = this.groupByType && this.groupByType.sizeRequired ? i18n('xpack.watcher.thresholdWatchExpression.groupBy.groupedItemDescription', {\n            defaultMessage: 'Grouped over'\n          }) : i18n('xpack.watcher.thresholdWatchExpression.groupBy.itemDescription', {\n            defaultMessage: 'Over'\n          });\n\n          return itemDescription;\n        }\n      }, {\n        key: 'itemValue',\n        get: function get() {\n          if (!this.groupByType) {\n            return;\n          }\n\n          var sizeRequired = this.groupByType.sizeRequired;\n          var typeLabel = this.groupByType.label;\n          var sizeLabel = sizeRequired && this.termSize ? ' ' + this.termSize : '';\n          var fieldLabel = sizeRequired && this.termField ? ' \\'' + this.termField.name + '\\'' : '';\n\n          return '' + typeLabel + sizeLabel + fieldLabel;\n        }\n      }]);\n\n      return ThresholdWatchGroupByController;\n    }(_threshold_watch_base.ThresholdWatchBaseController)\n  };\n});",null]}