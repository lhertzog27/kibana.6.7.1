{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/common/lib/errors.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/common/lib/errors.js","mtime":1567631711911},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n// helper to correctly set the prototype of custom error constructor\nfunction setErrorPrototype(CustomError) {\n  CustomError.prototype = Object.create(Error.prototype, {\n    constructor: {\n      value: Error,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  Object.setPrototypeOf(CustomError, Error);\n}\n\n// helper to create a custom error by name\nfunction createError(name) {\n  function CustomError() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(Error, [null].concat(args)))();\n    instance.name = this.name = name;\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(instance, CustomError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        get: function get() {\n          return instance.stack;\n        }\n      });\n    }\n    return instance;\n  }\n\n  setErrorPrototype(CustomError);\n\n  return CustomError;\n}\n\nvar RenderError = exports.RenderError = createError('RenderError');",null]}