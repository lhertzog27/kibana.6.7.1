{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/sections/job_create/steps/step_metrics.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/sections/job_create/steps/step_metrics.js","mtime":1567631712289},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StepMetrics = exports.StepMetricsUi = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nvar _services = require('../../../services');\n\nvar _components = require('../../components');\n\nvar _components2 = require('./components');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar whiteListedMetricByFieldType = {\n  numeric: {\n    avg: true,\n    max: true,\n    min: true,\n    sum: true,\n    value_count: true\n  },\n\n  date: {\n    max: true,\n    min: true,\n    value_count: true\n  }\n};\n\nvar StepMetricsUi = exports.StepMetricsUi = function (_Component) {\n  _inherits(StepMetricsUi, _Component);\n\n  function StepMetricsUi(props) {\n    _classCallCheck(this, StepMetricsUi);\n\n    var _this = _possibleConstructorReturn(this, (StepMetricsUi.__proto__ || Object.getPrototypeOf(StepMetricsUi)).call(this, props));\n\n    _this.onSelectField = function (field) {\n      var _this$props = _this.props,\n          metrics = _this$props.fields.metrics,\n          onFieldsChange = _this$props.onFieldsChange;\n\n\n      var newMetrics = metrics.concat(_extends({}, field, {\n        types: []\n      }));\n\n      onFieldsChange({ metrics: newMetrics });\n    };\n\n    _this.onRemoveField = function (field) {\n      var _this$props2 = _this.props,\n          metrics = _this$props2.fields.metrics,\n          onFieldsChange = _this$props2.onFieldsChange;\n\n\n      var newMetrics = metrics.filter(function (_ref) {\n        var name = _ref.name;\n        return name !== field.name;\n      });\n\n      onFieldsChange({ metrics: newMetrics });\n    };\n\n    _this.setMetric = function (fieldName, metricType, isSelected) {\n      var _this$props3 = _this.props,\n          metrics = _this$props3.fields.metrics,\n          onFieldsChange = _this$props3.onFieldsChange;\n\n\n      var newMetrics = [].concat(_toConsumableArray(metrics));\n\n      var _newMetrics$find = newMetrics.find(function (_ref2) {\n        var name = _ref2.name;\n        return name === fieldName;\n      }),\n          updatedTypes = _newMetrics$find.types;\n\n      if (isSelected) {\n        updatedTypes.push(metricType);\n      } else {\n        updatedTypes.splice(updatedTypes.indexOf(metricType), 1);\n      }\n\n      onFieldsChange({ metrics: newMetrics });\n    };\n\n    _this.renderErrors = function () {\n      var _this$props4 = _this.props,\n          areStepErrorsVisible = _this$props4.areStepErrorsVisible,\n          fieldErrors = _this$props4.fieldErrors;\n      var errorMetrics = fieldErrors.metrics;\n\n      // Hide the error if there are no errors, which can occur if the errors are visible\n      // but the user then addresses all of them.\n\n      if (!areStepErrorsVisible || !errorMetrics) {\n        return null;\n      }\n\n      return _react2.default.createElement(_components2.StepError, { title: errorMetrics });\n    };\n\n    _this.chooserColumns = [{\n      field: 'name',\n      name: 'Field',\n      sortable: true,\n      width: '240px'\n    }, {\n      field: 'type',\n      name: 'Type',\n      truncateText: true,\n      sortable: true,\n      width: '100px'\n    }];\n\n    var metricTypesConfig = [{\n      type: 'avg',\n      label: _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.rollupJobs.create.stepMetrics.checkboxAverageLabel',\n        defaultMessage: 'Average'\n      })\n    }, {\n      type: 'max',\n      label: _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.rollupJobs.create.stepMetrics.checkboxMaxLabel',\n        defaultMessage: 'Maximum'\n      })\n    }, {\n      type: 'min',\n      label: _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.rollupJobs.create.stepMetrics.checkboxMinLabel',\n        defaultMessage: 'Minimum'\n      })\n    }, {\n      type: 'sum',\n      label: _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.rollupJobs.create.stepMetrics.checkboxSumLabel',\n        defaultMessage: 'Sum'\n      })\n    }, {\n      type: 'value_count',\n      label: _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.rollupJobs.create.stepMetrics.checkboxValueCountLabel',\n        defaultMessage: 'Value count'\n      })\n    }];\n\n    _this.listColumns = _this.chooserColumns.concat({\n      type: 'metrics',\n      name: 'Metrics',\n      render: function render(_ref3) {\n        var fieldName = _ref3.name,\n            fieldType = _ref3.type,\n            types = _ref3.types;\n\n        var checkboxes = metricTypesConfig.map(function (_ref4) {\n          var type = _ref4.type,\n              label = _ref4.label;\n\n          var isAllowed = whiteListedMetricByFieldType[fieldType][type];\n\n          if (!isAllowed) {\n            return;\n          }\n\n          var isSelected = types.includes(type);\n\n          return _react2.default.createElement(\n            _eui.EuiFlexItem,\n            {\n              grow: false,\n              key: fieldName + '-' + type + '-checkbox'\n            },\n            _react2.default.createElement(_eui.EuiCheckbox, {\n              id: fieldName + '-' + type + '-checkbox',\n              label: label,\n              checked: isSelected,\n              onChange: function onChange() {\n                return _this.setMetric(fieldName, type, !isSelected);\n              }\n            })\n          );\n        }).filter(function (checkbox) {\n          return checkbox !== undefined;\n        });\n\n        return _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { wrap: true, gutterSize: 'm' },\n          checkboxes\n        );\n      }\n    });\n    return _this;\n  }\n\n  _createClass(StepMetricsUi, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          fields = _props.fields,\n          metricsFields = _props.metricsFields;\n      var metrics = fields.metrics;\n\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { justifyContent: 'spaceBetween' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiTitle,\n              null,\n              _react2.default.createElement(\n                'h3',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.create.stepMetricsTitle',\n                  defaultMessage: 'Metrics (optional)'\n                })\n              )\n            ),\n            _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n            _react2.default.createElement(\n              _eui.EuiText,\n              null,\n              _react2.default.createElement(\n                'p',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.rollupJobs.create.stepMetricsDescription',\n                  defaultMessage: 'Select the metrics to collect while rolling up data. By default, only doc_counts are collected for each group.'\n                })\n              )\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false, className: 'rollupJobWizardStepActions' },\n            _react2.default.createElement(\n              _eui.EuiButtonEmpty,\n              {\n                size: 's',\n                flush: 'right',\n                href: _services.metricsDetailsUrl,\n                target: '_blank',\n                iconType: 'help'\n              },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.rollupJobs.create.stepMetrics.readDocsButtonLabel',\n                defaultMessage: 'Metrics docs'\n              })\n            )\n          )\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, null),\n        _react2.default.createElement(_components.FieldList, {\n          columns: this.listColumns,\n          fields: metrics,\n          onRemoveField: this.onRemoveField,\n          emptyMessage: _react2.default.createElement(\n            'p',\n            null,\n            'No metrics fields added'\n          ),\n          addButton: _react2.default.createElement(_components2.FieldChooser, {\n            buttonLabel: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.rollupJobs.create.stepMetrics.fieldsChooserLabel',\n              defaultMessage: 'Add metrics fields'\n            }),\n            columns: this.chooserColumns,\n            fields: metricsFields,\n            selectedFields: metrics,\n            onSelectField: this.onSelectField\n          })\n        }),\n        this.renderErrors()\n      );\n    }\n  }]);\n\n  return StepMetricsUi;\n}(_react.Component);\n\nStepMetricsUi.propTypes = {\n  fields: _propTypes2.default.object.isRequired,\n  onFieldsChange: _propTypes2.default.func.isRequired,\n  fieldErrors: _propTypes2.default.object.isRequired,\n  areStepErrorsVisible: _propTypes2.default.bool.isRequired,\n  metricsFields: _propTypes2.default.array.isRequired\n};\nvar StepMetrics = exports.StepMetrics = (0, _react3.injectI18n)(StepMetricsUi);",null]}