{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/modals/confirm_modal_promise.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/modals/confirm_modal_promise.js","mtime":1567631711744},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('../modules');\n\nrequire('./');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _module = _modules.uiModules.get('kibana');\n\n/**\n * @typedef {Object} PromisifiedConfirmOptions\n * @property {String} confirmButtonText\n * @property {String=} cancelButtonText\n */\n\n/**\n * A \"promisified\" version of ConfirmModal that binds onCancel and onConfirm to\n * Resolve and Reject methods.\n */\n_module.factory('confirmModalPromise', function (Promise, confirmModal) {\n  /**\n   * @param {String} message\n   * @param {PromisifiedConfirmOptions} customOptions\n   */\n  return function (message, customOptions) {\n    return new Promise(function (resolve, reject) {\n      var defaultOptions = {\n        onConfirm: resolve,\n        onCancel: reject\n      };\n      var confirmOptions = Object.assign(defaultOptions, customOptions);\n      confirmModal(message, confirmOptions);\n    });\n  };\n});",null]}