{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/server/lib/key_case_converter.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/server/lib/key_case_converter.js","mtime":1567631712364},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertKeysToSnakeCaseDeep = convertKeysToSnakeCaseDeep;\nexports.convertKeysToCamelCaseDeep = convertKeysToCamelCaseDeep;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Note: This function uses _.clone. This will clone objects created by constructors other than Object\n// to plain Object objects. Uncloneable values such as functions, DOM nodes, Maps, Sets, and WeakMaps\n// will be cloned to the empty object.\nfunction convertKeysToSpecifiedCaseDeep(object, caseConversionFunction) {\n\n  // Base case\n  if (!(_lodash2.default.isPlainObject(object) || _lodash2.default.isArray(object))) {\n    return object;\n  }\n\n  // Clone (so we don't modify the original object that was passed in)\n  var newObject = void 0;\n  if (Array.isArray(object)) {\n    newObject = object.slice(0);\n  } else {\n    newObject = _lodash2.default.clone(object);\n\n    // Convert top-level keys\n    newObject = _lodash2.default.mapKeys(newObject, function (value, key) {\n      return caseConversionFunction(key);\n    });\n  }\n\n  // Recursively convert nested object keys\n  _lodash2.default.forEach(newObject, function (value, key) {\n    return newObject[key] = convertKeysToSpecifiedCaseDeep(value, caseConversionFunction);\n  });\n\n  return newObject;\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */\n\nfunction validateObject(object) {\n  if (!(_lodash2.default.isPlainObject(object) || _lodash2.default.isArray(object))) {\n    throw new Error('Specified object should be an Object or Array');\n  }\n}\n\nfunction convertKeysToSnakeCaseDeep(object) {\n  validateObject(object);\n  return convertKeysToSpecifiedCaseDeep(object, _lodash2.default.snakeCase);\n}\n\nfunction convertKeysToCamelCaseDeep(object) {\n  validateObject(object);\n  return convertKeysToSpecifiedCaseDeep(object, _lodash2.default.camelCase);\n}",null]}