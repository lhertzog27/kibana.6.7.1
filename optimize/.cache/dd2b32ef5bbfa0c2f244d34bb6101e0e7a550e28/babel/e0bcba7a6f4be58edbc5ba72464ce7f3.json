{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/logstash/public/models/pipeline_list_item/pipeline_list_item.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/logstash/public/models/pipeline_list_item/pipeline_list_item.js","mtime":1567631712008},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PipelineListItem = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * or more contributor license agreements. Licensed under the Elastic License;\nyou may not use this file except in compliance with the Elastic License.\nn\nvar _lodash = require('lodash');\n\nvar _get_search_value = require('plugins/logstash/lib/get_search_value');\n\nvar _get_moment = require('plugins/logstash/../common/lib/get_moment');\n\nvar _constants = require('../../../common/constants');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Represents the model for listing pipelines in the UI\n * @param {string} props.id Named Id of the pipeline\n * @param {string} props.description Description for the pipeline\n * @param {string} props.lastModified Timestamp when the config was last modified\n * @param {string} props.username User who created or updated the pipeline\n */\nvar PipelineListItem = exports.PipelineListItem = function () {\n  function PipelineListItem(props) {\n    _classCallCheck(this, PipelineListItem);\n\n    this.id = props.id;\n    this.origin = props.origin;\n    this.description = props.description;\n    this.username = props.username;\n\n    if (props.lastModified) {\n      this.lastModified = (0, _get_moment.getMoment)(props.lastModified);\n      this.lastModifiedHumanized = (0, _lodash.capitalize)(this.lastModified.fromNow());\n    }\n  }\n\n  _createClass(PipelineListItem, [{\n    key: 'searchValue',\n    get: function get() {\n      return (0, _get_search_value.getSearchValue)(this, ['id']);\n    }\n  }, {\n    key: 'isCentrallyManaged',\n    get: function get() {\n      return this.origin === _constants.PIPELINE.ORIGIN.CCM;\n    }\n  }], [{\n    key: 'fromUpstreamJSON',\n    value: function fromUpstreamJSON(pipelineListItem) {\n      var props = (0, _lodash.pick)(pipelineListItem, ['id', 'description', 'username']);\n      props.origin = _constants.PIPELINE.ORIGIN.CCM;\n      props.lastModified = pipelineListItem.last_modified;\n      return new PipelineListItem(props);\n    }\n  }, {\n    key: 'fromUpstreamMonitoringJSON',\n    value: function fromUpstreamMonitoringJSON(pipelineListItem) {\n      var props = (0, _lodash.pick)(pipelineListItem, ['id']);\n      props.origin = _constants.PIPELINE.ORIGIN.OTHER;\n      return new PipelineListItem(props);\n    }\n  }]);\n\n  return PipelineListItem;\n}();",null]}