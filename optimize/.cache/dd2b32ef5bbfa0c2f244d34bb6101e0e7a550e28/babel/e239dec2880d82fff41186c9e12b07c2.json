{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/privilege/get_privileges.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/privilege/get_privileges.js","mtime":1567631712062},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrivileges = getPrivileges;\n\nvar _ml_api_service = require('plugins/ml/services/ml_api_service');\n\nvar _upgrade_service = require('../services/upgrade_service');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction getPrivileges() {\n  var privileges = {\n    canGetJobs: false,\n    canCreateJob: false,\n    canDeleteJob: false,\n    canOpenJob: false,\n    canCloseJob: false,\n    canForecastJob: false,\n    canGetDatafeeds: false,\n    canStartStopDatafeed: false,\n    canUpdateJob: false,\n    canUpdateDatafeed: false,\n    canPreviewDatafeed: false,\n    canGetCalendars: false,\n    canCreateCalendar: false,\n    canDeleteCalendar: false,\n    canGetFilters: false,\n    canCreateFilter: false,\n    canDeleteFilter: false,\n    canFindFileStructure: false\n  };\n\n  return new Promise(function (resolve, reject) {\n    var priv = {\n      cluster: ['cluster:monitor/xpack/ml/job/get', 'cluster:monitor/xpack/ml/job/stats/get', 'cluster:monitor/xpack/ml/datafeeds/get', 'cluster:monitor/xpack/ml/datafeeds/stats/get', 'cluster:monitor/xpack/ml/calendars/get', 'cluster:admin/xpack/ml/job/put', 'cluster:admin/xpack/ml/job/delete', 'cluster:admin/xpack/ml/job/update', 'cluster:admin/xpack/ml/job/open', 'cluster:admin/xpack/ml/job/close', 'cluster:admin/xpack/ml/job/forecast', 'cluster:admin/xpack/ml/datafeeds/put', 'cluster:admin/xpack/ml/datafeeds/delete', 'cluster:admin/xpack/ml/datafeeds/start', 'cluster:admin/xpack/ml/datafeeds/stop', 'cluster:admin/xpack/ml/datafeeds/update', 'cluster:admin/xpack/ml/datafeeds/preview', 'cluster:admin/xpack/ml/calendars/put', 'cluster:admin/xpack/ml/calendars/delete', 'cluster:admin/xpack/ml/calendars/jobs/update', 'cluster:admin/xpack/ml/calendars/events/post', 'cluster:admin/xpack/ml/calendars/events/delete', 'cluster:admin/xpack/ml/filters/put', 'cluster:admin/xpack/ml/filters/get', 'cluster:admin/xpack/ml/filters/update', 'cluster:admin/xpack/ml/filters/delete', 'cluster:monitor/xpack/ml/findfilestructure']\n    };\n\n    _ml_api_service.ml.checkPrivilege(priv).then(function (resp) {\n\n      if (resp.upgradeInProgress === true) {\n        (0, _upgrade_service.setUpgradeInProgress)(true);\n        // only check for getting endpoints\n        // force all to be true if security is disabled\n        setGettingPrivileges(resp.cluster, privileges, resp.securityDisabled === true);\n      } else if (resp.securityDisabled) {\n        // if security has been disabled, securityDisabled is returned from the endpoint\n        // therefore set all privileges to true\n        Object.keys(privileges).forEach(function (k) {\n          return privileges[k] = true;\n        });\n      } else {\n        setGettingPrivileges(resp.cluster, privileges);\n        setActionPrivileges(resp.cluster, privileges);\n      }\n\n      resolve(privileges);\n    }).catch(function () {\n      reject(privileges);\n    });\n  });\n}\n\nfunction setGettingPrivileges() {\n  var cluster = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var privileges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var forceTrue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (forceTrue || cluster['cluster:monitor/xpack/ml/job/get'] && cluster['cluster:monitor/xpack/ml/job/stats/get']) {\n    privileges.canGetJobs = true;\n  }\n\n  if (forceTrue || cluster['cluster:monitor/xpack/ml/datafeeds/get'] && cluster['cluster:monitor/xpack/ml/datafeeds/stats/get']) {\n    privileges.canGetDatafeeds = true;\n  }\n\n  if (forceTrue || cluster['cluster:monitor/xpack/ml/calendars/get']) {\n    privileges.canGetCalendars = true;\n  }\n\n  if (forceTrue || cluster['cluster:admin/xpack/ml/filters/get']) {\n    privileges.canGetFilters = true;\n  }\n\n  if (forceTrue || cluster['cluster:monitor/xpack/ml/findfilestructure']) {\n    privileges.canFindFileStructure = true;\n  }\n}\n\nfunction setActionPrivileges() {\n  var cluster = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var privileges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (cluster['cluster:admin/xpack/ml/job/put'] && cluster['cluster:admin/xpack/ml/job/open'] && cluster['cluster:admin/xpack/ml/datafeeds/put']) {\n    privileges.canCreateJob = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/job/update']) {\n    privileges.canUpdateJob = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/job/open']) {\n    privileges.canOpenJob = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/job/close']) {\n    privileges.canCloseJob = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/job/forecast']) {\n    privileges.canForecastJob = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/job/delete'] && cluster['cluster:admin/xpack/ml/datafeeds/delete']) {\n    privileges.canDeleteJob = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/job/open'] && cluster['cluster:admin/xpack/ml/datafeeds/start'] && cluster['cluster:admin/xpack/ml/datafeeds/stop']) {\n    privileges.canStartStopDatafeed = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/datafeeds/update']) {\n    privileges.canUpdateDatafeed = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/datafeeds/preview']) {\n    privileges.canPreviewDatafeed = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/calendars/put'] && cluster['cluster:admin/xpack/ml/calendars/jobs/update'] && cluster['cluster:admin/xpack/ml/calendars/events/post']) {\n    privileges.canCreateCalendar = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/calendars/delete'] && cluster['cluster:admin/xpack/ml/calendars/events/delete']) {\n    privileges.canDeleteCalendar = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/filters/put'] && cluster['cluster:admin/xpack/ml/filters/update']) {\n    privileges.canCreateFilter = true;\n  }\n\n  if (cluster['cluster:admin/xpack/ml/filters/delete']) {\n    privileges.canDeleteFilter = true;\n  }\n}",null]}