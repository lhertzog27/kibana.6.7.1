{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/change_password_form/change_password_form.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/change_password_form/change_password_form.js","mtime":1567631712299},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('ui/modules');\n\nvar _change_password_form = require('./change_password_form.html');\n\nvar _change_password_form2 = _interopRequireDefault(_change_password_form);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar _module = _modules.uiModules.get('security', ['kibana']);\n_module.directive('kbnChangePasswordForm', function () {\n  return {\n    template: _change_password_form2.default,\n    scope: {\n      requireCurrentPassword: '=',\n      showKibanaWarning: '=',\n      onChangePassword: '&'\n    },\n    restrict: 'E',\n    replace: true,\n    controllerAs: 'changePasswordController',\n    controller: function controller($scope) {\n      var _this = this;\n\n      this.currentPassword = null;\n      this.newPassword = null;\n      this.newPasswordConfirmation = null;\n      this.isFormVisible = false;\n      this.isIncorrectPassword = false;\n\n      this.showForm = function () {\n        _this.isFormVisible = true;\n      };\n\n      this.hideForm = function () {\n        $scope.changePasswordForm.$setPristine();\n        $scope.changePasswordForm.$setUntouched();\n        _this.currentPassword = null;\n        _this.newPassword = null;\n        _this.newPasswordConfirmation = null;\n        _this.isFormVisible = false;\n        _this.isIncorrectPassword = false;\n      };\n\n      this.onIncorrectPassword = function () {\n        _this.isIncorrectPassword = true;\n      };\n    }\n  };\n});",null]}