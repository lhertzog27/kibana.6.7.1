{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/settings/filter_lists/list/filter_lists.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/settings/filter_lists/list/filter_lists.js","mtime":1567631712067},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FilterLists = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp; /*\n                    * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                    * or more contributor license agreements. Licensed under the Elastic License;\n                    * you may not use this file except in compliance with the Elastic License.\n                    */\n\n/*\n * React table for displaying a table of filter lists.\n */\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _eui = require('@elastic/eui');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _notify = require('ui/notify');\n\nvar _header = require('./header');\n\nvar _table = require('./table');\n\nvar _ml_api_service = require('../../../services/ml_api_service');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FilterLists = exports.FilterLists = (0, _react3.injectI18n)((_temp = _class = function (_Component) {\n  _inherits(_class, _Component);\n\n  function _class(props) {\n    _classCallCheck(this, _class);\n\n    var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props));\n\n    _this.setFilterLists = function (filterLists) {\n      // Check selected filter lists still exist.\n      _this.setState(function (prevState) {\n        var loadedFilterIds = filterLists.map(function (filterList) {\n          return filterList.filter_id;\n        });\n        var selectedFilterLists = prevState.selectedFilterLists.filter(function (filterList) {\n          return loadedFilterIds.indexOf(filterList.filter_id) !== -1;\n        });\n\n        return {\n          filterLists: filterLists,\n          selectedFilterLists: selectedFilterLists\n        };\n      });\n    };\n\n    _this.setSelectedFilterLists = function (selectedFilterLists) {\n      _this.setState({ selectedFilterLists: selectedFilterLists });\n    };\n\n    _this.refreshFilterLists = function () {\n      var intl = _this.props.intl;\n      // Load the list of filters.\n\n      _ml_api_service.ml.filters.filtersStats().then(function (filterLists) {\n        _this.setFilterLists(filterLists);\n      }).catch(function (resp) {\n        console.log('Error loading list of filters:', resp);\n        _notify.toastNotifications.addDanger(intl.formatMessage({\n          id: 'xpack.ml.settings.filterLists.filterLists.loadingFilterListsErrorMessage',\n          defaultMessage: 'An error occurred loading the filter lists'\n        }));\n      });\n    };\n\n    _this.state = {\n      filterLists: [],\n      selectedFilterLists: []\n    };\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.refreshFilterLists();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          filterLists = _state.filterLists,\n          selectedFilterLists = _state.selectedFilterLists;\n      var _props = this.props,\n          canCreateFilter = _props.canCreateFilter,\n          canDeleteFilter = _props.canDeleteFilter;\n\n\n      return _react2.default.createElement(\n        _eui.EuiPage,\n        { className: 'ml-list-filter-lists' },\n        _react2.default.createElement(\n          _eui.EuiPageContent,\n          {\n            className: 'ml-list-filter-lists-content',\n            verticalPosition: 'center',\n            horizontalPosition: 'center'\n          },\n          _react2.default.createElement(_header.FilterListsHeader, {\n            totalCount: filterLists.length,\n            refreshFilterLists: this.refreshFilterLists\n          }),\n          _react2.default.createElement(_table.FilterListsTable, {\n            canCreateFilter: canCreateFilter,\n            canDeleteFilter: canDeleteFilter,\n            filterLists: filterLists,\n            selectedFilterLists: selectedFilterLists,\n            setSelectedFilterLists: this.setSelectedFilterLists,\n            refreshFilterLists: this.refreshFilterLists\n          })\n        )\n      );\n    }\n  }]);\n\n  return _class;\n}(_react.Component), _class.displayName = 'FilterLists', _class.propTypes = {\n  canCreateFilter: _propTypes.PropTypes.bool.isRequired,\n  canDeleteFilter: _propTypes.PropTypes.bool.isRequired\n}, _temp));",null]}