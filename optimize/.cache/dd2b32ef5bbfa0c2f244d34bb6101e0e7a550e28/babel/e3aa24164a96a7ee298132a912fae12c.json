{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/data_format_picker.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/metrics/public/components/data_format_picker.js","mtime":1567631711611},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _eui = require('@elastic/eui');\n\nvar _durations = require('./lib/durations');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar durationFormatTest = /[pnumshdwMY]+,[pnumshdwMY]+/;\n\nvar DataFormatPicker = function (_Component) {\n  _inherits(DataFormatPicker, _Component);\n\n  function DataFormatPicker(props) {\n    _classCallCheck(this, DataFormatPicker);\n\n    var _this = _possibleConstructorReturn(this, (DataFormatPicker.__proto__ || Object.getPrototypeOf(DataFormatPicker)).call(this, props));\n\n    _this.handleChange = _this.handleChange.bind(_this);\n    _this.handleCustomChange = _this.handleCustomChange.bind(_this);\n    var from = 'ms';\n    var to = 'ms';\n    var decimals = 2;\n    if (durationFormatTest.test(props.value)) {\n      var _props$value$split = props.value.split(',');\n\n      var _props$value$split2 = _slicedToArray(_props$value$split, 3);\n\n      from = _props$value$split2[0];\n      to = _props$value$split2[1];\n      decimals = _props$value$split2[2];\n    }\n    _this.state = {\n      from: from,\n      to: to,\n      decimals: decimals\n    };\n    return _this;\n  }\n\n  _createClass(DataFormatPicker, [{\n    key: 'handleCustomChange',\n    value: function handleCustomChange() {\n      this.props.onChange([{ value: this.custom && this.custom.value || '' }]);\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(selectedOptions) {\n      if (selectedOptions.length < 1) {\n        return;\n      }\n\n      if (selectedOptions[0].value === 'custom') {\n        this.handleCustomChange();\n      } else if (selectedOptions[0].value === 'duration') {\n        var _state = this.state,\n            from = _state.from,\n            to = _state.to,\n            decimals = _state.decimals;\n\n        this.props.onChange([{\n          value: from + ',' + to + ',' + decimals\n        }]);\n      } else {\n        this.props.onChange(selectedOptions);\n      }\n    }\n  }, {\n    key: 'handleDurationChange',\n    value: function handleDurationChange(name) {\n      var _this2 = this;\n\n      return function (selectedOptions) {\n        if (selectedOptions.length < 1) {\n          return;\n        }\n\n        var newValue = void 0;\n        if (name === 'decimals') {\n          newValue = _this2.decimals.value;\n        } else {\n          newValue = selectedOptions[0].value;\n        }\n\n        _this2.setState(_defineProperty({}, name, newValue), function () {\n          var _state2 = _this2.state,\n              from = _state2.from,\n              to = _state2.to,\n              decimals = _state2.decimals;\n\n          _this2.props.onChange([{\n            value: from + ',' + to + ',' + decimals\n          }]);\n        });\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var htmlId = (0, _eui.htmlIdGenerator)();\n      var value = this.props.value || '';\n      var defaultValue = value;\n      if (!_lodash2.default.includes(['bytes', 'number', 'percent'], value)) {\n        defaultValue = 'custom';\n      }\n      if (durationFormatTest.test(value)) {\n        defaultValue = 'duration';\n      }\n      var intl = this.props.intl;\n\n      var options = [{ label: intl.formatMessage({ id: 'tsvb.dataFormatPicker.bytesLabel', defaultMessage: 'Bytes' }), value: 'bytes' }, { label: intl.formatMessage({ id: 'tsvb.dataFormatPicker.numberLabel', defaultMessage: 'Number' }), value: 'number' }, { label: intl.formatMessage({ id: 'tsvb.dataFormatPicker.percentLabel', defaultMessage: 'Percent' }), value: 'percent' }, { label: intl.formatMessage({ id: 'tsvb.dataFormatPicker.durationLabel', defaultMessage: 'Duration' }), value: 'duration' }, { label: intl.formatMessage({ id: 'tsvb.dataFormatPicker.customLabel', defaultMessage: 'Custom' }), value: 'custom' }];\n      var selectedOption = options.find(function (option) {\n        return defaultValue === option.value;\n      });\n\n      var custom = void 0;\n      if (defaultValue === 'duration') {\n        var _value$split = value.split(','),\n            _value$split2 = _slicedToArray(_value$split, 3),\n            from = _value$split2[0],\n            to = _value$split2[1],\n            decimals = _value$split2[2];\n\n        var selectedFrom = _durations.durationInputOptions.find(function (option) {\n          return from === option.value;\n        });\n        var selectedTo = _durations.durationOutputOptions.find(function (option) {\n          return to === option.value;\n        });\n        return _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { responsive: false, gutterSize: 's' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              { id: htmlId('date'), label: this.props.label },\n              _react2.default.createElement(_eui.EuiComboBox, {\n                isClearable: false,\n                options: options,\n                selectedOptions: selectedOption ? [selectedOption] : [],\n                onChange: this.handleChange,\n                singleSelection: true\n              })\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                id: htmlId('from'),\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'tsvb.dataFormatPicker.fromLabel',\n                  defaultMessage: 'From'\n                })\n              },\n              _react2.default.createElement(_eui.EuiComboBox, {\n                isClearable: false,\n                options: _durations.durationInputOptions,\n                selectedOptions: selectedFrom ? [selectedFrom] : [],\n                onChange: this.handleDurationChange('from'),\n                singleSelection: true\n              })\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                id: htmlId('to'),\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'tsvb.dataFormatPicker.toLabel',\n                  defaultMessage: 'To'\n                })\n              },\n              _react2.default.createElement(_eui.EuiComboBox, {\n                isClearable: false,\n                options: _durations.durationOutputOptions,\n                selectedOptions: selectedTo ? [selectedTo] : [],\n                onChange: this.handleDurationChange('to'),\n                singleSelection: true\n              })\n            )\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(\n              _eui.EuiFormRow,\n              {\n                id: htmlId('decimal'),\n                label: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'tsvb.dataFormatPicker.decimalPlacesLabel',\n                  defaultMessage: 'Decimal places'\n                })\n              },\n              _react2.default.createElement(_eui.EuiFieldText, {\n                defaultValue: decimals,\n                inputRef: function inputRef(el) {\n                  return _this3.decimals = el;\n                },\n                onChange: this.handleDurationChange('decimals')\n              })\n            )\n          )\n        );\n      }\n      if (defaultValue === 'custom') {\n        custom = _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiFormRow,\n            {\n              label: _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'tsvb.dataFormatPicker.formatStringLabel',\n                defaultMessage: 'Format string'\n              }),\n              helpText: _react2.default.createElement(\n                'span',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'tsvb.dataFormatPicker.formatStringHelpText',\n                  defaultMessage: 'See {numeralJsLink}',\n                  values: { numeralJsLink: _react2.default.createElement(\n                      _eui.EuiLink,\n                      { href: 'http://numeraljs.com/#format', target: '_BLANK' },\n                      'Numeral.js'\n                    ) }\n                })\n              )\n            },\n            _react2.default.createElement(_eui.EuiFieldText, {\n              defaultValue: value,\n              inputRef: function inputRef(el) {\n                return _this3.custom = el;\n              },\n              onChange: this.handleCustomChange\n            })\n          )\n        );\n      }\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { responsive: false, gutterSize: 's' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiFormRow,\n            { label: this.props.label },\n            _react2.default.createElement(_eui.EuiComboBox, {\n              isClearable: false,\n              options: options,\n              selectedOptions: selectedOption ? [selectedOption] : [],\n              onChange: this.handleChange,\n              singleSelection: true\n            })\n          )\n        ),\n        custom\n      );\n    }\n  }]);\n\n  return DataFormatPicker;\n}(_react.Component);\n\nDataFormatPicker.defaultProps = {\n  label: _i18n.i18n.translate('tsvb.defaultDataFormatterLabel', { defaultMessage: 'Data Formatter' })\n};\n\nDataFormatPicker.propTypes = {\n  value: _propTypes2.default.string,\n  label: _propTypes2.default.string,\n  onChange: _propTypes2.default.func\n};\n\nexports.default = (0, _react3.injectI18n)(DataFormatPicker);\nmodule.exports = exports['default'];",null]}