{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kbn_vislib_vis_types/public/heatmap.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kbn_vislib_vis_types/public/heatmap.js","mtime":1567631711537},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HeatmapVisType;\n\nvar _vis_factory = require('ui/vis/vis_factory');\n\nvar _schemas = require('ui/vis/editors/default/schemas');\n\nvar _heatmap = require('./editors/heatmap.html');\n\nvar _heatmap2 = _interopRequireDefault(_heatmap);\n\nvar _colormaps = require('ui/vislib/components/color/colormaps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction HeatmapVisType(Private, i18n) {\n  var VisFactory = Private(_vis_factory.VisFactoryProvider);\n\n  return VisFactory.createVislibVisualization({\n    name: 'heatmap',\n    title: i18n('kbnVislibVisTypes.heatmap.heatmapTitle', { defaultMessage: 'Heat Map' }),\n    icon: 'visHeatmap',\n    description: i18n('kbnVislibVisTypes.heatmap.heatmapDescription', { defaultMessage: 'Shade cells within a matrix' }),\n    visConfig: {\n      defaults: {\n        type: 'heatmap',\n        addTooltip: true,\n        addLegend: true,\n        enableHover: false,\n        legendPosition: 'right',\n        times: [],\n        colorsNumber: 4,\n        colorSchema: 'Greens',\n        setColorRange: false,\n        colorsRange: [],\n        invertColors: false,\n        percentageMode: false,\n        valueAxes: [{\n          show: false,\n          id: 'ValueAxis-1',\n          type: 'value',\n          scale: {\n            type: 'linear',\n            defaultYExtents: false\n          },\n          labels: {\n            show: false,\n            rotate: 0,\n            overwriteColor: false,\n            color: '#555'\n          }\n        }]\n      }\n    },\n    editorConfig: {\n      collections: {\n        legendPositions: [{\n          value: 'left',\n          text: 'left'\n        }, {\n          value: 'right',\n          text: 'right'\n        }, {\n          value: 'top',\n          text: 'top'\n        }, {\n          value: 'bottom',\n          text: 'bottom'\n        }],\n        scales: ['linear', 'log', 'square root'],\n        colorSchemas: Object.values(_colormaps.vislibColorMaps).map(function (value) {\n          return { id: value.id, label: value.label };\n        })\n      },\n      optionsTemplate: _heatmap2.default,\n      schemas: new _schemas.Schemas([{\n        group: 'metrics',\n        name: 'metric',\n        title: i18n('kbnVislibVisTypes.heatmap.metricTitle', { defaultMessage: 'Value' }),\n        min: 1,\n        max: 1,\n        aggFilter: ['count', 'avg', 'median', 'sum', 'min', 'max', 'cardinality', 'std_dev', 'top_hits'],\n        defaults: [{ schema: 'metric', type: 'count' }]\n      }, {\n        group: 'buckets',\n        name: 'segment',\n        title: i18n('kbnVislibVisTypes.heatmap.segmentTitle', { defaultMessage: 'X-Axis' }),\n        min: 0,\n        max: 1,\n        aggFilter: ['!geohash_grid', '!filter']\n      }, {\n        group: 'buckets',\n        name: 'group',\n        title: i18n('kbnVislibVisTypes.heatmap.groupTitle', { defaultMessage: 'Y-Axis' }),\n        min: 0,\n        max: 1,\n        aggFilter: ['!geohash_grid', '!filter']\n      }, {\n        group: 'buckets',\n        name: 'split',\n        title: i18n('kbnVislibVisTypes.heatmap.splitTitle', { defaultMessage: 'Split Chart' }),\n        min: 0,\n        max: 1,\n        aggFilter: ['!geohash_grid', '!filter']\n      }])\n    }\n\n  });\n}\nmodule.exports = exports['default'];",null]}