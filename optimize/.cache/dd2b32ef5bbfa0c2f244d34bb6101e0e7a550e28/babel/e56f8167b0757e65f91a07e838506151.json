{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/kuery_autocomplete/public/autocomplete_providers/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/kuery_autocomplete/public/autocomplete_providers/index.js","mtime":1567631712000},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _esQuery = require('@kbn/es-query');\n\nvar _field = require('./field');\n\nvar _value = require('./value');\n\nvar _operator = require('./operator');\n\nvar _conjunction = require('./conjunction');\n\nvar _autocomplete_providers = require('ui/autocomplete_providers');\n\nvar cursorSymbol = '@kuery-cursor@'; /*\n                                      * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                      * or more contributor license agreements. Licensed under the Elastic License;\n                                      * you may not use this file except in compliance with the Elastic License.\n                                      */\n\n(0, _autocomplete_providers.addAutocompleteProvider)('kuery', function (_ref) {\n  var config = _ref.config,\n      indexPatterns = _ref.indexPatterns,\n      boolFilter = _ref.boolFilter;\n\n  var getSuggestionsByType = (0, _lodash.mapValues)({ field: _field.getSuggestionsProvider, value: _value.getSuggestionsProvider, operator: _operator.getSuggestionsProvider, conjunction: _conjunction.getSuggestionsProvider }, function (provider) {\n    return provider({ config: config, indexPatterns: indexPatterns, boolFilter: boolFilter });\n  });\n\n  return function getSuggestions(_ref2) {\n    var query = _ref2.query,\n        selectionStart = _ref2.selectionStart,\n        selectionEnd = _ref2.selectionEnd;\n\n    var cursoredQuery = '' + query.substr(0, selectionStart) + cursorSymbol + query.substr(selectionEnd);\n\n    var cursorNode = void 0;\n    try {\n      cursorNode = (0, _esQuery.fromKueryExpression)(cursoredQuery, { cursorSymbol: cursorSymbol, parseCursor: true });\n    } catch (e) {\n      cursorNode = {};\n    }\n\n    var _cursorNode = cursorNode,\n        _cursorNode$suggestio = _cursorNode.suggestionTypes,\n        suggestionTypes = _cursorNode$suggestio === undefined ? [] : _cursorNode$suggestio;\n\n    var suggestionsByType = suggestionTypes.map(function (type) {\n      return getSuggestionsByType[type](cursorNode);\n    });\n    return Promise.all(suggestionsByType).then(function (suggestionsByType) {\n      return dedup((0, _lodash.flatten)(suggestionsByType));\n    });\n  };\n});\n\nfunction dedup(suggestions) {\n  return (0, _lodash.uniq)(suggestions, function (_ref3) {\n    var type = _ref3.type,\n        text = _ref3.text,\n        start = _ref3.start,\n        end = _ref3.end;\n    return [type, text, start, end].join('|');\n  });\n}",null]}