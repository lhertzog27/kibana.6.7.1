{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/home/components/tutorial/instruction_set.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/home/components/tutorial/instruction_set.js","mtime":1567631711568},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstructionSet = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _components = require('@kbn/ui-framework/components');\n\nvar _instruction = require('./instruction');\n\nvar _parameter_form = require('./parameter_form');\n\nvar _content = require('./content');\n\nvar _instruction_variant = require('../../../../common/tutorials/instruction_variant');\n\nvar _eui = require('@elastic/eui');\n\nvar _status_check_states = require('./status_check_states');\n\nvar StatusCheckStates = _interopRequireWildcard(_status_check_states);\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar InstructionSetUi = function (_React$Component) {\n  _inherits(InstructionSetUi, _React$Component);\n\n  function InstructionSetUi(props) {\n    _classCallCheck(this, InstructionSetUi);\n\n    var _this = _possibleConstructorReturn(this, (InstructionSetUi.__proto__ || Object.getPrototypeOf(InstructionSetUi)).call(this, props));\n\n    _this.handleToggleVisibility = function () {\n      _this.setState(function (prevState) {\n        return { isParamFormVisible: !prevState.isParamFormVisible };\n      });\n    };\n\n    _this.onSelectedTabChanged = function (id) {\n      _this.setState({\n        selectedTabId: id\n      });\n    };\n\n    _this.renderTabs = function () {\n      return _this.tabs.map(function (tab, index) {\n        return _react2.default.createElement(\n          _eui.EuiTab,\n          {\n            onClick: function onClick() {\n              return _this.onSelectedTabChanged(tab.id);\n            },\n            isSelected: tab.id === _this.state.selectedTabId,\n            key: index\n          },\n          tab.name\n        );\n      });\n    };\n\n    _this.renderInstructions = function () {\n      var instructionVariant = _this.props.instructionVariants.find(function (variant) {\n        return variant.id === _this.state.selectedTabId;\n      });\n      if (!instructionVariant) {\n        return;\n      }\n\n      var steps = instructionVariant.instructions.map(function (instruction, index) {\n        var step = _react2.default.createElement(_instruction.Instruction, {\n          commands: instruction.commands,\n          paramValues: _this.props.paramValues,\n          textPre: instruction.textPre,\n          textPost: instruction.textPost,\n          replaceTemplateStrings: _this.props.replaceTemplateStrings\n        });\n        return {\n          title: instruction.title,\n          children: step,\n          key: index\n        };\n      });\n\n      if (_this.props.statusCheckConfig) {\n        steps.push(_this.renderStatusCheck());\n      }\n\n      return _react2.default.createElement(_eui.EuiSteps, {\n        steps: steps,\n        firstStepNumber: _this.props.offset\n      });\n    };\n\n    _this.renderHeader = function () {\n      var paramsVisibilityToggle = void 0;\n      if (_this.props.params) {\n        var visibilityToggleClasses = (0, _classnames2.default)('kuiIcon kuiSideBarCollapsibleTitle__caret', {\n          'fa-caret-right': !_this.state.isParamFormVisible,\n          'fa-caret-down': _this.state.isParamFormVisible\n        });\n        var ariaLabel = _this.props.intl.formatMessage({ id: 'kbn.home.tutorial.instructionSet.toggleAriaLabel',\n          defaultMessage: 'toggle command parameters visibility'\n        });\n        paramsVisibilityToggle = _react2.default.createElement(\n          'div',\n          { className: 'kuiSideBarCollapsibleTitle', style: { cursor: 'pointer' } },\n          _react2.default.createElement(\n            'div',\n            {\n              'aria-label': ariaLabel,\n              className: 'kuiSideBarCollapsibleTitle__label',\n              onClick: _this.handleToggleVisibility\n            },\n            _react2.default.createElement('span', { className: visibilityToggleClasses }),\n            _react2.default.createElement(\n              'span',\n              { className: 'kuiSideBarCollapsibleTitle__text' },\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.home.tutorial.instructionSet.customizeLabel',\n                defaultMessage: 'Customize your code snippets'\n              })\n            )\n          )\n        );\n      }\n\n      return _react2.default.createElement(\n        _components.KuiBar,\n        { className: 'kuiVerticalRhythm' },\n        _react2.default.createElement(\n          _components.KuiBarSection,\n          null,\n          _react2.default.createElement(\n            'div',\n            { className: 'kuiTitle' },\n            _this.props.title\n          )\n        ),\n        _react2.default.createElement(\n          _components.KuiBarSection,\n          null,\n          paramsVisibilityToggle\n        )\n      );\n    };\n\n    _this.tabs = props.instructionVariants.map(function (variant) {\n      return {\n        id: variant.id,\n        name: (0, _instruction_variant.getDisplayText)(variant.id)\n      };\n    });\n\n    _this.state = {\n      isParamFormVisible: false\n    };\n\n    if (_this.tabs.length > 0) {\n      _this.state.selectedTabId = _this.tabs[0].id;\n    }\n    return _this;\n  }\n\n  _createClass(InstructionSetUi, [{\n    key: 'renderStatusCheckMessage',\n    value: function renderStatusCheckMessage() {\n      var message = void 0;\n      var color = void 0;\n      switch (this.props.statusCheckState) {\n        case StatusCheckStates.NOT_CHECKED:\n        case StatusCheckStates.FETCHING:\n          return null; // Don't show any message while fetching or if you haven't yet checked.\n        case StatusCheckStates.HAS_DATA:\n          message = this.props.statusCheckConfig.success ? this.props.statusCheckConfig.success : this.props.intl.formatMessage({ id: 'kbn.home.tutorial.instructionSet.successLabel',\n            defaultMessage: 'Success' });\n          color = 'success';\n          break;\n        case StatusCheckStates.ERROR:\n        case StatusCheckStates.NO_DATA:\n          message = this.props.statusCheckConfig.error ? this.props.statusCheckConfig.error : this.props.intl.formatMessage({ id: 'kbn.home.tutorial.instructionSet.noDataLabel',\n            defaultMessage: 'No data found' });\n          color = 'warning';\n          break;\n      }\n      return _react2.default.createElement(_eui.EuiCallOut, {\n        title: message,\n        color: color\n      });\n    }\n  }, {\n    key: 'getStepStatus',\n    value: function getStepStatus(statusCheckState) {\n      switch (statusCheckState) {\n        case undefined:\n        case StatusCheckStates.NOT_CHECKED:\n        case StatusCheckStates.FETCHING:\n          return 'incomplete';\n        case StatusCheckStates.HAS_DATA:\n          return 'complete';\n        case StatusCheckStates.NO_DATA:\n          return 'warning';\n        case StatusCheckStates.ERROR:\n          return 'danger';\n        default:\n          throw new Error(this.props.intl.formatMessage({\n            id: 'kbn.home.tutorial.unexpectedStatusCheckStateErrorDescription',\n            defaultMessage: 'Unexpected status check state {statusCheckState}'\n          }, {\n            statusCheckState: statusCheckState\n          }));\n      }\n    }\n  }, {\n    key: 'renderStatusCheck',\n    value: function renderStatusCheck() {\n      var _props = this.props,\n          statusCheckState = _props.statusCheckState,\n          statusCheckConfig = _props.statusCheckConfig,\n          onStatusCheck = _props.onStatusCheck;\n\n      var checkStatusStep = _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { justifyContent: 'spaceBetween', alignItems: 'center' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            null,\n            _react2.default.createElement(_content.Content, {\n              text: statusCheckConfig.text\n            })\n          ),\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            {\n              grow: false\n            },\n            _react2.default.createElement(\n              _eui.EuiButton,\n              {\n                onClick: onStatusCheck,\n                isLoading: statusCheckState === StatusCheckStates.FETCHING\n              },\n              statusCheckConfig.btnLabel || _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.home.tutorial.instructionSet.checkStatusButtonLabel',\n                defaultMessage: 'Check status'\n              })\n            )\n          )\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        this.renderStatusCheckMessage()\n      );\n\n      return {\n        title: statusCheckConfig.title || this.props.intl.formatMessage({ id: 'kbn.home.tutorial.instructionSet.statusCheckTitle',\n          defaultMessage: 'Status Check'\n        }),\n        status: this.getStepStatus(statusCheckState),\n        children: checkStatusStep,\n        key: 'checkStatusStep'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var paramsForm = void 0;\n      if (this.props.params && this.state.isParamFormVisible) {\n        paramsForm = _react2.default.createElement(_parameter_form.ParameterForm, {\n          params: this.props.params,\n          paramValues: this.props.paramValues,\n          setParameter: this.props.setParameter\n        });\n      }\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'kuiVerticalRhythmLarge' },\n        this.renderHeader(),\n        paramsForm,\n        _react2.default.createElement(\n          _eui.EuiTabs,\n          { className: 'kuiVerticalRhythm' },\n          this.renderTabs()\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n        this.renderInstructions()\n      );\n    }\n  }]);\n\n  return InstructionSetUi;\n}(_react2.default.Component);\n\nvar instructionShape = _propTypes2.default.shape({\n  title: _propTypes2.default.string,\n  textPre: _propTypes2.default.string,\n  commands: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  textPost: _propTypes2.default.string\n});\n\nvar instructionVariantShape = _propTypes2.default.shape({\n  id: _propTypes2.default.string.isRequired,\n  instructions: _propTypes2.default.arrayOf(instructionShape).isRequired\n});\n\nvar statusCheckConfigShape = _propTypes2.default.shape({\n  success: _propTypes2.default.string,\n  error: _propTypes2.default.string,\n  title: _propTypes2.default.string,\n  text: _propTypes2.default.string,\n  btnLabel: _propTypes2.default.string\n});\n\nInstructionSetUi.propTypes = {\n  title: _propTypes2.default.string.isRequired,\n  instructionVariants: _propTypes2.default.arrayOf(instructionVariantShape).isRequired,\n  statusCheckConfig: statusCheckConfigShape,\n  statusCheckState: _propTypes2.default.oneOf([StatusCheckStates.FETCHING, StatusCheckStates.NOT_CHECKED, StatusCheckStates.HAS_DATA, StatusCheckStates.NO_DATA, StatusCheckStates.ERROR]),\n  onStatusCheck: _propTypes2.default.func.isRequired,\n  offset: _propTypes2.default.number.isRequired,\n  params: _propTypes2.default.array,\n  paramValues: _propTypes2.default.object.isRequired,\n  setParameter: _propTypes2.default.func,\n  replaceTemplateStrings: _propTypes2.default.func.isRequired\n};\n\nvar InstructionSet = exports.InstructionSet = (0, _react3.injectI18n)(InstructionSetUi);",null]}