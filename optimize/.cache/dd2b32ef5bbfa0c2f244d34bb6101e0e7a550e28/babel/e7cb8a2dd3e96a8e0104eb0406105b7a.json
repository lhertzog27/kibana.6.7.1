{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/refresh_control/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/refresh_control/index.js","mtime":1567631711926},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RefreshControl = undefined;\n\nvar _reactRedux = require('react-redux');\n\nvar _elements = require('../../state/actions/elements');\n\nvar _workpad = require('../../state/actions/workpad');\n\nvar _resolved_args = require('../../state/selectors/resolved_args');\n\nvar _workpad2 = require('../../state/selectors/workpad');\n\nvar _refresh_control = require('./refresh_control');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    inFlight: (0, _resolved_args.getInFlight)(state),\n    refreshInterval: (0, _workpad2.getRefreshInterval)(state),\n    elementStats: (0, _workpad2.getElementStats)(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  doRefresh: _elements.fetchAllRenderables,\n  setRefreshInterval: _workpad.setRefreshInterval\n};\n\nvar RefreshControl = exports.RefreshControl = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_refresh_control.RefreshControl);",null]}