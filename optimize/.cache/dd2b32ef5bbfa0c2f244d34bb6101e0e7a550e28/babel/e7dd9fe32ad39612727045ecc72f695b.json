{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/persisted_state/persisted_state.factory.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/persisted_state/persisted_state.factory.js","mtime":1567631711748},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _events = require('../events');\n\nvar _persisted_state = require('./persisted_state');\n\nvar _modules = require('../modules');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @name AngularPersistedState\n *\n * Returns a PersistedState object which uses an EventEmitter instead of\n * the SimpleEmitter. The EventEmitter adds digest loops every time a handler is called\n * so it's preferable to use this variation when a callback modifies angular UI.\n *\n * TODO: The handlers themselves should really be responsible for triggering digest loops\n * as opposed to having an all or nothing situation. A nice goal would be to get rid\n * of the EventEmitter entirely and require handlers that need it to trigger a digest loop\n * themselves. We can even supply a service to wrap the callbacks in a function that\n * would call the callback, and finish with a $rootScope.$apply().\n */\n\nvar _module = _modules.uiModules.get('kibana');\n\n_module.factory('PersistedState', function ($injector) {\n  var Private = $injector.get('Private');\n  var Events = Private(_events.EventsProvider);\n\n  // Extend PersistedState to override the EmitterClass class with\n  // our Angular friendly version.\n  return function (_PersistedState) {\n    _inherits(AngularPersistedState, _PersistedState);\n\n    function AngularPersistedState(value, path) {\n      _classCallCheck(this, AngularPersistedState);\n\n      return _possibleConstructorReturn(this, (AngularPersistedState.__proto__ || Object.getPrototypeOf(AngularPersistedState)).call(this, value, path, Events));\n    }\n\n    return AngularPersistedState;\n  }(_persisted_state.PersistedState);\n});",null]}