{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/shape_preview/shape_preview.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/shape_preview/shape_preview.js","mtime":1567631711927},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShapePreview = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /*\nopyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\nor more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * you may not use this file except in compliance with the Elastic License.\nn\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ShapePreview = exports.ShapePreview = function ShapePreview(_ref) {\n  var shape = _ref.shape;\n\n  var weight = 5;\n  var parser = new DOMParser();\n\n  var _parser$parseFromStri = parser.parseFromString(shape, 'image/svg+xml').getElementsByTagName('svg'),\n      _parser$parseFromStri2 = _slicedToArray(_parser$parseFromStri, 1),\n      shapeSvg = _parser$parseFromStri2[0];\n\n  shapeSvg.setAttribute('fill', 'none');\n  shapeSvg.setAttribute('stroke', 'black');\n\n  var initialViewBox = shapeSvg.getAttribute('viewBox').split(' ').map(function (v) {\n    return parseInt(v, 10);\n  });\n\n  var _initialViewBox = _slicedToArray(initialViewBox, 4),\n      minX = _initialViewBox[0],\n      minY = _initialViewBox[1],\n      width = _initialViewBox[2],\n      height = _initialViewBox[3];\n\n  minX -= weight / 2;\n  minY -= weight / 2;\n  width += weight;\n  height += weight;\n  shapeSvg.setAttribute('viewBox', [minX, minY, width, height].join(' '));\n\n  return (\n    // eslint-disable-next-line react/no-danger\n    _react2.default.createElement('div', { className: 'canvasShapePreview', dangerouslySetInnerHTML: { __html: shapeSvg.outerHTML } })\n  );\n};\n\nShapePreview.propTypes = {\n  shape: _propTypes2.default.string\n};",null]}