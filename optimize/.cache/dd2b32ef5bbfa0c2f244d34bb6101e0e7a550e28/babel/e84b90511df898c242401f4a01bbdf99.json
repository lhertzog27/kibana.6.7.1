{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/components/editor/index_pattern_select_form_row.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/input_control_vis/public/components/editor/index_pattern_select_form_row.js","mtime":1567631711531},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexPatternSelectFormRow = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _index_pattern_select = require('ui/index_patterns/components/index_pattern_select');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction IndexPatternSelectFormRowUi(props) {\n  var controlIndex = props.controlIndex,\n      indexPatternId = props.indexPatternId,\n      intl = props.intl,\n      onChange = props.onChange;\n\n  var selectId = 'indexPatternSelect-' + controlIndex;\n\n  return _react2.default.createElement(\n    _eui.EuiFormRow,\n    {\n      id: selectId,\n      label: intl.formatMessage({\n        id: 'inputControl.editor.indexPatternSelect.patternLabel',\n        defaultMessage: 'Index Pattern'\n      })\n    },\n    _react2.default.createElement(_index_pattern_select.IndexPatternSelect, {\n      placeholder: intl.formatMessage({\n        id: 'inputControl.editor.indexPatternSelect.patternPlaceholder',\n        defaultMessage: 'Select index pattern...'\n      }),\n      indexPatternId: indexPatternId,\n      onChange: onChange,\n      'data-test-subj': selectId\n    })\n  );\n} /*\n   * Licensed to Elasticsearch B.V. under one or more contributor\n   * license agreements. See the NOTICE file distributed with\n   * this work for additional information regarding copyright\n   * ownership. Elasticsearch B.V. licenses this file to you under\n   * the Apache License, Version 2.0 (the \"License\"); you may\n   * not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *    http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing,\n   * software distributed under the License is distributed on an\n   * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n   * KIND, either express or implied.  See the License for the\n   * specific language governing permissions and limitations\n   * under the License.\n   */\n\nIndexPatternSelectFormRowUi.propTypes = {\n  onChange: _propTypes2.default.func.isRequired,\n  indexPatternId: _propTypes2.default.string,\n  controlIndex: _propTypes2.default.number.isRequired\n};\n\nvar IndexPatternSelectFormRow = exports.IndexPatternSelectFormRow = (0, _react3.injectI18n)(IndexPatternSelectFormRowUi);",null]}