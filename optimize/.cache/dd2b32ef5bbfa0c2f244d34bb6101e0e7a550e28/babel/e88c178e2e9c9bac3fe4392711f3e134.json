{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/directives/sparkline/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/directives/sparkline/index.js","mtime":1567631712097},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _modules = require('ui/modules');\n\nvar _sparkline = require('plugins/monitoring/components/sparkline');\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _format_number = require('../../lib/format_number');\n\nvar _timefilter = require('ui/timefilter');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar uiModule = _modules.uiModules.get('plugins/monitoring/directives', []); /*\n                                                                             * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                             * or more contributor license agreements. Licensed under the Elastic License;\n                                                                             * you may not use this file except in compliance with the Elastic License.\n                                                                             */\n\nuiModule.directive('sparkline', function ($injector) {\n  var config = $injector.get('config');\n\n  var dateFormat = config.get('dateFormat');\n\n  return {\n    restrict: 'E',\n    scope: {\n      // Monitoring series object (containing data, metric, and timeRange properties)\n      series: '='\n    },\n    link: function link(scope, $elem) {\n\n      function onBrush(xaxis) {\n        _timefilter.timefilter.setTime({\n          from: (0, _moment2.default)(xaxis.from),\n          to: (0, _moment2.default)(xaxis.to),\n          mode: 'absolute'\n        });\n      }\n\n      function tooltipXValueFormatter(xValue) {\n        return (0, _moment2.default)(xValue).format(dateFormat);\n      }\n\n      function tooltipYValueFormatter(yValue) {\n        return (0, _format_number.formatMetric)(yValue, scope.series.metric.format, scope.series.metric.units);\n      }\n\n      scope.$watch('series', function (series) {\n        var options = {\n          xaxis: series.timeRange\n        };\n\n        _reactDom2.default.render(_react2.default.createElement(_sparkline.Sparkline, {\n          series: series.data,\n          onBrush: onBrush,\n          options: options,\n          tooltip: {\n            xValueFormatter: tooltipXValueFormatter,\n            yValueFormatter: tooltipYValueFormatter\n          }\n        }), $elem[0]);\n      }, true);\n\n      scope.$on('$destroy', function () {\n        return _reactDom2.default.unmountComponentAtNode($elem[0]);\n      });\n    }\n  };\n});",null]}