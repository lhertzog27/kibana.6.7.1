{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/directives/elasticsearch/ml_job_listing/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/directives/elasticsearch/ml_job_listing/index.js","mtime":1567631712097},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nvar _lodash = require('lodash');\n\nvar _numeral = require('@elastic/numeral');\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _i18n = require('ui/i18n');\n\nvar _modules = require('ui/modules');\n\nvar _table = require('plugins/monitoring/components/table');\n\nvar _status_icon = require('plugins/monitoring/components/elasticsearch/ml_job_listing/status_icon');\n\nvar _formatting = require('../../../../common/formatting');\n\nvar _eui = require('@elastic/eui');\n\nvar _cluster_status = require('../../../components/elasticsearch/cluster_status');\n\nvar _i18n2 = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getColumns = function getColumns(kbnUrl, scope) {\n  return [{\n    name: _i18n2.i18n.translate('xpack.monitoring.elasticsearch.mlJobListing.jobIdTitle', {\n      defaultMessage: 'Job ID'\n    }),\n    field: 'job_id',\n    sortable: true\n  }, {\n    name: _i18n2.i18n.translate('xpack.monitoring.elasticsearch.mlJobListing.stateTitle', {\n      defaultMessage: 'State'\n    }),\n    field: 'state',\n    sortable: true,\n    render: function render(state) {\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(_status_icon.MachineLearningJobStatusIcon, { status: state }),\n        '\\xA0',\n        (0, _lodash.capitalize)(state)\n      );\n    }\n  }, {\n    name: _i18n2.i18n.translate('xpack.monitoring.elasticsearch.mlJobListing.processedRecordsTitle', {\n      defaultMessage: 'Processed Records'\n    }),\n    field: 'data_counts.processed_record_count',\n    sortable: true,\n    render: function render(value) {\n      return _react2.default.createElement(\n        'span',\n        null,\n        (0, _numeral2.default)(value).format(_formatting.LARGE_ABBREVIATED)\n      );\n    }\n  }, {\n    name: _i18n2.i18n.translate('xpack.monitoring.elasticsearch.mlJobListing.modelSizeTitle', {\n      defaultMessage: 'Model Size'\n    }),\n    field: 'model_size_stats.model_bytes',\n    sortable: true,\n    render: function render(value) {\n      return _react2.default.createElement(\n        'span',\n        null,\n        (0, _numeral2.default)(value).format(_formatting.LARGE_BYTES)\n      );\n    }\n  }, {\n    name: _i18n2.i18n.translate('xpack.monitoring.elasticsearch.mlJobListing.forecastsTitle', {\n      defaultMessage: 'Forecasts'\n    }),\n    field: 'forecasts_stats.total',\n    sortable: true,\n    render: function render(value) {\n      return _react2.default.createElement(\n        'span',\n        null,\n        (0, _numeral2.default)(value).format(_formatting.LARGE_ABBREVIATED)\n      );\n    }\n  }, {\n    name: _i18n2.i18n.translate('xpack.monitoring.elasticsearch.mlJobListing.nodeTitle', {\n      defaultMessage: 'Node'\n    }),\n    field: 'node.name',\n    sortable: true,\n    render: function render(name, node) {\n      if (node) {\n        return _react2.default.createElement(\n          _eui.EuiLink,\n          {\n            onClick: function onClick() {\n              scope.$evalAsync(function () {\n                return kbnUrl.changePath('/elasticsearch/nodes/' + node.id);\n              });\n            }\n          },\n          name\n        );\n      }\n\n      return _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.monitoring.elasticsearch.mlJobListing.noDataLabel',\n        defaultMessage: 'N/A'\n      });\n    }\n  }];\n};\n\nvar uiModule = _modules.uiModules.get('monitoring/directives', []);\nuiModule.directive('monitoringMlListing', function (kbnUrl) {\n  return {\n    restrict: 'E',\n    scope: {\n      jobs: '=',\n      paginationSettings: '=',\n      sorting: '=',\n      onTableChange: '=',\n      status: '='\n    },\n    link: function link(scope, $el) {\n      var columns = getColumns(kbnUrl, scope);\n\n      var filterJobsPlaceholder = _i18n2.i18n.translate('xpack.monitoring.elasticsearch.mlJobListing.filterJobsPlaceholder', {\n        defaultMessage: 'Filter Jobsâ€¦'\n      });\n\n      scope.$watch('jobs', function () {\n        var jobs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        var mlTable = _react2.default.createElement(\n          _i18n.I18nContext,\n          null,\n          _react2.default.createElement(\n            _eui.EuiPage,\n            null,\n            _react2.default.createElement(\n              _eui.EuiPageBody,\n              null,\n              _react2.default.createElement(\n                _eui.EuiPanel,\n                null,\n                _react2.default.createElement(_cluster_status.ClusterStatus, { stats: scope.status })\n              ),\n              _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n              _react2.default.createElement(\n                _eui.EuiPageContent,\n                null,\n                _react2.default.createElement(_table.EuiMonitoringTable, {\n                  className: 'mlJobsTable',\n                  rows: jobs,\n                  columns: columns,\n                  sorting: _extends({}, scope.sorting, {\n                    sort: _extends({}, scope.sorting.sort, {\n                      field: 'job_id'\n                    })\n                  }),\n                  pagination: scope.paginationSettings,\n                  message: _i18n2.i18n.translate('xpack.monitoring.elasticsearch.mlJobListing.noJobsDescription', {\n                    defaultMessage: 'There are no Machine Learning Jobs that match your query. Try changing the time range selection.'\n                  }),\n                  search: {\n                    box: {\n                      incremental: true,\n                      placeholder: filterJobsPlaceholder\n                    }\n                  },\n                  onTableChange: scope.onTableChange,\n                  executeQueryOptions: {\n                    defaultFields: ['job_id']\n                  }\n                })\n              )\n            )\n          )\n        );\n        (0, _reactDom.render)(mlTable, $el[0]);\n      });\n    }\n  };\n});",null]}