{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/common/util/string_utils.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/common/util/string_utils.js","mtime":1567631712025},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderTemplate = renderTemplate;\nexports.stringHash = stringHash;\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n// A simple template renderer, it replaces mustache/angular style {{...}} tags with\n// the values provided via the data object\nfunction renderTemplate(str, data) {\n  var matches = str.match(/{{(.*?)}}/g);\n\n  if (Array.isArray(matches)) {\n    matches.forEach(function (v) {\n      str = str.replace(v, data[v.replace(/{{|}}/g, '')]);\n    });\n  }\n\n  return str;\n}\n\nfunction stringHash(str) {\n  var hash = 0;\n  var chr = '';\n  if (str.length === 0) {\n    return hash;\n  }\n  for (var i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0;\n  }\n  return hash < 0 ? hash * -2 : hash;\n}",null]}