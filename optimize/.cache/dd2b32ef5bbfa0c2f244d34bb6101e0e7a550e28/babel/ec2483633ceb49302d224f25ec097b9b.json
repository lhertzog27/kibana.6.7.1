{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/vector_source.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/maps/public/shared/layers/sources/vector_source.js","mtime":1567631712021},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractVectorSource = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vector_layer = require('../vector_layer');\n\nvar _vector_style = require('../styles/vector_style');\n\nvar _source = require('./source');\n\nvar _topojsonClient = require('topojson-client');\n\nvar topojson = _interopRequireWildcard(_topojsonClient);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar AbstractVectorSource = exports.AbstractVectorSource = function (_AbstractSource) {\n  _inherits(AbstractVectorSource, _AbstractSource);\n\n  function AbstractVectorSource() {\n    _classCallCheck(this, AbstractVectorSource);\n\n    return _possibleConstructorReturn(this, (AbstractVectorSource.__proto__ || Object.getPrototypeOf(AbstractVectorSource)).apply(this, arguments));\n  }\n\n  _createClass(AbstractVectorSource, [{\n    key: '_createDefaultLayerDescriptor',\n    value: function _createDefaultLayerDescriptor(options) {\n      return _vector_layer.VectorLayer.createDescriptor(_extends({\n        sourceDescriptor: this._descriptor\n      }, options));\n    }\n  }, {\n    key: 'createDefaultLayer',\n    value: function createDefaultLayer(options) {\n      var layerDescriptor = this._createDefaultLayerDescriptor(options);\n      var style = new _vector_style.VectorStyle(layerDescriptor.style);\n      return new _vector_layer.VectorLayer({\n        layerDescriptor: layerDescriptor,\n        source: this,\n        style: style\n      });\n    }\n  }, {\n    key: 'isFilterByMapBounds',\n    value: function isFilterByMapBounds() {\n      return false;\n    }\n  }, {\n    key: 'isBoundsAware',\n    value: function isBoundsAware() {\n      return false;\n    }\n  }, {\n    key: 'getBoundsForFilters',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.warn('Should implement AbstractVectorSource#getBoundsForFilters');\n                return _context.abrupt('return', null);\n\n              case 2:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBoundsForFilters() {\n        return _ref.apply(this, arguments);\n      }\n\n      return getBoundsForFilters;\n    }()\n  }, {\n    key: 'getNumberFields',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt('return', []);\n\n              case 1:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getNumberFields() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return getNumberFields;\n    }()\n  }, {\n    key: 'getStringFields',\n    value: function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt('return', []);\n\n              case 1:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getStringFields() {\n        return _ref3.apply(this, arguments);\n      }\n\n      return getStringFields;\n    }()\n  }, {\n    key: 'getGeoJsonWithMeta',\n    value: function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                throw new Error('Should implement VectorSource#getGeoJson');\n\n              case 1:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getGeoJsonWithMeta() {\n        return _ref4.apply(this, arguments);\n      }\n\n      return getGeoJsonWithMeta;\n    }()\n  }, {\n    key: 'canFormatFeatureProperties',\n    value: function canFormatFeatureProperties() {\n      return false;\n    }\n\n    // Allow source to filter and format feature properties before displaying to user\n\n  }, {\n    key: 'filterAndFormatProperties',\n    value: function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(properties) {\n        var props, key;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                //todo :this is quick hack... should revise (should model proeprties explicitly in vector_layer\n                props = {};\n                _context5.t0 = regeneratorRuntime.keys(properties);\n\n              case 2:\n                if ((_context5.t1 = _context5.t0()).done) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                key = _context5.t1.value;\n\n                if (!key.startsWith('__kbn')) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                return _context5.abrupt('continue', 2);\n\n              case 6:\n                props[key] = properties[key];\n                _context5.next = 2;\n                break;\n\n              case 9:\n                return _context5.abrupt('return', props);\n\n              case 10:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function filterAndFormatProperties(_x) {\n        return _ref5.apply(this, arguments);\n      }\n\n      return filterAndFormatProperties;\n    }()\n  }, {\n    key: 'isTimeAware',\n    value: function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt('return', false);\n\n              case 1:\n              case 'end':\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function isTimeAware() {\n        return _ref6.apply(this, arguments);\n      }\n\n      return isTimeAware;\n    }()\n  }, {\n    key: 'isJoinable',\n    value: function isJoinable() {\n      return true;\n    }\n  }], [{\n    key: 'getGeoJson',\n    value: function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref7) {\n        var format = _ref7.format,\n            featureCollectionPath = _ref7.featureCollectionPath,\n            fetchUrl = _ref7.fetchUrl;\n        var fetchedJson, response, features;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                fetchedJson = void 0;\n                _context7.prev = 1;\n                _context7.next = 4;\n                return fetch(fetchUrl);\n\n              case 4:\n                response = _context7.sent;\n\n                if (response.ok) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                throw new Error('Request failed');\n\n              case 7:\n                _context7.next = 9;\n                return response.json();\n\n              case 9:\n                fetchedJson = _context7.sent;\n                _context7.next = 15;\n                break;\n\n              case 12:\n                _context7.prev = 12;\n                _context7.t0 = _context7['catch'](1);\n                throw new Error(_i18n.i18n.translate('xpack.maps.source.vetorSource.requestFailedErrorMessage', {\n                  defaultMessage: 'Unable to fetch vector shapes from url: {fetchUrl}',\n                  values: { fetchUrl: fetchUrl }\n                }));\n\n              case 15:\n                if (!(format === 'geojson')) {\n                  _context7.next = 17;\n                  break;\n                }\n\n                return _context7.abrupt('return', fetchedJson);\n\n              case 17:\n                if (!(format === 'topojson')) {\n                  _context7.next = 20;\n                  break;\n                }\n\n                features = _lodash2.default.get(fetchedJson, 'objects.' + featureCollectionPath);\n                return _context7.abrupt('return', topojson.feature(fetchedJson, features));\n\n              case 20:\n                throw new Error(_i18n.i18n.translate('xpack.maps.source.vetorSource.formatErrorMessage', {\n                  defaultMessage: 'Unable to fetch vector shapes from url: {format}',\n                  values: { format: format }\n                }));\n\n              case 21:\n              case 'end':\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[1, 12]]);\n      }));\n\n      function getGeoJson(_x2) {\n        return _ref8.apply(this, arguments);\n      }\n\n      return getGeoJson;\n    }()\n  }]);\n\n  return AbstractVectorSource;\n}(_source.AbstractSource);",null]}