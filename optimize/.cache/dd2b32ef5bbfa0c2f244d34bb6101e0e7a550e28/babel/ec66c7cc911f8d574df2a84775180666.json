{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/objects/components/objects_table/components/flyout/flyout.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/objects/components/objects_table/components/flyout/flyout.js","mtime":1567631711575},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Flyout = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash');\n\nvar _eui = require('@elastic/eui');\n\nvar _import_file = require('../../../../lib/import_file');\n\nvar _resolve_saved_objects = require('../../../../lib/resolve_saved_objects');\n\nvar _objects_table = require('../../objects_table');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar FlyoutUI = function (_Component) {\n  _inherits(FlyoutUI, _Component);\n\n  function FlyoutUI(props) {\n    var _this2 = this;\n\n    _classCallCheck(this, FlyoutUI);\n\n    var _this = _possibleConstructorReturn(this, (FlyoutUI.__proto__ || Object.getPrototypeOf(FlyoutUI)).call(this, props));\n\n    _this.fetchIndexPatterns = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var indexPatterns;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.props.indexPatterns.getFields(['id', 'title']);\n\n            case 2:\n              indexPatterns = _context.sent;\n\n              _this.setState({ indexPatterns: indexPatterns });\n\n            case 4:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2);\n    }));\n\n    _this.changeOverwriteAll = function () {\n      _this.setState(function (state) {\n        return {\n          isOverwriteAllChecked: !state.isOverwriteAllChecked\n        };\n      });\n    };\n\n    _this.setImportFile = function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 1),\n          file = _ref3[0];\n\n      _this.setState({ file: file });\n    };\n\n    _this.import = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _this$props, services, indexPatterns, intl, _this$state, file, isOverwriteAllChecked, contents, _ref5, conflictedIndexPatterns, conflictedSavedObjectsLinkedToSavedSearches, conflictedSearchDocs, importedObjectCount, failedImports, byId, conflicts;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props = _this.props, services = _this$props.services, indexPatterns = _this$props.indexPatterns, intl = _this$props.intl;\n              _this$state = _this.state, file = _this$state.file, isOverwriteAllChecked = _this$state.isOverwriteAllChecked;\n\n\n              _this.setState({ isLoading: true, error: undefined });\n\n              contents = void 0;\n              _context2.prev = 4;\n              _context2.next = 7;\n              return (0, _import_file.importFile)(file);\n\n            case 7:\n              contents = _context2.sent;\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2['catch'](4);\n\n              _this.setState({\n                isLoading: false,\n                error: intl.formatMessage({\n                  id: 'kbn.management.objects.objectsTable.flyout.importFileErrorMessage',\n                  defaultMessage: 'The file could not be processed.'\n                })\n              });\n              return _context2.abrupt('return');\n\n            case 14:\n              if (Array.isArray(contents)) {\n                _context2.next = 17;\n                break;\n              }\n\n              _this.setState({\n                isLoading: false,\n                error: intl.formatMessage({\n                  id: 'kbn.management.objects.objectsTable.flyout.invalidFormatOfImportedFileErrorMessage',\n                  defaultMessage: 'Saved objects file format is invalid and cannot be imported.'\n                })\n              });\n              return _context2.abrupt('return');\n\n            case 17:\n\n              contents = contents.filter(function (content) {\n                return _objects_table.INCLUDED_TYPES.includes(content._type);\n              }).map(function (doc) {\n                return _extends({}, doc, {\n                  // The server assumes that documents with no migrationVersion are up to date.\n                  // That assumption enables Kibana and other API consumers to not have to build\n                  // up migrationVersion prior to creating new objects. But it means that imports\n                  // need to set migrationVersion to something other than undefined, so that imported\n                  // docs are not seen as automatically up-to-date.\n                  _migrationVersion: doc._migrationVersion || {}\n                });\n              });\n\n              _context2.next = 20;\n              return (0, _resolve_saved_objects.resolveSavedObjects)(contents, isOverwriteAllChecked, services, indexPatterns);\n\n            case 20:\n              _ref5 = _context2.sent;\n              conflictedIndexPatterns = _ref5.conflictedIndexPatterns;\n              conflictedSavedObjectsLinkedToSavedSearches = _ref5.conflictedSavedObjectsLinkedToSavedSearches;\n              conflictedSearchDocs = _ref5.conflictedSearchDocs;\n              importedObjectCount = _ref5.importedObjectCount;\n              failedImports = _ref5.failedImports;\n              byId = (0, _lodash.groupBy)(conflictedIndexPatterns, function (_ref6) {\n                var obj = _ref6.obj;\n                return obj.searchSource.getOwnField('index');\n              });\n              conflicts = Object.entries(byId).reduce(function (accum, _ref7) {\n                var _ref8 = _slicedToArray(_ref7, 2),\n                    existingIndexPatternId = _ref8[0],\n                    list = _ref8[1];\n\n                accum.push({\n                  existingIndexPatternId: existingIndexPatternId,\n                  newIndexPatternId: undefined,\n                  list: list.map(function (_ref9) {\n                    var doc = _ref9.doc;\n                    return {\n                      id: existingIndexPatternId,\n                      type: doc._type,\n                      name: doc._source.title\n                    };\n                  })\n                });\n                return accum;\n              }, []);\n\n\n              _this.setState({\n                conflictedIndexPatterns: conflictedIndexPatterns,\n                conflictedSavedObjectsLinkedToSavedSearches: conflictedSavedObjectsLinkedToSavedSearches,\n                conflictedSearchDocs: conflictedSearchDocs,\n                failedImports: failedImports,\n                conflicts: conflicts,\n                importCount: importedObjectCount,\n                isLoading: false,\n                wasImportSuccessful: conflicts.length === 0\n              });\n\n            case 29:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, _this2, [[4, 10]]);\n    }));\n    _this.confirmImport = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var _this$state2, conflictedIndexPatterns, isOverwriteAllChecked, conflictedSavedObjectsLinkedToSavedSearches, conflictedSearchDocs, failedImports, _this$props2, services, indexPatterns, intl, importCount, resolutions;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$state2 = _this.state, conflictedIndexPatterns = _this$state2.conflictedIndexPatterns, isOverwriteAllChecked = _this$state2.isOverwriteAllChecked, conflictedSavedObjectsLinkedToSavedSearches = _this$state2.conflictedSavedObjectsLinkedToSavedSearches, conflictedSearchDocs = _this$state2.conflictedSearchDocs, failedImports = _this$state2.failedImports;\n              _this$props2 = _this.props, services = _this$props2.services, indexPatterns = _this$props2.indexPatterns, intl = _this$props2.intl;\n\n\n              _this.setState({\n                error: undefined,\n                isLoading: true,\n                loadingMessage: undefined\n              });\n\n              importCount = _this.state.importCount;\n\n              if (!_this.hasConflicts) {\n                _context3.next = 30;\n                break;\n              }\n\n              _context3.prev = 5;\n              resolutions = _this.resolutions;\n\n              // Do not Promise.all these calls as the order matters\n\n              _this.setState({\n                loadingMessage: intl.formatMessage({\n                  id: 'kbn.management.objects.objectsTable.flyout.confirmImport.resolvingConflictsLoadingMessage',\n                  defaultMessage: 'Resolving conflicts…'\n                })\n              });\n\n              if (!resolutions.length) {\n                _context3.next = 12;\n                break;\n              }\n\n              _context3.next = 11;\n              return (0, _resolve_saved_objects.resolveIndexPatternConflicts)(resolutions, conflictedIndexPatterns, isOverwriteAllChecked);\n\n            case 11:\n              importCount += _context3.sent;\n\n            case 12:\n              _this.setState({\n                loadingMessage: intl.formatMessage({\n                  id: 'kbn.management.objects.objectsTable.flyout.confirmImport.savingConflictsLoadingMessage',\n                  defaultMessage: 'Saving conflicts…'\n                })\n              });\n              _context3.next = 15;\n              return (0, _resolve_saved_objects.saveObjects)(conflictedSavedObjectsLinkedToSavedSearches, isOverwriteAllChecked);\n\n            case 15:\n              importCount += _context3.sent;\n\n              _this.setState({\n                loadingMessage: intl.formatMessage({\n                  id: 'kbn.management.objects.objectsTable.flyout.confirmImport.savedSearchAreLinkedProperlyLoadingMessage',\n                  defaultMessage: 'Ensure saved searches are linked properly…'\n                })\n              });\n              _context3.next = 19;\n              return (0, _resolve_saved_objects.resolveSavedSearches)(conflictedSearchDocs, services, indexPatterns, isOverwriteAllChecked);\n\n            case 19:\n              importCount += _context3.sent;\n\n              _this.setState({\n                loadingMessage: intl.formatMessage({\n                  id: 'kbn.management.objects.objectsTable.flyout.confirmImport.retryingFailedObjectsLoadingMessage',\n                  defaultMessage: 'Retrying failed objects…'\n                })\n              });\n              _context3.next = 23;\n              return (0, _resolve_saved_objects.saveObjects)(failedImports.map(function (_ref11) {\n                var obj = _ref11.obj;\n                return obj;\n              }), isOverwriteAllChecked);\n\n            case 23:\n              importCount += _context3.sent;\n              _context3.next = 30;\n              break;\n\n            case 26:\n              _context3.prev = 26;\n              _context3.t0 = _context3['catch'](5);\n\n              _this.setState({\n                error: _context3.t0.message,\n                isLoading: false,\n                loadingMessage: undefined\n              });\n              return _context3.abrupt('return');\n\n            case 30:\n\n              _this.setState({ isLoading: false, wasImportSuccessful: true, importCount: importCount });\n\n            case 31:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, _this2, [[5, 26]]);\n    }));\n\n    _this.onIndexChanged = function (id, e) {\n      var value = e.target.value;\n      _this.setState(function (state) {\n        var conflictIndex = state.conflicts.findIndex(function (conflict) {\n          return conflict.existingIndexPatternId === id;\n        });\n        if (conflictIndex === -1) {\n          return state;\n        }\n\n        return {\n          conflicts: [].concat(_toConsumableArray(state.conflicts.slice(0, conflictIndex)), [_extends({}, state.conflicts[conflictIndex], {\n            newIndexPatternId: value\n          })], _toConsumableArray(state.conflicts.slice(conflictIndex + 1)))\n        };\n      });\n    };\n\n    _this.state = {\n      conflictedIndexPatterns: undefined,\n      conflictedSavedObjectsLinkedToSavedSearches: undefined,\n      conflictedSearchDocs: undefined,\n      conflicts: undefined,\n      error: undefined,\n      file: undefined,\n      importCount: 0,\n      indexPatterns: undefined,\n      isOverwriteAllChecked: true,\n      isLoading: false,\n      loadingMessage: undefined,\n      wasImportSuccessful: false\n    };\n    return _this;\n  }\n\n  _createClass(FlyoutUI, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.fetchIndexPatterns();\n    }\n  }, {\n    key: 'renderConflicts',\n    value: function renderConflicts() {\n      var _this3 = this;\n\n      var conflicts = this.state.conflicts;\n      var intl = this.props.intl;\n\n\n      if (!conflicts) {\n        return null;\n      }\n\n      var columns = [{\n        field: 'existingIndexPatternId',\n        name: intl.formatMessage({\n          id: 'kbn.management.objects.objectsTable.flyout.renderConflicts.columnIdName',\n          defaultMessage: 'ID'\n        }),\n        description: intl.formatMessage({\n          id: 'kbn.management.objects.objectsTable.flyout.renderConflicts.columnIdDescription',\n          defaultMessage: 'ID of the index pattern'\n        }),\n        sortable: true\n      }, {\n        field: 'list',\n        name: intl.formatMessage({\n          id: 'kbn.management.objects.objectsTable.flyout.renderConflicts.columnCountName',\n          defaultMessage: 'Count'\n        }),\n        description: intl.formatMessage({\n          id: 'kbn.management.objects.objectsTable.flyout.renderConflicts.columnCountDescription',\n          defaultMessage: 'How many affected objects'\n        }),\n        render: function render(list) {\n          return _react2.default.createElement(\n            _react.Fragment,\n            null,\n            list.length\n          );\n        }\n      }, {\n        field: 'list',\n        name: intl.formatMessage({\n          id: 'kbn.management.objects.objectsTable.flyout.renderConflicts.columnSampleOfAffectedObjectsName',\n          defaultMessage: 'Sample of affected objects'\n        }),\n        description: intl.formatMessage({\n          id: 'kbn.management.objects.objectsTable.flyout.renderConflicts.columnSampleOfAffectedObjectsDescription',\n          defaultMessage: 'Sample of affected objects'\n        }),\n        render: function render(list) {\n          return _react2.default.createElement(\n            'ul',\n            { style: { listStyle: 'none' } },\n            (0, _lodash.take)(list, 3).map(function (obj, key) {\n              return _react2.default.createElement(\n                'li',\n                { key: key },\n                obj.name\n              );\n            })\n          );\n        }\n      }, {\n        field: 'existingIndexPatternId',\n        name: intl.formatMessage({\n          id: 'kbn.management.objects.objectsTable.flyout.renderConflicts.columnNewIndexPatternName',\n          defaultMessage: 'New index pattern'\n        }),\n        render: function render(id) {\n          var options = _this3.state.indexPatterns.map(function (indexPattern) {\n            return _defineProperty({\n              text: indexPattern.get('title'),\n              value: indexPattern.id\n            }, 'data-test-subj', 'indexPatternOption-' + indexPattern.get('title'));\n          });\n\n          options.unshift({\n            text: '-- Skip Import --',\n            value: ''\n          });\n\n          return _react2.default.createElement(_eui.EuiSelect, {\n            'data-test-subj': 'managementChangeIndexSelection-' + id,\n            onChange: function onChange(e) {\n              return _this3.onIndexChanged(id, e);\n            },\n            options: options\n          });\n        }\n      }];\n\n      var pagination = {\n        pageSizeOptions: [5, 10, 25]\n      };\n\n      return _react2.default.createElement(_eui.EuiInMemoryTable, {\n        items: conflicts,\n        columns: columns,\n        pagination: pagination\n      });\n    }\n  }, {\n    key: 'renderError',\n    value: function renderError() {\n      var error = this.state.error;\n\n\n      if (!error) {\n        return null;\n      }\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          _eui.EuiCallOut,\n          {\n            title: _react2.default.createElement(_react3.FormattedMessage, { id: 'kbn.management.objects.objectsTable.flyout.errorCalloutTitle', defaultMessage: 'Sorry, there was an error' }),\n            color: 'danger',\n            iconType: 'cross'\n          },\n          _react2.default.createElement(\n            'p',\n            null,\n            error\n          )\n        ),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' })\n      );\n    }\n  }, {\n    key: 'renderBody',\n    value: function renderBody() {\n      var _state = this.state,\n          isLoading = _state.isLoading,\n          loadingMessage = _state.loadingMessage,\n          isOverwriteAllChecked = _state.isOverwriteAllChecked,\n          wasImportSuccessful = _state.wasImportSuccessful,\n          importCount = _state.importCount,\n          _state$failedImports = _state.failedImports,\n          failedImports = _state$failedImports === undefined ? [] : _state$failedImports;\n\n\n      if (isLoading) {\n        return _react2.default.createElement(\n          _eui.EuiFlexGroup,\n          { justifyContent: 'spaceAround' },\n          _react2.default.createElement(\n            _eui.EuiFlexItem,\n            { grow: false },\n            _react2.default.createElement(_eui.EuiLoadingKibana, { size: 'xl' }),\n            _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n            _react2.default.createElement(\n              _eui.EuiText,\n              null,\n              _react2.default.createElement(\n                'p',\n                null,\n                loadingMessage\n              )\n            )\n          )\n        );\n      }\n\n      if (failedImports.length && !this.hasConflicts) {\n        return _react2.default.createElement(\n          _eui.EuiCallOut,\n          {\n            title: _react2.default.createElement(_react3.FormattedMessage, { id: 'kbn.management.objects.objectsTable.flyout.importFailedTitle', defaultMessage: 'Import failed' }),\n            color: 'warning',\n            iconType: 'help'\n          },\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.flyout.importFailedDescription',\n              defaultMessage: 'Failed to import {failedImportCount} of {totalImportCount} objects.Import failed',\n              values: { failedImportCount: failedImports.length, totalImportCount: importCount + failedImports.length }\n            })\n          ),\n          _react2.default.createElement(\n            'p',\n            null,\n            failedImports.map(function (_ref13) {\n              var error = _ref13.error;\n              return (0, _lodash.get)(error, 'body.message', error.message || '');\n            }).join(' ')\n          )\n        );\n      }\n\n      if (wasImportSuccessful) {\n        if (importCount === 0) {\n          return _react2.default.createElement(_eui.EuiCallOut, {\n            'data-test-subj': 'importSavedObjectsSuccessNoneImported',\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.flyout.importSuccessfulCallout.noObjectsImportedTitle',\n              defaultMessage: 'No objects imported'\n            }),\n            color: 'primary'\n          });\n        }\n\n        return _react2.default.createElement(\n          _eui.EuiCallOut,\n          {\n            'data-test-subj': 'importSavedObjectsSuccess',\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.flyout.importSuccessfulTitle',\n              defaultMessage: 'Import successful'\n            }),\n            color: 'success',\n            iconType: 'check'\n          },\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.flyout.importSuccessfulDescription',\n              defaultMessage: 'Successfully imported {importCount} objects.',\n              values: { importCount: importCount }\n            })\n          )\n        );\n      }\n\n      if (this.hasConflicts) {\n        return this.renderConflicts();\n      }\n\n      return _react2.default.createElement(\n        _eui.EuiForm,\n        null,\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          {\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.flyout.selectFileToImportFormRowLabel',\n              defaultMessage: 'Please select a JSON file to import'\n            })\n          },\n          _react2.default.createElement(_eui.EuiFilePicker, {\n            initialPromptText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.flyout.importPromptText',\n              defaultMessage: 'Import'\n            }),\n            onChange: this.setImportFile\n          })\n        ),\n        _react2.default.createElement(\n          _eui.EuiFormRow,\n          null,\n          _react2.default.createElement(_eui.EuiSwitch, {\n            name: 'overwriteAll',\n            label: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.flyout.overwriteSavedObjectsLabel',\n              defaultMessage: 'Automatically overwrite all saved objects?'\n            }),\n            'data-test-subj': 'importSavedObjectsOverwriteToggle',\n            checked: isOverwriteAllChecked,\n            onChange: this.changeOverwriteAll\n          })\n        )\n      );\n    }\n  }, {\n    key: 'renderFooter',\n    value: function renderFooter() {\n      var _state2 = this.state,\n          isLoading = _state2.isLoading,\n          wasImportSuccessful = _state2.wasImportSuccessful;\n      var _props = this.props,\n          done = _props.done,\n          close = _props.close;\n\n\n      var confirmButton = void 0;\n\n      if (wasImportSuccessful) {\n        confirmButton = _react2.default.createElement(\n          _eui.EuiButton,\n          {\n            onClick: done,\n            size: 's',\n            fill: true,\n            'data-test-subj': 'importSavedObjectsDoneBtn'\n          },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'kbn.management.objects.objectsTable.flyout.importSuccessful.confirmButtonLabel',\n            defaultMessage: 'Done'\n          })\n        );\n      } else if (this.hasConflicts) {\n        confirmButton = _react2.default.createElement(\n          _eui.EuiButton,\n          {\n            onClick: this.confirmImport,\n            size: 's',\n            fill: true,\n            isLoading: isLoading,\n            'data-test-subj': 'importSavedObjectsConfirmBtn'\n          },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'kbn.management.objects.objectsTable.flyout.importSuccessful.confirmAllChangesButtonLabel',\n            defaultMessage: 'Confirm all changes'\n          })\n        );\n      } else {\n        confirmButton = _react2.default.createElement(\n          _eui.EuiButton,\n          {\n            onClick: this.import,\n            size: 's',\n            fill: true,\n            isLoading: isLoading,\n            'data-test-subj': 'importSavedObjectsImportBtn'\n          },\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'kbn.management.objects.objectsTable.flyout.import.confirmButtonLabel',\n            defaultMessage: 'Import'\n          })\n        );\n      }\n\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { justifyContent: 'spaceBetween' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiButtonEmpty,\n            { onClick: close, size: 's' },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.flyout.import.cancelButtonLabel',\n              defaultMessage: 'Cancel'\n            })\n          )\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          confirmButton\n        )\n      );\n    }\n  }, {\n    key: 'renderSubheader',\n    value: function renderSubheader() {\n      if (!this.hasConflicts || this.state.isLoading || this.state.wasImportSuccessful) {\n        return null;\n      }\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n        _react2.default.createElement(\n          _eui.EuiCallOut,\n          {\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.flyout.indexPatternConflictsTitle',\n              defaultMessage: 'Index Pattern Conflicts'\n            }),\n            color: 'warning',\n            iconType: 'help'\n          },\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.flyout.indexPatternConflictsDescription',\n              defaultMessage: 'The following saved objects use index patterns that do not exist. Please select the index patterns you\\'d like re-associated with them. You can {indexPatternLink} if necessary.',\n              values: {\n                indexPatternLink: _react2.default.createElement(\n                  _eui.EuiLink,\n                  { href: this.props.newIndexPatternUrl },\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'kbn.management.objects.objectsTable.flyout.indexPatternConflictsCalloutLinkText',\n                    defaultMessage: 'create a new index pattern'\n                  })\n                )\n              }\n            })\n          )\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var close = this.props.close;\n\n\n      return _react2.default.createElement(\n        _eui.EuiFlyout,\n        { onClose: close, size: 's' },\n        _react2.default.createElement(\n          _eui.EuiFlyoutHeader,\n          null,\n          _react2.default.createElement(\n            _eui.EuiTitle,\n            null,\n            _react2.default.createElement(\n              'h2',\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'kbn.management.objects.objectsTable.flyout.importSavedObjectTitle',\n                defaultMessage: 'Import saved objects'\n              })\n            )\n          ),\n          this.renderSubheader()\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlyoutBody,\n          null,\n          this.renderError(),\n          this.renderBody()\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlyoutFooter,\n          null,\n          this.renderFooter()\n        )\n      );\n    }\n  }, {\n    key: 'hasConflicts',\n    get: function get() {\n      return this.state.conflicts && this.state.conflicts.length > 0;\n    }\n  }, {\n    key: 'resolutions',\n    get: function get() {\n      return this.state.conflicts.reduce(function (accum, _ref14) {\n        var existingIndexPatternId = _ref14.existingIndexPatternId,\n            newIndexPatternId = _ref14.newIndexPatternId;\n\n        if (newIndexPatternId) {\n          accum.push({\n            oldId: existingIndexPatternId,\n            newId: newIndexPatternId\n          });\n        }\n        return accum;\n      }, []);\n    }\n  }]);\n\n  return FlyoutUI;\n}(_react.Component);\n\nFlyoutUI.propTypes = {\n  close: _propTypes2.default.func.isRequired,\n  done: _propTypes2.default.func.isRequired,\n  services: _propTypes2.default.array.isRequired,\n  newIndexPatternUrl: _propTypes2.default.string.isRequired,\n  indexPatterns: _propTypes2.default.object.isRequired\n};\nvar Flyout = exports.Flyout = (0, _react3.injectI18n)(FlyoutUI);",null]}