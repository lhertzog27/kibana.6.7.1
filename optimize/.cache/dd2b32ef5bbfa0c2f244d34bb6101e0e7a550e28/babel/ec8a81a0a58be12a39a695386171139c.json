{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/store/actions/load_jobs.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/store/actions/load_jobs.js","mtime":1567631712291},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadJobs = undefined;\n\nvar _i18n = require('@kbn/i18n');\n\nvar _services = require('../../services');\n\nvar _action_types = require('../action_types');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nvar loadJobs = exports.loadJobs = function loadJobs() {\n  return function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch) {\n      var jobs;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: _action_types.LOAD_JOBS_START\n              });\n\n              jobs = void 0;\n              _context.prev = 2;\n              _context.next = 5;\n              return (0, _services.loadJobs)();\n\n            case 5:\n              jobs = _context.sent;\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context['catch'](2);\n\n              dispatch({\n                type: _action_types.LOAD_JOBS_FAILURE,\n                payload: { error: _context.t0 }\n              });\n\n              return _context.abrupt('return', (0, _services.showApiError)(_context.t0, _i18n.i18n.translate('xpack.rollupJobs.loadAction.errorTitle', {\n                defaultMessage: 'Error loading rollup jobs'\n              })));\n\n            case 12:\n\n              dispatch({\n                type: _action_types.LOAD_JOBS_SUCCESS,\n                payload: { jobs: (0, _services.deserializeJobs)(jobs) }\n              });\n\n            case 13:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, undefined, [[2, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};",null]}