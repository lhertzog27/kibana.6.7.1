{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ErrorGroupDetails/Distribution/index.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ErrorGroupDetails/Distribution/index.js","mtime":1567631711859},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFormattedBuckets = getFormattedBuckets;\n\nvar _eui = require('@elastic/eui');\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Histogram = require('../../../shared/charts/Histogram');\n\nvar _Histogram2 = _interopRequireDefault(_Histogram);\n\nvar _EmptyMessage = require('../../../shared/EmptyMessage');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getFormattedBuckets(buckets, bucketSize) {\n  if (!buckets) {\n    return null;\n  }\n\n  return buckets.map(function (_ref) {\n    var count = _ref.count,\n        key = _ref.key;\n\n    return {\n      x0: key,\n      x: key + bucketSize,\n      y: count\n    };\n  });\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */\n\nfunction Distribution(_ref2) {\n  var distribution = _ref2.distribution,\n      _ref2$title = _ref2.title,\n      title = _ref2$title === undefined ? _i18n.i18n.translate('xpack.apm.errorGroupDetails.occurrencesChartLabel', {\n    defaultMessage: 'Occurrences'\n  }) : _ref2$title;\n\n  var buckets = getFormattedBuckets(distribution.buckets, distribution.bucketSize);\n\n  var isEmpty = distribution.totalHits === 0;\n\n  if (isEmpty) {\n    return _react2.default.createElement(_EmptyMessage.EmptyMessage, {\n      heading: _i18n.i18n.translate('xpack.apm.errorGroupDetails.noErrorsLabel', {\n        defaultMessage: 'No errors were found'\n      })\n    });\n  }\n\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(\n      _eui.EuiTitle,\n      { size: 's' },\n      _react2.default.createElement(\n        'span',\n        null,\n        title\n      )\n    ),\n    _react2.default.createElement(_Histogram2.default, {\n      verticalLineHover: function verticalLineHover(bucket) {\n        return bucket.x;\n      },\n      xType: 'time',\n      buckets: buckets,\n      bucketSize: distribution.bucketSize,\n      formatYShort: function formatYShort(value) {\n        return _i18n.i18n.translate('xpack.apm.errorGroupDetails.occurrencesShortLabel', {\n          defaultMessage: '{occCount} occ.',\n          values: { occCount: value }\n        });\n      },\n      formatYLong: function formatYLong(value) {\n        return _i18n.i18n.translate('xpack.apm.errorGroupDetails.occurrencesLongLabel', {\n          defaultMessage: '{occCount} occurrences',\n          values: { occCount: value }\n        });\n      }\n    })\n  );\n}\n\nexports.default = Distribution;",null]}