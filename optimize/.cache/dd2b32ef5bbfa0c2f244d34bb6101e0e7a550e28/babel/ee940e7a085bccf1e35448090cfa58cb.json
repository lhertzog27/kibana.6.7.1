{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/filter_editor/params_editor/filter_params_phrase_controller.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/filter_editor/params_editor/filter_params_phrase_controller.js","mtime":1567631711733},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterParamsPhraseController = filterParamsPhraseController;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _chrome = require('../../chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar baseUrl = _chrome2.default.addBasePath('/api/kibana/suggestions/values');\n\nfunction filterParamsPhraseController($http, $scope, config) {\n  var _this = this;\n\n  var shouldSuggestValues = this.shouldSuggestValues = config.get('filterEditor:suggestValues');\n\n  this.compactUnion = _lodash2.default.flow(_lodash2.default.union, _lodash2.default.compact);\n\n  this.getValueSuggestions = _lodash2.default.memoize(getValueSuggestions, getFieldQueryHash);\n\n  this.refreshValueSuggestions = function (query) {\n    return _this.getValueSuggestions($scope.field, query).then(function (suggestions) {\n      return $scope.valueSuggestions = suggestions;\n    });\n  };\n\n  this.refreshValueSuggestions();\n\n  function getValueSuggestions(field, query) {\n    if (!shouldSuggestValues || !_lodash2.default.get(field, 'aggregatable') || field.type !== 'string') {\n      return Promise.resolve([]);\n    }\n\n    var params = {\n      query: query,\n      field: field.name\n    };\n\n    return $http.post(baseUrl + '/' + field.indexPattern.title, params).then(function (response) {\n      return response.data;\n    }).catch(function () {\n      return [];\n    });\n  }\n\n  function getFieldQueryHash(field) {\n    var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    return field.indexPattern.id + '/' + field.name + '/' + query;\n  }\n}",null]}