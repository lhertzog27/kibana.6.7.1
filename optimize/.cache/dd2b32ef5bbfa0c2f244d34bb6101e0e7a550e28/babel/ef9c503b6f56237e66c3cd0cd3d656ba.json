{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad/workpad.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/workpad/workpad.js","mtime":1567631711928},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Workpad = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactShortcuts = require('react-shortcuts');\n\nvar _styleIt = require('style-it');\n\nvar _styleIt2 = _interopRequireDefault(_styleIt);\n\nvar _workpad_page = require('../workpad_page');\n\nvar _fullscreen = require('../fullscreen');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar WORKPAD_CANVAS_BUFFER = 32; // 32px padding around the workpad\n\nvar Workpad = exports.Workpad = function (_React$PureComponent) {\n  _inherits(Workpad, _React$PureComponent);\n\n  function Workpad() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Workpad);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Workpad.__proto__ || Object.getPrototypeOf(Workpad)).call.apply(_ref, [this].concat(args))), _this), _this.keyHandler = function (action) {\n      var _this$props = _this.props,\n          fetchAllRenderables = _this$props.fetchAllRenderables,\n          undoHistory = _this$props.undoHistory,\n          redoHistory = _this$props.redoHistory,\n          nextPage = _this$props.nextPage,\n          previousPage = _this$props.previousPage,\n          grid = _this$props.grid,\n          setGrid = _this$props.setGrid;\n\n\n      window.onmousemove = null;\n      window.onmouseup = null;\n\n      // handle keypress events for editor and presentation events\n      // this exists in both contexts\n      if (action === 'REFRESH') {\n        return fetchAllRenderables();\n      }\n\n      // editor events\n      if (action === 'UNDO') {\n        return undoHistory();\n      }\n      if (action === 'REDO') {\n        return redoHistory();\n      }\n      if (action === 'GRID') {\n        return setGrid(!grid);\n      }\n\n      // presentation events\n      if (action === 'PREV') {\n        return previousPage();\n      }\n      if (action === 'NEXT') {\n        return nextPage();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Workpad, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          selectedPageNumber = _props.selectedPageNumber,\n          getAnimation = _props.getAnimation,\n          onTransitionEnd = _props.onTransitionEnd,\n          pages = _props.pages,\n          totalElementCount = _props.totalElementCount,\n          width = _props.width,\n          height = _props.height,\n          workpadCss = _props.workpadCss,\n          grid = _props.grid,\n          isFullscreen = _props.isFullscreen;\n\n\n      var bufferStyle = {\n        height: isFullscreen ? height : height + WORKPAD_CANVAS_BUFFER,\n        width: isFullscreen ? width : width + WORKPAD_CANVAS_BUFFER\n      };\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'canvasWorkpad__buffer', style: bufferStyle },\n        _react2.default.createElement(\n          'div',\n          { className: 'canvasCheckered', style: { height: height, width: width } },\n          !isFullscreen && _react2.default.createElement(_reactShortcuts.Shortcuts, { name: 'EDITOR', handler: this.keyHandler, targetNodeSelector: 'body', global: true }),\n          _react2.default.createElement(\n            _fullscreen.Fullscreen,\n            null,\n            function (_ref2) {\n              var isFullscreen = _ref2.isFullscreen,\n                  windowSize = _ref2.windowSize;\n\n              var scale = Math.min(windowSize.height / height, windowSize.width / width);\n              var fsStyle = isFullscreen ? {\n                transform: 'scale3d(' + scale + ', ' + scale + ', 1)',\n                WebkitTransform: 'scale3d(' + scale + ', ' + scale + ', 1)',\n                msTransform: 'scale3d(' + scale + ', ' + scale + ', 1)',\n                // height,\n                // width,\n                height: windowSize.height < height ? 'auto' : height,\n                width: windowSize.width < width ? 'auto' : width\n              } : {};\n\n              // NOTE: the data-shared-* attributes here are used for reporting\n              return _styleIt2.default.it(workpadCss, _react2.default.createElement(\n                'div',\n                {\n                  className: 'canvasWorkpad ' + (isFullscreen ? 'fullscreen' : ''),\n                  style: fsStyle,\n                  'data-shared-items-count': totalElementCount\n                },\n                isFullscreen && _react2.default.createElement(_reactShortcuts.Shortcuts, {\n                  name: 'PRESENTATION',\n                  handler: _this2.keyHandler,\n                  targetNodeSelector: 'body',\n                  global: true\n                }),\n                pages.map(function (page, i) {\n                  return _react2.default.createElement(_workpad_page.WorkpadPage, {\n                    key: page.id,\n                    page: page,\n                    height: height,\n                    width: width,\n                    isSelected: i + 1 === selectedPageNumber,\n                    animation: getAnimation(i + 1),\n                    onAnimationEnd: onTransitionEnd\n                  });\n                }),\n                _react2.default.createElement('div', {\n                  className: 'canvasGrid',\n                  style: { height: height, width: width, display: grid ? 'block' : 'none' }\n                })\n              ));\n            }\n          )\n        )\n      );\n    }\n  }]);\n\n  return Workpad;\n}(_react2.default.PureComponent);\n\nWorkpad.propTypes = {\n  selectedPageNumber: _propTypes2.default.number.isRequired,\n  getAnimation: _propTypes2.default.func.isRequired,\n  onTransitionEnd: _propTypes2.default.func.isRequired,\n  grid: _propTypes2.default.bool.isRequired,\n  setGrid: _propTypes2.default.func.isRequired,\n  pages: _propTypes2.default.array.isRequired,\n  totalElementCount: _propTypes2.default.number.isRequired,\n  isFullscreen: _propTypes2.default.bool.isRequired,\n  width: _propTypes2.default.number.isRequired,\n  height: _propTypes2.default.number.isRequired,\n  workpadCss: _propTypes2.default.string,\n  undoHistory: _propTypes2.default.func.isRequired,\n  redoHistory: _propTypes2.default.func.isRequired,\n  nextPage: _propTypes2.default.func.isRequired,\n  previousPage: _propTypes2.default.func.isRequired,\n  fetchAllRenderables: _propTypes2.default.func.isRequired,\n  css: _propTypes2.default.object\n};",null]}