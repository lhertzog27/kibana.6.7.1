{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/file_datavisualizer/components/fields_stats/get_field_names.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/file_datavisualizer/components/fields_stats/get_field_names.js","mtime":1567631712044},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFieldNames = getFieldNames;\n\nvar _lodash = require('lodash');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                     * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                     * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                     * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                     */\n\nfunction getFieldNames(results) {\n  var mappings = results.mappings,\n      fieldStats = results.field_stats,\n      columnNames = results.column_names;\n\n  // if columnNames exists (i.e delimited) use it for the field list\n  // so we get the same order\n\n  var tempFields = columnNames !== undefined ? columnNames : Object.keys(fieldStats);\n\n  // there may be fields in the mappings which do not exist in the field_stats\n  // e.g. the message field for a semi-structured log file, as they have no stats.\n  // add any extra fields to the list\n  var differenceFields = (0, _lodash.difference)(Object.keys(mappings), tempFields);\n\n  // except @timestamp\n  var timestampIndex = differenceFields.indexOf('@timestamp');\n  if (timestampIndex !== -1) {\n    differenceFields.splice(timestampIndex, 1);\n  }\n\n  if (differenceFields.length) {\n    tempFields.push.apply(tempFields, _toConsumableArray(differenceFields));\n  }\n  return tempFields;\n}",null]}