{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/file_datavisualizer/components/file_datavisualizer_view/file_error_callouts.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/file_datavisualizer/components/file_datavisualizer_view/file_error_callouts.js","mtime":1567631712044},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileTooLarge = FileTooLarge;\nexports.FileCouldNotBeRead = FileCouldNotBeRead;\n\nvar _react = require('@kbn/i18n/react');\n\nvar _react2 = require('react');\n\nvar _react3 = _interopRequireDefault(_react2);\n\nvar _eui = require('@elastic/eui');\n\nvar _numeral = require('@elastic/numeral');\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nvar FILE_SIZE_DISPLAY_FORMAT = '0,0.[0] b';\n\nfunction FileTooLarge(_ref) {\n  var fileSize = _ref.fileSize,\n      maxFileSize = _ref.maxFileSize;\n\n  var fileSizeFormatted = (0, _numeral2.default)(fileSize).format(FILE_SIZE_DISPLAY_FORMAT);\n  var maxFileSizeFormatted = (0, _numeral2.default)(maxFileSize).format(FILE_SIZE_DISPLAY_FORMAT);\n\n  // Format the byte values, using the second format if the difference between\n  // the file size and the max is so small that the formatted values are identical\n  // e.g. 100.01 MB and 100.0 MB\n  var errorText = void 0;\n  if (fileSizeFormatted !== maxFileSizeFormatted) {\n    errorText = _react3.default.createElement(\n      'p',\n      null,\n      _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.fileErrorCallouts.fileSizeExceedsAllowedSizeErrorMessage',\n        defaultMessage: 'The size of the file you selected for upload is {fileSizeFormatted} which exceeds the maximum permitted size of {maxFileSizeFormatted}',\n        values: {\n          fileSizeFormatted: fileSizeFormatted,\n          maxFileSizeFormatted: maxFileSizeFormatted\n        }\n      })\n    );\n  } else {\n    var diffFormatted = (0, _numeral2.default)(fileSize - maxFileSize).format(FILE_SIZE_DISPLAY_FORMAT);\n    errorText = _react3.default.createElement(\n      'p',\n      null,\n      _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.fileErrorCallouts.fileSizeExceedsAllowedSizeByDiffFormatErrorMessage',\n        defaultMessage: 'The size of the file you selected for upload exceeds the maximum permitted size of {maxFileSizeFormatted} by {diffFormatted}',\n        values: {\n          maxFileSizeFormatted: maxFileSizeFormatted,\n          diffFormatted: diffFormatted\n        }\n      })\n    );\n  }\n\n  return _react3.default.createElement(\n    _eui.EuiCallOut,\n    {\n      title: _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.fileErrorCallouts.fileSizeTooLargeTitle',\n        defaultMessage: 'File size is too large'\n      }),\n      color: 'danger',\n      iconType: 'cross'\n    },\n    errorText\n  );\n}\n\nfunction FileCouldNotBeRead(_ref2) {\n  var error = _ref2.error,\n      loaded = _ref2.loaded;\n\n  return _react3.default.createElement(\n    _eui.EuiCallOut,\n    {\n      title: _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.fileErrorCallouts.fileCouldNotBeReadTitle',\n        defaultMessage: 'File could not be read'\n      }),\n      color: 'danger',\n      iconType: 'cross'\n    },\n    error !== undefined && _react3.default.createElement(\n      'p',\n      null,\n      error\n    ),\n    loaded && _react3.default.createElement(\n      'p',\n      null,\n      _react3.default.createElement(_react.FormattedMessage, {\n        id: 'xpack.ml.fileDatavisualizer.fileErrorCallouts.revertingToPreviousSettingsDescription',\n        defaultMessage: 'Reverting to previous settings'\n      })\n    )\n  );\n}",null]}