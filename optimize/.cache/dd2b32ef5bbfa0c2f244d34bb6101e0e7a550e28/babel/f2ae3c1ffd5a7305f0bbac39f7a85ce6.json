{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/formatters/metric_change_description.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/formatters/metric_change_description.js","mtime":1567631712046},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetricChangeDescription = getMetricChangeDescription;\n\nvar _i18n = require('@kbn/i18n');\n\nvar _modules = require('ui/modules');\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n/*\n * Produces a concise textual description of how the\n * actual value compares to the typical value for an anomaly.\n */\n\nvar _module = _modules.uiModules.get('apps/ml');\n\n// Returns an Object containing a text message and EuiIcon type to\n// describe how the actual value compares to the typical.\nfunction getMetricChangeDescription(actualProp, typicalProp) {\n  if (actualProp === undefined || typicalProp === undefined) {\n    return { iconType: 'empty', message: '' };\n  }\n\n  var iconType = void 0;\n  var message = void 0;\n\n  // For metric functions, actual and typical will be single value arrays.\n  var actual = actualProp;\n  var typical = typicalProp;\n  if (Array.isArray(actualProp)) {\n    if (actualProp.length === 1) {\n      actual = actualProp[0];\n    } else {\n      // TODO - do we want to enhance the description depending on detector?\n      // e.g. 'Unusual location' if using a lat_long detector.\n      return {\n        iconType: 'alert',\n        message: _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.unusualValuesDescription', {\n          defaultMessage: 'Unusual values'\n        })\n      };\n    }\n  }\n\n  if (Array.isArray(typicalProp)) {\n    if (typicalProp.length === 1) {\n      typical = typicalProp[0];\n    }\n  }\n\n  if (actual === typical) {\n    // Very unlikely, but just in case.\n    message = _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.actualSameAsTypicalDescription', {\n      defaultMessage: 'actual same as typical'\n    });\n  } else {\n    // For actual / typical gives output of the form:\n    // 4 / 2        2x higher\n    // 2 / 10       5x lower\n    // 1000 / 1     More than 100x higher\n    // 999 / 1000   Unusually low\n    // 100 / -100   Unusually high\n    // 0 / 100      Unexpected zero value\n    // 1 / 0        Unexpected non-zero value\n    var isHigher = actual > typical;\n    iconType = isHigher ? 'sortUp' : 'sortDown';\n    if (typical !== 0 && actual !== 0) {\n      var factor = isHigher ? actual / typical : typical / actual;\n      if (factor > 1.5) {\n        if (factor <= 100) {\n          message = isHigher ? _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.moreThanOneAndHalfxHigherDescription', {\n            defaultMessage: '{factor}x higher',\n            values: { factor: Math.round(factor) }\n          }) : _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.moreThanOneAndHalfxLowerDescription', {\n            defaultMessage: '{factor}x lower',\n            values: { factor: Math.round(factor) }\n          });\n        } else {\n          message = isHigher ? _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.moreThan100xHigherDescription', {\n            defaultMessage: 'More than 100x higher'\n          }) : _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.moreThan100xLowerDescription', {\n            defaultMessage: 'More than 100x lower'\n          });\n        }\n      } else if (factor >= 1.05) {\n        message = isHigher ? _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.moreThanOneAndFiveHundredthsxHigherDescription', {\n          defaultMessage: '{factor}x higher',\n          values: { factor: factor.toPrecision(2) }\n        }) : _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.moreThanOneAndFiveHundredthsxLowerDescription', {\n          defaultMessage: '{factor}x lower',\n          values: { factor: factor.toPrecision(2) }\n        });\n      } else {\n        message = isHigher ? _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.unusuallyHighDescription', {\n          defaultMessage: 'Unusually high'\n        }) : _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.unusuallyLowDescription', {\n          defaultMessage: 'Unusually low'\n        });\n      }\n    } else {\n      if (actual === 0) {\n        message = _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.unexpectedZeroValueDescription', {\n          defaultMessage: 'Unexpected zero value'\n        });\n      } else {\n        message = _i18n.i18n.translate('xpack.ml.formatters.metricChangeDescription.unexpectedNonZeroValueDescription', {\n          defaultMessage: 'Unexpected non-zero value'\n        });\n      }\n    }\n  }\n\n  return { iconType: iconType, message: message };\n}\n\n// TODO - remove the filter once all uses of the metricChangeDescription Angular filter have been removed.\n_module.filter('metricChangeDescription', function () {\n  return function (actual, typical) {\n    var _getMetricChangeDescr = getMetricChangeDescription(actual, typical),\n        iconType = _getMetricChangeDescr.iconType,\n        message = _getMetricChangeDescr.message;\n\n    switch (iconType) {\n      case 'sortUp':\n        return '<i class=\"fa fa-arrow-up\"></i> ' + message;\n      case 'sortDown':\n        return '<i class=\"fa fa-arrow-down\"></i> ' + message;\n      case 'alert':\n        return '<i class=\"fa fa-exclamation-triangle\"></i> ' + message;\n    }\n\n    return message;\n  };\n});",null]}