{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/param_types/string.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/agg_types/param_types/string.js","mtime":1567631711701},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringParamType = undefined;\n\nvar _string = require('../controls/string.html');\n\nvar _string2 = _interopRequireDefault(_string);\n\nvar _base = require('./base');\n\nvar _legacy_class = require('../../utils/legacy_class');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _legacy_class.createLegacyClass)(StringParamType).inherits(_base.BaseParamType); /*\n                                                                                      * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                      * license agreements. See the NOTICE file distributed with\n                                                                                      * this work for additional information regarding copyright\n                                                                                      * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                      * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                      * not use this file except in compliance with the License.\n                                                                                      * You may obtain a copy of the License at\n                                                                                      *\n                                                                                      *    http://www.apache.org/licenses/LICENSE-2.0\n                                                                                      *\n                                                                                      * Unless required by applicable law or agreed to in writing,\n                                                                                      * software distributed under the License is distributed on an\n                                                                                      * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                      * KIND, either express or implied.  See the License for the\n                                                                                      * specific language governing permissions and limitations\n                                                                                      * under the License.\n                                                                                      */\n\nfunction StringParamType(config) {\n  StringParamType.Super.call(this, config);\n}\n\nStringParamType.prototype.editor = _string2.default;\n\n/**\n * Write the aggregation parameter.\n *\n * @param  {AggConfig} aggConfig - the entire configuration for this agg\n * @param  {object} output - the result of calling write on all of the aggregations\n *                         parameters.\n * @param  {object} output.params - the final object that will be included as the params\n *                               for the agg\n * @return {undefined}\n */\nStringParamType.prototype.write = function (aggConfig, output) {\n  if (aggConfig.params[this.name] && aggConfig.params[this.name].length) {\n    output.params[this.name] = aggConfig.params[this.name];\n  }\n};\n\nexports.StringParamType = StringParamType;",null]}