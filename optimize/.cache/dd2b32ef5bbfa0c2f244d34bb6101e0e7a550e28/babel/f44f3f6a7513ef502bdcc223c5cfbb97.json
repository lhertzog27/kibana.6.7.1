{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/services/table_service.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/services/table_service.js","mtime":1567631712063},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mlTableService = undefined;\n\nvar _listener_factory = require('../factories/listener_factory');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*\n                                                                                                                                                           * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                           * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                           * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                           */\n\n/*\n * Service for firing and registering for events in the\n * anomalies or annotations table component.\n */\n\nvar TableService = function TableService() {\n  _classCallCheck(this, TableService);\n\n  var listenerFactory = (0, _listener_factory.listenerFactoryProvider)();\n  this.rowMouseenter = listenerFactory();\n  this.rowMouseleave = listenerFactory();\n};\n\nvar mlTableService = exports.mlTableService = new TableService();",null]}