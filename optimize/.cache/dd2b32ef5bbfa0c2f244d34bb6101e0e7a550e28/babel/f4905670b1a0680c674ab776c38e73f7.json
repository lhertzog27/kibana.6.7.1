{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/components/watch_actions/watch_actions.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/watcher/public/components/watch_actions/watch_actions.js","mtime":1567631712342},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _modules = require('ui/modules');\n\nvar _watch_actions = require('./watch_actions.html');\n\nvar _watch_actions2 = _interopRequireDefault(_watch_actions);\n\nrequire('./components/watch_action');\n\nrequire('plugins/watcher/components/action_type_select');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*\n                                                                                                                                                           * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                           * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                           * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                           */\n\nvar app = _modules.uiModules.get('xpack/watcher');\n\napp.directive('watchActions', function () {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: _watch_actions2.default,\n    scope: {\n      actions: '=',\n      onActionAdd: '=',\n      onActionChange: '=',\n      onActionSimulate: '=',\n      onActionDelete: '=',\n      onValid: '=',\n      onInvalid: '='\n    },\n    bindToController: true,\n    controllerAs: 'watchActions',\n    controller: function WatchActionsController($scope) {\n      var _this = this;\n\n      _classCallCheck(this, WatchActionsController);\n\n      this.onToggle = function (action) {\n        var item = (0, _lodash.find)(_this.items, { action: action });\n        item.isCollapsed = !item.isCollapsed;\n      };\n\n      this.onDelete = function (action) {\n        _this.onActionDelete(action);\n\n        var item = (0, _lodash.find)(_this.items, { action: action });\n        (0, _lodash.remove)(_this.items, item);\n\n        _this.checkValidity();\n      };\n\n      this.onActionTypeChange = function (type) {\n        _this.onActionAdd(type);\n\n        var oldActions = (0, _lodash.map)(_this.items, function (item) {\n          return item.action;\n        });\n        var newActions = (0, _lodash.difference)(_this.actions, oldActions);\n\n        (0, _lodash.forEach)(newActions, function (action) {\n          _this.items.push({\n            action: action,\n            isCollapsed: false\n          });\n        });\n      };\n\n      this.checkValidity = function () {\n        var isValid = _this.items.length === 0 || _this.items.every(function (i) {\n          return i.isValid;\n        });\n\n        if (isValid) {\n          _this.onValid(_this.action);\n        } else {\n          _this.onInvalid(_this.action);\n        }\n      };\n\n      this.onActionValid = function (action) {\n        var item = (0, _lodash.find)(_this.items, { action: action });\n        item.isValid = true;\n\n        _this.checkValidity();\n      };\n\n      this.onActionInvalid = function (action) {\n        var item = (0, _lodash.find)(_this.items, { action: action });\n        item.isValid = false;\n\n        _this.checkValidity();\n      };\n\n      this.items = [];\n\n      $scope.$watch('watchActions.actions', function (newVal) {\n        if (!Boolean(newVal)) {\n          return;\n        }\n\n        _this.items = (0, _lodash.map)(newVal, function (action) {\n          return {\n            action: action,\n            isCollapsed: true,\n            isValid: true\n          };\n        });\n        _this.checkValidity();\n      });\n    }\n  };\n});",null]}