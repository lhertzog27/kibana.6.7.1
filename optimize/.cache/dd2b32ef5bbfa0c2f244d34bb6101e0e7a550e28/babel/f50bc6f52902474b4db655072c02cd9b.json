{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/store/reducers/jobs.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/rollup/public/crud_app/store/reducers/jobs.js","mtime":1567631712291},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nexports.jobs = jobs;\n\nvar _action_types = require('../action_types');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar initialState = {\n  isLoading: false,\n  byId: {},\n  allIds: []\n};\n\nfunction mapJobsToIds(jobs) {\n  var jobsById = {};\n  jobs.forEach(function (job) {\n    jobsById[job.id] = job;\n  });\n  return jobsById;\n}\n\nfunction getJobsIds(jobs) {\n  return jobs.map(function (job) {\n    return job.id;\n  });\n}\n\nfunction jobs() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments[1];\n  var type = action.type,\n      payload = action.payload;\n\n\n  switch (type) {\n    case _action_types.LOAD_JOBS_START:\n      return _extends({}, state, {\n        isLoading: true\n      });\n\n    case _action_types.LOAD_JOBS_SUCCESS:\n      return {\n        byId: mapJobsToIds(payload.jobs),\n        allIds: getJobsIds(payload.jobs),\n        isLoading: false\n      };\n\n    case _action_types.REFRESH_JOBS_SUCCESS:\n      return {\n        byId: mapJobsToIds(payload.jobs),\n        allIds: getJobsIds(payload.jobs)\n      };\n\n    case _action_types.LOAD_JOBS_FAILURE:\n      return _extends({}, state, {\n        isLoading: false,\n        jobLoadError: payload.error\n      });\n\n    case _action_types.CREATE_JOB_SUCCESS:\n      var job = payload.job;\n\n\n      return {\n        byId: _extends({}, state.byId, _defineProperty({}, job.id, job)),\n        allIds: state.allIds.concat(job.id)\n      };\n\n    default:\n      return state;\n  }\n}",null]}