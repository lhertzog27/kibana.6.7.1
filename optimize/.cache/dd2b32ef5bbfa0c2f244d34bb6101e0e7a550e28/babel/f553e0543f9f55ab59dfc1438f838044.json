{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/courier/fetch/request/search_request/search_request.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/courier/fetch/request/search_request/search_request.js","mtime":1567631711713},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Licensed to Elasticsearch B.V. under one or more contributor\nlicense agreements. See the NOTICE file distributed with\nthis work for additional information regarding copyright\nownership. Elasticsearch B.V. licenses this file to you under\nthe Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License.\nou may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\nhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn\nexports.SearchRequestProvider = SearchRequestProvider;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _search_request_queue = require('../../../search_request_queue');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction SearchRequestProvider(Promise) {\n  var SearchRequest = function () {\n    function SearchRequest(_ref) {\n      var source = _ref.source,\n          defer = _ref.defer,\n          errorHandler = _ref.errorHandler;\n\n      _classCallCheck(this, SearchRequest);\n\n      _initialiseProps.call(this);\n\n      if (!errorHandler) {\n        throw new Error(_i18n.i18n.translate('common.ui.courier.fetch.requireErrorHandlerErrorMessage', {\n          defaultMessage: '{errorHandler} is required',\n          values: { errorHandler: 'errorHandler' }\n        }));\n      }\n\n      this.errorHandler = errorHandler;\n      this.source = source;\n      this.defer = defer || Promise.defer();\n      this.abortedDefer = Promise.defer();\n      this.type = 'search';\n\n      // Track execution time.\n      this.moment = undefined;\n      this.ms = undefined;\n\n      // Lifecycle state.\n      this.started = false;\n      this.stopped = false;\n      this._isFetchRequested = false;\n\n      _search_request_queue.searchRequestQueue.add(this);\n    }\n\n    /**\n     *  Called by the searchPoll to find requests that should be sent to the\n     *  fetchSoon module. When a module is sent to fetchSoon its _isFetchRequested flag\n     *  is set, and this consults that flag so requests are not send to fetchSoon\n     *  multiple times.\n     *\n     *  @return {Boolean}\n     */\n\n\n    _createClass(SearchRequest, [{\n      key: 'canStart',\n      value: function canStart() {\n        if (this.source._fetchDisabled) {\n          return false;\n        }\n\n        if (this.stopped) {\n          return false;\n        }\n\n        if (this._isFetchRequested) {\n          return false;\n        }\n\n        return true;\n      }\n\n      /**\n       *  Used to find requests that were previously sent to the fetchSoon module but\n       *  have not been started yet, so they can be started.\n       *\n       *  @return {Boolean}\n       */\n\n    }, {\n      key: 'isFetchRequestedAndPending',\n      value: function isFetchRequestedAndPending() {\n        if (this.started) {\n          return false;\n        }\n\n        return this._isFetchRequested;\n      }\n\n      /**\n       *  Called by the fetchSoon module when this request has been sent to\n       *  be fetched. At that point the request is somewhere between `ready-to-start`\n       *  and `started`. The fetch module then waits a short period of time to\n       *  allow requests to build up in the request queue, and then immediately\n       *  fetches all requests that return true from `isFetchRequestedAndPending()`\n       *\n       *  @return {undefined}\n       */\n\n    }, {\n      key: '_setFetchRequested',\n      value: function _setFetchRequested() {\n        this._isFetchRequested = true;\n      }\n    }, {\n      key: 'start',\n      value: function start() {\n        if (this.started) {\n          throw new TypeError(_i18n.i18n.translate('common.ui.courier.fetch.unableStartRequestErrorMessage', {\n            defaultMessage: 'Unable to start request because it has already started'\n          }));\n        }\n\n        this.started = true;\n        this.moment = (0, _moment2.default)();\n\n        return this.source.requestIsStarting(this);\n      }\n    }, {\n      key: 'getFetchParams',\n      value: function getFetchParams() {\n        return this.source._flatten();\n      }\n    }, {\n      key: 'filterError',\n      value: function filterError() {\n        return false;\n      }\n    }, {\n      key: 'handleResponse',\n      value: function handleResponse(resp) {\n        this.success = true;\n        this.resp = resp;\n      }\n    }, {\n      key: 'handleFailure',\n      value: function handleFailure(error) {\n        this.success = false;\n        this.resp = error;\n        this.resp = error && error.resp || error;\n        return this.errorHandler(this, error);\n      }\n    }, {\n      key: 'isIncomplete',\n      value: function isIncomplete() {\n        return false;\n      }\n    }, {\n      key: 'continue',\n      value: function _continue() {\n        throw new Error(_i18n.i18n.translate('common.ui.courier.fetch.unableContinueRequestErrorMessage', {\n          defaultMessage: 'Unable to continue {type} request',\n          values: { type: this.type }\n        }));\n      }\n    }, {\n      key: 'retry',\n      value: function retry() {\n        var clone = this.clone();\n        this.abort();\n        return clone;\n      }\n    }, {\n      key: '_markStopped',\n      value: function _markStopped() {\n        if (this.stopped) return;\n        this.stopped = true;\n        this.source.requestIsStopped(this);\n        _search_request_queue.searchRequestQueue.remove(this);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        this._markStopped();\n        this.defer = null;\n        this.aborted = true;\n        this.abortedDefer.resolve();\n        this.abortedDefer = null;\n      }\n    }, {\n      key: 'whenAborted',\n      value: function whenAborted(cb) {\n        this.abortedDefer.promise.then(cb);\n      }\n    }, {\n      key: 'complete',\n      value: function complete() {\n        this._markStopped();\n        this.ms = this.moment.diff() * -1;\n        this.defer.resolve(this.resp);\n      }\n    }, {\n      key: 'getCompletePromise',\n      value: function getCompletePromise() {\n        return this.defer.promise;\n      }\n    }, {\n      key: 'getCompleteOrAbortedPromise',\n      value: function getCompleteOrAbortedPromise() {\n        return Promise.race([this.defer.promise, this.abortedDefer.promise]);\n      }\n    }]);\n\n    return SearchRequest;\n  }();\n\n  var _initialiseProps = function _initialiseProps() {\n    var _this = this;\n\n    this.clone = function () {\n      var source = _this.source,\n          defer = _this.defer,\n          errorHandler = _this.errorHandler;\n\n      return new SearchRequest({ source: source, defer: defer, errorHandler: errorHandler });\n    };\n  };\n\n  return SearchRequest;\n}",null]}