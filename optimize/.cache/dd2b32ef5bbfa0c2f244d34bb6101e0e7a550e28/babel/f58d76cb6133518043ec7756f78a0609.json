{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/explorer/explorer_react_wrapper_directive.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/explorer/explorer_react_wrapper_directive.js","mtime":1567631712041},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _explorer = require('./explorer');\n\nvar _modules = require('ui/modules');\n\nvar _i18n = require('ui/i18n');\n\nvar _explorer_utils = require('./explorer_utils');\n\nvar _explorer_constants = require('./explorer_constants');\n\nvar _explorer_dashboard_service = require('./explorer_dashboard_service');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n/*\n * AngularJS directive wrapper for rendering Anomaly Explorer's React component.\n */\n\nvar _module = _modules.uiModules.get('apps/ml');\n\n_module.directive('mlExplorerReactWrapper', function () {\n  function link(scope, element) {\n    _reactDom2.default.render(_react2.default.createElement(\n      _i18n.I18nContext,\n      null,\n      _react2.default.createElement(_explorer.Explorer, (0, _explorer_utils.mapScopeToProps)(scope))\n    ), element[0]);\n\n    _explorer_dashboard_service.mlExplorerDashboardService.explorer.changed(_explorer_constants.EXPLORER_ACTION.LOAD_JOBS);\n\n    element.on('$destroy', function () {\n      _reactDom2.default.unmountComponentAtNode(element[0]);\n      scope.$destroy();\n    });\n  }\n\n  return {\n    scope: false,\n    link: link\n  };\n});",null]}