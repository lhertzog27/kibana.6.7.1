{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/grokdebugger/public/sections/grokdebugger/components/grok_debugger/grok_debugger.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/grokdebugger/public/sections/grokdebugger/components/grok_debugger/grok_debugger.js","mtime":1567631711961},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GrokDebugger = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _eui = require('@elastic/eui');\n\nvar _event_input = require('../event_input');\n\nvar _pattern_input = require('../pattern_input');\n\nvar _custom_patterns_input = require('../custom_patterns_input');\n\nvar _event_output = require('../event_output');\n\nvar _grokdebugger_request = require('../../../../models/grokdebugger_request');\n\nvar _notify = require('ui/notify');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar GrokDebugger = exports.GrokDebugger = function (_React$Component) {\n  _inherits(GrokDebugger, _React$Component);\n\n  function GrokDebugger(props) {\n    var _this2 = this;\n\n    _classCallCheck(this, GrokDebugger);\n\n    var _this = _possibleConstructorReturn(this, (GrokDebugger.__proto__ || Object.getPrototypeOf(GrokDebugger)).call(this, props));\n\n    _this.onRawEventChange = function (rawEvent) {\n      _this.setState({ rawEvent: rawEvent });\n      _this.grokdebuggerRequest.rawEvent = rawEvent;\n    };\n\n    _this.onPatternChange = function (pattern) {\n      _this.setState({ pattern: pattern });\n      _this.grokdebuggerRequest.pattern = pattern;\n    };\n\n    _this.onCustomPatternsChange = function (customPatterns) {\n      _this.setState({ customPatterns: customPatterns });\n\n      customPatterns = customPatterns.trim();\n      var customPatternsObj = {};\n\n      if (!customPatterns) {\n        _this.grokdebuggerRequest.customPatterns = customPatternsObj;\n        return;\n      }\n\n      customPatterns.split('\\n').forEach(function (customPattern) {\n        // Patterns are defined like so:\n        // patternName patternDefinition\n        // For example:\n        var _ref = customPattern.match(/(\\S+)\\s+(.+)/) || [],\n            _ref2 = _slicedToArray(_ref, 3),\n            patternName = _ref2[1],\n            patternDefinition = _ref2[2];\n\n        if (patternName && patternDefinition) {\n          customPatternsObj[patternName] = patternDefinition;\n        }\n      });\n\n      _this.grokdebuggerRequest.customPatterns = customPatternsObj;\n    };\n\n    _this.simulateGrok = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var simulateResponse;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _this.props.grokdebuggerService.simulate(_this.grokdebuggerRequest);\n\n            case 3:\n              simulateResponse = _context.sent;\n\n              _this.setState({\n                structuredEvent: simulateResponse.structuredEvent\n              });\n\n              if (!(0, _lodash.isEmpty)(simulateResponse.error)) {\n                _notify.toastNotifications.addDanger(simulateResponse.error);\n              }\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context['catch'](0);\n\n              _notify.toastNotifications.addDanger(_context.t0);\n\n            case 11:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2, [[0, 8]]);\n    }));\n\n    _this.onSimulateClick = function () {\n      _this.setState({\n        structuredEvent: {}\n      }, _this.simulateGrok);\n    };\n\n    _this.isSimulateDisabled = function () {\n      return _this.state.rawEvent.trim() === '' || _this.state.pattern.trim() === '';\n    };\n\n    _this.state = {\n      rawEvent: '',\n      pattern: '',\n      customPatterns: '',\n      structuredEvent: {}\n    };\n    _this.grokdebuggerRequest = new _grokdebugger_request.GrokdebuggerRequest();\n    return _this;\n  }\n\n  _createClass(GrokDebugger, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        _eui.EuiPage,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPageBody,\n          null,\n          _react2.default.createElement(\n            _eui.EuiPageContent,\n            null,\n            _react2.default.createElement(\n              _eui.EuiPageContentBody,\n              null,\n              _react2.default.createElement(\n                _eui.EuiForm,\n                {\n                  className: 'grokdebugger-container',\n                  'data-test-subj': 'grokDebugger'\n                },\n                _react2.default.createElement(_event_input.EventInput, {\n                  value: this.state.rawEvent,\n                  onChange: this.onRawEventChange\n                }),\n                _react2.default.createElement(_pattern_input.PatternInput, {\n                  value: this.state.pattern,\n                  onChange: this.onPatternChange\n                }),\n                _react2.default.createElement(_custom_patterns_input.CustomPatternsInput, {\n                  value: this.state.customPatterns,\n                  onChange: this.onCustomPatternsChange\n                }),\n                _react2.default.createElement(_eui.EuiSpacer, null),\n                _react2.default.createElement(\n                  _eui.EuiButton,\n                  {\n                    fill: true,\n                    onClick: this.onSimulateClick,\n                    isDisabled: this.isSimulateDisabled(),\n                    'data-test-subj': 'btnSimulate'\n                  },\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.grokDebugger.simulateButtonLabel',\n                    defaultMessage: 'Simulate'\n                  })\n                ),\n                _react2.default.createElement(_eui.EuiSpacer, null),\n                _react2.default.createElement(_event_output.EventOutput, { value: this.state.structuredEvent })\n              )\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return GrokDebugger;\n}(_react2.default.Component);",null]}