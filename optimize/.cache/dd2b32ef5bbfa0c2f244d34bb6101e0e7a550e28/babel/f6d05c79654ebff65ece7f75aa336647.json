{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/cluster/overview/elasticsearch_panel.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/cluster/overview/elasticsearch_panel.js","mtime":1567631712084},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ElasticsearchPanel = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _format_number = require('plugins/monitoring/lib/format_number');\n\nvar _helpers = require('./helpers');\n\nvar _eui = require('@elastic/eui');\n\nvar _license_text = require('./license_text');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar calculateShards = function calculateShards(shards) {\n  var total = (0, _lodash.get)(shards, 'total', 0);\n  var primaries = (0, _lodash.get)(shards, 'primaries', 'N/A');\n  var replicas = 'N/A';\n\n  // we subtract primaries from total to get replica count, so if we don't know primaries, then\n  //  we cannot know replicas (because we'd be showing the wrong number!)\n  if (primaries !== 'N/A') {\n    replicas = (0, _format_number.formatNumber)(total - primaries, 'int_commas');\n    primaries = (0, _format_number.formatNumber)(primaries, 'int_commas');\n  }\n\n  return {\n    primaries: primaries,\n    replicas: replicas\n  };\n};\n\nfunction ElasticsearchPanelUi(props) {\n\n  var clusterStats = props.cluster_stats || {};\n  var nodes = clusterStats.nodes;\n  var indices = clusterStats.indices;\n\n  var goToElasticsearch = function goToElasticsearch() {\n    return props.changeUrl('elasticsearch');\n  };\n  var goToNodes = function goToNodes() {\n    return props.changeUrl('elasticsearch/nodes');\n  };\n  var goToIndices = function goToIndices() {\n    return props.changeUrl('elasticsearch/indices');\n  };\n\n  var _calculateShards = calculateShards((0, _lodash.get)(props, 'cluster_stats.indices.shards', {})),\n      primaries = _calculateShards.primaries,\n      replicas = _calculateShards.replicas;\n\n  var statusIndicator = _react2.default.createElement(_helpers.HealthStatusIndicator, { status: clusterStats.status });\n\n  var showMlJobs = function showMlJobs() {\n    // if license doesn't support ML, then `ml === null`\n    if (props.ml) {\n      return [_react2.default.createElement(\n        _eui.EuiDescriptionListTitle,\n        { key: 'mlJobsListTitle' },\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.monitoring.cluster.overview.esPanel.jobsLabel',\n          defaultMessage: 'Jobs'\n        })\n      ), _react2.default.createElement(\n        _eui.EuiDescriptionListDescription,\n        { key: 'mlJobsCount', 'data-test-subj': 'esMlJobs' },\n        props.ml.jobs\n      )];\n    }\n    return null;\n  };\n\n  var licenseText = _react2.default.createElement(_license_text.LicenseText, { license: props.license, showLicenseExpiration: props.showLicenseExpiration });\n\n  return _react2.default.createElement(\n    _helpers.ClusterItemContainer,\n    _extends({}, props, {\n      statusIndicator: statusIndicator,\n      url: 'elasticsearch',\n      title: 'Elasticsearch',\n      extras: licenseText\n    }),\n    _react2.default.createElement(\n      _eui.EuiFlexGrid,\n      { columns: 4 },\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPanel,\n          { paddingSize: 'm' },\n          _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h3',\n              null,\n              _react2.default.createElement(\n                _eui.EuiLink,\n                {\n                  onClick: goToElasticsearch,\n                  'aria-label': props.intl.formatMessage({\n                    id: 'xpack.monitoring.cluster.overview.esPanel.overviewLinkAriaLabel', defaultMessage: 'Elasticsearch Overview' }),\n                  'data-test-subj': 'esOverview'\n                },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.monitoring.cluster.overview.esPanel.overviewLinkLabel',\n                  defaultMessage: 'Overview'\n                })\n              )\n            )\n          ),\n          _react2.default.createElement(_eui.EuiHorizontalRule, { margin: 'm' }),\n          _react2.default.createElement(\n            _eui.EuiDescriptionList,\n            { type: 'column' },\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.esPanel.versionLabel',\n                defaultMessage: 'Version'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'esVersion' },\n              props.version || props.intl.formatMessage({\n                id: 'xpack.monitoring.cluster.overview.esPanel.versionNotAvailableDescription', defaultMessage: 'N/A' })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.esPanel.uptimeLabel',\n                defaultMessage: 'Uptime'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'esUptime' },\n              (0, _format_number.formatNumber)((0, _lodash.get)(nodes, 'jvm.max_uptime_in_millis'), 'time_since')\n            ),\n            showMlJobs()\n          )\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPanel,\n          { paddingSize: 'm' },\n          _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h3',\n              null,\n              _react2.default.createElement(\n                _eui.EuiLink,\n                {\n                  'data-test-subj': 'esNumberOfNodes',\n                  onClick: goToNodes\n                },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.monitoring.cluster.overview.esPanel.nodesTotalLinkLabel',\n                  defaultMessage: 'Nodes: {nodesTotal}',\n                  values: { nodesTotal: (0, _format_number.formatNumber)((0, _lodash.get)(nodes, 'count.total'), 'int_commas') }\n                })\n              )\n            )\n          ),\n          _react2.default.createElement(_eui.EuiHorizontalRule, { margin: 'm' }),\n          _react2.default.createElement(\n            _eui.EuiDescriptionList,\n            { type: 'column' },\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.esPanel.diskAvailableLabel',\n                defaultMessage: 'Disk Available'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'esDiskAvailable' },\n              _react2.default.createElement(_helpers.BytesUsage, {\n                usedBytes: (0, _lodash.get)(nodes, 'fs.available_in_bytes'),\n                maxBytes: (0, _lodash.get)(nodes, 'fs.total_in_bytes')\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.esPanel.jvmHeapLabel',\n                defaultMessage: '{javaVirtualMachine} Heap',\n                values: { javaVirtualMachine: 'JVM' }\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'esJvmHeap' },\n              _react2.default.createElement(_helpers.BytesPercentageUsage, {\n                usedBytes: (0, _lodash.get)(nodes, 'jvm.mem.heap_used_in_bytes'),\n                maxBytes: (0, _lodash.get)(nodes, 'jvm.mem.heap_max_in_bytes')\n              })\n            )\n          )\n        )\n      ),\n      _react2.default.createElement(\n        _eui.EuiFlexItem,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPanel,\n          { paddingSize: 'm' },\n          _react2.default.createElement(\n            _eui.EuiTitle,\n            { size: 's' },\n            _react2.default.createElement(\n              'h3',\n              null,\n              _react2.default.createElement(\n                _eui.EuiLink,\n                {\n                  onClick: goToIndices,\n                  'data-test-subj': 'esNumberOfIndices',\n                  'aria-label': props.intl.formatMessage({\n                    id: 'xpack.monitoring.cluster.overview.esPanel.indicesCountLinkAriaLabel',\n                    defaultMessage: 'Elasticsearch Indices: {indicesCount}' }, { indicesCount: (0, _format_number.formatNumber)((0, _lodash.get)(indices, 'count'), 'int_commas') })\n                },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.monitoring.cluster.overview.esPanel.indicesCountLinkLabel',\n                  defaultMessage: 'Indices: {indicesCount}',\n                  values: { indicesCount: (0, _format_number.formatNumber)((0, _lodash.get)(indices, 'count'), 'int_commas') }\n                })\n              )\n            )\n          ),\n          _react2.default.createElement(_eui.EuiHorizontalRule, { margin: 'm' }),\n          _react2.default.createElement(\n            _eui.EuiDescriptionList,\n            { type: 'column' },\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.esPanel.documentsLabel',\n                defaultMessage: 'Documents'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'esDocumentsCount' },\n              (0, _format_number.formatNumber)((0, _lodash.get)(indices, 'docs.count'), 'int_commas')\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.esPanel.diskUsageLabel',\n                defaultMessage: 'Disk Usage'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'esDiskUsage' },\n              (0, _format_number.formatNumber)((0, _lodash.get)(indices, 'store.size_in_bytes'), 'byte')\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.esPanel.primaryShardsLabel',\n                defaultMessage: 'Primary Shards'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'esPrimaryShards' },\n              primaries\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListTitle,\n              null,\n              _react2.default.createElement(_react3.FormattedMessage, {\n                id: 'xpack.monitoring.cluster.overview.esPanel.replicaShardsLabel',\n                defaultMessage: 'Replica Shards'\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiDescriptionListDescription,\n              { 'data-test-subj': 'esReplicaShards' },\n              replicas\n            )\n          )\n        )\n      )\n    )\n  );\n}\n\nvar ElasticsearchPanel = exports.ElasticsearchPanel = (0, _react3.injectI18n)(ElasticsearchPanelUi);",null]}