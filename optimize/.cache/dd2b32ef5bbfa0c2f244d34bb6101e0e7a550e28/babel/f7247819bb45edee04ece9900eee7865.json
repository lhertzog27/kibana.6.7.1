{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/pipeline_viewer/views/detail_drawer.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/logstash/pipeline_viewer/views/detail_drawer.js","mtime":1567631712092},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DetailDrawer = DetailDrawer;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _eui = require('@elastic/eui');\n\nvar _sparkline = require('../../../sparkline');\n\nvar _format_number = require('../../../../lib/format_number');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nfunction renderIcon(vertex) {\n  return _react2.default.createElement(_eui.EuiIcon, {\n    type: vertex.iconType,\n    className: 'lspvDetailDrawerIcon'\n  });\n}\n\nfunction renderPluginBasicStats(vertex, timeseriesTooltipXValueFormatter) {\n\n  var eventsLatencyValueFormatter = function eventsLatencyValueFormatter(value) {\n    return (0, _format_number.formatMetric)(value, '0.[00]a', 'ms/e');\n  };\n  var latestEventsLatency = Array.isArray(vertex.stats.millis_per_event.data) && vertex.stats.millis_per_event.data.length > 0 ? (0, _lodash.last)(vertex.stats.millis_per_event.data)[1] : null;\n  var eventsLatencyRow = vertex.pluginType === 'input' ? null : _react2.default.createElement(\n    _eui.EuiTableRow,\n    { key: 'events_latency' },\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.monitoring.logstash.pipeline.detailDrawer.eventsLatencyLabel',\n        defaultMessage: 'Events Latency'\n      })\n    ),\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      _react2.default.createElement(\n        'div',\n        { className: 'lspvDetailDrawerSparklineContainer' },\n        _react2.default.createElement(_sparkline.Sparkline, {\n          series: vertex.stats.millis_per_event.data,\n          options: { xaxis: vertex.stats.millis_per_event.timeRange },\n          tooltip: {\n            enabled: true,\n            xValueFormatter: timeseriesTooltipXValueFormatter,\n            yValueFormatter: eventsLatencyValueFormatter\n          }\n        })\n      )\n    ),\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      eventsLatencyValueFormatter(latestEventsLatency)\n    )\n  );\n\n  var eventsOutRateValueFormatter = function eventsOutRateValueFormatter(value) {\n    return (0, _format_number.formatMetric)(value, '0.[0]a', 'e/s');\n  };\n  var eventsOutRateRow = _react2.default.createElement(\n    _eui.EuiTableRow,\n    { key: 'events_out_rate' },\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.monitoring.logstash.pipeline.detailDrawer.eventsEmittedRateLabel',\n        defaultMessage: 'Events Emitted Rate'\n      })\n    ),\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      _react2.default.createElement(\n        'div',\n        { className: 'lspvDetailDrawerSparklineContainer' },\n        _react2.default.createElement(_sparkline.Sparkline, {\n          series: vertex.eventsPerSecond.data,\n          options: { xaxis: vertex.eventsPerSecond.timeRange },\n          tooltip: {\n            enabled: true,\n            xValueFormatter: timeseriesTooltipXValueFormatter,\n            yValueFormatter: eventsOutRateValueFormatter\n          }\n        })\n      )\n    ),\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      eventsOutRateValueFormatter(vertex.latestEventsPerSecond)\n    )\n  );\n\n  var eventsInValueFormatter = function eventsInValueFormatter(value) {\n    return (0, _format_number.formatMetric)(value, '0a', 'events');\n  };\n  var latestEventsIn = Array.isArray(vertex.stats.events_in.data) && vertex.stats.events_in.data.length > 0 ? (0, _lodash.last)(vertex.stats.events_in.data)[1] : null;\n\n  var eventsInRow = vertex.pluginType === 'input' ? null : _react2.default.createElement(\n    _eui.EuiTableRow,\n    { key: 'events_in' },\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.monitoring.logstash.pipeline.detailDrawer.eventsReceivedLabel',\n        defaultMessage: 'Events Received'\n      })\n    ),\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      _react2.default.createElement(\n        'div',\n        { className: 'lspvDetailDrawerSparklineContainer' },\n        _react2.default.createElement(_sparkline.Sparkline, {\n          series: vertex.stats.events_in.data,\n          options: { xaxis: vertex.stats.events_in.timeRange },\n          tooltip: {\n            enabled: true,\n            xValueFormatter: timeseriesTooltipXValueFormatter,\n            yValueFormatter: eventsInValueFormatter\n          }\n        })\n      )\n    ),\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      eventsInValueFormatter(latestEventsIn)\n    )\n  );\n\n  var eventsOutValueFormatter = eventsInValueFormatter;\n  var latestEventsOut = Array.isArray(vertex.stats.events_out.data) && vertex.stats.events_out.data.length > 0 ? (0, _lodash.last)(vertex.stats.events_out.data)[1] : null;\n  var eventsOutRow = _react2.default.createElement(\n    _eui.EuiTableRow,\n    { key: 'events_out' },\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.monitoring.logstash.pipeline.detailDrawer.eventsEmittedLabel',\n        defaultMessage: 'Events Emitted'\n      })\n    ),\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      _react2.default.createElement(\n        'div',\n        { className: 'lspvDetailDrawerSparklineContainer' },\n        _react2.default.createElement(_sparkline.Sparkline, {\n          series: vertex.stats.events_out.data,\n          options: { xaxis: vertex.stats.events_out.timeRange },\n          tooltip: {\n            enabled: true,\n            xValueFormatter: timeseriesTooltipXValueFormatter,\n            yValueFormatter: eventsOutValueFormatter\n          }\n        })\n      )\n    ),\n    _react2.default.createElement(\n      _eui.EuiTableRowCell,\n      null,\n      eventsOutValueFormatter(latestEventsOut)\n    )\n  );\n\n  return _react2.default.createElement(\n    _eui.EuiTable,\n    null,\n    _react2.default.createElement(\n      _eui.EuiTableBody,\n      null,\n      eventsLatencyRow,\n      eventsOutRateRow,\n      eventsInRow,\n      eventsOutRow\n    )\n  );\n}\n\nfunction renderIfBasicStats(_vertex) {\n  return _react2.default.createElement(\n    'p',\n    null,\n    _react2.default.createElement(_react3.FormattedMessage, {\n      id: 'xpack.monitoring.logstash.pipeline.detailDrawer.noMetricsForIfDescription',\n      defaultMessage: 'There are currently no metrics to show for this if condition.'\n    })\n  );\n}\n\nfunction renderQueueBasicStats(_vertex) {\n  return _react2.default.createElement(\n    'p',\n    null,\n    _react2.default.createElement(_react3.FormattedMessage, {\n      id: 'xpack.monitoring.logstash.pipeline.detailDrawer.noMetricsForQueueDescription',\n      defaultMessage: 'There are currently no metrics to show for the queue.'\n    })\n  );\n}\n\nfunction renderBasicStats(vertex, timeseriesTooltipXValueFormatter) {\n  switch (vertex.typeString) {\n    case 'plugin':\n      return renderPluginBasicStats(vertex, timeseriesTooltipXValueFormatter);\n      break;\n    case 'if':\n      return renderIfBasicStats(vertex, timeseriesTooltipXValueFormatter);\n      break;\n    case 'queue':\n      return renderQueueBasicStats(vertex, timeseriesTooltipXValueFormatter);\n      break;\n  }\n}\n\nfunction renderPluginBasicInfo(vertex) {\n  if (vertex.hasExplicitId) {\n    return _react2.default.createElement(\n      'p',\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.monitoring.logstash.pipeline.detailDrawer.vertexIdDescription',\n        defaultMessage: 'This {vertexType}\\'s ID is {vertexId}.',\n        values: { vertexType: vertex.typeString, vertexId: _react2.default.createElement(\n            _eui.EuiBadge,\n            null,\n            vertex.id\n          ) }\n      })\n    );\n  }\n\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(\n      'p',\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.monitoring.logstash.pipeline.detailDrawer.specifyVertexIdDescription',\n        defaultMessage: 'This {vertexType} does not have an ID explicitly specified. Specifying an ID allows you to track differences across pipeline changes. You can explicitly specify an ID for this plugin like so:',\n        values: { vertexType: vertex.typeString }\n      })\n    ),\n    _react2.default.createElement(\n      _eui.EuiCodeBlock,\n      null,\n      vertex.name,\n      ' ',\n      '{\\n  id => \"mySpecialId\"\\n}'\n    ),\n    _react2.default.createElement(_eui.EuiSpacer, null)\n  );\n}\n\nfunction renderIfBasicInfo(vertex) {\n  var ifCode = 'if (' + vertex.subtitle + ') {\\n  ...\\n}';\n\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(\n      'p',\n      null,\n      _react2.default.createElement(_react3.FormattedMessage, {\n        id: 'xpack.monitoring.logstash.pipeline.detailDrawer.conditionalStatementDescription',\n        defaultMessage: 'This is a conditional statement in your pipeline.'\n      })\n    ),\n    _react2.default.createElement(\n      _eui.EuiCodeBlock,\n      null,\n      ifCode\n    ),\n    _react2.default.createElement(_eui.EuiSpacer, null)\n  );\n}\n\nfunction renderQueueBasicInfo(_vertex) {\n  return _react2.default.createElement(\n    'p',\n    null,\n    _react2.default.createElement(_react3.FormattedMessage, {\n      id: 'xpack.monitoring.logstash.pipeline.detailDrawer.structureDescription',\n      defaultMessage: 'This is an internal structure used by Logstash to buffer events between inputs and the rest of the pipeline.'\n    })\n  );\n}\n\nfunction renderBasicInfo(vertex) {\n  switch (vertex.typeString) {\n    case 'plugin':\n      return renderPluginBasicInfo(vertex);\n      break;\n    case 'if':\n      return renderIfBasicInfo(vertex);\n      break;\n    case 'queue':\n      return renderQueueBasicInfo(vertex);\n      break;\n  }\n}\n\nfunction renderTitle(vertex) {\n  switch (vertex.typeString) {\n    case 'plugin':\n      return vertex.title + ' ' + vertex.pluginType;\n      break;\n    case 'if':\n    case 'queue':\n      return vertex.title;\n      break;\n  }\n}\n\nfunction DetailDrawer(_ref) {\n  var vertex = _ref.vertex,\n      onHide = _ref.onHide,\n      timeseriesTooltipXValueFormatter = _ref.timeseriesTooltipXValueFormatter;\n\n  return _react2.default.createElement(\n    _eui.EuiFlyout,\n    {\n      size: 's',\n      onClose: onHide\n    },\n    _react2.default.createElement(\n      _eui.EuiFlyoutHeader,\n      null,\n      _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        {\n          alignItems: 'baseline',\n          gutterSize: 's'\n        },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          renderIcon(vertex)\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          null,\n          _react2.default.createElement(\n            _eui.EuiTitle,\n            null,\n            _react2.default.createElement(\n              'h2',\n              null,\n              renderTitle(vertex)\n            )\n          )\n        )\n      )\n    ),\n    _react2.default.createElement(\n      _eui.EuiFlyoutBody,\n      null,\n      _react2.default.createElement(\n        _eui.EuiText,\n        null,\n        renderBasicInfo(vertex),\n        renderBasicStats(vertex, timeseriesTooltipXValueFormatter)\n      )\n    )\n  );\n}",null]}