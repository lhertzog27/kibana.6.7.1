{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/packages/kbn-interpreter/target/plugin/types/boolean.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/packages/kbn-interpreter/target/plugin/types/boolean.js","mtime":1567666389793},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar boolean = exports.boolean = function boolean() {\n  return {\n    name: 'boolean',\n    from: {\n      null: function _null() {\n        return false;\n      },\n      number: function number(n) {\n        return Boolean(n);\n      },\n      string: function string(s) {\n        return Boolean(s);\n      }\n    },\n    to: {\n      render: function render(value) {\n        var text = '' + value;\n        return {\n          type: 'render',\n          as: 'text',\n          value: { text: text }\n        };\n      },\n      datatable: function datatable(value) {\n        return {\n          type: 'datatable',\n          columns: [{ name: 'value', type: 'boolean' }],\n          rows: [{ value: value }]\n        };\n      }\n    }\n  };\n};",null]}