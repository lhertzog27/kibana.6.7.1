{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/dom_preview/dom_preview.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/canvas/public/components/dom_preview/dom_preview.js","mtime":1567631711921},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DomPreview = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar DomPreview = exports.DomPreview = function (_React$Component) {\n  _inherits(DomPreview, _React$Component);\n\n  function DomPreview(props) {\n    _classCallCheck(this, DomPreview);\n\n    var _this = _possibleConstructorReturn(this, (DomPreview.__proto__ || Object.getPrototypeOf(DomPreview)).call(this, props));\n\n    _this.update = function () {\n      if (!_this.content || !_this.container) {\n        return;\n      }\n\n      if (!_this.observer) {\n        _this.original = _this.original || document.querySelector('#' + _this.props.elementId);\n        if (_this.original) {\n          var slowUpdate = (0, _lodash.debounce)(_this.update, 100);\n          _this.observer = new MutationObserver(slowUpdate);\n          // configuration of the observer\n          var config = { attributes: true, childList: true, subtree: true };\n          // pass in the target node, as well as the observer options\n          _this.observer.observe(_this.original, config);\n        } else {\n          clearTimeout(_this.updateTimeout); // to avoid the assumption that we fully control when `update` is called\n          _this.updateTimeout = setTimeout(_this.update, 30);\n          return;\n        }\n      }\n\n      var thumb = _this.original.cloneNode(true);\n\n      var originalStyle = window.getComputedStyle(_this.original, null);\n      var originalWidth = parseInt(originalStyle.getPropertyValue('width'), 10);\n      var originalHeight = parseInt(originalStyle.getPropertyValue('height'), 10);\n\n      var thumbHeight = _this.props.height;\n      var scale = thumbHeight / originalHeight;\n      var thumbWidth = originalWidth * scale;\n\n      if (_this.content.hasChildNodes()) {\n        _this.content.removeChild(_this.content.firstChild);\n      }\n      _this.content.appendChild(thumb);\n\n      _this.content.style.cssText = 'transform: scale(' + scale + '); transform-origin: top left;';\n      _this.container.style.cssText = 'width: ' + thumbWidth + 'px; height: ' + thumbHeight + 'px;';\n\n      // Copy canvas data\n      var originalCanvas = _this.original.querySelectorAll('canvas');\n      var thumbCanvas = thumb.querySelectorAll('canvas');\n\n      // Cloned canvas elements are blank and need to be explicitly redrawn\n      if (originalCanvas.length > 0) {\n        Array.from(originalCanvas).map(function (img, i) {\n          return thumbCanvas[i].getContext('2d').drawImage(img, 0, 0);\n        });\n      }\n    };\n\n    _this.container = null;\n    _this.content = null;\n    _this.observer = null;\n    _this.original = null;\n    _this.updateTimeout = null;\n    return _this;\n  }\n\n  _createClass(DomPreview, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.update();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this.updateTimeout);\n      this.observer && this.observer.disconnect(); // observer not guaranteed to exist\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement(\n        'div',\n        {\n          ref: function ref(container) {\n            _this2.container = container;\n          },\n          className: 'dom-preview'\n        },\n        _react2.default.createElement('div', {\n          ref: function ref(content) {\n            _this2.content = content;\n          }\n        })\n      );\n    }\n  }]);\n\n  return DomPreview;\n}(_react2.default.Component);\n\nDomPreview.propTypes = {\n  elementId: _propTypes2.default.string.isRequired,\n  height: _propTypes2.default.number.isRequired\n};",null]}