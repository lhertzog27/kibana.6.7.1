{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/discover/components/field_chooser/discover_field.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/discover/components/field_chooser/discover_field.js","mtime":1567631711563},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _discover_field = require('./discover_field.html');\n\nvar _discover_field2 = _interopRequireDefault(_discover_field);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nrequire('ui/directives/css_truncate');\n\nrequire('ui/directives/field_name');\n\nvar _string = require('./lib/detail_views/string.html');\n\nvar _string2 = _interopRequireDefault(_string);\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = _modules.uiModules.get('apps/discover'); /*\n                                                    * Licensed to Elasticsearch B.V. under one or more contributor\n                                                    * license agreements. See the NOTICE file distributed with\n                                                    * this work for additional information regarding copyright\n                                                    * ownership. Elasticsearch B.V. licenses this file to you under\n                                                    * the Apache License, Version 2.0 (the \"License\"); you may\n                                                    * not use this file except in compliance with the License.\n                                                    * You may obtain a copy of the License at\n                                                    *\n                                                    *    http://www.apache.org/licenses/LICENSE-2.0\n                                                    *\n                                                    * Unless required by applicable law or agreed to in writing,\n                                                    * software distributed under the License is distributed on an\n                                                    * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                    * KIND, either express or implied.  See the License for the\n                                                    * specific language governing permissions and limitations\n                                                    * under the License.\n                                                    */\n\napp.directive('discoverField', function ($compile, i18n) {\n  return {\n    restrict: 'E',\n    template: _discover_field2.default,\n    replace: true,\n    scope: {\n      field: '=',\n      onAddField: '=',\n      onAddFilter: '=',\n      onRemoveField: '=',\n      onShowDetails: '='\n    },\n    link: function link($scope, $elem) {\n      var detailsElem = void 0;\n      var detailScope = void 0;\n\n      var init = function init() {\n        if ($scope.field.details) {\n          $scope.toggleDetails($scope.field, true);\n        }\n\n        $scope.addRemoveButtonLabel = $scope.field.display ? i18n('kbn.discover.fieldChooser.discoverField.removeButtonLabel', {\n          defaultMessage: 'remove'\n        }) : i18n('kbn.discover.fieldChooser.discoverField.addButtonLabel', {\n          defaultMessage: 'add'\n        });\n      };\n\n      var getWarnings = function getWarnings(field) {\n        var warnings = [];\n\n        if (field.scripted) {\n          warnings.push(i18n('kbn.discover.fieldChooser.discoverField.scriptedFieldsTakeLongExecuteDescription', {\n            defaultMessage: 'Scripted fields can take a long time to execute.'\n          }));\n        }\n\n        if (warnings.length > 1) {\n          warnings = warnings.map(function (warning, i) {\n            return (i > 0 ? '\\n' : '') + (i + 1) + ' - ' + warning;\n          });\n        }\n\n        return warnings;\n      };\n\n      $scope.toggleDisplay = function (field) {\n        if (field.display) {\n          $scope.onRemoveField(field.name);\n        } else {\n          $scope.onAddField(field.name);\n        }\n\n        if (field.details) {\n          $scope.toggleDetails(field);\n        }\n      };\n\n      $scope.onClickToggleDetails = function onClickToggleDetails($event, field) {\n        // Do nothing if the event originated from a child.\n        if ($event.currentTarget !== $event.target) {\n          $event.preventDefault();\n        }\n\n        $scope.toggleDetails(field);\n      };\n\n      $scope.toggleDetails = function (field, recompute) {\n        if (_lodash2.default.isUndefined(field.details) || recompute) {\n          $scope.onShowDetails(field, recompute);\n          detailScope = $scope.$new();\n          detailScope.warnings = getWarnings(field);\n          detailScope.getBucketAriaLabel = function (bucket) {\n            return i18n('kbn.discover.fieldChooser.discoverField.bucketAriaLabel', {\n              defaultMessage: 'Value: {value}',\n              values: {\n                value: bucket.display === '' ? i18n('kbn.discover.fieldChooser.discoverField.emptyStringText', {\n                  defaultMessage: 'Empty string'\n                }) : bucket.display\n              }\n            });\n          };\n\n          detailsElem = (0, _jquery2.default)(_string2.default);\n          $compile(detailsElem)(detailScope);\n          $elem.append(detailsElem).addClass('active');\n          $elem.find('.dscSidebarItem').addClass('dscSidebarItem--active');\n        } else {\n          delete field.details;\n          detailScope.$destroy();\n          detailsElem.remove();\n          $elem.removeClass('active');\n          $elem.find('.dscSidebarItem').removeClass('dscSidebarItem--active');\n        }\n      };\n\n      init();\n    }\n  };\n});",null]}