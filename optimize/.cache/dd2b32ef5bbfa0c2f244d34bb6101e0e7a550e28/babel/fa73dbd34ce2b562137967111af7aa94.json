{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/ui/public/notify/notify.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/notify/notify.js","mtime":1567631711746},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.notify = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _markdown = require('ui/markdown');\n\nvar _modules = require('../modules');\n\nvar _metadata = require('../metadata');\n\nvar _fatal_error = require('./fatal_error');\n\nvar _banners = require('./banners');\n\nvar _notifier = require('./notifier');\n\nvar _toaster = require('./partials/toaster.html');\n\nvar _toaster2 = _interopRequireDefault(_toaster);\n\nrequire('../filters/markdown');\n\nrequire('../directives/truncated');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _eui = require('@elastic/eui');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar _module = _modules.uiModules.get('kibana/notify');\n\n_module.directive('kbnNotifications', function () {\n  return {\n    restrict: 'E',\n    scope: {\n      list: '=list'\n    },\n    replace: true,\n    template: _toaster2.default\n  };\n});\n\nvar notify = exports.notify = new _notifier.Notifier();\n\n_module.factory('createNotifier', function () {\n  return function (opts) {\n    return new _notifier.Notifier(opts);\n  };\n});\n\n_module.factory('Notifier', function () {\n  return _notifier.Notifier;\n});\n\n// teach Notifier how to use angular interval services\n_module.run(function (config, $interval, $compile) {\n  _notifier.Notifier.applyConfig({\n    setInterval: $interval,\n    clearInterval: $interval.cancel\n  });\n  applyConfig(config);\n  _notifier.Notifier.$compile = $compile;\n});\n\n// if kibana is not included then the notify service can't\n// expect access to config (since it's dependent on kibana)\nif (!!_metadata.metadata.kbnIndex) {\n  require('ui/config');\n  _module.run(function (config) {\n    config.watchAll(function () {\n      return applyConfig(config);\n    });\n  });\n}\n\nvar bannerId = void 0;\nvar bannerTimeoutId = void 0;\n\nfunction applyConfig(config) {\n  _notifier.Notifier.applyConfig({\n    errorLifetime: config.get('notifications:lifetime:error'),\n    warningLifetime: config.get('notifications:lifetime:warning'),\n    infoLifetime: config.get('notifications:lifetime:info')\n  });\n\n  // Show user-defined banner.\n  var bannerContent = config.get('notifications:banner');\n  var bannerLifetime = config.get('notifications:lifetime:banner');\n\n  if (typeof bannerContent === 'string' && bannerContent.trim()) {\n    var BANNER_PRIORITY = 100;\n\n    var dismissBanner = function dismissBanner() {\n      _banners.banners.remove(bannerId);\n      clearTimeout(bannerTimeoutId);\n    };\n\n    var banner = _react2.default.createElement(\n      _eui.EuiCallOut,\n      {\n        title: _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'common.ui.notify.banner.attentionTitle',\n          defaultMessage: 'Attention'\n        }),\n        iconType: 'help'\n      },\n      _react2.default.createElement(\n        _markdown.MarkdownSimple,\n        { 'data-test-subj': 'userDefinedBanner' },\n        bannerContent\n      ),\n      _react2.default.createElement(\n        _eui.EuiButton,\n        { type: 'primary', size: 's', onClick: dismissBanner },\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'common.ui.notify.banner.closeButtonLabel',\n          defaultMessage: 'Close'\n        })\n      )\n    );\n\n    bannerId = _banners.banners.set({\n      component: banner,\n      id: bannerId,\n      priority: BANNER_PRIORITY\n    });\n\n    bannerTimeoutId = setTimeout(function () {\n      dismissBanner();\n    }, bannerLifetime);\n  }\n}\n\nwindow.onerror = function (err, url, line) {\n  (0, _fatal_error.fatalError)(new Error(err + ' (' + url + ':' + line + ')'));\n  return true;\n};\n\nif (window.addEventListener) {\n  window.addEventListener('unhandledrejection', function (e) {\n    console.log('Detected an unhandled Promise rejection.\\n' + e.reason); // eslint-disable-line no-console\n  });\n}",null]}