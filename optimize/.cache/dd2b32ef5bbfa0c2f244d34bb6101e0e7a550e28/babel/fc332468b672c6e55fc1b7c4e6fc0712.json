{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/sections/policy_table/components/policy_table/policy_table.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/sections/policy_table/components/policy_table/policy_table.js","mtime":1567631711966},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PolicyTable = exports.PolicyTableUi = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _momentTimezone = require('moment-timezone');\n\nvar _momentTimezone2 = _interopRequireDefault(_momentTimezone);\n\nvar _i18n = require('@kbn/i18n');\n\nvar _react3 = require('@kbn/i18n/react');\n\nvar _constants = require('../../../../../common/constants');\n\nvar _no_match = require('../no_match');\n\nvar _navigation = require('../../../../services/navigation');\n\nvar _flatten_panel_tree = require('../../../../services/flatten_panel_tree');\n\nvar _services = require('@elastic/eui/lib/services');\n\nvar _eui = require('@elastic/eui');\n\nvar _confirm_delete = require('./confirm_delete');\n\nvar _add_policy_to_template_confirm_modal = require('./add_policy_to_template_confirm_modal');\n\nvar _navigation2 = require('../../../../../../index_management/public/services/navigation');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar COLUMNS = {\n  name: {\n    label: _i18n.i18n.translate('xpack.indexLifecycleMgmt.policyTable.headers.nameHeader', {\n      defaultMessage: 'Name'\n    })\n  },\n  linkedIndices: {\n    label: _i18n.i18n.translate('xpack.indexLifecycleMgmt.policyTable.headers.linkedIndicesHeader', {\n      defaultMessage: 'Linked indices'\n    }),\n    width: 120\n  },\n  version: {\n    label: _i18n.i18n.translate('xpack.indexLifecycleMgmt.policyTable.headers.versionHeader', {\n      defaultMessage: 'Version'\n    }),\n    width: 120\n  },\n  modified_date: {\n    label: _i18n.i18n.translate('xpack.indexLifecycleMgmt.policyTable.headers.modifiedDateHeader', {\n      defaultMessage: 'Modified date'\n    }),\n    width: 200\n  }\n};\n\nvar PolicyTableUi = exports.PolicyTableUi = function (_Component) {\n  _inherits(PolicyTableUi, _Component);\n\n  function PolicyTableUi(props) {\n    _classCallCheck(this, PolicyTableUi);\n\n    var _this = _possibleConstructorReturn(this, (PolicyTableUi.__proto__ || Object.getPrototypeOf(PolicyTableUi)).call(this, props));\n\n    _this.renderDeleteConfirmModal = function () {\n      var policyToDelete = _this.state.policyToDelete;\n\n      if (!policyToDelete) {\n        return null;\n      }\n      return _react2.default.createElement(_confirm_delete.ConfirmDelete, {\n        policyToDelete: policyToDelete,\n        callback: _this.handleDelete,\n        onCancel: function onCancel() {\n          return _this.setState({ renderConfirmModal: null, policyToDelete: null });\n        }\n      });\n    };\n\n    _this.renderAddPolicyToTemplateConfirmModal = function () {\n      var policyToAddToTemplate = _this.state.policyToAddToTemplate;\n\n      if (!policyToAddToTemplate) {\n        return null;\n      }\n      return _react2.default.createElement(_add_policy_to_template_confirm_modal.AddPolicyToTemplateConfirmModal, {\n        policy: policyToAddToTemplate,\n        onCancel: function onCancel() {\n          return _this.setState({ renderConfirmModal: null, policyToAddToTemplate: null });\n        }\n      });\n    };\n\n    _this.handleDelete = function () {\n      _this.props.fetchPolicies(true);\n      _this.setState({ renderDeleteConfirmModal: null, policyToDelete: null });\n    };\n\n    _this.onSort = function (column) {\n      var _this$props = _this.props,\n          sortField = _this$props.sortField,\n          isSortAscending = _this$props.isSortAscending,\n          policySortChanged = _this$props.policySortChanged;\n\n      var newIsSortAscending = sortField === column ? !isSortAscending : true;\n      policySortChanged(column, newIsSortAscending);\n    };\n\n    _this.togglePolicyPopover = function (policy) {\n      if (_this.isPolicyPopoverOpen(policy)) {\n        _this.closePolicyPopover(policy);\n      } else {\n        _this.openPolicyPopover(policy);\n      }\n    };\n\n    _this.isPolicyPopoverOpen = function (policy) {\n      return _this.state.policyPopover === policy.name;\n    };\n\n    _this.closePolicyPopover = function (policy) {\n      if (_this.isPolicyPopoverOpen(policy)) {\n        _this.setState({ policyPopover: null });\n      }\n    };\n\n    _this.openPolicyPopover = function (policy) {\n      _this.setState({ policyPopover: policy.name });\n    };\n\n    _this.onItemSelectionChanged = function (selectedPolicies) {\n      _this.setState({ selectedPolicies: selectedPolicies });\n    };\n\n    _this.state = {\n      selectedPoliciesMap: {},\n      renderConfirmModal: null\n    };\n    return _this;\n  }\n\n  _createClass(PolicyTableUi, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.fetchPolicies(true);\n    }\n  }, {\n    key: 'renderEmpty',\n    value: function renderEmpty() {\n      return _react2.default.createElement(_eui.EuiEmptyPrompt, {\n        iconType: 'managementApp',\n        title: _react2.default.createElement(\n          'h1',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.indexLifecycleMgmt.policyTable.emptyPromptTitle',\n            defaultMessage: 'Create your first index lifecycle policy'\n          })\n        ),\n        body: _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.indexLifecycleMgmt.policyTable.emptyPromptDescription',\n              defaultMessage: ' An index lifecycle policy helps you manage your indices as they age.'\n            })\n          )\n        ),\n        actions: this.renderCreatePolicyButton()\n      });\n    }\n  }, {\n    key: 'buildHeader',\n    value: function buildHeader() {\n      var _this2 = this;\n\n      var _props = this.props,\n          sortField = _props.sortField,\n          isSortAscending = _props.isSortAscending;\n\n      var headers = Object.entries(COLUMNS).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            fieldName = _ref2[0],\n            _ref2$ = _ref2[1],\n            label = _ref2$.label,\n            width = _ref2$.width;\n\n        var isSorted = sortField === fieldName;\n        return _react2.default.createElement(\n          _eui.EuiTableHeaderCell,\n          {\n            key: fieldName,\n            onSort: function onSort() {\n              return _this2.onSort(fieldName);\n            },\n            isSorted: isSorted,\n            isSortAscending: isSortAscending,\n            'data-test-subj': 'policyTableHeaderCell-' + fieldName,\n            className: 'policyTable__header--' + fieldName,\n            width: width\n          },\n          label\n        );\n      });\n      headers.push(_react2.default.createElement(_eui.EuiTableHeaderCell, {\n        key: 'deleteHeader',\n        'data-test-subj': 'policyTableHeaderCell-delete',\n        width: 150\n      }));\n      return headers;\n    }\n  }, {\n    key: 'buildRowCell',\n    value: function buildRowCell(fieldName, value) {\n      if (fieldName === 'name') {\n        return _react2.default.createElement(\n          _eui.EuiLink,\n          {\n            className: 'policyTable__link',\n            'data-test-subj': 'policyTablePolicyNameLink',\n            href: (0, _navigation.getPolicyPath)(value)\n          },\n          value\n        );\n      } else if (fieldName === 'linkedIndices') {\n        return _react2.default.createElement(\n          _eui.EuiText,\n          null,\n          _react2.default.createElement(\n            'b',\n            null,\n            value ? value.length : '0'\n          )\n        );\n      } else if (fieldName === 'modified_date' && value) {\n        return (0, _momentTimezone2.default)(value).format('YYYY-MM-DD HH:mm:ss');\n      }\n      return value;\n    }\n  }, {\n    key: 'renderCreatePolicyButton',\n    value: function renderCreatePolicyButton() {\n      return _react2.default.createElement(\n        _eui.EuiButton,\n        {\n          href: '#' + _constants.BASE_PATH + 'policies/edit',\n          fill: true,\n          iconType: 'plusInCircle',\n          'data-test-subj': 'createPolicyButton'\n        },\n        _react2.default.createElement(_react3.FormattedMessage, {\n          id: 'xpack.indexLifecycleMgmt.policyTable.emptyPrompt.createButtonLabel',\n          defaultMessage: 'Create policy'\n        })\n      );\n    }\n  }, {\n    key: 'renderConfirmModal',\n    value: function renderConfirmModal() {\n      var renderConfirmModal = this.state.renderConfirmModal;\n\n      if (renderConfirmModal) {\n        return renderConfirmModal();\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'buildActionPanelTree',\n    value: function buildActionPanelTree(policy) {\n      var _this3 = this;\n\n      var intl = this.props.intl;\n\n      var hasLinkedIndices = Boolean(policy.linkedIndices && policy.linkedIndices.length);\n\n      var viewIndicesLabel = intl.formatMessage({\n        id: 'xpack.indexLifecycleMgmt.policyTable.viewIndicesButtonText',\n        defaultMessage: 'View indices linked to policy'\n      });\n      var addPolicyToTemplateLabel = intl.formatMessage({\n        id: 'xpack.indexLifecycleMgmt.policyTable.addPolicyToTemplateButtonText',\n        defaultMessage: 'Add policy to index template'\n      });\n      var deletePolicyLabel = intl.formatMessage({\n        id: 'xpack.indexLifecycleMgmt.policyTable.deletePolicyButtonText',\n        defaultMessage: 'Delete policy'\n      });\n      var deletePolicyTooltip = hasLinkedIndices ? intl.formatMessage({\n        id: 'xpack.indexLifecycleMgmt.policyTable.deletePolicyButtonDisabledTooltip',\n        defaultMessage: 'You cannot delete a policy that is being used by an index'\n      }) : null;\n      var items = [];\n      if (hasLinkedIndices) {\n        items.push({\n          name: viewIndicesLabel,\n          icon: 'list',\n          onClick: function onClick() {\n            window.location.hash = (0, _navigation2.getIndexListUri)('ilm.policy:' + policy.name);\n          }\n        });\n      }\n      items.push({\n        name: addPolicyToTemplateLabel,\n        icon: 'plusInCircle',\n        onClick: function onClick() {\n          return _this3.setState({\n            renderConfirmModal: _this3.renderAddPolicyToTemplateConfirmModal,\n            policyToAddToTemplate: policy\n          });\n        }\n      });\n      items.push({\n        name: deletePolicyLabel,\n        disabled: hasLinkedIndices,\n        icon: 'trash',\n        toolTipContent: deletePolicyTooltip,\n        onClick: function onClick() {\n          return _this3.setState({\n            renderConfirmModal: _this3.renderDeleteConfirmModal,\n            policyToDelete: policy\n          });\n        }\n      });\n      var panelTree = {\n        id: 0,\n        title: intl.formatMessage({\n          id: 'xpack.indexLifecycleMgmt.policyTable.policyActionsMenu.panelTitle',\n          defaultMessage: 'Policy options'\n        }),\n        items: items\n      };\n      return (0, _flatten_panel_tree.flattenPanelTree)(panelTree);\n    }\n  }, {\n    key: 'buildRowCells',\n    value: function buildRowCells(policy) {\n      var _this4 = this;\n\n      var intl = this.props.intl;\n      var name = policy.name;\n\n      var cells = Object.entries(COLUMNS).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            fieldName = _ref4[0],\n            width = _ref4[1].width;\n\n        var value = policy[fieldName];\n        return _react2.default.createElement(\n          _eui.EuiTableRowCell,\n          {\n            key: fieldName + '-' + name,\n            truncateText: false,\n            'data-test-subj': 'policyTableCell-' + fieldName,\n            className: 'policyTable__content--' + fieldName,\n            width: width\n          },\n          _this4.buildRowCell(fieldName, value)\n        );\n      });\n      var button = _react2.default.createElement(\n        _eui.EuiButtonEmpty,\n        {\n          'data-test-subj': 'policyActionsContextMenuButton',\n          onClick: function onClick() {\n            return _this4.togglePolicyPopover(policy);\n          },\n          color: 'primary'\n        },\n        intl.formatMessage({\n          id: 'xpack.indexLifecycleMgmt.policyTable.actionsButtonText',\n          defaultMessage: 'Actions'\n        })\n      );\n      cells.push(_react2.default.createElement(\n        _eui.EuiTableRowCell,\n        {\n          align: _services.RIGHT_ALIGNMENT,\n          key: 'delete-' + name,\n          truncateText: false,\n          'data-test-subj': 'policyTableCell-actions-' + name,\n          style: { width: 150 }\n        },\n        _react2.default.createElement(\n          _eui.EuiPopover,\n          {\n            id: 'contextMenuPolicy',\n            button: button,\n            isOpen: this.isPolicyPopoverOpen(policy),\n            closePopover: function closePopover() {\n              return _this4.closePolicyPopover(policy);\n            },\n            panelPaddingSize: 'none',\n            withTitle: true,\n            anchorPosition: 'rightUp',\n            repositionOnScroll: true\n          },\n          _react2.default.createElement(_eui.EuiContextMenu, { initialPanelId: 0, panels: this.buildActionPanelTree(policy) })\n        )\n      ));\n      return cells;\n    }\n  }, {\n    key: 'buildRows',\n    value: function buildRows() {\n      var _this5 = this;\n\n      var _props$policies = this.props.policies,\n          policies = _props$policies === undefined ? [] : _props$policies;\n\n      return policies.map(function (policy) {\n        var name = policy.name;\n\n        return _react2.default.createElement(\n          _eui.EuiTableRow,\n          { key: name + '-row' },\n          _this5.buildRowCells(policy)\n        );\n      });\n    }\n  }, {\n    key: 'renderPager',\n    value: function renderPager() {\n      var _props2 = this.props,\n          pager = _props2.pager,\n          policyPageChanged = _props2.policyPageChanged,\n          policyPageSizeChanged = _props2.policyPageSizeChanged;\n\n      return _react2.default.createElement(_eui.EuiTablePagination, {\n        activePage: pager.getCurrentPageIndex(),\n        itemsPerPage: pager.itemsPerPage,\n        itemsPerPageOptions: [10, 50, 100],\n        pageCount: pager.getTotalPages(),\n        onChangeItemsPerPage: policyPageSizeChanged,\n        onChangePage: policyPageChanged\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this6 = this;\n\n      var _props3 = this.props,\n          totalNumberOfPolicies = _props3.totalNumberOfPolicies,\n          policyFilterChanged = _props3.policyFilterChanged,\n          filter = _props3.filter,\n          intl = _props3.intl,\n          policyListLoaded = _props3.policyListLoaded;\n      var selectedPoliciesMap = this.state.selectedPoliciesMap;\n\n      var numSelected = Object.keys(selectedPoliciesMap).length;\n      var content = void 0;\n      var tableContent = void 0;\n      if (totalNumberOfPolicies || !policyListLoaded) {\n        if (!policyListLoaded) {\n          tableContent = _react2.default.createElement(_eui.EuiLoadingSpinner, { size: 'm' });\n        } else if (totalNumberOfPolicies > 0) {\n          tableContent = _react2.default.createElement(\n            _eui.EuiTable,\n            { className: 'policyTable__horizontalScroll' },\n            _react2.default.createElement(\n              _eui.EuiTableHeader,\n              null,\n              this.buildHeader()\n            ),\n            _react2.default.createElement(\n              _eui.EuiTableBody,\n              null,\n              this.buildRows()\n            )\n          );\n        } else {\n          tableContent = _react2.default.createElement(_no_match.NoMatch, null);\n        }\n        content = _react2.default.createElement(\n          _react.Fragment,\n          null,\n          _react2.default.createElement(\n            _eui.EuiFlexGroup,\n            { gutterSize: 'l', alignItems: 'center' },\n            numSelected > 0 ? _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false },\n              _react2.default.createElement(\n                _eui.EuiButton,\n                {\n                  'data-test-subj': 'deletePolicyButton',\n                  color: 'danger',\n                  onClick: function onClick() {\n                    return _this6.setState({ showDeleteConfirmation: true });\n                  }\n                },\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.indexLifecycleMgmt.policyTable.deletedPoliciesText',\n                  defaultMessage: 'Deleted {numSelected} {numSelected, plural, one {policy} other {policies}}',\n                  values: { numSelected: numSelected }\n                })\n              )\n            ) : null,\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              null,\n              _react2.default.createElement(_eui.EuiFieldSearch, {\n                fullWidth: true,\n                value: filter,\n                onChange: function onChange(event) {\n                  policyFilterChanged(event.target.value);\n                },\n                'data-test-subj': 'policyTableFilterInput',\n                placeholder: intl.formatMessage({\n                  id: 'xpack.indexLifecycleMgmt.policyTable.systempoliciesSearchInputPlaceholder',\n                  defaultMessage: 'Search'\n                }),\n                'aria-label': intl.formatMessage({\n                  id: 'xpack.indexLifecycleMgmt.policyTable.systempoliciesSearchInputAriaLabel',\n                  defaultMessage: 'Search policies'\n                })\n              })\n            )\n          ),\n          _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n          tableContent\n        );\n      } else {\n        content = this.renderEmpty();\n      }\n\n      return _react2.default.createElement(\n        _eui.EuiPageBody,\n        null,\n        _react2.default.createElement(\n          _eui.EuiPageContent,\n          { verticalPosition: 'center', horizontalPosition: 'center' },\n          _react2.default.createElement(\n            'div',\n            null,\n            this.renderConfirmModal(),\n            totalNumberOfPolicies || !policyListLoaded ? _react2.default.createElement(\n              _react.Fragment,\n              null,\n              _react2.default.createElement(\n                _eui.EuiFlexGroup,\n                { justifyContent: 'spaceBetween', alignItems: 'center' },\n                _react2.default.createElement(\n                  _eui.EuiFlexItem,\n                  { grow: false },\n                  _react2.default.createElement(\n                    _eui.EuiTitle,\n                    { size: 'l' },\n                    _react2.default.createElement(\n                      'h1',\n                      null,\n                      _react2.default.createElement(_react3.FormattedMessage, {\n                        id: 'xpack.indexLifecycleMgmt.policyTable.sectionHeading',\n                        defaultMessage: 'Index Lifecycle Policies'\n                      })\n                    )\n                  )\n                ),\n                totalNumberOfPolicies ? _react2.default.createElement(\n                  _eui.EuiFlexItem,\n                  { grow: false },\n                  this.renderCreatePolicyButton()\n                ) : null\n              ),\n              _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n              _react2.default.createElement(\n                _eui.EuiText,\n                null,\n                _react2.default.createElement(\n                  'p',\n                  null,\n                  _react2.default.createElement(_react3.FormattedMessage, {\n                    id: 'xpack.indexLifecycleMgmt.policyTable.sectionDescription',\n                    defaultMessage: 'Manage your indices as they age.  Attach a policy to automate when and how to transition an index through its lifecycle.'\n                  })\n                )\n              )\n            ) : null,\n            _react2.default.createElement(_eui.EuiSpacer, null),\n            content,\n            _react2.default.createElement(_eui.EuiSpacer, { size: 'm' }),\n            totalNumberOfPolicies && totalNumberOfPolicies > 10 ? this.renderPager() : null\n          )\n        )\n      );\n    }\n  }]);\n\n  return PolicyTableUi;\n}(_react.Component);\n\nvar PolicyTable = exports.PolicyTable = (0, _react3.injectI18n)(PolicyTableUi);",null]}