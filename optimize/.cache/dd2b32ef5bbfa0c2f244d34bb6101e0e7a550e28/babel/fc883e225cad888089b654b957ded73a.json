{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/rule_editor/utils.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/rule_editor/utils.js","mtime":1567631712036},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                   * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                   */\n\nexports.getNewConditionDefaults = getNewConditionDefaults;\nexports.getNewRuleDefaults = getNewRuleDefaults;\nexports.getScopeFieldDefaults = getScopeFieldDefaults;\nexports.isValidRule = isValidRule;\nexports.saveJobRule = saveJobRule;\nexports.deleteJobRule = deleteJobRule;\nexports.updateJobRules = updateJobRules;\nexports.addItemToFilter = addItemToFilter;\nexports.buildRuleDescription = buildRuleDescription;\nexports.filterTypeToText = filterTypeToText;\nexports.appliesToText = appliesToText;\nexports.operatorToText = operatorToText;\nexports.getAppliesToValueFromAnomaly = getAppliesToValueFromAnomaly;\n\nvar _detector_rule = require('../../../common/constants/detector_rule');\n\nvar _lodash = require('lodash');\n\nvar _ml_api_service = require('../../services/ml_api_service');\n\nvar _job_service = require('../../services/job_service');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction getNewConditionDefaults() {\n  return {\n    applies_to: _detector_rule.APPLIES_TO.ACTUAL,\n    operator: _detector_rule.OPERATOR.LESS_THAN,\n    value: 1\n  };\n}\n\nfunction getNewRuleDefaults() {\n  return {\n    actions: [_detector_rule.ACTION.SKIP_RESULT],\n    conditions: []\n  };\n}\n\nfunction getScopeFieldDefaults(filterListIds) {\n  var defaults = {\n    filter_type: _detector_rule.FILTER_TYPE.INCLUDE,\n    enabled: false // UI-only property to show field as enabled in Scope section.\n  };\n\n  if (filterListIds !== undefined && filterListIds.length > 0) {\n    defaults.filter_id = filterListIds[0];\n  }\n\n  return defaults;\n}\n\nfunction isValidRule(rule) {\n  // Runs simple checks to make sure the minimum set of\n  // properties have values in the edited rule.\n  var isValid = false;\n\n  // Check an action has been supplied.\n  var actions = rule.actions;\n  if (actions.length > 0) {\n    // Check either a condition or a scope property has been set.\n    var conditions = rule.conditions;\n    if (conditions !== undefined && conditions.length > 0) {\n      isValid = true;\n    } else {\n      var scope = rule.scope;\n      if (scope !== undefined) {\n        isValid = Object.keys(scope).some(function (field) {\n          return scope[field].enabled === true;\n        });\n      }\n    }\n  }\n\n  return isValid;\n}\n\nfunction saveJobRule(job, detectorIndex, ruleIndex, editedRule) {\n  var detector = job.analysis_config.detectors[detectorIndex];\n\n  // Filter out any scope expression where the UI=specific 'enabled'\n  // property is set to false.\n  var clonedRule = (0, _lodash.cloneDeep)(editedRule);\n  var scope = clonedRule.scope;\n  if (scope !== undefined) {\n    Object.keys(scope).forEach(function (field) {\n      if (scope[field].enabled === false) {\n        delete scope[field];\n      } else {\n        // Remove the UI-only property as it is rejected by the endpoint.\n        delete scope[field].enabled;\n      }\n    });\n  }\n\n  var rules = [];\n  if (detector.custom_rules === undefined) {\n    rules = [clonedRule];\n  } else {\n    rules = (0, _lodash.cloneDeep)(detector.custom_rules);\n\n    if (ruleIndex < rules.length) {\n      // Edit to an existing rule.\n      rules[ruleIndex] = clonedRule;\n    } else {\n      // Add a new rule.\n      rules.push(clonedRule);\n    }\n  }\n\n  return updateJobRules(job, detectorIndex, rules);\n}\n\nfunction deleteJobRule(job, detectorIndex, ruleIndex) {\n  var detector = job.analysis_config.detectors[detectorIndex];\n  var customRules = [];\n  if (detector.custom_rules !== undefined && ruleIndex < detector.custom_rules.length) {\n    customRules = (0, _lodash.cloneDeep)(detector.custom_rules);\n    customRules.splice(ruleIndex, 1);\n    return updateJobRules(job, detectorIndex, customRules);\n  } else {\n    return Promise.reject(new Error(_i18n.i18n.translate('xpack.ml.ruleEditor.deleteJobRule.ruleNoLongerExistsErrorMessage', {\n      defaultMessage: 'Rule no longer exists for detector index {detectorIndex} in job {jobId}',\n      values: {\n        detectorIndex: detectorIndex,\n        jobId: job.job_id\n      }\n    })));\n  }\n}\n\nfunction updateJobRules(job, detectorIndex, rules) {\n  // Pass just the detector with the edited rule to the updateJob endpoint.\n  var jobId = job.job_id;\n  var jobData = {\n    detectors: [{\n      detector_index: detectorIndex,\n      custom_rules: rules\n    }]\n  };\n\n  // If created_by is set in the job's custom_settings, remove it as the rules\n  // cannot currently be edited in the job wizards and so would be lost in a clone.\n  var customSettings = {};\n  if (job.custom_settings !== undefined) {\n    customSettings = _extends({}, job.custom_settings);\n    delete customSettings.created_by;\n    jobData.custom_settings = customSettings;\n  }\n\n  return new Promise(function (resolve, reject) {\n    _job_service.mlJobService.updateJob(jobId, jobData).then(function (resp) {\n      if (resp.success) {\n        // Refresh the job data in the job service before resolving.\n        _job_service.mlJobService.refreshJob(jobId).then(function () {\n          resolve({ success: true });\n        }).catch(function (refreshResp) {\n          reject(refreshResp);\n        });\n      } else {\n        reject(resp);\n      }\n    }).catch(function (resp) {\n      reject(resp);\n    });\n  });\n}\n\n// Updates an ML filter used in the scope part of a rule,\n// adding an item to the filter with the specified ID.\nfunction addItemToFilter(item, filterId) {\n  return new Promise(function (resolve, reject) {\n    _ml_api_service.ml.filters.updateFilter(filterId, undefined, [item], undefined).then(function (updatedFilter) {\n      resolve(updatedFilter);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\n\nfunction buildRuleDescription(rule) {\n  var actions = rule.actions,\n      conditions = rule.conditions,\n      scope = rule.scope;\n\n  var actionsText = '';\n  var conditionsText = '';\n  var filtersText = '';\n\n  actions.forEach(function (action, i) {\n    if (i > 0) {\n      actionsText += ' AND ';\n    }\n    switch (action) {\n      case _detector_rule.ACTION.SKIP_RESULT:\n        actionsText += _i18n.i18n.translate('xpack.ml.ruleEditor.ruleDescription.resultActionTypeText', {\n          defaultMessage: 'result',\n          description: 'Part of composite text: xpack.ml.ruleEditor.ruleDescription.[actionName]ActionTypeText +' + 'xpack.ml.ruleEditor.ruleDescription.conditionsText + xpack.ml.ruleEditor.ruleDescription.filtersText'\n        });\n        break;\n      case _detector_rule.ACTION.SKIP_MODEL_UPDATE:\n        actionsText += _i18n.i18n.translate('xpack.ml.ruleEditor.ruleDescription.modelUpdateActionTypeText', {\n          defaultMessage: 'model update',\n          description: 'Part of composite text: xpack.ml.ruleEditor.ruleDescription.[actionName]ActionTypeText + ' + 'xpack.ml.ruleEditor.ruleDescription.conditionsText + xpack.ml.ruleEditor.ruleDescription.filtersText'\n        });\n        break;\n    }\n  });\n\n  if (conditions !== undefined) {\n    conditions.forEach(function (condition, i) {\n      if (i > 0) {\n        conditionsText += ' AND ';\n      }\n      conditionsText += _i18n.i18n.translate('xpack.ml.ruleEditor.ruleDescription.conditionsText', {\n        defaultMessage: '{appliesTo} is {operator} {value}',\n        values: { appliesTo: appliesToText(condition.applies_to), operator: operatorToText(condition.operator), value: condition.value },\n        description: 'Part of composite text: xpack.ml.ruleEditor.ruleDescription.[actionName]ActionTypeText + ' + 'xpack.ml.ruleEditor.ruleDescription.conditionsText + xpack.ml.ruleEditor.ruleDescription.filtersText'\n      });\n    });\n  }\n\n  if (scope !== undefined) {\n    if (conditions !== undefined && conditions.length > 0) {\n      filtersText += ' AND ';\n    }\n    var fieldNames = Object.keys(scope);\n    fieldNames.forEach(function (fieldName, i) {\n      if (i > 0) {\n        filtersText += ' AND ';\n      }\n\n      var filter = scope[fieldName];\n      filtersText += _i18n.i18n.translate('xpack.ml.ruleEditor.ruleDescription.filtersText', {\n        defaultMessage: '{fieldName} is {filterType} {filterId}',\n        values: { fieldName: fieldName, filterType: filterTypeToText(filter.filter_type), filterId: filter.filter_id },\n        description: 'Part of composite text: xpack.ml.ruleEditor.ruleDescription.[actionName]ActionTypeText + ' + 'xpack.ml.ruleEditor.ruleDescription.conditionsText + xpack.ml.ruleEditor.ruleDescription.filtersText'\n      });\n    });\n  }\n\n  return _i18n.i18n.translate('xpack.ml.ruleEditor.ruleDescription', {\n    defaultMessage: 'skip {actions} when {conditions}{filters}',\n    values: {\n      actions: actionsText,\n      conditions: conditionsText,\n      filters: filtersText\n    },\n    description: 'Composite text: xpack.ml.ruleEditor.ruleDescription.[actionName]ActionTypeText + ' + 'xpack.ml.ruleEditor.ruleDescription.conditionsText + xpack.ml.ruleEditor.ruleDescription.filtersText.' + ' (Example: skip model update when actual is less than 1 AND ip is in xxx)'\n  });\n}\n\nfunction filterTypeToText(filterType) {\n  switch (filterType) {\n    case _detector_rule.FILTER_TYPE.INCLUDE:\n      return _i18n.i18n.translate('xpack.ml.ruleEditor.includeFilterTypeText', { defaultMessage: 'in' });\n    case _detector_rule.FILTER_TYPE.EXCLUDE:\n      return _i18n.i18n.translate('xpack.ml.ruleEditor.excludeFilterTypeText', { defaultMessage: 'not in' });\n\n    default:\n      return filterType !== undefined ? filterType : '';\n  }\n}\n\nfunction appliesToText(appliesTo) {\n  switch (appliesTo) {\n    case _detector_rule.APPLIES_TO.ACTUAL:\n      return _i18n.i18n.translate('xpack.ml.ruleEditor.actualAppliesTypeText', { defaultMessage: 'actual' });\n    case _detector_rule.APPLIES_TO.TYPICAL:\n      return _i18n.i18n.translate('xpack.ml.ruleEditor.typicalAppliesTypeText', { defaultMessage: 'typical' });\n\n    case _detector_rule.APPLIES_TO.DIFF_FROM_TYPICAL:\n      return _i18n.i18n.translate('xpack.ml.ruleEditor.diffFromTypicalAppliesTypeText', { defaultMessage: 'diff from typical' });\n\n    default:\n      return appliesTo !== undefined ? appliesTo : '';\n  }\n}\n\nfunction operatorToText(operator) {\n  switch (operator) {\n    case _detector_rule.OPERATOR.LESS_THAN:\n      return _i18n.i18n.translate('xpack.ml.ruleEditor.lessThanOperatorTypeText', { defaultMessage: 'less than' });\n\n    case _detector_rule.OPERATOR.LESS_THAN_OR_EQUAL:\n      return _i18n.i18n.translate('xpack.ml.ruleEditor.lessThanOrEqualToOperatorTypeText', { defaultMessage: 'less than or equal to' });\n\n    case _detector_rule.OPERATOR.GREATER_THAN:\n      return _i18n.i18n.translate('xpack.ml.ruleEditor.greaterThanOperatorTypeText', { defaultMessage: 'greater than' });\n\n    case _detector_rule.OPERATOR.GREATER_THAN_OR_EQUAL:\n      return _i18n.i18n.translate('xpack.ml.ruleEditor.greaterThanOrEqualToOperatorTypeText', { defaultMessage: 'greater than or equal to' });\n\n    default:\n      return operator !== undefined ? operator : '';\n  }\n}\n\n// Returns the value of the selected 'applies_to' field from the\n// selected anomaly i.e. the actual, typical or diff from typical.\nfunction getAppliesToValueFromAnomaly(anomaly, appliesTo) {\n  var actualValue = void 0;\n  var typicalValue = void 0;\n\n  var actual = anomaly.actual;\n  if (actual !== undefined) {\n    actualValue = Array.isArray(actual) ? actual[0] : actual;\n  }\n\n  var typical = anomaly.typical;\n  if (typical !== undefined) {\n    typicalValue = Array.isArray(typical) ? typical[0] : typical;\n  }\n\n  switch (appliesTo) {\n    case _detector_rule.APPLIES_TO.ACTUAL:\n      return actualValue;\n\n    case _detector_rule.APPLIES_TO.TYPICAL:\n      return typicalValue;\n\n    case _detector_rule.APPLIES_TO.DIFF_FROM_TYPICAL:\n      if (actual !== undefined && typical !== undefined) {\n        return Math.abs(actualValue - typicalValue);\n      }\n  }\n\n  return undefined;\n}",null]}