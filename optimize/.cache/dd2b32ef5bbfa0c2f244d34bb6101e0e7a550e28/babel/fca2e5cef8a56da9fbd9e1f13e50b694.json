{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/objects/components/objects_table/objects_table.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/management/sections/objects/components/objects_table/objects_table.js","mtime":1567631711575},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectsTable = exports.INCLUDED_TYPES = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash');\n\nvar _header = require('./components/header');\n\nvar _flyout = require('./components/flyout');\n\nvar _relationships = require('./components/relationships');\n\nvar _table = require('./components/table');\n\nvar _notify = require('ui/notify');\n\nvar _eui = require('@elastic/eui');\n\nvar _lib = require('../../lib');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed to Elasticsearch B.V. under one or more contributor\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * license agreements. See the NOTICE file distributed with\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * this work for additional information regarding copyright\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ownership. Elasticsearch B.V. licenses this file to you under\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Apache License, Version 2.0 (the \"License\"); you may\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar INCLUDED_TYPES = exports.INCLUDED_TYPES = ['index-pattern', 'visualization', 'dashboard', 'search'];\n\nvar ObjectsTableUI = function (_Component) {\n  _inherits(ObjectsTableUI, _Component);\n\n  function ObjectsTableUI(props) {\n    var _this2 = this;\n\n    _classCallCheck(this, ObjectsTableUI);\n\n    var _this = _possibleConstructorReturn(this, (ObjectsTableUI.__proto__ || Object.getPrototypeOf(ObjectsTableUI)).call(this, props));\n\n    _this.fetchCounts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var _parseQuery, queryText, visibleTypes, filteredTypes, filteredSavedObjectCounts, exportAllOptions, exportAllSelectedOptions, savedObjectCounts;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _parseQuery = (0, _lib.parseQuery)(_this.state.activeQuery), queryText = _parseQuery.queryText, visibleTypes = _parseQuery.visibleTypes;\n              filteredTypes = INCLUDED_TYPES.filter(function (type) {\n                return !visibleTypes || visibleTypes.includes(type);\n              });\n\n              // These are the saved objects visible in the table.\n\n              _context.next = 4;\n              return (0, _lib.getSavedObjectCounts)(_this.props.$http, filteredTypes, queryText);\n\n            case 4:\n              filteredSavedObjectCounts = _context.sent;\n              exportAllOptions = [];\n              exportAllSelectedOptions = {};\n\n\n              Object.keys(filteredSavedObjectCounts).forEach(function (id) {\n                // Add this type as a bulk-export option.\n                exportAllOptions.push({\n                  id: id,\n                  label: id + ' (' + (filteredSavedObjectCounts[id] || 0) + ')'\n                });\n\n                // Select it by defayult.\n                exportAllSelectedOptions[id] = true;\n              });\n\n              // Fetch all the saved objects that exist so we can accurately populate the counts within\n              // the table filter dropdown.\n              _context.next = 10;\n              return (0, _lib.getSavedObjectCounts)(_this.props.$http, INCLUDED_TYPES, queryText);\n\n            case 10:\n              savedObjectCounts = _context.sent;\n\n\n              _this.setState(function (state) {\n                return _extends({}, state, {\n                  savedObjectCounts: savedObjectCounts,\n                  exportAllOptions: exportAllOptions,\n                  exportAllSelectedOptions: exportAllSelectedOptions\n                });\n              });\n\n            case 12:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2);\n    }));\n\n    _this.fetchSavedObjects = function () {\n      _this.setState({\n        isSearching: true\n      }, _this.debouncedFetch);\n    };\n\n    _this.debouncedFetch = (0, _lodash.debounce)(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _this$props, intl, savedObjectsClient, _this$state, query, page, perPage, _parseQuery2, queryText, visibleTypes, findOptions, resp;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props = _this.props, intl = _this$props.intl, savedObjectsClient = _this$props.savedObjectsClient;\n              _this$state = _this.state, query = _this$state.activeQuery, page = _this$state.page, perPage = _this$state.perPage;\n              _parseQuery2 = (0, _lib.parseQuery)(query), queryText = _parseQuery2.queryText, visibleTypes = _parseQuery2.visibleTypes;\n              findOptions = {\n                search: queryText ? queryText + '*' : undefined,\n                perPage: perPage,\n                page: page + 1,\n                fields: ['title', 'id'],\n                searchFields: ['title'],\n                type: INCLUDED_TYPES.filter(function (type) {\n                  return !visibleTypes || visibleTypes.includes(type);\n                })\n              };\n\n              if (findOptions.type.length > 1) {\n                findOptions.sortField = 'type';\n              }\n\n              resp = void 0;\n              _context2.prev = 6;\n              _context2.next = 9;\n              return savedObjectsClient.find(findOptions);\n\n            case 9:\n              resp = _context2.sent;\n              _context2.next = 17;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2['catch'](6);\n\n              if (_this._isMounted) {\n                _this.setState({\n                  isSearching: false\n                });\n              }\n              _notify.toastNotifications.addDanger({\n                title: intl.formatMessage({\n                  id: 'kbn.management.objects.objectsTable.unableFindSavedObjectsNotificationMessage',\n                  defaultMessage: 'Unable find saved objects'\n                }),\n                text: '' + _context2.t0\n              });\n              return _context2.abrupt('return');\n\n            case 17:\n              if (_this._isMounted) {\n                _context2.next = 19;\n                break;\n              }\n\n              return _context2.abrupt('return');\n\n            case 19:\n\n              _this.setState(function (_ref3) {\n                var activeQuery = _ref3.activeQuery;\n\n                // ignore results for old requests\n                if (activeQuery.text !== query.text) {\n                  return {};\n                }\n\n                return {\n                  savedObjects: resp.savedObjects.map(function (savedObject) {\n                    return {\n                      title: savedObject.attributes.title,\n                      type: savedObject.type,\n                      id: savedObject.id,\n                      icon: (0, _lib.getSavedObjectIcon)(savedObject.type)\n                    };\n                  }),\n                  filteredItemCount: resp.total,\n                  isSearching: false\n                };\n              });\n\n            case 20:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, _this2, [[6, 12]]);\n    })), 300);\n    _this.refreshData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Promise.all([_this.fetchSavedObjects(), _this.fetchCounts()]);\n\n            case 2:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, _this2);\n    }));\n\n    _this.onSelectionChanged = function (selection) {\n      var selectedSavedObjects = selection.map(function (item) {\n        return {\n          id: item.id,\n          type: item.type\n        };\n      });\n      _this.setState({ selectedSavedObjects: selectedSavedObjects });\n    };\n\n    _this.onQueryChange = function (_ref5) {\n      var query = _ref5.query;\n\n      // TODO: Use isSameQuery to compare new query with state.activeQuery to avoid re-fetching the\n      // same data we already have.\n      _this.setState({\n        activeQuery: query,\n        page: 0, // Reset this on each query change\n        selectedSavedObjects: []\n      }, function () {\n        _this.fetchSavedObjects();\n        _this.fetchCounts();\n      });\n    };\n\n    _this.onTableChange = function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(table) {\n        var _ref7, page, perPage;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _ref7 = table.page || {}, page = _ref7.index, perPage = _ref7.size;\n\n\n                _this.setState({\n                  page: page,\n                  perPage: perPage,\n                  selectedSavedObjects: []\n                }, _this.fetchSavedObjects);\n\n              case 2:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, _this2);\n      }));\n\n      return function (_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.onShowRelationships = function (id, type, title) {\n      _this.setState({\n        isShowingRelationships: true,\n        relationshipId: id,\n        relationshipType: type,\n        relationshipTitle: title\n      });\n    };\n\n    _this.onHideRelationships = function () {\n      _this.setState({\n        isShowingRelationships: false,\n        relationshipId: undefined,\n        relationshipType: undefined,\n        relationshipTitle: undefined\n      });\n    };\n\n    _this.onExport = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var savedObjectsClient, selectedSavedObjects, objects;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              savedObjectsClient = _this.props.savedObjectsClient;\n              selectedSavedObjects = _this.state.selectedSavedObjects;\n              _context5.next = 4;\n              return savedObjectsClient.bulkGet(selectedSavedObjects);\n\n            case 4:\n              objects = _context5.sent;\n              _context5.next = 7;\n              return (0, _lib.retrieveAndExportDocs)(objects.savedObjects, savedObjectsClient);\n\n            case 7:\n            case 'end':\n              return _context5.stop();\n          }\n        }\n      }, _callee5, _this2);\n    }));\n    _this.onExportAll = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var $http, exportAllSelectedOptions, exportTypes, results;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              $http = _this.props.$http;\n              exportAllSelectedOptions = _this.state.exportAllSelectedOptions;\n              exportTypes = Object.entries(exportAllSelectedOptions).reduce(function (accum, _ref10) {\n                var _ref11 = _slicedToArray(_ref10, 2),\n                    id = _ref11[0],\n                    selected = _ref11[1];\n\n                if (selected) {\n                  accum.push(id);\n                }\n                return accum;\n              }, []);\n              _context6.next = 5;\n              return (0, _lib.scanAllTypes)($http, exportTypes);\n\n            case 5:\n              results = _context6.sent;\n\n              (0, _lib.saveToFile)(JSON.stringify((0, _lodash.flattenDeep)(results), null, 2));\n\n            case 7:\n            case 'end':\n              return _context6.stop();\n          }\n        }\n      }, _callee6, _this2);\n    }));\n\n    _this.finishImport = function () {\n      _this.hideImportFlyout();\n      _this.fetchSavedObjects();\n      _this.fetchCounts();\n    };\n\n    _this.showImportFlyout = function () {\n      _this.setState({ isShowingImportFlyout: true });\n    };\n\n    _this.hideImportFlyout = function () {\n      _this.setState({ isShowingImportFlyout: false });\n    };\n\n    _this.onDelete = function () {\n      _this.setState({ isShowingDeleteConfirmModal: true });\n    };\n\n    _this.delete = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      var savedObjectsClient, _this$state2, selectedSavedObjects, isDeleting, indexPatterns, objects, deletes;\n\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              savedObjectsClient = _this.props.savedObjectsClient;\n              _this$state2 = _this.state, selectedSavedObjects = _this$state2.selectedSavedObjects, isDeleting = _this$state2.isDeleting;\n\n              if (!isDeleting) {\n                _context7.next = 4;\n                break;\n              }\n\n              return _context7.abrupt('return');\n\n            case 4:\n\n              _this.setState({ isDeleting: true });\n\n              indexPatterns = selectedSavedObjects.filter(function (object) {\n                return object.type === 'index-pattern';\n              });\n\n              if (!indexPatterns.length) {\n                _context7.next = 9;\n                break;\n              }\n\n              _context7.next = 9;\n              return _this.props.indexPatterns.cache.clearAll();\n\n            case 9:\n              _context7.next = 11;\n              return savedObjectsClient.bulkGet(selectedSavedObjects);\n\n            case 11:\n              objects = _context7.sent;\n              deletes = objects.savedObjects.map(function (object) {\n                return savedObjectsClient.delete(object.type, object.id);\n              });\n              _context7.next = 15;\n              return Promise.all(deletes);\n\n            case 15:\n\n              // Unset this\n              _this.setState({\n                selectedSavedObjects: []\n              });\n\n              // Fetching all data\n              _context7.next = 18;\n              return _this.fetchSavedObjects();\n\n            case 18:\n              _context7.next = 20;\n              return _this.fetchCounts();\n\n            case 20:\n\n              // Allow the user to interact with the table once the saved objects have been re-fetched.\n              _this.setState({\n                isShowingDeleteConfirmModal: false,\n                isDeleting: false\n              });\n\n            case 21:\n            case 'end':\n              return _context7.stop();\n          }\n        }\n      }, _callee7, _this2);\n    }));\n\n    _this.getRelationships = function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(type, id) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return (0, _lib.getRelationships)(type, id, _this.props.$http, _this.props.basePath);\n\n              case 2:\n                return _context8.abrupt('return', _context8.sent);\n\n              case 3:\n              case 'end':\n                return _context8.stop();\n            }\n          }\n        }, _callee8, _this2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      totalCount: 0,\n      page: 0,\n      perPage: props.perPageConfig || 50,\n      savedObjects: [],\n      savedObjectCounts: INCLUDED_TYPES.reduce(function (typeToCountMap, type) {\n        typeToCountMap[type] = 0;\n        return typeToCountMap;\n      }, {}),\n      activeQuery: _eui.Query.parse(''),\n      selectedSavedObjects: [],\n      isShowingImportFlyout: false,\n      isSearching: false,\n      filteredItemCount: 0,\n      isShowingRelationships: false,\n      relationshipId: undefined,\n      relationshipType: undefined,\n      relationshipTitle: undefined,\n      isShowingDeleteConfirmModal: false,\n      isShowingExportAllOptionsModal: false,\n      isDeleting: false,\n      exportAllOptions: [],\n      exportAllSelectedOptions: {}\n    };\n    return _this;\n  }\n\n  _createClass(ObjectsTableUI, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.fetchSavedObjects();\n      this.fetchCounts();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.debouncedFetch.cancel();\n    }\n  }, {\n    key: 'renderFlyout',\n    value: function renderFlyout() {\n      if (!this.state.isShowingImportFlyout) {\n        return null;\n      }\n\n      return _react2.default.createElement(_flyout.Flyout, {\n        close: this.hideImportFlyout,\n        done: this.finishImport,\n        services: this.props.services,\n        indexPatterns: this.props.indexPatterns,\n        newIndexPatternUrl: this.props.newIndexPatternUrl\n      });\n    }\n  }, {\n    key: 'renderRelationships',\n    value: function renderRelationships() {\n      if (!this.state.isShowingRelationships) {\n        return null;\n      }\n\n      return _react2.default.createElement(_relationships.Relationships, {\n        id: this.state.relationshipId,\n        type: this.state.relationshipType,\n        title: this.state.relationshipTitle,\n        getRelationships: this.getRelationships,\n        close: this.onHideRelationships,\n        getDashboardUrl: this.props.getDashboardUrl,\n        getEditUrl: this.props.getEditUrl,\n        goInApp: this.props.goInApp\n      });\n    }\n  }, {\n    key: 'renderDeleteConfirmModal',\n    value: function renderDeleteConfirmModal() {\n      var _this3 = this;\n\n      var _state = this.state,\n          isShowingDeleteConfirmModal = _state.isShowingDeleteConfirmModal,\n          isDeleting = _state.isDeleting,\n          selectedSavedObjects = _state.selectedSavedObjects;\n      var intl = this.props.intl;\n\n\n      if (!isShowingDeleteConfirmModal) {\n        return null;\n      }\n\n      var modal = void 0;\n\n      if (isDeleting) {\n        // Block the user from interacting with the table while its contents are being deleted.\n        modal = _react2.default.createElement(_eui.EuiLoadingKibana, { size: 'xl' });\n      } else {\n        var onCancel = function onCancel() {\n          _this3.setState({ isShowingDeleteConfirmModal: false });\n        };\n\n        var onConfirm = function onConfirm() {\n          _this3.delete();\n        };\n\n        modal = _react2.default.createElement(\n          _eui.EuiConfirmModal,\n          {\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.deleteSavedObjectsConfirmModalTitle',\n              defaultMessage: 'Delete saved objects'\n            }),\n            onCancel: onCancel,\n            onConfirm: onConfirm,\n            cancelButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.deleteSavedObjectsConfirmModal.cancelButtonLabel',\n              defaultMessage: 'Cancel'\n            }),\n            confirmButtonText: isDeleting ? _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.deleteSavedObjectsConfirmModal.deleteProcessButtonLabel',\n              defaultMessage: 'Deleting\\u2026'\n            }) : _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.deleteSavedObjectsConfirmModal.deleteButtonLabel',\n              defaultMessage: 'Delete'\n            }),\n            defaultFocusedButton: _eui.EUI_MODAL_CONFIRM_BUTTON\n          },\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.deleteSavedObjectsConfirmModalDescription',\n              defaultMessage: 'This action will delete the following saved objects:'\n            })\n          ),\n          _react2.default.createElement(_eui.EuiInMemoryTable, {\n            items: selectedSavedObjects,\n            columns: [{\n              field: 'type',\n              name: intl.formatMessage({\n                id: 'kbn.management.objects.objectsTable.deleteSavedObjectsConfirmModal.typeColumnName', defaultMessage: 'Type'\n              }),\n              width: '50px',\n              render: function render(type) {\n                return _react2.default.createElement(\n                  _eui.EuiToolTip,\n                  {\n                    position: 'top',\n                    content: (0, _lib.getSavedObjectLabel)(type)\n                  },\n                  _react2.default.createElement(_eui.EuiIcon, { type: (0, _lib.getSavedObjectIcon)(type) })\n                );\n              }\n            }, {\n              field: 'id',\n              name: intl.formatMessage({\n                id: 'kbn.management.objects.objectsTable.deleteSavedObjectsConfirmModal.idColumnName', defaultMessage: 'Id/Name'\n              })\n            }],\n            pagination: true,\n            sorting: false\n          })\n        );\n      }\n\n      return _react2.default.createElement(\n        _eui.EuiOverlayMask,\n        null,\n        modal\n      );\n    }\n  }, {\n    key: 'renderExportAllOptionsModal',\n    value: function renderExportAllOptionsModal() {\n      var _this4 = this;\n\n      var _state2 = this.state,\n          isShowingExportAllOptionsModal = _state2.isShowingExportAllOptionsModal,\n          filteredItemCount = _state2.filteredItemCount,\n          exportAllOptions = _state2.exportAllOptions,\n          exportAllSelectedOptions = _state2.exportAllSelectedOptions;\n\n\n      if (!isShowingExportAllOptionsModal) {\n        return null;\n      }\n\n      return _react2.default.createElement(\n        _eui.EuiOverlayMask,\n        null,\n        _react2.default.createElement(\n          _eui.EuiConfirmModal,\n          {\n            title: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.exportObjectsConfirmModalTitle',\n              defaultMessage: 'Export {filteredItemCount, plural, one{# object} other {# objects}}',\n              values: {\n                filteredItemCount: filteredItemCount\n              }\n            }),\n            onCancel: function onCancel() {\n              return _this4.setState({ isShowingExportAllOptionsModal: false });\n            },\n            onConfirm: this.onExportAll,\n            cancelButtonText: _react2.default.createElement(_react3.FormattedMessage, { id: 'kbn.management.objects.objectsTable.exportObjectsConfirmModal.cancelButtonLabel', defaultMessage: 'Cancel' }),\n            confirmButtonText: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.exportObjectsConfirmModal.exportAllButtonLabel',\n              defaultMessage: 'Export All'\n            }),\n            defaultFocusedButton: _eui.EUI_MODAL_CONFIRM_BUTTON\n          },\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'kbn.management.objects.objectsTable.exportObjectsConfirmModalDescription',\n              defaultMessage: 'Select which types to export. The number in parentheses indicates how many of this type are available to export.'\n            })\n          ),\n          _react2.default.createElement(_eui.EuiCheckboxGroup, {\n            options: exportAllOptions,\n            idToSelectedMap: exportAllSelectedOptions,\n            onChange: function onChange(optionId) {\n              var newExportAllSelectedOptions = _extends({}, exportAllSelectedOptions, _defineProperty({}, optionId, !exportAllSelectedOptions[optionId]));\n\n              _this4.setState({\n                exportAllSelectedOptions: newExportAllSelectedOptions\n              });\n            }\n          })\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      var _state3 = this.state,\n          selectedSavedObjects = _state3.selectedSavedObjects,\n          page = _state3.page,\n          perPage = _state3.perPage,\n          savedObjects = _state3.savedObjects,\n          filteredItemCount = _state3.filteredItemCount,\n          isSearching = _state3.isSearching,\n          savedObjectCounts = _state3.savedObjectCounts;\n\n\n      var selectionConfig = {\n        onSelectionChange: this.onSelectionChanged\n      };\n\n      var filterOptions = INCLUDED_TYPES.map(function (type) {\n        return {\n          value: type,\n          name: type,\n          view: type + ' (' + (savedObjectCounts[type] || 0) + ')'\n        };\n      });\n\n      return _react2.default.createElement(\n        _eui.EuiPageContent,\n        {\n          horizontalPosition: 'center'\n        },\n        this.renderFlyout(),\n        this.renderRelationships(),\n        this.renderDeleteConfirmModal(),\n        this.renderExportAllOptionsModal(),\n        _react2.default.createElement(_header.Header, {\n          onExportAll: function onExportAll() {\n            return _this5.setState({ isShowingExportAllOptionsModal: true });\n          },\n          onImport: this.showImportFlyout,\n          onRefresh: this.refreshData,\n          filteredCount: filteredItemCount\n        }),\n        _react2.default.createElement(_eui.EuiSpacer, { size: 'xs' }),\n        _react2.default.createElement(_table.Table, {\n          itemId: 'id',\n          selectionConfig: selectionConfig,\n          selectedSavedObjects: selectedSavedObjects,\n          onQueryChange: this.onQueryChange,\n          onTableChange: this.onTableChange,\n          filterOptions: filterOptions,\n          onExport: this.onExport,\n          onDelete: this.onDelete,\n          getEditUrl: this.props.getEditUrl,\n          goInApp: this.props.goInApp,\n          pageIndex: page,\n          pageSize: perPage,\n          items: savedObjects,\n          totalItemCount: filteredItemCount,\n          isSearching: isSearching,\n          onShowRelationships: this.onShowRelationships\n        })\n      );\n    }\n  }]);\n\n  return ObjectsTableUI;\n}(_react.Component);\n\nObjectsTableUI.propTypes = {\n  savedObjectsClient: _propTypes2.default.object.isRequired,\n  indexPatterns: _propTypes2.default.object.isRequired,\n  $http: _propTypes2.default.func.isRequired,\n  basePath: _propTypes2.default.string.isRequired,\n  perPageConfig: _propTypes2.default.number,\n  newIndexPatternUrl: _propTypes2.default.string.isRequired,\n  services: _propTypes2.default.array.isRequired,\n  getEditUrl: _propTypes2.default.func.isRequired,\n  goInApp: _propTypes2.default.func.isRequired\n};\nvar ObjectsTable = exports.ObjectsTable = (0, _react3.injectI18n)(ObjectsTableUI);",null]}