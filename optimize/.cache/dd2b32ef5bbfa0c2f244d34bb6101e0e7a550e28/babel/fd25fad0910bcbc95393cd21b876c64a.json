{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/settings/calendars/edit/utils.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/settings/calendars/edit/utils.js","mtime":1567631712065},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCalendarSettingsData = getCalendarSettingsData;\nexports.validateCalendarId = validateCalendarId;\nexports.generateTempId = generateTempId;\n\nvar _ml_api_service = require('../../../services/ml_api_service');\n\nvar _job_utils = require('../../../../common/util/job_utils');\n\nvar _i18n = require('@kbn/i18n');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\nfunction getJobIds() {\n  return new Promise(function (resolve, reject) {\n    _ml_api_service.ml.jobs.jobsSummary().then(function (resp) {\n      resolve(resp.map(function (job) {\n        return job.id;\n      }));\n    }).catch(function (err) {\n      var errorMessage = _i18n.i18n.translate('xpack.ml.calendarsEdit.errorWithFetchingJobSummariesErrorMessage', {\n        defaultMessage: 'Error fetching job summaries: {err}',\n        values: { err: err }\n      });\n      console.log(errorMessage);\n      reject(errorMessage);\n    });\n  });\n}\n\nfunction getGroupIds() {\n  return new Promise(function (resolve, reject) {\n    _ml_api_service.ml.jobs.groups().then(function (resp) {\n      resolve(resp.map(function (group) {\n        return group.id;\n      }));\n    }).catch(function (err) {\n      var errorMessage = _i18n.i18n.translate('xpack.ml.calendarsEdit.errorWithLoadingGroupsErrorMessage', {\n        defaultMessage: 'Error loading groups: {err}',\n        values: { err: err }\n      });\n      console.log(errorMessage);\n      reject(errorMessage);\n    });\n  });\n}\n\nfunction getCalendars() {\n  return new Promise(function (resolve, reject) {\n    _ml_api_service.ml.calendars().then(function (resp) {\n      resolve(resp);\n    }).catch(function (err) {\n      var errorMessage = _i18n.i18n.translate('xpack.ml.calendarsEdit.errorWithLoadingCalendarsErrorMessage', {\n        defaultMessage: 'Error loading calendars: {err}',\n        values: { err: err }\n      });\n      console.log(errorMessage);\n      reject(errorMessage);\n    });\n  });\n}\n\nfunction getCalendarSettingsData() {\n  var _this = this;\n\n  return new Promise(function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var data, formattedData;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Promise.all([getJobIds(), getGroupIds(), getCalendars()]);\n\n            case 3:\n              data = _context.sent;\n              formattedData = {\n                jobIds: data[0],\n                groupIds: data[1],\n                calendars: data[2]\n              };\n\n              resolve(formattedData);\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context['catch'](0);\n\n              console.log(_context.t0);\n              reject(_context.t0);\n\n            case 12:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this, [[0, 8]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\n\nfunction validateCalendarId(calendarId) {\n  var valid = true;\n\n  if (calendarId === '' || calendarId === undefined) {\n    valid = false;\n  } else if ((0, _job_utils.isJobIdValid)(calendarId) === false) {\n    valid = false;\n  }\n\n  return valid;\n}\n\nfunction generateTempId() {\n  return Math.random().toString(36).substr(2, 9);\n}",null]}