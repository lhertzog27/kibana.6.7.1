{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/fields_selection/fields_selection_directive.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/jobs/new_job/simple/components/fields_selection/fields_selection_directive.js","mtime":1567631712055},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _states = require('plugins/ml/jobs/new_job/simple/components/constants/states');\n\nvar _fields_selection = require('./fields_selection.html');\n\nvar _fields_selection2 = _interopRequireDefault(_fields_selection);\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = _modules.uiModules.get('apps/ml'); /*\n                                                  * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                  * or more contributor license agreements. Licensed under the Elastic License;\n                                                  * you may not use this file except in compliance with the Elastic License.\n                                                  */\n\n_module.directive('mlFieldsSelection', function () {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: _fields_selection2.default,\n    controller: function controller($scope) {\n      $scope.toggleFields = function (field) {\n        var key = field.id;\n\n        var f = $scope.formConfig.fields[key];\n        if (f === undefined) {\n          $scope.formConfig.fields[key] = field;\n          $scope.chartStates.fields[key] = _states.CHART_STATE.LOADING;\n        } else {\n          delete $scope.formConfig.fields[key];\n          delete $scope.chartStates.fields[key];\n        }\n        if ($scope.formConfig.splitField !== undefined) {\n          $scope.setModelMemoryLimit();\n        }\n      };\n    }\n  };\n});",null]}