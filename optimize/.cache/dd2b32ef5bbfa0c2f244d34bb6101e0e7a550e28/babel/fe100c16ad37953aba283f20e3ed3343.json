{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/chart/monitoring_timeseries.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/monitoring/public/components/chart/monitoring_timeseries.js","mtime":1567631712084},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MonitoringTimeseries = MonitoringTimeseries;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _numeral = require('@elastic/numeral');\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nvar _get_color = require('./get_color');\n\nvar _timeseries_visualization = require('./timeseries_visualization');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction formatTicksFor(series) {\n  var format = (0, _lodash.get)(series, '.metric.format', '0,0.0');\n  var units = (0, _lodash.get)(series, '.metric.units', '');\n\n  return function formatTicks(val) {\n    var formatted = (0, _numeral2.default)(val).format(format);\n\n    // numeral write 'B' as the actual size (e.g., 'MB')\n    if (units !== 'B' && units !== '') {\n      formatted += ' ' + units;\n    }\n\n    return formatted;\n  };\n} /*\n   * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n   * or more contributor license agreements. Licensed under the Elastic License;\n   * you may not use this file except in compliance with the Elastic License.\n   */\n\nfunction MonitoringTimeseries(_ref) {\n  var series = _ref.series,\n      onBrush = _ref.onBrush;\n\n  var dataset = series.map(function (s, index) {\n    return {\n      color: (0, _get_color.getColor)(s.metric.app, index),\n      data: s.data,\n      label: s.metric.label\n    };\n  });\n  var firstSeries = (0, _lodash.first)(series);\n  var timeRange = (0, _lodash.get)(firstSeries, 'timeRange');\n  var formatTicks = formatTicksFor(firstSeries);\n\n  return _react2.default.createElement(_timeseries_visualization.TimeseriesVisualization, {\n    series: dataset,\n    timeRange: timeRange,\n    tickFormatter: formatTicks,\n    onBrush: onBrush\n  });\n}",null]}