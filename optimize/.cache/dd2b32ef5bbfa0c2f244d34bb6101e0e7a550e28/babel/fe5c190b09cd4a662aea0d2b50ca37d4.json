{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/services/api.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/index_lifecycle_management/public/services/api.js","mtime":1567631711966},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addLifecyclePolicyToTemplate = exports.addLifecyclePolicyToIndex = exports.removeLifecycleForIndex = exports.retryLifecycleForIndex = exports.getAffectedIndices = exports.saveLifecycle = exports.deletePolicy = exports.loadPolicies = exports.loadIndexTemplate = exports.loadIndexTemplates = exports.loadNodeDetails = exports.loadNodes = exports.setHttpClient = undefined;\n\nvar loadNodes = exports.loadNodes = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var httpClient = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return httpClient.get(apiPrefix + '/nodes/list');\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt('return', response.data);\n\n          case 4:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function loadNodes() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar loadNodeDetails = exports.loadNodeDetails = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(selectedNodeAttrs) {\n    var httpClient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return httpClient.get(apiPrefix + '/nodes/' + selectedNodeAttrs + '/details');\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt('return', response.data);\n\n          case 4:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function loadNodeDetails(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar loadIndexTemplates = exports.loadIndexTemplates = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var httpClient = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return httpClient.get(apiPrefix + '/templates');\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt('return', response.data);\n\n          case 4:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  return function loadIndexTemplates() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar loadIndexTemplate = exports.loadIndexTemplate = function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(templateName) {\n    var httpClient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (templateName) {\n              _context4.next = 2;\n              break;\n            }\n\n            return _context4.abrupt('return', {});\n\n          case 2:\n            _context4.next = 4;\n            return httpClient.get(apiPrefix + '/template/' + templateName);\n\n          case 4:\n            response = _context4.sent;\n            return _context4.abrupt('return', response.data);\n\n          case 6:\n          case 'end':\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n\n  return function loadIndexTemplate(_x6) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar loadPolicies = exports.loadPolicies = function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(withIndices) {\n    var httpClient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return httpClient.get(apiPrefix + '/policies' + (withIndices ? '?withIndices=true' : ''));\n\n          case 2:\n            response = _context5.sent;\n            return _context5.abrupt('return', response.data);\n\n          case 4:\n          case 'end':\n            return _context5.stop();\n        }\n      }\n    }, _callee5, this);\n  }));\n\n  return function loadPolicies(_x8) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar deletePolicy = exports.deletePolicy = function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(policyName) {\n    var httpClient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return httpClient.delete(apiPrefix + '/policies/' + encodeURIComponent(policyName));\n\n          case 2:\n            response = _context6.sent;\n            return _context6.abrupt('return', response.data);\n\n          case 4:\n          case 'end':\n            return _context6.stop();\n        }\n      }\n    }, _callee6, this);\n  }));\n\n  return function deletePolicy(_x10) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar saveLifecycle = exports.saveLifecycle = function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(lifecycle) {\n    var httpClient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return httpClient.post(apiPrefix + '/lifecycle', { lifecycle: lifecycle });\n\n          case 2:\n            response = _context7.sent;\n            return _context7.abrupt('return', response.data);\n\n          case 4:\n          case 'end':\n            return _context7.stop();\n        }\n      }\n    }, _callee7, this);\n  }));\n\n  return function saveLifecycle(_x12) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nvar getAffectedIndices = exports.getAffectedIndices = function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(indexTemplateName, policyName) {\n    var httpClient = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getHttpClient();\n    var path, response;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            path = policyName ? apiPrefix + '/indices/affected/' + indexTemplateName + '/' + encodeURIComponent(policyName) : apiPrefix + '/indices/affected/' + indexTemplateName;\n            _context8.next = 3;\n            return httpClient.get(path);\n\n          case 3:\n            response = _context8.sent;\n            return _context8.abrupt('return', response.data);\n\n          case 5:\n          case 'end':\n            return _context8.stop();\n        }\n      }\n    }, _callee8, this);\n  }));\n\n  return function getAffectedIndices(_x14, _x15) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */\n\n\nvar httpClient = void 0;\nvar setHttpClient = exports.setHttpClient = function setHttpClient(client) {\n  httpClient = client;\n};\nvar getHttpClient = function getHttpClient() {\n  return httpClient;\n};\nvar apiPrefix = _chrome2.default.addBasePath('/api/index_lifecycle_management');\n\nvar retryLifecycleForIndex = exports.retryLifecycleForIndex = function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(indexNames) {\n    var httpClient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return httpClient.post(apiPrefix + '/index/retry', { indexNames: indexNames });\n\n          case 2:\n            response = _context9.sent;\n            return _context9.abrupt('return', response.data);\n\n          case 4:\n          case 'end':\n            return _context9.stop();\n        }\n      }\n    }, _callee9, undefined);\n  }));\n\n  return function retryLifecycleForIndex(_x17) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nvar removeLifecycleForIndex = exports.removeLifecycleForIndex = function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(indexNames) {\n    var httpClient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return httpClient.post(apiPrefix + '/index/remove', { indexNames: indexNames });\n\n          case 2:\n            response = _context10.sent;\n            return _context10.abrupt('return', response.data);\n\n          case 4:\n          case 'end':\n            return _context10.stop();\n        }\n      }\n    }, _callee10, undefined);\n  }));\n\n  return function removeLifecycleForIndex(_x19) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nvar addLifecyclePolicyToIndex = exports.addLifecyclePolicyToIndex = function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(body) {\n    var httpClient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return httpClient.post(apiPrefix + '/index/add', body);\n\n          case 2:\n            response = _context11.sent;\n            return _context11.abrupt('return', response.data);\n\n          case 4:\n          case 'end':\n            return _context11.stop();\n        }\n      }\n    }, _callee11, undefined);\n  }));\n\n  return function addLifecyclePolicyToIndex(_x21) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nvar addLifecyclePolicyToTemplate = exports.addLifecyclePolicyToTemplate = function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(body) {\n    var httpClient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getHttpClient();\n    var response;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return httpClient.post(apiPrefix + '/template', body);\n\n          case 2:\n            response = _context12.sent;\n            return _context12.abrupt('return', response.data);\n\n          case 4:\n          case 'end':\n            return _context12.stop();\n        }\n      }\n    }, _callee12, undefined);\n  }));\n\n  return function addLifecyclePolicyToTemplate(_x23) {\n    return _ref12.apply(this, arguments);\n  };\n}();",null]}