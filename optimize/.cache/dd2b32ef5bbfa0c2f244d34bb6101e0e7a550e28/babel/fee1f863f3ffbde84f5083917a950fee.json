{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/editor/visualization_editor.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/editor/visualization_editor.js","mtime":1567631691254},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _modules = require('ui/modules');\n\nrequire('angular-sanitize');\n\nvar _vis_editor_types = require('ui/registry/vis_editor_types');\n\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n_modules.uiModules.get('kibana/directive', ['ngSanitize']).directive('visualizationEditor', function (Private, $timeout, getAppState) {\n  var editorTypes = Private(_vis_editor_types.VisEditorTypesRegistryProvider);\n\n  return {\n    restrict: 'E',\n    scope: {\n      savedObj: '=',\n      uiState: '=?',\n      timeRange: '=',\n      filters: '='\n    },\n    link: function link($scope, element) {\n      var editorType = $scope.savedObj.vis.type.editor;\n      var Editor = typeof editorType === 'function' ? editorType : editorTypes.find(function (editor) {\n        return editor.key === editorType;\n      });\n      var editor = new Editor(element[0], $scope.savedObj);\n\n      $scope.renderFunction = function () {\n        editor.render({\n          uiState: $scope.uiState,\n          timeRange: $scope.timeRange,\n          filters: $scope.filters,\n          appState: getAppState()\n        });\n      };\n\n      $scope.$on('render', function (event) {\n        event.preventDefault();\n        $timeout(function () {\n          $scope.renderFunction();\n        });\n      });\n\n      $scope.$on('$destroy', function () {\n        editor.destroy();\n      });\n\n      $scope.$watchGroup(['timeRange', 'filters'], (0, _lodash.debounce)(function () {\n        $scope.renderFunction();\n      }, 100));\n    }\n  };\n});",null]}