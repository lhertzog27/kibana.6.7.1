{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/xpack_main/public/components/telemetry/telemetry_form.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/xpack_main/public/components/telemetry/telemetry_form.js","mtime":1567631712358},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TelemetryForm = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _eui = require('@elastic/eui');\n\nvar _constants = require('../../../common/constants');\n\nvar _opt_in_details_component = require('./opt_in_details_component');\n\nvar _management = require('ui/management');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar SEARCH_TERMS = ['telemetry', 'usage', 'data', 'usage data'];\n\nvar TelemetryForm = exports.TelemetryForm = function (_Component) {\n  _inherits(TelemetryForm, _Component);\n\n  function TelemetryForm() {\n    var _ref,\n        _this2 = this;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TelemetryForm);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TelemetryForm.__proto__ || Object.getPrototypeOf(TelemetryForm)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      processing: false,\n      showExample: false,\n      queryMatches: null\n    }, _this.maybeGetSpacesWarning = function () {\n      if (!_this.props.spacesEnabled) {\n        return null;\n      }\n      return _react2.default.createElement(_eui.EuiCallOut, {\n        color: 'primary',\n        iconType: 'spacesApp',\n        title: _react2.default.createElement(\n          'p',\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.main.telemetry.callout.appliesSettingTitle',\n            defaultMessage: 'This setting applies to {allOfKibanaText}',\n            values: {\n              allOfKibanaText: _react2.default.createElement(\n                'strong',\n                null,\n                _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.main.telemetry.callout.appliesSettingTitle.allOfKibanaText',\n                  defaultMessage: 'all of Kibana.'\n                })\n              )\n            }\n          })\n        )\n      });\n    }, _this.renderDescription = function () {\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        _react2.default.createElement(\n          'p',\n          null,\n          (0, _constants.getConfigTelemetryDesc)()\n        ),\n        _react2.default.createElement(\n          'p',\n          null,\n          _react2.default.createElement(\n            _eui.EuiLink,\n            { onClick: _this.toggleExample },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.main.telemetry.seeExampleOfWhatWeCollectLinkText',\n              defaultMessage: 'See an example of what we collect'\n            })\n          )\n        ),\n        _react2.default.createElement(\n          'p',\n          null,\n          _react2.default.createElement(\n            _eui.EuiLink,\n            { href: _constants.PRIVACY_STATEMENT_URL, target: '_blank' },\n            _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.main.telemetry.readOurUsageDataPrivacyStatementLinkText',\n              defaultMessage: 'Read our usage data privacy statement'\n            })\n          )\n        )\n      );\n    }, _this.toggleOptIn = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var newOptInValue;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              newOptInValue = !_this.props.telemetryOptInProvider.getOptIn();\n              return _context.abrupt('return', new Promise(function (resolve, reject) {\n                _this.setState({\n                  enabled: newOptInValue,\n                  processing: true\n                }, function () {\n                  _this.props.telemetryOptInProvider.setOptIn(newOptInValue).then(function () {\n                    _this.setState({ processing: false });\n                    resolve();\n                  }, function (e) {\n                    // something went wrong\n                    _this.setState({ processing: false });\n                    reject(e);\n                  });\n                });\n              }));\n\n            case 2:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, _this2);\n    })), _this.toggleExample = function () {\n      _this.setState({\n        showExample: !_this.state.showExample\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TelemetryForm, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this3 = this;\n\n      var query = nextProps.query;\n\n\n      var searchTerm = (query.text || '').toLowerCase();\n      var searchTermMatches = SEARCH_TERMS.some(function (term) {\n        return term.indexOf(searchTerm) >= 0;\n      });\n\n      if (searchTermMatches !== this.state.queryMatches) {\n        this.setState({\n          queryMatches: searchTermMatches\n        }, function () {\n          _this3.props.onQueryMatchChange(searchTermMatches);\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var telemetryOptInProvider = this.props.telemetryOptInProvider;\n      var _state = this.state,\n          showExample = _state.showExample,\n          queryMatches = _state.queryMatches;\n\n\n      if (queryMatches !== null && !queryMatches) {\n        return null;\n      }\n\n      return _react2.default.createElement(\n        _react.Fragment,\n        null,\n        showExample && _react2.default.createElement(_opt_in_details_component.OptInExampleFlyout, { fetchTelemetry: function fetchTelemetry() {\n            return telemetryOptInProvider.fetchExample();\n          }, onClose: this.toggleExample }),\n        _react2.default.createElement(\n          _eui.EuiPanel,\n          { paddingSize: 'l' },\n          _react2.default.createElement(\n            _eui.EuiForm,\n            null,\n            _react2.default.createElement(\n              _eui.EuiText,\n              null,\n              _react2.default.createElement(\n                _eui.EuiFlexGroup,\n                { alignItems: 'baseline' },\n                _react2.default.createElement(\n                  _eui.EuiFlexItem,\n                  { grow: false },\n                  _react2.default.createElement(\n                    'h2',\n                    null,\n                    _react2.default.createElement(_react3.FormattedMessage, {\n                      id: 'xpack.main.telemetry.usageDataTitle',\n                      defaultMessage: 'Usage Data'\n                    })\n                  )\n                )\n              )\n            ),\n            this.maybeGetSpacesWarning(),\n            _react2.default.createElement(_eui.EuiSpacer, { size: 's' }),\n            _react2.default.createElement(_management.Field, {\n              setting: {\n                type: 'boolean',\n                value: telemetryOptInProvider.getOptIn() || false,\n                description: this.renderDescription(),\n                defVal: false\n              },\n              save: this.toggleOptIn,\n              clear: this.toggleOptIn\n            })\n          )\n        )\n      );\n    }\n  }]);\n\n  return TelemetryForm;\n}(_react.Component);\n\nTelemetryForm.propTypes = {\n  telemetryOptInProvider: _propTypes2.default.object.isRequired,\n  query: _propTypes2.default.object,\n  onQueryMatchChange: _propTypes2.default.func.isRequired,\n  spacesEnabled: _propTypes2.default.bool.isRequired,\n  activeSpace: _propTypes2.default.object\n};",null]}