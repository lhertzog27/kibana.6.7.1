{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--9-1!/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js??ref--9-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/rule_editor/scope_expression.js","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/rule_editor/scope_expression.js","mtime":1567631712035},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/babel-loader/lib/index.js","mtime":1567666227676}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScopeExpression = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _eui = require('@elastic/eui');\n\nvar _detector_rule = require('../../../common/constants/detector_rule');\n\nvar _utils = require('./utils');\n\nvar _react3 = require('@kbn/i18n/react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * or more contributor license agreements. Licensed under the Elastic License;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the Elastic License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/*\n * React component for rendering a rule scope expression.\n */\n\n// Raise the popovers above GuidePageSideNav\nvar POPOVER_STYLE = { zIndex: '200' };\n\nfunction getFilterListOptions(filterListIds) {\n  return filterListIds.map(function (filterId) {\n    return { value: filterId, text: filterId };\n  });\n}\n\nvar ScopeExpression = exports.ScopeExpression = function (_Component) {\n  _inherits(ScopeExpression, _Component);\n\n  function ScopeExpression(props) {\n    _classCallCheck(this, ScopeExpression);\n\n    var _this = _possibleConstructorReturn(this, (ScopeExpression.__proto__ || Object.getPrototypeOf(ScopeExpression)).call(this, props));\n\n    _this.openFilterList = function () {\n      _this.setState({\n        isFilterListOpen: true\n      });\n    };\n\n    _this.closeFilterList = function () {\n      _this.setState({\n        isFilterListOpen: false\n      });\n    };\n\n    _this.onChangeFilterType = function (event) {\n      var _this$props = _this.props,\n          fieldName = _this$props.fieldName,\n          filterId = _this$props.filterId,\n          enabled = _this$props.enabled,\n          updateScope = _this$props.updateScope;\n\n\n      updateScope(fieldName, filterId, event.target.value, enabled);\n    };\n\n    _this.onChangeFilterId = function (event) {\n      var _this$props2 = _this.props,\n          fieldName = _this$props2.fieldName,\n          filterType = _this$props2.filterType,\n          enabled = _this$props2.enabled,\n          updateScope = _this$props2.updateScope;\n\n\n      updateScope(fieldName, event.target.value, filterType, enabled);\n    };\n\n    _this.onEnableChange = function (event) {\n      var _this$props3 = _this.props,\n          fieldName = _this$props3.fieldName,\n          filterId = _this$props3.filterId,\n          filterType = _this$props3.filterType,\n          updateScope = _this$props3.updateScope;\n\n\n      updateScope(fieldName, filterId, filterType, event.target.checked);\n    };\n\n    _this.state = {\n      isFilterListOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(ScopeExpression, [{\n    key: 'renderFilterListPopover',\n    value: function renderFilterListPopover() {\n      var _props = this.props,\n          filterId = _props.filterId,\n          filterType = _props.filterType,\n          filterListIds = _props.filterListIds;\n\n\n      return _react2.default.createElement(\n        'div',\n        { style: POPOVER_STYLE },\n        _react2.default.createElement(\n          _eui.EuiPopoverTitle,\n          null,\n          _react2.default.createElement(_react3.FormattedMessage, {\n            id: 'xpack.ml.ruleEditor.scopeExpression.scopeFilterTypePopoverTitle',\n            defaultMessage: 'Is'\n          })\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'euiExpression' },\n          _react2.default.createElement(\n            _eui.EuiFlexGroup,\n            { style: { maxWidth: 450 } },\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false, style: { width: 150 } },\n              _react2.default.createElement(_eui.EuiSelect, {\n                value: filterType,\n                onChange: this.onChangeFilterType,\n                options: [{ value: _detector_rule.FILTER_TYPE.INCLUDE, text: (0, _utils.filterTypeToText)(_detector_rule.FILTER_TYPE.INCLUDE) }, { value: _detector_rule.FILTER_TYPE.EXCLUDE, text: (0, _utils.filterTypeToText)(_detector_rule.FILTER_TYPE.EXCLUDE) }]\n              })\n            ),\n            _react2.default.createElement(\n              _eui.EuiFlexItem,\n              { grow: false, style: { width: 300 } },\n              _react2.default.createElement(_eui.EuiSelect, {\n                value: filterId,\n                onChange: this.onChangeFilterId,\n                options: getFilterListOptions(filterListIds)\n              })\n            )\n          )\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          fieldName = _props2.fieldName,\n          filterId = _props2.filterId,\n          filterType = _props2.filterType,\n          enabled = _props2.enabled,\n          filterListIds = _props2.filterListIds;\n\n\n      return _react2.default.createElement(\n        _eui.EuiFlexGroup,\n        { gutterSize: 'm' },\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false, className: 'scope-field-checkbox' },\n          _react2.default.createElement(_eui.EuiCheckbox, {\n            id: 'scope_cb_' + fieldName,\n            checked: enabled,\n            onChange: this.onEnableChange\n          })\n        ),\n        _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(_eui.EuiExpression, {\n            className: 'scope-field-button',\n            description: _react2.default.createElement(_react3.FormattedMessage, {\n              id: 'xpack.ml.ruleEditor.scopeExpression.scopeFieldWhenLabel',\n              defaultMessage: 'when'\n            }),\n            value: fieldName,\n            isActive: false,\n            onClick: function onClick(event) {\n              return event.preventDefault();\n            }\n          })\n        ),\n        filterListIds !== undefined && filterListIds.length > 0 && _react2.default.createElement(\n          _eui.EuiFlexItem,\n          { grow: false },\n          _react2.default.createElement(\n            _eui.EuiPopover,\n            {\n              id: 'operatorValuePopover',\n              button: _react2.default.createElement(_eui.EuiExpression, {\n                description: _react2.default.createElement(_react3.FormattedMessage, {\n                  id: 'xpack.ml.ruleEditor.scopeExpression.scopeFilterTypeButtonLabel',\n                  defaultMessage: 'is {filterType}',\n                  values: { filterType: (0, _utils.filterTypeToText)(filterType) }\n                }),\n                value: filterId || '',\n                isActive: this.state.isFilterListOpen,\n                onClick: this.openFilterList\n              }),\n              isOpen: this.state.isFilterListOpen,\n              closePopover: this.closeFilterList,\n              panelPaddingSize: 'none',\n              ownFocus: true,\n              withTitle: true,\n              anchorPosition: 'downLeft'\n            },\n            this.renderFilterListPopover()\n          )\n        )\n      );\n    }\n  }]);\n\n  return ScopeExpression;\n}(_react.Component);\n\nScopeExpression.propTypes = {\n  fieldName: _propTypes2.default.string.isRequired,\n  filterId: _propTypes2.default.string,\n  filterType: _propTypes2.default.oneOf([_detector_rule.FILTER_TYPE.INCLUDE, _detector_rule.FILTER_TYPE.EXCLUDE]),\n  enabled: _propTypes2.default.bool.isRequired,\n  filterListIds: _propTypes2.default.array.isRequired,\n  updateScope: _propTypes2.default.func.isRequired\n};",null]}