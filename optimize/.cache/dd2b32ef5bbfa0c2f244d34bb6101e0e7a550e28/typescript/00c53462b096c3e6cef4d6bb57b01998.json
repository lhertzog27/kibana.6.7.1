{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/Variables.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/Variables.tsx","mtime":1567631711866},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { borderRadius, colors, fontFamily, px, unit, units } from '../../../style/variables';\n// @ts-ignore\nimport { Ellipsis } from '../Icons';\nimport { PropertiesTable } from '../PropertiesTable';\nvar VariablesContainer = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  background: \", \";\\n  border-top: 1px solid \", \";\\n  border-radius: 0 0 \", \" \", \";\\n  padding: \", \" \", \";\\n  font-family: \", \";\\n\"], [\"\\n  background: \", \";\\n  border-top: 1px solid \", \";\\n  border-radius: 0 0 \", \" \", \";\\n  padding: \", \" \", \";\\n  font-family: \", \";\\n\"])), colors.white, colors.gray4, borderRadius, borderRadius, px(units.half), px(unit), fontFamily);\nvar VariablesToggle = styled.a(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  display: block;\\n  cursor: pointer;\\n  user-select: none;\\n\"], [\"\\n  display: block;\\n  cursor: pointer;\\n  user-select: none;\\n\"])));\nvar VariablesTableContainer = styled.div(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n  padding: \", \" \", \" 0;\\n\"], [\"\\n  padding: \", \" \", \" 0;\\n\"])), px(units.plus), px(unit));\nvar Variables = /** @class */ (function (_super) {\n    tslib_1.__extends(Variables, _super);\n    function Variables() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isVisible: false\n        };\n        _this.onClick = function () {\n            _this.setState(function () { return ({ isVisible: !_this.state.isVisible }); });\n        };\n        return _this;\n    }\n    Variables.prototype.render = function () {\n        if (!this.props.vars) {\n            return null;\n        }\n        return (React.createElement(VariablesContainer, null,\n            React.createElement(VariablesToggle, { onClick: this.onClick },\n                React.createElement(Ellipsis, { horizontal: this.state.isVisible, style: { marginRight: units.half } }),\n                ' ',\n                i18n.translate('xpack.apm.stacktraceTab.localVariablesToogleButtonLabel', { defaultMessage: 'Local variables' })),\n            this.state.isVisible && (React.createElement(VariablesTableContainer, null,\n                React.createElement(PropertiesTable, { propData: this.props.vars, propKey: 'custom' })))));\n    };\n    return Variables;\n}(React.Component));\nexport { Variables };\nvar templateObject_1, templateObject_2, templateObject_3;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/Variables.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/Variables.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAEvC,OAAO,EACL,YAAY,EACZ,MAAM,EACN,UAAU,EACV,EAAE,EACF,IAAI,EACJ,KAAK,EACN,MAAM,0BAA0B,CAAC;AAClC,aAAa;AACb,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAC;AACpC,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAErD,IAAM,kBAAkB,GAAG,MAAM,CAAC,GAAG,iNAAA,kBACrB,EAAY,6BACF,EAAY,0BACf,EAAY,GAAI,EAAY,gBACtC,EAAc,GAAI,EAAQ,oBACtB,EAAU,KAC1B,KALe,MAAM,CAAC,KAAK,EACF,MAAM,CAAC,KAAK,EACf,YAAY,EAAI,YAAY,EACtC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAI,EAAE,CAAC,IAAI,CAAC,EACtB,UAAU,CAC1B,CAAC;AAEF,IAAM,eAAe,GAAG,MAAM,CAAC,CAAC,4IAAA,iEAI/B,IAAA,CAAC;AAEF,IAAM,uBAAuB,GAAG,MAAM,CAAC,GAAG,wGAAA,eAC7B,EAAc,GAAI,EAAQ,OACtC,KADY,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAI,EAAE,CAAC,IAAI,CAAC,CACtC,CAAC;AAMF;IAA+B,qCAAsB;IAArD;QAAA,qEAkCC;QAjCQ,WAAK,GAAG;YACb,SAAS,EAAE,KAAK;SACjB,CAAC;QAEK,aAAO,GAAG;YACf,KAAI,CAAC,QAAQ,CAAC,cAAM,OAAA,CAAC,EAAE,SAAS,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,EAAtC,CAAsC,CAAC,CAAC;QAC9D,CAAC,CAAC;;IA2BJ,CAAC;IAzBQ,0BAAM,GAAb;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YACpB,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CACL,oBAAC,kBAAkB;YACjB,oBAAC,eAAe,IAAC,OAAO,EAAE,IAAI,CAAC,OAAO;gBACpC,oBAAC,QAAQ,IACP,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAChC,KAAK,EAAE,EAAE,WAAW,EAAE,KAAK,CAAC,IAAI,EAAE,GAClC;gBAAC,GAAG;gBACL,IAAI,CAAC,SAAS,CACb,yDAAyD,EACzD,EAAE,cAAc,EAAE,iBAAiB,EAAE,CACtC,CACe;YACjB,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CACvB,oBAAC,uBAAuB;gBACtB,oBAAC,eAAe,IAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,GAAI,CACzC,CAC3B,CACkB,CACtB,CAAC;IACJ,CAAC;IACH,gBAAC;AAAD,CAAC,AAlCD,CAA+B,KAAK,CAAC,SAAS,GAkC7C","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { IStackframe } from 'x-pack/plugins/apm/typings/es_schemas/Stackframe';\nimport {\n  borderRadius,\n  colors,\n  fontFamily,\n  px,\n  unit,\n  units\n} from '../../../style/variables';\n// @ts-ignore\nimport { Ellipsis } from '../Icons';\nimport { PropertiesTable } from '../PropertiesTable';\n\nconst VariablesContainer = styled.div`\n  background: ${colors.white};\n  border-top: 1px solid ${colors.gray4};\n  border-radius: 0 0 ${borderRadius} ${borderRadius};\n  padding: ${px(units.half)} ${px(unit)};\n  font-family: ${fontFamily};\n`;\n\nconst VariablesToggle = styled.a`\n  display: block;\n  cursor: pointer;\n  user-select: none;\n`;\n\nconst VariablesTableContainer = styled.div`\n  padding: ${px(units.plus)} ${px(unit)} 0;\n`;\n\ninterface Props {\n  vars: IStackframe['vars'];\n}\n\nexport class Variables extends React.Component<Props> {\n  public state = {\n    isVisible: false\n  };\n\n  public onClick = () => {\n    this.setState(() => ({ isVisible: !this.state.isVisible }));\n  };\n\n  public render() {\n    if (!this.props.vars) {\n      return null;\n    }\n\n    return (\n      <VariablesContainer>\n        <VariablesToggle onClick={this.onClick}>\n          <Ellipsis\n            horizontal={this.state.isVisible}\n            style={{ marginRight: units.half }}\n          />{' '}\n          {i18n.translate(\n            'xpack.apm.stacktraceTab.localVariablesToogleButtonLabel',\n            { defaultMessage: 'Local variables' }\n          )}\n        </VariablesToggle>\n        {this.state.isVisible && (\n          <VariablesTableContainer>\n            <PropertiesTable propData={this.props.vars} propKey={'custom'} />\n          </VariablesTableContainer>\n        )}\n      </VariablesContainer>\n    );\n  }\n}\n"]}]}