{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/discover/controllers/get_painless_error.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/discover/controllers/get_painless_error.ts","mtime":1567631691172},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { i18n } from '@kbn/i18n';\nimport { get } from 'lodash';\nexport function getPainlessError(error) {\n    var rootCause = get(error, 'resp.error.root_cause');\n    if (!rootCause) {\n        return;\n    }\n    var _a = tslib_1.__read(rootCause, 1), _b = _a[0], lang = _b.lang, script = _b.script;\n    if (lang !== 'painless') {\n        return;\n    }\n    return {\n        lang: lang,\n        script: script,\n        message: i18n.translate('kbn.discover.painlessError.painlessScriptedFieldErrorMessage', {\n            defaultMessage: \"Error with Painless scripted field '{script}'.\",\n            values: { script: script },\n        }),\n        error: error.message,\n    };\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/discover/controllers/get_painless_error.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/discover/controllers/get_painless_error.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAEH,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAE7B,MAAM,UAAU,gBAAgB,CAAC,KAAY;IAC3C,IAAM,SAAS,GAAwD,GAAG,CACxE,KAAK,EACL,uBAAuB,CACxB,CAAC;IAEF,IAAI,CAAC,SAAS,EAAE;QACd,OAAO;KACR;IAEK,IAAA,iCAA8B,EAA7B,UAAgB,EAAd,cAAI,EAAE,kBAAM,CAAgB;IAErC,IAAI,IAAI,KAAK,UAAU,EAAE;QACvB,OAAO;KACR;IAED,OAAO;QACL,IAAI,MAAA;QACJ,MAAM,QAAA;QACN,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,8DAA8D,EAAE;YACtF,cAAc,EAAE,gDAAgD;YAChE,MAAM,EAAE,EAAE,MAAM,QAAA,EAAE;SACnB,CAAC;QACF,KAAK,EAAE,KAAK,CAAC,OAAO;KACrB,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { i18n } from '@kbn/i18n';\nimport { get } from 'lodash';\n\nexport function getPainlessError(error: Error) {\n  const rootCause: Array<{ lang: string; script: string }> | undefined = get(\n    error,\n    'resp.error.root_cause'\n  );\n\n  if (!rootCause) {\n    return;\n  }\n\n  const [{ lang, script }] = rootCause;\n\n  if (lang !== 'painless') {\n    return;\n  }\n\n  return {\n    lang,\n    script,\n    message: i18n.translate('kbn.discover.painlessError.painlessScriptedFieldErrorMessage', {\n      defaultMessage: \"Error with Painless scripted field '{script}'.\",\n      values: { script },\n    }),\n    error: error.message,\n  };\n}\n"]}]}