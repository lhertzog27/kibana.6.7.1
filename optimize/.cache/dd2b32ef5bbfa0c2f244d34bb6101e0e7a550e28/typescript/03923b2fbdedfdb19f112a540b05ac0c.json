{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/reindex/flyout/step_progress.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/reindex/flyout/step_progress.tsx","mtime":1567631712323},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from 'classnames';\nimport React, { Fragment } from 'react';\nimport { EuiIcon, EuiLoadingSpinner } from '@elastic/eui';\nvar StepStatus = function (_a) {\n    var status = _a.status, idx = _a.idx;\n    if (status === 'incomplete') {\n        return React.createElement(\"span\", { className: \"upgStepProgress__status\" },\n            idx + 1,\n            \".\");\n    }\n    else if (status === 'inProgress') {\n        return React.createElement(EuiLoadingSpinner, { size: \"m\", className: \"upgStepProgress__status\" });\n    }\n    else if (status === 'complete') {\n        return (React.createElement(\"span\", { className: \"upgStepProgress__status upgStepProgress__status--circle upgStepProgress__status--circle-complete\" },\n            React.createElement(EuiIcon, { type: \"check\", size: \"s\" })));\n    }\n    else if (status === 'paused') {\n        return (React.createElement(\"span\", { className: \"upgStepProgress__status upgStepProgress__status--circle upgStepProgress__status--circle-paused\" },\n            React.createElement(EuiIcon, { type: \"pause\", size: \"s\" })));\n    }\n    else if (status === 'cancelled') {\n        return (React.createElement(\"span\", { className: \"upgStepProgress__status upgStepProgress__status--circle upgStepProgress__status--circle-cancelled\" },\n            React.createElement(EuiIcon, { type: \"cross\", size: \"s\" })));\n    }\n    else if (status === 'failed') {\n        return (React.createElement(\"span\", { className: \"upgStepProgress__status upgStepProgress__status--circle upgStepProgress__status--circle-failed\" },\n            React.createElement(EuiIcon, { type: \"cross\", size: \"s\" })));\n    }\n    throw new Error(\"Unsupported status: \" + status);\n};\nvar Step = function (_a) {\n    var title = _a.title, status = _a.status, children = _a.children, idx = _a.idx;\n    var titleClassName = classNames('upgStepProgress__title', {\n        'upgStepProgress__title--currentStep': status === 'inProgress' ||\n            status === 'paused' ||\n            status === 'failed' ||\n            status === 'cancelled',\n    });\n    return (React.createElement(Fragment, null,\n        React.createElement(\"div\", { className: \"upgStepProgress__step\" },\n            React.createElement(StepStatus, { status: status, idx: idx }),\n            React.createElement(\"p\", { className: titleClassName }, title)),\n        children && React.createElement(\"div\", { className: \"upgStepProgress__content\" }, children)));\n};\n/**\n * A generic component that displays a series of automated steps and the system's progress.\n */\nexport var StepProgress = function (_a) {\n    var steps = _a.steps;\n    return (React.createElement(\"div\", { className: \"upgStepProgress__container\" }, steps.map(function (step, idx) { return (React.createElement(Step, tslib_1.__assign({ key: idx }, step, { idx: idx }))); })));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/reindex/flyout/step_progress.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/reindex/flyout/step_progress.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAa,MAAM,OAAO,CAAC;AAEnD,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AAI1D,IAAM,UAAU,GAA8D,UAAC,EAAe;QAAb,kBAAM,EAAE,YAAG;IAC1F,IAAI,MAAM,KAAK,YAAY,EAAE;QAC3B,OAAO,8BAAM,SAAS,EAAC,yBAAyB;YAAE,GAAG,GAAG,CAAC;gBAAS,CAAC;KACpE;SAAM,IAAI,MAAM,KAAK,YAAY,EAAE;QAClC,OAAO,oBAAC,iBAAiB,IAAC,IAAI,EAAC,GAAG,EAAC,SAAS,EAAC,yBAAyB,GAAG,CAAC;KAC3E;SAAM,IAAI,MAAM,KAAK,UAAU,EAAE;QAChC,OAAO,CACL,8BAAM,SAAS,EAAC,kGAAkG;YAChH,oBAAC,OAAO,IAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,GAAG,GAAG,CAC5B,CACR,CAAC;KACH;SAAM,IAAI,MAAM,KAAK,QAAQ,EAAE;QAC9B,OAAO,CACL,8BAAM,SAAS,EAAC,gGAAgG;YAC9G,oBAAC,OAAO,IAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,GAAG,GAAG,CAC5B,CACR,CAAC;KACH;SAAM,IAAI,MAAM,KAAK,WAAW,EAAE;QACjC,OAAO,CACL,8BAAM,SAAS,EAAC,mGAAmG;YACjH,oBAAC,OAAO,IAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,GAAG,GAAG,CAC5B,CACR,CAAC;KACH;SAAM,IAAI,MAAM,KAAK,QAAQ,EAAE;QAC9B,OAAO,CACL,8BAAM,SAAS,EAAC,gGAAgG;YAC9G,oBAAC,OAAO,IAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,GAAG,GAAG,CAC5B,CACR,CAAC;KACH;IAED,MAAM,IAAI,KAAK,CAAC,yBAAuB,MAAQ,CAAC,CAAC;AACnD,CAAC,CAAC;AAEF,IAAM,IAAI,GAAiE,UAAC,EAK3E;QAJC,gBAAK,EACL,kBAAM,EACN,sBAAQ,EACR,YAAG;IAEH,IAAM,cAAc,GAAG,UAAU,CAAC,wBAAwB,EAAE;QAC1D,qCAAqC,EACnC,MAAM,KAAK,YAAY;YACvB,MAAM,KAAK,QAAQ;YACnB,MAAM,KAAK,QAAQ;YACnB,MAAM,KAAK,WAAW;KACzB,CAAC,CAAC;IAEH,OAAO,CACL,oBAAC,QAAQ;QACP,6BAAK,SAAS,EAAC,uBAAuB;YACpC,oBAAC,UAAU,IAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,GAAI;YACxC,2BAAG,SAAS,EAAE,cAAc,IAAG,KAAK,CAAK,CACrC;QACL,QAAQ,IAAI,6BAAK,SAAS,EAAC,0BAA0B,IAAE,QAAQ,CAAO,CAC9D,CACZ,CAAC;AACJ,CAAC,CAAC;AAQF;;GAEG;AACH,MAAM,CAAC,IAAM,YAAY,GAEpB,UAAC,EAAS;QAAP,gBAAK;IACX,OAAO,CACL,6BAAK,SAAS,EAAC,4BAA4B,IAExC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,GAAG,IAAK,OAAA,CACxB,oBAAC,IAAI,qBAAC,GAAG,EAAE,GAAG,IAAM,IAAI,IAAE,GAAG,EAAE,GAAG,IAAI,CACvC,EAFyB,CAEzB,CAAC,CACE,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport classNames from 'classnames';\nimport React, { Fragment, ReactNode } from 'react';\n\nimport { EuiIcon, EuiLoadingSpinner } from '@elastic/eui';\n\ntype STATUS = 'incomplete' | 'inProgress' | 'complete' | 'failed' | 'paused' | 'cancelled';\n\nconst StepStatus: React.StatelessComponent<{ status: STATUS; idx: number }> = ({ status, idx }) => {\n  if (status === 'incomplete') {\n    return <span className=\"upgStepProgress__status\">{idx + 1}.</span>;\n  } else if (status === 'inProgress') {\n    return <EuiLoadingSpinner size=\"m\" className=\"upgStepProgress__status\" />;\n  } else if (status === 'complete') {\n    return (\n      <span className=\"upgStepProgress__status upgStepProgress__status--circle upgStepProgress__status--circle-complete\">\n        <EuiIcon type=\"check\" size=\"s\" />\n      </span>\n    );\n  } else if (status === 'paused') {\n    return (\n      <span className=\"upgStepProgress__status upgStepProgress__status--circle upgStepProgress__status--circle-paused\">\n        <EuiIcon type=\"pause\" size=\"s\" />\n      </span>\n    );\n  } else if (status === 'cancelled') {\n    return (\n      <span className=\"upgStepProgress__status upgStepProgress__status--circle upgStepProgress__status--circle-cancelled\">\n        <EuiIcon type=\"cross\" size=\"s\" />\n      </span>\n    );\n  } else if (status === 'failed') {\n    return (\n      <span className=\"upgStepProgress__status upgStepProgress__status--circle upgStepProgress__status--circle-failed\">\n        <EuiIcon type=\"cross\" size=\"s\" />\n      </span>\n    );\n  }\n\n  throw new Error(`Unsupported status: ${status}`);\n};\n\nconst Step: React.StatelessComponent<StepProgressStep & { idx: number }> = ({\n  title,\n  status,\n  children,\n  idx,\n}) => {\n  const titleClassName = classNames('upgStepProgress__title', {\n    'upgStepProgress__title--currentStep':\n      status === 'inProgress' ||\n      status === 'paused' ||\n      status === 'failed' ||\n      status === 'cancelled',\n  });\n\n  return (\n    <Fragment>\n      <div className=\"upgStepProgress__step\">\n        <StepStatus status={status} idx={idx} />\n        <p className={titleClassName}>{title}</p>\n      </div>\n      {children && <div className=\"upgStepProgress__content\">{children}</div>}\n    </Fragment>\n  );\n};\n\nexport interface StepProgressStep {\n  title: React.ReactNode;\n  status: STATUS;\n  children?: ReactNode;\n}\n\n/**\n * A generic component that displays a series of automated steps and the system's progress.\n */\nexport const StepProgress: React.StatelessComponent<{\n  steps: StepProgressStep[];\n}> = ({ steps }) => {\n  return (\n    <div className=\"upgStepProgress__container\">\n      {/* Use the index as the key only works here because these values do not change order after mounting. */}\n      {steps.map((step, idx) => (\n        <Step key={idx} {...step} idx={idx} />\n      ))}\n    </div>\n  );\n};\n"]}]}