{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/lib/validate_space.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/lib/validate_space.ts","mtime":1567631712311},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { i18n } from '@kbn/i18n';\nimport { isReservedSpace } from '../../../../common/is_reserved_space';\nimport { isValidSpaceIdentifier } from './space_identifier_utils';\nvar SpaceValidator = /** @class */ (function () {\n    function SpaceValidator(options) {\n        if (options === void 0) { options = {}; }\n        this.shouldValidate = options.shouldValidate || false;\n    }\n    SpaceValidator.prototype.enableValidation = function () {\n        this.shouldValidate = true;\n    };\n    SpaceValidator.prototype.disableValidation = function () {\n        this.shouldValidate = false;\n    };\n    SpaceValidator.prototype.validateSpaceName = function (space) {\n        if (!this.shouldValidate) {\n            return valid();\n        }\n        if (!space.name || !space.name.trim()) {\n            return invalid(i18n.translate('xpack.spaces.management.validateSpace.requiredNameErrorMessage', {\n                defaultMessage: 'Name is required.',\n            }));\n        }\n        if (space.name.length > 1024) {\n            return invalid(i18n.translate('xpack.spaces.management.validateSpace.nameMaxLengthErrorMessage', {\n                defaultMessage: 'Name must not exceed 1024 characters.',\n            }));\n        }\n        return valid();\n    };\n    SpaceValidator.prototype.validateSpaceDescription = function (space) {\n        if (!this.shouldValidate) {\n            return valid();\n        }\n        if (space.description && space.description.length > 2000) {\n            return invalid(i18n.translate('xpack.spaces.management.validateSpace.describeMaxLengthErrorMessage', {\n                defaultMessage: 'Description must not exceed 2000 characters.',\n            }));\n        }\n        return valid();\n    };\n    SpaceValidator.prototype.validateURLIdentifier = function (space) {\n        if (!this.shouldValidate) {\n            return valid();\n        }\n        if (isReservedSpace(space)) {\n            return valid();\n        }\n        if (!space.id) {\n            return invalid(i18n.translate('xpack.spaces.management.validateSpace.urlIdentifierRequiredErrorMessage', {\n                defaultMessage: 'URL identifier is required.',\n            }));\n        }\n        if (!isValidSpaceIdentifier(space.id)) {\n            return invalid(i18n.translate('xpack.spaces.management.validateSpace.urlIdentifierAllowedCharactersErrorMessage', {\n                defaultMessage: 'URL identifier can only contain a-z, 0-9, and the characters \"_\" and \"-\".',\n            }));\n        }\n        return valid();\n    };\n    SpaceValidator.prototype.validateForSave = function (space) {\n        var isNameInvalid = this.validateSpaceName(space).isInvalid;\n        var isDescriptionInvalid = this.validateSpaceDescription(space).isInvalid;\n        var isIdentifierInvalid = this.validateURLIdentifier(space).isInvalid;\n        if (isNameInvalid || isDescriptionInvalid || isIdentifierInvalid) {\n            return invalid();\n        }\n        return valid();\n    };\n    return SpaceValidator;\n}());\nexport { SpaceValidator };\nfunction invalid(error) {\n    if (error === void 0) { error = ''; }\n    return {\n        isInvalid: true,\n        error: error,\n    };\n}\nfunction valid() {\n    return {\n        isInvalid: false,\n    };\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/lib/validate_space.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/lib/validate_space.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { i18n } from '@kbn/i18n';\nimport { isReservedSpace } from '../../../../common/is_reserved_space';\nimport { Space } from '../../../../common/model/space';\nimport { isValidSpaceIdentifier } from './space_identifier_utils';\n\ninterface SpaceValidatorOptions {\n  shouldValidate?: boolean;\n}\n\nexport class SpaceValidator {\n  private shouldValidate: boolean;\n\n  constructor(options: SpaceValidatorOptions = {}) {\n    this.shouldValidate = options.shouldValidate || false;\n  }\n\n  public enableValidation() {\n    this.shouldValidate = true;\n  }\n\n  public disableValidation() {\n    this.shouldValidate = false;\n  }\n\n  public validateSpaceName(space: Partial<Space>) {\n    if (!this.shouldValidate) {\n      return valid();\n    }\n\n    if (!space.name || !space.name.trim()) {\n      return invalid(\n        i18n.translate('xpack.spaces.management.validateSpace.requiredNameErrorMessage', {\n          defaultMessage: 'Name is required.',\n        })\n      );\n    }\n\n    if (space.name.length > 1024) {\n      return invalid(\n        i18n.translate('xpack.spaces.management.validateSpace.nameMaxLengthErrorMessage', {\n          defaultMessage: 'Name must not exceed 1024 characters.',\n        })\n      );\n    }\n\n    return valid();\n  }\n\n  public validateSpaceDescription(space: Partial<Space>) {\n    if (!this.shouldValidate) {\n      return valid();\n    }\n\n    if (space.description && space.description.length > 2000) {\n      return invalid(\n        i18n.translate('xpack.spaces.management.validateSpace.describeMaxLengthErrorMessage', {\n          defaultMessage: 'Description must not exceed 2000 characters.',\n        })\n      );\n    }\n\n    return valid();\n  }\n\n  public validateURLIdentifier(space: Partial<Space>) {\n    if (!this.shouldValidate) {\n      return valid();\n    }\n\n    if (isReservedSpace(space)) {\n      return valid();\n    }\n\n    if (!space.id) {\n      return invalid(\n        i18n.translate('xpack.spaces.management.validateSpace.urlIdentifierRequiredErrorMessage', {\n          defaultMessage: 'URL identifier is required.',\n        })\n      );\n    }\n\n    if (!isValidSpaceIdentifier(space.id)) {\n      return invalid(\n        i18n.translate(\n          'xpack.spaces.management.validateSpace.urlIdentifierAllowedCharactersErrorMessage',\n          {\n            defaultMessage:\n              'URL identifier can only contain a-z, 0-9, and the characters \"_\" and \"-\".',\n          }\n        )\n      );\n    }\n\n    return valid();\n  }\n\n  public validateForSave(space: Space) {\n    const { isInvalid: isNameInvalid } = this.validateSpaceName(space);\n    const { isInvalid: isDescriptionInvalid } = this.validateSpaceDescription(space);\n    const { isInvalid: isIdentifierInvalid } = this.validateURLIdentifier(space);\n\n    if (isNameInvalid || isDescriptionInvalid || isIdentifierInvalid) {\n      return invalid();\n    }\n\n    return valid();\n  }\n}\n\nfunction invalid(error: string = '') {\n  return {\n    isInvalid: true,\n    error,\n  };\n}\n\nfunction valid() {\n  return {\n    isInvalid: false,\n  };\n}\n"]}]}