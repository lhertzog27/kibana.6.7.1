{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/tag/edit.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/tag/edit.tsx","mtime":1567631711884},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButton, EuiButtonEmpty, EuiFlexGroup, EuiFlexItem, EuiSpacer } from '@elastic/eui';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport 'brace/mode/yaml';\nimport 'brace/theme/github';\nimport { flatten } from 'lodash';\nimport React from 'react';\nimport { UNIQUENESS_ENFORCING_TYPES } from 'x-pack/plugins/beats_management/common/constants';\nimport { PrimaryLayout } from '../../components/layouts/primary';\nimport { TagEdit } from '../../components/tag';\nvar TagEditPageComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(TagEditPageComponent, _super);\n    function TagEditPageComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.loadConfigBlocks = function (page) {\n            if (page === void 0) { page = -1; }\n            return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var blocksResponse;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.props.libs.configBlocks.getForTags([this.state.tag.id], page)];\n                        case 1:\n                            blocksResponse = _a.sent();\n                            this.setState({\n                                configuration_blocks: blocksResponse,\n                            });\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        _this.loadTag = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var tags;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.props.libs.tags.getTagsWithIds([this.props.match.params.tagid])];\n                    case 1:\n                        tags = _a.sent();\n                        if (tags.length === 0) {\n                            // TODO do something to error https://github.com/elastic/kibana/issues/26023\n                        }\n                        this.setState({\n                            tag: tags[0],\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.loadAttachedBeats = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var beats, beatsTags;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.props.libs.beats.getBeatsWithTag(this.props.match.params.tagid)];\n                    case 1:\n                        beats = _a.sent();\n                        return [4 /*yield*/, this.props.libs.tags.getTagsWithIds(flatten(beats.map(function (beat) { return beat.tags; })))];\n                    case 2:\n                        beatsTags = _a.sent();\n                        this.setState({\n                            attachedBeats: beats,\n                            beatsTags: beatsTags,\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.saveTag = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.props.containers.tags.upsertTag(this.state.tag)];\n                    case 1:\n                        _a.sent();\n                        this.props.goTo(\"/overview/configuration_tags\");\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.getNumExclusiveConfigurationBlocks = function () {\n            return _this.state.configuration_blocks.blocks\n                .map(function (_a) {\n                var type = _a.type;\n                return UNIQUENESS_ENFORCING_TYPES.some(function (uniqueType) { return uniqueType === type; });\n            })\n                .reduce(function (acc, cur) { return (cur ? acc + 1 : acc); }, 0);\n        };\n        _this.state = {\n            showFlyout: false,\n            attachedBeats: null,\n            beatsTags: [],\n            tag: {\n                id: props.match.params.tagid,\n                name: '',\n                color: '#fff',\n                hasConfigurationBlocksTypes: [],\n            },\n            configuration_blocks: {\n                blocks: [],\n                page: 0,\n                total: 0,\n            },\n        };\n        return _this;\n    }\n    TagEditPageComponent.prototype.componentWillMount = function () {\n        this.loadTag();\n        this.loadAttachedBeats();\n        this.loadConfigBlocks();\n    };\n    TagEditPageComponent.prototype.render = function () {\n        var _this = this;\n        var intl = this.props.intl;\n        return (React.createElement(PrimaryLayout, { hideBreadcrumbs: this.props.libs.framework.versionGreaterThen('6.7.0'), title: intl.formatMessage({\n                id: 'xpack.beatsManagement.tag.updateTagTitle',\n                defaultMessage: 'Update Tag: {tagId}',\n            }, {\n                tagId: this.state.tag.id,\n            }) },\n            React.createElement(\"div\", null,\n                React.createElement(TagEdit, { tag: this.state.tag, configuration_blocks: this.state.configuration_blocks, onDetachBeat: function (beatIds) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, this.props.containers.beats.removeTagsFromBeats(beatIds, this.state.tag.id)];\n                                case 1:\n                                    _a.sent();\n                                    return [4 /*yield*/, this.loadAttachedBeats()];\n                                case 2:\n                                    _a.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); }, onTagChange: function (field, value) {\n                        return _this.setState(function (oldState) {\n                            var _a;\n                            return ({\n                                tag: tslib_1.__assign({}, oldState.tag, (_a = {}, _a[field] = value, _a)),\n                            });\n                        });\n                    }, attachedBeats: (this.state.attachedBeats || []).map(function (beat) { return (tslib_1.__assign({}, beat, { tags: flatten(beat.tags.map(function (tagId) { return _this.state.beatsTags.filter(function (tag) { return tag.id === tagId; }); })) })); }), onConfigListChange: function (index) {\n                        _this.loadConfigBlocks(index);\n                    }, onConfigAddOrEdit: function (block) {\n                        _this.props.libs.configBlocks\n                            .upsert([tslib_1.__assign({}, block, { tag: _this.state.tag.id })])\n                            .catch(function (e) {\n                            // tslint:disable-next-line\n                            console.error('Error upseting config block', e);\n                        })\n                            .then(function () {\n                            _this.loadConfigBlocks(_this.state.configuration_blocks.page);\n                        });\n                    }, onConfigRemoved: function (block) {\n                        _this.props.libs.configBlocks\n                            .delete(block.id)\n                            .catch(function (e) {\n                            alert('Error removing block, please check your browsers console logs for more details');\n                            // tslint:disable-next-line\n                            console.error(\"Error removing block \" + block.id, e);\n                        })\n                            .then(function () {\n                            _this.loadConfigBlocks(_this.state.configuration_blocks.page);\n                        });\n                    } }),\n                React.createElement(EuiSpacer, { size: \"m\" }),\n                React.createElement(EuiFlexGroup, null,\n                    React.createElement(EuiFlexItem, { grow: false },\n                        React.createElement(EuiButton, { fill: true, disabled: this.state.tag.id.search(/^[A-Za-z0-9? ,_-]+$/) === -1 ||\n                                this.state.tag.id === '' ||\n                                this.getNumExclusiveConfigurationBlocks() > 1 // || this.state.tag.configuration_blocks.length === 0\n                            , onClick: this.saveTag },\n                            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.tag.saveButtonLabel\", defaultMessage: \"Save\" }))),\n                    React.createElement(EuiFlexItem, { grow: false },\n                        React.createElement(EuiButtonEmpty, { onClick: function () { return _this.props.goTo('/overview/configuration_tags'); } },\n                            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.tag.cancelButtonLabel\", defaultMessage: \"Cancel\" })))))));\n    };\n    return TagEditPageComponent;\n}(React.PureComponent));\nexport var TagEditPage = injectI18n(TagEditPageComponent);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/tag/edit.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/tag/edit.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiButton, EuiButtonEmpty, EuiFlexGroup, EuiFlexItem, EuiSpacer } from '@elastic/eui';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport 'brace/mode/yaml';\nimport 'brace/theme/github';\nimport { flatten } from 'lodash';\nimport React from 'react';\nimport { UNIQUENESS_ENFORCING_TYPES } from 'x-pack/plugins/beats_management/common/constants';\nimport { BeatTag, CMBeat, ConfigurationBlock } from '../../../common/domain_types';\nimport { PrimaryLayout } from '../../components/layouts/primary';\nimport { TagEdit } from '../../components/tag';\nimport { AppPageProps } from '../../frontend_types';\ninterface TagPageState {\n  showFlyout: boolean;\n  attachedBeats: CMBeat[] | null;\n  tag: BeatTag;\n  beatsTags: BeatTag[];\n  configuration_blocks: {\n    error?: string | undefined;\n    blocks: ConfigurationBlock[];\n    page: number;\n    total: number;\n  };\n}\nclass TagEditPageComponent extends React.PureComponent<\n  AppPageProps & {\n    intl: InjectedIntl;\n  },\n  TagPageState\n> {\n  constructor(props: AppPageProps & { intl: InjectedIntl }) {\n    super(props);\n\n    this.state = {\n      showFlyout: false,\n      attachedBeats: null,\n      beatsTags: [],\n      tag: {\n        id: props.match.params.tagid,\n        name: '',\n        color: '#fff',\n        hasConfigurationBlocksTypes: [],\n      },\n      configuration_blocks: {\n        blocks: [],\n        page: 0,\n        total: 0,\n      },\n    };\n  }\n\n  public componentWillMount() {\n    this.loadTag();\n    this.loadAttachedBeats();\n    this.loadConfigBlocks();\n  }\n  public render() {\n    const { intl } = this.props;\n\n    return (\n      <PrimaryLayout\n        hideBreadcrumbs={this.props.libs.framework.versionGreaterThen('6.7.0')}\n        title={intl.formatMessage(\n          {\n            id: 'xpack.beatsManagement.tag.updateTagTitle',\n            defaultMessage: 'Update Tag: {tagId}',\n          },\n          {\n            tagId: this.state.tag.id,\n          }\n        )}\n      >\n        <div>\n          <TagEdit\n            tag={this.state.tag}\n            configuration_blocks={this.state.configuration_blocks}\n            onDetachBeat={async (beatIds: string[]) => {\n              await this.props.containers.beats.removeTagsFromBeats(beatIds, this.state.tag.id);\n              await this.loadAttachedBeats();\n            }}\n            onTagChange={(field: string, value: string | number) =>\n              this.setState(oldState => ({\n                tag: { ...oldState.tag, [field]: value },\n              }))\n            }\n            attachedBeats={\n              (this.state.attachedBeats || []).map(beat => ({\n                ...beat,\n                tags: flatten(\n                  beat.tags.map(tagId => this.state.beatsTags.filter(tag => tag.id === tagId))\n                ),\n              })) as any\n            }\n            onConfigListChange={(index: number) => {\n              this.loadConfigBlocks(index);\n            }}\n            onConfigAddOrEdit={(block: ConfigurationBlock) => {\n              this.props.libs.configBlocks\n                .upsert([{ ...block, tag: this.state.tag.id }])\n                .catch((e: any) => {\n                  // tslint:disable-next-line\n                  console.error('Error upseting config block', e);\n                })\n                .then(() => {\n                  this.loadConfigBlocks(this.state.configuration_blocks.page);\n                });\n            }}\n            onConfigRemoved={(block: ConfigurationBlock) => {\n              this.props.libs.configBlocks\n                .delete(block.id)\n                .catch((e: any) => {\n                  alert(\n                    'Error removing block, please check your browsers console logs for more details'\n                  );\n                  // tslint:disable-next-line\n                  console.error(`Error removing block ${block.id}`, e);\n                })\n                .then(() => {\n                  this.loadConfigBlocks(this.state.configuration_blocks.page);\n                });\n            }}\n          />\n          <EuiSpacer size=\"m\" />\n          <EuiFlexGroup>\n            <EuiFlexItem grow={false}>\n              <EuiButton\n                fill\n                disabled={\n                  this.state.tag.id.search(/^[A-Za-z0-9? ,_-]+$/) === -1 ||\n                  this.state.tag.id === '' ||\n                  this.getNumExclusiveConfigurationBlocks() > 1 // || this.state.tag.configuration_blocks.length === 0\n                }\n                onClick={this.saveTag}\n              >\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.tag.saveButtonLabel\"\n                  defaultMessage=\"Save\"\n                />\n              </EuiButton>\n            </EuiFlexItem>\n            <EuiFlexItem grow={false}>\n              <EuiButtonEmpty onClick={() => this.props.goTo('/overview/configuration_tags')}>\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.tag.cancelButtonLabel\"\n                  defaultMessage=\"Cancel\"\n                />\n              </EuiButtonEmpty>\n            </EuiFlexItem>\n          </EuiFlexGroup>\n        </div>\n      </PrimaryLayout>\n    );\n  }\n  private loadConfigBlocks = async (page: number = -1) => {\n    const blocksResponse = await this.props.libs.configBlocks.getForTags([this.state.tag.id], page);\n\n    this.setState({\n      configuration_blocks: blocksResponse,\n    });\n  };\n\n  private loadTag = async () => {\n    const tags = await this.props.libs.tags.getTagsWithIds([this.props.match.params.tagid]);\n    if (tags.length === 0) {\n      // TODO do something to error https://github.com/elastic/kibana/issues/26023\n    }\n    this.setState({\n      tag: tags[0],\n    });\n  };\n\n  private loadAttachedBeats = async () => {\n    const beats = await this.props.libs.beats.getBeatsWithTag(this.props.match.params.tagid);\n    const beatsTags = await this.props.libs.tags.getTagsWithIds(\n      flatten(beats.map(beat => beat.tags))\n    );\n    this.setState({\n      attachedBeats: beats,\n      beatsTags,\n    });\n  };\n  private saveTag = async () => {\n    await this.props.containers.tags.upsertTag(this.state.tag);\n    this.props.goTo(`/overview/configuration_tags`);\n  };\n  private getNumExclusiveConfigurationBlocks = () =>\n    this.state.configuration_blocks.blocks\n      .map(({ type }) => UNIQUENESS_ENFORCING_TYPES.some(uniqueType => uniqueType === type))\n      .reduce((acc, cur) => (cur ? acc + 1 : acc), 0);\n}\n\nexport const TagEditPage = injectI18n(TagEditPageComponent);\n"]}]}