{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_summary/selectors.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_summary/selectors.ts","mtime":1567631711989},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { createSelector } from 'reselect';\nimport { createGraphqlStateSelectors } from '../../../utils/remote_state/remote_graphql_state';\nvar summaryGraphlStateSelectors = createGraphqlStateSelectors();\nexport var selectSummaryBuckets = createSelector(summaryGraphlStateSelectors.selectData, function (data) { return (data ? data.buckets : []); });\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_summary/selectors.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_summary/selectors.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAE1C,OAAO,EAAE,2BAA2B,EAAE,MAAM,kDAAkD,CAAC;AAG/F,IAAM,2BAA2B,GAAG,2BAA2B,EAAyB,CAAC;AAEzF,MAAM,CAAC,IAAM,oBAAoB,GAAG,cAAc,CAChD,2BAA2B,CAAC,UAAU,EACtC,UAAA,IAAI,IAAI,OAAA,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAA1B,CAA0B,CACnC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { createSelector } from 'reselect';\n\nimport { createGraphqlStateSelectors } from '../../../utils/remote_state/remote_graphql_state';\nimport { LogSummaryRemoteState } from './state';\n\nconst summaryGraphlStateSelectors = createGraphqlStateSelectors<LogSummaryRemoteState>();\n\nexport const selectSummaryBuckets = createSelector(\n  summaryGraphlStateSelectors.selectData,\n  data => (data ? data.buckets : [])\n);\n"]}]}