{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/reporting/public/components/report_info_button.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/reporting/public/components/report_info_button.tsx","mtime":1567631712280},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButtonIcon, EuiDescriptionList, EuiFlyout, EuiFlyoutBody, EuiFlyoutHeader, EuiPortal, EuiSpacer, EuiText, EuiTitle, } from '@elastic/eui';\nimport { get, has } from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { USES_HEADLESS_JOB_TYPES } from '../../common/constants';\nimport { jobQueueClient } from '../lib/job_queue_client';\nvar NA = 'n/a';\nvar UNKNOWN = 'unknown';\nvar getDimensions = function (info) {\n    var defaultDimensions = { width: null, height: null };\n    var _a = get(info, 'payload.layout.dimensions', defaultDimensions), width = _a.width, height = _a.height;\n    if (width && height) {\n        return (React.createElement(Fragment, null,\n            \"Width: \",\n            width,\n            \" x Height: \",\n            height));\n    }\n    return NA;\n};\nvar ReportInfoButton = /** @class */ (function (_super) {\n    tslib_1.__extends(ReportInfoButton, _super);\n    function ReportInfoButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.loadInfo = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var info, kfetchError_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.setState({ isLoading: true });\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, jobQueueClient.getInfo(this.props.jobId)];\n                    case 2:\n                        info = _a.sent();\n                        if (this.mounted) {\n                            this.setState({ isLoading: false, info: info });\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        kfetchError_1 = _a.sent();\n                        if (this.mounted) {\n                            this.setState({\n                                isLoading: false,\n                                calloutTitle: 'Unable to fetch report info',\n                                info: null,\n                                error: kfetchError_1,\n                            });\n                            throw kfetchError_1;\n                        }\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.closeFlyout = function () {\n            _this.setState({\n                isFlyoutVisible: false,\n                info: null,\n            });\n        };\n        _this.showFlyout = function () {\n            _this.setState({ isFlyoutVisible: true });\n            if (!_this.state.info) {\n                _this.loadInfo();\n            }\n        };\n        _this.state = {\n            isLoading: false,\n            isFlyoutVisible: false,\n            calloutTitle: 'Job Info',\n            info: null,\n            error: null,\n        };\n        _this.closeFlyout = _this.closeFlyout.bind(_this);\n        _this.showFlyout = _this.showFlyout.bind(_this);\n        return _this;\n    }\n    ReportInfoButton.prototype.renderInfo = function () {\n        var _a = this.state, info = _a.info, err = _a.error;\n        if (err) {\n            return err.message;\n        }\n        if (!info) {\n            return null;\n        }\n        var jobType = get(info, 'jobtype', NA);\n        var processedBy = has(info, 'kibana_name') && has(info, 'kibana_id')\n            ? info.kibana_name + \" (\" + info.kibana_id + \")\"\n            : UNKNOWN;\n        // TODO queue method (clicked UI, watcher, etc)\n        var jobInfoParts = {\n            datetimes: [\n                {\n                    title: 'Created By',\n                    description: get(info, 'created_by', NA),\n                },\n                {\n                    title: 'Created At',\n                    description: get(info, 'created_at', NA),\n                },\n                {\n                    title: 'Started At',\n                    description: get(info, 'started_at', NA),\n                },\n                {\n                    title: 'Completed At',\n                    description: get(info, 'completed_at', NA),\n                },\n                {\n                    title: 'Processed By',\n                    description: processedBy,\n                },\n                {\n                    title: 'Browser Timezone',\n                    description: get(info, 'payload.browserTimezone', NA),\n                },\n            ],\n            payload: [\n                {\n                    title: 'Title',\n                    description: get(info, 'payload.title', NA),\n                },\n                {\n                    title: 'Type',\n                    description: get(info, 'payload.type', NA),\n                },\n                {\n                    title: 'Layout',\n                    description: get(info, 'meta.layout', NA),\n                },\n                {\n                    title: 'Dimensions',\n                    description: getDimensions(info),\n                },\n                {\n                    title: 'Job Type',\n                    description: jobType,\n                },\n                {\n                    title: 'Content Type',\n                    description: get(info, 'output.content_type') || NA,\n                },\n                {\n                    title: 'Size in Bytes',\n                    description: get(info, 'output.size') || NA,\n                },\n            ],\n            status: [\n                {\n                    title: 'Attempts',\n                    description: get(info, 'attempts', NA),\n                },\n                {\n                    title: 'Max Attempts',\n                    description: get(info, 'max_attempts', NA),\n                },\n                {\n                    title: 'Priority',\n                    description: get(info, 'priority', NA),\n                },\n                {\n                    title: 'Timeout',\n                    description: get(info, 'timeout', NA),\n                },\n                {\n                    title: 'Status',\n                    description: get(info, 'status', NA),\n                },\n                {\n                    title: 'Browser Type',\n                    description: USES_HEADLESS_JOB_TYPES.includes(jobType)\n                        ? get(info, 'browser_type', UNKNOWN)\n                        : NA,\n                },\n            ],\n        };\n        return (React.createElement(Fragment, null,\n            React.createElement(EuiDescriptionList, { listItems: jobInfoParts.datetimes, type: \"column\", align: \"center\", compressed: true }),\n            React.createElement(EuiSpacer, { size: \"s\" }),\n            React.createElement(EuiDescriptionList, { listItems: jobInfoParts.payload, type: \"column\", align: \"center\", compressed: true }),\n            React.createElement(EuiSpacer, { size: \"s\" }),\n            React.createElement(EuiDescriptionList, { listItems: jobInfoParts.status, type: \"column\", align: \"center\", compressed: true })));\n    };\n    ReportInfoButton.prototype.componentWillUnmount = function () {\n        this.mounted = false;\n    };\n    ReportInfoButton.prototype.componentDidMount = function () {\n        this.mounted = true;\n    };\n    ReportInfoButton.prototype.render = function () {\n        var flyout;\n        if (this.state.isFlyoutVisible) {\n            flyout = (React.createElement(EuiPortal, null,\n                React.createElement(EuiFlyout, { ownFocus: true, onClose: this.closeFlyout, size: \"s\", \"aria-labelledby\": \"flyoutTitle\", \"data-test-subj\": \"reportInfoFlyout\" },\n                    React.createElement(EuiFlyoutHeader, { hasBorder: true },\n                        React.createElement(EuiTitle, { size: \"s\" },\n                            React.createElement(\"h2\", { id: \"flyoutTitle\" }, this.state.calloutTitle))),\n                    React.createElement(EuiFlyoutBody, null,\n                        React.createElement(EuiText, null, this.renderInfo())))));\n        }\n        return (React.createElement(Fragment, null,\n            React.createElement(EuiButtonIcon, { onClick: this.showFlyout, iconType: \"iInCircle\", color: 'primary', \"data-test-subj\": \"reportInfoButton\", \"aria-label\": \"Show report info\" }),\n            flyout));\n    };\n    return ReportInfoButton;\n}(Component));\nexport { ReportInfoButton };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/reporting/public/components/report_info_button.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/reporting/public/components/report_info_button.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiButtonIcon,\n  EuiDescriptionList,\n  EuiFlyout,\n  EuiFlyoutBody,\n  EuiFlyoutHeader,\n  EuiPortal,\n  EuiSpacer,\n  EuiText,\n  EuiTitle,\n} from '@elastic/eui';\nimport { get, has } from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { USES_HEADLESS_JOB_TYPES } from '../../common/constants';\nimport { JobInfo, jobQueueClient } from '../lib/job_queue_client';\n\ninterface Props {\n  jobId: string;\n}\n\ninterface State {\n  isLoading: boolean;\n  isFlyoutVisible: boolean;\n  calloutTitle: string;\n  info: JobInfo | null;\n  error: Error | null;\n}\n\nconst NA = 'n/a';\nconst UNKNOWN = 'unknown';\n\nconst getDimensions = (info: JobInfo) => {\n  const defaultDimensions = { width: null, height: null };\n  const { width, height } = get(info, 'payload.layout.dimensions', defaultDimensions);\n  if (width && height) {\n    return (\n      <Fragment>\n        Width: {width} x Height: {height}\n      </Fragment>\n    );\n  }\n  return NA;\n};\n\nexport class ReportInfoButton extends Component<Props, State> {\n  private mounted?: boolean;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      isFlyoutVisible: false,\n      calloutTitle: 'Job Info',\n      info: null,\n      error: null,\n    };\n\n    this.closeFlyout = this.closeFlyout.bind(this);\n    this.showFlyout = this.showFlyout.bind(this);\n  }\n\n  public renderInfo() {\n    const { info, error: err } = this.state;\n    if (err) {\n      return err.message;\n    }\n    if (!info) {\n      return null;\n    }\n\n    const jobType = get(info, 'jobtype', NA);\n    const processedBy =\n      has(info, 'kibana_name') && has(info, 'kibana_id')\n        ? `${info.kibana_name} (${info.kibana_id})`\n        : UNKNOWN;\n\n    // TODO queue method (clicked UI, watcher, etc)\n    const jobInfoParts = {\n      datetimes: [\n        {\n          title: 'Created By',\n          description: get(info, 'created_by', NA),\n        },\n        {\n          title: 'Created At',\n          description: get(info, 'created_at', NA),\n        },\n        {\n          title: 'Started At',\n          description: get(info, 'started_at', NA),\n        },\n        {\n          title: 'Completed At',\n          description: get(info, 'completed_at', NA),\n        },\n        {\n          title: 'Processed By',\n          description: processedBy,\n        },\n        {\n          title: 'Browser Timezone',\n          description: get(info, 'payload.browserTimezone', NA),\n        },\n      ],\n      payload: [\n        {\n          title: 'Title',\n          description: get(info, 'payload.title', NA),\n        },\n        {\n          title: 'Type',\n          description: get(info, 'payload.type', NA),\n        },\n        {\n          title: 'Layout',\n          description: get(info, 'meta.layout', NA),\n        },\n        {\n          title: 'Dimensions',\n          description: getDimensions(info),\n        },\n        {\n          title: 'Job Type',\n          description: jobType,\n        },\n        {\n          title: 'Content Type',\n          description: get(info, 'output.content_type') || NA,\n        },\n        {\n          title: 'Size in Bytes',\n          description: get(info, 'output.size') || NA,\n        },\n      ],\n      status: [\n        {\n          title: 'Attempts',\n          description: get(info, 'attempts', NA),\n        },\n        {\n          title: 'Max Attempts',\n          description: get(info, 'max_attempts', NA),\n        },\n        {\n          title: 'Priority',\n          description: get(info, 'priority', NA),\n        },\n        {\n          title: 'Timeout',\n          description: get(info, 'timeout', NA),\n        },\n        {\n          title: 'Status',\n          description: get(info, 'status', NA),\n        },\n        {\n          title: 'Browser Type',\n          description: USES_HEADLESS_JOB_TYPES.includes(jobType)\n            ? get(info, 'browser_type', UNKNOWN)\n            : NA,\n        },\n      ],\n    };\n\n    return (\n      <Fragment>\n        <EuiDescriptionList\n          listItems={jobInfoParts.datetimes}\n          type=\"column\"\n          align=\"center\"\n          compressed\n        />\n        <EuiSpacer size=\"s\" />\n        <EuiDescriptionList\n          listItems={jobInfoParts.payload}\n          type=\"column\"\n          align=\"center\"\n          compressed\n        />\n        <EuiSpacer size=\"s\" />\n        <EuiDescriptionList\n          listItems={jobInfoParts.status}\n          type=\"column\"\n          align=\"center\"\n          compressed\n        />\n      </Fragment>\n    );\n  }\n\n  public componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  public componentDidMount() {\n    this.mounted = true;\n  }\n\n  public render() {\n    let flyout;\n\n    if (this.state.isFlyoutVisible) {\n      flyout = (\n        <EuiPortal>\n          <EuiFlyout\n            ownFocus\n            onClose={this.closeFlyout}\n            size=\"s\"\n            aria-labelledby=\"flyoutTitle\"\n            data-test-subj=\"reportInfoFlyout\"\n          >\n            <EuiFlyoutHeader hasBorder>\n              <EuiTitle size=\"s\">\n                <h2 id=\"flyoutTitle\">{this.state.calloutTitle}</h2>\n              </EuiTitle>\n            </EuiFlyoutHeader>\n            <EuiFlyoutBody>\n              <EuiText>{this.renderInfo()}</EuiText>\n            </EuiFlyoutBody>\n          </EuiFlyout>\n        </EuiPortal>\n      );\n    }\n\n    return (\n      <Fragment>\n        <EuiButtonIcon\n          onClick={this.showFlyout}\n          iconType=\"iInCircle\"\n          color={'primary'}\n          data-test-subj=\"reportInfoButton\"\n          aria-label=\"Show report info\"\n        />\n        {flyout}\n      </Fragment>\n    );\n  }\n\n  private loadInfo = async () => {\n    this.setState({ isLoading: true });\n    try {\n      const info: JobInfo = await jobQueueClient.getInfo(this.props.jobId);\n      if (this.mounted) {\n        this.setState({ isLoading: false, info });\n      }\n    } catch (kfetchError) {\n      if (this.mounted) {\n        this.setState({\n          isLoading: false,\n          calloutTitle: 'Unable to fetch report info',\n          info: null,\n          error: kfetchError,\n        });\n        throw kfetchError;\n      }\n    }\n  };\n\n  private closeFlyout = () => {\n    this.setState({\n      isFlyoutVisible: false,\n      info: null, // force re-read for next click\n    });\n  };\n\n  private showFlyout = () => {\n    this.setState({ isFlyoutVisible: true });\n\n    if (!this.state.info) {\n      this.loadInfo();\n    }\n  };\n}\n"]}]}