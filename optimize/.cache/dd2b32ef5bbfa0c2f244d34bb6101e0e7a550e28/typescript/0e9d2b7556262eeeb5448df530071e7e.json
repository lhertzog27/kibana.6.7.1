{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/utils/binder.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/utils/binder.ts","mtime":1567631711787},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar BinderBase = /** @class */ (function () {\n    function BinderBase() {\n        this.disposal = [];\n    }\n    BinderBase.prototype.on = function (emitter) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var on = emitter.on || emitter.addListener;\n        var off = emitter.off || emitter.removeListener;\n        on.apply(emitter, args);\n        this.disposal.push(function () { return off.apply(emitter, args); });\n    };\n    BinderBase.prototype.destroy = function () {\n        var destroyers = this.disposal;\n        this.disposal = [];\n        destroyers.forEach(function (fn) { return fn(); });\n    };\n    return BinderBase;\n}());\nexport { BinderBase };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/utils/binder.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/utils/binder.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AASH;IAAA;QACU,aAAQ,GAAsB,EAAE,CAAC;IAe3C,CAAC;IAbQ,uBAAE,GAAT,UAAU,OAAgB;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QACxC,IAAM,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,OAAO,CAAC,WAAW,CAAC;QAC7C,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,cAAc,CAAC;QAElD,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAM,OAAA,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACrD,CAAC;IAEM,4BAAO,GAAd;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,UAAU,CAAC,OAAO,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,EAAE,EAAJ,CAAI,CAAC,CAAC;IACjC,CAAC;IACH,iBAAC;AAAD,CAAC,AAhBD,IAgBC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport interface Emitter {\n  on: (args: any[]) => void;\n  off: (args: any[]) => void;\n  addListener: Emitter['on'];\n  removeListener: Emitter['off'];\n}\n\nexport class BinderBase {\n  private disposal: Array<() => void> = [];\n\n  public on(emitter: Emitter, ...args: any[]) {\n    const on = emitter.on || emitter.addListener;\n    const off = emitter.off || emitter.removeListener;\n\n    on.apply(emitter, args);\n    this.disposal.push(() => off.apply(emitter, args));\n  }\n\n  public destroy() {\n    const destroyers = this.disposal;\n    this.disposal = [];\n    destroyers.forEach(fn => fn());\n  }\n}\n"]}]}