{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/snapshot_histogram.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/snapshot_histogram.tsx","mtime":1567631712329},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n// @ts-ignore Missing typings for series charts\nimport { EuiHistogramSeries, EuiSeriesChart, EuiSeriesChartUtils } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\n/**\n * These charts are going to be deprecated. Their responsive feature isn't\n * working with our app, so temporarily we will use this ratio to auto-resize\n * the histogram. When we upgrade the charts we will delete this.\n */\nvar windowRatio = 0.515238095238095;\nexport var SnapshotHistogram = function (_a) {\n    var dangerColor = _a.dangerColor, histogram = _a.histogram, primaryColor = _a.primaryColor, windowWidth = _a.windowWidth;\n    return (React.createElement(EuiSeriesChart, { width: windowWidth * windowRatio, height: 120, stackBy: \"y\", xType: EuiSeriesChartUtils.SCALE.TIME, xCrosshairFormat: \"YYYY-MM-DD hh:mmZ\" },\n        React.createElement(EuiHistogramSeries, { data: histogram.map(function (_a) {\n                var x = _a.x, x0 = _a.x0, upCount = _a.upCount;\n                return ({ x: x, x0: x0, y: upCount });\n            }), name: i18n.translate('xpack.uptime.snapshotHistogram.series.upLabel', {\n                defaultMessage: 'Up',\n            }), color: primaryColor }),\n        React.createElement(EuiHistogramSeries, { data: histogram.map(function (_a) {\n                var x = _a.x, x0 = _a.x0, downCount = _a.downCount;\n                return ({ x: x, x0: x0, y: downCount });\n            }), name: i18n.translate('xpack.uptime.snapshotHistogram.series.downLabel', {\n                defaultMessage: 'Down',\n            }), color: dangerColor })));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/snapshot_histogram.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/snapshot_histogram.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,+CAA+C;AAC/C,OAAO,EAAE,kBAAkB,EAAE,cAAc,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;AACvF,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,KAAK,MAAM,OAAO,CAAC;AAU1B;;;;GAIG;AACH,IAAM,WAAW,GAAG,iBAAiB,CAAC;AAEtC,MAAM,CAAC,IAAM,iBAAiB,GAAG,UAAC,EAKT;QAJvB,4BAAW,EACX,wBAAS,EACT,8BAAY,EACZ,4BAAW;IACiB,OAAA,CAC5B,oBAAC,cAAc,IACb,KAAK,EAAE,WAAW,GAAG,WAAW,EAChC,MAAM,EAAE,GAAG,EACX,OAAO,EAAC,GAAG,EACX,KAAK,EAAE,mBAAmB,CAAC,KAAK,CAAC,IAAI,EACrC,gBAAgB,EAAC,mBAAmB;QAEpC,oBAAC,kBAAkB,IACjB,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,UAAC,EAAkB;oBAAhB,QAAC,EAAE,UAAE,EAAE,oBAAO;gBAAO,OAAA,CAAC,EAAE,CAAC,GAAA,EAAE,EAAE,IAAA,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC;YAAvB,CAAuB,CAAC,EACpE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,+CAA+C,EAAE;gBACpE,cAAc,EAAE,IAAI;aACrB,CAAC,EACF,KAAK,EAAE,YAAY,GACnB;QACF,oBAAC,kBAAkB,IACjB,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,UAAC,EAAoB;oBAAlB,QAAC,EAAE,UAAE,EAAE,wBAAS;gBAAO,OAAA,CAAC,EAAE,CAAC,GAAA,EAAE,EAAE,IAAA,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC;YAAzB,CAAyB,CAAC,EACxE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,iDAAiD,EAAE;gBACtE,cAAc,EAAE,MAAM;aACvB,CAAC,EACF,KAAK,EAAE,WAAW,GAClB,CACa,CAClB;AAvB6B,CAuB7B,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n// @ts-ignore Missing typings for series charts\nimport { EuiHistogramSeries, EuiSeriesChart, EuiSeriesChartUtils } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport { HistogramDataPoint } from '../../../common/graphql/types';\n\nexport interface SnapshotHistogramProps {\n  windowWidth: number;\n  primaryColor: string;\n  dangerColor: string;\n  histogram: HistogramDataPoint[];\n}\n\n/**\n * These charts are going to be deprecated. Their responsive feature isn't\n * working with our app, so temporarily we will use this ratio to auto-resize\n * the histogram. When we upgrade the charts we will delete this.\n */\nconst windowRatio = 0.515238095238095;\n\nexport const SnapshotHistogram = ({\n  dangerColor,\n  histogram,\n  primaryColor,\n  windowWidth,\n}: SnapshotHistogramProps) => (\n  <EuiSeriesChart\n    width={windowWidth * windowRatio}\n    height={120}\n    stackBy=\"y\"\n    xType={EuiSeriesChartUtils.SCALE.TIME}\n    xCrosshairFormat=\"YYYY-MM-DD hh:mmZ\"\n  >\n    <EuiHistogramSeries\n      data={histogram.map(({ x, x0, upCount }) => ({ x, x0, y: upCount }))}\n      name={i18n.translate('xpack.uptime.snapshotHistogram.series.upLabel', {\n        defaultMessage: 'Up',\n      })}\n      color={primaryColor}\n    />\n    <EuiHistogramSeries\n      data={histogram.map(({ x, x0, downCount }) => ({ x, x0, y: downCount }))}\n      name={i18n.translate('xpack.uptime.snapshotHistogram.series.downLabel', {\n        defaultMessage: 'Down',\n      })}\n      color={dangerColor}\n    />\n  </EuiSeriesChart>\n);\n"]}]}