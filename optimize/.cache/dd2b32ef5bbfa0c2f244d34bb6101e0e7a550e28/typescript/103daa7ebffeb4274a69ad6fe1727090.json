{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/TransactionLink.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/TransactionLink.tsx","mtime":1567631711867},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { KibanaLink } from './Links/KibanaLink';\nimport { legacyEncodeURIComponent } from './Links/url_helpers';\n/**\n * Return the path and query used to build a trace link,\n * given either a v2 Transaction or a Transaction Group\n */\nexport function getLinkProps(transaction) {\n    var serviceName = transaction.context.service.name;\n    var transactionType = transaction.transaction.type;\n    var traceId = transaction.version === 'v2' ? transaction.trace.id : undefined;\n    var transactionId = transaction.transaction.id;\n    var name = transaction.transaction.name;\n    var encodedName = legacyEncodeURIComponent(name);\n    return {\n        hash: \"/\" + serviceName + \"/transactions/\" + transactionType + \"/\" + encodedName,\n        query: {\n            traceId: traceId,\n            transactionId: transactionId\n        }\n    };\n}\nexport var TransactionLink = function (_a) {\n    var transaction = _a.transaction, children = _a.children;\n    if (!transaction) {\n        return null;\n    }\n    var linkProps = getLinkProps(transaction);\n    if (!linkProps) {\n        // TODO: Should this case return unlinked children, null, or something else?\n        return React.createElement(React.Fragment, null, children);\n    }\n    return React.createElement(KibanaLink, tslib_1.__assign({}, linkProps), children);\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/TransactionLink.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/TransactionLink.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAE,wBAAwB,EAAE,MAAM,qBAAqB,CAAC;AAM/D;;;GAGG;AACH,MAAM,UAAU,YAAY,CAAC,WAAwB;IACnD,IAAM,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;IACrD,IAAM,eAAe,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC;IACrD,IAAM,OAAO,GACX,WAAW,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IAClE,IAAM,aAAa,GAAG,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC;IACjD,IAAM,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC;IAE1C,IAAM,WAAW,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC;IAEnD,OAAO;QACL,IAAI,EAAE,MAAI,WAAW,sBAAiB,eAAe,SAAI,WAAa;QACtE,KAAK,EAAE;YACL,OAAO,SAAA;YACP,aAAa,eAAA;SACd;KACF,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,IAAM,eAAe,GAAoC,UAAC,EAGhE;QAFC,4BAAW,EACX,sBAAQ;IAER,IAAI,CAAC,WAAW,EAAE;QAChB,OAAO,IAAI,CAAC;KACb;IAED,IAAM,SAAS,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;IAE5C,IAAI,CAAC,SAAS,EAAE;QACd,4EAA4E;QAC5E,OAAO,oBAAC,KAAK,CAAC,QAAQ,QAAE,QAAQ,CAAkB,CAAC;KACpD;IAED,OAAO,oBAAC,UAAU,uBAAK,SAAS,GAAG,QAAQ,CAAc,CAAC;AAC5D,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\nimport { Transaction } from '../../../typings/es_schemas/Transaction';\nimport { KibanaLink } from './Links/KibanaLink';\nimport { legacyEncodeURIComponent } from './Links/url_helpers';\n\ninterface TransactionLinkProps {\n  transaction?: Transaction;\n}\n\n/**\n * Return the path and query used to build a trace link,\n * given either a v2 Transaction or a Transaction Group\n */\nexport function getLinkProps(transaction: Transaction) {\n  const serviceName = transaction.context.service.name;\n  const transactionType = transaction.transaction.type;\n  const traceId =\n    transaction.version === 'v2' ? transaction.trace.id : undefined;\n  const transactionId = transaction.transaction.id;\n  const name = transaction.transaction.name;\n\n  const encodedName = legacyEncodeURIComponent(name);\n\n  return {\n    hash: `/${serviceName}/transactions/${transactionType}/${encodedName}`,\n    query: {\n      traceId,\n      transactionId\n    }\n  };\n}\n\nexport const TransactionLink: React.SFC<TransactionLinkProps> = ({\n  transaction,\n  children\n}) => {\n  if (!transaction) {\n    return null;\n  }\n\n  const linkProps = getLinkProps(transaction);\n\n  if (!linkProps) {\n    // TODO: Should this case return unlinked children, null, or something else?\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n\n  return <KibanaLink {...linkProps}>{children}</KibanaLink>;\n};\n"]}]}