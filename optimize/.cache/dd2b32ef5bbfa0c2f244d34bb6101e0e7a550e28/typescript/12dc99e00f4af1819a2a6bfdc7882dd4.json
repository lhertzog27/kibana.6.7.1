{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/kuery.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/kuery.ts","mtime":1567631711870},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { fromKueryExpression, toElasticsearchQuery } from '@kbn/es-query';\nimport { getAutocompleteProvider } from 'ui/autocomplete_providers';\n// @ts-ignore\nimport { getFromSavedObject } from 'ui/index_patterns/static_utils';\nimport { getAPMIndexPattern } from './rest/savedObjects';\nexport function convertKueryToEsQuery(kuery, indexPattern) {\n    var ast = fromKueryExpression(kuery);\n    return toElasticsearchQuery(ast, indexPattern);\n}\nexport function getSuggestions(query, selectionStart, apmIndexPattern, boolFilter) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var autocompleteProvider, config, getAutocompleteSuggestions;\n        return tslib_1.__generator(this, function (_a) {\n            autocompleteProvider = getAutocompleteProvider('kuery');\n            if (!autocompleteProvider) {\n                return [2 /*return*/, []];\n            }\n            config = {\n                get: function () { return true; }\n            };\n            getAutocompleteSuggestions = autocompleteProvider({\n                config: config,\n                indexPatterns: [apmIndexPattern],\n                boolFilter: boolFilter\n            });\n            return [2 /*return*/, getAutocompleteSuggestions({\n                    query: query,\n                    selectionStart: selectionStart,\n                    selectionEnd: selectionStart\n                })];\n        });\n    });\n}\nexport function getAPMIndexPatternForKuery() {\n    return tslib_1.__awaiter(this, void 0, Promise, function () {\n        var apmIndexPattern;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getAPMIndexPattern()];\n                case 1:\n                    apmIndexPattern = _a.sent();\n                    if (!apmIndexPattern) {\n                        return [2 /*return*/];\n                    }\n                    return [2 /*return*/, getFromSavedObject(apmIndexPattern)];\n            }\n        });\n    });\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/kuery.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/kuery.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,MAAM,eAAe,CAAC;AAC1E,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AACpE,aAAa;AACb,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AACpE,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AAEzD,MAAM,UAAU,qBAAqB,CAAC,KAAa,EAAE,YAAiB;IACpE,IAAM,GAAG,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;IACvC,OAAO,oBAAoB,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,UAAgB,cAAc,CAClC,KAAa,EACb,cAAsB,EACtB,eAAoB,EACpB,UAAe;;;;YAET,oBAAoB,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAC;YAC9D,IAAI,CAAC,oBAAoB,EAAE;gBACzB,sBAAO,EAAE,EAAC;aACX;YACK,MAAM,GAAG;gBACb,GAAG,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI;aAChB,CAAC;YAEI,0BAA0B,GAAG,oBAAoB,CAAC;gBACtD,MAAM,QAAA;gBACN,aAAa,EAAE,CAAC,eAAe,CAAC;gBAChC,UAAU,YAAA;aACX,CAAC,CAAC;YACH,sBAAO,0BAA0B,CAAC;oBAChC,KAAK,OAAA;oBACL,cAAc,gBAAA;oBACd,YAAY,EAAE,cAAc;iBAC7B,CAAC,EAAC;;;CACJ;AAOD,MAAM,UAAgB,0BAA0B;2CAAI,OAAO;;;;wBAGjC,qBAAM,kBAAkB,EAAE,EAAA;;oBAA5C,eAAe,GAAG,SAA0B;oBAClD,IAAI,CAAC,eAAe,EAAE;wBACpB,sBAAO;qBACR;oBACD,sBAAO,kBAAkB,CAAC,eAAe,CAAC,EAAC;;;;CAC5C","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { fromKueryExpression, toElasticsearchQuery } from '@kbn/es-query';\nimport { getAutocompleteProvider } from 'ui/autocomplete_providers';\n// @ts-ignore\nimport { getFromSavedObject } from 'ui/index_patterns/static_utils';\nimport { getAPMIndexPattern } from './rest/savedObjects';\n\nexport function convertKueryToEsQuery(kuery: string, indexPattern: any) {\n  const ast = fromKueryExpression(kuery);\n  return toElasticsearchQuery(ast, indexPattern);\n}\n\nexport async function getSuggestions(\n  query: string,\n  selectionStart: number,\n  apmIndexPattern: any,\n  boolFilter: any\n) {\n  const autocompleteProvider = getAutocompleteProvider('kuery');\n  if (!autocompleteProvider) {\n    return [];\n  }\n  const config = {\n    get: () => true\n  };\n\n  const getAutocompleteSuggestions = autocompleteProvider({\n    config,\n    indexPatterns: [apmIndexPattern],\n    boolFilter\n  });\n  return getAutocompleteSuggestions({\n    query,\n    selectionStart,\n    selectionEnd: selectionStart\n  });\n}\n\ninterface IIndexPatternForKuery {\n  title: string;\n  fields: any[];\n}\n\nexport async function getAPMIndexPatternForKuery(): Promise<\n  IIndexPatternForKuery | undefined\n> {\n  const apmIndexPattern = await getAPMIndexPattern();\n  if (!apmIndexPattern) {\n    return;\n  }\n  return getFromSavedObject(apmIndexPattern);\n}\n"]}]}