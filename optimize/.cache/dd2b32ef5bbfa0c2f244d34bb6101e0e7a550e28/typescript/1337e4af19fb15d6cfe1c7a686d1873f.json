{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_scale_controls.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_scale_controls.tsx","mtime":1567631711980},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiFormRow, EuiRadioGroup } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport * as React from 'react';\nimport { isTextScale } from '../../../common/log_text_scale';\nvar LogTextScaleControls = /** @class */ (function (_super) {\n    tslib_1.__extends(LogTextScaleControls, _super);\n    function LogTextScaleControls() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.setTextScale = function (textScale) {\n            if (isTextScale(textScale)) {\n                _this.props.setTextScale(textScale);\n            }\n        };\n        return _this;\n    }\n    LogTextScaleControls.prototype.render = function () {\n        var _a = this.props, availableTextScales = _a.availableTextScales, textScale = _a.textScale;\n        return (React.createElement(EuiFormRow, { label: React.createElement(FormattedMessage, { id: \"xpack.infra.logs.customizeLogs.textSizeFormRowLabel\", defaultMessage: \"Text Size\" }) },\n            React.createElement(EuiRadioGroup, { options: availableTextScales.map(function (availableTextScale) { return ({\n                    id: availableTextScale.toString(),\n                    label: (React.createElement(FormattedMessage, { id: \"xpack.infra.logs.customizeLogs.textSizeRadioGroup\", defaultMessage: \"{textScale, select,\\n                  small {Small}\\n                  medium {Medium}\\n                  large {Large}\\n                  other {{textScale}}\\n                }\", values: {\n                            textScale: availableTextScale,\n                        } })),\n                }); }), idSelected: textScale, onChange: this.setTextScale })));\n    };\n    return LogTextScaleControls;\n}(React.PureComponent));\nexport { LogTextScaleControls };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_scale_controls.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_scale_controls.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AACzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,WAAW,EAAa,MAAM,gCAAgC,CAAC;AAQxE;IAA0C,gDAA8C;IAAxF;QAAA,qEA2CC;QA1CQ,kBAAY,GAAG,UAAC,SAAiB;YACtC,IAAI,WAAW,CAAC,SAAS,CAAC,EAAE;gBAC1B,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aACpC;QACH,CAAC,CAAC;;IAsCJ,CAAC;IApCQ,qCAAM,GAAb;QACQ,IAAA,eAA+C,EAA7C,4CAAmB,EAAE,wBAAS,CAAgB;QAEtD,OAAO,CACL,oBAAC,UAAU,IACT,KAAK,EACH,oBAAC,gBAAgB,IACf,EAAE,EAAC,qDAAqD,EACxD,cAAc,EAAC,WAAW,GAC1B;YAGJ,oBAAC,aAAa,IACZ,OAAO,EAAE,mBAAmB,CAAC,GAAG,CAAC,UAAC,kBAA6B,IAAK,OAAA,CAAC;oBACnE,EAAE,EAAE,kBAAkB,CAAC,QAAQ,EAAE;oBACjC,KAAK,EAAE,CACL,oBAAC,gBAAgB,IACf,EAAE,EAAC,mDAAmD,EACtD,cAAc,EAAC,oLAKb,EACF,MAAM,EAAE;4BACN,SAAS,EAAE,kBAAkB;yBAC9B,GACD,CACH;iBACF,CAAC,EAhBkE,CAgBlE,CAAC,EACH,UAAU,EAAE,SAAS,EACrB,QAAQ,EAAE,IAAI,CAAC,YAAY,GAC3B,CACS,CACd,CAAC;IACJ,CAAC;IACH,2BAAC;AAAD,CAAC,AA3CD,CAA0C,KAAK,CAAC,aAAa,GA2C5D","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiFormRow, EuiRadioGroup } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport * as React from 'react';\n\nimport { isTextScale, TextScale } from '../../../common/log_text_scale';\n\ninterface LogTextScaleControlsProps {\n  availableTextScales: TextScale[];\n  textScale: TextScale;\n  setTextScale: (scale: TextScale) => any;\n}\n\nexport class LogTextScaleControls extends React.PureComponent<LogTextScaleControlsProps> {\n  public setTextScale = (textScale: string) => {\n    if (isTextScale(textScale)) {\n      this.props.setTextScale(textScale);\n    }\n  };\n\n  public render() {\n    const { availableTextScales, textScale } = this.props;\n\n    return (\n      <EuiFormRow\n        label={\n          <FormattedMessage\n            id=\"xpack.infra.logs.customizeLogs.textSizeFormRowLabel\"\n            defaultMessage=\"Text Size\"\n          />\n        }\n      >\n        <EuiRadioGroup\n          options={availableTextScales.map((availableTextScale: TextScale) => ({\n            id: availableTextScale.toString(),\n            label: (\n              <FormattedMessage\n                id=\"xpack.infra.logs.customizeLogs.textSizeRadioGroup\"\n                defaultMessage=\"{textScale, select,\n                  small {Small}\n                  medium {Medium}\n                  large {Large}\n                  other {{textScale}}\n                }\"\n                values={{\n                  textScale: availableTextScale,\n                }}\n              />\n            ),\n          }))}\n          idSelected={textScale}\n          onChange={this.setTextScale}\n        />\n      </EuiFormRow>\n    );\n  }\n}\n"]}]}