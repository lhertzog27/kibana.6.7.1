{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/overview/configuration_tags.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/overview/configuration_tags.tsx","mtime":1567631711883},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButton } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport React from 'react';\nimport { Breadcrumb } from '../../components/navigation/breadcrumb';\nimport { AssignmentActionType, Table, TagsTableType } from '../../components/table';\nimport { tagListActions } from '../../components/table/action_schema';\nimport { WithKueryAutocompletion } from '../../containers/with_kuery_autocompletion';\nvar TagsPageComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(TagsPageComponent, _super);\n    function TagsPageComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.renderActionArea = function () { return (React.createElement(EuiButton, { size: \"s\", color: \"primary\", onClick: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                return tslib_1.__generator(this, function (_a) {\n                    this.props.goTo('/tag/create');\n                    return [2 /*return*/];\n                });\n            }); } },\n            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.tags.addTagButtonLabel\", defaultMessage: \"Add Tag\" }))); };\n        _this.handleTagsAction = function (action) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var intl, _a, success;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        intl = this.props.intl;\n                        _a = action;\n                        switch (_a) {\n                            case AssignmentActionType.Delete: return [3 /*break*/, 1];\n                        }\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.props.containers.tags.delete(this.getSelectedTags())];\n                    case 2:\n                        success = _b.sent();\n                        if (!success) {\n                            alert(intl.formatMessage({\n                                id: 'xpack.beatsManagement.tags.someTagsMightBeAssignedToBeatsTitle',\n                                defaultMessage: 'Some of these tags might be assigned to beats. Please ensure tags being removed are not activly assigned',\n                            }));\n                        }\n                        else {\n                            if (this.state.tableRef && this.state.tableRef.current) {\n                                this.state.tableRef.current.resetSelection();\n                            }\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.getSelectedTags = function () {\n            return _this.state.tableRef.current ? _this.state.tableRef.current.state.selection : [];\n        };\n        _this.state = {\n            tableRef: React.createRef(),\n        };\n        props.containers.tags.reload(props.urlState.tagsKBar);\n        props.renderAction(_this.renderActionArea);\n        return _this;\n    }\n    TagsPageComponent.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Breadcrumb, { title: i18n.translate('xpack.beatsManagement.breadcrumb.configurationTags', {\n                    defaultMessage: 'Configuration tags',\n                }), path: \"/overview/configuration_tags\" }),\n            React.createElement(WithKueryAutocompletion, { libs: this.props.libs, fieldPrefix: \"tag\" }, function (autocompleteProps) { return (React.createElement(Table, { kueryBarProps: tslib_1.__assign({}, autocompleteProps, { filterQueryDraft: 'false', isValid: _this.props.libs.elasticsearch.isKueryValid(_this.props.urlState.tagsKBar || ''), onChange: function (value) {\n                        _this.props.setUrlState({ tagsKBar: value });\n                        _this.props.containers.tags.reload(value);\n                    }, onSubmit: function () { return null; }, value: _this.props.urlState.tagsKBar || '' }), actions: tagListActions, actionHandler: _this.handleTagsAction, ref: _this.state.tableRef, items: _this.props.containers.tags.state.list, type: TagsTableType })); })));\n    };\n    return TagsPageComponent;\n}(React.PureComponent));\nexport var TagsPage = injectI18n(TagsPageComponent);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/overview/configuration_tags.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/overview/configuration_tags.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiButton } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport React from 'react';\nimport { Breadcrumb } from '../../components/navigation/breadcrumb';\nimport { AssignmentActionType, Table, TagsTableType } from '../../components/table';\nimport { tagListActions } from '../../components/table/action_schema';\nimport { WithKueryAutocompletion } from '../../containers/with_kuery_autocompletion';\nimport { AppPageProps } from '../../frontend_types';\n\ninterface PageProps extends AppPageProps {\n  renderAction: (area: () => JSX.Element) => void;\n  intl: InjectedIntl;\n}\n\ninterface PageState {\n  tableRef: any;\n}\n\nclass TagsPageComponent extends React.PureComponent<PageProps, PageState> {\n  constructor(props: PageProps) {\n    super(props);\n\n    this.state = {\n      tableRef: React.createRef(),\n    };\n\n    props.containers.tags.reload(props.urlState.tagsKBar);\n    props.renderAction(this.renderActionArea);\n  }\n\n  public renderActionArea = () => (\n    <EuiButton\n      size=\"s\"\n      color=\"primary\"\n      onClick={async () => {\n        this.props.goTo('/tag/create');\n      }}\n    >\n      <FormattedMessage\n        id=\"xpack.beatsManagement.tags.addTagButtonLabel\"\n        defaultMessage=\"Add Tag\"\n      />\n    </EuiButton>\n  );\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Breadcrumb\n          title={i18n.translate('xpack.beatsManagement.breadcrumb.configurationTags', {\n            defaultMessage: 'Configuration tags',\n          })}\n          path={`/overview/configuration_tags`}\n        />\n        <WithKueryAutocompletion libs={this.props.libs} fieldPrefix=\"tag\">\n          {autocompleteProps => (\n            <Table\n              kueryBarProps={{\n                ...autocompleteProps,\n                filterQueryDraft: 'false', // todo\n                isValid: this.props.libs.elasticsearch.isKueryValid(\n                  this.props.urlState.tagsKBar || ''\n                ),\n                onChange: (value: any) => {\n                  this.props.setUrlState({ tagsKBar: value });\n                  this.props.containers.tags.reload(value);\n                },\n                onSubmit: () => null, // todo\n                value: this.props.urlState.tagsKBar || '',\n              }}\n              actions={tagListActions}\n              actionHandler={this.handleTagsAction}\n              ref={this.state.tableRef}\n              items={this.props.containers.tags.state.list}\n              type={TagsTableType}\n            />\n          )}\n        </WithKueryAutocompletion>\n      </React.Fragment>\n    );\n  }\n\n  private handleTagsAction = async (action: AssignmentActionType) => {\n    const { intl } = this.props;\n    switch (action) {\n      case AssignmentActionType.Delete:\n        const success = await this.props.containers.tags.delete(this.getSelectedTags());\n        if (!success) {\n          alert(\n            intl.formatMessage({\n              id: 'xpack.beatsManagement.tags.someTagsMightBeAssignedToBeatsTitle',\n              defaultMessage:\n                'Some of these tags might be assigned to beats. Please ensure tags being removed are not activly assigned',\n            })\n          );\n        } else {\n          if (this.state.tableRef && this.state.tableRef.current) {\n            this.state.tableRef.current.resetSelection();\n          }\n        }\n        break;\n    }\n  };\n\n  private getSelectedTags = () => {\n    return this.state.tableRef.current ? this.state.tableRef.current.state.selection : [];\n  };\n}\n\nexport const TagsPage = injectI18n(TagsPageComponent);\n"]}]}