{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/enroll_beats.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/enroll_beats.tsx","mtime":1567631711879},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { EuiBasicTable, EuiButton, EuiCodeBlock, EuiCopy, EuiFlexGroup, EuiFlexItem, EuiLoadingSpinner, EuiModalBody, \n// @ts-ignore\nEuiSelect, EuiSpacer, EuiTitle, } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport { capitalize } from 'lodash';\nimport React from 'react';\nvar EnrollBeat = /** @class */ (function (_super) {\n    tslib_1.__extends(EnrollBeat, _super);\n    function EnrollBeat(props) {\n        var _this = _super.call(this, props) || this;\n        _this.pinging = false;\n        _this.pingForBeatWithToken = function (token) { return tslib_1.__awaiter(_this, void 0, Promise, function () {\n            var beats, err_1, timeout;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 6]);\n                        return [4 /*yield*/, this.props.getBeatWithToken(token)];\n                    case 1:\n                        beats = _a.sent();\n                        if (!beats) {\n                            throw new Error('no beats');\n                        }\n                        return [2 /*return*/, beats];\n                    case 2:\n                        err_1 = _a.sent();\n                        if (!this.pinging) return [3 /*break*/, 5];\n                        timeout = function (ms) { return new Promise(function (res) { return setTimeout(res, ms); }); };\n                        return [4 /*yield*/, timeout(5000)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.pingForBeatWithToken(token)];\n                    case 4: return [2 /*return*/, _a.sent()];\n                    case 5: return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.waitForTokenToEnrollBeat = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var enrolledBeat;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.pinging || !this.props.enrollmentToken) {\n                            return [2 /*return*/];\n                        }\n                        this.pinging = true;\n                        return [4 /*yield*/, this.pingForBeatWithToken(this.props.enrollmentToken)];\n                    case 1:\n                        enrolledBeat = (_a.sent());\n                        this.setState({\n                            enrolledBeat: enrolledBeat,\n                        });\n                        this.props.onBeatEnrolled(enrolledBeat);\n                        this.pinging = false;\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.state = {\n            enrolledBeat: null,\n            hasPolledForBeat: false,\n            command: 'sudo {{beatType}}',\n            beatType: 'filebeat',\n        };\n        return _this;\n    }\n    EnrollBeat.prototype.componentDidMount = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this.props.enrollmentToken) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.props.createEnrollmentToken()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    EnrollBeat.prototype.render = function () {\n        var _this = this;\n        if (!this.props.enrollmentToken && !this.state.enrolledBeat) {\n            return null;\n        }\n        if (this.props.enrollmentToken && !this.state.enrolledBeat) {\n            this.waitForTokenToEnrollBeat();\n        }\n        var cmdText = this.state.command\n            .replace('{{beatType}}', this.state.beatType)\n            .replace('{{beatTypeInCaps}}', capitalize(this.state.beatType)) + \" enroll \" + window.location.protocol + \"//\" + window.location.host + this.props.frameworkBasePath + \" \" + this.props.enrollmentToken;\n        return (React.createElement(React.Fragment, null,\n            !this.state.enrolledBeat && (React.createElement(React.Fragment, null,\n                React.createElement(EuiFlexGroup, null,\n                    React.createElement(EuiFlexItem, null,\n                        React.createElement(EuiFlexGroup, { gutterSize: \"s\", alignItems: \"center\" },\n                            React.createElement(EuiFlexItem, { grow: false },\n                                React.createElement(EuiTitle, { size: \"xs\" },\n                                    React.createElement(\"h3\", null,\n                                        React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.enrollBeat.beatTypeTitle\", defaultMessage: \"Beat type:\" }))))),\n                        React.createElement(EuiSelect, { value: this.state.beatType, options: [\n                                {\n                                    value: 'filebeat',\n                                    text: 'Filebeat',\n                                },\n                                {\n                                    value: 'metricbeat',\n                                    text: 'Metricbeat',\n                                },\n                            ], onChange: function (e) { return _this.setState({ beatType: e.target.value }); }, fullWidth: true }))),\n                React.createElement(\"br\", null),\n                React.createElement(\"br\", null),\n                React.createElement(EuiFlexGroup, null,\n                    React.createElement(EuiFlexItem, null,\n                        React.createElement(EuiFlexGroup, { gutterSize: \"s\", alignItems: \"center\" },\n                            React.createElement(EuiFlexItem, { grow: false },\n                                React.createElement(EuiTitle, { size: \"xs\" },\n                                    React.createElement(\"h3\", null,\n                                        React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.enrollBeat.platformTitle\", defaultMessage: \"Platform:\" }))))),\n                        React.createElement(EuiSelect, { value: this.state.command, options: [\n                                {\n                                    value: \"sudo {{beatType}}\",\n                                    text: 'DEB / RPM',\n                                },\n                                {\n                                    value: \"PS C:\\\\Program Files\\\\{{beatTypeInCaps}}> {{beatType}}.exe\",\n                                    text: 'Windows',\n                                },\n                                {\n                                    value: \"./{{beatType}}\",\n                                    text: 'MacOS',\n                                },\n                            ], onChange: function (e) { return _this.setState({ command: e.target.value }); }, fullWidth: true }))),\n                React.createElement(\"br\", null),\n                React.createElement(\"br\", null),\n                this.state.command && (React.createElement(EuiFlexGroup, null,\n                    React.createElement(EuiFlexItem, null,\n                        React.createElement(EuiFlexGroup, { justifyContent: \"spaceBetween\", alignItems: \"flexEnd\" },\n                            React.createElement(EuiFlexItem, { grow: false },\n                                React.createElement(EuiTitle, { size: \"xs\" },\n                                    React.createElement(\"h3\", null,\n                                        React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.enrollBeat.yourBeatTypeHostTitle\", defaultMessage: \"On the host where your {beatType} is installed, run:\", values: {\n                                                beatType: capitalize(this.state.beatType),\n                                            } })))),\n                            React.createElement(EuiFlexItem, { className: \"homTutorial__instruction\", grow: false },\n                                React.createElement(EuiCopy, { textToCopy: cmdText }, function (copy) { return (React.createElement(EuiButton, { size: \"s\", onClick: copy },\n                                    React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.enrollBeat.copyButtonLabel\", defaultMessage: \"Copy command\" }))); }))),\n                        React.createElement(\"div\", { className: \"eui-textBreakAll\" },\n                            React.createElement(EuiSpacer, { size: \"m\" }),\n                            React.createElement(EuiCodeBlock, { language: \"sh\" }, \"$ \" + cmdText)),\n                        React.createElement(EuiSpacer, { size: \"m\" }),\n                        React.createElement(EuiFlexGroup, null,\n                            React.createElement(EuiFlexItem, null,\n                                React.createElement(EuiFlexGroup, { gutterSize: \"s\", alignItems: \"center\" },\n                                    React.createElement(EuiFlexItem, { grow: false },\n                                        React.createElement(EuiTitle, { size: \"xs\" },\n                                            React.createElement(\"h3\", null,\n                                                React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.enrollBeat.waitingBeatTypeToEnrollTitle\", defaultMessage: \"Waiting for {beatType} to enroll\\u2026\", values: {\n                                                        beatType: capitalize(this.state.beatType),\n                                                    } }))))))),\n                        React.createElement(\"br\", null),\n                        React.createElement(EuiLoadingSpinner, { size: \"l\" })))))),\n            this.state.enrolledBeat && (React.createElement(EuiModalBody, null,\n                React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.enrollBeat.beatEnrolledTitle\", defaultMessage: \"The Beat is now enrolled in central management:\" }),\n                React.createElement(\"br\", null),\n                React.createElement(\"br\", null),\n                React.createElement(\"br\", null),\n                React.createElement(EuiBasicTable, { items: [this.state.enrolledBeat], columns: [\n                        {\n                            field: 'type',\n                            name: (React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.enrollBeat.beatTypeColumnName\", defaultMessage: \"Beat Type\" })),\n                            sortable: false,\n                        },\n                        {\n                            field: 'version',\n                            name: (React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.enrollBeat.versionColumnName\", defaultMessage: \"Version\" })),\n                            sortable: false,\n                        },\n                        {\n                            field: 'host_name',\n                            name: (React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.enrollBeat.hostnameColumnName\", defaultMessage: \"Hostname\" })),\n                            sortable: false,\n                        },\n                    ] }),\n                React.createElement(\"br\", null),\n                React.createElement(\"br\", null)))));\n    };\n    return EnrollBeat;\n}(React.Component));\nexport { EnrollBeat };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/enroll_beats.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/enroll_beats.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport {\n  EuiBasicTable,\n  EuiButton,\n  EuiCodeBlock,\n  EuiCopy,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiLoadingSpinner,\n  EuiModalBody,\n  // @ts-ignore\n  EuiSelect,\n  EuiSpacer,\n  EuiTitle,\n} from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport { capitalize } from 'lodash';\nimport React from 'react';\nimport { CMBeat } from '../../common/domain_types';\n\ninterface ComponentProps {\n  /** Such as kibanas basePath, for use to generate command */\n  frameworkBasePath?: string;\n  enrollmentToken?: string;\n  getBeatWithToken(token: string): Promise<CMBeat | null>;\n  createEnrollmentToken(): Promise<void>;\n  onBeatEnrolled(enrolledBeat: CMBeat): void;\n}\n\ninterface ComponentState {\n  enrolledBeat: CMBeat | null;\n  hasPolledForBeat: boolean;\n  command: string;\n  beatType: string;\n}\n\nexport class EnrollBeat extends React.Component<ComponentProps, ComponentState> {\n  private pinging = false;\n  constructor(props: ComponentProps) {\n    super(props);\n\n    this.state = {\n      enrolledBeat: null,\n      hasPolledForBeat: false,\n      command: 'sudo {{beatType}}',\n      beatType: 'filebeat',\n    };\n  }\n  public pingForBeatWithToken = async (token: string): Promise<CMBeat | void> => {\n    try {\n      const beats = await this.props.getBeatWithToken(token);\n\n      if (!beats) {\n        throw new Error('no beats');\n      }\n      return beats;\n    } catch (err) {\n      if (this.pinging) {\n        const timeout = (ms: number) => new Promise(res => setTimeout(res, ms));\n        await timeout(5000);\n        return await this.pingForBeatWithToken(token);\n      }\n    }\n  };\n  public async componentDidMount() {\n    if (!this.props.enrollmentToken) {\n      await this.props.createEnrollmentToken();\n    }\n  }\n  public waitForTokenToEnrollBeat = async () => {\n    if (this.pinging || !this.props.enrollmentToken) {\n      return;\n    }\n    this.pinging = true;\n    const enrolledBeat = (await this.pingForBeatWithToken(this.props.enrollmentToken)) as CMBeat;\n\n    this.setState({\n      enrolledBeat,\n    });\n    this.props.onBeatEnrolled(enrolledBeat);\n    this.pinging = false;\n  };\n  public render() {\n    if (!this.props.enrollmentToken && !this.state.enrolledBeat) {\n      return null;\n    }\n    if (this.props.enrollmentToken && !this.state.enrolledBeat) {\n      this.waitForTokenToEnrollBeat();\n    }\n    const cmdText = `${this.state.command\n      .replace('{{beatType}}', this.state.beatType)\n      .replace('{{beatTypeInCaps}}', capitalize(this.state.beatType))} enroll ${\n      window.location.protocol\n    }//${window.location.host}${this.props.frameworkBasePath} ${this.props.enrollmentToken}`;\n\n    return (\n      <React.Fragment>\n        {!this.state.enrolledBeat && (\n          <React.Fragment>\n            <EuiFlexGroup>\n              <EuiFlexItem>\n                <EuiFlexGroup gutterSize=\"s\" alignItems=\"center\">\n                  <EuiFlexItem grow={false}>\n                    <EuiTitle size=\"xs\">\n                      <h3>\n                        <FormattedMessage\n                          id=\"xpack.beatsManagement.enrollBeat.beatTypeTitle\"\n                          defaultMessage=\"Beat type:\"\n                        />\n                      </h3>\n                    </EuiTitle>\n                  </EuiFlexItem>\n                </EuiFlexGroup>\n                <EuiSelect\n                  value={this.state.beatType}\n                  options={[\n                    {\n                      value: 'filebeat',\n                      text: 'Filebeat',\n                    },\n                    {\n                      value: 'metricbeat',\n                      text: 'Metricbeat',\n                    },\n                  ]}\n                  onChange={(e: any) => this.setState({ beatType: e.target.value })}\n                  fullWidth={true}\n                />\n              </EuiFlexItem>\n            </EuiFlexGroup>\n\n            <br />\n            <br />\n            <EuiFlexGroup>\n              <EuiFlexItem>\n                <EuiFlexGroup gutterSize=\"s\" alignItems=\"center\">\n                  <EuiFlexItem grow={false}>\n                    <EuiTitle size=\"xs\">\n                      <h3>\n                        <FormattedMessage\n                          id=\"xpack.beatsManagement.enrollBeat.platformTitle\"\n                          defaultMessage=\"Platform:\"\n                        />\n                      </h3>\n                    </EuiTitle>\n                  </EuiFlexItem>\n                </EuiFlexGroup>\n                <EuiSelect\n                  value={this.state.command}\n                  options={[\n                    {\n                      value: `sudo {{beatType}}`,\n                      text: 'DEB / RPM',\n                    },\n                    {\n                      value: `PS C:\\\\Program Files\\\\{{beatTypeInCaps}}> {{beatType}}.exe`,\n                      text: 'Windows',\n                    },\n                    {\n                      value: `./{{beatType}}`,\n                      text: 'MacOS',\n                    },\n                  ]}\n                  onChange={(e: any) => this.setState({ command: e.target.value })}\n                  fullWidth={true}\n                />\n              </EuiFlexItem>\n            </EuiFlexGroup>\n            <br />\n            <br />\n            {this.state.command && (\n              <EuiFlexGroup>\n                <EuiFlexItem>\n                  <EuiFlexGroup justifyContent=\"spaceBetween\" alignItems=\"flexEnd\">\n                    <EuiFlexItem grow={false}>\n                      <EuiTitle size=\"xs\">\n                        <h3>\n                          <FormattedMessage\n                            id=\"xpack.beatsManagement.enrollBeat.yourBeatTypeHostTitle\"\n                            defaultMessage=\"On the host where your {beatType} is installed, run:\"\n                            values={{\n                              beatType: capitalize(this.state.beatType),\n                            }}\n                          />\n                        </h3>\n                      </EuiTitle>\n                    </EuiFlexItem>\n                    <EuiFlexItem className=\"homTutorial__instruction\" grow={false}>\n                      <EuiCopy textToCopy={cmdText}>\n                        {(copy: any) => (\n                          <EuiButton size=\"s\" onClick={copy}>\n                            <FormattedMessage\n                              id=\"xpack.beatsManagement.enrollBeat.copyButtonLabel\"\n                              defaultMessage=\"Copy command\"\n                            />\n                          </EuiButton>\n                        )}\n                      </EuiCopy>\n                    </EuiFlexItem>\n                  </EuiFlexGroup>\n\n                  <div className=\"eui-textBreakAll\">\n                    <EuiSpacer size=\"m\" />\n                    <EuiCodeBlock language=\"sh\">{`$ ${cmdText}`}</EuiCodeBlock>\n                  </div>\n\n                  <EuiSpacer size=\"m\" />\n\n                  <EuiFlexGroup>\n                    <EuiFlexItem>\n                      <EuiFlexGroup gutterSize=\"s\" alignItems=\"center\">\n                        <EuiFlexItem grow={false}>\n                          <EuiTitle size=\"xs\">\n                            <h3>\n                              <FormattedMessage\n                                id=\"xpack.beatsManagement.enrollBeat.waitingBeatTypeToEnrollTitle\"\n                                defaultMessage=\"Waiting for {beatType} to enroll…\"\n                                values={{\n                                  beatType: capitalize(this.state.beatType),\n                                }}\n                              />\n                            </h3>\n                          </EuiTitle>\n                        </EuiFlexItem>\n                      </EuiFlexGroup>\n                    </EuiFlexItem>\n                  </EuiFlexGroup>\n                  <br />\n                  <EuiLoadingSpinner size=\"l\" />\n                </EuiFlexItem>\n              </EuiFlexGroup>\n            )}\n          </React.Fragment>\n        )}\n        {this.state.enrolledBeat && (\n          <EuiModalBody>\n            <FormattedMessage\n              id=\"xpack.beatsManagement.enrollBeat.beatEnrolledTitle\"\n              defaultMessage=\"The Beat is now enrolled in central management:\"\n            />\n            <br />\n            <br />\n            <br />\n            <EuiBasicTable\n              items={[this.state.enrolledBeat]}\n              columns={[\n                {\n                  field: 'type',\n                  name: (\n                    <FormattedMessage\n                      id=\"xpack.beatsManagement.enrollBeat.beatTypeColumnName\"\n                      defaultMessage=\"Beat Type\"\n                    />\n                  ),\n                  sortable: false,\n                },\n                {\n                  field: 'version',\n                  name: (\n                    <FormattedMessage\n                      id=\"xpack.beatsManagement.enrollBeat.versionColumnName\"\n                      defaultMessage=\"Version\"\n                    />\n                  ),\n                  sortable: false,\n                },\n                {\n                  field: 'host_name',\n                  name: (\n                    <FormattedMessage\n                      id=\"xpack.beatsManagement.enrollBeat.hostnameColumnName\"\n                      defaultMessage=\"Hostname\"\n                    />\n                  ),\n                  sortable: false,\n                },\n              ]}\n            />\n            <br />\n            <br />\n          </EuiModalBody>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n"]}]}