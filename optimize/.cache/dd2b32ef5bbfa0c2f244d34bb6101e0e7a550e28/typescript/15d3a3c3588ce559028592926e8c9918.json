{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/selectors.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/selectors.ts","mtime":1567631711990},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { createSelector } from 'reselect';\nimport { getLogEntryAtTime } from '../utils/log_entry';\nimport { globalizeSelectors } from '../utils/typed_redux';\nimport { flyoutOptionsSelectors as localFlyoutOptionsSelectors, logFilterSelectors as localLogFilterSelectors, logMinimapSelectors as localLogMinimapSelectors, logPositionSelectors as localLogPositionSelectors, logTextviewSelectors as localLogTextviewSelectors, metricTimeSelectors as localMetricTimeSelectors, waffleFilterSelectors as localWaffleFilterSelectors, waffleOptionsSelectors as localWaffleOptionsSelectors, waffleTimeSelectors as localWaffleTimeSelectors, } from './local';\nimport { logEntriesSelectors as remoteLogEntriesSelectors, logSummarySelectors as remoteLogSummarySelectors, } from './remote';\n/**\n * local selectors\n */\nvar selectLocal = function (state) { return state.local; };\nexport var logFilterSelectors = globalizeSelectors(selectLocal, localLogFilterSelectors);\nexport var logMinimapSelectors = globalizeSelectors(selectLocal, localLogMinimapSelectors);\nexport var logPositionSelectors = globalizeSelectors(selectLocal, localLogPositionSelectors);\nexport var logTextviewSelectors = globalizeSelectors(selectLocal, localLogTextviewSelectors);\nexport var metricTimeSelectors = globalizeSelectors(selectLocal, localMetricTimeSelectors);\nexport var waffleFilterSelectors = globalizeSelectors(selectLocal, localWaffleFilterSelectors);\nexport var waffleTimeSelectors = globalizeSelectors(selectLocal, localWaffleTimeSelectors);\nexport var waffleOptionsSelectors = globalizeSelectors(selectLocal, localWaffleOptionsSelectors);\nexport var flyoutOptionsSelectors = globalizeSelectors(selectLocal, localFlyoutOptionsSelectors);\n/**\n * remote selectors\n */\nvar selectRemote = function (state) { return state.remote; };\nexport var logEntriesSelectors = globalizeSelectors(selectRemote, remoteLogEntriesSelectors);\nexport var logSummarySelectors = globalizeSelectors(selectRemote, remoteLogSummarySelectors);\n/**\n * shared selectors\n */\nexport var sharedSelectors = {\n    selectFirstVisibleLogEntry: createSelector(logEntriesSelectors.selectEntries, logPositionSelectors.selectFirstVisiblePosition, function (entries, firstVisiblePosition) {\n        return firstVisiblePosition ? getLogEntryAtTime(entries, firstVisiblePosition) : null;\n    }),\n    selectMiddleVisibleLogEntry: createSelector(logEntriesSelectors.selectEntries, logPositionSelectors.selectMiddleVisiblePosition, function (entries, middleVisiblePosition) {\n        return middleVisiblePosition ? getLogEntryAtTime(entries, middleVisiblePosition) : null;\n    }),\n    selectLastVisibleLogEntry: createSelector(logEntriesSelectors.selectEntries, logPositionSelectors.selectLastVisiblePosition, function (entries, lastVisiblePosition) {\n        return lastVisiblePosition ? getLogEntryAtTime(entries, lastVisiblePosition) : null;\n    }),\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/selectors.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/selectors.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { createSelector } from 'reselect';\nimport { getLogEntryAtTime } from '../utils/log_entry';\nimport { globalizeSelectors } from '../utils/typed_redux';\nimport {\n  flyoutOptionsSelectors as localFlyoutOptionsSelectors,\n  logFilterSelectors as localLogFilterSelectors,\n  logMinimapSelectors as localLogMinimapSelectors,\n  logPositionSelectors as localLogPositionSelectors,\n  logTextviewSelectors as localLogTextviewSelectors,\n  metricTimeSelectors as localMetricTimeSelectors,\n  waffleFilterSelectors as localWaffleFilterSelectors,\n  waffleOptionsSelectors as localWaffleOptionsSelectors,\n  waffleTimeSelectors as localWaffleTimeSelectors,\n} from './local';\nimport { State } from './reducer';\nimport {\n  logEntriesSelectors as remoteLogEntriesSelectors,\n  logSummarySelectors as remoteLogSummarySelectors,\n} from './remote';\n\n/**\n * local selectors\n */\n\nconst selectLocal = (state: State) => state.local;\n\nexport const logFilterSelectors = globalizeSelectors(selectLocal, localLogFilterSelectors);\nexport const logMinimapSelectors = globalizeSelectors(selectLocal, localLogMinimapSelectors);\nexport const logPositionSelectors = globalizeSelectors(selectLocal, localLogPositionSelectors);\nexport const logTextviewSelectors = globalizeSelectors(selectLocal, localLogTextviewSelectors);\nexport const metricTimeSelectors = globalizeSelectors(selectLocal, localMetricTimeSelectors);\nexport const waffleFilterSelectors = globalizeSelectors(selectLocal, localWaffleFilterSelectors);\nexport const waffleTimeSelectors = globalizeSelectors(selectLocal, localWaffleTimeSelectors);\nexport const waffleOptionsSelectors = globalizeSelectors(selectLocal, localWaffleOptionsSelectors);\nexport const flyoutOptionsSelectors = globalizeSelectors(selectLocal, localFlyoutOptionsSelectors);\n\n/**\n * remote selectors\n */\n\nconst selectRemote = (state: State) => state.remote;\n\nexport const logEntriesSelectors = globalizeSelectors(selectRemote, remoteLogEntriesSelectors);\nexport const logSummarySelectors = globalizeSelectors(selectRemote, remoteLogSummarySelectors);\n\n/**\n * shared selectors\n */\n\nexport const sharedSelectors = {\n  selectFirstVisibleLogEntry: createSelector(\n    logEntriesSelectors.selectEntries,\n    logPositionSelectors.selectFirstVisiblePosition,\n    (entries, firstVisiblePosition) =>\n      firstVisiblePosition ? getLogEntryAtTime(entries, firstVisiblePosition) : null\n  ),\n  selectMiddleVisibleLogEntry: createSelector(\n    logEntriesSelectors.selectEntries,\n    logPositionSelectors.selectMiddleVisiblePosition,\n    (entries, middleVisiblePosition) =>\n      middleVisiblePosition ? getLogEntryAtTime(entries, middleVisiblePosition) : null\n  ),\n  selectLastVisibleLogEntry: createSelector(\n    logEntriesSelectors.selectEntries,\n    logPositionSelectors.selectLastVisiblePosition,\n    (entries, lastVisiblePosition) =>\n      lastVisiblePosition ? getLogEntryAtTime(entries, lastVisiblePosition) : null\n  ),\n};\n"]}]}