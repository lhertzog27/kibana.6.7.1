{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/space_selector/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/space_selector/index.tsx","mtime":1567631712313},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { SpacesManager } from 'plugins/spaces/lib/spaces_manager';\n// @ts-ignore\nimport template from 'plugins/spaces/views/space_selector/space_selector.html';\nimport 'ui/autoload/styles';\nimport chrome from 'ui/chrome';\nimport { I18nContext } from 'ui/i18n';\n// @ts-ignore\nimport { uiModules } from 'ui/modules';\nimport 'plugins/spaces/views/space_selector/space_selector.less';\nimport React from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport { SpaceSelector } from './space_selector';\nvar module = uiModules.get('spaces_selector', []);\nmodule.controller('spacesSelectorController', function ($scope, $http, spaces, spaceSelectorURL) {\n    var domNode = document.getElementById('spaceSelectorRoot');\n    var spacesManager = new SpacesManager($http, chrome, spaceSelectorURL);\n    render(React.createElement(I18nContext, null,\n        React.createElement(SpaceSelector, { spaces: spaces, spacesManager: spacesManager })), domNode);\n    // unmount react on controller destroy\n    $scope.$on('$destroy', function () {\n        if (domNode) {\n            unmountComponentAtNode(domNode);\n        }\n    });\n});\nchrome.setVisible(false).setRootTemplate(template);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/space_selector/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/space_selector/index.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,aAAa;AACb,OAAO,QAAQ,MAAM,yDAAyD,CAAC;AAC/E,OAAO,oBAAoB,CAAC;AAC5B,OAAO,MAAM,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AACtC,aAAa;AACb,OAAO,EAAE,SAAS,EAAE,MAAM,YAAY,CAAC;AAEvC,OAAO,yDAAyD,CAAC;AACjE,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,MAAM,EAAE,sBAAsB,EAAE,MAAM,WAAW,CAAC;AAE3D,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAEjD,IAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;AACpD,MAAM,CAAC,UAAU,CACf,0BAA0B,EAC1B,UAAC,MAAW,EAAE,KAAU,EAAE,MAAe,EAAE,gBAAwB;IACjE,IAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;IAE7D,IAAM,aAAa,GAAG,IAAI,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,gBAAgB,CAAC,CAAC;IAEzE,MAAM,CACJ,oBAAC,WAAW;QACV,oBAAC,aAAa,IAAC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,aAAa,GAAI,CACnD,EACd,OAAO,CACR,CAAC;IAEF,sCAAsC;IACtC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE;QACrB,IAAI,OAAO,EAAE;YACX,sBAAsB,CAAC,OAAO,CAAC,CAAC;SACjC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CACF,CAAC;AAEF,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { SpacesManager } from 'plugins/spaces/lib/spaces_manager';\n// @ts-ignore\nimport template from 'plugins/spaces/views/space_selector/space_selector.html';\nimport 'ui/autoload/styles';\nimport chrome from 'ui/chrome';\nimport { I18nContext } from 'ui/i18n';\n// @ts-ignore\nimport { uiModules } from 'ui/modules';\n\nimport 'plugins/spaces/views/space_selector/space_selector.less';\nimport React from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport { Space } from '../../../common/model/space';\nimport { SpaceSelector } from './space_selector';\n\nconst module = uiModules.get('spaces_selector', []);\nmodule.controller(\n  'spacesSelectorController',\n  ($scope: any, $http: any, spaces: Space[], spaceSelectorURL: string) => {\n    const domNode = document.getElementById('spaceSelectorRoot');\n\n    const spacesManager = new SpacesManager($http, chrome, spaceSelectorURL);\n\n    render(\n      <I18nContext>\n        <SpaceSelector spaces={spaces} spacesManager={spacesManager} />\n      </I18nContext>,\n      domNode\n    );\n\n    // unmount react on controller destroy\n    $scope.$on('$destroy', () => {\n      if (domNode) {\n        unmountComponentAtNode(domNode);\n      }\n    });\n  }\n);\n\nchrome.setVisible(false).setRootTemplate(template);\n"]}]}