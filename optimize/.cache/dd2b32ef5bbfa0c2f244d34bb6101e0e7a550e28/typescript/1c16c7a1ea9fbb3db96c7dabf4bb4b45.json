{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/pages/monitor.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/pages/monitor.tsx","mtime":1567631712330},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { \n// @ts-ignore No typings for EuiSpacer\nEuiSpacer, EuiTitle, } from '@elastic/eui';\nimport React, { Fragment } from 'react';\nimport { getMonitorPageBreadcrumb } from '../breadcrumbs';\nimport { MonitorChartsQuery, MonitorStatusBarQuery, PingListQuery } from '../components/queries';\nvar MonitorPage = /** @class */ (function (_super) {\n    tslib_1.__extends(MonitorPage, _super);\n    function MonitorPage(props) {\n        return _super.call(this, props) || this;\n    }\n    MonitorPage.prototype.componentWillMount = function () {\n        this.props.updateBreadcrumbs(getMonitorPageBreadcrumb());\n    };\n    MonitorPage.prototype.render = function () {\n        // TODO: this is a hack because the id field's characters mess up react router's\n        // inner params parsing, when we add a synthetic ID for monitors this problem should go away\n        var id = this.props.location.pathname.replace(/^(\\/monitor\\/)/, '');\n        return (React.createElement(Fragment, null,\n            React.createElement(EuiTitle, null,\n                React.createElement(\"h2\", null, id)),\n            React.createElement(EuiSpacer, { size: \"l\" }),\n            React.createElement(EuiSpacer, null),\n            React.createElement(MonitorStatusBarQuery, tslib_1.__assign({ monitorId: id }, this.props)),\n            React.createElement(EuiSpacer, null),\n            React.createElement(MonitorChartsQuery, tslib_1.__assign({ monitorId: id }, this.props)),\n            React.createElement(EuiSpacer, null),\n            React.createElement(PingListQuery, tslib_1.__assign({ monitorId: id }, this.props))));\n    };\n    return MonitorPage;\n}(React.Component));\nexport { MonitorPage };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/pages/monitor.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/pages/monitor.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO;AACL,sCAAsC;AACtC,SAAS,EAGT,QAAQ,GACT,MAAM,cAAc,CAAC;AACtB,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,wBAAwB,EAAE,MAAM,gBAAgB,CAAC;AAC1D,OAAO,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AAajG;IAAiC,uCAAsB;IACrD,qBAAY,KAAY;eACtB,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,wCAAkB,GAAzB;QACE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,wBAAwB,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEM,4BAAM,GAAb;QACE,gFAAgF;QAChF,4FAA4F;QAC5F,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;QACtE,OAAO,CACL,oBAAC,QAAQ;YACP,oBAAC,QAAQ;gBACP,gCAAK,EAAE,CAAM,CACJ;YACX,oBAAC,SAAS,IAAC,IAAI,EAAC,GAAG,GAAG;YACtB,oBAAC,SAAS,OAAG;YACb,oBAAC,qBAAqB,qBAAC,SAAS,EAAE,EAAE,IAAM,IAAI,CAAC,KAAK,EAAI;YACxD,oBAAC,SAAS,OAAG;YACb,oBAAC,kBAAkB,qBAAC,SAAS,EAAE,EAAE,IAAM,IAAI,CAAC,KAAK,EAAI;YACrD,oBAAC,SAAS,OAAG;YACb,oBAAC,aAAa,qBAAC,SAAS,EAAE,EAAE,IAAM,IAAI,CAAC,KAAK,EAAI,CACvC,CACZ,CAAC;IACJ,CAAC;IACH,kBAAC;AAAD,CAAC,AA5BD,CAAiC,KAAK,CAAC,SAAS,GA4B/C","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  // @ts-ignore No typings for EuiSpacer\n  EuiSpacer,\n  // @ts-ignore No typings for EuiSuperSelect\n  EuiSuperSelect,\n  EuiTitle,\n} from '@elastic/eui';\nimport React, { Fragment } from 'react';\nimport { getMonitorPageBreadcrumb } from '../breadcrumbs';\nimport { MonitorChartsQuery, MonitorStatusBarQuery, PingListQuery } from '../components/queries';\nimport { UMUpdateBreadcrumbs } from '../lib/lib';\nimport { UptimeCommonProps } from '../uptime_app';\n\ninterface MonitorPageProps {\n  updateBreadcrumbs: UMUpdateBreadcrumbs;\n  history: { push: any };\n  location: { pathname: string };\n  match: { params: { id: string } };\n}\n\ntype Props = MonitorPageProps & UptimeCommonProps;\n\nexport class MonitorPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  public componentWillMount() {\n    this.props.updateBreadcrumbs(getMonitorPageBreadcrumb());\n  }\n\n  public render() {\n    // TODO: this is a hack because the id field's characters mess up react router's\n    // inner params parsing, when we add a synthetic ID for monitors this problem should go away\n    const id = this.props.location.pathname.replace(/^(\\/monitor\\/)/, '');\n    return (\n      <Fragment>\n        <EuiTitle>\n          <h2>{id}</h2>\n        </EuiTitle>\n        <EuiSpacer size=\"l\" />\n        <EuiSpacer />\n        <MonitorStatusBarQuery monitorId={id} {...this.props} />\n        <EuiSpacer />\n        <MonitorChartsQuery monitorId={id} {...this.props} />\n        <EuiSpacer />\n        <PingListQuery monitorId={id} {...this.props} />\n      </Fragment>\n    );\n  }\n}\n"]}]}