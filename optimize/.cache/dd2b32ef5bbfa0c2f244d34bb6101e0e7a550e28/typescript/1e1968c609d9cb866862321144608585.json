{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/services.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/services.ts","mtime":1567631711870},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { callApi } from '../callApi';\nimport { getEncodedEsQuery } from './apm';\nexport function loadServiceList(_a) {\n    var start = _a.start, end = _a.end, kuery = _a.kuery;\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var _b, _c, _d;\n        return tslib_1.__generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _b = callApi;\n                    _c = {\n                        pathname: \"/api/apm/services\"\n                    };\n                    _d = {\n                        start: start,\n                        end: end\n                    };\n                    return [4 /*yield*/, getEncodedEsQuery(kuery)];\n                case 1: return [2 /*return*/, _b.apply(void 0, [(_c.query = (_d.esFilterQuery = _e.sent(),\n                            _d),\n                            _c)])];\n            }\n        });\n    });\n}\nexport function loadServiceDetails(_a) {\n    var serviceName = _a.serviceName, start = _a.start, end = _a.end, kuery = _a.kuery;\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var _b, _c, _d;\n        return tslib_1.__generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _b = callApi;\n                    _c = {\n                        pathname: \"/api/apm/services/\" + serviceName\n                    };\n                    _d = {\n                        start: start,\n                        end: end\n                    };\n                    return [4 /*yield*/, getEncodedEsQuery(kuery)];\n                case 1: return [2 /*return*/, _b.apply(void 0, [(_c.query = (_d.esFilterQuery = _e.sent(),\n                            _d),\n                            _c)])];\n            }\n        });\n    });\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/services.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/services.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAKH,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,OAAO,CAAC;AAE1C,MAAM,UAAgB,eAAe,CAAC,EAAiC;QAA/B,gBAAK,EAAE,YAAG,EAAE,gBAAK;;;;;;oBAChD,KAAA,OAAO,CAAA;;wBACZ,QAAQ,EAAE,mBAAmB;;;wBAE3B,KAAK,OAAA;wBACL,GAAG,KAAA;;oBACY,qBAAM,iBAAiB,CAAC,KAAK,CAAC,EAAA;wBALjD,sBAAO,mBAEL,QAAK,IAGH,gBAAa,GAAE,SAA8B;+BAC9C;iCACD,EAAC;;;;CACJ;AAED,MAAM,UAAgB,kBAAkB,CAAC,EAK5B;QAJX,4BAAW,EACX,gBAAK,EACL,YAAG,EACH,gBAAK;;;;;;oBAEE,KAAA,OAAO,CAAA;;wBACZ,QAAQ,EAAE,uBAAqB,WAAa;;;wBAE1C,KAAK,OAAA;wBACL,GAAG,KAAA;;oBACY,qBAAM,iBAAiB,CAAC,KAAK,CAAC,EAAA;wBALjD,sBAAO,mBAEL,QAAK,IAGH,gBAAa,GAAE,SAA8B;+BAC9C;iCACD,EAAC;;;;CACJ","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { ServiceAPIResponse } from 'x-pack/plugins/apm/server/lib/services/get_service';\nimport { ServiceListAPIResponse } from 'x-pack/plugins/apm/server/lib/services/get_services';\nimport { IUrlParams } from '../../../store/urlParams';\nimport { callApi } from '../callApi';\nimport { getEncodedEsQuery } from './apm';\n\nexport async function loadServiceList({ start, end, kuery }: IUrlParams) {\n  return callApi<ServiceListAPIResponse>({\n    pathname: `/api/apm/services`,\n    query: {\n      start,\n      end,\n      esFilterQuery: await getEncodedEsQuery(kuery)\n    }\n  });\n}\n\nexport async function loadServiceDetails({\n  serviceName,\n  start,\n  end,\n  kuery\n}: IUrlParams) {\n  return callApi<ServiceAPIResponse>({\n    pathname: `/api/apm/services/${serviceName}`,\n    query: {\n      start,\n      end,\n      esFilterQuery: await getEncodedEsQuery(kuery)\n    }\n  });\n}\n"]}]}