{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/es/cluster_privileges.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/es/cluster_privileges.tsx","mtime":1567631712300},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiComboBox, EuiFlexGroup, EuiFlexItem } from '@elastic/eui';\nimport React, { Component } from 'react';\nimport { isReservedRole } from '../../../../../../lib/role';\n// @ts-ignore\nimport { getClusterPrivileges } from '../../../../../../services/role_privileges';\nvar ClusterPrivileges = /** @class */ (function (_super) {\n    tslib_1.__extends(ClusterPrivileges, _super);\n    function ClusterPrivileges() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.buildComboBox = function (items) {\n            var role = _this.props.role;\n            var options = items.map(function (i) { return ({\n                label: i,\n                isGroupLabelOption: false,\n            }); });\n            var selectedOptions = (role.elasticsearch.cluster || []).map(function (k) { return ({ label: k }); });\n            return (React.createElement(EuiFlexItem, { key: 'clusterPrivs' },\n                React.createElement(EuiComboBox, { options: options, selectedOptions: selectedOptions, onChange: _this.onClusterPrivilegesChange, isDisabled: isReservedRole(role) })));\n        };\n        _this.onClusterPrivilegesChange = function (selectedPrivileges) {\n            _this.props.onChange(selectedPrivileges.map(function (priv) { return priv.label; }));\n        };\n        return _this;\n    }\n    ClusterPrivileges.prototype.render = function () {\n        var clusterPrivileges = getClusterPrivileges();\n        return React.createElement(EuiFlexGroup, null, this.buildComboBox(clusterPrivileges));\n    };\n    return ClusterPrivileges;\n}(Component));\nexport { ClusterPrivileges };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/es/cluster_privileges.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/es/cluster_privileges.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AACtE,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAEzC,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC5D,aAAa;AACb,OAAO,EAAE,oBAAoB,EAAE,MAAM,4CAA4C,CAAC;AAOlF;IAAuC,6CAAoB;IAA3D;QAAA,qEAgCC;QAzBQ,mBAAa,GAAG,UAAC,KAAe;YACrC,IAAM,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YAE7B,IAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC;gBAC9B,KAAK,EAAE,CAAC;gBACR,kBAAkB,EAAE,KAAK;aAC1B,CAAC,EAH6B,CAG7B,CAAC,CAAC;YAEJ,IAAM,eAAe,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAd,CAAc,CAAC,CAAC;YAEpF,OAAO,CACL,oBAAC,WAAW,IAAC,GAAG,EAAE,cAAc;gBAC9B,oBAAC,WAAW,IACV,OAAO,EAAE,OAAO,EAChB,eAAe,EAAE,eAAe,EAChC,QAAQ,EAAE,KAAI,CAAC,yBAAyB,EACxC,UAAU,EAAE,cAAc,CAAC,IAAI,CAAC,GAChC,CACU,CACf,CAAC;QACJ,CAAC,CAAC;QAEK,+BAAyB,GAAG,UAAC,kBAAuB;YACzD,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAC,IAAS,IAAK,OAAA,IAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;;IACJ,CAAC;IA/BQ,kCAAM,GAAb;QACE,IAAM,iBAAiB,GAAG,oBAAoB,EAAE,CAAC;QAEjD,OAAO,oBAAC,YAAY,QAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAgB,CAAC;IAC9E,CAAC;IA2BH,wBAAC;AAAD,CAAC,AAhCD,CAAuC,SAAS,GAgC/C","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiComboBox, EuiFlexGroup, EuiFlexItem } from '@elastic/eui';\nimport React, { Component } from 'react';\nimport { Role } from '../../../../../../../common/model/role';\nimport { isReservedRole } from '../../../../../../lib/role';\n// @ts-ignore\nimport { getClusterPrivileges } from '../../../../../../services/role_privileges';\n\ninterface Props {\n  role: Role;\n  onChange: (privs: string[]) => void;\n}\n\nexport class ClusterPrivileges extends Component<Props, {}> {\n  public render() {\n    const clusterPrivileges = getClusterPrivileges();\n\n    return <EuiFlexGroup>{this.buildComboBox(clusterPrivileges)}</EuiFlexGroup>;\n  }\n\n  public buildComboBox = (items: string[]) => {\n    const role = this.props.role;\n\n    const options = items.map(i => ({\n      label: i,\n      isGroupLabelOption: false,\n    }));\n\n    const selectedOptions = (role.elasticsearch.cluster || []).map(k => ({ label: k }));\n\n    return (\n      <EuiFlexItem key={'clusterPrivs'}>\n        <EuiComboBox\n          options={options}\n          selectedOptions={selectedOptions}\n          onChange={this.onClusterPrivilegesChange}\n          isDisabled={isReservedRole(role)}\n        />\n      </EuiFlexItem>\n    );\n  };\n\n  public onClusterPrivilegesChange = (selectedPrivileges: any) => {\n    this.props.onChange(selectedPrivileges.map((priv: any) => priv.label));\n  };\n}\n"]}]}