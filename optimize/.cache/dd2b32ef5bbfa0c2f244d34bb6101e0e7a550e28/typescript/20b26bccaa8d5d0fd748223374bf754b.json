{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/ManagedTable/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/ManagedTable/index.tsx","mtime":1567631711866},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiBasicTable } from '@elastic/eui';\nimport { get, sortByOrder } from 'lodash';\nimport React, { Component } from 'react';\nvar ManagedTable = /** @class */ (function (_super) {\n    tslib_1.__extends(ManagedTable, _super);\n    function ManagedTable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onTableChange = function (_a) {\n            var _b = _a.page, page = _b === void 0 ? {} : _b, _c = _a.sort, sort = _c === void 0 ? {} : _c;\n            _this.setState({ page: page, sort: sort });\n        };\n        var defaultSort = {\n            field: get(props, 'columns[0].field', ''),\n            direction: 'asc'\n        };\n        var _a = props.initialPageIndex, initialPageIndex = _a === void 0 ? 0 : _a, _b = props.initialPageSize, initialPageSize = _b === void 0 ? 10 : _b, _c = props.initialSort, initialSort = _c === void 0 ? defaultSort : _c;\n        _this.state = {\n            page: { index: initialPageIndex, size: initialPageSize },\n            sort: initialSort\n        };\n        return _this;\n    }\n    ManagedTable.prototype.getCurrentItems = function () {\n        var items = this.props.items;\n        var _a = this.state, _b = _a.sort, sort = _b === void 0 ? {} : _b, _c = _a.page, page = _c === void 0 ? {} : _c;\n        // TODO: Use _.orderBy once we upgrade to lodash 4+\n        var sorted = sortByOrder(items, sort.field, sort.direction);\n        return sorted.slice(page.index * page.size, (page.index + 1) * page.size);\n    };\n    ManagedTable.prototype.render = function () {\n        var _a = this.props, columns = _a.columns, noItemsMessage = _a.noItemsMessage, items = _a.items, _b = _a.hidePerPageOptions, hidePerPageOptions = _b === void 0 ? true : _b;\n        var _c = this.state, page = _c.page, sort = _c.sort;\n        return (React.createElement(EuiBasicTable, { noItemsMessage: noItemsMessage, items: this.getCurrentItems(), columns: columns, pagination: {\n                hidePerPageOptions: hidePerPageOptions,\n                totalItemCount: items.length,\n                pageIndex: page.index,\n                pageSize: page.size\n            }, sorting: { sort: sort }, onChange: this.onTableChange }));\n    };\n    return ManagedTable;\n}(Component));\nexport { ManagedTable };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/ManagedTable/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/ManagedTable/index.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAC7C,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAC;AAC1C,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AA2BzC;IAAkC,wCAAkC;IAClE,sBAAY,KAAyB;QAArC,YACE,kBAAM,KAAK,CAAC,SAiBb;QAEM,mBAAa,GAAG,UAAC,EAAwB;gBAAtB,YAAS,EAAT,8BAAS,EAAE,YAAS,EAAT,8BAAS;YAC5C,KAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,MAAA,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;QAChC,CAAC,CAAC;QAnBA,IAAM,WAAW,GAAG;YAClB,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,kBAAkB,EAAE,EAAE,CAAC;YACzC,SAAS,EAAE,KAAK;SACjB,CAAC;QAGA,IAAA,2BAAoB,EAApB,yCAAoB,EACpB,0BAAoB,EAApB,yCAAoB,EACpB,sBAAyB,EAAzB,8CAAyB,CACjB;QAEV,KAAI,CAAC,KAAK,GAAG;YACX,IAAI,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,eAAe,EAAE;YACxD,IAAI,EAAE,WAAW;SAClB,CAAC;;IACJ,CAAC;IAMM,sCAAe,GAAtB;QACU,IAAA,wBAAK,CAAgB;QACvB,IAAA,eAAqC,EAAnC,YAAS,EAAT,8BAAS,EAAE,YAAS,EAAT,8BAAS,CAAgB;QAC5C,mDAAmD;QACnD,IAAM,MAAM,GAAG,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9D,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5E,CAAC;IAEM,6BAAM,GAAb;QACQ,IAAA,eAKQ,EAJZ,oBAAO,EACP,kCAAc,EACd,gBAAK,EACL,0BAAyB,EAAzB,8CAAyB,CACZ;QACT,IAAA,eAA2B,EAAzB,cAAI,EAAE,cAAI,CAAgB;QAElC,OAAO,CACL,oBAAC,aAAa,IACZ,cAAc,EAAE,cAAc,EAC9B,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE,EAC7B,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE;gBACV,kBAAkB,oBAAA;gBAClB,cAAc,EAAE,KAAK,CAAC,MAAM;gBAC5B,SAAS,EAAE,IAAI,CAAC,KAAK;gBACrB,QAAQ,EAAE,IAAI,CAAC,IAAI;aACpB,EACD,OAAO,EAAE,EAAE,IAAI,MAAA,EAAE,EACjB,QAAQ,EAAE,IAAI,CAAC,aAAa,GAC5B,CACH,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AA1DD,CAAkC,SAAS,GA0D1C","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiBasicTable } from '@elastic/eui';\nimport { get, sortByOrder } from 'lodash';\nimport React, { Component } from 'react';\nimport { StringMap } from '../../../../typings/common';\n\n// TODO: this should really be imported from EUI\nexport interface ITableColumn {\n  field: string;\n  name: string;\n  dataType?: string;\n  align?: string;\n  width?: string;\n  sortable?: boolean;\n  render?: (value: any, item?: any) => unknown;\n}\n\nexport interface IManagedTableProps {\n  items: Array<StringMap<any>>;\n  columns: ITableColumn[];\n  initialPageIndex?: number;\n  initialPageSize?: number;\n  hidePerPageOptions?: boolean;\n  initialSort?: {\n    field: string;\n    direction: 'asc' | 'desc';\n  };\n  noItemsMessage?: React.ReactNode;\n}\n\nexport class ManagedTable extends Component<IManagedTableProps, any> {\n  constructor(props: IManagedTableProps) {\n    super(props);\n\n    const defaultSort = {\n      field: get(props, 'columns[0].field', ''),\n      direction: 'asc'\n    };\n\n    const {\n      initialPageIndex = 0,\n      initialPageSize = 10,\n      initialSort = defaultSort\n    } = props;\n\n    this.state = {\n      page: { index: initialPageIndex, size: initialPageSize },\n      sort: initialSort\n    };\n  }\n\n  public onTableChange = ({ page = {}, sort = {} }) => {\n    this.setState({ page, sort });\n  };\n\n  public getCurrentItems() {\n    const { items } = this.props;\n    const { sort = {}, page = {} } = this.state;\n    // TODO: Use _.orderBy once we upgrade to lodash 4+\n    const sorted = sortByOrder(items, sort.field, sort.direction);\n    return sorted.slice(page.index * page.size, (page.index + 1) * page.size);\n  }\n\n  public render() {\n    const {\n      columns,\n      noItemsMessage,\n      items,\n      hidePerPageOptions = true\n    } = this.props;\n    const { page, sort } = this.state;\n\n    return (\n      <EuiBasicTable\n        noItemsMessage={noItemsMessage}\n        items={this.getCurrentItems()}\n        columns={columns}\n        pagination={{\n          hidePerPageOptions,\n          totalItemCount: items.length,\n          pageIndex: page.index,\n          pageSize: page.size\n        }}\n        sorting={{ sort }}\n        onChange={this.onTableChange}\n      />\n    );\n  }\n}\n"]}]}