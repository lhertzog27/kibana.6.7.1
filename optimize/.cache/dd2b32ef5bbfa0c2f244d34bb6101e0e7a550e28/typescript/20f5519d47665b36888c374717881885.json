{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/view_switcher.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/view_switcher.tsx","mtime":1567631711982},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { EuiButtonGroup } from '@elastic/eui';\nimport { injectI18n } from '@kbn/i18n/react';\nimport React from 'react';\nexport var ViewSwitcher = injectI18n(function (_a) {\n    var view = _a.view, onChange = _a.onChange, intl = _a.intl;\n    var buttons = [\n        {\n            id: 'map',\n            label: intl.formatMessage({\n                id: 'xpack.infra.viewSwitcher.mapViewLabel',\n                defaultMessage: 'Map View',\n            }),\n            iconType: 'apps',\n        },\n        {\n            id: 'table',\n            label: intl.formatMessage({\n                id: 'xpack.infra.viewSwitcher.tableViewLabel',\n                defaultMessage: 'Table View',\n            }),\n            iconType: 'editorUnorderedList',\n        },\n    ];\n    return (React.createElement(EuiButtonGroup, { legend: intl.formatMessage({\n            id: 'xpack.infra.viewSwitcher.lenged',\n            defaultMessage: 'Switch between table and map view',\n        }), options: buttons, color: \"primary\", idSelected: view, onChange: onChange }));\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/view_switcher.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/view_switcher.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAC9C,OAAO,EAAgB,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC3D,OAAO,KAAK,MAAM,OAAO,CAAC;AAQ1B,MAAM,CAAC,IAAM,YAAY,GAAG,UAAU,CAAC,UAAC,EAA+B;QAA7B,cAAI,EAAE,sBAAQ,EAAE,cAAI;IAC5D,IAAM,OAAO,GAAG;QACd;YACE,EAAE,EAAE,KAAK;YACT,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC;gBACxB,EAAE,EAAE,uCAAuC;gBAC3C,cAAc,EAAE,UAAU;aAC3B,CAAC;YACF,QAAQ,EAAE,MAAM;SACjB;QACD;YACE,EAAE,EAAE,OAAO;YACX,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC;gBACxB,EAAE,EAAE,yCAAyC;gBAC7C,cAAc,EAAE,YAAY;aAC7B,CAAC;YACF,QAAQ,EAAE,qBAAqB;SAChC;KACF,CAAC;IACF,OAAO,CACL,oBAAC,cAAc,IACb,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC;YACzB,EAAE,EAAE,iCAAiC;YACrC,cAAc,EAAE,mCAAmC;SACpD,CAAC,EACF,OAAO,EAAE,OAAO,EAChB,KAAK,EAAC,SAAS,EACf,UAAU,EAAE,IAAI,EAChB,QAAQ,EAAE,QAAQ,GAClB,CACH,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiButtonGroup } from '@elastic/eui';\nimport { InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport React from 'react';\n\ninterface Props {\n  view: string;\n  onChange: (view: string) => void;\n  intl: InjectedIntl;\n}\n\nexport const ViewSwitcher = injectI18n(({ view, onChange, intl }: Props) => {\n  const buttons = [\n    {\n      id: 'map',\n      label: intl.formatMessage({\n        id: 'xpack.infra.viewSwitcher.mapViewLabel',\n        defaultMessage: 'Map View',\n      }),\n      iconType: 'apps',\n    },\n    {\n      id: 'table',\n      label: intl.formatMessage({\n        id: 'xpack.infra.viewSwitcher.tableViewLabel',\n        defaultMessage: 'Table View',\n      }),\n      iconType: 'editorUnorderedList',\n    },\n  ];\n  return (\n    <EuiButtonGroup\n      legend={intl.formatMessage({\n        id: 'xpack.infra.viewSwitcher.lenged',\n        defaultMessage: 'Switch between table and map view',\n      })}\n      options={buttons}\n      color=\"primary\"\n      idSelected={view}\n      onChange={onChange}\n    />\n  );\n});\n"]}]}