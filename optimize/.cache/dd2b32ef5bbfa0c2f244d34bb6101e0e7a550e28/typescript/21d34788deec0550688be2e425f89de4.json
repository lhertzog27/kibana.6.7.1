{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/PropertiesTable/NestedKeyValueTable.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/PropertiesTable/NestedKeyValueTable.tsx","mtime":1567631711866},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { isBoolean, isNumber, isObject } from 'lodash';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { NOT_AVAILABLE_LABEL } from 'x-pack/plugins/apm/common/i18n';\nimport { colors, fontFamilyCode, fontSizes, px, units } from '../../../style/variables';\nvar Table = styled.table(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  font-family: \", \";\\n  font-size: \", \";\\n  width: 100%;\\n\"], [\"\\n  font-family: \", \";\\n  font-size: \", \";\\n  width: 100%;\\n\"])), fontFamilyCode, fontSizes.small);\nvar Row = styled.tr(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  border-bottom: \", \" solid \", \";\\n  &:last-child {\\n    border: 0;\\n  }\\n\"], [\"\\n  border-bottom: \", \" solid \", \";\\n  &:last-child {\\n    border: 0;\\n  }\\n\"])), px(1), colors.gray4);\nvar Cell = styled.td(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n  vertical-align: top;\\n  padding: \", \" 0;\\n  line-height: 1.5;\\n\\n  \", \":first-child> & {\\n    padding-top: 0;\\n  }\\n\\n  \", \":last-child> & {\\n    padding-bottom: 0;\\n  }\\n\\n  &:first-child {\\n    width: \", \";\\n    font-weight: bold;\\n  }\\n\"], [\"\\n  vertical-align: top;\\n  padding: \", \" 0;\\n  line-height: 1.5;\\n\\n  \", \":first-child> & {\\n    padding-top: 0;\\n  }\\n\\n  \", \":last-child> & {\\n    padding-bottom: 0;\\n  }\\n\\n  &:first-child {\\n    width: \", \";\\n    font-weight: bold;\\n  }\\n\"])), px(units.half), Row, Row, px(units.unit * 20));\nvar EmptyValue = styled.span(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"\\n  color: \", \";\\n\"], [\"\\n  color: \", \";\\n\"])), colors.gray3);\nexport function FormattedKey(_a) {\n    var k = _a.k, value = _a.value;\n    if (value == null) {\n        return React.createElement(EmptyValue, null, k);\n    }\n    return React.createElement(React.Fragment, null, k);\n}\nexport function FormattedValue(_a) {\n    var value = _a.value;\n    if (isObject(value)) {\n        return React.createElement(\"pre\", null, JSON.stringify(value, null, 4));\n    }\n    else if (isBoolean(value) || isNumber(value)) {\n        return React.createElement(React.Fragment, null, String(value));\n    }\n    else if (!value) {\n        return React.createElement(EmptyValue, null, NOT_AVAILABLE_LABEL);\n    }\n    return React.createElement(React.Fragment, null, value);\n}\nexport function NestedValue(_a) {\n    var parentKey = _a.parentKey, value = _a.value, depth = _a.depth, keySorter = _a.keySorter;\n    if (depth > 0 && isObject(value)) {\n        return (React.createElement(NestedKeyValueTable, { data: value, parentKey: parentKey, keySorter: keySorter, depth: depth - 1 }));\n    }\n    return React.createElement(FormattedValue, { value: value });\n}\nexport function NestedKeyValueTable(_a) {\n    var data = _a.data, parentKey = _a.parentKey, _b = _a.keySorter, keySorter = _b === void 0 ? Object.keys : _b, _c = _a.depth, depth = _c === void 0 ? 0 : _c;\n    return (React.createElement(Table, null,\n        React.createElement(\"tbody\", null, keySorter(data, parentKey).map(function (key) { return (React.createElement(Row, { key: key },\n            React.createElement(Cell, null,\n                React.createElement(FormattedKey, { k: key, value: data[key] })),\n            React.createElement(Cell, null,\n                React.createElement(NestedValue, { parentKey: key, value: data[key], keySorter: keySorter, depth: depth })))); }))));\n}\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/PropertiesTable/NestedKeyValueTable.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/PropertiesTable/NestedKeyValueTable.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { isBoolean, isNumber, isObject } from 'lodash';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { NOT_AVAILABLE_LABEL } from 'x-pack/plugins/apm/common/i18n';\nimport { StringMap } from '../../../../typings/common';\nimport {\n  colors,\n  fontFamilyCode,\n  fontSizes,\n  px,\n  units\n} from '../../../style/variables';\n\nexport type KeySorter = (data: StringMap, parentKey?: string) => string[];\n\nconst Table = styled.table`\n  font-family: ${fontFamilyCode};\n  font-size: ${fontSizes.small};\n  width: 100%;\n`;\n\nconst Row = styled.tr`\n  border-bottom: ${px(1)} solid ${colors.gray4};\n  &:last-child {\n    border: 0;\n  }\n`;\n\nconst Cell = styled.td`\n  vertical-align: top;\n  padding: ${px(units.half)} 0;\n  line-height: 1.5;\n\n  ${Row}:first-child> & {\n    padding-top: 0;\n  }\n\n  ${Row}:last-child> & {\n    padding-bottom: 0;\n  }\n\n  &:first-child {\n    width: ${px(units.unit * 20)};\n    font-weight: bold;\n  }\n`;\n\nconst EmptyValue = styled.span`\n  color: ${colors.gray3};\n`;\n\nexport function FormattedKey({\n  k,\n  value\n}: {\n  k: string;\n  value: unknown;\n}): JSX.Element {\n  if (value == null) {\n    return <EmptyValue>{k}</EmptyValue>;\n  }\n\n  return <React.Fragment>{k}</React.Fragment>;\n}\n\nexport function FormattedValue({ value }: { value: any }): JSX.Element {\n  if (isObject(value)) {\n    return <pre>{JSON.stringify(value, null, 4)}</pre>;\n  } else if (isBoolean(value) || isNumber(value)) {\n    return <React.Fragment>{String(value)}</React.Fragment>;\n  } else if (!value) {\n    return <EmptyValue>{NOT_AVAILABLE_LABEL}</EmptyValue>;\n  }\n\n  return <React.Fragment>{value}</React.Fragment>;\n}\n\nexport function NestedValue({\n  parentKey,\n  value,\n  depth,\n  keySorter\n}: {\n  value: StringMap;\n  depth: number;\n  parentKey?: string;\n  keySorter?: KeySorter;\n}): JSX.Element {\n  if (depth > 0 && isObject(value)) {\n    return (\n      <NestedKeyValueTable\n        data={value}\n        parentKey={parentKey}\n        keySorter={keySorter}\n        depth={depth - 1}\n      />\n    );\n  }\n\n  return <FormattedValue value={value} />;\n}\n\nexport function NestedKeyValueTable({\n  data,\n  parentKey,\n  keySorter = Object.keys,\n  depth = 0\n}: {\n  data: StringMap<any>;\n  parentKey?: string;\n  keySorter?: KeySorter;\n  depth?: number;\n}): JSX.Element {\n  return (\n    <Table>\n      <tbody>\n        {keySorter(data, parentKey).map(key => (\n          <Row key={key}>\n            <Cell>\n              <FormattedKey k={key} value={data[key]} />\n            </Cell>\n            <Cell>\n              <NestedValue\n                parentKey={key}\n                value={data[key]}\n                keySorter={keySorter}\n                depth={depth}\n              />\n            </Cell>\n          </Row>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n"]}]}