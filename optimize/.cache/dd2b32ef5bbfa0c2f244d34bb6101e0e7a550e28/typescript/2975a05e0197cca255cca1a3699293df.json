{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/share/show_share_context_menu.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/share/show_share_context_menu.tsx","mtime":1567631711753},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ShareContextMenu } from './components/share_context_menu';\nimport { EuiWrappingPopover } from '@elastic/eui';\nimport { I18nContext } from 'ui/i18n';\nvar isOpen = false;\nvar container = document.createElement('div');\nvar onClose = function () {\n    ReactDOM.unmountComponentAtNode(container);\n    isOpen = false;\n};\nexport function showShareContextMenu(_a) {\n    var anchorElement = _a.anchorElement, allowEmbed = _a.allowEmbed, getUnhashableStates = _a.getUnhashableStates, objectId = _a.objectId, objectType = _a.objectType, shareContextMenuExtensions = _a.shareContextMenuExtensions, sharingData = _a.sharingData, isDirty = _a.isDirty;\n    if (isOpen) {\n        onClose();\n        return;\n    }\n    isOpen = true;\n    document.body.appendChild(container);\n    var element = (React.createElement(I18nContext, null,\n        React.createElement(EuiWrappingPopover, { className: \"kuiLocalNav__popover\", anchorClassName: \"kuiLocalNav__popoverAnchor\", id: \"sharePopover\", button: anchorElement, isOpen: true, closePopover: onClose, panelPaddingSize: \"none\", withTitle: true },\n            React.createElement(ShareContextMenu, { allowEmbed: allowEmbed, getUnhashableStates: getUnhashableStates, objectId: objectId, objectType: objectType, shareContextMenuExtensions: shareContextMenuExtensions, sharingData: sharingData, isDirty: isDirty, onClose: onClose }))));\n    ReactDOM.render(element, container);\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/share/show_share_context_menu.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/share/show_share_context_menu.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,WAAW,CAAC;AAEjC,OAAO,EAAE,gBAAgB,EAAE,MAAM,iCAAiC,CAAC;AAGnE,OAAO,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAC;AAElD,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AAEtC,IAAI,MAAM,GAAG,KAAK,CAAC;AAEnB,IAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAEhD,IAAM,OAAO,GAAG;IACd,QAAQ,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;IAC3C,MAAM,GAAG,KAAK,CAAC;AACjB,CAAC,CAAC;AAaF,MAAM,UAAU,oBAAoB,CAAC,EASzB;QARV,gCAAa,EACb,0BAAU,EACV,4CAAmB,EACnB,sBAAQ,EACR,0BAAU,EACV,0DAA0B,EAC1B,4BAAW,EACX,oBAAO;IAEP,IAAI,MAAM,EAAE;QACV,OAAO,EAAE,CAAC;QACV,OAAO;KACR;IAED,MAAM,GAAG,IAAI,CAAC;IAEd,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACrC,IAAM,OAAO,GAAG,CACd,oBAAC,WAAW;QACV,oBAAC,kBAAkB,IACjB,SAAS,EAAC,sBAAsB,EAChC,eAAe,EAAC,4BAA4B,EAC5C,EAAE,EAAC,cAAc,EACjB,MAAM,EAAE,aAAa,EACrB,MAAM,EAAE,IAAI,EACZ,YAAY,EAAE,OAAO,EACrB,gBAAgB,EAAC,MAAM,EACvB,SAAS;YAET,oBAAC,gBAAgB,IACf,UAAU,EAAE,UAAU,EACtB,mBAAmB,EAAE,mBAAmB,EACxC,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,UAAU,EACtB,0BAA0B,EAAE,0BAA0B,EACtD,WAAW,EAAE,WAAW,EACxB,OAAO,EAAE,OAAO,EAChB,OAAO,EAAE,OAAO,GAChB,CACiB,CACT,CACf,CAAC;IACF,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACtC,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ShareContextMenu } from './components/share_context_menu';\nimport { ShareActionProvider } from './share_action';\n\nimport { EuiWrappingPopover } from '@elastic/eui';\n\nimport { I18nContext } from 'ui/i18n';\n\nlet isOpen = false;\n\nconst container = document.createElement('div');\n\nconst onClose = () => {\n  ReactDOM.unmountComponentAtNode(container);\n  isOpen = false;\n};\n\ninterface ShowProps {\n  anchorElement: any;\n  allowEmbed: boolean;\n  getUnhashableStates: () => object[];\n  objectId?: string;\n  objectType: string;\n  shareContextMenuExtensions?: ShareActionProvider[];\n  sharingData: any;\n  isDirty: boolean;\n}\n\nexport function showShareContextMenu({\n  anchorElement,\n  allowEmbed,\n  getUnhashableStates,\n  objectId,\n  objectType,\n  shareContextMenuExtensions,\n  sharingData,\n  isDirty,\n}: ShowProps) {\n  if (isOpen) {\n    onClose();\n    return;\n  }\n\n  isOpen = true;\n\n  document.body.appendChild(container);\n  const element = (\n    <I18nContext>\n      <EuiWrappingPopover\n        className=\"kuiLocalNav__popover\"\n        anchorClassName=\"kuiLocalNav__popoverAnchor\"\n        id=\"sharePopover\"\n        button={anchorElement}\n        isOpen={true}\n        closePopover={onClose}\n        panelPaddingSize=\"none\"\n        withTitle\n      >\n        <ShareContextMenu\n          allowEmbed={allowEmbed}\n          getUnhashableStates={getUnhashableStates}\n          objectId={objectId}\n          objectType={objectType}\n          shareContextMenuExtensions={shareContextMenuExtensions}\n          sharingData={sharingData}\n          isDirty={isDirty}\n          onClose={onClose}\n        />\n      </EuiWrappingPopover>\n    </I18nContext>\n  );\n  ReactDOM.render(element, container);\n}\n"]}]}