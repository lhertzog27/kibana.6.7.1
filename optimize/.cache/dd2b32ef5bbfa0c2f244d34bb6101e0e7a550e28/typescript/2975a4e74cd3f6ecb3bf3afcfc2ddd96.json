{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/beats/rest_beats_adapter.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/beats/rest_beats_adapter.ts","mtime":1567631711881},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nvar RestBeatsAdapter = /** @class */ (function () {\n    function RestBeatsAdapter(REST) {\n        this.REST = REST;\n    }\n    RestBeatsAdapter.prototype.get = function (id) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.REST.get(\"/api/beats/agent/\" + id)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        e_1 = _a.sent();\n                        return [2 /*return*/, null];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RestBeatsAdapter.prototype.getBeatWithToken = function (enrollmentToken) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.REST.get(\"/api/beats/agent/unknown/\" + enrollmentToken)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        e_2 = _a.sent();\n                        return [2 /*return*/, null];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RestBeatsAdapter.prototype.getAll = function (ESQuery) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var e_3;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.REST.get('/api/beats/agents/all', { ESQuery: ESQuery })];\n                    case 1: return [2 /*return*/, (_a.sent()).beats];\n                    case 2:\n                        e_3 = _a.sent();\n                        return [2 /*return*/, []];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RestBeatsAdapter.prototype.getBeatsWithTag = function (tagId) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var e_4;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.REST.get(\"/api/beats/agents/tag/\" + tagId)];\n                    case 1: return [2 /*return*/, (_a.sent()).beats];\n                    case 2:\n                        e_4 = _a.sent();\n                        return [2 /*return*/, []];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RestBeatsAdapter.prototype.update = function (id, beatData) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.REST.put(\"/api/beats/agent/\" + id, beatData)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    RestBeatsAdapter.prototype.removeTagsFromBeats = function (removals) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.REST.post(\"/api/beats/agents_tags/removals\", {\n                            removals: removals,\n                        })];\n                    case 1: return [2 /*return*/, (_a.sent()).removals];\n                }\n            });\n        });\n    };\n    RestBeatsAdapter.prototype.assignTagsToBeats = function (assignments) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.REST.post(\"/api/beats/agents_tags/assignments\", {\n                            assignments: assignments,\n                        })];\n                    case 1: return [2 /*return*/, (_a.sent()).assignments];\n                }\n            });\n        });\n    };\n    return RestBeatsAdapter;\n}());\nexport { RestBeatsAdapter };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/beats/rest_beats_adapter.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/beats/rest_beats_adapter.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAUH;IACE,0BAA6B,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;IAAG,CAAC;IAExC,8BAAG,GAAhB,UAAiB,EAAU;+CAAG,OAAO;;;;;;wBAE1B,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,sBAAoB,EAAI,CAAC,EAAA;4BAA5D,sBAAO,SAAqD,EAAC;;;wBAE7D,sBAAO,IAAI,EAAC;;;;;KAEf;IAEY,2CAAgB,GAA7B,UAA8B,eAAuB;+CAAG,OAAO;;;;;;wBAEpD,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,8BAA4B,eAAiB,CAAC,EAAA;4BAAjF,sBAAO,SAA0E,EAAC;;;wBAElF,sBAAO,IAAI,EAAC;;;;;KAEf;IAEY,iCAAM,GAAnB,UAAoB,OAAgB;+CAAG,OAAO;;;;;;wBAElC,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,uBAAuB,EAAE,EAAE,OAAO,SAAA,EAAE,CAAC,EAAA;4BAAtF,sBAAO,CAAC,SAA8E,CAAC,CAAC,KAAK,EAAC;;;wBAE9F,sBAAO,EAAE,EAAC;;;;;KAEb;IAEY,0CAAe,GAA5B,UAA6B,KAAa;+CAAG,OAAO;;;;;;wBAExC,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,2BAAyB,KAAO,CAAC,EAAA;4BAAlF,sBAAO,CAAC,SAA0E,CAAC,CAAC,KAAK,EAAC;;;wBAE1F,sBAAO,EAAE,EAAC;;;;;KAEb;IAEY,iCAAM,GAAnB,UAAoB,EAAU,EAAE,QAAyB;+CAAG,OAAO;;;4BACjE,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,sBAAoB,EAAI,EAAE,QAAQ,CAAC,EAAA;;wBAA1E,SAA0E,CAAC;wBAC3E,sBAAO,IAAI,EAAC;;;;KACb;IAEY,8CAAmB,GAAhC,UAAiC,QAA8B;+CAAG,OAAO;;;4BAC/D,qBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAC1B,iCAAiC,EACjC;4BACE,QAAQ,UAAA;yBACT,CACF,EAAA;4BALD,sBAAO,CAAC,SAKP,CAAC,CAAC,QAAQ,EAAC;;;;KACb;IAEY,4CAAiB,GAA9B,UAA+B,WAAiC;+CAAG,OAAO;;;4BAChE,qBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAC1B,oCAAoC,EACpC;4BACE,WAAW,aAAA;yBACZ,CACF,EAAA;4BALD,sBAAO,CAAC,SAKP,CAAC,CAAC,WAAW,EAAC;;;;KAChB;IACH,uBAAC;AAAD,CAAC,AAzDD,IAyDC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { CMBeat } from '../../../../common/domain_types';\nimport { RestAPIAdapter } from '../rest_api/adapter_types';\nimport {\n  BeatsRemovalReturn,\n  BeatsTagAssignment,\n  CMAssignmentReturn,\n  CMBeatsAdapter,\n} from './adapter_types';\nexport class RestBeatsAdapter implements CMBeatsAdapter {\n  constructor(private readonly REST: RestAPIAdapter) {}\n\n  public async get(id: string): Promise<CMBeat | null> {\n    try {\n      return await this.REST.get<CMBeat>(`/api/beats/agent/${id}`);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public async getBeatWithToken(enrollmentToken: string): Promise<CMBeat | null> {\n    try {\n      return await this.REST.get<CMBeat>(`/api/beats/agent/unknown/${enrollmentToken}`);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public async getAll(ESQuery?: string): Promise<CMBeat[]> {\n    try {\n      return (await this.REST.get<{ beats: CMBeat[] }>('/api/beats/agents/all', { ESQuery })).beats;\n    } catch (e) {\n      return [];\n    }\n  }\n\n  public async getBeatsWithTag(tagId: string): Promise<CMBeat[]> {\n    try {\n      return (await this.REST.get<{ beats: CMBeat[] }>(`/api/beats/agents/tag/${tagId}`)).beats;\n    } catch (e) {\n      return [];\n    }\n  }\n\n  public async update(id: string, beatData: Partial<CMBeat>): Promise<boolean> {\n    await this.REST.put<{ success: true }>(`/api/beats/agent/${id}`, beatData);\n    return true;\n  }\n\n  public async removeTagsFromBeats(removals: BeatsTagAssignment[]): Promise<BeatsRemovalReturn[]> {\n    return (await this.REST.post<{ removals: BeatsRemovalReturn[] }>(\n      `/api/beats/agents_tags/removals`,\n      {\n        removals,\n      }\n    )).removals;\n  }\n\n  public async assignTagsToBeats(assignments: BeatsTagAssignment[]): Promise<CMAssignmentReturn[]> {\n    return (await this.REST.post<{ assignments: CMAssignmentReturn[] }>(\n      `/api/beats/agents_tags/assignments`,\n      {\n        assignments,\n      }\n    )).assignments;\n  }\n}\n"]}]}