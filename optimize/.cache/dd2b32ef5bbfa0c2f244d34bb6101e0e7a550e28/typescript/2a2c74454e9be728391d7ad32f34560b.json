{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/logs/with_log_position.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/logs/with_log_position.tsx","mtime":1567631711983},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { pickTimeKey } from '../../../common/time';\nimport { logPositionActions, logPositionSelectors } from '../../store';\nimport { asChildFunctionRenderer } from '../../utils/typed_react';\nimport { bindPlainActionCreators } from '../../utils/typed_redux';\nimport { replaceStateKeyInQueryString, UrlStateContainer } from '../../utils/url_state';\nexport var withLogPosition = connect(function (state) { return ({\n    firstVisiblePosition: logPositionSelectors.selectFirstVisiblePosition(state),\n    isAutoReloading: logPositionSelectors.selectIsAutoReloading(state),\n    lastVisiblePosition: logPositionSelectors.selectFirstVisiblePosition(state),\n    targetPosition: logPositionSelectors.selectTargetPosition(state),\n    urlState: selectPositionUrlState(state),\n    visibleTimeInterval: logPositionSelectors.selectVisibleTimeInterval(state),\n    visibleMidpoint: logPositionSelectors.selectVisibleMidpointOrTarget(state),\n    visibleMidpointTime: logPositionSelectors.selectVisibleMidpointOrTargetTime(state),\n}); }, bindPlainActionCreators({\n    jumpToTargetPosition: logPositionActions.jumpToTargetPosition,\n    jumpToTargetPositionTime: logPositionActions.jumpToTargetPositionTime,\n    reportVisiblePositions: logPositionActions.reportVisiblePositions,\n    reportVisibleSummary: logPositionActions.reportVisibleSummary,\n    startLiveStreaming: logPositionActions.startAutoReload,\n    stopLiveStreaming: logPositionActions.stopAutoReload,\n}));\nexport var WithLogPosition = asChildFunctionRenderer(withLogPosition, {\n    onCleanup: function (_a) {\n        var stopLiveStreaming = _a.stopLiveStreaming;\n        return stopLiveStreaming();\n    },\n});\nexport var WithLogPositionUrlState = function () { return (React.createElement(WithLogPosition, null, function (_a) {\n    var jumpToTargetPosition = _a.jumpToTargetPosition, jumpToTargetPositionTime = _a.jumpToTargetPositionTime, startLiveStreaming = _a.startLiveStreaming, stopLiveStreaming = _a.stopLiveStreaming, urlState = _a.urlState;\n    return (React.createElement(UrlStateContainer, { urlState: urlState, urlStateKey: \"logPosition\", mapToUrlState: mapToUrlState, onChange: function (newUrlState) {\n            if (newUrlState && newUrlState.position) {\n                jumpToTargetPosition(newUrlState.position);\n            }\n            if (newUrlState && newUrlState.streamLive) {\n                startLiveStreaming(5000);\n            }\n            else if (newUrlState &&\n                typeof newUrlState.streamLive !== 'undefined' &&\n                !newUrlState.streamLive) {\n                stopLiveStreaming();\n            }\n        }, onInitialize: function (initialUrlState) {\n            if (initialUrlState && initialUrlState.position) {\n                jumpToTargetPosition(initialUrlState.position);\n            }\n            else {\n                jumpToTargetPositionTime(Date.now());\n            }\n            if (initialUrlState && initialUrlState.streamLive) {\n                startLiveStreaming(5000);\n            }\n        } }));\n})); };\nvar selectPositionUrlState = createSelector(logPositionSelectors.selectVisibleMidpointOrTarget, logPositionSelectors.selectIsAutoReloading, function (position, streamLive) { return ({\n    position: position ? pickTimeKey(position) : null,\n    streamLive: streamLive,\n}); });\nvar mapToUrlState = function (value) {\n    return value\n        ? {\n            position: mapToPositionUrlState(value.position),\n            streamLive: mapToStreamLiveUrlState(value.streamLive),\n        }\n        : undefined;\n};\nvar mapToPositionUrlState = function (value) {\n    return value && (typeof value.time === 'number' && typeof value.tiebreaker === 'number')\n        ? pickTimeKey(value)\n        : undefined;\n};\nvar mapToStreamLiveUrlState = function (value) { return (typeof value === 'boolean' ? value : undefined); };\nexport var replaceLogPositionInQueryString = function (time) {\n    return Number.isNaN(time)\n        ? function (value) { return value; }\n        : replaceStateKeyInQueryString('logPosition', {\n            position: {\n                time: time,\n                tiebreaker: 0,\n            },\n        });\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/logs/with_log_position.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/logs/with_log_position.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { pickTimeKey } from '../../../common/time';\nimport { logPositionActions, logPositionSelectors, State } from '../../store';\nimport { asChildFunctionRenderer } from '../../utils/typed_react';\nimport { bindPlainActionCreators } from '../../utils/typed_redux';\nimport { replaceStateKeyInQueryString, UrlStateContainer } from '../../utils/url_state';\n\nexport const withLogPosition = connect(\n  (state: State) => ({\n    firstVisiblePosition: logPositionSelectors.selectFirstVisiblePosition(state),\n    isAutoReloading: logPositionSelectors.selectIsAutoReloading(state),\n    lastVisiblePosition: logPositionSelectors.selectFirstVisiblePosition(state),\n    targetPosition: logPositionSelectors.selectTargetPosition(state),\n    urlState: selectPositionUrlState(state),\n    visibleTimeInterval: logPositionSelectors.selectVisibleTimeInterval(state),\n    visibleMidpoint: logPositionSelectors.selectVisibleMidpointOrTarget(state),\n    visibleMidpointTime: logPositionSelectors.selectVisibleMidpointOrTargetTime(state),\n  }),\n  bindPlainActionCreators({\n    jumpToTargetPosition: logPositionActions.jumpToTargetPosition,\n    jumpToTargetPositionTime: logPositionActions.jumpToTargetPositionTime,\n    reportVisiblePositions: logPositionActions.reportVisiblePositions,\n    reportVisibleSummary: logPositionActions.reportVisibleSummary,\n    startLiveStreaming: logPositionActions.startAutoReload,\n    stopLiveStreaming: logPositionActions.stopAutoReload,\n  })\n);\n\nexport const WithLogPosition = asChildFunctionRenderer(withLogPosition, {\n  onCleanup: ({ stopLiveStreaming }) => stopLiveStreaming(),\n});\n\n/**\n * Url State\n */\n\ninterface LogPositionUrlState {\n  position?: ReturnType<typeof logPositionSelectors.selectVisibleMidpointOrTarget>;\n  streamLive?: ReturnType<typeof logPositionSelectors.selectIsAutoReloading>;\n}\n\nexport const WithLogPositionUrlState = () => (\n  <WithLogPosition>\n    {({\n      jumpToTargetPosition,\n      jumpToTargetPositionTime,\n      startLiveStreaming,\n      stopLiveStreaming,\n      urlState,\n    }) => (\n      <UrlStateContainer\n        urlState={urlState}\n        urlStateKey=\"logPosition\"\n        mapToUrlState={mapToUrlState}\n        onChange={newUrlState => {\n          if (newUrlState && newUrlState.position) {\n            jumpToTargetPosition(newUrlState.position);\n          }\n          if (newUrlState && newUrlState.streamLive) {\n            startLiveStreaming(5000);\n          } else if (\n            newUrlState &&\n            typeof newUrlState.streamLive !== 'undefined' &&\n            !newUrlState.streamLive\n          ) {\n            stopLiveStreaming();\n          }\n        }}\n        onInitialize={initialUrlState => {\n          if (initialUrlState && initialUrlState.position) {\n            jumpToTargetPosition(initialUrlState.position);\n          } else {\n            jumpToTargetPositionTime(Date.now());\n          }\n          if (initialUrlState && initialUrlState.streamLive) {\n            startLiveStreaming(5000);\n          }\n        }}\n      />\n    )}\n  </WithLogPosition>\n);\n\nconst selectPositionUrlState = createSelector(\n  logPositionSelectors.selectVisibleMidpointOrTarget,\n  logPositionSelectors.selectIsAutoReloading,\n  (position, streamLive) => ({\n    position: position ? pickTimeKey(position) : null,\n    streamLive,\n  })\n);\n\nconst mapToUrlState = (value: any): LogPositionUrlState | undefined =>\n  value\n    ? {\n        position: mapToPositionUrlState(value.position),\n        streamLive: mapToStreamLiveUrlState(value.streamLive),\n      }\n    : undefined;\n\nconst mapToPositionUrlState = (value: any) =>\n  value && (typeof value.time === 'number' && typeof value.tiebreaker === 'number')\n    ? pickTimeKey(value)\n    : undefined;\n\nconst mapToStreamLiveUrlState = (value: any) => (typeof value === 'boolean' ? value : undefined);\n\nexport const replaceLogPositionInQueryString = (time: number) =>\n  Number.isNaN(time)\n    ? (value: string) => value\n    : replaceStateKeyInQueryString<LogPositionUrlState>('logPosition', {\n        position: {\n          time,\n          tiebreaker: 0,\n        },\n      });\n"]}]}