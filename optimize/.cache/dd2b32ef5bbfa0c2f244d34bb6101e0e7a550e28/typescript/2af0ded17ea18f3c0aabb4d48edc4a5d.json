{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/chrome/directives/header_global_nav/components/header_nav_control.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/directives/header_global_nav/components/header_nav_control.tsx","mtime":1567631711711},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React from 'react';\nvar HeaderNavControl = /** @class */ (function (_super) {\n    tslib_1.__extends(HeaderNavControl, _super);\n    function HeaderNavControl() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.ref = React.createRef();\n        return _this;\n    }\n    HeaderNavControl.prototype.componentDidMount = function () {\n        if (!this.ref.current) {\n            throw new Error('<NavControl /> mounted without ref');\n        }\n        this.unrender = this.props.navControl.render(this.ref.current) || undefined;\n    };\n    HeaderNavControl.prototype.componentDidUpdate = function (prevProps) {\n        if (this.props.navControl.render === prevProps.navControl.render) {\n            return;\n        }\n        if (!this.ref.current) {\n            throw new Error('<NavControl /> updated without ref');\n        }\n        if (this.unrender) {\n            this.unrender();\n        }\n        this.unrender = this.props.navControl.render(this.ref.current) || undefined;\n    };\n    HeaderNavControl.prototype.componentWillUnmount = function () {\n        if (this.unrender) {\n            this.unrender();\n        }\n    };\n    HeaderNavControl.prototype.render = function () {\n        return React.createElement(\"div\", { ref: this.ref });\n    };\n    return HeaderNavControl;\n}(React.Component));\nexport { HeaderNavControl };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/directives/header_global_nav/components/header_nav_control.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/chrome/directives/header_global_nav/components/header_nav_control.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAO1B;IAAsC,4CAAsB;IAA5D;QAAA,qEAqCC;QApCkB,SAAG,GAAG,KAAK,CAAC,SAAS,EAAkB,CAAC;;IAoC3D,CAAC;IAjCQ,4CAAiB,GAAxB;QACE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;SACvD;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC;IAC9E,CAAC;IAEM,6CAAkB,GAAzB,UAA0B,SAAgB;QACxC,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,KAAK,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE;YAChE,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;SACvD;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC;IAC9E,CAAC;IAEM,+CAAoB,GAA3B;QACE,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;IACH,CAAC;IAEM,iCAAM,GAAb;QACE,OAAO,6BAAK,GAAG,EAAE,IAAI,CAAC,GAAG,GAAI,CAAC;IAChC,CAAC;IACH,uBAAC;AAAD,CAAC,AArCD,CAAsC,KAAK,CAAC,SAAS,GAqCpD","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { NavControl } from '../';\n\ninterface Props {\n  navControl: NavControl;\n}\n\nexport class HeaderNavControl extends React.Component<Props> {\n  private readonly ref = React.createRef<HTMLDivElement>();\n  private unrender?: () => void;\n\n  public componentDidMount() {\n    if (!this.ref.current) {\n      throw new Error('<NavControl /> mounted without ref');\n    }\n\n    this.unrender = this.props.navControl.render(this.ref.current) || undefined;\n  }\n\n  public componentDidUpdate(prevProps: Props) {\n    if (this.props.navControl.render === prevProps.navControl.render) {\n      return;\n    }\n\n    if (!this.ref.current) {\n      throw new Error('<NavControl /> updated without ref');\n    }\n\n    if (this.unrender) {\n      this.unrender();\n    }\n\n    this.unrender = this.props.navControl.render(this.ref.current) || undefined;\n  }\n\n  public componentWillUnmount() {\n    if (this.unrender) {\n      this.unrender();\n    }\n  }\n\n  public render() {\n    return <div ref={this.ref} />;\n  }\n}\n"]}]}