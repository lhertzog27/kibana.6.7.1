{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/login.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/login.tsx","mtime":1567631712299},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { i18n } from '@kbn/i18n';\nimport { get } from 'lodash';\nimport { parseNext } from 'plugins/security/lib/parse_next';\nimport { LoginPage } from 'plugins/security/views/login/components';\n// @ts-ignore\nimport template from 'plugins/security/views/login/login.html';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport 'ui/autoload/styles';\nimport chrome from 'ui/chrome';\nimport { I18nContext } from 'ui/i18n';\nimport { parse } from 'url';\nimport './login.less';\nvar messageMap = {\n    SESSION_EXPIRED: i18n.translate('xpack.security.login.sessionExpiredDescription', {\n        defaultMessage: 'Your session has timed out. Please log in again.',\n    }),\n};\nchrome\n    .setVisible(false)\n    .setRootTemplate(template)\n    .setRootController('login', function ($scope, $http, $window, secureCookies, loginState) {\n    var basePath = chrome.getBasePath();\n    var next = parseNext($window.location.href, basePath);\n    var isSecure = !!$window.location.protocol.match(/^https/);\n    $scope.$$postDigest(function () {\n        var domNode = document.getElementById('reactLoginRoot');\n        var msgQueryParam = parse($window.location.href, true).query.msg || '';\n        render(React.createElement(I18nContext, null,\n            React.createElement(LoginPage, { http: $http, window: $window, infoMessage: get(messageMap, msgQueryParam), loginState: loginState, isSecureConnection: isSecure, requiresSecureConnection: secureCookies, next: next })), domNode);\n    });\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/login.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/login.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAC7B,OAAO,EAAE,SAAS,EAAE,MAAM,iCAAiC,CAAC;AAC5D,OAAO,EAAE,SAAS,EAAE,MAAM,yCAAyC,CAAC;AACpE,aAAa;AACb,OAAO,QAAQ,MAAM,yCAAyC,CAAC;AAC/D,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AACnC,OAAO,oBAAoB,CAAC;AAC5B,OAAO,MAAM,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AACtC,OAAO,EAAE,KAAK,EAAE,MAAM,KAAK,CAAC;AAE5B,OAAO,cAAc,CAAC;AACtB,IAAM,UAAU,GAAG;IACjB,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,gDAAgD,EAAE;QAChF,cAAc,EAAE,kDAAkD;KACnE,CAAC;CACH,CAAC;AAMD,MAAoB;KAClB,UAAU,CAAC,KAAK,CAAC;KACjB,eAAe,CAAC,QAAQ,CAAC;KACzB,iBAAiB,CAChB,OAAO,EACP,UACE,MAAiB,EACjB,KAAgB,EAChB,OAAkB,EAClB,aAAsB,EACtB,UAAsB;IAEtB,IAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;IACtC,IAAM,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACxD,IAAM,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAE7D,MAAM,CAAC,YAAY,CAAC;QAClB,IAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAE1D,IAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC;QAEzE,MAAM,CACJ,oBAAC,WAAW;YACV,oBAAC,SAAS,IACR,IAAI,EAAE,KAAK,EACX,MAAM,EAAE,OAAO,EACf,WAAW,EAAE,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC,EAC3C,UAAU,EAAE,UAAU,EACtB,kBAAkB,EAAE,QAAQ,EAC5B,wBAAwB,EAAE,aAAa,EACvC,IAAI,EAAE,IAAI,GACV,CACU,EACd,OAAO,CACR,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CACF,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { i18n } from '@kbn/i18n';\nimport { get } from 'lodash';\nimport { parseNext } from 'plugins/security/lib/parse_next';\nimport { LoginPage } from 'plugins/security/views/login/components';\n// @ts-ignore\nimport template from 'plugins/security/views/login/login.html';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport 'ui/autoload/styles';\nimport chrome from 'ui/chrome';\nimport { I18nContext } from 'ui/i18n';\nimport { parse } from 'url';\nimport { LoginState } from '../../../common/login_state';\nimport './login.less';\nconst messageMap = {\n  SESSION_EXPIRED: i18n.translate('xpack.security.login.sessionExpiredDescription', {\n    defaultMessage: 'Your session has timed out. Please log in again.',\n  }),\n};\n\ninterface AnyObject {\n  [key: string]: any;\n}\n\n(chrome as AnyObject)\n  .setVisible(false)\n  .setRootTemplate(template)\n  .setRootController(\n    'login',\n    (\n      $scope: AnyObject,\n      $http: AnyObject,\n      $window: AnyObject,\n      secureCookies: boolean,\n      loginState: LoginState\n    ) => {\n      const basePath = chrome.getBasePath();\n      const next = parseNext($window.location.href, basePath);\n      const isSecure = !!$window.location.protocol.match(/^https/);\n\n      $scope.$$postDigest(() => {\n        const domNode = document.getElementById('reactLoginRoot');\n\n        const msgQueryParam = parse($window.location.href, true).query.msg || '';\n\n        render(\n          <I18nContext>\n            <LoginPage\n              http={$http}\n              window={$window}\n              infoMessage={get(messageMap, msgQueryParam)}\n              loginState={loginState}\n              isSecureConnection={isSecure}\n              requiresSecureConnection={secureCookies}\n              next={next}\n            />\n          </I18nContext>,\n          domNode\n        );\n      });\n    }\n  );\n"]}]}