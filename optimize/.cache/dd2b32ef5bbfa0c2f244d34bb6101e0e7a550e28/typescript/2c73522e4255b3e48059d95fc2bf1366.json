{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_selector.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_selector.tsx","mtime":1567631712301},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiSelect } from '@elastic/eui';\nimport React, { Component } from 'react';\nimport { NO_PRIVILEGE_VALUE } from '../../../lib/constants';\nvar PrivilegeSelector = /** @class */ (function (_super) {\n    tslib_1.__extends(PrivilegeSelector, _super);\n    function PrivilegeSelector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {};\n        _this.onChange = function (e) {\n            _this.props.onChange(e.target.value);\n        };\n        return _this;\n    }\n    PrivilegeSelector.prototype.render = function () {\n        var _a = this.props, availablePrivileges = _a.availablePrivileges, value = _a.value, disabled = _a.disabled, allowNone = _a.allowNone, compressed = _a.compressed;\n        var options = [];\n        if (allowNone) {\n            options.push({ value: NO_PRIVILEGE_VALUE, text: 'none' });\n        }\n        options.push.apply(options, tslib_1.__spread(availablePrivileges.map(function (p) { return ({\n            value: p,\n            text: p,\n        }); })));\n        return (React.createElement(EuiSelect, { \"data-test-subj\": this.props['data-test-subj'], options: options, hasNoInitialSelection: !allowNone && !value, value: value || undefined, onChange: this.onChange, disabled: disabled, compressed: compressed }));\n    };\n    return PrivilegeSelector;\n}(Component));\nexport { PrivilegeSelector };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_selector.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_selector.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,KAAK,EAAE,EAAe,SAAS,EAAE,MAAM,OAAO,CAAC;AAEtD,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAY5D;IAAuC,6CAAoB;IAA3D;QAAA,qEAmCC;QAlCQ,WAAK,GAAG,EAAE,CAAC;QA+BX,cAAQ,GAAG,UAAC,CAAiC;YAClD,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAwB,CAAC,CAAC;QACzD,CAAC,CAAC;;IACJ,CAAC;IAhCQ,kCAAM,GAAb;QACQ,IAAA,eAA4E,EAA1E,4CAAmB,EAAE,gBAAK,EAAE,sBAAQ,EAAE,wBAAS,EAAE,0BAAU,CAAgB;QAEnF,IAAM,OAAO,GAAG,EAAE,CAAC;QAEnB,IAAI,SAAS,EAAE;YACb,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;SAC3D;QAED,OAAO,CAAC,IAAI,OAAZ,OAAO,mBACF,mBAAmB,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC;YAC/B,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;SACR,CAAC,EAH8B,CAG9B,CAAC,GACH;QAEF,OAAO,CACL,oBAAC,SAAS,sBACQ,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAC5C,OAAO,EAAE,OAAO,EAChB,qBAAqB,EAAE,CAAC,SAAS,IAAI,CAAC,KAAK,EAC3C,KAAK,EAAE,KAAK,IAAI,SAAS,EACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,UAAU,GACtB,CACH,CAAC;IACJ,CAAC;IAKH,wBAAC;AAAD,CAAC,AAnCD,CAAuC,SAAS,GAmC/C","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiSelect } from '@elastic/eui';\nimport React, { ChangeEvent, Component } from 'react';\nimport { KibanaPrivilege } from '../../../../../../../common/model/kibana_privilege';\nimport { NO_PRIVILEGE_VALUE } from '../../../lib/constants';\n\ninterface Props {\n  ['data-test-subj']: string;\n  availablePrivileges: KibanaPrivilege[];\n  onChange: (privilege: KibanaPrivilege) => void;\n  value: KibanaPrivilege | null;\n  allowNone?: boolean;\n  disabled?: boolean;\n  compressed?: boolean;\n}\n\nexport class PrivilegeSelector extends Component<Props, {}> {\n  public state = {};\n\n  public render() {\n    const { availablePrivileges, value, disabled, allowNone, compressed } = this.props;\n\n    const options = [];\n\n    if (allowNone) {\n      options.push({ value: NO_PRIVILEGE_VALUE, text: 'none' });\n    }\n\n    options.push(\n      ...availablePrivileges.map(p => ({\n        value: p,\n        text: p,\n      }))\n    );\n\n    return (\n      <EuiSelect\n        data-test-subj={this.props['data-test-subj']}\n        options={options}\n        hasNoInitialSelection={!allowNone && !value}\n        value={value || undefined}\n        onChange={this.onChange}\n        disabled={disabled}\n        compressed={compressed}\n      />\n    );\n  }\n\n  public onChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    this.props.onChange(e.target.value as KibanaPrivilege);\n  };\n}\n"]}]}