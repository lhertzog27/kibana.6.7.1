{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/metric_time/selectors.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/metric_time/selectors.ts","mtime":1567631711988},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["export var selectRangeTime = function (state) { return state.timeRange; };\nexport var selectIsAutoReloading = function (state) {\n    return state.updatePolicy.policy === 'interval';\n};\nexport var selectTimeUpdatePolicyInterval = function (state) {\n    return state.updatePolicy.policy === 'interval' ? state.updatePolicy.interval : null;\n};\nexport var selectRangeFromTimeRange = function (state) {\n    var _a = state.timeRange, to = _a.to, from = _a.from;\n    return to - from;\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/metric_time/selectors.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/metric_time/selectors.ts"],"names":[],"mappings":"AAOA,MAAM,CAAC,IAAM,eAAe,GAAG,UAAC,KAAsB,IAAK,OAAA,KAAK,CAAC,SAAS,EAAf,CAAe,CAAC;AAE3E,MAAM,CAAC,IAAM,qBAAqB,GAAG,UAAC,KAAsB;IAC1D,OAAA,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,UAAU;AAAxC,CAAwC,CAAC;AAE3C,MAAM,CAAC,IAAM,8BAA8B,GAAG,UAAC,KAAsB;IACnE,OAAA,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;AAA7E,CAA6E,CAAC;AAEhF,MAAM,CAAC,IAAM,wBAAwB,GAAG,UAAC,KAAsB;IACvD,IAAA,oBAA8B,EAA5B,UAAE,EAAE,cAAI,CAAqB;IACrC,OAAO,EAAE,GAAG,IAAI,CAAC;AACnB,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { MetricTimeState } from './reducer';\n\nexport const selectRangeTime = (state: MetricTimeState) => state.timeRange;\n\nexport const selectIsAutoReloading = (state: MetricTimeState) =>\n  state.updatePolicy.policy === 'interval';\n\nexport const selectTimeUpdatePolicyInterval = (state: MetricTimeState) =>\n  state.updatePolicy.policy === 'interval' ? state.updatePolicy.interval : null;\n\nexport const selectRangeFromTimeRange = (state: MetricTimeState) => {\n  const { to, from } = state.timeRange;\n  return to - from;\n};\n"]}]}