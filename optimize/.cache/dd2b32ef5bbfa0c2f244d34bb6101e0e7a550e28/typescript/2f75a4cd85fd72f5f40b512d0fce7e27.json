{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/wizard/type_selection/type_selection.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/wizard/type_selection/type_selection.tsx","mtime":1567631711602},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport { sortByOrder } from 'lodash';\nimport React from 'react';\nimport { EuiFieldSearch, EuiFlexGroup, EuiFlexItem, EuiKeyPadMenu, EuiKeyPadMenuItemButton, EuiModalHeader, EuiModalHeaderTitle, EuiScreenReaderOnly, EuiSpacer, EuiTitle, } from '@elastic/eui';\nimport { NewVisHelp } from './new_vis_help';\nimport { VisHelpText } from './vis_help_text';\nimport { VisTypeIcon } from './vis_type_icon';\nimport { memoizeLast } from 'ui/utils/memoize';\nvar TypeSelection = /** @class */ (function (_super) {\n    tslib_1.__extends(TypeSelection, _super);\n    function TypeSelection() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            highlightedType: null,\n            query: '',\n        };\n        _this.getFilteredVisTypes = memoizeLast(_this.filteredVisTypes);\n        _this.renderVisType = function (visType) {\n            var stage = {};\n            if (visType.stage === 'experimental') {\n                stage = {\n                    betaBadgeLabel: i18n.translate('kbn.visualize.newVisWizard.experimentalTitle', {\n                        defaultMessage: 'Experimental',\n                    }),\n                    betaBadgeTooltipContent: i18n.translate('kbn.visualize.newVisWizard.experimentalTooltip', {\n                        defaultMessage: 'This visualization is experimental.',\n                    }),\n                };\n            }\n            var isDisabled = _this.state.query !== '' && !visType.highlighted;\n            return (React.createElement(EuiKeyPadMenuItemButton, tslib_1.__assign({ key: visType.name, label: React.createElement(\"span\", { \"data-test-subj\": \"visTypeTitle\" }, visType.title), onClick: function () { return _this.props.onVisTypeSelected(visType); }, onFocus: function () { return _this.highlightType(visType); }, onMouseEnter: function () { return _this.highlightType(visType); }, onMouseLeave: function () { return _this.highlightType(null); }, onBlur: function () { return _this.highlightType(null); }, className: \"visNewVisDialog__type\", \"data-test-subj\": \"visType-\" + visType.name, \"data-vis-stage\": visType.stage, disabled: isDisabled, \"aria-describedby\": \"visTypeDescription-\" + visType.name }, stage),\n                React.createElement(VisTypeIcon, { visType: visType })));\n        };\n        _this.onQueryChange = function (ev) {\n            _this.setState({\n                query: ev.target.value,\n            });\n        };\n        return _this;\n    }\n    TypeSelection.prototype.render = function () {\n        var _a = this.state, query = _a.query, highlightedType = _a.highlightedType;\n        var visTypes = this.getFilteredVisTypes(this.props.visTypesRegistry, query);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(EuiModalHeader, null,\n                React.createElement(EuiModalHeaderTitle, null,\n                    React.createElement(FormattedMessage, { id: \"kbn.visualize.newVisWizard.title\", defaultMessage: \"New Visualization\" }))),\n            React.createElement(\"div\", { className: \"visNewVisDialog__body\" },\n                React.createElement(EuiFlexGroup, { gutterSize: \"xl\" },\n                    React.createElement(EuiFlexItem, null,\n                        React.createElement(EuiFlexGroup, { className: \"visNewVisDialog__list\", direction: \"column\", gutterSize: \"none\", responsive: false },\n                            React.createElement(EuiFlexItem, { grow: false, className: \"visNewVisDialog__searchWrapper\" },\n                                React.createElement(EuiFieldSearch, { placeholder: \"Filter\", value: query, onChange: this.onQueryChange, fullWidth: true, \"data-test-subj\": \"filterVisType\", \"aria-label\": i18n.translate('kbn.visualize.newVisWizard.filterVisTypeAriaLabel', {\n                                        defaultMessage: 'Filter for a visualization type',\n                                    }) })),\n                            React.createElement(EuiFlexItem, { grow: 1, className: \"visNewVisDialog__typesWrapper\" },\n                                React.createElement(EuiScreenReaderOnly, null,\n                                    React.createElement(\"span\", { \"aria-live\": \"polite\" }, query && (React.createElement(FormattedMessage, { id: \"kbn.visualize.newVisWizard.resultsFound\", defaultMessage: \"{resultCount} {resultCount, plural,\\n                            one {type}\\n                            other {types}\\n                          } found\", values: { resultCount: visTypes.filter(function (type) { return type.highlighted; }).length } })))),\n                                React.createElement(EuiKeyPadMenu, { className: \"visNewVisDialog__types\", \"data-test-subj\": \"visNewDialogTypes\" }, visTypes.map(this.renderVisType))))),\n                    React.createElement(EuiFlexItem, { className: \"visNewVisDialog__description\", grow: false }, highlightedType ? (React.createElement(VisHelpText, { visType: highlightedType })) : (React.createElement(React.Fragment, null,\n                        React.createElement(EuiTitle, { size: \"s\" },\n                            React.createElement(\"h2\", null,\n                                React.createElement(FormattedMessage, { id: \"kbn.visualize.newVisWizard.selectVisType\", defaultMessage: \"Select a visualization type\" }))),\n                        React.createElement(EuiSpacer, { size: \"m\" }),\n                        React.createElement(NewVisHelp, null))))))));\n    };\n    TypeSelection.prototype.filteredVisTypes = function (visTypes, query) {\n        var _this = this;\n        var types = visTypes.filter(function (type) {\n            // Filter out all lab visualizations if lab mode is not enabled\n            if (!_this.props.showExperimental && type.stage === 'experimental') {\n                return false;\n            }\n            // Filter out hidden visualizations\n            if (type.hidden) {\n                return false;\n            }\n            return true;\n        });\n        var entries;\n        if (!query) {\n            entries = types.map(function (type) { return (tslib_1.__assign({}, type, { highlighted: false })); });\n        }\n        else {\n            var q_1 = query.toLowerCase();\n            entries = types.map(function (type) {\n                var matchesQuery = type.name.toLowerCase().includes(q_1) ||\n                    type.title.toLowerCase().includes(q_1) ||\n                    (typeof type.description === 'string' && type.description.toLowerCase().includes(q_1));\n                return tslib_1.__assign({}, type, { highlighted: matchesQuery });\n            });\n        }\n        return sortByOrder(entries, ['highlighted', 'title'], ['desc', 'asc']);\n    };\n    TypeSelection.prototype.highlightType = function (visType) {\n        this.setState({\n            highlightedType: visType,\n        });\n    };\n    return TypeSelection;\n}(React.Component));\nexport { TypeSelection };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/wizard/type_selection/type_selection.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/visualize/wizard/type_selection/type_selection.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport { sortByOrder } from 'lodash';\nimport React, { ChangeEvent } from 'react';\n\nimport {\n  EuiFieldSearch,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiKeyPadMenu,\n  EuiKeyPadMenuItemButton,\n  EuiModalHeader,\n  EuiModalHeaderTitle,\n  EuiScreenReaderOnly,\n  EuiSpacer,\n  EuiTitle,\n} from '@elastic/eui';\nimport { NewVisHelp } from './new_vis_help';\nimport { VisHelpText } from './vis_help_text';\nimport { VisTypeIcon } from './vis_type_icon';\n\nimport { memoizeLast } from 'ui/utils/memoize';\nimport { VisType } from 'ui/vis';\n\ninterface VisTypeListEntry extends VisType {\n  highlighted: boolean;\n}\n\ninterface TypeSelectionProps {\n  onVisTypeSelected: (visType: VisType) => void;\n  visTypesRegistry: VisType[];\n  showExperimental: boolean;\n}\n\ninterface TypeSelectionState {\n  highlightedType: VisType | null;\n  query: string;\n}\n\nclass TypeSelection extends React.Component<TypeSelectionProps, TypeSelectionState> {\n  public state = {\n    highlightedType: null,\n    query: '',\n  };\n\n  private readonly getFilteredVisTypes = memoizeLast(this.filteredVisTypes);\n\n  public render() {\n    const { query, highlightedType } = this.state;\n    const visTypes = this.getFilteredVisTypes(this.props.visTypesRegistry, query);\n    return (\n      <React.Fragment>\n        <EuiModalHeader>\n          <EuiModalHeaderTitle>\n            <FormattedMessage\n              id=\"kbn.visualize.newVisWizard.title\"\n              defaultMessage=\"New Visualization\"\n            />\n          </EuiModalHeaderTitle>\n        </EuiModalHeader>\n        <div className=\"visNewVisDialog__body\">\n          <EuiFlexGroup gutterSize=\"xl\">\n            <EuiFlexItem>\n              <EuiFlexGroup\n                className=\"visNewVisDialog__list\"\n                direction=\"column\"\n                gutterSize=\"none\"\n                responsive={false}\n              >\n                <EuiFlexItem grow={false} className=\"visNewVisDialog__searchWrapper\">\n                  <EuiFieldSearch\n                    placeholder=\"Filter\"\n                    value={query}\n                    onChange={this.onQueryChange}\n                    fullWidth\n                    data-test-subj=\"filterVisType\"\n                    aria-label={i18n.translate(\n                      'kbn.visualize.newVisWizard.filterVisTypeAriaLabel',\n                      {\n                        defaultMessage: 'Filter for a visualization type',\n                      }\n                    )}\n                  />\n                </EuiFlexItem>\n                <EuiFlexItem grow={1} className=\"visNewVisDialog__typesWrapper\">\n                  <EuiScreenReaderOnly>\n                    <span aria-live=\"polite\">\n                      {query && (\n                        <FormattedMessage\n                          id=\"kbn.visualize.newVisWizard.resultsFound\"\n                          defaultMessage=\"{resultCount} {resultCount, plural,\n                            one {type}\n                            other {types}\n                          } found\"\n                          values={{ resultCount: visTypes.filter(type => type.highlighted).length }}\n                        />\n                      )}\n                    </span>\n                  </EuiScreenReaderOnly>\n                  <EuiKeyPadMenu\n                    className=\"visNewVisDialog__types\"\n                    data-test-subj=\"visNewDialogTypes\"\n                  >\n                    {visTypes.map(this.renderVisType)}\n                  </EuiKeyPadMenu>\n                </EuiFlexItem>\n              </EuiFlexGroup>\n            </EuiFlexItem>\n            <EuiFlexItem className=\"visNewVisDialog__description\" grow={false}>\n              {highlightedType ? (\n                <VisHelpText visType={highlightedType} />\n              ) : (\n                <React.Fragment>\n                  <EuiTitle size=\"s\">\n                    <h2>\n                      <FormattedMessage\n                        id=\"kbn.visualize.newVisWizard.selectVisType\"\n                        defaultMessage=\"Select a visualization type\"\n                      />\n                    </h2>\n                  </EuiTitle>\n                  <EuiSpacer size=\"m\" />\n                  <NewVisHelp />\n                </React.Fragment>\n              )}\n            </EuiFlexItem>\n          </EuiFlexGroup>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private filteredVisTypes(visTypes: VisType[], query: string): VisTypeListEntry[] {\n    const types = visTypes.filter(type => {\n      // Filter out all lab visualizations if lab mode is not enabled\n      if (!this.props.showExperimental && type.stage === 'experimental') {\n        return false;\n      }\n\n      // Filter out hidden visualizations\n      if (type.hidden) {\n        return false;\n      }\n\n      return true;\n    });\n\n    let entries: VisTypeListEntry[];\n    if (!query) {\n      entries = types.map(type => ({ ...type, highlighted: false }));\n    } else {\n      const q = query.toLowerCase();\n      entries = types.map(type => {\n        const matchesQuery =\n          type.name.toLowerCase().includes(q) ||\n          type.title.toLowerCase().includes(q) ||\n          (typeof type.description === 'string' && type.description.toLowerCase().includes(q));\n        return { ...type, highlighted: matchesQuery };\n      });\n    }\n\n    return sortByOrder(entries, ['highlighted', 'title'], ['desc', 'asc']);\n  }\n\n  private renderVisType = (visType: VisTypeListEntry) => {\n    let stage = {};\n    if (visType.stage === 'experimental') {\n      stage = {\n        betaBadgeLabel: i18n.translate('kbn.visualize.newVisWizard.experimentalTitle', {\n          defaultMessage: 'Experimental',\n        }),\n        betaBadgeTooltipContent: i18n.translate('kbn.visualize.newVisWizard.experimentalTooltip', {\n          defaultMessage: 'This visualization is experimental.',\n        }),\n      };\n    }\n    const isDisabled = this.state.query !== '' && !visType.highlighted;\n    return (\n      <EuiKeyPadMenuItemButton\n        key={visType.name}\n        label={<span data-test-subj=\"visTypeTitle\">{visType.title}</span>}\n        onClick={() => this.props.onVisTypeSelected(visType)}\n        onFocus={() => this.highlightType(visType)}\n        onMouseEnter={() => this.highlightType(visType)}\n        onMouseLeave={() => this.highlightType(null)}\n        onBlur={() => this.highlightType(null)}\n        className=\"visNewVisDialog__type\"\n        data-test-subj={`visType-${visType.name}`}\n        data-vis-stage={visType.stage}\n        disabled={isDisabled}\n        aria-describedby={`visTypeDescription-${visType.name}`}\n        {...stage}\n      >\n        <VisTypeIcon visType={visType} />\n      </EuiKeyPadMenuItemButton>\n    );\n  };\n\n  private highlightType(visType: VisType | null) {\n    this.setState({\n      highlightedType: visType,\n    });\n  }\n\n  private onQueryChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      query: ev.target.value,\n    });\n  };\n}\n\nexport { TypeSelection };\n"]}]}