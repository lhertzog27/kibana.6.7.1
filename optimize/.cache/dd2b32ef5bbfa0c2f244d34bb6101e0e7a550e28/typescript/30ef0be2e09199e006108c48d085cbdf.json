{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/DiscoverErrorLink.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/DiscoverErrorLink.tsx","mtime":1567631711865},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React from 'react';\nimport { ERROR_GROUP_ID, SERVICE_NAME } from 'x-pack/plugins/apm/common/constants';\nimport { DiscoverLink } from './DiscoverLink';\nfunction getDiscoverQuery(error, kuery) {\n    var serviceName = error.context.service.name;\n    var groupId = error.error.grouping_key;\n    var query = SERVICE_NAME + \":\\\"\" + serviceName + \"\\\" AND \" + ERROR_GROUP_ID + \":\\\"\" + groupId + \"\\\"\";\n    if (kuery) {\n        query += \" AND \" + kuery;\n    }\n    return {\n        _a: {\n            interval: 'auto',\n            query: {\n                language: 'lucene',\n                query: query\n            },\n            sort: { '@timestamp': 'desc' }\n        }\n    };\n}\nvar DiscoverErrorLink = function (_b) {\n    var error = _b.error, kuery = _b.kuery, children = _b.children;\n    return (React.createElement(DiscoverLink, { query: getDiscoverQuery(error, kuery), children: children }));\n};\nexport { DiscoverErrorLink };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/DiscoverErrorLink.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/DiscoverErrorLink.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EACL,cAAc,EACd,YAAY,EACb,MAAM,qCAAqC,CAAC;AAE7C,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,SAAS,gBAAgB,CAAC,KAAe,EAAE,KAAc;IACvD,IAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;IAC/C,IAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;IACzC,IAAI,KAAK,GAAM,YAAY,WAAK,WAAW,eAAS,cAAc,WAAK,OAAO,OAAG,CAAC;IAClF,IAAI,KAAK,EAAE;QACT,KAAK,IAAI,UAAQ,KAAO,CAAC;KAC1B;IAED,OAAO;QACL,EAAE,EAAE;YACF,QAAQ,EAAE,MAAM;YAChB,KAAK,EAAE;gBACL,QAAQ,EAAE,QAAQ;gBAClB,KAAK,OAAA;aACN;YACD,IAAI,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE;SAC/B;KACF,CAAC;AACJ,CAAC;AAED,IAAM,iBAAiB,GAGlB,UAAC,EAA0B;QAAxB,gBAAK,EAAE,gBAAK,EAAE,sBAAQ;IAC5B,OAAO,CACL,oBAAC,YAAY,IAAC,KAAK,EAAE,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,QAAQ,EAAE,QAAQ,GAAI,CAC5E,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,iBAAiB,EAAE,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\nimport {\n  ERROR_GROUP_ID,\n  SERVICE_NAME\n} from 'x-pack/plugins/apm/common/constants';\nimport { APMError } from 'x-pack/plugins/apm/typings/es_schemas/Error';\nimport { DiscoverLink } from './DiscoverLink';\n\nfunction getDiscoverQuery(error: APMError, kuery?: string) {\n  const serviceName = error.context.service.name;\n  const groupId = error.error.grouping_key;\n  let query = `${SERVICE_NAME}:\"${serviceName}\" AND ${ERROR_GROUP_ID}:\"${groupId}\"`;\n  if (kuery) {\n    query += ` AND ${kuery}`;\n  }\n\n  return {\n    _a: {\n      interval: 'auto',\n      query: {\n        language: 'lucene',\n        query\n      },\n      sort: { '@timestamp': 'desc' }\n    }\n  };\n}\n\nconst DiscoverErrorLink: React.SFC<{\n  readonly error: APMError;\n  readonly kuery?: string;\n}> = ({ error, kuery, children }) => {\n  return (\n    <DiscoverLink query={getDiscoverQuery(error, kuery)} children={children} />\n  );\n};\n\nexport { DiscoverErrorLink };\n"]}]}