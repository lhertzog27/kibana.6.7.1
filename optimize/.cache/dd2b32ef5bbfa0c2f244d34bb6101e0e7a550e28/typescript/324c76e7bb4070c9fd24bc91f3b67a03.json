{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/KibanaLink.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/KibanaLink.tsx","mtime":1567631711865},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiLink } from '@elastic/eui';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getKibanaHref } from './url_helpers';\n/**\n * NOTE: Use this component directly if you have to use a link that is\n * going to be rendered outside of React, e.g. in the Kibana global toast loader.\n *\n * You must remember to pass in location in that case.\n */\nexport function UnconnectedKibanaLink(_a) {\n    var location = _a.location, pathname = _a.pathname, hash = _a.hash, query = _a.query, props = tslib_1.__rest(_a, [\"location\", \"pathname\", \"hash\", \"query\"]);\n    var href = getKibanaHref({\n        location: location,\n        pathname: pathname,\n        hash: hash,\n        query: query\n    });\n    return React.createElement(EuiLink, tslib_1.__assign({}, props, { href: href }));\n}\nvar withLocation = connect(function (_a) {\n    var location = _a.location;\n    return ({ location: location });\n}, {});\nexport var KibanaLink = withLocation(UnconnectedKibanaLink);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/KibanaLink.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/KibanaLink.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AAEvC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,aAAa,EAAkB,MAAM,eAAe,CAAC;AAQ9D;;;;;GAKG;AACH,MAAM,UAAU,qBAAqB,CAAC,EAM9B;IALN,IAAA,sBAAQ,EACR,sBAAQ,EACR,cAAI,EACJ,gBAAK,EACL,qEAAQ;IAER,IAAM,IAAI,GAAG,aAAa,CAAC;QACzB,QAAQ,UAAA;QACR,QAAQ,UAAA;QACR,IAAI,MAAA;QACJ,KAAK,OAAA;KACN,CAAC,CAAC;IACH,OAAO,oBAAC,OAAO,uBAAK,KAAK,IAAE,IAAI,EAAE,IAAI,IAAI,CAAC;AAC5C,CAAC;AAED,IAAM,YAAY,GAAG,OAAO,CAC1B,UAAC,EAAoC;QAAlC,sBAAQ;IAA+B,OAAA,CAAC,EAAE,QAAQ,UAAA,EAAE,CAAC;AAAd,CAAc,EACxD,EAAE,CACH,CAAC;AAEF,MAAM,CAAC,IAAM,UAAU,GAAG,YAAY,CAAC,qBAAqB,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiLink } from '@elastic/eui';\nimport { Location } from 'history';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { StringMap } from 'x-pack/plugins/apm/typings/common';\nimport { getKibanaHref, KibanaHrefArgs } from './url_helpers';\n\ninterface Props extends KibanaHrefArgs {\n  disabled?: boolean;\n  to?: StringMap;\n  className?: string;\n}\n\n/**\n * NOTE: Use this component directly if you have to use a link that is\n * going to be rendered outside of React, e.g. in the Kibana global toast loader.\n *\n * You must remember to pass in location in that case.\n */\nexport function UnconnectedKibanaLink({\n  location,\n  pathname,\n  hash,\n  query,\n  ...props\n}: Props) {\n  const href = getKibanaHref({\n    location,\n    pathname,\n    hash,\n    query\n  });\n  return <EuiLink {...props} href={href} />;\n}\n\nconst withLocation = connect(\n  ({ location }: { location: Location }) => ({ location }),\n  {}\n);\n\nexport const KibanaLink = withLocation(UnconnectedKibanaLink);\n"]}]}