{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/group_by_bar.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/group_by_bar.tsx","mtime":1567631712323},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React from 'react';\nimport { EuiFilterButton, EuiFilterGroup, EuiFlexItem } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nvar LocalizedOptions = {\n    message: i18n.translate('xpack.upgradeAssistant.checkupTab.controls.groupByBar.byIssueLabel', {\n        defaultMessage: 'by issue',\n    }),\n    index: i18n.translate('xpack.upgradeAssistant.checkupTab.controls.groupByBar.byIndexLabel', {\n        defaultMessage: 'by index',\n    }),\n};\nexport var GroupByBar = function (_a) {\n    var availableGroupByOptions = _a.availableGroupByOptions, currentGroupBy = _a.currentGroupBy, onGroupByChange = _a.onGroupByChange;\n    if (availableGroupByOptions.length <= 1) {\n        return null;\n    }\n    return (React.createElement(EuiFlexItem, { grow: false },\n        React.createElement(EuiFilterGroup, null, availableGroupByOptions.map(function (option) { return (React.createElement(EuiFilterButton, { key: option, onClick: onGroupByChange.bind(null, option), hasActiveFilters: currentGroupBy === option }, LocalizedOptions[option])); }))));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/group_by_bar.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/group_by_bar.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAC5E,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AAIjC,IAAM,gBAAgB,GAAiC;IACrD,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,oEAAoE,EAAE;QAC5F,cAAc,EAAE,UAAU;KAC3B,CAAC;IACF,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,oEAAoE,EAAE;QAC1F,cAAc,EAAE,UAAU;KAC3B,CAAC;CACH,CAAC;AAQF,MAAM,CAAC,IAAM,UAAU,GAA8C,UAAC,EAIrE;QAHC,oDAAuB,EACvB,kCAAc,EACd,oCAAe;IAEf,IAAI,uBAAuB,CAAC,MAAM,IAAI,CAAC,EAAE;QACvC,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,oBAAC,WAAW,IAAC,IAAI,EAAE,KAAK;QACtB,oBAAC,cAAc,QACZ,uBAAuB,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,CACrC,oBAAC,eAAe,IACd,GAAG,EAAE,MAAM,EACX,OAAO,EAAE,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAC3C,gBAAgB,EAAE,cAAc,KAAK,MAAM,IAE1C,gBAAgB,CAAC,MAAM,CAAC,CACT,CACnB,EARsC,CAQtC,CAAC,CACa,CACL,CACf,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\n\nimport { EuiFilterButton, EuiFilterGroup, EuiFlexItem } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\n\nimport { GroupByOption } from '../../types';\n\nconst LocalizedOptions: { [option: string]: string } = {\n  message: i18n.translate('xpack.upgradeAssistant.checkupTab.controls.groupByBar.byIssueLabel', {\n    defaultMessage: 'by issue',\n  }),\n  index: i18n.translate('xpack.upgradeAssistant.checkupTab.controls.groupByBar.byIndexLabel', {\n    defaultMessage: 'by index',\n  }),\n};\n\ninterface GroupByBarProps {\n  availableGroupByOptions: GroupByOption[];\n  currentGroupBy: GroupByOption;\n  onGroupByChange: (groupBy: GroupByOption) => void;\n}\n\nexport const GroupByBar: React.StatelessComponent<GroupByBarProps> = ({\n  availableGroupByOptions,\n  currentGroupBy,\n  onGroupByChange,\n}) => {\n  if (availableGroupByOptions.length <= 1) {\n    return null;\n  }\n\n  return (\n    <EuiFlexItem grow={false}>\n      <EuiFilterGroup>\n        {availableGroupByOptions.map(option => (\n          <EuiFilterButton\n            key={option}\n            onClick={onGroupByChange.bind(null, option)}\n            hasActiveFilters={currentGroupBy === option}\n          >\n            {LocalizedOptions[option]}\n          </EuiFilterButton>\n        ))}\n      </EuiFilterGroup>\n    </EuiFlexItem>\n  );\n};\n"]}]}