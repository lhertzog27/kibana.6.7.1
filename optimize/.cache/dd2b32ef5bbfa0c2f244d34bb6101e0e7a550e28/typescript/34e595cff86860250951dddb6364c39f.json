{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/DiscoverTransactionLink.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/DiscoverTransactionLink.tsx","mtime":1567631711865},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React from 'react';\nimport { PROCESSOR_EVENT, TRACE_ID, TRANSACTION_ID } from 'x-pack/plugins/apm/common/constants';\nimport { DiscoverLink } from './DiscoverLink';\nexport function getDiscoverQuery(transaction) {\n    var transactionId = transaction.transaction.id;\n    var traceId = transaction.version === 'v2' ? transaction.trace.id : undefined;\n    var query = PROCESSOR_EVENT + \":\\\"transaction\\\" AND \" + TRANSACTION_ID + \":\\\"\" + transactionId + \"\\\"\";\n    if (traceId) {\n        query += \" AND \" + TRACE_ID + \":\\\"\" + traceId + \"\\\"\";\n    }\n    return {\n        _a: {\n            interval: 'auto',\n            query: {\n                language: 'lucene',\n                query: query\n            }\n        }\n    };\n}\nexport var DiscoverTransactionLink = function (_b) {\n    var transaction = _b.transaction, children = _b.children;\n    return (React.createElement(DiscoverLink, { query: getDiscoverQuery(transaction), children: children }));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/DiscoverTransactionLink.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/DiscoverTransactionLink.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EACL,eAAe,EACf,QAAQ,EACR,cAAc,EACf,MAAM,qCAAqC,CAAC;AAE7C,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,MAAM,UAAU,gBAAgB,CAAC,WAAwB;IACvD,IAAM,aAAa,GAAG,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC;IACjD,IAAM,OAAO,GACX,WAAW,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IAElE,IAAI,KAAK,GAAM,eAAe,6BAAsB,cAAc,WAAK,aAAa,OAAG,CAAC;IACxF,IAAI,OAAO,EAAE;QACX,KAAK,IAAI,UAAQ,QAAQ,WAAK,OAAO,OAAG,CAAC;KAC1C;IACD,OAAO;QACL,EAAE,EAAE;YACF,QAAQ,EAAE,MAAM;YAChB,KAAK,EAAE;gBACL,QAAQ,EAAE,QAAQ;gBAClB,KAAK,OAAA;aACN;SACF;KACF,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,IAAM,uBAAuB,GAE/B,UAAC,EAAyB;QAAvB,4BAAW,EAAE,sBAAQ;IAC3B,OAAO,CACL,oBAAC,YAAY,IAAC,KAAK,EAAE,gBAAgB,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,QAAQ,GAAI,CAC3E,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\nimport {\n  PROCESSOR_EVENT,\n  TRACE_ID,\n  TRANSACTION_ID\n} from 'x-pack/plugins/apm/common/constants';\nimport { Transaction } from 'x-pack/plugins/apm/typings/es_schemas/Transaction';\nimport { DiscoverLink } from './DiscoverLink';\n\nexport function getDiscoverQuery(transaction: Transaction) {\n  const transactionId = transaction.transaction.id;\n  const traceId =\n    transaction.version === 'v2' ? transaction.trace.id : undefined;\n\n  let query = `${PROCESSOR_EVENT}:\"transaction\" AND ${TRANSACTION_ID}:\"${transactionId}\"`;\n  if (traceId) {\n    query += ` AND ${TRACE_ID}:\"${traceId}\"`;\n  }\n  return {\n    _a: {\n      interval: 'auto',\n      query: {\n        language: 'lucene',\n        query\n      }\n    }\n  };\n}\n\nexport const DiscoverTransactionLink: React.SFC<{\n  readonly transaction: Transaction;\n}> = ({ transaction, children }) => {\n  return (\n    <DiscoverLink query={getDiscoverQuery(transaction)} children={children} />\n  );\n};\n"]}]}