{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/source_configuration/source_configuration_flyout.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/source_configuration/source_configuration_flyout.tsx","mtime":1567631711982},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { EuiButton, EuiButtonEmpty, EuiFlexGroup, EuiFlexItem, EuiFlyout, EuiFlyoutBody, EuiFlyoutFooter, EuiFlyoutHeader, EuiSpacer, EuiTitle, } from '@elastic/eui';\nimport React from 'react';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport { WithSource } from '../../containers/with_source';\nimport { FieldsConfigurationPanel } from './fields_configuration_panel';\nimport { IndicesConfigurationPanel } from './indices_configuration_panel';\nimport { NameConfigurationPanel } from './name_configuration_panel';\nimport { WithSourceConfigurationFlyoutState } from './source_configuration_flyout_state';\nimport { WithSourceConfigurationFormState } from './source_configuration_form_state';\nvar noop = function () { return undefined; };\nexport var SourceConfigurationFlyout = injectI18n(function (_a) {\n    var intl = _a.intl;\n    return (React.createElement(WithSourceConfigurationFlyoutState, null, function (_a) {\n        var close = _a.disable, isVisible = _a.value;\n        return isVisible ? (React.createElement(WithSource, null, function (_a) {\n            var create = _a.create, configuration = _a.configuration, exists = _a.exists, isLoading = _a.isLoading, update = _a.update;\n            return configuration ? (React.createElement(WithSourceConfigurationFormState, { initialFormState: {\n                    name: configuration.name,\n                    description: configuration.description,\n                    fields: {\n                        container: configuration.fields.container,\n                        host: configuration.fields.host,\n                        message: configuration.fields.message,\n                        pod: configuration.fields.pod,\n                        tiebreaker: configuration.fields.tiebreaker,\n                        timestamp: configuration.fields.timestamp,\n                    },\n                    logAlias: configuration.logAlias,\n                    metricAlias: configuration.metricAlias,\n                } }, function (_a) {\n                var getCurrentFormState = _a.getCurrentFormState, getNameFieldProps = _a.getNameFieldProps, getLogAliasFieldProps = _a.getLogAliasFieldProps, getMetricAliasFieldProps = _a.getMetricAliasFieldProps, getFieldFieldProps = _a.getFieldFieldProps, isFormValid = _a.isFormValid, resetForm = _a.resetForm, updates = _a.updates;\n                return (React.createElement(EuiFlyout, { \"aria-labelledby\": \"sourceConfigurationTitle\", hideCloseButton: true, onClose: noop },\n                    React.createElement(EuiFlyoutHeader, null,\n                        React.createElement(EuiTitle, null,\n                            React.createElement(\"h2\", { id: \"sourceConfigurationTitle\" },\n                                React.createElement(FormattedMessage, { id: \"xpack.infra.sourceConfiguration.sourceConfigurationTitle\", defaultMessage: \"Configure source\" })))),\n                    React.createElement(EuiFlyoutBody, null,\n                        React.createElement(NameConfigurationPanel, { isLoading: isLoading, nameFieldProps: getNameFieldProps() }),\n                        React.createElement(EuiSpacer, null),\n                        React.createElement(IndicesConfigurationPanel, { isLoading: isLoading, logAliasFieldProps: getLogAliasFieldProps(), metricAliasFieldProps: getMetricAliasFieldProps() }),\n                        React.createElement(EuiSpacer, null),\n                        React.createElement(FieldsConfigurationPanel, { containerFieldProps: getFieldFieldProps('container'), hostFieldProps: getFieldFieldProps('host'), isLoading: isLoading, podFieldProps: getFieldFieldProps('pod'), tiebreakerFieldProps: getFieldFieldProps('tiebreaker'), timestampFieldProps: getFieldFieldProps('timestamp') })),\n                    React.createElement(EuiFlyoutFooter, null,\n                        React.createElement(EuiFlexGroup, null,\n                            React.createElement(EuiFlexItem, { grow: false }, updates.length === 0 ? (React.createElement(EuiButtonEmpty, { iconType: \"cross\", isDisabled: isLoading, onClick: function () { return close(); } },\n                                React.createElement(FormattedMessage, { id: \"xpack.infra.sourceConfiguration.closeButtonLabel\", defaultMessage: \"Close\" }))) : (React.createElement(EuiButtonEmpty, { color: \"danger\", iconType: \"cross\", isDisabled: isLoading, onClick: function () {\n                                    resetForm();\n                                    close();\n                                } },\n                                React.createElement(FormattedMessage, { id: \"xpack.infra.sourceConfiguration.discardAndCloseButtonLabel\", defaultMessage: \"Discard and Close\" })))),\n                            React.createElement(EuiFlexItem, null),\n                            React.createElement(EuiFlexItem, { grow: false }, isLoading ? (React.createElement(EuiButton, { color: \"primary\", isLoading: true, fill: true }, \"Loading\")) : (React.createElement(EuiButton, { color: \"primary\", isDisabled: updates.length === 0 || !isFormValid(), fill: true, onClick: function () {\n                                    return (exists ? update(updates) : create(getCurrentFormState())).then(function () { return resetForm(); });\n                                } },\n                                React.createElement(FormattedMessage, { id: \"xpack.infra.sourceConfiguration.updateSourceConfigurationButtonLabel\", defaultMessage: \"Update Source\" }))))))));\n            })) : null;\n        })) : null;\n    }));\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/source_configuration/source_configuration_flyout.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/source_configuration/source_configuration_flyout.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiButton,\n  EuiButtonEmpty,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiFlyout,\n  EuiFlyoutBody,\n  EuiFlyoutFooter,\n  EuiFlyoutHeader,\n  EuiSpacer,\n  EuiTitle,\n} from '@elastic/eui';\nimport React from 'react';\n\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport { WithSource } from '../../containers/with_source';\nimport { FieldsConfigurationPanel } from './fields_configuration_panel';\nimport { IndicesConfigurationPanel } from './indices_configuration_panel';\nimport { NameConfigurationPanel } from './name_configuration_panel';\nimport { WithSourceConfigurationFlyoutState } from './source_configuration_flyout_state';\nimport { WithSourceConfigurationFormState } from './source_configuration_form_state';\n\nconst noop = () => undefined;\n\ninterface SourceConfigurationFlyoutProps {\n  intl: InjectedIntl;\n}\n\nexport const SourceConfigurationFlyout = injectI18n(({ intl }: SourceConfigurationFlyoutProps) => (\n  <WithSourceConfigurationFlyoutState>\n    {({ disable: close, value: isVisible }) =>\n      isVisible ? (\n        <WithSource>\n          {({ create, configuration, exists, isLoading, update }) =>\n            configuration ? (\n              <WithSourceConfigurationFormState\n                initialFormState={{\n                  name: configuration.name,\n                  description: configuration.description,\n                  fields: {\n                    container: configuration.fields.container,\n                    host: configuration.fields.host,\n                    message: configuration.fields.message,\n                    pod: configuration.fields.pod,\n                    tiebreaker: configuration.fields.tiebreaker,\n                    timestamp: configuration.fields.timestamp,\n                  },\n                  logAlias: configuration.logAlias,\n                  metricAlias: configuration.metricAlias,\n                }}\n              >\n                {({\n                  getCurrentFormState,\n                  getNameFieldProps,\n                  getLogAliasFieldProps,\n                  getMetricAliasFieldProps,\n                  getFieldFieldProps,\n                  isFormValid,\n                  resetForm,\n                  updates,\n                }) => (\n                  <EuiFlyout\n                    aria-labelledby=\"sourceConfigurationTitle\"\n                    hideCloseButton\n                    onClose={noop}\n                  >\n                    <EuiFlyoutHeader>\n                      <EuiTitle>\n                        <h2 id=\"sourceConfigurationTitle\">\n                          <FormattedMessage\n                            id=\"xpack.infra.sourceConfiguration.sourceConfigurationTitle\"\n                            defaultMessage=\"Configure source\"\n                          />\n                        </h2>\n                      </EuiTitle>\n                    </EuiFlyoutHeader>\n                    <EuiFlyoutBody>\n                      <NameConfigurationPanel\n                        isLoading={isLoading}\n                        nameFieldProps={getNameFieldProps()}\n                      />\n                      <EuiSpacer />\n                      <IndicesConfigurationPanel\n                        isLoading={isLoading}\n                        logAliasFieldProps={getLogAliasFieldProps()}\n                        metricAliasFieldProps={getMetricAliasFieldProps()}\n                      />\n                      <EuiSpacer />\n                      <FieldsConfigurationPanel\n                        containerFieldProps={getFieldFieldProps('container')}\n                        hostFieldProps={getFieldFieldProps('host')}\n                        isLoading={isLoading}\n                        podFieldProps={getFieldFieldProps('pod')}\n                        tiebreakerFieldProps={getFieldFieldProps('tiebreaker')}\n                        timestampFieldProps={getFieldFieldProps('timestamp')}\n                      />\n                    </EuiFlyoutBody>\n                    <EuiFlyoutFooter>\n                      <EuiFlexGroup>\n                        <EuiFlexItem grow={false}>\n                          {updates.length === 0 ? (\n                            <EuiButtonEmpty\n                              iconType=\"cross\"\n                              isDisabled={isLoading}\n                              onClick={() => close()}\n                            >\n                              <FormattedMessage\n                                id=\"xpack.infra.sourceConfiguration.closeButtonLabel\"\n                                defaultMessage=\"Close\"\n                              />\n                            </EuiButtonEmpty>\n                          ) : (\n                            <EuiButtonEmpty\n                              color=\"danger\"\n                              iconType=\"cross\"\n                              isDisabled={isLoading}\n                              onClick={() => {\n                                resetForm();\n                                close();\n                              }}\n                            >\n                              <FormattedMessage\n                                id=\"xpack.infra.sourceConfiguration.discardAndCloseButtonLabel\"\n                                defaultMessage=\"Discard and Close\"\n                              />\n                            </EuiButtonEmpty>\n                          )}\n                        </EuiFlexItem>\n                        <EuiFlexItem />\n                        <EuiFlexItem grow={false}>\n                          {isLoading ? (\n                            <EuiButton color=\"primary\" isLoading fill>\n                              Loading\n                            </EuiButton>\n                          ) : (\n                            <EuiButton\n                              color=\"primary\"\n                              isDisabled={updates.length === 0 || !isFormValid()}\n                              fill\n                              onClick={() =>\n                                (exists ? update(updates) : create(getCurrentFormState())).then(\n                                  () => resetForm()\n                                )\n                              }\n                            >\n                              <FormattedMessage\n                                id=\"xpack.infra.sourceConfiguration.updateSourceConfigurationButtonLabel\"\n                                defaultMessage=\"Update Source\"\n                              />\n                            </EuiButton>\n                          )}\n                        </EuiFlexItem>\n                      </EuiFlexGroup>\n                    </EuiFlyoutFooter>\n                  </EuiFlyout>\n                )}\n              </WithSourceConfigurationFormState>\n            ) : null\n          }\n        </WithSource>\n      ) : null\n    }\n  </WithSourceConfigurationFlyoutState>\n));\n"]}]}