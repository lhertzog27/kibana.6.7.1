{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_textview/reducer.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_textview/reducer.ts","mtime":1567631711988},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { combineReducers } from 'redux';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers/dist';\nimport { setTextviewScale, setTextviewWrap } from './actions';\nexport var initialLogTextviewState = {\n    scale: 'medium',\n    wrap: true,\n};\nvar textviewScaleReducer = reducerWithInitialState(initialLogTextviewState.scale).case(setTextviewScale, function (state, scale) { return scale; });\nvar textviewWrapReducer = reducerWithInitialState(initialLogTextviewState.wrap).case(setTextviewWrap, function (state, wrap) { return wrap; });\nexport var logTextviewReducer = combineReducers({\n    scale: textviewScaleReducer,\n    wrap: textviewWrapReducer,\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_textview/reducer.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_textview/reducer.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,uBAAuB,EAAE,MAAM,8BAA8B,CAAC;AAGvE,OAAO,EAAE,gBAAgB,EAAE,eAAe,EAAE,MAAM,WAAW,CAAC;AAO9D,MAAM,CAAC,IAAM,uBAAuB,GAAqB;IACvD,KAAK,EAAE,QAAQ;IACf,IAAI,EAAE,IAAI;CACX,CAAC;AAEF,IAAM,oBAAoB,GAAG,uBAAuB,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,IAAI,CACtF,gBAAgB,EAChB,UAAC,KAAK,EAAE,KAAK,IAAK,OAAA,KAAK,EAAL,CAAK,CACxB,CAAC;AAEF,IAAM,mBAAmB,GAAG,uBAAuB,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,IAAI,CACpF,eAAe,EACf,UAAC,KAAK,EAAE,IAAI,IAAK,OAAA,IAAI,EAAJ,CAAI,CACtB,CAAC;AAEF,MAAM,CAAC,IAAM,kBAAkB,GAAG,eAAe,CAAmB;IAClE,KAAK,EAAE,oBAAoB;IAC3B,IAAI,EAAE,mBAAmB;CAC1B,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { combineReducers } from 'redux';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers/dist';\n\nimport { TextScale } from '../../../../common/log_text_scale';\nimport { setTextviewScale, setTextviewWrap } from './actions';\n\nexport interface LogTextviewState {\n  scale: TextScale;\n  wrap: boolean;\n}\n\nexport const initialLogTextviewState: LogTextviewState = {\n  scale: 'medium',\n  wrap: true,\n};\n\nconst textviewScaleReducer = reducerWithInitialState(initialLogTextviewState.scale).case(\n  setTextviewScale,\n  (state, scale) => scale\n);\n\nconst textviewWrapReducer = reducerWithInitialState(initialLogTextviewState.wrap).case(\n  setTextviewWrap,\n  (state, wrap) => wrap\n);\n\nexport const logTextviewReducer = combineReducers<LogTextviewState>({\n  scale: textviewScaleReducer,\n  wrap: textviewWrapReducer,\n});\n"]}]}