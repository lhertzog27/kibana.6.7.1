{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/theme.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/theme.ts","mtime":1567631711709},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as Rx from 'rxjs';\nvar newPlatformChrome;\nexport function __newPlatformInit__(instance) {\n    if (newPlatformChrome) {\n        throw new Error('ui/chrome/api/theme is already initialized');\n    }\n    newPlatformChrome = instance;\n}\nexport function initChromeThemeApi(chrome) {\n    var brandCache$ = new Rx.BehaviorSubject({});\n    newPlatformChrome.getBrand$().subscribe(brandCache$);\n    var applicationClassesCache$ = new Rx.BehaviorSubject([]);\n    newPlatformChrome.getApplicationClasses$().subscribe(applicationClassesCache$);\n    chrome.setBrand = function (brand) {\n        newPlatformChrome.setBrand(brand);\n        return chrome;\n    };\n    chrome.getBrand = function (key) {\n        return brandCache$.getValue()[key];\n    };\n    chrome.addApplicationClass = function (classNames) {\n        if (classNames === void 0) { classNames = []; }\n        var e_1, _a;\n        if (typeof classNames === 'string') {\n            classNames = [classNames];\n        }\n        try {\n            for (var classNames_1 = tslib_1.__values(classNames), classNames_1_1 = classNames_1.next(); !classNames_1_1.done; classNames_1_1 = classNames_1.next()) {\n                var className = classNames_1_1.value;\n                newPlatformChrome.addApplicationClass(className);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (classNames_1_1 && !classNames_1_1.done && (_a = classNames_1.return)) _a.call(classNames_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return chrome;\n    };\n    chrome.removeApplicationClass = function (classNames) {\n        var e_2, _a;\n        if (typeof classNames === 'string') {\n            classNames = [classNames];\n        }\n        try {\n            for (var classNames_2 = tslib_1.__values(classNames), classNames_2_1 = classNames_2.next(); !classNames_2_1.done; classNames_2_1 = classNames_2.next()) {\n                var className = classNames_2_1.value;\n                newPlatformChrome.removeApplicationClass(className);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (classNames_2_1 && !classNames_2_1.done && (_a = classNames_2.return)) _a.call(classNames_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return chrome;\n    };\n    chrome.getApplicationClasses = function () {\n        return applicationClassesCache$.getValue().join(' ');\n    };\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/theme.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/chrome/api/theme.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAEH,OAAO,KAAK,EAAE,MAAM,MAAM,CAAC;AAI3B,IAAI,iBAAsC,CAAC;AAE3C,MAAM,UAAU,mBAAmB,CAAC,QAA6B;IAC/D,IAAI,iBAAiB,EAAE;QACrB,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;KAC/D;IAED,iBAAiB,GAAG,QAAQ,CAAC;AAC/B,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,MAA8B;IAC/D,IAAM,WAAW,GAAG,IAAI,EAAE,CAAC,eAAe,CAAQ,EAAE,CAAC,CAAC;IACtD,iBAAiB,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAErD,IAAM,wBAAwB,GAAG,IAAI,EAAE,CAAC,eAAe,CAAW,EAAE,CAAC,CAAC;IACtE,iBAAiB,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;IAE/E,MAAM,CAAC,QAAQ,GAAG,UAAC,KAAY;QAC7B,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAClC,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IAEF,MAAM,CAAC,QAAQ,GAAG,UAAC,GAAgB;QACjC,OAAO,WAAW,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC;IAEF,MAAM,CAAC,mBAAmB,GAAG,UAAC,UAAkC;QAAlC,2BAAA,EAAA,eAAkC;;QAC9D,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAClC,UAAU,GAAG,CAAC,UAAU,CAAC,CAAC;SAC3B;;YAED,KAAwB,IAAA,eAAA,iBAAA,UAAU,CAAA,sCAAA,8DAAE;gBAA/B,IAAM,SAAS,uBAAA;gBAClB,iBAAiB,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;aAClD;;;;;;;;;QAED,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IAEF,MAAM,CAAC,sBAAsB,GAAG,UAAC,UAA6B;;QAC5D,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAClC,UAAU,GAAG,CAAC,UAAU,CAAC,CAAC;SAC3B;;YAED,KAAwB,IAAA,eAAA,iBAAA,UAAU,CAAA,sCAAA,8DAAE;gBAA/B,IAAM,SAAS,uBAAA;gBAClB,iBAAiB,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;aACrD;;;;;;;;;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IAEF,MAAM,CAAC,qBAAqB,GAAG;QAC7B,OAAO,wBAAwB,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport * as Rx from 'rxjs';\n\nimport { Brand, ChromeStartContract } from '../../../../core/public/chrome';\n\nlet newPlatformChrome: ChromeStartContract;\n\nexport function __newPlatformInit__(instance: ChromeStartContract) {\n  if (newPlatformChrome) {\n    throw new Error('ui/chrome/api/theme is already initialized');\n  }\n\n  newPlatformChrome = instance;\n}\n\nexport function initChromeThemeApi(chrome: { [key: string]: any }) {\n  const brandCache$ = new Rx.BehaviorSubject<Brand>({});\n  newPlatformChrome.getBrand$().subscribe(brandCache$);\n\n  const applicationClassesCache$ = new Rx.BehaviorSubject<string[]>([]);\n  newPlatformChrome.getApplicationClasses$().subscribe(applicationClassesCache$);\n\n  chrome.setBrand = (brand: Brand) => {\n    newPlatformChrome.setBrand(brand);\n    return chrome;\n  };\n\n  chrome.getBrand = (key: keyof Brand) => {\n    return brandCache$.getValue()[key];\n  };\n\n  chrome.addApplicationClass = (classNames: string | string[] = []) => {\n    if (typeof classNames === 'string') {\n      classNames = [classNames];\n    }\n\n    for (const className of classNames) {\n      newPlatformChrome.addApplicationClass(className);\n    }\n\n    return chrome;\n  };\n\n  chrome.removeApplicationClass = (classNames: string | string[]) => {\n    if (typeof classNames === 'string') {\n      classNames = [classNames];\n    }\n\n    for (const className of classNames) {\n      newPlatformChrome.removeApplicationClass(className);\n    }\n    return chrome;\n  };\n\n  chrome.getApplicationClasses = () => {\n    return applicationClassesCache$.getValue().join(' ');\n  };\n}\n"]}]}