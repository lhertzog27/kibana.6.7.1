{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/primitives/with_binary.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/primitives/with_binary.tsx","mtime":1567631711984},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { Container as ConstateContainer, } from 'constate';\nimport React from 'react';\nvar actions = {\n    disable: function () { return function (state) { return (tslib_1.__assign({}, state, { value: false })); }; },\n    enable: function () { return function (state) { return (tslib_1.__assign({}, state, { value: true })); }; },\n    toggle: function () { return function (state) { return (tslib_1.__assign({}, state, { value: !state.value })); }; },\n};\nexport var WithBinary = function (_a) {\n    var _b = _a.initialValue, initialValue = _b === void 0 ? false : _b, props = tslib_1.__rest(_a, [\"initialValue\"]);\n    return (React.createElement(ConstateContainer, tslib_1.__assign({}, props, { actions: actions, initialState: { value: initialValue }, pure: true })));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/primitives/with_binary.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/primitives/with_binary.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAEL,SAAS,IAAI,iBAAiB,GAG/B,MAAM,UAAU,CAAC;AAClB,OAAO,KAAK,MAAM,OAAO,CAAC;AAY1B,IAAM,OAAO,GAA8B;IACzC,OAAO,EAAE,cAAM,OAAA,UAAA,KAAK,IAAI,OAAA,sBAAM,KAAK,IAAE,KAAK,EAAE,KAAK,IAAG,EAA5B,CAA4B,EAArC,CAAqC;IACpD,MAAM,EAAE,cAAM,OAAA,UAAA,KAAK,IAAI,OAAA,sBAAM,KAAK,IAAE,KAAK,EAAE,IAAI,IAAG,EAA3B,CAA2B,EAApC,CAAoC;IAClD,MAAM,EAAE,cAAM,OAAA,UAAA,KAAK,IAAI,OAAA,sBAAM,KAAK,IAAE,KAAK,EAAE,CAAC,KAAK,CAAC,KAAK,IAAG,EAAnC,CAAmC,EAA5C,CAA4C;CAC3D,CAAC;AASF,MAAM,CAAC,IAAM,UAAU,GAA+B,UAAC,EAAkC;IAAhC,IAAA,oBAAoB,EAApB,yCAAoB,EAAE,4CAAQ;IAAO,OAAA,CAC5F,oBAAC,iBAAiB,uBAAK,KAAK,IAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,IAAI,UAAG,CAC/F,CAAA;CAAA,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  ActionMap,\n  Container as ConstateContainer,\n  ContainerProps as ConstateContainerProps,\n  Omit,\n} from 'constate';\nimport React from 'react';\n\ninterface State {\n  value: boolean;\n}\n\ninterface Actions {\n  disable: () => void;\n  enable: () => void;\n  toggle: () => void;\n}\n\nconst actions: ActionMap<State, Actions> = {\n  disable: () => state => ({ ...state, value: false }),\n  enable: () => state => ({ ...state, value: true }),\n  toggle: () => state => ({ ...state, value: !state.value }),\n};\n\nexport type WithBinaryProps = Omit<\n  ConstateContainerProps<State, Actions>,\n  'actions' | 'initialState' | 'pure'\n> & {\n  initialValue?: boolean;\n};\n\nexport const WithBinary: React.SFC<WithBinaryProps> = ({ initialValue = false, ...props }) => (\n  <ConstateContainer {...props} actions={actions} initialState={{ value: initialValue }} pure />\n);\n"]}]}