{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/vis_type_agg_filter.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/vis_type_agg_filter.ts","mtime":1567631711771},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import { aggTypeFilters } from '../../../agg_types/filter';\nimport { propFilter } from '../../../filters/_prop_filter';\nvar filterByName = propFilter('name');\n/**\n * This filter checks the defined aggFilter in the schemas of that visualization\n * and limits available aggregations based on that.\n */\naggTypeFilters.addFilter(function (aggType, indexPatterns, aggConfig) {\n    var doesSchemaAllowAggType = filterByName([aggType], aggConfig.schema.aggFilter).length !== 0;\n    return doesSchemaAllowAggType;\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/vis_type_agg_filter.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/vis/editors/default/vis_type_agg_filter.ts"],"names":[],"mappings":"AAmBA,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAI3D,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAE3D,IAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AAExC;;;GAGG;AACH,cAAc,CAAC,SAAS,CAAC,UAAC,OAAgB,EAAE,aAA2B,EAAE,SAAoB;IAC3F,IAAM,sBAAsB,GAAG,YAAY,CAAC,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;IAChG,OAAO,sBAAsB,CAAC;AAChC,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { AggType } from '../../../agg_types';\nimport { aggTypeFilters } from '../../../agg_types/filter';\nimport { IndexPattern } from '../../../index_patterns';\nimport { AggConfig } from '../../../vis';\n\nimport { propFilter } from '../../../filters/_prop_filter';\n\nconst filterByName = propFilter('name');\n\n/**\n * This filter checks the defined aggFilter in the schemas of that visualization\n * and limits available aggregations based on that.\n */\naggTypeFilters.addFilter((aggType: AggType, indexPatterns: IndexPattern, aggConfig: AggConfig) => {\n  const doesSchemaAllowAggType = filterByName([aggType], aggConfig.schema.aggFilter).length !== 0;\n  return doesSchemaAllowAggType;\n});\n"]}]}