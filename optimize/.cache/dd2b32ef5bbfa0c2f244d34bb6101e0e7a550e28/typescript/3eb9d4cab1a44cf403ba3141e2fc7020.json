{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/home/page_content.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/home/page_content.tsx","mtime":1567631711986},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { NodesOverview } from '../../components/nodes_overview';\nimport { PageContent } from '../../components/page';\nimport { WithWaffleFilter } from '../../containers/waffle/with_waffle_filters';\nimport { WithWaffleNodes } from '../../containers/waffle/with_waffle_nodes';\nimport { WithWaffleOptions } from '../../containers/waffle/with_waffle_options';\nimport { WithWaffleTime } from '../../containers/waffle/with_waffle_time';\nimport { WithOptions } from '../../containers/with_options';\nimport { WithSource } from '../../containers/with_source';\nexport var HomePageContent = function () { return (React.createElement(PageContent, null,\n    React.createElement(WithSource, null, function (_a) {\n        var configuration = _a.configuration, derivedIndexPattern = _a.derivedIndexPattern, sourceId = _a.sourceId;\n        return (React.createElement(WithOptions, null, function (_a) {\n            var wafflemap = _a.wafflemap;\n            return (React.createElement(WithWaffleFilter, { indexPattern: derivedIndexPattern }, function (_a) {\n                var filterQueryAsJson = _a.filterQueryAsJson, applyFilterQuery = _a.applyFilterQuery;\n                return (React.createElement(WithWaffleTime, null, function (_a) {\n                    var currentTimeRange = _a.currentTimeRange, isAutoReloading = _a.isAutoReloading;\n                    return (React.createElement(WithWaffleOptions, null, function (_a) {\n                        var metric = _a.metric, groupBy = _a.groupBy, nodeType = _a.nodeType, view = _a.view, changeView = _a.changeView;\n                        return (React.createElement(WithWaffleNodes, { filterQuery: filterQueryAsJson, metric: metric, groupBy: groupBy, nodeType: nodeType, sourceId: sourceId, timerange: currentTimeRange }, function (_a) {\n                            var nodes = _a.nodes, loading = _a.loading, refetch = _a.refetch;\n                            return (React.createElement(NodesOverview, { nodes: nodes, loading: nodes.length > 0 && isAutoReloading ? false : loading, nodeType: nodeType, options: tslib_1.__assign({}, wafflemap, { metric: metric, fields: configuration && configuration.fields, groupBy: groupBy }), reload: refetch, onDrilldown: applyFilterQuery, timeRange: currentTimeRange, view: view, onViewChange: changeView }));\n                        }));\n                    }));\n                }));\n            }));\n        }));\n    }))); };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/home/page_content.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/home/page_content.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAEpD,OAAO,EAAE,gBAAgB,EAAE,MAAM,6CAA6C,CAAC;AAC/E,OAAO,EAAE,eAAe,EAAE,MAAM,2CAA2C,CAAC;AAC5E,OAAO,EAAE,iBAAiB,EAAE,MAAM,6CAA6C,CAAC;AAChF,OAAO,EAAE,cAAc,EAAE,MAAM,0CAA0C,CAAC;AAC1E,OAAO,EAAE,WAAW,EAAE,MAAM,+BAA+B,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAE1D,MAAM,CAAC,IAAM,eAAe,GAAc,cAAM,OAAA,CAC9C,oBAAC,WAAW;IACV,oBAAC,UAAU,QACR,UAAC,EAAgD;YAA9C,gCAAa,EAAE,4CAAmB,EAAE,sBAAQ;QAAO,OAAA,CACrD,oBAAC,WAAW,QACT,UAAC,EAAa;gBAAX,wBAAS;YAAO,OAAA,CAClB,oBAAC,gBAAgB,IAAC,YAAY,EAAE,mBAAmB,IAChD,UAAC,EAAuC;oBAArC,wCAAiB,EAAE,sCAAgB;gBAAO,OAAA,CAC5C,oBAAC,cAAc,QACZ,UAAC,EAAqC;wBAAnC,sCAAgB,EAAE,oCAAe;oBAAO,OAAA,CAC1C,oBAAC,iBAAiB,QACf,UAAC,EAA+C;4BAA7C,kBAAM,EAAE,oBAAO,EAAE,sBAAQ,EAAE,cAAI,EAAE,0BAAU;wBAAO,OAAA,CACpD,oBAAC,eAAe,IACd,WAAW,EAAE,iBAAiB,EAC9B,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,gBAAgB,IAE1B,UAAC,EAA2B;gCAAzB,gBAAK,EAAE,oBAAO,EAAE,oBAAO;4BAAO,OAAA,CAChC,oBAAC,aAAa,IACZ,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,EAC9D,QAAQ,EAAE,QAAQ,EAClB,OAAO,uBACF,SAAS,IACZ,MAAM,QAAA,EACN,MAAM,EAAE,aAAa,IAAI,aAAa,CAAC,MAAM,EAC7C,OAAO,SAAA,KAET,MAAM,EAAE,OAAO,EACf,WAAW,EAAE,gBAAgB,EAC7B,SAAS,EAAE,gBAAgB,EAC3B,IAAI,EAAE,IAAI,EACV,YAAY,EAAE,UAAU,GACxB,CACH;wBAjBiC,CAiBjC,CACe,CACnB;oBA5BqD,CA4BrD,CACiB,CACrB;gBAhC2C,CAgC3C,CACc,CAClB;YApC6C,CAoC7C,CACgB,CACpB;QAxCmB,CAwCnB,CACW,CACf;IA5CsD,CA4CtD,CACU,CACD,CACf,EAlD+C,CAkD/C,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\n\nimport { NodesOverview } from '../../components/nodes_overview';\nimport { PageContent } from '../../components/page';\n\nimport { WithWaffleFilter } from '../../containers/waffle/with_waffle_filters';\nimport { WithWaffleNodes } from '../../containers/waffle/with_waffle_nodes';\nimport { WithWaffleOptions } from '../../containers/waffle/with_waffle_options';\nimport { WithWaffleTime } from '../../containers/waffle/with_waffle_time';\nimport { WithOptions } from '../../containers/with_options';\nimport { WithSource } from '../../containers/with_source';\n\nexport const HomePageContent: React.SFC = () => (\n  <PageContent>\n    <WithSource>\n      {({ configuration, derivedIndexPattern, sourceId }) => (\n        <WithOptions>\n          {({ wafflemap }) => (\n            <WithWaffleFilter indexPattern={derivedIndexPattern}>\n              {({ filterQueryAsJson, applyFilterQuery }) => (\n                <WithWaffleTime>\n                  {({ currentTimeRange, isAutoReloading }) => (\n                    <WithWaffleOptions>\n                      {({ metric, groupBy, nodeType, view, changeView }) => (\n                        <WithWaffleNodes\n                          filterQuery={filterQueryAsJson}\n                          metric={metric}\n                          groupBy={groupBy}\n                          nodeType={nodeType}\n                          sourceId={sourceId}\n                          timerange={currentTimeRange}\n                        >\n                          {({ nodes, loading, refetch }) => (\n                            <NodesOverview\n                              nodes={nodes}\n                              loading={nodes.length > 0 && isAutoReloading ? false : loading}\n                              nodeType={nodeType}\n                              options={{\n                                ...wafflemap,\n                                metric,\n                                fields: configuration && configuration.fields,\n                                groupBy,\n                              }}\n                              reload={refetch}\n                              onDrilldown={applyFilterQuery}\n                              timeRange={currentTimeRange}\n                              view={view}\n                              onViewChange={changeView}\n                            />\n                          )}\n                        </WithWaffleNodes>\n                      )}\n                    </WithWaffleOptions>\n                  )}\n                </WithWaffleTime>\n              )}\n            </WithWaffleFilter>\n          )}\n        </WithOptions>\n      )}\n    </WithSource>\n  </PageContent>\n);\n"]}]}