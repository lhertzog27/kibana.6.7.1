{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/autocomplete_field/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/autocomplete_field/index.tsx","mtime":1567631711879},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiFieldSearch, EuiOutsideClickDetector, EuiPanel, } from '@elastic/eui';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { composeStateUpdaters } from '../../utils/typed_react';\nimport { SuggestionItem } from './suggestion_item';\nvar AutocompleteField = /** @class */ (function (_super) {\n    tslib_1.__extends(AutocompleteField, _super);\n    function AutocompleteField() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            areSuggestionsVisible: false,\n            selectedIndex: null,\n        };\n        _this.inputElement = null;\n        _this.handleChangeInputRef = function (element) {\n            _this.inputElement = element;\n        };\n        _this.handleChange = function (evt) {\n            _this.changeValue(evt.currentTarget.value);\n        };\n        _this.handleKeyDown = function (evt) {\n            var suggestions = _this.props.suggestions;\n            switch (evt.key) {\n                case 'ArrowUp':\n                    evt.preventDefault();\n                    if (suggestions.length > 0) {\n                        _this.setState(composeStateUpdaters(withSuggestionsVisible, withPreviousSuggestionSelected));\n                    }\n                    break;\n                case 'ArrowDown':\n                    evt.preventDefault();\n                    if (suggestions.length > 0) {\n                        _this.setState(composeStateUpdaters(withSuggestionsVisible, withNextSuggestionSelected));\n                    }\n                    else {\n                        _this.updateSuggestions();\n                    }\n                    break;\n                case 'Enter':\n                    evt.preventDefault();\n                    if (_this.state.selectedIndex !== null) {\n                        _this.applySelectedSuggestion();\n                    }\n                    else {\n                        _this.submit();\n                    }\n                    break;\n                case 'Escape':\n                    evt.preventDefault();\n                    _this.setState(withSuggestionsHidden);\n                    break;\n            }\n        };\n        _this.handleKeyUp = function (evt) {\n            switch (evt.key) {\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                case 'Home':\n                case 'End':\n                    _this.updateSuggestions();\n                    break;\n            }\n        };\n        _this.selectSuggestionAt = function (index) { return function () {\n            _this.setState(withSuggestionAtIndexSelected(index));\n        }; };\n        _this.applySelectedSuggestion = function () {\n            if (_this.state.selectedIndex !== null) {\n                _this.applySuggestionAt(_this.state.selectedIndex)();\n            }\n        };\n        _this.applySuggestionAt = function (index) { return function () {\n            var _a = _this.props, value = _a.value, suggestions = _a.suggestions;\n            var selectedSuggestion = suggestions[index];\n            if (!selectedSuggestion) {\n                return;\n            }\n            var newValue = value.substr(0, selectedSuggestion.start) +\n                selectedSuggestion.text +\n                value.substr(selectedSuggestion.end);\n            _this.setState(withSuggestionsHidden);\n            _this.changeValue(newValue);\n            _this.focusInputElement();\n        }; };\n        _this.changeValue = function (value) {\n            var onChange = _this.props.onChange;\n            if (onChange) {\n                onChange(value);\n            }\n        };\n        _this.focusInputElement = function () {\n            if (_this.inputElement) {\n                _this.inputElement.focus();\n            }\n        };\n        _this.showSuggestions = function () {\n            _this.setState(withSuggestionsVisible);\n        };\n        _this.hideSuggestions = function () {\n            _this.setState(withSuggestionsHidden);\n        };\n        _this.submit = function () {\n            var _a = _this.props, isValid = _a.isValid, onSubmit = _a.onSubmit, value = _a.value;\n            if (isValid && onSubmit) {\n                onSubmit(value);\n            }\n            _this.setState(withSuggestionsHidden);\n        };\n        _this.updateSuggestions = function (value) {\n            var inputCursorPosition = _this.inputElement ? _this.inputElement.selectionStart || 0 : 0;\n            _this.props.loadSuggestions(value || _this.props.value, inputCursorPosition, 10);\n        };\n        return _this;\n    }\n    AutocompleteField.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, suggestions = _a.suggestions, isLoadingSuggestions = _a.isLoadingSuggestions, isValid = _a.isValid, placeholder = _a.placeholder, value = _a.value;\n        var _b = this.state, areSuggestionsVisible = _b.areSuggestionsVisible, selectedIndex = _b.selectedIndex;\n        return (React.createElement(EuiOutsideClickDetector, { onOutsideClick: this.hideSuggestions },\n            React.createElement(AutocompleteContainer, null,\n                React.createElement(FixedEuiFieldSearch, { fullWidth: true, inputRef: this.handleChangeInputRef, isLoading: isLoadingSuggestions, isInvalid: !isValid, onChange: this.handleChange, onFocus: this.showSuggestions, onKeyDown: this.handleKeyDown, onKeyUp: this.handleKeyUp, onSearch: this.submit, placeholder: placeholder, value: value }),\n                areSuggestionsVisible && !isLoadingSuggestions && suggestions.length > 0 ? (React.createElement(SuggestionsPanel, null, suggestions.map(function (suggestion, suggestionIndex) { return (React.createElement(SuggestionItem, { key: suggestion.text, suggestion: suggestion, isSelected: suggestionIndex === selectedIndex, onMouseEnter: _this.selectSuggestionAt(suggestionIndex), onClick: _this.applySuggestionAt(suggestionIndex) })); }))) : null)));\n    };\n    AutocompleteField.prototype.componentDidUpdate = function (prevProps, prevState) {\n        var hasNewSuggestions = prevProps.suggestions !== this.props.suggestions;\n        var hasNewValue = prevProps.value !== this.props.value;\n        if (hasNewValue) {\n            this.updateSuggestions();\n        }\n        if (hasNewSuggestions) {\n            this.showSuggestions();\n        }\n    };\n    return AutocompleteField;\n}(React.Component));\nexport { AutocompleteField };\nvar withPreviousSuggestionSelected = function (state, props) { return (tslib_1.__assign({}, state, { selectedIndex: props.suggestions.length === 0\n        ? null\n        : state.selectedIndex !== null\n            ? (state.selectedIndex + props.suggestions.length - 1) % props.suggestions.length\n            : Math.max(props.suggestions.length - 1, 0) })); };\nvar withNextSuggestionSelected = function (state, props) { return (tslib_1.__assign({}, state, { selectedIndex: props.suggestions.length === 0\n        ? null\n        : state.selectedIndex !== null\n            ? (state.selectedIndex + 1) % props.suggestions.length\n            : 0 })); };\nvar withSuggestionAtIndexSelected = function (suggestionIndex) { return function (state, props) { return (tslib_1.__assign({}, state, { selectedIndex: props.suggestions.length === 0\n        ? null\n        : suggestionIndex >= 0 && suggestionIndex < props.suggestions.length\n            ? suggestionIndex\n            : 0 })); }; };\nvar withSuggestionsVisible = function (state) { return (tslib_1.__assign({}, state, { areSuggestionsVisible: true })); };\nvar withSuggestionsHidden = function (state) { return (tslib_1.__assign({}, state, { areSuggestionsVisible: false, selectedIndex: null })); };\nvar FixedEuiFieldSearch = EuiFieldSearch;\nvar AutocompleteContainer = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  position: relative;\\n\"], [\"\\n  position: relative;\\n\"])));\nvar SuggestionsPanel = styled(EuiPanel).attrs({\n    paddingSize: 'none',\n    hasShadow: true,\n})(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  position: absolute;\\n  width: 100%;\\n  margin-top: 2px;\\n  overflow: hidden;\\n  z-index: 1000;\\n\"], [\"\\n  position: absolute;\\n  width: 100%;\\n  margin-top: 2px;\\n  overflow: hidden;\\n  z-index: 1000;\\n\"])));\nvar templateObject_1, templateObject_2;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/autocomplete_field/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/autocomplete_field/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiFieldSearch,\n  EuiFieldSearchProps,\n  EuiOutsideClickDetector,\n  EuiPanel,\n} from '@elastic/eui';\nimport React from 'react';\nimport styled from 'styled-components';\n\n// @ts-ignore\nimport { AutocompleteSuggestion } from 'ui/autocomplete_providers';\n\nimport { composeStateUpdaters } from '../../utils/typed_react';\nimport { SuggestionItem } from './suggestion_item';\n\ninterface AutocompleteFieldProps {\n  isLoadingSuggestions: boolean;\n  isValid: boolean;\n  loadSuggestions: (value: string, cursorPosition: number, maxCount?: number) => void;\n  onSubmit?: (value: string) => void;\n  onChange?: (value: string) => void;\n  placeholder?: string;\n  suggestions: AutocompleteSuggestion[];\n  value: string;\n}\n\ninterface AutocompleteFieldState {\n  areSuggestionsVisible: boolean;\n  selectedIndex: number | null;\n}\n\nexport class AutocompleteField extends React.Component<\n  AutocompleteFieldProps,\n  AutocompleteFieldState\n> {\n  public readonly state: AutocompleteFieldState = {\n    areSuggestionsVisible: false,\n    selectedIndex: null,\n  };\n\n  private inputElement: HTMLInputElement | null = null;\n\n  public render() {\n    const { suggestions, isLoadingSuggestions, isValid, placeholder, value } = this.props;\n    const { areSuggestionsVisible, selectedIndex } = this.state;\n\n    return (\n      <EuiOutsideClickDetector onOutsideClick={this.hideSuggestions}>\n        <AutocompleteContainer>\n          <FixedEuiFieldSearch\n            fullWidth\n            inputRef={this.handleChangeInputRef}\n            isLoading={isLoadingSuggestions}\n            isInvalid={!isValid}\n            onChange={this.handleChange}\n            onFocus={this.showSuggestions}\n            onKeyDown={this.handleKeyDown}\n            onKeyUp={this.handleKeyUp}\n            onSearch={this.submit}\n            placeholder={placeholder}\n            value={value}\n          />\n          {areSuggestionsVisible && !isLoadingSuggestions && suggestions.length > 0 ? (\n            <SuggestionsPanel>\n              {suggestions.map((suggestion, suggestionIndex) => (\n                <SuggestionItem\n                  key={suggestion.text}\n                  suggestion={suggestion}\n                  isSelected={suggestionIndex === selectedIndex}\n                  onMouseEnter={this.selectSuggestionAt(suggestionIndex)}\n                  onClick={this.applySuggestionAt(suggestionIndex)}\n                />\n              ))}\n            </SuggestionsPanel>\n          ) : null}\n        </AutocompleteContainer>\n      </EuiOutsideClickDetector>\n    );\n  }\n\n  public componentDidUpdate(prevProps: AutocompleteFieldProps, prevState: AutocompleteFieldState) {\n    const hasNewSuggestions = prevProps.suggestions !== this.props.suggestions;\n    const hasNewValue = prevProps.value !== this.props.value;\n\n    if (hasNewValue) {\n      this.updateSuggestions();\n    }\n\n    if (hasNewSuggestions) {\n      this.showSuggestions();\n    }\n  }\n\n  private handleChangeInputRef = (element: HTMLInputElement | null) => {\n    this.inputElement = element;\n  };\n\n  private handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    this.changeValue(evt.currentTarget.value);\n  };\n\n  private handleKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n    const { suggestions } = this.props;\n\n    switch (evt.key) {\n      case 'ArrowUp':\n        evt.preventDefault();\n        if (suggestions.length > 0) {\n          this.setState(\n            composeStateUpdaters(withSuggestionsVisible, withPreviousSuggestionSelected)\n          );\n        }\n        break;\n      case 'ArrowDown':\n        evt.preventDefault();\n        if (suggestions.length > 0) {\n          this.setState(composeStateUpdaters(withSuggestionsVisible, withNextSuggestionSelected));\n        } else {\n          this.updateSuggestions();\n        }\n        break;\n      case 'Enter':\n        evt.preventDefault();\n        if (this.state.selectedIndex !== null) {\n          this.applySelectedSuggestion();\n        } else {\n          this.submit();\n        }\n        break;\n      case 'Escape':\n        evt.preventDefault();\n        this.setState(withSuggestionsHidden);\n        break;\n    }\n  };\n\n  private handleKeyUp = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (evt.key) {\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'Home':\n      case 'End':\n        this.updateSuggestions();\n        break;\n    }\n  };\n\n  private selectSuggestionAt = (index: number) => () => {\n    this.setState(withSuggestionAtIndexSelected(index));\n  };\n\n  private applySelectedSuggestion = () => {\n    if (this.state.selectedIndex !== null) {\n      this.applySuggestionAt(this.state.selectedIndex)();\n    }\n  };\n\n  private applySuggestionAt = (index: number) => () => {\n    const { value, suggestions } = this.props;\n    const selectedSuggestion = suggestions[index];\n\n    if (!selectedSuggestion) {\n      return;\n    }\n\n    const newValue =\n      value.substr(0, selectedSuggestion.start) +\n      selectedSuggestion.text +\n      value.substr(selectedSuggestion.end);\n\n    this.setState(withSuggestionsHidden);\n    this.changeValue(newValue);\n    this.focusInputElement();\n  };\n\n  private changeValue = (value: string) => {\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(value);\n    }\n  };\n\n  private focusInputElement = () => {\n    if (this.inputElement) {\n      this.inputElement.focus();\n    }\n  };\n\n  private showSuggestions = () => {\n    this.setState(withSuggestionsVisible);\n  };\n\n  private hideSuggestions = () => {\n    this.setState(withSuggestionsHidden);\n  };\n\n  private submit = () => {\n    const { isValid, onSubmit, value } = this.props;\n\n    if (isValid && onSubmit) {\n      onSubmit(value);\n    }\n\n    this.setState(withSuggestionsHidden);\n  };\n\n  private updateSuggestions = (value?: string) => {\n    const inputCursorPosition = this.inputElement ? this.inputElement.selectionStart || 0 : 0;\n    this.props.loadSuggestions(value || this.props.value, inputCursorPosition, 10);\n  };\n}\n\nconst withPreviousSuggestionSelected = (\n  state: AutocompleteFieldState,\n  props: AutocompleteFieldProps\n): AutocompleteFieldState => ({\n  ...state,\n  selectedIndex:\n    props.suggestions.length === 0\n      ? null\n      : state.selectedIndex !== null\n      ? (state.selectedIndex + props.suggestions.length - 1) % props.suggestions.length\n      : Math.max(props.suggestions.length - 1, 0),\n});\n\nconst withNextSuggestionSelected = (\n  state: AutocompleteFieldState,\n  props: AutocompleteFieldProps\n): AutocompleteFieldState => ({\n  ...state,\n  selectedIndex:\n    props.suggestions.length === 0\n      ? null\n      : state.selectedIndex !== null\n      ? (state.selectedIndex + 1) % props.suggestions.length\n      : 0,\n});\n\nconst withSuggestionAtIndexSelected = (suggestionIndex: number) => (\n  state: AutocompleteFieldState,\n  props: AutocompleteFieldProps\n): AutocompleteFieldState => ({\n  ...state,\n  selectedIndex:\n    props.suggestions.length === 0\n      ? null\n      : suggestionIndex >= 0 && suggestionIndex < props.suggestions.length\n      ? suggestionIndex\n      : 0,\n});\n\nconst withSuggestionsVisible = (state: AutocompleteFieldState) => ({\n  ...state,\n  areSuggestionsVisible: true,\n});\n\nconst withSuggestionsHidden = (state: AutocompleteFieldState) => ({\n  ...state,\n  areSuggestionsVisible: false,\n  selectedIndex: null,\n});\n\nconst FixedEuiFieldSearch: React.SFC<\n  React.InputHTMLAttributes<HTMLInputElement> &\n    EuiFieldSearchProps & {\n      inputRef?: (element: HTMLInputElement | null) => void;\n      onSearch: (value: string) => void;\n    }\n> = EuiFieldSearch as any;\n\nconst AutocompleteContainer = styled.div`\n  position: relative;\n`;\n\nconst SuggestionsPanel = styled(EuiPanel).attrs({\n  paddingSize: 'none',\n  hasShadow: true,\n})`\n  position: absolute;\n  width: 100%;\n  margin-top: 2px;\n  overflow: hidden;\n  z-index: 1000;\n`;\n"]}]}