{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/tags/rest_tags_adapter.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/tags/rest_tags_adapter.ts","mtime":1567631711882},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { uniq } from 'lodash';\nvar RestTagsAdapter = /** @class */ (function () {\n    function RestTagsAdapter(REST) {\n        this.REST = REST;\n    }\n    RestTagsAdapter.prototype.getTagsWithIds = function (tagIds) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.REST.get(\"/api/beats/tags/\" + uniq(tagIds).join(','))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        e_1 = _a.sent();\n                        return [2 /*return*/, []];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RestTagsAdapter.prototype.getAll = function (ESQuery) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.REST.get(\"/api/beats/tags\", { ESQuery: ESQuery })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        e_2 = _a.sent();\n                        return [2 /*return*/, []];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RestTagsAdapter.prototype.delete = function (tagIds) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.REST.delete(\"/api/beats/tags/\" + uniq(tagIds).join(','))];\n                    case 1: return [2 /*return*/, (_a.sent()).success];\n                }\n            });\n        });\n    };\n    RestTagsAdapter.prototype.upsertTag = function (tag) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var response;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.REST.put(\"/api/beats/tag/\" + tag.id, {\n                            color: tag.color,\n                            name: tag.name,\n                        })];\n                    case 1:\n                        response = _a.sent();\n                        return [2 /*return*/, response.success ? tag : null];\n                }\n            });\n        });\n    };\n    RestTagsAdapter.prototype.getAssignable = function (beats) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_3;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.REST.get(\"/api/beats/tags/assignable/\" + beats.map(function (beat) { return beat.id; }).join(','))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        e_3 = _a.sent();\n                        return [2 /*return*/, []];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return RestTagsAdapter;\n}());\nexport { RestTagsAdapter };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/tags/rest_tags_adapter.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/tags/rest_tags_adapter.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAK9B;IACE,yBAA6B,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;IAAG,CAAC;IAExC,wCAAc,GAA3B,UAA4B,MAAgB;+CAAG,OAAO;;;;;;wBAE3C,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,qBAAmB,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAG,CAAC,EAAA;4BAAlF,sBAAO,SAA2E,EAAC;;;wBAEnF,sBAAO,EAAE,EAAC;;;;;KAEb;IAEY,gCAAM,GAAnB,UAAoB,OAAe;+CAAG,OAAO;;;;;;wBAElC,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,iBAAiB,EAAE,EAAE,OAAO,SAAA,EAAE,CAAC,EAAA;4BAArE,sBAAO,SAA8D,EAAC;;;wBAEtE,sBAAO,EAAE,EAAC;;;;;KAEb;IAEY,gCAAM,GAAnB,UAAoB,MAAgB;+CAAG,OAAO;;;4BACpC,qBAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAC5B,qBAAmB,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAG,CAC5C,EAAA;4BAFD,sBAAO,CAAC,SAEP,CAAC,CAAC,OAAO,EAAC;;;;KACZ;IAEY,mCAAS,GAAtB,UAAuB,GAAY;+CAAG,OAAO;;;;4BAC1B,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,oBAAkB,GAAG,CAAC,EAAI,EAAE;4BACrF,KAAK,EAAE,GAAG,CAAC,KAAK;4BAChB,IAAI,EAAE,GAAG,CAAC,IAAI;yBACf,CAAC,EAAA;;wBAHI,QAAQ,GAAG,SAGf;wBAEF,sBAAO,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAC;;;;KACtC;IAEY,uCAAa,GAA1B,UAA2B,KAAe;;;;;;;wBAE/B,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CACxB,gCAA8B,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,EAAE,EAAP,CAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAG,CACrE,EAAA;4BAFD,sBAAO,SAEN,EAAC;;;wBAEF,sBAAO,EAAE,EAAC;;;;;KAEb;IACH,sBAAC;AAAD,CAAC,AA3CD,IA2CC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { uniq } from 'lodash';\nimport { BeatTag, CMBeat } from '../../../../common/domain_types';\nimport { RestAPIAdapter } from '../rest_api/adapter_types';\nimport { CMTagsAdapter } from './adapter_types';\n\nexport class RestTagsAdapter implements CMTagsAdapter {\n  constructor(private readonly REST: RestAPIAdapter) {}\n\n  public async getTagsWithIds(tagIds: string[]): Promise<BeatTag[]> {\n    try {\n      return await this.REST.get<BeatTag[]>(`/api/beats/tags/${uniq(tagIds).join(',')}`);\n    } catch (e) {\n      return [];\n    }\n  }\n\n  public async getAll(ESQuery: string): Promise<BeatTag[]> {\n    try {\n      return await this.REST.get<BeatTag[]>(`/api/beats/tags`, { ESQuery });\n    } catch (e) {\n      return [];\n    }\n  }\n\n  public async delete(tagIds: string[]): Promise<boolean> {\n    return (await this.REST.delete<{ success: boolean }>(\n      `/api/beats/tags/${uniq(tagIds).join(',')}`\n    )).success;\n  }\n\n  public async upsertTag(tag: BeatTag): Promise<BeatTag | null> {\n    const response = await this.REST.put<{ success: boolean }>(`/api/beats/tag/${tag.id}`, {\n      color: tag.color,\n      name: tag.name,\n    });\n\n    return response.success ? tag : null;\n  }\n\n  public async getAssignable(beats: CMBeat[]) {\n    try {\n      return await this.REST.get<BeatTag[]>(\n        `/api/beats/tags/assignable/${beats.map(beat => beat.id).join(',')}`\n      );\n    } catch (e) {\n      return [];\n    }\n  }\n}\n"]}]}