{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/filter_bar.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/filter_bar.tsx","mtime":1567631712328},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n// @ts-ignore No typings for EuiSearchBar\nimport { EuiFlexGroup, EuiFlexItem, EuiIcon, EuiSearchBar, EuiToolTip } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { take } from 'lodash';\nimport React from 'react';\nimport { filterBarSearchSchema } from './search_schema';\nvar MAX_SELECTION_LENGTH = 20;\nvar SEARCH_THRESHOLD = 2;\nexport var FilterBar = function (_a) {\n    var _b = _a.filterBar, id = _b.id, port = _b.port, type = _b.type, updateQuery = _a.updateQuery;\n    var showFilterDisclaimer = (id && id.length && id.length > MAX_SELECTION_LENGTH) ||\n        (port && port.length && port.length > MAX_SELECTION_LENGTH);\n    // TODO: add a factory function + type for these filter options\n    var filters = [\n        {\n            type: 'field_value_toggle_group',\n            field: 'monitor.status',\n            items: [\n                {\n                    value: 'up',\n                    name: i18n.translate('xpack.uptime.filterBar.filterUpLabel', {\n                        defaultMessage: 'Up',\n                    }),\n                },\n                {\n                    value: 'down',\n                    name: i18n.translate('xpack.uptime.filterBar.filterDownLabel', {\n                        defaultMessage: 'Down',\n                    }),\n                },\n            ],\n        },\n        // TODO: add health to this select\n        {\n            type: 'field_value_selection',\n            field: 'monitor.id',\n            name: i18n.translate('xpack.uptime.filterBar.options.hostLabel', {\n                defaultMessage: 'ID',\n            }),\n            multiSelect: false,\n            options: take(id || [], MAX_SELECTION_LENGTH).map(function (idValue) { return ({\n                value: idValue,\n                view: idValue,\n            }); }),\n            searchThreshold: SEARCH_THRESHOLD,\n        },\n        {\n            type: 'field_value_selection',\n            field: 'tcp.port',\n            name: i18n.translate('xpack.uptime.filterBar.options.portLabel', {\n                defaultMessage: 'Port',\n            }),\n            multiSelect: false,\n            options: take(port || [], MAX_SELECTION_LENGTH).map(function (portValue) { return ({\n                value: portValue,\n                view: portValue,\n            }); }),\n            searchThreshold: SEARCH_THRESHOLD,\n        },\n        {\n            type: 'field_value_selection',\n            field: 'monitor.type',\n            name: i18n.translate('xpack.uptime.filterBar.options.typeLabel', {\n                defaultMessage: 'Type',\n            }),\n            multiSelect: false,\n            options: type && type.map(function (typeValue) { return ({ value: typeValue, view: typeValue }); }),\n            searchThreshold: SEARCH_THRESHOLD,\n        },\n    ];\n    return (React.createElement(EuiFlexGroup, null,\n        React.createElement(EuiFlexItem, { grow: true },\n            React.createElement(EuiSearchBar\n            // TODO: update typing\n            , { \n                // TODO: update typing\n                onChange: function (_a) {\n                    var query = _a.query;\n                    try {\n                        var esQuery = void 0;\n                        if (query && query.text) {\n                            esQuery = EuiSearchBar.Query.toESQuery(query);\n                        }\n                        updateQuery(esQuery);\n                    }\n                    catch (e) {\n                        updateQuery(undefined);\n                    }\n                }, filters: filters, schema: filterBarSearchSchema })),\n        showFilterDisclaimer && (React.createElement(EuiFlexItem, { grow: false },\n            React.createElement(EuiToolTip, { position: \"left\", title: i18n.translate('xpack.uptime.filterBar.filterLimitationsTooltipTitle', {\n                    defaultMessage: 'Filter limitations',\n                }), content: i18n.translate('xpack.uptime.filterBar.filterLimitationsTooltipText', {\n                    values: { selectionLength: MAX_SELECTION_LENGTH },\n                    defaultMessage: 'The top {selectionLength} filter options for each field are displayed, but you can modify the filters manually or search for additional values.',\n                }) },\n                React.createElement(EuiIcon, { type: \"iInCircle\", size: \"l\" }))))));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/filter_bar.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/filter_bar.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n// @ts-ignore No typings for EuiSearchBar\nimport { EuiFlexGroup, EuiFlexItem, EuiIcon, EuiSearchBar, EuiToolTip } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { take } from 'lodash';\nimport React from 'react';\nimport { FilterBar as FilterBarType } from '../../../common/graphql/types';\nimport { filterBarSearchSchema } from './search_schema';\n\ninterface FilterBarProps {\n  filterBar: FilterBarType;\n  updateQuery: (query: object | undefined) => void;\n}\n\nconst MAX_SELECTION_LENGTH = 20;\nconst SEARCH_THRESHOLD = 2;\n\nexport const FilterBar = ({ filterBar: { id, port, type }, updateQuery }: FilterBarProps) => {\n  const showFilterDisclaimer =\n    (id && id.length && id.length > MAX_SELECTION_LENGTH) ||\n    (port && port.length && port.length > MAX_SELECTION_LENGTH);\n\n  // TODO: add a factory function + type for these filter options\n  const filters = [\n    {\n      type: 'field_value_toggle_group',\n      field: 'monitor.status',\n      items: [\n        {\n          value: 'up',\n          name: i18n.translate('xpack.uptime.filterBar.filterUpLabel', {\n            defaultMessage: 'Up',\n          }),\n        },\n        {\n          value: 'down',\n          name: i18n.translate('xpack.uptime.filterBar.filterDownLabel', {\n            defaultMessage: 'Down',\n          }),\n        },\n      ],\n    },\n    // TODO: add health to this select\n    {\n      type: 'field_value_selection',\n      field: 'monitor.id',\n      name: i18n.translate('xpack.uptime.filterBar.options.hostLabel', {\n        defaultMessage: 'ID',\n      }),\n      multiSelect: false,\n      options: take(id || [], MAX_SELECTION_LENGTH).map((idValue: any) => ({\n        value: idValue,\n        view: idValue,\n      })),\n      searchThreshold: SEARCH_THRESHOLD,\n    },\n    {\n      type: 'field_value_selection',\n      field: 'tcp.port',\n      name: i18n.translate('xpack.uptime.filterBar.options.portLabel', {\n        defaultMessage: 'Port',\n      }),\n      multiSelect: false,\n      options: take(port || [], MAX_SELECTION_LENGTH).map((portValue: any) => ({\n        value: portValue,\n        view: portValue,\n      })),\n      searchThreshold: SEARCH_THRESHOLD,\n    },\n    {\n      type: 'field_value_selection',\n      field: 'monitor.type',\n      name: i18n.translate('xpack.uptime.filterBar.options.typeLabel', {\n        defaultMessage: 'Type',\n      }),\n      multiSelect: false,\n      options: type && type.map((typeValue: string) => ({ value: typeValue, view: typeValue })),\n      searchThreshold: SEARCH_THRESHOLD,\n    },\n  ];\n  return (\n    <EuiFlexGroup>\n      <EuiFlexItem grow>\n        <EuiSearchBar\n          // TODO: update typing\n          onChange={({ query }: { query?: { text: string } }) => {\n            try {\n              let esQuery;\n              if (query && query.text) {\n                esQuery = EuiSearchBar.Query.toESQuery(query);\n              }\n              updateQuery(esQuery);\n            } catch (e) {\n              updateQuery(undefined);\n            }\n          }}\n          filters={filters}\n          schema={filterBarSearchSchema}\n        />\n      </EuiFlexItem>\n      {showFilterDisclaimer && (\n        <EuiFlexItem grow={false}>\n          <EuiToolTip\n            position=\"left\"\n            title={i18n.translate('xpack.uptime.filterBar.filterLimitationsTooltipTitle', {\n              defaultMessage: 'Filter limitations',\n            })}\n            content={i18n.translate('xpack.uptime.filterBar.filterLimitationsTooltipText', {\n              values: { selectionLength: MAX_SELECTION_LENGTH },\n              defaultMessage:\n                'The top {selectionLength} filter options for each field are displayed, but you can modify the filters manually or search for additional values.',\n            })}\n          >\n            <EuiIcon type=\"iInCircle\" size=\"l\" />\n          </EuiToolTip>\n        </EuiFlexItem>\n      )}\n    </EuiFlexGroup>\n  );\n};\n"]}]}