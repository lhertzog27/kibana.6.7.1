{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/TransactionPropertiesTable.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/TransactionPropertiesTable.tsx","mtime":1567631711862},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiSpacer, EuiTab, EuiTabs } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { first, get } from 'lodash';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { fromQuery, history, toQuery } from 'x-pack/plugins/apm/public/components/shared/Links/url_helpers';\nimport { px, units } from '../../../../style/variables';\nimport { getPropertyTabNames, PropertiesTable } from '../../../shared/PropertiesTable';\nimport { WaterfallContainer } from './WaterfallContainer';\nvar TableContainer = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  padding: \", \" \", \" 0;\\n\"], [\"\\n  padding: \", \" \", \" 0;\\n\"])), px(units.plus), px(units.plus));\n// Ensure the selected tab exists or use the first\nfunction getCurrentTab(tabs, selectedTabKey) {\n    if (tabs === void 0) { tabs = []; }\n    var selectedTab = tabs.find(function (_a) {\n        var key = _a.key;\n        return key === selectedTabKey;\n    });\n    return selectedTab ? selectedTab : first(tabs) || {};\n}\nvar timelineTab = {\n    key: 'timeline',\n    label: i18n.translate('xpack.apm.propertiesTable.tabs.timelineLabel', {\n        defaultMessage: 'Timeline'\n    })\n};\nfunction getTabs(transactionData) {\n    var dynamicProps = Object.keys(transactionData.context || {});\n    return tslib_1.__spread([timelineTab], getPropertyTabNames(dynamicProps));\n}\nexport function TransactionPropertiesTable(_a) {\n    var location = _a.location, transaction = _a.transaction, urlParams = _a.urlParams, waterfall = _a.waterfall;\n    var tabs = getTabs(transaction);\n    var currentTab = getCurrentTab(tabs, urlParams.detailTab);\n    var agentName = transaction.context.service.agent.name;\n    return (React.createElement(\"div\", null,\n        React.createElement(EuiTabs, null, tabs.map(function (_a) {\n            var key = _a.key, label = _a.label;\n            return (React.createElement(EuiTab, { onClick: function () {\n                    history.replace(tslib_1.__assign({}, location, { search: fromQuery(tslib_1.__assign({}, toQuery(location.search), { detailTab: key })) }));\n                }, isSelected: currentTab.key === key, key: key }, label));\n        })),\n        React.createElement(EuiSpacer, null),\n        currentTab.key === timelineTab.key && (React.createElement(WaterfallContainer, { transaction: transaction, location: location, urlParams: urlParams, waterfall: waterfall })),\n        currentTab.key !== timelineTab.key && (React.createElement(TableContainer, null,\n            React.createElement(PropertiesTable, { propData: get(transaction.context, currentTab.key), propKey: currentTab.key, agentName: agentName })))));\n}\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/TransactionPropertiesTable.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/TransactionPropertiesTable.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiSpacer, EuiTab, EuiTabs } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { Location } from 'history';\nimport { first, get } from 'lodash';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {\n  fromQuery,\n  history,\n  toQuery\n} from 'x-pack/plugins/apm/public/components/shared/Links/url_helpers';\nimport { Transaction } from '../../../../../typings/es_schemas/Transaction';\nimport { IUrlParams } from '../../../../store/urlParams';\nimport { px, units } from '../../../../style/variables';\nimport {\n  getPropertyTabNames,\n  PropertiesTable,\n  Tab\n} from '../../../shared/PropertiesTable';\nimport { WaterfallContainer } from './WaterfallContainer';\nimport { IWaterfall } from './WaterfallContainer/Waterfall/waterfall_helpers/waterfall_helpers';\n\nconst TableContainer = styled.div`\n  padding: ${px(units.plus)} ${px(units.plus)} 0;\n`;\n\n// Ensure the selected tab exists or use the first\nfunction getCurrentTab(tabs: Tab[] = [], selectedTabKey?: string) {\n  const selectedTab = tabs.find(({ key }) => key === selectedTabKey);\n\n  return selectedTab ? selectedTab : first(tabs) || {};\n}\n\nconst timelineTab = {\n  key: 'timeline',\n  label: i18n.translate('xpack.apm.propertiesTable.tabs.timelineLabel', {\n    defaultMessage: 'Timeline'\n  })\n};\n\nfunction getTabs(transactionData: Transaction) {\n  const dynamicProps = Object.keys(transactionData.context || {});\n  return [timelineTab, ...getPropertyTabNames(dynamicProps)];\n}\n\ninterface TransactionPropertiesTableProps {\n  location: Location;\n  transaction: Transaction;\n  urlParams: IUrlParams;\n  waterfall: IWaterfall;\n}\n\nexport function TransactionPropertiesTable({\n  location,\n  transaction,\n  urlParams,\n  waterfall\n}: TransactionPropertiesTableProps) {\n  const tabs = getTabs(transaction);\n  const currentTab = getCurrentTab(tabs, urlParams.detailTab);\n  const agentName = transaction.context.service.agent.name;\n\n  return (\n    <div>\n      <EuiTabs>\n        {tabs.map(({ key, label }) => {\n          return (\n            <EuiTab\n              onClick={() => {\n                history.replace({\n                  ...location,\n                  search: fromQuery({\n                    ...toQuery(location.search),\n                    detailTab: key\n                  })\n                });\n              }}\n              isSelected={currentTab.key === key}\n              key={key}\n            >\n              {label}\n            </EuiTab>\n          );\n        })}\n      </EuiTabs>\n\n      <EuiSpacer />\n\n      {currentTab.key === timelineTab.key && (\n        <WaterfallContainer\n          transaction={transaction}\n          location={location}\n          urlParams={urlParams}\n          waterfall={waterfall}\n        />\n      )}\n\n      {currentTab.key !== timelineTab.key && (\n        <TableContainer>\n          <PropertiesTable\n            propData={get(transaction.context, currentTab.key)}\n            propKey={currentTab.key}\n            agentName={agentName}\n          />\n        </TableContainer>\n      )}\n    </div>\n  );\n}\n"]}]}