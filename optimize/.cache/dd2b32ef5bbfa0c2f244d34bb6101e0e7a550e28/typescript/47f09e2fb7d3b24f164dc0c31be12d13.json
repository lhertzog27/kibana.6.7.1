{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_entries/operations/log_entries.gql_query.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_entries/operations/log_entries.gql_query.ts","mtime":1567631711989},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport gql from 'graphql-tag';\nimport { sharedFragments } from '../../../../../common/graphql/shared';\nexport var logEntriesQuery = gql(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  query LogEntries(\\n    $sourceId: ID = \\\"default\\\"\\n    $timeKey: InfraTimeKeyInput!\\n    $countBefore: Int = 0\\n    $countAfter: Int = 0\\n    $filterQuery: String\\n  ) {\\n    source(id: $sourceId) {\\n      id\\n      logEntriesAround(\\n        key: $timeKey\\n        countBefore: $countBefore\\n        countAfter: $countAfter\\n        filterQuery: $filterQuery\\n      ) {\\n        start {\\n          ...InfraTimeKeyFields\\n        }\\n        end {\\n          ...InfraTimeKeyFields\\n        }\\n        hasMoreBefore\\n        hasMoreAfter\\n        entries {\\n          gid\\n          key {\\n            time\\n            tiebreaker\\n          }\\n          message {\\n            ... on InfraLogMessageFieldSegment {\\n              field\\n              value\\n            }\\n            ... on InfraLogMessageConstantSegment {\\n              constant\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  \", \"\\n\"], [\"\\n  query LogEntries(\\n    $sourceId: ID = \\\"default\\\"\\n    $timeKey: InfraTimeKeyInput!\\n    $countBefore: Int = 0\\n    $countAfter: Int = 0\\n    $filterQuery: String\\n  ) {\\n    source(id: $sourceId) {\\n      id\\n      logEntriesAround(\\n        key: $timeKey\\n        countBefore: $countBefore\\n        countAfter: $countAfter\\n        filterQuery: $filterQuery\\n      ) {\\n        start {\\n          ...InfraTimeKeyFields\\n        }\\n        end {\\n          ...InfraTimeKeyFields\\n        }\\n        hasMoreBefore\\n        hasMoreAfter\\n        entries {\\n          gid\\n          key {\\n            time\\n            tiebreaker\\n          }\\n          message {\\n            ... on InfraLogMessageFieldSegment {\\n              field\\n              value\\n            }\\n            ... on InfraLogMessageConstantSegment {\\n              constant\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  \", \"\\n\"])), sharedFragments.InfraTimeKey);\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_entries/operations/log_entries.gql_query.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_entries/operations/log_entries.gql_query.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,GAAG,MAAM,aAAa,CAAC;AAE9B,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AAEvE,MAAM,CAAC,IAAM,eAAe,GAAG,GAAG,w+BAAA,u5BA4C9B,EAA4B,IAC/B,KADG,eAAe,CAAC,YAAY,CAC/B,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport gql from 'graphql-tag';\n\nimport { sharedFragments } from '../../../../../common/graphql/shared';\n\nexport const logEntriesQuery = gql`\n  query LogEntries(\n    $sourceId: ID = \"default\"\n    $timeKey: InfraTimeKeyInput!\n    $countBefore: Int = 0\n    $countAfter: Int = 0\n    $filterQuery: String\n  ) {\n    source(id: $sourceId) {\n      id\n      logEntriesAround(\n        key: $timeKey\n        countBefore: $countBefore\n        countAfter: $countAfter\n        filterQuery: $filterQuery\n      ) {\n        start {\n          ...InfraTimeKeyFields\n        }\n        end {\n          ...InfraTimeKeyFields\n        }\n        hasMoreBefore\n        hasMoreAfter\n        entries {\n          gid\n          key {\n            time\n            tiebreaker\n          }\n          message {\n            ... on InfraLogMessageFieldSegment {\n              field\n              value\n            }\n            ... on InfraLogMessageConstantSegment {\n              constant\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ${sharedFragments.InfraTimeKey}\n`;\n"]}]}