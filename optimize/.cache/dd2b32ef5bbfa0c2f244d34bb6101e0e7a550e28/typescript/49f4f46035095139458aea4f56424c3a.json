{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/with_kibana_chrome.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/with_kibana_chrome.tsx","mtime":1567631711984},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport chrome from 'ui/chrome';\nvar uiSettingsKeys = ['k7Design'];\nvar WithKibanaChrome = /** @class */ (function (_super) {\n    tslib_1.__extends(WithKibanaChrome, _super);\n    function WithKibanaChrome() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            uiSettings: {\n                k7Design: chrome.getUiSettingsClient().get('k7design'),\n            },\n            basePath: chrome.getBasePath(),\n        };\n        return _this;\n    }\n    WithKibanaChrome.prototype.componentDidMount = function () {\n        var _this = this;\n        this.uiSettingsSubscription = chrome\n            .getUiSettingsClient()\n            .getUpdate$().subscribe({\n            next: function (_a) {\n                var key = _a.key, newValue = _a.newValue;\n                if (uiSettingsKeys.includes(key)) {\n                    _this.setState(function (state) {\n                        var _a;\n                        return (tslib_1.__assign({}, state, { uiSettings: tslib_1.__assign({}, state.uiSettings, (_a = {}, _a[key] = newValue, _a)) }));\n                    });\n                }\n            },\n        });\n    };\n    WithKibanaChrome.prototype.componentWillUnmount = function () {\n        if (this.uiSettingsSubscription) {\n            this.uiSettingsSubscription.unsubscribe();\n        }\n    };\n    WithKibanaChrome.prototype.render = function () {\n        return this.props.children(tslib_1.__assign({}, this.state, { setBreadcrumbs: chrome.breadcrumbs.set }));\n    };\n    return WithKibanaChrome;\n}(React.Component));\nexport { WithKibanaChrome };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/with_kibana_chrome.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/containers/with_kibana_chrome.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,MAAM,MAAM,WAAW,CAAC;AA6B/B,IAAM,cAAc,GAAG,CAAC,UAAU,CAAC,CAAC;AAEpC;IAAsC,4CAGrC;IAHD;QAAA,qEA2CC;QAvCQ,WAAK,GAA0B;YACpC,UAAU,EAAE;gBACV,QAAQ,EAAE,MAAM,CAAC,mBAAmB,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC;aACvD;YACD,QAAQ,EAAE,MAAM,CAAC,WAAW,EAAE;SAC/B,CAAC;;IAkCJ,CAAC;IA9BQ,4CAAiB,GAAxB;QAAA,iBAgBC;QAfC,IAAI,CAAC,sBAAsB,GAAI,MAAM;aAClC,mBAAmB,EAAE;aACrB,UAAU,EAAkB,CAAC,SAAS,CAAC;YACxC,IAAI,EAAE,UAAC,EAAiB;oBAAf,YAAG,EAAE,sBAAQ;gBACpB,IAAI,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;oBAChC,KAAI,CAAC,QAAQ,CAAC,UAAA,KAAK;;wBAAI,OAAA,sBAClB,KAAK,IACR,UAAU,uBACL,KAAK,CAAC,UAAU,eAClB,GAAG,IAAG,QAAQ,UAEjB;oBANqB,CAMrB,CAAC,CAAC;iBACL;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAEM,+CAAoB,GAA3B;QACE,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;SAC3C;IACH,CAAC;IAEM,iCAAM,GAAb;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,sBACrB,IAAI,CAAC,KAAK,IACb,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,GAAG,IACtC,CAAC;IACL,CAAC;IACH,uBAAC;AAAD,CAAC,AA3CD,CAAsC,KAAK,CAAC,SAAS,GA2CpD","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\nimport { Observable, Subscription } from 'rxjs';\n\nimport chrome from 'ui/chrome';\nimport { Breadcrumb } from 'ui/chrome/api/breadcrumbs';\nimport { RendererFunction } from '../utils/typed_react';\n\n// replace with import from platform core when available\ninterface UiSettings {\n  k7Design: boolean;\n}\n\n// replace with import from platform core when available\ntype UiSettings$ = Observable<{\n  key: string;\n  oldValue: any;\n  newValue: any;\n}>;\n\ninterface WithKibanaChromeProps {\n  children: RendererFunction<\n    {\n      setBreadcrumbs: (newBreadcrumbs: Breadcrumb[]) => void;\n    } & WithKibanaChromeState\n  >;\n}\n\ninterface WithKibanaChromeState {\n  basePath: string;\n  uiSettings: UiSettings;\n}\n\nconst uiSettingsKeys = ['k7Design'];\n\nexport class WithKibanaChrome extends React.Component<\n  WithKibanaChromeProps,\n  WithKibanaChromeState\n> {\n  public state: WithKibanaChromeState = {\n    uiSettings: {\n      k7Design: chrome.getUiSettingsClient().get('k7design'),\n    },\n    basePath: chrome.getBasePath(),\n  };\n\n  private uiSettingsSubscription?: Subscription;\n\n  public componentDidMount() {\n    this.uiSettingsSubscription = (chrome\n      .getUiSettingsClient()\n      .getUpdate$() as UiSettings$).subscribe({\n      next: ({ key, newValue }) => {\n        if (uiSettingsKeys.includes(key)) {\n          this.setState(state => ({\n            ...state,\n            uiSettings: {\n              ...state.uiSettings,\n              [key]: newValue,\n            },\n          }));\n        }\n      },\n    });\n  }\n\n  public componentWillUnmount() {\n    if (this.uiSettingsSubscription) {\n      this.uiSettingsSubscription.unsubscribe();\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      ...this.state,\n      setBreadcrumbs: chrome.breadcrumbs.set,\n    });\n  }\n}\n"]}]}