{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/store/reactReduxRequest/transactionDetails.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/store/reactReduxRequest/transactionDetails.tsx","mtime":1567631711871},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React from 'react';\nimport { Request } from 'react-redux-request';\nimport { loadTransaction } from '../../services/rest/apm/transactions';\nvar ID = 'transactionDetails';\nexport function getTransactionDetails(state) {\n    return state.reactReduxRequest[ID];\n}\nexport function TransactionDetailsRequest(_a) {\n    var urlParams = _a.urlParams, render = _a.render;\n    var serviceName = urlParams.serviceName, start = urlParams.start, end = urlParams.end, transactionId = urlParams.transactionId, traceId = urlParams.traceId, kuery = urlParams.kuery;\n    if (!(serviceName && start && end && transactionId)) {\n        return null;\n    }\n    return (React.createElement(Request, { id: ID, fn: loadTransaction, selector: getTransactionDetails, args: [{ serviceName: serviceName, start: start, end: end, transactionId: transactionId, traceId: traceId, kuery: kuery }], render: render }));\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/store/reactReduxRequest/transactionDetails.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/store/reactReduxRequest/transactionDetails.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAa,MAAM,qBAAqB,CAAC;AAEzD,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AAIvE,IAAM,EAAE,GAAG,oBAAoB,CAAC;AAChC,MAAM,UAAU,qBAAqB,CAAC,KAAkB;IACtD,OAAO,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC;AAED,MAAM,UAAU,yBAAyB,CAAC,EAMzC;QALC,wBAAS,EACT,kBAAM;IAKE,IAAA,mCAAW,EAAE,uBAAK,EAAE,mBAAG,EAAE,uCAAa,EAAE,2BAAO,EAAE,uBAAK,CAAe;IAE7E,IAAI,CAAC,CAAC,WAAW,IAAI,KAAK,IAAI,GAAG,IAAI,aAAa,CAAC,EAAE;QACnD,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,oBAAC,OAAO,IACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,eAAe,EACnB,QAAQ,EAAE,qBAAqB,EAC/B,IAAI,EAAE,CAAC,EAAE,WAAW,aAAA,EAAE,KAAK,OAAA,EAAE,GAAG,KAAA,EAAE,aAAa,eAAA,EAAE,OAAO,SAAA,EAAE,KAAK,OAAA,EAAE,CAAC,EAClE,MAAM,EAAE,MAAM,GACd,CACH,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\nimport { Request, RRRRender } from 'react-redux-request';\nimport { Transaction } from 'x-pack/plugins/apm/typings/es_schemas/Transaction';\nimport { loadTransaction } from '../../services/rest/apm/transactions';\nimport { IReduxState } from '../rootReducer';\nimport { IUrlParams } from '../urlParams';\n\nconst ID = 'transactionDetails';\nexport function getTransactionDetails(state: IReduxState) {\n  return state.reactReduxRequest[ID];\n}\n\nexport function TransactionDetailsRequest({\n  urlParams,\n  render\n}: {\n  urlParams: IUrlParams;\n  render: RRRRender<Transaction | null>;\n}) {\n  const { serviceName, start, end, transactionId, traceId, kuery } = urlParams;\n\n  if (!(serviceName && start && end && transactionId)) {\n    return null;\n  }\n\n  return (\n    <Request\n      id={ID}\n      fn={loadTransaction}\n      selector={getTransactionDetails}\n      args={[{ serviceName, start, end, transactionId, traceId, kuery }]}\n      render={render}\n    />\n  );\n}\n"]}]}