{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/common/types.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/common/types.ts","mtime":1567631712320},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nexport var ReindexStep;\n(function (ReindexStep) {\n    // Enum values are spaced out by 10 to give us room to insert steps in between.\n    ReindexStep[ReindexStep[\"created\"] = 0] = \"created\";\n    ReindexStep[ReindexStep[\"indexGroupServicesStopped\"] = 10] = \"indexGroupServicesStopped\";\n    ReindexStep[ReindexStep[\"readonly\"] = 20] = \"readonly\";\n    ReindexStep[ReindexStep[\"newIndexCreated\"] = 30] = \"newIndexCreated\";\n    ReindexStep[ReindexStep[\"reindexStarted\"] = 40] = \"reindexStarted\";\n    ReindexStep[ReindexStep[\"reindexCompleted\"] = 50] = \"reindexCompleted\";\n    ReindexStep[ReindexStep[\"aliasCreated\"] = 60] = \"aliasCreated\";\n    ReindexStep[ReindexStep[\"indexGroupServicesStarted\"] = 70] = \"indexGroupServicesStarted\";\n})(ReindexStep || (ReindexStep = {}));\nexport var ReindexStatus;\n(function (ReindexStatus) {\n    ReindexStatus[ReindexStatus[\"inProgress\"] = 0] = \"inProgress\";\n    ReindexStatus[ReindexStatus[\"completed\"] = 1] = \"completed\";\n    ReindexStatus[ReindexStatus[\"failed\"] = 2] = \"failed\";\n    ReindexStatus[ReindexStatus[\"paused\"] = 3] = \"paused\";\n    ReindexStatus[ReindexStatus[\"cancelled\"] = 4] = \"cancelled\";\n})(ReindexStatus || (ReindexStatus = {}));\nexport var REINDEX_OP_TYPE = 'upgrade-assistant-reindex-operation';\nexport var ReindexWarning;\n(function (ReindexWarning) {\n    ReindexWarning[ReindexWarning[\"allField\"] = 0] = \"allField\";\n    ReindexWarning[ReindexWarning[\"booleanFields\"] = 1] = \"booleanFields\";\n})(ReindexWarning || (ReindexWarning = {}));\nexport var IndexGroup;\n(function (IndexGroup) {\n    IndexGroup[\"ml\"] = \"___ML_REINDEX_LOCK___\";\n    IndexGroup[\"watcher\"] = \"___WATCHER_REINDEX_LOCK___\";\n})(IndexGroup || (IndexGroup = {}));\n// Telemetry types\nexport var UPGRADE_ASSISTANT_TYPE = 'upgrade-assistant-telemetry';\nexport var UPGRADE_ASSISTANT_DOC_ID = 'upgrade-assistant-telemetry';\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/common/types.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/common/types.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAQH,MAAM,CAAN,IAAY,WAUX;AAVD,WAAY,WAAW;IACrB,+EAA+E;IAC/E,mDAAW,CAAA;IACX,wFAA8B,CAAA;IAC9B,sDAAa,CAAA;IACb,oEAAoB,CAAA;IACpB,kEAAmB,CAAA;IACnB,sEAAqB,CAAA;IACrB,8DAAiB,CAAA;IACjB,wFAA8B,CAAA;AAChC,CAAC,EAVW,WAAW,KAAX,WAAW,QAUtB;AAED,MAAM,CAAN,IAAY,aAMX;AAND,WAAY,aAAa;IACvB,6DAAU,CAAA;IACV,2DAAS,CAAA;IACT,qDAAM,CAAA;IACN,qDAAM,CAAA;IACN,2DAAS,CAAA;AACX,CAAC,EANW,aAAa,KAAb,aAAa,QAMxB;AAED,MAAM,CAAC,IAAM,eAAe,GAAG,qCAAqC,CAAC;AAiBrE,MAAM,CAAN,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,2DAAQ,CAAA;IACR,qEAAa,CAAA;AACf,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;AAED,MAAM,CAAN,IAAY,UAGX;AAHD,WAAY,UAAU;IACpB,0CAA4B,CAAA;IAC5B,oDAAsC,CAAA;AACxC,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;AAED,kBAAkB;AAClB,MAAM,CAAC,IAAM,sBAAsB,GAAG,6BAA6B,CAAC;AACpE,MAAM,CAAC,IAAM,wBAAwB,GAAG,6BAA6B,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { Legacy } from 'kibana';\nimport {\n  SavedObject,\n  SavedObjectAttributes,\n} from 'src/server/saved_objects/service/saved_objects_client';\n\nexport enum ReindexStep {\n  // Enum values are spaced out by 10 to give us room to insert steps in between.\n  created = 0,\n  indexGroupServicesStopped = 10,\n  readonly = 20,\n  newIndexCreated = 30,\n  reindexStarted = 40,\n  reindexCompleted = 50,\n  aliasCreated = 60,\n  indexGroupServicesStarted = 70,\n}\n\nexport enum ReindexStatus {\n  inProgress,\n  completed,\n  failed,\n  paused,\n  cancelled,\n}\n\nexport const REINDEX_OP_TYPE = 'upgrade-assistant-reindex-operation';\nexport interface ReindexOperation extends SavedObjectAttributes {\n  indexName: string;\n  newIndexName: string;\n  status: ReindexStatus;\n  lastCompletedStep: ReindexStep;\n  locked: string | null;\n  reindexTaskId: string | null;\n  reindexTaskPercComplete: number | null;\n  errorMessage: string | null;\n\n  // This field is only used for the singleton IndexConsumerType documents.\n  runningReindexCount: number | null;\n}\n\nexport type ReindexSavedObject = SavedObject<ReindexOperation>;\n\nexport enum ReindexWarning {\n  allField,\n  booleanFields,\n}\n\nexport enum IndexGroup {\n  ml = '___ML_REINDEX_LOCK___',\n  watcher = '___WATCHER_REINDEX_LOCK___',\n}\n\n// Telemetry types\nexport const UPGRADE_ASSISTANT_TYPE = 'upgrade-assistant-telemetry';\nexport const UPGRADE_ASSISTANT_DOC_ID = 'upgrade-assistant-telemetry';\nexport type UIOpenOption = 'overview' | 'cluster' | 'indices';\nexport type UIReindexOption = 'close' | 'open' | 'start' | 'stop';\n\nexport interface UIOpen {\n  overview: boolean;\n  cluster: boolean;\n  indices: boolean;\n}\n\nexport interface UIReindex {\n  close: boolean;\n  open: boolean;\n  start: boolean;\n  stop: boolean;\n}\n\nexport interface UpgradeAssistantTelemetryServer extends Legacy.Server {\n  usage: {\n    collectorSet: {\n      makeUsageCollector: any;\n      register: any;\n    };\n  };\n}\n\nexport interface UpgradeAssistantTelemetrySavedObject {\n  ui_open: {\n    overview: number;\n    cluster: number;\n    indices: number;\n  };\n  ui_reindex: {\n    close: number;\n    open: number;\n    start: number;\n    stop: number;\n  };\n}\n\nexport interface UpgradeAssistantTelemetry {\n  ui_open: {\n    overview: number;\n    cluster: number;\n    indices: number;\n  };\n  ui_reindex: {\n    close: number;\n    open: number;\n    start: number;\n    stop: number;\n  };\n  features: {\n    deprecation_logging: {\n      enabled: boolean;\n    };\n  };\n}\n\nexport interface UpgradeAssistantTelemetrySavedObjectAttributes {\n  [key: string]: any;\n}\n"]}]}