{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_space_table.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_space_table.tsx","mtime":1567631712301},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButtonIcon, \n// @ts-ignore\nEuiInMemoryTable, EuiText, } from '@elastic/eui';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport React, { Component } from 'react';\nimport { SpaceAvatar } from '../../../../../../../../spaces/public/components';\nimport { isReservedRole } from '../../../../../../lib/role';\nimport { PrivilegeSelector } from './privilege_selector';\nvar PrivilegeSpaceTableUI = /** @class */ (function (_super) {\n    tslib_1.__extends(PrivilegeSpaceTableUI, _super);\n    function PrivilegeSpaceTableUI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            searchTerm: '',\n        };\n        _this.getTableColumns = function (role, availablePrivileges) {\n            if (availablePrivileges === void 0) { availablePrivileges = []; }\n            var intl = _this.props.intl;\n            var columns = [\n                {\n                    field: 'space',\n                    name: '',\n                    width: '50px',\n                    sortable: true,\n                    render: function (space) {\n                        if ('deleted' in space) {\n                            return null;\n                        }\n                        return React.createElement(SpaceAvatar, { space: space, size: \"s\" });\n                    },\n                },\n                {\n                    field: 'space',\n                    name: intl.formatMessage({\n                        id: 'xpack.security.management.editRoles.privilegeSpaceTable.spaceName',\n                        defaultMessage: 'Space',\n                    }),\n                    width: _this.props.readonly ? '75%' : '50%',\n                    render: function (space) {\n                        if ('deleted' in space) {\n                            return (React.createElement(EuiText, { color: 'subdued' },\n                                React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeSpaceTable.deletedSpaceDescription\", defaultMessage: \"{value} (deleted)\", values: { value: space.id } })));\n                        }\n                        else {\n                            return React.createElement(EuiText, null, space.name);\n                        }\n                    },\n                },\n                {\n                    field: 'privilege',\n                    name: intl.formatMessage({\n                        id: 'xpack.security.management.editRoles.privilegeSpaceTable.privilegeName',\n                        defaultMessage: 'Privilege',\n                    }),\n                    width: _this.props.readonly ? '25%' : undefined,\n                    render: function (privilege, record) {\n                        if (_this.props.readonly || record.space.deleted) {\n                            return privilege;\n                        }\n                        return (React.createElement(PrivilegeSelector, { \"data-test-subj\": 'privilege-space-table-priv', availablePrivileges: availablePrivileges, value: privilege, disabled: isReservedRole(role) || _this.props.readonly, onChange: _this.onSpacePermissionChange(record), compressed: true }));\n                    },\n                },\n            ];\n            if (!_this.props.readonly) {\n                columns.push({\n                    name: intl.formatMessage({\n                        id: 'xpack.security.management.editRoles.privilegeSpaceTable.actionsName',\n                        defaultMessage: 'Actions',\n                    }),\n                    actions: [\n                        {\n                            render: function (record) {\n                                return (React.createElement(EuiButtonIcon, { \"aria-label\": 'Remove custom privileges for this space', color: 'danger', onClick: function () { return _this.onDeleteSpacePermissionsClick(record); }, iconType: 'trash' }));\n                            },\n                        },\n                    ],\n                });\n            }\n            return columns;\n        };\n        _this.onSpacePermissionChange = function (record) { return function (selectedPrivilege) {\n            var spaceId = record.space.id;\n            var updatedPrivileges = tslib_1.__assign({}, _this.props.spacePrivileges);\n            updatedPrivileges[spaceId] = [selectedPrivilege];\n            if (_this.props.onChange) {\n                _this.props.onChange(updatedPrivileges);\n            }\n        }; };\n        _this.onDeleteSpacePermissionsClick = function (record) {\n            var spaceId = record.space.id;\n            var updatedPrivileges = tslib_1.__assign({}, _this.props.spacePrivileges);\n            delete updatedPrivileges[spaceId];\n            if (_this.props.onChange) {\n                _this.props.onChange(updatedPrivileges);\n            }\n        };\n        return _this;\n    }\n    PrivilegeSpaceTableUI.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, role = _a.role, spaces = _a.spaces, availablePrivileges = _a.availablePrivileges, spacePrivileges = _a.spacePrivileges, intl = _a.intl;\n        var searchTerm = this.state.searchTerm;\n        var allTableItems = Object.keys(spacePrivileges)\n            .map(function (spaceId) {\n            return {\n                space: spaces.find(function (s) { return s.id === spaceId; }) || { id: spaceId, name: '', deleted: true },\n                privilege: spacePrivileges[spaceId][0],\n            };\n        })\n            .sort(function (item1) {\n            var isDeleted = 'deleted' in item1.space;\n            return isDeleted ? 1 : -1;\n        });\n        var visibleTableItems = allTableItems.filter(function (item) {\n            var isDeleted = 'deleted' in item.space;\n            var searchField = isDeleted ? item.space.id : item.space.name;\n            return searchField.toLowerCase().indexOf(searchTerm) >= 0;\n        });\n        if (allTableItems.length === 0) {\n            return null;\n        }\n        return (React.createElement(EuiInMemoryTable, { hasActions: true, columns: this.getTableColumns(role, availablePrivileges), search: {\n                box: {\n                    incremental: true,\n                    placeholder: intl.formatMessage({\n                        id: 'xpack.security.management.editRoles.privilegeSpaceTable.filterPlaceholder',\n                        defaultMessage: 'Filter',\n                    }),\n                },\n                onChange: function (search) {\n                    _this.setState({\n                        searchTerm: search.queryText.toLowerCase(),\n                    });\n                },\n            }, items: visibleTableItems }));\n    };\n    return PrivilegeSpaceTableUI;\n}(Component));\nexport var PrivilegeSpaceTable = injectI18n(PrivilegeSpaceTableUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_space_table.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_space_table.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EACL,aAAa;AACb,aAAa;AACb,gBAAgB,EAChB,OAAO,GACR,MAAM,cAAc,CAAC;AACtB,OAAO,EAAE,gBAAgB,EAAgB,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7E,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAEzC,OAAO,EAAE,WAAW,EAAE,MAAM,kDAAkD,CAAC;AAG/E,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC5D,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAoBzD;IAAoC,iDAAuB;IAA3D;QAAA,qEAuKC;QAtKQ,WAAK,GAAG;YACb,UAAU,EAAE,EAAE;SACf,CAAC;QAoDK,qBAAe,GAAG,UAAC,IAAU,EAAE,mBAA2C;YAA3C,oCAAA,EAAA,wBAA2C;YACvE,IAAA,uBAAI,CAAgB;YAC5B,IAAM,OAAO,GAAU;gBACrB;oBACE,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE,EAAE;oBACR,KAAK,EAAE,MAAM;oBACb,QAAQ,EAAE,IAAI;oBACd,MAAM,EAAE,UAAC,KAA2B;wBAClC,IAAI,SAAS,IAAI,KAAK,EAAE;4BACtB,OAAO,IAAI,CAAC;yBACb;wBACD,OAAO,oBAAC,WAAW,IAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAC,GAAG,GAAG,CAAC;oBAChD,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC;wBACvB,EAAE,EAAE,mEAAmE;wBACvE,cAAc,EAAE,OAAO;qBACxB,CAAC;oBACF,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK;oBAC1C,MAAM,EAAE,UAAC,KAA2B;wBAClC,IAAI,SAAS,IAAI,KAAK,EAAE;4BACtB,OAAO,CACL,oBAAC,OAAO,IAAC,KAAK,EAAE,SAAS;gCACvB,oBAAC,gBAAgB,IACf,EAAE,EAAC,iFAAiF,EACpF,cAAc,EAAC,mBAAmB,EAClC,MAAM,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,GAC3B,CACM,CACX,CAAC;yBACH;6BAAM;4BACL,OAAO,oBAAC,OAAO,QAAE,KAAK,CAAC,IAAI,CAAW,CAAC;yBACxC;oBACH,CAAC;iBACF;gBACD;oBACE,KAAK,EAAE,WAAW;oBAClB,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC;wBACvB,EAAE,EAAE,uEAAuE;wBAC3E,cAAc,EAAE,WAAW;qBAC5B,CAAC;oBACF,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;oBAC9C,MAAM,EAAE,UAAC,SAA0B,EAAE,MAAW;wBAC9C,IAAI,KAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE;4BAC/C,OAAO,SAAS,CAAC;yBAClB;wBAED,OAAO,CACL,oBAAC,iBAAiB,sBACA,4BAA4B,EAC5C,mBAAmB,EAAE,mBAAmB,EACxC,KAAK,EAAE,SAAS,EAChB,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,IAAI,KAAI,CAAC,KAAK,CAAC,QAAQ,EACrD,QAAQ,EAAE,KAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAC9C,UAAU,SACV,CACH,CAAC;oBACJ,CAAC;iBACF;aACF,CAAC;YACF,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACxB,OAAO,CAAC,IAAI,CAAC;oBACX,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC;wBACvB,EAAE,EAAE,qEAAqE;wBACzE,cAAc,EAAE,SAAS;qBAC1B,CAAC;oBACF,OAAO,EAAE;wBACP;4BACE,MAAM,EAAE,UAAC,MAAW;gCAClB,OAAO,CACL,oBAAC,aAAa,kBACA,yCAAyC,EACrD,KAAK,EAAE,QAAQ,EACf,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC,EAA1C,CAA0C,EACzD,QAAQ,EAAE,OAAO,GACjB,CACH,CAAC;4BACJ,CAAC;yBACF;qBACF;iBACF,CAAC,CAAC;aACJ;YAED,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC;QAEK,6BAAuB,GAAG,UAAC,MAAW,IAAK,OAAA,UAAC,iBAAkC;YAC3E,IAAA,yBAAW,CAAkB;YAErC,IAAM,iBAAiB,wBAClB,KAAI,CAAC,KAAK,CAAC,eAAe,CAC9B,CAAC;YACF,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YACjD,IAAI,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;aACxC;QACH,CAAC,EAViD,CAUjD,CAAC;QAEK,mCAA6B,GAAG,UAAC,MAAW;YACzC,IAAA,yBAAW,CAAkB;YAErC,IAAM,iBAAiB,wBAClB,KAAI,CAAC,KAAK,CAAC,eAAe,CAC9B,CAAC;YACF,OAAO,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAClC,IAAI,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;aACxC;QACH,CAAC,CAAC;;IACJ,CAAC;IAlKQ,sCAAM,GAAb;QAAA,iBAgDC;QA/CO,IAAA,eAAyE,EAAvE,cAAI,EAAE,kBAAM,EAAE,4CAAmB,EAAE,oCAAe,EAAE,cAAI,CAAgB;QAExE,IAAA,kCAAU,CAAgB;QAElC,IAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;aAC/C,GAAG,CAAC,UAAA,OAAO;YACV,OAAO;gBACL,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,OAAO,EAAhB,CAAgB,CAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;gBACrF,SAAS,EAAE,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aACvC,CAAC;QACJ,CAAC,CAAC;aACD,IAAI,CAAC,UAAA,KAAK;YACT,IAAM,SAAS,GAAG,SAAS,IAAI,KAAK,CAAC,KAAK,CAAC;YAC3C,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEL,IAAM,iBAAiB,GAAG,aAAa,CAAC,MAAM,CAAC,UAAA,IAAI;YACjD,IAAM,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC;YAC1C,IAAM,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YAChE,OAAO,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CACL,oBAAC,gBAAgB,IACf,UAAU,QACV,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,mBAAmB,CAAC,EACxD,MAAM,EAAE;gBACN,GAAG,EAAE;oBACH,WAAW,EAAE,IAAI;oBACjB,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC;wBAC9B,EAAE,EAAE,2EAA2E;wBAC/E,cAAc,EAAE,QAAQ;qBACzB,CAAC;iBACH;gBACD,QAAQ,EAAE,UAAC,MAAW;oBACpB,KAAI,CAAC,QAAQ,CAAC;wBACZ,UAAU,EAAE,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE;qBAC3C,CAAC,CAAC;gBACL,CAAC;aACF,EACD,KAAK,EAAE,iBAAiB,GACxB,CACH,CAAC;IACJ,CAAC;IAkHH,4BAAC;AAAD,CAAC,AAvKD,CAAoC,SAAS,GAuK5C;AAED,MAAM,CAAC,IAAM,mBAAmB,GAAG,UAAU,CAAC,qBAAqB,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiButtonIcon,\n  // @ts-ignore\n  EuiInMemoryTable,\n  EuiText,\n} from '@elastic/eui';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport React, { Component } from 'react';\nimport { Space } from '../../../../../../../../spaces/common/model/space';\nimport { SpaceAvatar } from '../../../../../../../../spaces/public/components';\nimport { KibanaPrivilege } from '../../../../../../../common/model/kibana_privilege';\nimport { Role } from '../../../../../../../common/model/role';\nimport { isReservedRole } from '../../../../../../lib/role';\nimport { PrivilegeSelector } from './privilege_selector';\n\ninterface Props {\n  role: Role;\n  spaces: Space[];\n  availablePrivileges?: KibanaPrivilege[];\n  spacePrivileges: any;\n  onChange?: (privs: { [spaceId: string]: KibanaPrivilege[] }) => void;\n  readonly?: boolean;\n  intl: InjectedIntl;\n}\n\ninterface State {\n  searchTerm: string;\n}\n\ninterface DeletedSpace extends Space {\n  deleted: boolean;\n}\n\nclass PrivilegeSpaceTableUI extends Component<Props, State> {\n  public state = {\n    searchTerm: '',\n  };\n\n  public render() {\n    const { role, spaces, availablePrivileges, spacePrivileges, intl } = this.props;\n\n    const { searchTerm } = this.state;\n\n    const allTableItems = Object.keys(spacePrivileges)\n      .map(spaceId => {\n        return {\n          space: spaces.find(s => s.id === spaceId) || { id: spaceId, name: '', deleted: true },\n          privilege: spacePrivileges[spaceId][0],\n        };\n      })\n      .sort(item1 => {\n        const isDeleted = 'deleted' in item1.space;\n        return isDeleted ? 1 : -1;\n      });\n\n    const visibleTableItems = allTableItems.filter(item => {\n      const isDeleted = 'deleted' in item.space;\n      const searchField = isDeleted ? item.space.id : item.space.name;\n      return searchField.toLowerCase().indexOf(searchTerm) >= 0;\n    });\n\n    if (allTableItems.length === 0) {\n      return null;\n    }\n\n    return (\n      <EuiInMemoryTable\n        hasActions\n        columns={this.getTableColumns(role, availablePrivileges)}\n        search={{\n          box: {\n            incremental: true,\n            placeholder: intl.formatMessage({\n              id: 'xpack.security.management.editRoles.privilegeSpaceTable.filterPlaceholder',\n              defaultMessage: 'Filter',\n            }),\n          },\n          onChange: (search: any) => {\n            this.setState({\n              searchTerm: search.queryText.toLowerCase(),\n            });\n          },\n        }}\n        items={visibleTableItems}\n      />\n    );\n  }\n\n  public getTableColumns = (role: Role, availablePrivileges: KibanaPrivilege[] = []) => {\n    const { intl } = this.props;\n    const columns: any[] = [\n      {\n        field: 'space',\n        name: '',\n        width: '50px',\n        sortable: true,\n        render: (space: Space | DeletedSpace) => {\n          if ('deleted' in space) {\n            return null;\n          }\n          return <SpaceAvatar space={space} size=\"s\" />;\n        },\n      },\n      {\n        field: 'space',\n        name: intl.formatMessage({\n          id: 'xpack.security.management.editRoles.privilegeSpaceTable.spaceName',\n          defaultMessage: 'Space',\n        }),\n        width: this.props.readonly ? '75%' : '50%',\n        render: (space: Space | DeletedSpace) => {\n          if ('deleted' in space) {\n            return (\n              <EuiText color={'subdued'}>\n                <FormattedMessage\n                  id=\"xpack.security.management.editRoles.privilegeSpaceTable.deletedSpaceDescription\"\n                  defaultMessage=\"{value} (deleted)\"\n                  values={{ value: space.id }}\n                />\n              </EuiText>\n            );\n          } else {\n            return <EuiText>{space.name}</EuiText>;\n          }\n        },\n      },\n      {\n        field: 'privilege',\n        name: intl.formatMessage({\n          id: 'xpack.security.management.editRoles.privilegeSpaceTable.privilegeName',\n          defaultMessage: 'Privilege',\n        }),\n        width: this.props.readonly ? '25%' : undefined,\n        render: (privilege: KibanaPrivilege, record: any) => {\n          if (this.props.readonly || record.space.deleted) {\n            return privilege;\n          }\n\n          return (\n            <PrivilegeSelector\n              data-test-subj={'privilege-space-table-priv'}\n              availablePrivileges={availablePrivileges}\n              value={privilege}\n              disabled={isReservedRole(role) || this.props.readonly}\n              onChange={this.onSpacePermissionChange(record)}\n              compressed\n            />\n          );\n        },\n      },\n    ];\n    if (!this.props.readonly) {\n      columns.push({\n        name: intl.formatMessage({\n          id: 'xpack.security.management.editRoles.privilegeSpaceTable.actionsName',\n          defaultMessage: 'Actions',\n        }),\n        actions: [\n          {\n            render: (record: any) => {\n              return (\n                <EuiButtonIcon\n                  aria-label={'Remove custom privileges for this space'}\n                  color={'danger'}\n                  onClick={() => this.onDeleteSpacePermissionsClick(record)}\n                  iconType={'trash'}\n                />\n              );\n            },\n          },\n        ],\n      });\n    }\n\n    return columns;\n  };\n\n  public onSpacePermissionChange = (record: any) => (selectedPrivilege: KibanaPrivilege) => {\n    const { id: spaceId } = record.space;\n\n    const updatedPrivileges = {\n      ...this.props.spacePrivileges,\n    };\n    updatedPrivileges[spaceId] = [selectedPrivilege];\n    if (this.props.onChange) {\n      this.props.onChange(updatedPrivileges);\n    }\n  };\n\n  public onDeleteSpacePermissionsClick = (record: any) => {\n    const { id: spaceId } = record.space;\n\n    const updatedPrivileges = {\n      ...this.props.spacePrivileges,\n    };\n    delete updatedPrivileges[spaceId];\n    if (this.props.onChange) {\n      this.props.onChange(updatedPrivileges);\n    }\n  };\n}\n\nexport const PrivilegeSpaceTable = injectI18n(PrivilegeSpaceTableUI);\n"]}]}