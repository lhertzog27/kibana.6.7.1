{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/store/reactReduxRequest/machineLearningJobs.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/store/reactReduxRequest/machineLearningJobs.tsx","mtime":1567631711871},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React from 'react';\nimport { Request } from 'react-redux-request';\nimport { getMLJob } from '../../services/rest/ml';\nimport { createInitialDataSelector } from './helpers';\nvar INITIAL_DATA = { count: 0, jobs: [] };\nvar withInitialData = createInitialDataSelector(INITIAL_DATA);\nvar ID = 'MLJobs';\nfunction selectMlJobs(state) {\n    return withInitialData(state.reactReduxRequest[ID]);\n}\nexport function MLJobsRequest(_a) {\n    var serviceName = _a.serviceName, _b = _a.transactionType, transactionType = _b === void 0 ? '*' : _b, render = _a.render;\n    return (React.createElement(Request, { id: ID, fn: getMLJob, args: [{ serviceName: serviceName, transactionType: transactionType }], render: render, selector: selectMlJobs }));\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/store/reactReduxRequest/machineLearningJobs.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/store/reactReduxRequest/machineLearningJobs.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAa,MAAM,qBAAqB,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAoB,MAAM,wBAAwB,CAAC;AAEpE,OAAO,EAAE,yBAAyB,EAAE,MAAM,WAAW,CAAC;AAEtD,IAAM,YAAY,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;AAC5C,IAAM,eAAe,GAAG,yBAAyB,CAAC,YAAY,CAAC,CAAC;AAChE,IAAM,EAAE,GAAG,QAAQ,CAAC;AAEpB,SAAS,YAAY,CAAC,KAAkB;IACtC,OAAO,eAAe,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;AACtD,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,EAQ7B;QAPC,4BAAW,EACX,uBAAqB,EAArB,0CAAqB,EACrB,kBAAM;IAMN,OAAO,CACL,oBAAC,OAAO,IACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,QAAQ,EACZ,IAAI,EAAE,CAAC,EAAE,WAAW,aAAA,EAAE,eAAe,iBAAA,EAAE,CAAC,EACxC,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,YAAY,GACtB,CACH,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\nimport { Request, RRRRender } from 'react-redux-request';\nimport { getMLJob, MLJobApiResponse } from '../../services/rest/ml';\nimport { IReduxState } from '../rootReducer';\nimport { createInitialDataSelector } from './helpers';\n\nconst INITIAL_DATA = { count: 0, jobs: [] };\nconst withInitialData = createInitialDataSelector(INITIAL_DATA);\nconst ID = 'MLJobs';\n\nfunction selectMlJobs(state: IReduxState) {\n  return withInitialData(state.reactReduxRequest[ID]);\n}\n\nexport function MLJobsRequest({\n  serviceName,\n  transactionType = '*',\n  render\n}: {\n  serviceName: string;\n  transactionType?: string;\n  render: RRRRender<MLJobApiResponse>;\n}) {\n  return (\n    <Request\n      id={ID}\n      fn={getMLJob}\n      args={[{ serviceName, transactionType }]}\n      render={render}\n      selector={selectMlJobs}\n    />\n  );\n}\n"]}]}