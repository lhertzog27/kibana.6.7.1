{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/autocomplete_field/suggestion_item.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/autocomplete_field/suggestion_item.tsx","mtime":1567631711879},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiIcon } from '@elastic/eui';\nimport { tint } from 'polished';\nimport React from 'react';\nimport styled from 'styled-components';\nvar SuggestionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(SuggestionItem, _super);\n    function SuggestionItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SuggestionItem.prototype.render = function () {\n        var _a = this.props, isSelected = _a.isSelected, onClick = _a.onClick, onMouseEnter = _a.onMouseEnter, suggestion = _a.suggestion;\n        return (React.createElement(SuggestionItemContainer, { isSelected: isSelected, onClick: onClick, onMouseEnter: onMouseEnter },\n            React.createElement(SuggestionItemIconField, { suggestionType: suggestion.type },\n                React.createElement(EuiIcon, { type: getEuiIconType(suggestion.type) })),\n            React.createElement(SuggestionItemTextField, null, suggestion.text),\n            React.createElement(SuggestionItemDescriptionField, { dangerouslySetInnerHTML: { __html: suggestion.description } })));\n    };\n    SuggestionItem.defaultProps = {\n        isSelected: false,\n    };\n    return SuggestionItem;\n}(React.Component));\nexport { SuggestionItem };\nvar SuggestionItemContainer = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  display: flex;\\n  flex-direction: row;\\n  font-size: \", \";\\n  height: \", \";\\n  white-space: nowrap;\\n  background-color: \", \";\\n\"], [\"\\n  display: flex;\\n  flex-direction: row;\\n  font-size: \", \";\\n  height: \", \";\\n  white-space: nowrap;\\n  background-color: \",\n    \";\\n\"])), function (props) { return props.theme.eui.default.euiFontSizeS; }, function (props) { return props.theme.eui.default.euiSizeXl; }, function (props) {\n    return props.isSelected ? props.theme.eui.default.euiColorLightestShade : 'transparent';\n});\nvar SuggestionItemField = styled.div(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  align-items: center;\\n  cursor: pointer;\\n  display: flex;\\n  flex-direction: row;\\n  height: \", \";\\n  padding: \", \";\\n\"], [\"\\n  align-items: center;\\n  cursor: pointer;\\n  display: flex;\\n  flex-direction: row;\\n  height: \", \";\\n  padding: \", \";\\n\"])), function (props) { return props.theme.eui.default.euiSizeXl; }, function (props) { return props.theme.eui.default.euiSizeXs; });\nvar SuggestionItemIconField = SuggestionItemField.extend(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n  background-color: \", \";\\n  color: \", \";\\n  flex: 0 0 auto;\\n  justify-content: center;\\n  width: \", \";\\n\"], [\"\\n  background-color: \",\n    \";\\n  color: \",\n    \";\\n  flex: 0 0 auto;\\n  justify-content: center;\\n  width: \", \";\\n\"])), function (props) {\n    return tint(0.1, getEuiIconColor(props.theme, props.suggestionType));\n}, function (props) {\n    return getEuiIconColor(props.theme, props.suggestionType);\n}, function (props) { return props.theme.eui.default.euiSizeXl; });\nvar SuggestionItemTextField = SuggestionItemField.extend(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"\\n  flex: 2 0 0;\\n  font-family: \", \";\\n\"], [\"\\n  flex: 2 0 0;\\n  font-family: \", \";\\n\"])), function (props) { return props.theme.eui.default.euiCodeFontFamily; });\nvar SuggestionItemDescriptionField = SuggestionItemField.extend(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject([\"\\n  flex: 3 0 0;\\n  p {\\n    display: inline;\\n    span {\\n      font-family: \", \";\\n    }\\n  }\\n\"], [\"\\n  flex: 3 0 0;\\n  p {\\n    display: inline;\\n    span {\\n      font-family: \", \";\\n    }\\n  }\\n\"])), function (props) { return props.theme.eui.default.euiCodeFontFamily; });\nvar getEuiIconType = function (suggestionType) {\n    switch (suggestionType) {\n        case 'field':\n            return 'kqlField';\n        case 'value':\n            return 'kqlValue';\n        case 'recentSearch':\n            return 'search';\n        case 'conjunction':\n            return 'kqlSelector';\n        case 'operator':\n            return 'kqlOperand';\n        default:\n            return 'empty';\n    }\n};\nvar getEuiIconColor = function (theme, suggestionType) {\n    switch (suggestionType) {\n        case 'field':\n            return theme.eui.default.euiColorVis7;\n        case 'value':\n            return theme.eui.default.euiColorVis0;\n        case 'operator':\n            return theme.eui.default.euiColorVis1;\n        case 'conjunction':\n            return theme.eui.default.euiColorVis2;\n        case 'recentSearch':\n        default:\n            return theme.eui.default.euiColorMediumShade;\n    }\n};\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/autocomplete_field/suggestion_item.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/autocomplete_field/suggestion_item.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiIcon } from '@elastic/eui';\nimport { tint } from 'polished';\nimport React from 'react';\nimport styled from 'styled-components';\n// @ts-ignore\nimport { AutocompleteSuggestion } from 'ui/autocomplete_providers';\n\ninterface SuggestionItemProps {\n  isSelected?: boolean;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n  onMouseEnter?: React.MouseEventHandler<HTMLDivElement>;\n  suggestion: AutocompleteSuggestion;\n}\n\nexport class SuggestionItem extends React.Component<SuggestionItemProps> {\n  public static defaultProps: Partial<SuggestionItemProps> = {\n    isSelected: false,\n  };\n\n  public render() {\n    const { isSelected, onClick, onMouseEnter, suggestion } = this.props;\n\n    return (\n      <SuggestionItemContainer\n        isSelected={isSelected}\n        onClick={onClick}\n        onMouseEnter={onMouseEnter}\n      >\n        <SuggestionItemIconField suggestionType={suggestion.type}>\n          <EuiIcon type={getEuiIconType(suggestion.type)} />\n        </SuggestionItemIconField>\n        <SuggestionItemTextField>{suggestion.text}</SuggestionItemTextField>\n        <SuggestionItemDescriptionField\n          dangerouslySetInnerHTML={{ __html: suggestion.description }}\n        />\n      </SuggestionItemContainer>\n    );\n  }\n}\n\nconst SuggestionItemContainer = styled.div<{\n  isSelected?: boolean;\n}>`\n  display: flex;\n  flex-direction: row;\n  font-size: ${props => props.theme.eui.default.euiFontSizeS};\n  height: ${props => props.theme.eui.default.euiSizeXl};\n  white-space: nowrap;\n  background-color: ${props =>\n    props.isSelected ? props.theme.eui.default.euiColorLightestShade : 'transparent'};\n`;\n\nconst SuggestionItemField = styled.div`\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  height: ${props => props.theme.eui.default.euiSizeXl};\n  padding: ${props => props.theme.eui.default.euiSizeXs};\n`;\n\nconst SuggestionItemIconField = SuggestionItemField.extend<{ suggestionType: string }>`\n  background-color: ${props => {\n    return tint(0.1, getEuiIconColor(props.theme, props.suggestionType));\n  }};\n  color: ${props => {\n    return getEuiIconColor(props.theme, props.suggestionType);\n  }};\n  flex: 0 0 auto;\n  justify-content: center;\n  width: ${props => props.theme.eui.default.euiSizeXl};\n`;\n\nconst SuggestionItemTextField = SuggestionItemField.extend`\n  flex: 2 0 0;\n  font-family: ${props => props.theme.eui.default.euiCodeFontFamily};\n`;\n\nconst SuggestionItemDescriptionField = SuggestionItemField.extend`\n  flex: 3 0 0;\n  p {\n    display: inline;\n    span {\n      font-family: ${props => props.theme.eui.default.euiCodeFontFamily};\n    }\n  }\n`;\n\nconst getEuiIconType = (suggestionType: string) => {\n  switch (suggestionType) {\n    case 'field':\n      return 'kqlField';\n    case 'value':\n      return 'kqlValue';\n    case 'recentSearch':\n      return 'search';\n    case 'conjunction':\n      return 'kqlSelector';\n    case 'operator':\n      return 'kqlOperand';\n    default:\n      return 'empty';\n  }\n};\n\nconst getEuiIconColor = (theme: any, suggestionType: string): string => {\n  switch (suggestionType) {\n    case 'field':\n      return theme.eui.default.euiColorVis7;\n    case 'value':\n      return theme.eui.default.euiColorVis0;\n    case 'operator':\n      return theme.eui.default.euiColorVis1;\n    case 'conjunction':\n      return theme.eui.default.euiColorVis2;\n    case 'recentSearch':\n    default:\n      return theme.eui.default.euiColorMediumShade;\n  }\n};\n"]}]}