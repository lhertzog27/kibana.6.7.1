{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_flyout/reducer.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_flyout/reducer.ts","mtime":1567631711987},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { combineReducers } from 'redux';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport { hideFlyout, setFlyoutItem, showFlyout } from './actions';\nexport var FlyoutVisibility;\n(function (FlyoutVisibility) {\n    FlyoutVisibility[\"hidden\"] = \"hidden\";\n    FlyoutVisibility[\"visible\"] = \"visible\";\n})(FlyoutVisibility || (FlyoutVisibility = {}));\nexport var initialFlyoutOptionsState = {\n    visibility: FlyoutVisibility.hidden,\n    itemId: '',\n};\nvar currentFlyoutReducer = reducerWithInitialState(initialFlyoutOptionsState.itemId).case(setFlyoutItem, function (current, target) { return target; });\nvar currentFlyoutVisibilityReducer = reducerWithInitialState(initialFlyoutOptionsState.visibility)\n    .case(hideFlyout, function () { return FlyoutVisibility.hidden; })\n    .case(showFlyout, function () { return FlyoutVisibility.visible; });\nexport var flyoutOptionsReducer = combineReducers({\n    itemId: currentFlyoutReducer,\n    visibility: currentFlyoutVisibilityReducer,\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_flyout/reducer.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_flyout/reducer.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,uBAAuB,EAAE,MAAM,yBAAyB,CAAC;AAElE,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AAElE,MAAM,CAAN,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IAC1B,qCAAiB,CAAA;IACjB,uCAAmB,CAAA;AACrB,CAAC,EAHW,gBAAgB,KAAhB,gBAAgB,QAG3B;AAOD,MAAM,CAAC,IAAM,yBAAyB,GAAuB;IAC3D,UAAU,EAAE,gBAAgB,CAAC,MAAM;IACnC,MAAM,EAAE,EAAE;CACX,CAAC;AAEF,IAAM,oBAAoB,GAAG,uBAAuB,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,IAAI,CACzF,aAAa,EACb,UAAC,OAAO,EAAE,MAAM,IAAK,OAAA,MAAM,EAAN,CAAM,CAC5B,CAAC;AAEF,IAAM,8BAA8B,GAAG,uBAAuB,CAAC,yBAAyB,CAAC,UAAU,CAAC;KACjG,IAAI,CAAC,UAAU,EAAE,cAAM,OAAA,gBAAgB,CAAC,MAAM,EAAvB,CAAuB,CAAC;KAC/C,IAAI,CAAC,UAAU,EAAE,cAAM,OAAA,gBAAgB,CAAC,OAAO,EAAxB,CAAwB,CAAC,CAAC;AAEpD,MAAM,CAAC,IAAM,oBAAoB,GAAG,eAAe,CAAqB;IACtE,MAAM,EAAE,oBAAoB;IAC5B,UAAU,EAAE,8BAA8B;CAC3C,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { combineReducers } from 'redux';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { hideFlyout, setFlyoutItem, showFlyout } from './actions';\n\nexport enum FlyoutVisibility {\n  hidden = 'hidden',\n  visible = 'visible',\n}\n\nexport interface FlyoutOptionsState {\n  visibility: FlyoutVisibility;\n  itemId: string;\n}\n\nexport const initialFlyoutOptionsState: FlyoutOptionsState = {\n  visibility: FlyoutVisibility.hidden,\n  itemId: '',\n};\n\nconst currentFlyoutReducer = reducerWithInitialState(initialFlyoutOptionsState.itemId).case(\n  setFlyoutItem,\n  (current, target) => target\n);\n\nconst currentFlyoutVisibilityReducer = reducerWithInitialState(initialFlyoutOptionsState.visibility)\n  .case(hideFlyout, () => FlyoutVisibility.hidden)\n  .case(showFlyout, () => FlyoutVisibility.visible);\n\nexport const flyoutOptionsReducer = combineReducers<FlyoutOptionsState>({\n  itemId: currentFlyoutReducer,\n  visibility: currentFlyoutVisibilityReducer,\n});\n"]}]}