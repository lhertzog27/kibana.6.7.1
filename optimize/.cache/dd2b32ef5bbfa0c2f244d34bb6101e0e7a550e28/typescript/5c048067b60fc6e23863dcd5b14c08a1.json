{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/kibana_privileges.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/kibana_privileges.tsx","mtime":1567631712301},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React, { Component } from 'react';\nimport { CollapsiblePanel } from '../../collapsible_panel';\nimport { SimplePrivilegeForm } from './simple_privilege_form';\nimport { SpaceAwarePrivilegeForm } from './space_aware_privilege_form';\nvar KibanaPrivileges = /** @class */ (function (_super) {\n    tslib_1.__extends(KibanaPrivileges, _super);\n    function KibanaPrivileges() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.getForm = function () {\n            var _a = _this.props, kibanaAppPrivileges = _a.kibanaAppPrivileges, role = _a.role, spacesEnabled = _a.spacesEnabled, _b = _a.spaces, spaces = _b === void 0 ? [] : _b, userProfile = _a.userProfile, onChange = _a.onChange, editable = _a.editable, validator = _a.validator;\n            if (spacesEnabled) {\n                return (React.createElement(SpaceAwarePrivilegeForm, { kibanaAppPrivileges: kibanaAppPrivileges, role: role, spaces: spaces, userProfile: userProfile, onChange: onChange, editable: editable, validator: validator }));\n            }\n            else {\n                return (React.createElement(SimplePrivilegeForm, { kibanaAppPrivileges: kibanaAppPrivileges, role: role, onChange: onChange, editable: editable }));\n            }\n        };\n        return _this;\n    }\n    KibanaPrivileges.prototype.render = function () {\n        return (React.createElement(CollapsiblePanel, { iconType: 'logoKibana', title: 'Kibana' }, this.getForm()));\n    };\n    return KibanaPrivileges;\n}(Component));\nexport { KibanaPrivileges };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/kibana_privileges.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/kibana_privileges.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAMzC,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAC3D,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAC9D,OAAO,EAAE,uBAAuB,EAAE,MAAM,8BAA8B,CAAC;AAavE;IAAsC,4CAAoB;IAA1D;QAAA,qEA4CC;QAnCQ,aAAO,GAAG;YACT,IAAA,gBASQ,EARZ,4CAAmB,EACnB,cAAI,EACJ,gCAAa,EACb,cAAW,EAAX,gCAAW,EACX,4BAAW,EACX,sBAAQ,EACR,sBAAQ,EACR,wBAAS,CACI;YAEf,IAAI,aAAa,EAAE;gBACjB,OAAO,CACL,oBAAC,uBAAuB,IACtB,mBAAmB,EAAE,mBAAmB,EACxC,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,MAAM,EACd,WAAW,EAAE,WAAW,EACxB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,SAAS,GACpB,CACH,CAAC;aACH;iBAAM;gBACL,OAAO,CACL,oBAAC,mBAAmB,IAClB,mBAAmB,EAAE,mBAAmB,EACxC,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,GAClB,CACH,CAAC;aACH;QACH,CAAC,CAAC;;IACJ,CAAC;IA3CQ,iCAAM,GAAb;QACE,OAAO,CACL,oBAAC,gBAAgB,IAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,QAAQ,IACtD,IAAI,CAAC,OAAO,EAAE,CACE,CACpB,CAAC;IACJ,CAAC;IAqCH,uBAAC;AAAD,CAAC,AA5CD,CAAsC,SAAS,GA4C9C","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React, { Component } from 'react';\nimport { Space } from '../../../../../../../../spaces/common/model/space';\nimport { UserProfile } from '../../../../../../../../xpack_main/public/services/user_profile';\nimport { KibanaPrivilege } from '../../../../../../../common/model/kibana_privilege';\nimport { Role } from '../../../../../../../common/model/role';\nimport { RoleValidator } from '../../../lib/validate_role';\nimport { CollapsiblePanel } from '../../collapsible_panel';\nimport { SimplePrivilegeForm } from './simple_privilege_form';\nimport { SpaceAwarePrivilegeForm } from './space_aware_privilege_form';\n\ninterface Props {\n  role: Role;\n  spacesEnabled: boolean;\n  spaces?: Space[];\n  userProfile: UserProfile;\n  editable: boolean;\n  kibanaAppPrivileges: KibanaPrivilege[];\n  onChange: (role: Role) => void;\n  validator: RoleValidator;\n}\n\nexport class KibanaPrivileges extends Component<Props, {}> {\n  public render() {\n    return (\n      <CollapsiblePanel iconType={'logoKibana'} title={'Kibana'}>\n        {this.getForm()}\n      </CollapsiblePanel>\n    );\n  }\n\n  public getForm = () => {\n    const {\n      kibanaAppPrivileges,\n      role,\n      spacesEnabled,\n      spaces = [],\n      userProfile,\n      onChange,\n      editable,\n      validator,\n    } = this.props;\n\n    if (spacesEnabled) {\n      return (\n        <SpaceAwarePrivilegeForm\n          kibanaAppPrivileges={kibanaAppPrivileges}\n          role={role}\n          spaces={spaces}\n          userProfile={userProfile}\n          onChange={onChange}\n          editable={editable}\n          validator={validator}\n        />\n      );\n    } else {\n      return (\n        <SimplePrivilegeForm\n          kibanaAppPrivileges={kibanaAppPrivileges}\n          role={role}\n          onChange={onChange}\n          editable={editable}\n        />\n      );\n    }\n  };\n}\n"]}]}