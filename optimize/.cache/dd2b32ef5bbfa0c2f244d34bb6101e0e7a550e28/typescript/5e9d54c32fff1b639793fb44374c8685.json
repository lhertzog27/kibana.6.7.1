{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/time/time_unit.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/time/time_unit.ts","mtime":1567631711977},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nvar _a, _b;\nexport var TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"Millisecond\"] = 1] = \"Millisecond\";\n    TimeUnit[TimeUnit[\"Second\"] = 1000] = \"Second\";\n    TimeUnit[TimeUnit[\"Minute\"] = 60000] = \"Minute\";\n    TimeUnit[TimeUnit[\"Hour\"] = 3600000] = \"Hour\";\n    TimeUnit[TimeUnit[\"Day\"] = 86400000] = \"Day\";\n    TimeUnit[TimeUnit[\"Month\"] = 2592000000] = \"Month\";\n    TimeUnit[TimeUnit[\"Year\"] = 31104000000] = \"Year\";\n})(TimeUnit || (TimeUnit = {}));\nexport var timeUnitLabels = (_a = {},\n    _a[TimeUnit.Millisecond] = 'ms',\n    _a[TimeUnit.Second] = 's',\n    _a[TimeUnit.Minute] = 'm',\n    _a[TimeUnit.Hour] = 'h',\n    _a[TimeUnit.Day] = 'd',\n    _a[TimeUnit.Month] = 'M',\n    _a[TimeUnit.Year] = 'y',\n    _a);\nexport var elasticSearchTimeUnits = (_b = {},\n    _b[TimeUnit.Second] = 's',\n    _b[TimeUnit.Minute] = 'm',\n    _b[TimeUnit.Hour] = 'h',\n    _b[TimeUnit.Day] = 'd',\n    _b[TimeUnit.Month] = 'M',\n    _b[TimeUnit.Year] = 'y',\n    _b);\nexport var getElasticSearchTimeUnit = function (scale) {\n    return elasticSearchTimeUnits[scale];\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/time/time_unit.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/time/time_unit.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,MAAM,CAAN,IAAY,QAQX;AARD,WAAY,QAAQ;IAClB,qDAAe,CAAA;IACf,8CAA2B,CAAA;IAC3B,+CAAoB,CAAA;IACpB,6CAAkB,CAAA;IAClB,4CAAe,CAAA;IACf,kDAAgB,CAAA;IAChB,iDAAiB,CAAA;AACnB,CAAC,EARW,QAAQ,KAAR,QAAQ,QAQnB;AAID,MAAM,CAAC,IAAM,cAAc;IACzB,GAAC,QAAQ,CAAC,WAAW,IAAG,IAAI;IAC5B,GAAC,QAAQ,CAAC,MAAM,IAAG,GAAG;IACtB,GAAC,QAAQ,CAAC,MAAM,IAAG,GAAG;IACtB,GAAC,QAAQ,CAAC,IAAI,IAAG,GAAG;IACpB,GAAC,QAAQ,CAAC,GAAG,IAAG,GAAG;IACnB,GAAC,QAAQ,CAAC,KAAK,IAAG,GAAG;IACrB,GAAC,QAAQ,CAAC,IAAI,IAAG,GAAG;OACrB,CAAC;AAEF,MAAM,CAAC,IAAM,sBAAsB;IAGjC,GAAC,QAAQ,CAAC,MAAM,IAAG,GAAG;IACtB,GAAC,QAAQ,CAAC,MAAM,IAAG,GAAG;IACtB,GAAC,QAAQ,CAAC,IAAI,IAAG,GAAG;IACpB,GAAC,QAAQ,CAAC,GAAG,IAAG,GAAG;IACnB,GAAC,QAAQ,CAAC,KAAK,IAAG,GAAG;IACrB,GAAC,QAAQ,CAAC,IAAI,IAAG,GAAG;OACrB,CAAC;AAEF,MAAM,CAAC,IAAM,wBAAwB,GAAG,UAAC,KAAe;IACtD,OAAA,sBAAsB,CAAC,KAAK,CAAC;AAA7B,CAA6B,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nexport enum TimeUnit {\n  Millisecond = 1,\n  Second = Millisecond * 1000,\n  Minute = Second * 60,\n  Hour = Minute * 60,\n  Day = Hour * 24,\n  Month = Day * 30,\n  Year = Month * 12,\n}\n\nexport type ElasticsearchTimeUnit = 's' | 'm' | 'h' | 'd' | 'M' | 'y';\n\nexport const timeUnitLabels = {\n  [TimeUnit.Millisecond]: 'ms',\n  [TimeUnit.Second]: 's',\n  [TimeUnit.Minute]: 'm',\n  [TimeUnit.Hour]: 'h',\n  [TimeUnit.Day]: 'd',\n  [TimeUnit.Month]: 'M',\n  [TimeUnit.Year]: 'y',\n};\n\nexport const elasticSearchTimeUnits: {\n  [key: string]: ElasticsearchTimeUnit;\n} = {\n  [TimeUnit.Second]: 's',\n  [TimeUnit.Minute]: 'm',\n  [TimeUnit.Hour]: 'h',\n  [TimeUnit.Day]: 'd',\n  [TimeUnit.Month]: 'M',\n  [TimeUnit.Year]: 'y',\n};\n\nexport const getElasticSearchTimeUnit = (scale: TimeUnit): ElasticsearchTimeUnit =>\n  elasticSearchTimeUnits[scale];\n"]}]}