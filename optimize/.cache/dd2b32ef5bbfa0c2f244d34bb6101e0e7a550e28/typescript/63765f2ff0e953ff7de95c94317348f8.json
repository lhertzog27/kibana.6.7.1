{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/link_to/query_params.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/link_to/query_params.ts","mtime":1567631711986},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { getParamFromQueryString, getQueryStringFromLocation } from '../../utils/url_state';\nexport var getTimeFromLocation = function (location) {\n    var timeParam = getParamFromQueryString(getQueryStringFromLocation(location), 'time');\n    return timeParam ? parseFloat(timeParam) : NaN;\n};\nexport var getToFromLocation = function (location) {\n    var timeParam = getParamFromQueryString(getQueryStringFromLocation(location), 'to');\n    return timeParam ? parseFloat(timeParam) : NaN;\n};\nexport var getFromFromLocation = function (location) {\n    var timeParam = getParamFromQueryString(getQueryStringFromLocation(location), 'from');\n    return timeParam ? parseFloat(timeParam) : NaN;\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/link_to/query_params.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/link_to/query_params.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAIH,OAAO,EAAE,uBAAuB,EAAE,0BAA0B,EAAE,MAAM,uBAAuB,CAAC;AAE5F,MAAM,CAAC,IAAM,mBAAmB,GAAG,UAAC,QAAkB;IACpD,IAAM,SAAS,GAAG,uBAAuB,CAAC,0BAA0B,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;IACxF,OAAO,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACjD,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,iBAAiB,GAAG,UAAC,QAAkB;IAClD,IAAM,SAAS,GAAG,uBAAuB,CAAC,0BAA0B,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;IACtF,OAAO,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACjD,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,mBAAmB,GAAG,UAAC,QAAkB;IACpD,IAAM,SAAS,GAAG,uBAAuB,CAAC,0BAA0B,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;IACxF,OAAO,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACjD,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { Location } from 'history';\n\nimport { getParamFromQueryString, getQueryStringFromLocation } from '../../utils/url_state';\n\nexport const getTimeFromLocation = (location: Location) => {\n  const timeParam = getParamFromQueryString(getQueryStringFromLocation(location), 'time');\n  return timeParam ? parseFloat(timeParam) : NaN;\n};\n\nexport const getToFromLocation = (location: Location) => {\n  const timeParam = getParamFromQueryString(getQueryStringFromLocation(location), 'to');\n  return timeParam ? parseFloat(timeParam) : NaN;\n};\n\nexport const getFromFromLocation = (location: Location) => {\n  const timeParam = getParamFromQueryString(getQueryStringFromLocation(location), 'from');\n  return timeParam ? parseFloat(timeParam) : NaN;\n};\n"]}]}