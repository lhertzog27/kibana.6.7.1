{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap/time_ruler.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap/time_ruler.tsx","mtime":1567631711980},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { scaleTime } from 'd3-scale';\nimport * as React from 'react';\nimport styled from 'styled-components';\nexport var TimeRuler = function (_a) {\n    var end = _a.end, height = _a.height, start = _a.start, tickCount = _a.tickCount, width = _a.width;\n    var yScale = scaleTime()\n        .domain([start, end])\n        .range([0, height]);\n    var ticks = yScale.ticks(tickCount);\n    var formatTick = yScale.tickFormat();\n    return (React.createElement(\"g\", null, ticks.map(function (tick, tickIndex) {\n        var y = yScale(tick);\n        return (React.createElement(\"g\", { key: \"tick\" + tickIndex },\n            React.createElement(TimeRulerTickLabel, { x: 2, y: y - 4 }, formatTick(tick)),\n            React.createElement(TimeRulerGridLine, { x1: 0, y1: y, x2: width, y2: y })));\n    })));\n};\nTimeRuler.displayName = 'TimeRuler';\nvar TimeRulerTickLabel = styled.text(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  font-size: \", \";\\n  line-height: \", \";\\n  fill: \", \";\\n\"], [\"\\n  font-size: \", \";\\n  line-height: \", \";\\n  fill: \", \";\\n\"])), function (props) { return props.theme.eui.euiFontSizeXs; }, function (props) { return props.theme.eui.euiLineHeight; }, function (props) { return props.theme.eui.textColors.subdued; });\nvar TimeRulerGridLine = styled.line(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  stroke: \", \";\\n  stroke-dasharray: 2, 2;\\n  stroke-opacity: 0.5;\\n  stroke-width: 1px;\\n\"], [\"\\n  stroke: \",\n    \";\\n  stroke-dasharray: 2, 2;\\n  stroke-opacity: 0.5;\\n  stroke-width: 1px;\\n\"])), function (props) {\n    return props.theme.darkMode ? props.theme.eui.euiColorDarkShade : props.theme.eui.euiColorMediumShade;\n});\nvar templateObject_1, templateObject_2;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap/time_ruler.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap/time_ruler.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AACrC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAUvC,MAAM,CAAC,IAAM,SAAS,GAA8B,UAAC,EAAwC;QAAtC,YAAG,EAAE,kBAAM,EAAE,gBAAK,EAAE,wBAAS,EAAE,gBAAK;IACzF,IAAM,MAAM,GAAG,SAAS,EAAE;SACvB,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;SACpB,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;IAEtB,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACtC,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;IAEvC,OAAO,CACL,+BACG,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,SAAS;QACzB,IAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACvB,OAAO,CACL,2BAAG,GAAG,EAAE,SAAO,SAAW;YACxB,oBAAC,kBAAkB,IAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAC/B,UAAU,CAAC,IAAI,CAAC,CACE;YACrB,oBAAC,iBAAiB,IAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,GAAI,CACnD,CACL,CAAC;IACJ,CAAC,CAAC,CACA,CACL,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;AAEpC,IAAM,kBAAkB,GAAG,MAAM,CAAC,IAAI,wIAAA,iBACvB,EAAsC,oBACpC,EAAsC,aAC7C,EAA2C,KACpD,KAHc,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAA7B,CAA6B,EACpC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAA7B,CAA6B,EAC7C,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,EAAlC,CAAkC,CACpD,CAAC;AAEF,IAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,yKAAA,cACzB;IACsF,8EAIjG,KALW,UAAA,KAAK;IACb,OAAA,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,mBAAmB;AAA9F,CAA8F,CAIjG,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { scaleTime } from 'd3-scale';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\ninterface TimeRulerProps {\n  end: number;\n  height: number;\n  start: number;\n  tickCount: number;\n  width: number;\n}\n\nexport const TimeRuler: React.SFC<TimeRulerProps> = ({ end, height, start, tickCount, width }) => {\n  const yScale = scaleTime()\n    .domain([start, end])\n    .range([0, height]);\n\n  const ticks = yScale.ticks(tickCount);\n  const formatTick = yScale.tickFormat();\n\n  return (\n    <g>\n      {ticks.map((tick, tickIndex) => {\n        const y = yScale(tick);\n        return (\n          <g key={`tick${tickIndex}`}>\n            <TimeRulerTickLabel x={2} y={y - 4}>\n              {formatTick(tick)}\n            </TimeRulerTickLabel>\n            <TimeRulerGridLine x1={0} y1={y} x2={width} y2={y} />\n          </g>\n        );\n      })}\n    </g>\n  );\n};\n\nTimeRuler.displayName = 'TimeRuler';\n\nconst TimeRulerTickLabel = styled.text`\n  font-size: ${props => props.theme.eui.euiFontSizeXs};\n  line-height: ${props => props.theme.eui.euiLineHeight};\n  fill: ${props => props.theme.eui.textColors.subdued};\n`;\n\nconst TimeRulerGridLine = styled.line`\n  stroke: ${props =>\n    props.theme.darkMode ? props.theme.eui.euiColorDarkShade : props.theme.eui.euiColorMediumShade};\n  stroke-dasharray: 2, 2;\n  stroke-opacity: 0.5;\n  stroke-width: 1px;\n`;\n"]}]}