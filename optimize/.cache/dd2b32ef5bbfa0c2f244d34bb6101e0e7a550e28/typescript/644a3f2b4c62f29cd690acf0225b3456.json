{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_summary/epic.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_summary/epic.ts","mtime":1567631711989},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { combineEpics } from 'redux-observable';\nimport { merge } from 'rxjs';\nimport { exhaustMap, filter, map, withLatestFrom } from 'rxjs/operators';\nimport { logFilterActions, logPositionActions } from '../..';\nimport { loadSummary } from './actions';\nimport { loadSummaryEpic } from './operations/load';\nvar LOAD_BUCKETS_PER_PAGE = 100;\nvar MINIMUM_BUCKETS_PER_PAGE = 90;\nvar MINIMUM_BUFFER_PAGES = 0.5;\nexport var createLogSummaryEpic = function () {\n    return combineEpics(createSummaryEffectsEpic(), loadSummaryEpic);\n};\nexport var createSummaryEffectsEpic = function () { return function (action$, state$, _a) {\n    var selectLogFilterQueryAsJson = _a.selectLogFilterQueryAsJson, selectVisibleLogSummary = _a.selectVisibleLogSummary;\n    var filterQuery$ = state$.pipe(map(selectLogFilterQueryAsJson));\n    var summaryInterval$ = state$.pipe(map(selectVisibleLogSummary), map(function (_a) {\n        var start = _a.start, end = _a.end;\n        return (start && end ? getLoadParameters(start, end) : null);\n    }), filter(isNotNull));\n    var shouldLoadBetweenNewInterval$ = action$.pipe(filter(logPositionActions.reportVisibleSummary.match), filter(function (_a) {\n        var _b = _a.payload, bucketsOnPage = _b.bucketsOnPage, pagesBeforeStart = _b.pagesBeforeStart, pagesAfterEnd = _b.pagesAfterEnd;\n        return bucketsOnPage < MINIMUM_BUCKETS_PER_PAGE ||\n            pagesBeforeStart < MINIMUM_BUFFER_PAGES ||\n            pagesAfterEnd < MINIMUM_BUFFER_PAGES;\n    }), map(function (_a) {\n        var _b = _a.payload, start = _b.start, end = _b.end;\n        return getLoadParameters(start, end);\n    }));\n    var shouldLoadWithNewFilter$ = action$.pipe(filter(logFilterActions.applyLogFilterQuery.match), withLatestFrom(filterQuery$, function (filterQuery, filterQueryString) { return filterQueryString; }));\n    return merge(shouldLoadBetweenNewInterval$.pipe(withLatestFrom(filterQuery$), exhaustMap(function (_a) {\n        var _b = tslib_1.__read(_a, 2), _c = _b[0], start = _c.start, end = _c.end, bucketSize = _c.bucketSize, filterQuery = _b[1];\n        return [\n            loadSummary({\n                start: start,\n                end: end,\n                sourceId: 'default',\n                bucketSize: bucketSize,\n                filterQuery: filterQuery,\n            }),\n        ];\n    })), shouldLoadWithNewFilter$.pipe(withLatestFrom(summaryInterval$), exhaustMap(function (_a) {\n        var _b = tslib_1.__read(_a, 2), filterQuery = _b[0], _c = _b[1], start = _c.start, end = _c.end, bucketSize = _c.bucketSize;\n        return [\n            loadSummary({\n                start: start,\n                end: end,\n                sourceId: 'default',\n                bucketSize: (end - start) / LOAD_BUCKETS_PER_PAGE,\n                filterQuery: filterQuery,\n            }),\n        ];\n    })));\n}; };\nvar getLoadParameters = function (start, end) { return ({\n    start: start - (end - start),\n    end: end + (end - start),\n    bucketSize: (end - start) / LOAD_BUCKETS_PER_PAGE,\n}); };\nvar isNotNull = function (value) { return value !== null; };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_summary/epic.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/remote/log_summary/epic.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { Action } from 'redux';\nimport { combineEpics, Epic, EpicWithState } from 'redux-observable';\nimport { merge } from 'rxjs';\nimport { exhaustMap, filter, map, withLatestFrom } from 'rxjs/operators';\n\nimport { logFilterActions, logPositionActions } from '../..';\nimport { loadSummary } from './actions';\nimport { loadSummaryEpic } from './operations/load';\n\nconst LOAD_BUCKETS_PER_PAGE = 100;\nconst MINIMUM_BUCKETS_PER_PAGE = 90;\nconst MINIMUM_BUFFER_PAGES = 0.5;\n\ninterface ManageSummaryDependencies<State> {\n  selectLogFilterQueryAsJson: (state: State) => string | null;\n  selectVisibleLogSummary: (\n    state: State\n  ) => {\n    start: number | null;\n    end: number | null;\n  };\n}\n\nexport const createLogSummaryEpic = <State>() =>\n  combineEpics(createSummaryEffectsEpic<State>(), loadSummaryEpic as EpicWithState<\n    typeof loadSummaryEpic,\n    State\n  >);\n\nexport const createSummaryEffectsEpic = <State>(): Epic<\n  Action,\n  Action,\n  State,\n  ManageSummaryDependencies<State>\n> => (action$, state$, { selectLogFilterQueryAsJson, selectVisibleLogSummary }) => {\n  const filterQuery$ = state$.pipe(map(selectLogFilterQueryAsJson));\n  const summaryInterval$ = state$.pipe(\n    map(selectVisibleLogSummary),\n    map(({ start, end }) => (start && end ? getLoadParameters(start, end) : null)),\n    filter(isNotNull)\n  );\n\n  const shouldLoadBetweenNewInterval$ = action$.pipe(\n    filter(logPositionActions.reportVisibleSummary.match),\n    filter(\n      ({ payload: { bucketsOnPage, pagesBeforeStart, pagesAfterEnd } }) =>\n        bucketsOnPage < MINIMUM_BUCKETS_PER_PAGE ||\n        pagesBeforeStart < MINIMUM_BUFFER_PAGES ||\n        pagesAfterEnd < MINIMUM_BUFFER_PAGES\n    ),\n    map(({ payload: { start, end } }) => getLoadParameters(start, end))\n  );\n\n  const shouldLoadWithNewFilter$ = action$.pipe(\n    filter(logFilterActions.applyLogFilterQuery.match),\n    withLatestFrom(filterQuery$, (filterQuery, filterQueryString) => filterQueryString)\n  );\n\n  return merge(\n    shouldLoadBetweenNewInterval$.pipe(\n      withLatestFrom(filterQuery$),\n      exhaustMap(([{ start, end, bucketSize }, filterQuery]) => [\n        loadSummary({\n          start,\n          end,\n          sourceId: 'default',\n          bucketSize,\n          filterQuery,\n        }),\n      ])\n    ),\n    shouldLoadWithNewFilter$.pipe(\n      withLatestFrom(summaryInterval$),\n      exhaustMap(([filterQuery, { start, end, bucketSize }]) => [\n        loadSummary({\n          start,\n          end,\n          sourceId: 'default',\n          bucketSize: (end - start) / LOAD_BUCKETS_PER_PAGE,\n          filterQuery,\n        }),\n      ])\n    )\n  );\n};\n\nconst getLoadParameters = (start: number, end: number) => ({\n  start: start - (end - start),\n  end: end + (end - start),\n  bucketSize: (end - start) / LOAD_BUCKETS_PER_PAGE,\n});\n\nconst isNotNull = <T>(value: T | null): value is T => value !== null;\n"]}]}