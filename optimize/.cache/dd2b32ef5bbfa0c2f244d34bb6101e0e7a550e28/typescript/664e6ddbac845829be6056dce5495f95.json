{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/overview/enrolled_beats.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/overview/enrolled_beats.tsx","mtime":1567631711883},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButton, EuiButtonEmpty, EuiGlobalToastList, EuiModal, EuiModalBody, EuiModalHeader, EuiModalHeaderTitle, EuiOverlayMask, } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport { flatten, sortBy } from 'lodash';\nimport moment from 'moment';\nimport React from 'react';\nimport { EnrollBeat } from '../../components/enroll_beats';\nimport { Breadcrumb } from '../../components/navigation/breadcrumb';\nimport { BeatsTableType, Table } from '../../components/table';\nimport { beatsListActions } from '../../components/table/action_schema';\nimport { AssignmentActionType } from '../../components/table/table';\nimport { WithKueryAutocompletion } from '../../containers/with_kuery_autocompletion';\nvar BeatsPageComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(BeatsPageComponent, _super);\n    function BeatsPageComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.tableRef = React.createRef();\n        _this.renderActionArea = function () { return (React.createElement(React.Fragment, null,\n            React.createElement(EuiButtonEmpty, { onClick: function () {\n                    // random, but specific number ensures new tab does not overwrite another _newtab in chrome\n                    // and at the same time not truly random so that many clicks of the link open many tabs at this same URL\n                    window.open('https://www.elastic.co/guide/en/beats/libbeat/current/getting-started.html', '_newtab35628937456');\n                } },\n                React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.beats.installBeatsLearningButtonLabel\", defaultMessage: \"Learn how to install beats\" })),\n            React.createElement(EuiButton, { size: \"s\", color: \"primary\", onClick: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                    return tslib_1.__generator(this, function (_a) {\n                        this.props.goTo(\"/overview/enrolled_beats/enroll\");\n                        return [2 /*return*/];\n                    });\n                }); } },\n                React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.beats.enrollBeatsButtonLabel\", defaultMessage: \"Enroll Beats\" })),\n            _this.props.location.pathname === '/overview/enrolled_beats/enroll' && (React.createElement(EuiOverlayMask, null,\n                React.createElement(EuiModal, { onClose: function () {\n                        _this.props.setUrlState({\n                            enrollmentToken: '',\n                        });\n                        _this.props.goTo(\"/overview/enrolled_beats\");\n                    }, style: { width: '640px' } },\n                    React.createElement(EuiModalHeader, null,\n                        React.createElement(EuiModalHeaderTitle, null,\n                            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.beats.enrollNewBeatsTitle\", defaultMessage: \"Enroll a new Beat\" }))),\n                    React.createElement(EuiModalBody, null,\n                        React.createElement(EnrollBeat, { frameworkBasePath: _this.props.libs.framework.info.basePath, enrollmentToken: _this.props.urlState.enrollmentToken, getBeatWithToken: _this.props.containers.beats.getBeatWithToken, createEnrollmentToken: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                                var enrollmentTokens;\n                                return tslib_1.__generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, this.props.libs.tokens.createEnrollmentTokens()];\n                                        case 1:\n                                            enrollmentTokens = _a.sent();\n                                            this.props.setUrlState({\n                                                enrollmentToken: enrollmentTokens[0],\n                                            });\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); }, onBeatEnrolled: function () {\n                                _this.props.setUrlState({\n                                    enrollmentToken: '',\n                                });\n                            } }),\n                        !_this.props.urlState.enrollmentToken && (React.createElement(React.Fragment, null,\n                            React.createElement(EuiButton, { size: \"s\", color: \"primary\", style: { marginLeft: 10 }, onClick: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                                    return tslib_1.__generator(this, function (_a) {\n                                        this.props.goTo('/overview/enrolled_beats');\n                                        return [2 /*return*/];\n                                    });\n                                }); } }, \"Done\"))))))))); };\n        _this.notifyBeatDisenrolled = function (beats) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var intl, title, text;\n            return tslib_1.__generator(this, function (_a) {\n                intl = this.props.intl;\n                if (beats.length === 1) {\n                    title = intl.formatMessage({\n                        id: 'xpack.beatsManagement.beats.beatDisenrolledNotificationTitle',\n                        defaultMessage: '{firstBeatNameOrId} disenrolled',\n                    }, {\n                        firstBeatNameOrId: \"\\\"\" + (beats[0].name || beats[0].id) + \"\\\"\",\n                    });\n                    text = intl.formatMessage({\n                        id: 'xpack.beatsManagement.beats.beatDisenrolledNotificationDescription',\n                        defaultMessage: 'Beat with ID {firstBeatId} was disenrolled.',\n                    }, {\n                        firstBeatId: \"\\\"\" + beats[0].id + \"\\\"\",\n                    });\n                }\n                else {\n                    title = intl.formatMessage({\n                        id: 'xpack.beatsManagement.beats.disenrolledBeatsNotificationTitle',\n                        defaultMessage: '{beatsLength} beats disenrolled',\n                    }, {\n                        beatsLength: beats.length,\n                    });\n                }\n                this.setState({\n                    notifications: this.state.notifications.concat({\n                        color: 'warning',\n                        id: \"disenroll_\" + new Date(),\n                        title: title,\n                        text: text,\n                    }),\n                });\n                return [2 /*return*/];\n            });\n        }); };\n        _this.notifyUpdatedTagAssociation = function (action, beats, tag) {\n            var intl = _this.props.intl;\n            var notificationMessage = action === 'removed'\n                ? intl.formatMessage({\n                    id: 'xpack.beatsManagement.beats.removedNotificationDescription',\n                    defaultMessage: 'Removed tag {tag} from {assignmentsLength, plural, one {beat {beatName}} other {# beats}}.',\n                }, {\n                    tag: \"\\\"\" + tag + \"\\\"\",\n                    assignmentsLength: beats.length,\n                    beatName: \"\\\"\" + (beats[0].name || beats[0].id) + \"\\\"\",\n                })\n                : intl.formatMessage({\n                    id: 'xpack.beatsManagement.beats.addedNotificationDescription',\n                    defaultMessage: 'Added tag {tag} to {assignmentsLength, plural, one {beat {beatName}} other {# beats}}.',\n                }, {\n                    tag: \"\\\"\" + tag + \"\\\"\",\n                    assignmentsLength: beats.length,\n                    beatName: \"\\\"\" + (beats[0].name || beats[0].id) + \"\\\"\",\n                });\n            var notificationTitle = action === 'removed'\n                ? intl.formatMessage({\n                    id: 'xpack.beatsManagement.beats.removedNotificationTitle',\n                    defaultMessage: '{assignmentsLength, plural, one {Tag} other {Tags}} removed',\n                }, {\n                    assignmentsLength: beats.length,\n                })\n                : intl.formatMessage({\n                    id: 'xpack.beatsManagement.beats.addedNotificationTitle',\n                    defaultMessage: '{assignmentsLength, plural, one {Tag} other {Tags}} added',\n                }, {\n                    assignmentsLength: beats.length,\n                });\n            _this.setState({\n                notifications: _this.state.notifications.concat({\n                    color: 'success',\n                    id: \"tag-\" + moment.now(),\n                    text: React.createElement(\"p\", null, notificationMessage),\n                    title: notificationTitle,\n                }),\n            });\n        };\n        _this.getSelectedBeats = function () {\n            if (!_this.tableRef.current) {\n                return [];\n            }\n            var selectedIds = _this.tableRef.current.state.selection.map(function (beat) { return beat.id; });\n            var beats = [];\n            selectedIds.forEach(function (id) {\n                var beat = _this.props.containers.beats.state.list.find(function (b) { return b.id === id; });\n                if (beat) {\n                    beats.push(beat);\n                }\n            });\n            return beats;\n        };\n        _this.state = {\n            notifications: [],\n            tags: null,\n            beats: [],\n            assignmentOptions: null,\n        };\n        props.renderAction(_this.renderActionArea);\n        return _this;\n    }\n    BeatsPageComponent.prototype.componentDidMount = function () {\n        if (this.props.urlState.beatsKBar) {\n            this.props.containers.beats.reload(this.props.urlState.beatsKBar);\n        }\n        this.updateBeatsData(this.props.urlState.beatsKBar);\n    };\n    BeatsPageComponent.prototype.updateBeatsData = function (beatsKBar) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var beats, _a, tags;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = sortBy;\n                        return [4 /*yield*/, this.props.libs.beats.getAll(beatsKBar)];\n                    case 1:\n                        beats = _a.apply(void 0, [_b.sent(), 'id']) || [];\n                        return [4 /*yield*/, this.props.libs.tags.getTagsWithIds(flatten(beats.map(function (beat) { return beat.tags; })))];\n                    case 2:\n                        tags = _b.sent();\n                        this.setState({\n                            tags: tags,\n                            beats: beats,\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BeatsPageComponent.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Breadcrumb, { title: i18n.translate('xpack.beatsManagement.breadcrumb.enrolledBeats', {\n                    defaultMessage: 'Enrolled Beats',\n                }), path: \"/overview/enrolled_beats\" }),\n            React.createElement(WithKueryAutocompletion, { libs: this.props.libs, fieldPrefix: \"beat\" }, function (autocompleteProps) { return (React.createElement(Table, { kueryBarProps: tslib_1.__assign({}, autocompleteProps, { filterQueryDraft: 'false', isValid: _this.props.libs.elasticsearch.isKueryValid(_this.props.urlState.beatsKBar || ''), onChange: function (value) {\n                        _this.props.setUrlState({ beatsKBar: value });\n                        _this.updateBeatsData(value);\n                    }, onSubmit: function () { return null; }, value: _this.props.urlState.beatsKBar || '' }), actions: beatsListActions, actionData: {\n                    tags: _this.state.assignmentOptions,\n                }, actionHandler: function (action, payload) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                    var _a, status, assignmentOptions;\n                    return tslib_1.__generator(this, function (_b) {\n                        switch (_b.label) {\n                            case 0:\n                                _a = action;\n                                switch (_a) {\n                                    case AssignmentActionType.Assign: return [3 /*break*/, 1];\n                                    case AssignmentActionType.Delete: return [3 /*break*/, 4];\n                                    case AssignmentActionType.Reload: return [3 /*break*/, 7];\n                                }\n                                return [3 /*break*/, 9];\n                            case 1: return [4 /*yield*/, this.props.containers.beats.toggleTagAssignment(payload, this.getSelectedBeats())];\n                            case 2:\n                                status = _b.sent();\n                                return [4 /*yield*/, this.updateBeatsData()];\n                            case 3:\n                                _b.sent();\n                                this.notifyUpdatedTagAssociation(status, this.getSelectedBeats(), payload);\n                                return [3 /*break*/, 9];\n                            case 4: return [4 /*yield*/, this.props.containers.beats.deactivate(this.getSelectedBeats())];\n                            case 5:\n                                _b.sent();\n                                return [4 /*yield*/, this.updateBeatsData()];\n                            case 6:\n                                _b.sent();\n                                this.notifyBeatDisenrolled(this.getSelectedBeats());\n                                return [3 /*break*/, 9];\n                            case 7: return [4 /*yield*/, this.props.libs.tags.getassignableTagsForBeats(this.getSelectedBeats())];\n                            case 8:\n                                assignmentOptions = _b.sent();\n                                this.setState({ assignmentOptions: assignmentOptions });\n                                return [3 /*break*/, 9];\n                            case 9: return [2 /*return*/];\n                        }\n                    });\n                }); }, items: _this.state.beats.map(function (beat) { return (tslib_1.__assign({}, beat, { tags: (_this.state.tags || []).filter(function (tag) { return beat.tags.includes(tag.id); }) })); }), ref: _this.tableRef, type: BeatsTableType })); }),\n            React.createElement(EuiGlobalToastList, { toasts: this.state.notifications, dismissToast: function () { return _this.setState({ notifications: [] }); }, toastLifeTimeMs: 5000 })));\n    };\n    return BeatsPageComponent;\n}(React.PureComponent));\nexport var BeatsPage = injectI18n(BeatsPageComponent);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/overview/enrolled_beats.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/overview/enrolled_beats.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiButton,\n  EuiButtonEmpty,\n  EuiGlobalToastList,\n  EuiModal,\n  EuiModalBody,\n  EuiModalHeader,\n  EuiModalHeaderTitle,\n  EuiOverlayMask,\n} from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport { flatten, sortBy } from 'lodash';\nimport moment from 'moment';\nimport React from 'react';\nimport { BeatTag, CMBeat } from '../../../common/domain_types';\nimport { EnrollBeat } from '../../components/enroll_beats';\nimport { Breadcrumb } from '../../components/navigation/breadcrumb';\nimport { BeatsTableType, Table } from '../../components/table';\nimport { beatsListActions } from '../../components/table/action_schema';\nimport { AssignmentActionType } from '../../components/table/table';\nimport { WithKueryAutocompletion } from '../../containers/with_kuery_autocompletion';\nimport { AppPageProps } from '../../frontend_types';\n\ninterface PageProps extends AppPageProps {\n  renderAction: (area: () => JSX.Element) => void;\n  intl: InjectedIntl;\n}\n\ninterface PageState {\n  notifications: any[];\n  tags: BeatTag[] | null;\n  beats: CMBeat[];\n  assignmentOptions: BeatTag[] | null;\n}\n\nclass BeatsPageComponent extends React.PureComponent<PageProps, PageState> {\n  private tableRef: React.RefObject<any> = React.createRef();\n  constructor(props: PageProps) {\n    super(props);\n\n    this.state = {\n      notifications: [],\n      tags: null,\n      beats: [],\n      assignmentOptions: null,\n    };\n\n    props.renderAction(this.renderActionArea);\n  }\n\n  public componentDidMount() {\n    if (this.props.urlState.beatsKBar) {\n      this.props.containers.beats.reload(this.props.urlState.beatsKBar);\n    }\n    this.updateBeatsData(this.props.urlState.beatsKBar);\n  }\n\n  public async updateBeatsData(beatsKBar?: string) {\n    const beats = sortBy(await this.props.libs.beats.getAll(beatsKBar), 'id') || [];\n    const tags = await this.props.libs.tags.getTagsWithIds(flatten(beats.map(beat => beat.tags)));\n\n    this.setState({\n      tags,\n      beats,\n    });\n  }\n\n  public renderActionArea = () => (\n    <React.Fragment>\n      <EuiButtonEmpty\n        onClick={() => {\n          // random, but specific number ensures new tab does not overwrite another _newtab in chrome\n          // and at the same time not truly random so that many clicks of the link open many tabs at this same URL\n          window.open(\n            'https://www.elastic.co/guide/en/beats/libbeat/current/getting-started.html',\n            '_newtab35628937456'\n          );\n        }}\n      >\n        <FormattedMessage\n          id=\"xpack.beatsManagement.beats.installBeatsLearningButtonLabel\"\n          defaultMessage=\"Learn how to install beats\"\n        />\n      </EuiButtonEmpty>\n      <EuiButton\n        size=\"s\"\n        color=\"primary\"\n        onClick={async () => {\n          this.props.goTo(`/overview/enrolled_beats/enroll`);\n        }}\n      >\n        <FormattedMessage\n          id=\"xpack.beatsManagement.beats.enrollBeatsButtonLabel\"\n          defaultMessage=\"Enroll Beats\"\n        />\n      </EuiButton>\n\n      {this.props.location.pathname === '/overview/enrolled_beats/enroll' && (\n        <EuiOverlayMask>\n          <EuiModal\n            onClose={() => {\n              this.props.setUrlState({\n                enrollmentToken: '',\n              });\n              this.props.goTo(`/overview/enrolled_beats`);\n            }}\n            style={{ width: '640px' }}\n          >\n            <EuiModalHeader>\n              <EuiModalHeaderTitle>\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.beats.enrollNewBeatsTitle\"\n                  defaultMessage=\"Enroll a new Beat\"\n                />\n              </EuiModalHeaderTitle>\n            </EuiModalHeader>\n            <EuiModalBody>\n              <EnrollBeat\n                frameworkBasePath={this.props.libs.framework.info.basePath}\n                enrollmentToken={this.props.urlState.enrollmentToken}\n                getBeatWithToken={this.props.containers.beats.getBeatWithToken}\n                createEnrollmentToken={async () => {\n                  const enrollmentTokens = await this.props.libs.tokens.createEnrollmentTokens();\n                  this.props.setUrlState({\n                    enrollmentToken: enrollmentTokens[0],\n                  });\n                }}\n                onBeatEnrolled={() => {\n                  this.props.setUrlState({\n                    enrollmentToken: '',\n                  });\n                }}\n              />\n              {!this.props.urlState.enrollmentToken && (\n                <React.Fragment>\n                  <EuiButton\n                    size=\"s\"\n                    color=\"primary\"\n                    style={{ marginLeft: 10 }}\n                    onClick={async () => {\n                      this.props.goTo('/overview/enrolled_beats');\n                    }}\n                  >\n                    Done\n                  </EuiButton>\n                </React.Fragment>\n              )}\n            </EuiModalBody>\n          </EuiModal>\n        </EuiOverlayMask>\n      )}\n    </React.Fragment>\n  );\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Breadcrumb\n          title={i18n.translate('xpack.beatsManagement.breadcrumb.enrolledBeats', {\n            defaultMessage: 'Enrolled Beats',\n          })}\n          path={`/overview/enrolled_beats`}\n        />\n        <WithKueryAutocompletion libs={this.props.libs} fieldPrefix=\"beat\">\n          {autocompleteProps => (\n            <Table\n              kueryBarProps={{\n                ...autocompleteProps,\n                filterQueryDraft: 'false', // todo\n                isValid: this.props.libs.elasticsearch.isKueryValid(\n                  this.props.urlState.beatsKBar || ''\n                ),\n                onChange: (value: any) => {\n                  this.props.setUrlState({ beatsKBar: value });\n\n                  this.updateBeatsData(value);\n                },\n                onSubmit: () => null, // todo\n                value: this.props.urlState.beatsKBar || '',\n              }}\n              actions={beatsListActions}\n              actionData={{\n                tags: this.state.assignmentOptions,\n              }}\n              actionHandler={async (action: AssignmentActionType, payload: any) => {\n                switch (action) {\n                  case AssignmentActionType.Assign:\n                    const status = await this.props.containers.beats.toggleTagAssignment(\n                      payload,\n                      this.getSelectedBeats()\n                    );\n                    await this.updateBeatsData();\n                    this.notifyUpdatedTagAssociation(status, this.getSelectedBeats(), payload);\n                    break;\n                  case AssignmentActionType.Delete:\n                    await this.props.containers.beats.deactivate(this.getSelectedBeats());\n                    await this.updateBeatsData();\n                    this.notifyBeatDisenrolled(this.getSelectedBeats());\n                    break;\n                  case AssignmentActionType.Reload:\n                    const assignmentOptions = await this.props.libs.tags.getassignableTagsForBeats(\n                      this.getSelectedBeats()\n                    );\n                    this.setState({ assignmentOptions });\n                    break;\n                }\n              }}\n              items={this.state.beats.map(beat => ({\n                ...beat,\n                tags: (this.state.tags || []).filter(tag => beat.tags.includes(tag.id)),\n              }))}\n              ref={this.tableRef}\n              type={BeatsTableType}\n            />\n          )}\n        </WithKueryAutocompletion>\n        <EuiGlobalToastList\n          toasts={this.state.notifications}\n          dismissToast={() => this.setState({ notifications: [] })}\n          toastLifeTimeMs={5000}\n        />\n      </React.Fragment>\n    );\n  }\n\n  private notifyBeatDisenrolled = async (beats: CMBeat[]) => {\n    const { intl } = this.props;\n    let title;\n    let text;\n    if (beats.length === 1) {\n      title = intl.formatMessage(\n        {\n          id: 'xpack.beatsManagement.beats.beatDisenrolledNotificationTitle',\n          defaultMessage: '{firstBeatNameOrId} disenrolled',\n        },\n        {\n          firstBeatNameOrId: `\"${beats[0].name || beats[0].id}\"`,\n        }\n      );\n      text = intl.formatMessage(\n        {\n          id: 'xpack.beatsManagement.beats.beatDisenrolledNotificationDescription',\n          defaultMessage: 'Beat with ID {firstBeatId} was disenrolled.',\n        },\n        {\n          firstBeatId: `\"${beats[0].id}\"`,\n        }\n      );\n    } else {\n      title = intl.formatMessage(\n        {\n          id: 'xpack.beatsManagement.beats.disenrolledBeatsNotificationTitle',\n          defaultMessage: '{beatsLength} beats disenrolled',\n        },\n        {\n          beatsLength: beats.length,\n        }\n      );\n    }\n\n    this.setState({\n      notifications: this.state.notifications.concat({\n        color: 'warning',\n        id: `disenroll_${new Date()}`,\n        title,\n        text,\n      }),\n    });\n  };\n\n  private notifyUpdatedTagAssociation = (\n    action: 'added' | 'removed',\n    beats: CMBeat[],\n    tag: string\n  ) => {\n    const { intl } = this.props;\n    const notificationMessage =\n      action === 'removed'\n        ? intl.formatMessage(\n            {\n              id: 'xpack.beatsManagement.beats.removedNotificationDescription',\n              defaultMessage:\n                'Removed tag {tag} from {assignmentsLength, plural, one {beat {beatName}} other {# beats}}.',\n            },\n            {\n              tag: `\"${tag}\"`,\n              assignmentsLength: beats.length,\n              beatName: `\"${beats[0].name || beats[0].id}\"`,\n            }\n          )\n        : intl.formatMessage(\n            {\n              id: 'xpack.beatsManagement.beats.addedNotificationDescription',\n              defaultMessage:\n                'Added tag {tag} to {assignmentsLength, plural, one {beat {beatName}} other {# beats}}.',\n            },\n            {\n              tag: `\"${tag}\"`,\n              assignmentsLength: beats.length,\n              beatName: `\"${beats[0].name || beats[0].id}\"`,\n            }\n          );\n    const notificationTitle =\n      action === 'removed'\n        ? intl.formatMessage(\n            {\n              id: 'xpack.beatsManagement.beats.removedNotificationTitle',\n              defaultMessage: '{assignmentsLength, plural, one {Tag} other {Tags}} removed',\n            },\n            {\n              assignmentsLength: beats.length,\n            }\n          )\n        : intl.formatMessage(\n            {\n              id: 'xpack.beatsManagement.beats.addedNotificationTitle',\n              defaultMessage: '{assignmentsLength, plural, one {Tag} other {Tags}} added',\n            },\n            {\n              assignmentsLength: beats.length,\n            }\n          );\n\n    this.setState({\n      notifications: this.state.notifications.concat({\n        color: 'success',\n        id: `tag-${moment.now()}`,\n        text: <p>{notificationMessage}</p>,\n        title: notificationTitle,\n      }),\n    });\n  };\n\n  private getSelectedBeats = (): CMBeat[] => {\n    if (!this.tableRef.current) {\n      return [];\n    }\n    const selectedIds = this.tableRef.current.state.selection.map((beat: any) => beat.id);\n    const beats: CMBeat[] = [];\n    selectedIds.forEach((id: any) => {\n      const beat = this.props.containers.beats.state.list.find(b => b.id === id);\n      if (beat) {\n        beats.push(beat);\n      }\n    });\n    return beats;\n  };\n}\n\nexport const BeatsPage = injectI18n(BeatsPageComponent);\n"]}]}