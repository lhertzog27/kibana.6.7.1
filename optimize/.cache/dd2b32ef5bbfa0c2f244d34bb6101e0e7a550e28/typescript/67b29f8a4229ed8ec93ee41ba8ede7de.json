{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/embeddable/types.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/embeddable/types.ts","mtime":1567631711722},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport var QueryLanguageType;\n(function (QueryLanguageType) {\n    QueryLanguageType[\"KUERY\"] = \"kuery\";\n    QueryLanguageType[\"LUCENE\"] = \"lucene\";\n})(QueryLanguageType || (QueryLanguageType = {}));\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/embeddable/types.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/embeddable/types.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAmBH,MAAM,CAAN,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,oCAAe,CAAA;IACf,sCAAiB,CAAA;AACnB,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB,QAG5B","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport interface TimeRange {\n  to: string;\n  from: string;\n}\n\nexport interface FilterMeta {\n  disabled: boolean;\n}\n\n// TODO: Filter object representation needs to be fleshed out.\nexport interface Filter {\n  meta: FilterMeta;\n  query: object;\n}\n\nexport type Filters = Filter[];\n\nexport enum QueryLanguageType {\n  KUERY = 'kuery',\n  LUCENE = 'lucene',\n}\n\nexport interface Query {\n  language: QueryLanguageType;\n  query: string;\n}\nexport interface EmbeddableCustomization {\n  [key: string]: object | string;\n}\n\nexport interface ContainerState {\n  // 'view' or 'edit'. Should probably be an enum but I'm undecided where to define it, here or in dashboard code.\n  viewMode: string;\n\n  timeRange: TimeRange;\n\n  filters: Filters;\n\n  query: Query;\n\n  // The shape will be up to the embeddable type.\n  embeddableCustomization?: EmbeddableCustomization;\n\n  /**\n   * Whether or not panel titles are hidden. It is not the embeddable's responsibility to hide the title (the container\n   * handles that). This information is currently only used to determine the title for reporting (data-sharing-title\n   * attribute). If we move that out of the embeddables and push it to the container (as we probably should), then\n   * we shouldn't need to expose this information.\n   */\n  hidePanelTitles: boolean;\n\n  /**\n   * Is the current panel in expanded mode\n   */\n  isPanelExpanded: boolean;\n\n  /**\n   * A way to override the underlying embeddable title and supply a title at the panel level.\n   */\n  customTitle?: string;\n}\n\nexport interface EmbeddableState {\n  /**\n   * Any customization data that should be stored at the panel level. For\n   * example, pie slice colors, or custom per panel sort order or columns.\n   */\n  customization?: object;\n  /**\n   * A possible filter the embeddable wishes dashboard to apply.\n   */\n  stagedFilter?: object;\n}\n"]}]}