{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/lib/field_to_display_name.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/lib/field_to_display_name.ts","mtime":1567631711982},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nexport var fieldToName = function (field, intl) {\n    var LOOKUP = {\n        'kubernetes.namespace': intl.formatMessage({\n            id: 'xpack.infra.groupByDisplayNames.kubernetesNamespace',\n            defaultMessage: 'Namespace',\n        }),\n        'kubernetes.node.name': intl.formatMessage({\n            id: 'xpack.infra.groupByDisplayNames.kubernetesNodeName',\n            defaultMessage: 'Node',\n        }),\n        'host.name': intl.formatMessage({\n            id: 'xpack.infra.groupByDisplayNames.hostName',\n            defaultMessage: 'Host',\n        }),\n        'meta.cloud.availability_zone': intl.formatMessage({\n            id: 'xpack.infra.groupByDisplayNames.availabilityZone',\n            defaultMessage: 'Availability Zone',\n        }),\n        'meta.cloud.machine_type': intl.formatMessage({\n            id: 'xpack.infra.groupByDisplayNames.machineType',\n            defaultMessage: 'Machine Type',\n        }),\n        'meta.cloud.project_id': intl.formatMessage({\n            id: 'xpack.infra.groupByDisplayNames.projectID',\n            defaultMessage: 'Project ID',\n        }),\n        'meta.cloud.provider': intl.formatMessage({\n            id: 'xpack.infra.groupByDisplayNames.provider',\n            defaultMessage: 'Cloud Provider',\n        }),\n    };\n    return LOOKUP[field] || field;\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/lib/field_to_display_name.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/lib/field_to_display_name.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAQH,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,KAAa,EAAE,IAAkB;IAC3D,IAAM,MAAM,GAAW;QACrB,sBAAsB,EAAE,IAAI,CAAC,aAAa,CAAC;YACzC,EAAE,EAAE,qDAAqD;YACzD,cAAc,EAAE,WAAW;SAC5B,CAAC;QACF,sBAAsB,EAAE,IAAI,CAAC,aAAa,CAAC;YACzC,EAAE,EAAE,oDAAoD;YACxD,cAAc,EAAE,MAAM;SACvB,CAAC;QACF,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC;YAC9B,EAAE,EAAE,0CAA0C;YAC9C,cAAc,EAAE,MAAM;SACvB,CAAC;QACF,8BAA8B,EAAE,IAAI,CAAC,aAAa,CAAC;YACjD,EAAE,EAAE,kDAAkD;YACtD,cAAc,EAAE,mBAAmB;SACpC,CAAC;QACF,yBAAyB,EAAE,IAAI,CAAC,aAAa,CAAC;YAC5C,EAAE,EAAE,6CAA6C;YACjD,cAAc,EAAE,cAAc;SAC/B,CAAC;QACF,uBAAuB,EAAE,IAAI,CAAC,aAAa,CAAC;YAC1C,EAAE,EAAE,2CAA2C;YAC/C,cAAc,EAAE,YAAY;SAC7B,CAAC;QACF,qBAAqB,EAAE,IAAI,CAAC,aAAa,CAAC;YACxC,EAAE,EAAE,0CAA0C;YAC9C,cAAc,EAAE,gBAAgB;SACjC,CAAC;KACH,CAAC;IACF,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;AAChC,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { InjectedIntl } from '@kbn/i18n/react';\n\ninterface Lookup {\n  [id: string]: string;\n}\n\nexport const fieldToName = (field: string, intl: InjectedIntl) => {\n  const LOOKUP: Lookup = {\n    'kubernetes.namespace': intl.formatMessage({\n      id: 'xpack.infra.groupByDisplayNames.kubernetesNamespace',\n      defaultMessage: 'Namespace',\n    }),\n    'kubernetes.node.name': intl.formatMessage({\n      id: 'xpack.infra.groupByDisplayNames.kubernetesNodeName',\n      defaultMessage: 'Node',\n    }),\n    'host.name': intl.formatMessage({\n      id: 'xpack.infra.groupByDisplayNames.hostName',\n      defaultMessage: 'Host',\n    }),\n    'meta.cloud.availability_zone': intl.formatMessage({\n      id: 'xpack.infra.groupByDisplayNames.availabilityZone',\n      defaultMessage: 'Availability Zone',\n    }),\n    'meta.cloud.machine_type': intl.formatMessage({\n      id: 'xpack.infra.groupByDisplayNames.machineType',\n      defaultMessage: 'Machine Type',\n    }),\n    'meta.cloud.project_id': intl.formatMessage({\n      id: 'xpack.infra.groupByDisplayNames.projectID',\n      defaultMessage: 'Project ID',\n    }),\n    'meta.cloud.provider': intl.formatMessage({\n      id: 'xpack.infra.groupByDisplayNames.provider',\n      defaultMessage: 'Cloud Provider',\n    }),\n  };\n  return LOOKUP[field] || field;\n};\n"]}]}