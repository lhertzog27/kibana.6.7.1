{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/beat/details.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/beat/details.tsx","mtime":1567631711883},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiFlexGroup, EuiFlexItem, \n// @ts-ignore EuiInMemoryTable typings not yet available\nEuiInMemoryTable, EuiLink, EuiSpacer, EuiText, EuiTitle, } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { configBlockSchemas } from '../../../common/config_schemas';\nimport { translateConfigSchema } from '../../../common/config_schemas_translations_map';\nimport { TABLE_CONFIG } from '../../../common/constants';\nimport { Breadcrumb } from '../../components/navigation/breadcrumb';\nimport { ConnectedLink } from '../../components/navigation/connected_link';\nimport { TagBadge } from '../../components/tag';\nimport { ConfigView } from '../../components/tag/config_view/index';\nvar BeatDetailPageUi = /** @class */ (function (_super) {\n    tslib_1.__extends(BeatDetailPageUi, _super);\n    function BeatDetailPageUi(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            selectedConfig: null,\n            tags: [],\n            configuration_blocks: [],\n            configurationBlocksPage: 0,\n        };\n        return _this;\n    }\n    BeatDetailPageUi.prototype.componentWillMount = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var tags, blocksResult;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.props.libs.tags.getTagsWithIds(this.props.beat.tags)];\n                    case 1:\n                        tags = _a.sent();\n                        return [4 /*yield*/, this.props.libs.configBlocks.getForTags(this.props.beat.tags, this.state.configurationBlocksPage)];\n                    case 2:\n                        blocksResult = _a.sent();\n                        this.setState({\n                            configuration_blocks: blocksResult.blocks,\n                            tags: tags,\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BeatDetailPageUi.prototype.render = function () {\n        var _this = this;\n        var props = this.props;\n        var beat = props.beat, intl = props.intl;\n        if (!beat) {\n            return (React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.beat.beatNotFoundErrorTitle\", defaultMessage: \"Beat not found\" }));\n        }\n        var configurationBlocks = !this.state.configuration_blocks\n            ? []\n            : this.state.configuration_blocks.map(function (configuration) { return (tslib_1.__assign({ \n                // @ts-ignore one of the types on ConfigurationBlock doesn't define a \"module\" property\n                module: configuration.config.type || null, tagId: configuration.tag, tagColor: ((_this.state.tags || []).find(function (tag) { return tag.id === configuration.tag; }) || {})\n                    .color || 'grey', tagName: ((_this.state.tags || []).find(function (tag) { return tag.id === configuration.tag; }) || {})\n                    .name || configuration.tag }, beat, configuration, { displayValue: get(translateConfigSchema(configBlockSchemas).find(function (config) { return config.id === configuration.type; }), 'text', null) })); });\n        var columns = [\n            {\n                field: 'displayValue',\n                name: intl.formatMessage({\n                    id: 'xpack.beatsManagement.beatConfigurations.typeColumnName',\n                    defaultMessage: 'Type',\n                }),\n                sortable: true,\n                render: function (value, configuration) { return (React.createElement(EuiLink, { onClick: function () {\n                        _this.setState({\n                            selectedConfig: configuration,\n                        });\n                    } }, value || configuration.type)); },\n            },\n            {\n                field: 'module',\n                name: intl.formatMessage({\n                    id: 'xpack.beatsManagement.beatConfigurations.moduleColumnName',\n                    defaultMessage: 'Module',\n                }),\n                sortable: true,\n            },\n            {\n                field: 'description',\n                name: intl.formatMessage({\n                    id: 'xpack.beatsManagement.beatConfigurations.descriptionColumnName',\n                    defaultMessage: 'Description',\n                }),\n                sortable: true,\n            },\n            {\n                field: 'tagId',\n                name: intl.formatMessage({\n                    id: 'xpack.beatsManagement.beatConfigurations.tagColumnName',\n                    defaultMessage: 'Tag',\n                }),\n                render: function (id, block) { return (React.createElement(ConnectedLink, { path: \"/tag/edit/\" + id },\n                    React.createElement(TagBadge, { maxIdRenderSize: TABLE_CONFIG.TRUNCATE_TAG_LENGTH_SMALL, tag: { color: block.tagColor, id: id, name: block.tagName } }))); },\n                sortable: true,\n            },\n        ];\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Breadcrumb, { title: i18n.translate('xpack.beatsManagement.breadcrumb.beatDetails', {\n                    defaultMessage: 'Beat details for: {beatId}',\n                    values: { beatId: beat.id },\n                }), path: \"/beat/\" + beat.id + \"/details\" }),\n            React.createElement(EuiSpacer, null),\n            React.createElement(EuiFlexGroup, null,\n                React.createElement(EuiFlexItem, null,\n                    React.createElement(EuiTitle, { size: \"xs\" },\n                        React.createElement(\"h4\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.beat.detailsConfigurationTitle\", defaultMessage: \"Configurations\" }))),\n                    React.createElement(EuiText, { size: \"s\" },\n                        React.createElement(\"p\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.beat.detailsConfigurationDescription\", defaultMessage: \"You can have multiple configurations applied to an individual tag. These configurations can repeat\\n                    or mix types as necessary. For example, you may utilize three metricbeat configurations alongside one input and\\n                    filebeat configuration.\" })))),\n                React.createElement(EuiFlexItem, null,\n                    React.createElement(EuiInMemoryTable, { columns: columns, items: configurationBlocks }))),\n            this.state.selectedConfig && (React.createElement(ConfigView, { configBlock: this.state.selectedConfig, onClose: function () { return _this.setState({ selectedConfig: null }); } }))));\n    };\n    return BeatDetailPageUi;\n}(React.PureComponent));\nexport var BeatDetailPage = injectI18n(BeatDetailPageUi);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/beat/details.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/pages/beat/details.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiFlexGroup,\n  EuiFlexItem,\n  // @ts-ignore EuiInMemoryTable typings not yet available\n  EuiInMemoryTable,\n  EuiLink,\n  EuiSpacer,\n  EuiText,\n  EuiTitle,\n} from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { configBlockSchemas } from '../../../common/config_schemas';\nimport { translateConfigSchema } from '../../../common/config_schemas_translations_map';\nimport { TABLE_CONFIG } from '../../../common/constants';\nimport { BeatTag, CMBeat, ConfigurationBlock } from '../../../common/domain_types';\nimport { Breadcrumb } from '../../components/navigation/breadcrumb';\nimport { ConnectedLink } from '../../components/navigation/connected_link';\nimport { TagBadge } from '../../components/tag';\nimport { ConfigView } from '../../components/tag/config_view/index';\nimport { AppPageProps } from '../../frontend_types';\n\ninterface PageProps extends AppPageProps {\n  beat: CMBeat;\n  intl: InjectedIntl;\n}\n\ninterface PageState {\n  selectedConfig: ConfigurationBlock | null;\n  tags: BeatTag[];\n  configuration_blocks: ConfigurationBlock[];\n  configurationBlocksPage: number;\n}\n\nclass BeatDetailPageUi extends React.PureComponent<PageProps, PageState> {\n  constructor(props: PageProps) {\n    super(props);\n\n    this.state = {\n      selectedConfig: null,\n      tags: [],\n      configuration_blocks: [],\n      configurationBlocksPage: 0,\n    };\n  }\n\n  public async componentWillMount() {\n    const tags = await this.props.libs.tags.getTagsWithIds(this.props.beat.tags);\n    const blocksResult = await this.props.libs.configBlocks.getForTags(\n      this.props.beat.tags,\n      this.state.configurationBlocksPage\n    );\n\n    this.setState({\n      configuration_blocks: blocksResult.blocks,\n      tags,\n    });\n  }\n  public render() {\n    const props = this.props;\n    const { beat, intl } = props;\n    if (!beat) {\n      return (\n        <FormattedMessage\n          id=\"xpack.beatsManagement.beat.beatNotFoundErrorTitle\"\n          defaultMessage=\"Beat not found\"\n        />\n      );\n    }\n    const configurationBlocks = !this.state.configuration_blocks\n      ? []\n      : this.state.configuration_blocks.map(configuration => ({\n          // @ts-ignore one of the types on ConfigurationBlock doesn't define a \"module\" property\n          module: configuration.config.type || null,\n          tagId: configuration.tag,\n          tagColor:\n            ((this.state.tags || []).find(tag => tag.id === configuration.tag) || ({} as BeatTag))\n              .color || 'grey',\n          tagName:\n            ((this.state.tags || []).find(tag => tag.id === configuration.tag) || ({} as BeatTag))\n              .name || configuration.tag,\n          ...beat,\n          ...configuration,\n          displayValue: get(\n            translateConfigSchema(configBlockSchemas).find(\n              config => config.id === configuration.type\n            ),\n            'text',\n            null\n          ),\n        }));\n\n    const columns = [\n      {\n        field: 'displayValue',\n        name: intl.formatMessage({\n          id: 'xpack.beatsManagement.beatConfigurations.typeColumnName',\n          defaultMessage: 'Type',\n        }),\n        sortable: true,\n        render: (value: string | null, configuration: any) => (\n          <EuiLink\n            onClick={() => {\n              this.setState({\n                selectedConfig: configuration,\n              });\n            }}\n          >\n            {value || configuration.type}\n          </EuiLink>\n        ),\n      },\n      {\n        field: 'module',\n        name: intl.formatMessage({\n          id: 'xpack.beatsManagement.beatConfigurations.moduleColumnName',\n          defaultMessage: 'Module',\n        }),\n        sortable: true,\n      },\n      {\n        field: 'description',\n        name: intl.formatMessage({\n          id: 'xpack.beatsManagement.beatConfigurations.descriptionColumnName',\n          defaultMessage: 'Description',\n        }),\n        sortable: true,\n      },\n      {\n        field: 'tagId',\n        name: intl.formatMessage({\n          id: 'xpack.beatsManagement.beatConfigurations.tagColumnName',\n          defaultMessage: 'Tag',\n        }),\n        render: (id: string, block: any) => (\n          <ConnectedLink path={`/tag/edit/${id}`}>\n            <TagBadge\n              maxIdRenderSize={TABLE_CONFIG.TRUNCATE_TAG_LENGTH_SMALL}\n              tag={{ color: block.tagColor, id, name: block.tagName }}\n            />\n          </ConnectedLink>\n        ),\n        sortable: true,\n      },\n    ];\n    return (\n      <React.Fragment>\n        <Breadcrumb\n          title={i18n.translate('xpack.beatsManagement.breadcrumb.beatDetails', {\n            defaultMessage: 'Beat details for: {beatId}',\n            values: { beatId: beat.id },\n          })}\n          path={`/beat/${beat.id}/details`}\n        />\n        <EuiSpacer />\n        <EuiFlexGroup>\n          <EuiFlexItem>\n            <EuiTitle size=\"xs\">\n              <h4>\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.beat.detailsConfigurationTitle\"\n                  defaultMessage=\"Configurations\"\n                />\n              </h4>\n            </EuiTitle>\n            <EuiText size=\"s\">\n              <p>\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.beat.detailsConfigurationDescription\"\n                  defaultMessage=\"You can have multiple configurations applied to an individual tag. These configurations can repeat\n                    or mix types as necessary. For example, you may utilize three metricbeat configurations alongside one input and\n                    filebeat configuration.\"\n                />\n              </p>\n            </EuiText>\n          </EuiFlexItem>\n          <EuiFlexItem>\n            <EuiInMemoryTable columns={columns} items={configurationBlocks} />\n          </EuiFlexItem>\n        </EuiFlexGroup>\n        {this.state.selectedConfig && (\n          <ConfigView\n            configBlock={this.state.selectedConfig}\n            onClose={() => this.setState({ selectedConfig: null })}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\nexport const BeatDetailPage = injectI18n(BeatDetailPageUi);\n"]}]}