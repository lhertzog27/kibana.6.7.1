{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/space_identifier.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/space_identifier.tsx","mtime":1567631712311},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiFieldText, EuiFormRow, EuiLink } from '@elastic/eui';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport React, { Component, Fragment } from 'react';\nvar SpaceIdentifierUI = /** @class */ (function (_super) {\n    tslib_1.__extends(SpaceIdentifierUI, _super);\n    function SpaceIdentifierUI(props) {\n        var _this = _super.call(this, props) || this;\n        _this.textFieldRef = null;\n        _this.getLabel = function () {\n            if (!_this.props.editable) {\n                return (React.createElement(\"p\", null,\n                    React.createElement(FormattedMessage, { id: \"xpack.spaces.management.spaceIdentifier.urlIdentifierTitle\", defaultMessage: \"URL identifier\" })));\n            }\n            var editLinkText = _this.state.editing ? (React.createElement(FormattedMessage, { id: \"xpack.spaces.management.spaceIdentifier.stopEditingSpaceNameLinkText\", defaultMessage: \"[stop editing]\" })) : (React.createElement(FormattedMessage, { id: \"xpack.spaces.management.spaceIdentifier.editSpaceLinkText\", defaultMessage: \"[edit]\" }));\n            return (React.createElement(\"p\", null,\n                React.createElement(FormattedMessage, { id: \"xpack.spaces.management.spaceIdentifier.urlIdentifierLabel\", defaultMessage: \"URL identifier\" }),\n                React.createElement(EuiLink, { onClick: _this.onEditClick }, editLinkText)));\n        };\n        _this.getHelpText = function () {\n            return (React.createElement(\"p\", null,\n                React.createElement(FormattedMessage, { id: \"xpack.spaces.management.spaceIdentifier.kibanaURLForEngineeringIdentifierDescription\", defaultMessage: \"If the identifier is {engineeringIdentifier}, the Kibana URL is{nextLine}\\n          {engineeringKibanaUrl}.\", values: {\n                        engineeringIdentifier: (React.createElement(\"strong\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.spaces.management.spaceIdentifier.engineeringText\", defaultMessage: \"engineering\" }))),\n                        nextLine: React.createElement(\"br\", null),\n                        engineeringKibanaUrl: (React.createElement(React.Fragment, null, \"https://my-kibana.example\",\n                            React.createElement(\"strong\", null, \"/s/engineering/\"),\n                            \"app/kibana\")),\n                    } })));\n        };\n        _this.onEditClick = function () {\n            _this.setState({\n                editing: !_this.state.editing,\n            }, function () {\n                if (_this.textFieldRef && _this.state.editing) {\n                    _this.textFieldRef.focus();\n                }\n            });\n        };\n        _this.onChange = function (e) {\n            if (!_this.state.editing) {\n                return;\n            }\n            _this.props.onChange(e);\n        };\n        _this.state = {\n            editing: false,\n        };\n        return _this;\n    }\n    SpaceIdentifierUI.prototype.render = function () {\n        var _this = this;\n        var intl = this.props.intl;\n        var _a = this.props.space.id, id = _a === void 0 ? '' : _a;\n        return (React.createElement(Fragment, null,\n            React.createElement(EuiFormRow, tslib_1.__assign({ label: this.getLabel(), helpText: this.getHelpText() }, this.props.validator.validateURLIdentifier(this.props.space), { fullWidth: true }),\n                React.createElement(EuiFieldText, { readOnly: !this.state.editing, placeholder: this.state.editing || !this.props.editable\n                        ? undefined\n                        : intl.formatMessage({\n                            id: 'xpack.spaces.management.spaceIdentifier.urlIdentifierGeneratedFromSpaceNameTooltip',\n                            defaultMessage: 'The URL identifier is generated from the space name.',\n                        }), value: id, onChange: this.onChange, inputRef: function (ref) { return (_this.textFieldRef = ref); }, fullWidth: true }))));\n    };\n    return SpaceIdentifierUI;\n}(Component));\nexport var SpaceIdentifier = injectI18n(SpaceIdentifierUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/space_identifier.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/space_identifier.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiFieldText, EuiFormRow, EuiLink } from '@elastic/eui';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport React, { ChangeEvent, Component, Fragment } from 'react';\nimport { Space } from '../../../../common/model/space';\nimport { SpaceValidator } from '../lib';\n\ninterface Props {\n  space: Partial<Space>;\n  editable: boolean;\n  validator: SpaceValidator;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  intl: InjectedIntl;\n}\n\ninterface State {\n  editing: boolean;\n}\n\nclass SpaceIdentifierUI extends Component<Props, State> {\n  private textFieldRef: HTMLInputElement | null = null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      editing: false,\n    };\n  }\n\n  public render() {\n    const { intl } = this.props;\n    const { id = '' } = this.props.space;\n\n    return (\n      <Fragment>\n        <EuiFormRow\n          label={this.getLabel()}\n          helpText={this.getHelpText()}\n          {...this.props.validator.validateURLIdentifier(this.props.space)}\n          fullWidth\n        >\n          <EuiFieldText\n            readOnly={!this.state.editing}\n            placeholder={\n              this.state.editing || !this.props.editable\n                ? undefined\n                : intl.formatMessage({\n                    id:\n                      'xpack.spaces.management.spaceIdentifier.urlIdentifierGeneratedFromSpaceNameTooltip',\n                    defaultMessage: 'The URL identifier is generated from the space name.',\n                  })\n            }\n            value={id}\n            onChange={this.onChange}\n            inputRef={ref => (this.textFieldRef = ref)}\n            fullWidth\n          />\n        </EuiFormRow>\n      </Fragment>\n    );\n  }\n\n  public getLabel = () => {\n    if (!this.props.editable) {\n      return (\n        <p>\n          <FormattedMessage\n            id=\"xpack.spaces.management.spaceIdentifier.urlIdentifierTitle\"\n            defaultMessage=\"URL identifier\"\n          />\n        </p>\n      );\n    }\n\n    const editLinkText = this.state.editing ? (\n      <FormattedMessage\n        id=\"xpack.spaces.management.spaceIdentifier.stopEditingSpaceNameLinkText\"\n        defaultMessage=\"[stop editing]\"\n      />\n    ) : (\n      <FormattedMessage\n        id=\"xpack.spaces.management.spaceIdentifier.editSpaceLinkText\"\n        defaultMessage=\"[edit]\"\n      />\n    );\n    return (\n      <p>\n        <FormattedMessage\n          id=\"xpack.spaces.management.spaceIdentifier.urlIdentifierLabel\"\n          defaultMessage=\"URL identifier\"\n        />\n        <EuiLink onClick={this.onEditClick}>{editLinkText}</EuiLink>\n      </p>\n    );\n  };\n\n  public getHelpText = () => {\n    return (\n      <p>\n        <FormattedMessage\n          id=\"xpack.spaces.management.spaceIdentifier.kibanaURLForEngineeringIdentifierDescription\"\n          defaultMessage=\"If the identifier is {engineeringIdentifier}, the Kibana URL is{nextLine}\n          {engineeringKibanaUrl}.\"\n          values={{\n            engineeringIdentifier: (\n              <strong>\n                <FormattedMessage\n                  id=\"xpack.spaces.management.spaceIdentifier.engineeringText\"\n                  defaultMessage=\"engineering\"\n                />\n              </strong>\n            ),\n            nextLine: <br />,\n            engineeringKibanaUrl: (\n              <React.Fragment>\n                {`https://my-kibana.example`}\n                <strong>/s/engineering/</strong>\n                app/kibana\n              </React.Fragment>\n            ),\n          }}\n        />\n      </p>\n    );\n  };\n\n  public onEditClick = () => {\n    this.setState(\n      {\n        editing: !this.state.editing,\n      },\n      () => {\n        if (this.textFieldRef && this.state.editing) {\n          this.textFieldRef.focus();\n        }\n      }\n    );\n  };\n\n  public onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!this.state.editing) {\n      return;\n    }\n    this.props.onChange(e);\n  };\n}\n\nexport const SpaceIdentifier = injectI18n(SpaceIdentifierUI);\n"]}]}