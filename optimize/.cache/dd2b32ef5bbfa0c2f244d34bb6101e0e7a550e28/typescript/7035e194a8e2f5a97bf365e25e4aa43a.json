{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/panel_header/panel_header.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/panel_header/panel_header.tsx","mtime":1567631711560},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { injectI18n } from '@kbn/i18n/react';\nimport React from 'react';\nimport { PanelOptionsMenuContainer } from './panel_options_menu_container';\nfunction PanelHeaderUi(_a) {\n    var title = _a.title, panelId = _a.panelId, embeddable = _a.embeddable, isViewOnlyMode = _a.isViewOnlyMode, hidePanelTitles = _a.hidePanelTitles, intl = _a.intl;\n    if (isViewOnlyMode && (!title || hidePanelTitles)) {\n        return (React.createElement(\"div\", { className: \"dshPanel__header--floater\" },\n            React.createElement(\"div\", { className: \"dshPanel__headerButtonGroup\" },\n                React.createElement(PanelOptionsMenuContainer, { panelId: panelId, embeddable: embeddable }))));\n    }\n    return (React.createElement(\"div\", { className: \"dshPanel__header\", \"data-test-subj\": \"dashboardPanelHeading-\" + (title || '').replace(/\\s/g, '') },\n        React.createElement(\"span\", { \"data-test-subj\": \"dashboardPanelTitle\", className: \"dshPanel__title\", title: title, \"aria-label\": intl.formatMessage({\n                id: 'kbn.dashboard.panel.dashboardPanelAriaLabel',\n                defaultMessage: 'Dashboard panel: {title}',\n            }, {\n                title: title,\n            }) }, hidePanelTitles ? '' : title),\n        React.createElement(\"div\", { className: \"dshPanel__headerButtonGroup\" },\n            React.createElement(PanelOptionsMenuContainer, { panelId: panelId, embeddable: embeddable }))));\n}\nexport var PanelHeader = injectI18n(PanelHeaderUi);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/panel_header/panel_header.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/panel/panel_header/panel_header.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,EAAgB,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC3D,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAE,yBAAyB,EAAE,MAAM,gCAAgC,CAAC;AAc3E,SAAS,aAAa,CAAC,EAOF;QANnB,gBAAK,EACL,oBAAO,EACP,0BAAU,EACV,kCAAc,EACd,oCAAe,EACf,cAAI;IAEJ,IAAI,cAAc,IAAI,CAAC,CAAC,KAAK,IAAI,eAAe,CAAC,EAAE;QACjD,OAAO,CACL,6BAAK,SAAS,EAAC,2BAA2B;YACxC,6BAAK,SAAS,EAAC,6BAA6B;gBAC1C,oBAAC,yBAAyB,IAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,GAAI,CACnE,CACF,CACP,CAAC;KACH;IAED,OAAO,CACL,6BACE,SAAS,EAAC,kBAAkB,oBACZ,2BAAyB,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAG;QAE3E,gDACiB,qBAAqB,EACpC,SAAS,EAAC,iBAAiB,EAC3B,KAAK,EAAE,KAAK,gBACA,IAAI,CAAC,aAAa,CAC5B;gBACE,EAAE,EAAE,6CAA6C;gBACjD,cAAc,EAAE,0BAA0B;aAC3C,EACD;gBACE,KAAK,OAAA;aACN,CACF,IAEA,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CACxB;QAEP,6BAAK,SAAS,EAAC,6BAA6B;YAC1C,oBAAC,yBAAyB,IAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,GAAI,CACnE,CACF,CACP,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,IAAM,WAAW,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport React from 'react';\nimport { Embeddable } from 'ui/embeddable';\nimport { PanelId } from '../../selectors';\nimport { PanelOptionsMenuContainer } from './panel_options_menu_container';\n\nexport interface PanelHeaderProps {\n  title?: string;\n  panelId: PanelId;\n  embeddable?: Embeddable;\n  isViewOnlyMode: boolean;\n  hidePanelTitles: boolean;\n}\n\ninterface PanelHeaderUiProps extends PanelHeaderProps {\n  intl: InjectedIntl;\n}\n\nfunction PanelHeaderUi({\n  title,\n  panelId,\n  embeddable,\n  isViewOnlyMode,\n  hidePanelTitles,\n  intl,\n}: PanelHeaderUiProps) {\n  if (isViewOnlyMode && (!title || hidePanelTitles)) {\n    return (\n      <div className=\"dshPanel__header--floater\">\n        <div className=\"dshPanel__headerButtonGroup\">\n          <PanelOptionsMenuContainer panelId={panelId} embeddable={embeddable} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className=\"dshPanel__header\"\n      data-test-subj={`dashboardPanelHeading-${(title || '').replace(/\\s/g, '')}`}\n    >\n      <span\n        data-test-subj=\"dashboardPanelTitle\"\n        className=\"dshPanel__title\"\n        title={title}\n        aria-label={intl.formatMessage(\n          {\n            id: 'kbn.dashboard.panel.dashboardPanelAriaLabel',\n            defaultMessage: 'Dashboard panel: {title}',\n          },\n          {\n            title,\n          }\n        )}\n      >\n        {hidePanelTitles ? '' : title}\n      </span>\n\n      <div className=\"dshPanel__headerButtonGroup\">\n        <PanelOptionsMenuContainer panelId={panelId} embeddable={embeddable} />\n      </div>\n    </div>\n  );\n}\n\nexport const PanelHeader = injectI18n(PanelHeaderUi);\n"]}]}