{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/components/login_page/login_page.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/components/login_page/login_page.tsx","mtime":1567631712299},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport { EuiFlexGroup, EuiFlexItem, EuiIcon, EuiSpacer, EuiText, EuiTitle, } from '@elastic/eui';\nimport classNames from 'classnames';\nimport { BasicLoginForm } from '../basic_login_form';\nimport { DisabledLoginForm } from '../disabled_login_form';\nvar LoginPage = /** @class */ (function (_super) {\n    tslib_1.__extends(LoginPage, _super);\n    function LoginPage() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allowLogin = function () {\n            if (_this.props.requiresSecureConnection && !_this.props.isSecureConnection) {\n                return false;\n            }\n            return _this.props.loginState.allowLogin && _this.props.loginState.layout === 'form';\n        };\n        _this.getLoginForm = function () {\n            if (_this.props.requiresSecureConnection && !_this.props.isSecureConnection) {\n                return (React.createElement(DisabledLoginForm, { title: React.createElement(FormattedMessage, { id: \"xpack.security.loginPage.requiresSecureConnectionTitle\", defaultMessage: \"A secure connection is required for log in\" }), message: React.createElement(FormattedMessage, { id: \"xpack.security.loginPage.requiresSecureConnectionMessage\", defaultMessage: \"Contact your system administrator.\" }) }));\n            }\n            var layout = _this.props.loginState.layout;\n            switch (layout) {\n                case 'form':\n                    return React.createElement(BasicLoginForm, tslib_1.__assign({}, _this.props));\n                case 'error-es-unavailable':\n                    return (React.createElement(DisabledLoginForm, { title: React.createElement(FormattedMessage, { id: \"xpack.security.loginPage.esUnavailableTitle\", defaultMessage: \"Cannot connect to the Elasticsearch cluster\" }), message: React.createElement(FormattedMessage, { id: \"xpack.security.loginPage.esUnavailableMessage\", defaultMessage: \"See the Kibana logs for details and try reloading the page.\" }) }));\n                case 'error-xpack-unavailable':\n                    return (React.createElement(DisabledLoginForm, { title: React.createElement(FormattedMessage, { id: \"xpack.security.loginPage.xpackUnavailableTitle\", defaultMessage: \"Cannot connect to the Elasticsearch cluster currently configured for Kibana.\" }), message: React.createElement(FormattedMessage, { id: \"xpack.security.loginPage.xpackUnavailableMessage\", defaultMessage: \"To use the full set of free features in this distribution of Kibana, please update Elasticsearch to the default distribution.\" }) }));\n                default:\n                    return (React.createElement(DisabledLoginForm, { title: React.createElement(FormattedMessage, { id: \"xpack.security.loginPage.unknownLayoutTitle\", defaultMessage: \"Unsupported login form layout.\" }), message: React.createElement(FormattedMessage, { id: \"xpack.security.loginPage.unknownLayoutMessage\", defaultMessage: \"Refer to the Kibana logs for more details and refresh to try again.\" }) }));\n            }\n        };\n        return _this;\n    }\n    LoginPage.prototype.render = function () {\n        var _a, _b;\n        var allowLogin = this.allowLogin();\n        var contentHeaderClasses = classNames('loginWelcome__content', 'eui-textCenter', (_a = {},\n            _a['loginWelcome__contentDisabledForm'] = !allowLogin,\n            _a));\n        var contentBodyClasses = classNames('loginWelcome__content', 'loginWelcome-body', (_b = {},\n            _b['loginWelcome__contentDisabledForm'] = !allowLogin,\n            _b));\n        return (React.createElement(\"div\", { className: \"loginWelcome login-form\" },\n            React.createElement(\"header\", { className: \"loginWelcome__header\" },\n                React.createElement(\"div\", { className: contentHeaderClasses },\n                    React.createElement(EuiSpacer, { size: \"xxl\" }),\n                    React.createElement(\"span\", { className: \"loginWelcome__logo\" },\n                        React.createElement(EuiIcon, { type: \"logoKibana\", size: \"xxl\" })),\n                    React.createElement(EuiTitle, { size: \"l\", className: \"loginWelcome__title\" },\n                        React.createElement(\"h1\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.security.loginPage.welcomeTitle\", defaultMessage: \"Welcome to Kibana\" }))),\n                    React.createElement(EuiText, { size: \"s\", color: \"subdued\", className: \"loginWelcome__subtitle\" },\n                        React.createElement(\"p\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.security.loginPage.welcomeDescription\", defaultMessage: \"Your window into the Elastic Stack\" }))),\n                    React.createElement(EuiSpacer, { size: \"xl\" }))),\n            React.createElement(\"div\", { className: contentBodyClasses },\n                React.createElement(EuiFlexGroup, { gutterSize: \"l\" },\n                    React.createElement(EuiFlexItem, null, this.getLoginForm())))));\n    };\n    return LoginPage;\n}(Component));\nexport { LoginPage };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/components/login_page/login_page.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/components/login_page/login_page.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React, { Component } from 'react';\n\nimport { FormattedMessage } from '@kbn/i18n/react';\n\nimport {\n  // @ts-ignore\n  EuiCard,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiIcon,\n  EuiSpacer,\n  EuiText,\n  EuiTitle,\n} from '@elastic/eui';\nimport classNames from 'classnames';\nimport { LoginState } from '../../../../../common/login_state';\nimport { BasicLoginForm } from '../basic_login_form';\nimport { DisabledLoginForm } from '../disabled_login_form';\n\ninterface Props {\n  http: any;\n  window: any;\n  next: string;\n  infoMessage?: string;\n  loginState: LoginState;\n  isSecureConnection: boolean;\n  requiresSecureConnection: boolean;\n}\n\nexport class LoginPage extends Component<Props, {}> {\n  public render() {\n    const allowLogin = this.allowLogin();\n\n    const contentHeaderClasses = classNames('loginWelcome__content', 'eui-textCenter', {\n      ['loginWelcome__contentDisabledForm']: !allowLogin,\n    });\n\n    const contentBodyClasses = classNames('loginWelcome__content', 'loginWelcome-body', {\n      ['loginWelcome__contentDisabledForm']: !allowLogin,\n    });\n\n    return (\n      <div className=\"loginWelcome login-form\">\n        <header className=\"loginWelcome__header\">\n          <div className={contentHeaderClasses}>\n            <EuiSpacer size=\"xxl\" />\n            <span className=\"loginWelcome__logo\">\n              <EuiIcon type=\"logoKibana\" size=\"xxl\" />\n            </span>\n            <EuiTitle size=\"l\" className=\"loginWelcome__title\">\n              <h1>\n                <FormattedMessage\n                  id=\"xpack.security.loginPage.welcomeTitle\"\n                  defaultMessage=\"Welcome to Kibana\"\n                />\n              </h1>\n            </EuiTitle>\n            <EuiText size=\"s\" color=\"subdued\" className=\"loginWelcome__subtitle\">\n              <p>\n                <FormattedMessage\n                  id=\"xpack.security.loginPage.welcomeDescription\"\n                  defaultMessage=\"Your window into the Elastic Stack\"\n                />\n              </p>\n            </EuiText>\n            <EuiSpacer size=\"xl\" />\n          </div>\n        </header>\n        <div className={contentBodyClasses}>\n          <EuiFlexGroup gutterSize=\"l\">\n            <EuiFlexItem>{this.getLoginForm()}</EuiFlexItem>\n          </EuiFlexGroup>\n        </div>\n      </div>\n    );\n  }\n\n  private allowLogin = () => {\n    if (this.props.requiresSecureConnection && !this.props.isSecureConnection) {\n      return false;\n    }\n\n    return this.props.loginState.allowLogin && this.props.loginState.layout === 'form';\n  };\n\n  private getLoginForm = () => {\n    if (this.props.requiresSecureConnection && !this.props.isSecureConnection) {\n      return (\n        <DisabledLoginForm\n          title={\n            <FormattedMessage\n              id=\"xpack.security.loginPage.requiresSecureConnectionTitle\"\n              defaultMessage=\"A secure connection is required for log in\"\n            />\n          }\n          message={\n            <FormattedMessage\n              id=\"xpack.security.loginPage.requiresSecureConnectionMessage\"\n              defaultMessage=\"Contact your system administrator.\"\n            />\n          }\n        />\n      );\n    }\n\n    const layout = this.props.loginState.layout;\n    switch (layout) {\n      case 'form':\n        return <BasicLoginForm {...this.props} />;\n      case 'error-es-unavailable':\n        return (\n          <DisabledLoginForm\n            title={\n              <FormattedMessage\n                id=\"xpack.security.loginPage.esUnavailableTitle\"\n                defaultMessage=\"Cannot connect to the Elasticsearch cluster\"\n              />\n            }\n            message={\n              <FormattedMessage\n                id=\"xpack.security.loginPage.esUnavailableMessage\"\n                defaultMessage=\"See the Kibana logs for details and try reloading the page.\"\n              />\n            }\n          />\n        );\n      case 'error-xpack-unavailable':\n        return (\n          <DisabledLoginForm\n            title={\n              <FormattedMessage\n                id=\"xpack.security.loginPage.xpackUnavailableTitle\"\n                defaultMessage=\"Cannot connect to the Elasticsearch cluster currently configured for Kibana.\"\n              />\n            }\n            message={\n              <FormattedMessage\n                id=\"xpack.security.loginPage.xpackUnavailableMessage\"\n                defaultMessage=\"To use the full set of free features in this distribution of Kibana, please update Elasticsearch to the default distribution.\"\n              />\n            }\n          />\n        );\n      default:\n        return (\n          <DisabledLoginForm\n            title={\n              <FormattedMessage\n                id=\"xpack.security.loginPage.unknownLayoutTitle\"\n                defaultMessage=\"Unsupported login form layout.\"\n              />\n            }\n            message={\n              <FormattedMessage\n                id=\"xpack.security.loginPage.unknownLayoutMessage\"\n                defaultMessage=\"Refer to the Kibana logs for more details and refresh to try again.\"\n              />\n            }\n          />\n        );\n    }\n  };\n}\n"]}]}