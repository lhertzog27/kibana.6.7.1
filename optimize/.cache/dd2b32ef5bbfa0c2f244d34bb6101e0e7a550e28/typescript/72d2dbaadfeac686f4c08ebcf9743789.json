{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/configuration_blocks/rest_config_blocks_adapter.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/configuration_blocks/rest_config_blocks_adapter.ts","mtime":1567631711881},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nvar RestConfigBlocksAdapter = /** @class */ (function () {\n    function RestConfigBlocksAdapter(REST) {\n        this.REST = REST;\n    }\n    RestConfigBlocksAdapter.prototype.upsert = function (blocks) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.REST.put(\"/api/beats/configurations\", blocks)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    RestConfigBlocksAdapter.prototype.getForTags = function (tagIds, page) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.REST.get(\"/api/beats/configurations/\" + tagIds.join(',') + \"/\" + page)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RestConfigBlocksAdapter.prototype.delete = function (id) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.REST.delete(\"/api/beats/configurations/\" + id)];\n                    case 1: return [2 /*return*/, (_a.sent())\n                            .success];\n                }\n            });\n        });\n    };\n    return RestConfigBlocksAdapter;\n}());\nexport { RestConfigBlocksAdapter };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/configuration_blocks/rest_config_blocks_adapter.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/configuration_blocks/rest_config_blocks_adapter.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAMH;IACE,iCAA6B,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;IAAG,CAAC;IAExC,wCAAM,GAAnB,UAAoB,MAA4B;;;;;4BAC/B,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAEhC,2BAA2B,EAAE,MAAM,CAAC,EAAA;;wBAFhC,MAAM,GAAG,SAEuB;wBACtC,sBAAO,MAAM,EAAC;;;;KACf;IACY,4CAAU,GAAvB,UACE,MAAgB,EAChB,IAAY;+CACX,OAAO;;;4BAMD,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAKvB,+BAA6B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAI,IAAM,CAAC,EAAA;4BAL3D,sBAAO,SAKoD,EAAC;;;;KAC7D;IACY,wCAAM,GAAnB,UAAoB,EAAU;+CAAG,OAAO;;;4BAC9B,qBAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAuB,+BAA6B,EAAI,CAAC,EAAA;4BAAvF,sBAAO,CAAC,SAA+E,CAAC;6BACrF,OAAO,EAAC;;;;KACZ;IACH,8BAAC;AAAD,CAAC,AA7BD,IA6BC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { ConfigurationBlock } from '../../../../common/domain_types';\nimport { RestAPIAdapter } from '../rest_api/adapter_types';\nimport { FrontendConfigBlocksAdapter } from './adapter_types';\n\nexport class RestConfigBlocksAdapter implements FrontendConfigBlocksAdapter {\n  constructor(private readonly REST: RestAPIAdapter) {}\n\n  public async upsert(blocks: ConfigurationBlock[]) {\n    const result = await this.REST.put<\n      Array<{ success?: boolean; blockID?: string; error?: string }>\n    >(`/api/beats/configurations`, blocks);\n    return result;\n  }\n  public async getForTags(\n    tagIds: string[],\n    page: number\n  ): Promise<{\n    error?: string;\n    blocks: ConfigurationBlock[];\n    page: number;\n    total: number;\n  }> {\n    return await this.REST.get<{\n      error?: string;\n      blocks: ConfigurationBlock[];\n      page: number;\n      total: number;\n    }>(`/api/beats/configurations/${tagIds.join(',')}/${page}`);\n  }\n  public async delete(id: string): Promise<boolean> {\n    return (await this.REST.delete<{ success: boolean }>(`/api/beats/configurations/${id}`))\n      .success;\n  }\n}\n"]}]}