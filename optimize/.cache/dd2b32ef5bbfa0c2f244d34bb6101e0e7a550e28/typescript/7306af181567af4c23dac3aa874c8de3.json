{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/QueryWithIndexPattern.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/QueryWithIndexPattern.tsx","mtime":1567631711865},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { getAPMIndexPattern } from 'x-pack/plugins/apm/public/services/rest/savedObjects';\nexport function getQueryWithIndexPattern(query, indexPattern) {\n    if ((query._a && query._a.index) || !indexPattern) {\n        return query;\n    }\n    var id = indexPattern && indexPattern.id;\n    return tslib_1.__assign({}, query, { _a: tslib_1.__assign({}, query._a, { index: id }) });\n}\nvar QueryWithIndexPattern = /** @class */ (function (_super) {\n    tslib_1.__extends(QueryWithIndexPattern, _super);\n    function QueryWithIndexPattern(props) {\n        var _this = _super.call(this, props) || this;\n        getAPMIndexPattern().then(function (indexPattern) {\n            _this.setState({ indexPattern: indexPattern });\n        });\n        _this.state = {};\n        return _this;\n    }\n    QueryWithIndexPattern.prototype.render = function () {\n        var _b = this.props, children = _b.children, query = _b.query;\n        var indexPattern = this.state.indexPattern;\n        var renderWithQuery = children;\n        return renderWithQuery(getQueryWithIndexPattern(query, indexPattern));\n    };\n    return QueryWithIndexPattern;\n}(React.Component));\nexport { QueryWithIndexPattern };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/QueryWithIndexPattern.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/DiscoverLinks/QueryWithIndexPattern.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,KAAuB,MAAM,OAAO,CAAC;AAC5C,OAAO,EACL,kBAAkB,EAEnB,MAAM,sDAAsD,CAAC;AAG9D,MAAM,UAAU,wBAAwB,CACtC,KAAyB,EACzB,YAA2B;IAE3B,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE;QACjD,OAAO,KAAK,CAAC;KACd;IAED,IAAM,EAAE,GAAG,YAAY,IAAI,YAAY,CAAC,EAAE,CAAC;IAE3C,4BACK,KAAK,IACR,EAAE,uBACG,KAAK,CAAC,EAAE,IACX,KAAK,EAAE,EAAE,OAEX;AACJ,CAAC;AAWD;IAA2C,iDAA6B;IACtE,+BAAY,KAAY;QAAxB,YACE,kBAAM,KAAK,CAAC,SAKb;QAJC,kBAAkB,EAAE,CAAC,IAAI,CAAC,UAAA,YAAY;YACpC,KAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,cAAA,EAAE,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;IAClB,CAAC;IACM,sCAAM,GAAb;QACQ,IAAA,eAAgC,EAA9B,sBAAQ,EAAE,gBAAK,CAAgB;QAC/B,IAAA,sCAAY,CAAgB;QACpC,IAAM,eAAe,GAAG,QAAQ,CAAC;QACjC,OAAO,eAAe,CAAC,wBAAwB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC;IACxE,CAAC;IACH,4BAAC;AAAD,CAAC,AAdD,CAA2C,KAAK,CAAC,SAAS,GAczD","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React, { ReactElement } from 'react';\nimport {\n  getAPMIndexPattern,\n  ISavedObject\n} from 'x-pack/plugins/apm/public/services/rest/savedObjects';\nimport { QueryParamsDecoded } from '../url_helpers';\n\nexport function getQueryWithIndexPattern(\n  query: QueryParamsDecoded,\n  indexPattern?: ISavedObject\n) {\n  if ((query._a && query._a.index) || !indexPattern) {\n    return query;\n  }\n\n  const id = indexPattern && indexPattern.id;\n\n  return {\n    ...query,\n    _a: {\n      ...query._a,\n      index: id\n    }\n  };\n}\n\ninterface Props {\n  query: QueryParamsDecoded;\n  children: (query: QueryParamsDecoded) => ReactElement<any>;\n}\n\ninterface State {\n  indexPattern?: ISavedObject;\n}\n\nexport class QueryWithIndexPattern extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    getAPMIndexPattern().then(indexPattern => {\n      this.setState({ indexPattern });\n    });\n    this.state = {};\n  }\n  public render() {\n    const { children, query } = this.props;\n    const { indexPattern } = this.state;\n    const renderWithQuery = children;\n    return renderWithQuery(getQueryWithIndexPattern(query, indexPattern));\n  }\n}\n"]}]}