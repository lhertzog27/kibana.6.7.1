{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/delete_tasks_button.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/delete_tasks_button.tsx","mtime":1567631712322},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport axios from 'axios';\nimport dedent from 'dedent';\nimport React, { Fragment } from 'react';\nimport { EuiButton, EuiButtonEmpty, EuiCallOut, EuiFlexGroup, EuiFlexItem, EuiFlyout, EuiFlyoutBody, EuiFlyoutFooter, EuiFlyoutHeader, EuiLink, EuiLoadingSpinner, EuiPortal, EuiSpacer, EuiText, } from '@elastic/eui';\nimport chrome from 'ui/chrome';\nimport { CURRENT_MAJOR_VERSION } from 'x-pack/plugins/upgrade_assistant/common/version';\nimport { LoadingState } from '../../../types';\nvar XSRF = chrome.getXsrfToken();\nexport var APIClient = axios.create({\n    headers: {\n        Accept: 'application/json',\n        credentials: 'same-origin',\n        'Content-Type': 'application/json',\n        'kbn-version': XSRF,\n        'kbn-xsrf': XSRF,\n    },\n});\nvar BACKUP_CONSOLE_LINK = chrome.addBasePath(\"/app/kibana#/dev_tools/console?command=\" + encodeURIComponent(dedent(\"\\n        # Reindexes the .tasks into a backup index. If this index is large,\\n        # you may need to use the `wait_for_completion=false` flag. Documentation:\\n        # https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html#_url_parameters_3\\n        POST /_reindex\\n        {\\n          \\\"source\\\": { \\\"index\\\": \\\".tasks\\\" },\\n          \\\"dest\\\": { \\\"index\\\": \\\".tasks-v\" + CURRENT_MAJOR_VERSION + \"-backup\\\" }\\n        }\\n      \")));\n/**\n * This button should only be used to reindex the .tasks index which does not have an upgrade path and must be deleted.\n * This component was not made to be generic in order to avoid any bugs that would allow someone to delete other indices.\n */\nvar DeleteTasksButton = /** @class */ (function (_super) {\n    tslib_1.__extends(DeleteTasksButton, _super);\n    function DeleteTasksButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.showFlyout = function () {\n            _this.setState({ flyoutVisible: true });\n        };\n        _this.closeFlyout = function () {\n            _this.setState({ flyoutVisible: false });\n        };\n        _this.backupAndDelete = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        this.setState({ deleteStatus: LoadingState.Loading });\n                        return [4 /*yield*/, APIClient.post(chrome.addBasePath('/api/upgrade_assistant/delete_tasks_index'))];\n                    case 1:\n                        _a.sent();\n                        this.setState({ deleteStatus: LoadingState.Success });\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_1 = _a.sent();\n                        this.setState({\n                            deleteStatus: LoadingState.Error,\n                            error: e_1,\n                        });\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.flyoutButtonLabel = function () {\n            switch (_this.state.deleteStatus) {\n                case LoadingState.Error:\n                    return 'Try again';\n                case LoadingState.Loading:\n                    return 'Deletingâ€¦';\n                case LoadingState.Success:\n                    return 'Done!';\n                default:\n                    return 'Delete';\n            }\n        };\n        _this.state = {\n            flyoutVisible: false,\n        };\n        return _this;\n    }\n    DeleteTasksButton.prototype.render = function () {\n        var flyoutVisible = this.state.flyoutVisible;\n        var deleteStatus = this.state.deleteStatus;\n        var buttonProps = { size: 's', onClick: this.showFlyout };\n        var buttonContent = 'Delete';\n        switch (deleteStatus) {\n            case LoadingState.Loading:\n                buttonContent = (React.createElement(\"span\", null,\n                    React.createElement(EuiLoadingSpinner, { className: \"upgReindexButton__spinner\", size: \"m\" }),\n                    \" Deleting\\u2026\"));\n                break;\n            case LoadingState.Success:\n                buttonProps.color = 'secondary';\n                buttonProps.iconSide = 'left';\n                buttonProps.iconType = 'check';\n                buttonContent = 'Done';\n                break;\n            case LoadingState.Error:\n                buttonProps.color = 'danger';\n                buttonProps.iconSide = 'left';\n                buttonProps.iconType = 'cross';\n                buttonContent = 'Failed';\n                break;\n        }\n        return (React.createElement(Fragment, null,\n            React.createElement(EuiButton, tslib_1.__assign({}, buttonProps), buttonContent),\n            flyoutVisible && this.renderFlyout()));\n    };\n    DeleteTasksButton.prototype.renderFlyout = function () {\n        var deleteStatus = this.state.deleteStatus;\n        return (React.createElement(EuiPortal, null,\n            React.createElement(EuiFlyout, { onClose: this.closeFlyout, size: \"m\" },\n                React.createElement(EuiFlyoutHeader, { hasBorder: true },\n                    React.createElement(\"h2\", null, \"Delete .tasks\")),\n                React.createElement(EuiFlyoutBody, null,\n                    React.createElement(EuiCallOut, { title: \"The .tasks index must be deleted\", color: \"danger\", iconType: \"alert\" }),\n                    React.createElement(EuiSpacer, null),\n                    React.createElement(EuiText, { grow: false },\n                        React.createElement(\"p\", null,\n                            \"This index contains the results of long-running tasks in Elasticsearch. To upgrade, you will need to delete this index. If you still need to access this old information you should\",\n                            ' ',\n                            React.createElement(EuiLink, { href: BACKUP_CONSOLE_LINK, target: \"_blank\" }, \"reindex into a backup index\"),\n                            ' ',\n                            \"before proceeding.\"))),\n                React.createElement(EuiFlyoutFooter, null,\n                    React.createElement(EuiFlexGroup, { justifyContent: \"spaceBetween\" },\n                        React.createElement(EuiFlexItem, { grow: false },\n                            React.createElement(EuiButtonEmpty, { iconType: \"cross\", onClick: this.closeFlyout, flush: \"left\" }, \"Cancel\")),\n                        React.createElement(EuiFlexItem, { grow: false },\n                            React.createElement(EuiButton, { fill: true, color: \"danger\", onClick: this.backupAndDelete, disabled: deleteStatus === LoadingState.Loading || deleteStatus === LoadingState.Success, isLoading: deleteStatus === LoadingState.Loading }, this.flyoutButtonLabel())))))));\n    };\n    return DeleteTasksButton;\n}(React.Component));\nexport { DeleteTasksButton };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/delete_tasks_button.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/delete_tasks_button.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport axios from 'axios';\nimport dedent from 'dedent';\nimport React, { Fragment, ReactNode } from 'react';\n\nimport {\n  EuiButton,\n  EuiButtonEmpty,\n  EuiCallOut,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiFlyout,\n  EuiFlyoutBody,\n  EuiFlyoutFooter,\n  EuiFlyoutHeader,\n  EuiLink,\n  EuiLoadingSpinner,\n  EuiPortal,\n  EuiSpacer,\n  EuiText,\n} from '@elastic/eui';\nimport chrome from 'ui/chrome';\nimport { CURRENT_MAJOR_VERSION } from 'x-pack/plugins/upgrade_assistant/common/version';\nimport { LoadingState } from '../../../types';\n\nconst XSRF = chrome.getXsrfToken();\n\nexport const APIClient = axios.create({\n  headers: {\n    Accept: 'application/json',\n    credentials: 'same-origin',\n    'Content-Type': 'application/json',\n    'kbn-version': XSRF,\n    'kbn-xsrf': XSRF,\n  },\n});\n\nconst BACKUP_CONSOLE_LINK = chrome.addBasePath(\n  `/app/kibana#/dev_tools/console?command=${encodeURIComponent(\n    dedent(`\n        # Reindexes the .tasks into a backup index. If this index is large,\n        # you may need to use the \\`wait_for_completion=false\\` flag. Documentation:\n        # https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html#_url_parameters_3\n        POST /_reindex\n        {\n          \"source\": { \"index\": \".tasks\" },\n          \"dest\": { \"index\": \".tasks-v${CURRENT_MAJOR_VERSION}-backup\" }\n        }\n      `)\n  )}`\n);\n\ninterface DeleteButtonState {\n  flyoutVisible: boolean;\n  deleteStatus?: LoadingState;\n  error?: Error;\n}\n\n/**\n * This button should only be used to reindex the .tasks index which does not have an upgrade path and must be deleted.\n * This component was not made to be generic in order to avoid any bugs that would allow someone to delete other indices.\n */\nexport class DeleteTasksButton extends React.Component<{}, DeleteButtonState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      flyoutVisible: false,\n    };\n  }\n\n  public render() {\n    const { flyoutVisible } = this.state;\n    const { deleteStatus } = this.state;\n\n    const buttonProps: any = { size: 's', onClick: this.showFlyout };\n    let buttonContent: ReactNode = 'Delete';\n\n    switch (deleteStatus) {\n      case LoadingState.Loading:\n        buttonContent = (\n          <span>\n            <EuiLoadingSpinner className=\"upgReindexButton__spinner\" size=\"m\" /> Deletingâ€¦\n          </span>\n        );\n        break;\n      case LoadingState.Success:\n        buttonProps.color = 'secondary';\n        buttonProps.iconSide = 'left';\n        buttonProps.iconType = 'check';\n        buttonContent = 'Done';\n        break;\n      case LoadingState.Error:\n        buttonProps.color = 'danger';\n        buttonProps.iconSide = 'left';\n        buttonProps.iconType = 'cross';\n        buttonContent = 'Failed';\n        break;\n    }\n\n    return (\n      <Fragment>\n        <EuiButton {...buttonProps}>{buttonContent}</EuiButton>\n\n        {flyoutVisible && this.renderFlyout()}\n      </Fragment>\n    );\n  }\n\n  private renderFlyout() {\n    const { deleteStatus } = this.state;\n\n    return (\n      <EuiPortal>\n        <EuiFlyout onClose={this.closeFlyout} size=\"m\">\n          <EuiFlyoutHeader hasBorder>\n            <h2>Delete .tasks</h2>\n          </EuiFlyoutHeader>\n          <EuiFlyoutBody>\n            <EuiCallOut title=\"The .tasks index must be deleted\" color=\"danger\" iconType=\"alert\" />\n            <EuiSpacer />\n            <EuiText grow={false}>\n              <p>\n                This index contains the results of long-running tasks in Elasticsearch. To upgrade,\n                you will need to delete this index. If you still need to access this old information\n                you should{' '}\n                <EuiLink href={BACKUP_CONSOLE_LINK} target=\"_blank\">\n                  reindex into a backup index\n                </EuiLink>{' '}\n                before proceeding.\n              </p>\n            </EuiText>\n          </EuiFlyoutBody>\n          <EuiFlyoutFooter>\n            <EuiFlexGroup justifyContent=\"spaceBetween\">\n              <EuiFlexItem grow={false}>\n                <EuiButtonEmpty iconType=\"cross\" onClick={this.closeFlyout} flush=\"left\">\n                  Cancel\n                </EuiButtonEmpty>\n              </EuiFlexItem>\n              <EuiFlexItem grow={false}>\n                <EuiButton\n                  fill\n                  color=\"danger\"\n                  onClick={this.backupAndDelete}\n                  disabled={\n                    deleteStatus === LoadingState.Loading || deleteStatus === LoadingState.Success\n                  }\n                  isLoading={deleteStatus === LoadingState.Loading}\n                >\n                  {this.flyoutButtonLabel()}\n                </EuiButton>\n              </EuiFlexItem>\n            </EuiFlexGroup>\n          </EuiFlyoutFooter>\n        </EuiFlyout>\n      </EuiPortal>\n    );\n  }\n\n  private showFlyout = () => {\n    this.setState({ flyoutVisible: true });\n  };\n\n  private closeFlyout = () => {\n    this.setState({ flyoutVisible: false });\n  };\n\n  private backupAndDelete = async () => {\n    try {\n      this.setState({ deleteStatus: LoadingState.Loading });\n\n      await APIClient.post(chrome.addBasePath('/api/upgrade_assistant/delete_tasks_index'));\n\n      this.setState({ deleteStatus: LoadingState.Success });\n    } catch (e) {\n      this.setState({\n        deleteStatus: LoadingState.Error,\n        error: e,\n      });\n    }\n  };\n\n  private flyoutButtonLabel = () => {\n    switch (this.state.deleteStatus) {\n      case LoadingState.Error:\n        return 'Try again';\n      case LoadingState.Loading:\n        return 'Deletingâ€¦';\n      case LoadingState.Success:\n        return 'Done!';\n      default:\n        return 'Delete';\n    }\n  };\n}\n"]}]}