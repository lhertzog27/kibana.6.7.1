{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/style/variables.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/style/variables.ts","mtime":1567631711872},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n// Units\nexport var unit = 16;\nexport var units = {\n    unit: unit,\n    eighth: unit / 8,\n    quarter: unit / 4,\n    half: unit / 2,\n    minus: unit * 0.75,\n    plus: unit * 1.5,\n    double: unit * 2,\n    triple: unit * 3,\n    quadruple: unit * 4\n};\nexport function px(value) {\n    return value + \"px\";\n}\nexport function pct(value) {\n    return value + \"%\";\n}\n// Styling\nexport var borderRadius = '5px';\n// Colors (from dark to light)\nvar colorBlue1 = '#006E8A';\nvar colorBlue2 = '#0079a5';\nexport var colors = {\n    black: '#000000',\n    black2: '#2d2d2d',\n    gray1: '#343741',\n    gray2: '#69707D',\n    gray3: '#98A2B3',\n    gray4: '#D3DAE6',\n    gray5: '#F5F7FA',\n    white: '#ffffff',\n    teal: '#017D73',\n    red: '#a30000',\n    yellow: '#FCF2E6',\n    blue1: colorBlue1,\n    blue2: colorBlue2,\n    // custom APM palette\n    apmBrown: '#461a0a',\n    apmPurple: '#490092',\n    apmBlue: '#3185fc',\n    apmRed: '#920000',\n    apmRed2: '#db1374',\n    apmGreen: '#00b3a4',\n    apmPink: '#feb6db',\n    apmOrange: '#f98510',\n    apmTan: '#bfa180',\n    apmYellow: '#ecae23',\n    apmLightBlue: '#80bcd2',\n    // Semantic colors\n    link: colorBlue2,\n    linkHover: colorBlue1\n};\n// Fonts\nexport var fontFamily = '\"Open Sans\", Helvetica, Arial, sans-serif';\nexport var fontFamilyCode = '\"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace';\n// Font sizes\nexport var fontSize = '14px';\nexport var fontSizes = {\n    tiny: '10px',\n    small: '12px',\n    large: '16px',\n    xlarge: '20px',\n    xxlarge: '30px'\n};\nexport function truncate(width) {\n    return \"\\n      max-width: \" + width + \";\\n      white-space: nowrap;\\n      overflow: hidden;\\n      text-overflow: ellipsis;\\n    \";\n}\n// height of specific elements\nexport var topNavHeight = '29px';\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/style/variables.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/style/variables.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,QAAQ;AACR,MAAM,CAAC,IAAM,IAAI,GAAG,EAAE,CAAC;AAEvB,MAAM,CAAC,IAAM,KAAK,GAAG;IACnB,IAAI,MAAA;IACJ,MAAM,EAAE,IAAI,GAAG,CAAC;IAChB,OAAO,EAAE,IAAI,GAAG,CAAC;IACjB,IAAI,EAAE,IAAI,GAAG,CAAC;IACd,KAAK,EAAE,IAAI,GAAG,IAAI;IAClB,IAAI,EAAE,IAAI,GAAG,GAAG;IAChB,MAAM,EAAE,IAAI,GAAG,CAAC;IAChB,MAAM,EAAE,IAAI,GAAG,CAAC;IAChB,SAAS,EAAE,IAAI,GAAG,CAAC;CACpB,CAAC;AAEF,MAAM,UAAU,EAAE,CAAC,KAAa;IAC9B,OAAU,KAAK,OAAI,CAAC;AACtB,CAAC;AAED,MAAM,UAAU,GAAG,CAAC,KAAa;IAC/B,OAAU,KAAK,MAAG,CAAC;AACrB,CAAC;AAED,UAAU;AACV,MAAM,CAAC,IAAM,YAAY,GAAG,KAAK,CAAC;AAElC,8BAA8B;AAC9B,IAAM,UAAU,GAAG,SAAS,CAAC;AAC7B,IAAM,UAAU,GAAG,SAAS,CAAC;AAC7B,MAAM,CAAC,IAAM,MAAM,GAAG;IACpB,KAAK,EAAE,SAAS;IAChB,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,IAAI,EAAE,SAAS;IACf,GAAG,EAAE,SAAS;IACd,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,UAAU;IACjB,KAAK,EAAE,UAAU;IAEjB,qBAAqB;IACrB,QAAQ,EAAE,SAAS;IACnB,SAAS,EAAE,SAAS;IACpB,OAAO,EAAE,SAAS;IAClB,MAAM,EAAE,SAAS;IACjB,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,SAAS;IACnB,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,SAAS;IACpB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,SAAS;IACpB,YAAY,EAAE,SAAS;IAEvB,kBAAkB;IAClB,IAAI,EAAE,UAAU;IAChB,SAAS,EAAE,UAAU;CACtB,CAAC;AAEF,QAAQ;AACR,MAAM,CAAC,IAAM,UAAU,GAAG,2CAA2C,CAAC;AACtE,MAAM,CAAC,IAAM,cAAc,GACzB,0EAA0E,CAAC;AAE7E,aAAa;AACb,MAAM,CAAC,IAAM,QAAQ,GAAG,MAAM,CAAC;AAE/B,MAAM,CAAC,IAAM,SAAS,GAAG;IACvB,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,MAAM;IACb,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,MAAM;IACd,OAAO,EAAE,MAAM;CAChB,CAAC;AAEF,MAAM,UAAU,QAAQ,CAAC,KAAa;IACpC,OAAO,wBACU,KAAK,iGAInB,CAAC;AACN,CAAC;AAED,8BAA8B;AAC9B,MAAM,CAAC,IAAM,YAAY,GAAG,MAAM,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n// Units\nexport const unit = 16;\n\nexport const units = {\n  unit,\n  eighth: unit / 8,\n  quarter: unit / 4,\n  half: unit / 2,\n  minus: unit * 0.75,\n  plus: unit * 1.5,\n  double: unit * 2,\n  triple: unit * 3,\n  quadruple: unit * 4\n};\n\nexport function px(value: number): string {\n  return `${value}px`;\n}\n\nexport function pct(value: number): string {\n  return `${value}%`;\n}\n\n// Styling\nexport const borderRadius = '5px';\n\n// Colors (from dark to light)\nconst colorBlue1 = '#006E8A';\nconst colorBlue2 = '#0079a5';\nexport const colors = {\n  black: '#000000',\n  black2: '#2d2d2d',\n  gray1: '#343741',\n  gray2: '#69707D',\n  gray3: '#98A2B3',\n  gray4: '#D3DAE6',\n  gray5: '#F5F7FA',\n  white: '#ffffff',\n  teal: '#017D73',\n  red: '#a30000',\n  yellow: '#FCF2E6',\n  blue1: colorBlue1,\n  blue2: colorBlue2,\n\n  // custom APM palette\n  apmBrown: '#461a0a',\n  apmPurple: '#490092',\n  apmBlue: '#3185fc',\n  apmRed: '#920000',\n  apmRed2: '#db1374',\n  apmGreen: '#00b3a4',\n  apmPink: '#feb6db',\n  apmOrange: '#f98510',\n  apmTan: '#bfa180',\n  apmYellow: '#ecae23',\n  apmLightBlue: '#80bcd2',\n\n  // Semantic colors\n  link: colorBlue2,\n  linkHover: colorBlue1\n};\n\n// Fonts\nexport const fontFamily = '\"Open Sans\", Helvetica, Arial, sans-serif';\nexport const fontFamilyCode =\n  '\"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace';\n\n// Font sizes\nexport const fontSize = '14px';\n\nexport const fontSizes = {\n  tiny: '10px',\n  small: '12px',\n  large: '16px',\n  xlarge: '20px',\n  xxlarge: '30px'\n};\n\nexport function truncate(width: string) {\n  return `\n      max-width: ${width};\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    `;\n}\n\n// height of specific elements\nexport const topNavHeight = '29px';\n"]}]}