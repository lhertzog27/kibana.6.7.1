{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/reducer.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/reducer.ts","mtime":1567631711989},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { combineReducers } from 'redux';\nimport { initialLocalState, localReducer } from './local';\nimport { initialRemoteState, remoteReducer } from './remote';\nexport var initialState = {\n    local: initialLocalState,\n    remote: initialRemoteState,\n};\nexport var reducer = combineReducers({\n    local: localReducer,\n    remote: remoteReducer,\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/reducer.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/reducer.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AAExC,OAAO,EAAE,iBAAiB,EAAE,YAAY,EAAc,MAAM,SAAS,CAAC;AACtE,OAAO,EAAE,kBAAkB,EAAE,aAAa,EAAe,MAAM,UAAU,CAAC;AAO1E,MAAM,CAAC,IAAM,YAAY,GAAU;IACjC,KAAK,EAAE,iBAAiB;IACxB,MAAM,EAAE,kBAAkB;CAC3B,CAAC;AAEF,MAAM,CAAC,IAAM,OAAO,GAAG,eAAe,CAAQ;IAC5C,KAAK,EAAE,YAAY;IACnB,MAAM,EAAE,aAAa;CACtB,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { combineReducers } from 'redux';\n\nimport { initialLocalState, localReducer, LocalState } from './local';\nimport { initialRemoteState, remoteReducer, RemoteState } from './remote';\n\nexport interface State {\n  local: LocalState;\n  remote: RemoteState;\n}\n\nexport const initialState: State = {\n  local: initialLocalState,\n  remote: initialRemoteState,\n};\n\nexport const reducer = combineReducers<State>({\n  local: localReducer,\n  remote: remoteReducer,\n});\n"]}]}