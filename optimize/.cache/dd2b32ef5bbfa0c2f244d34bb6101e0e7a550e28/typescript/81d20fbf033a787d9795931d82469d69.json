{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/components/basic_login_form/basic_login_form.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/components/basic_login_form/basic_login_form.tsx","mtime":1567631712298},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButton, EuiCallOut, EuiFieldText, EuiFormRow, EuiPanel, EuiSpacer } from '@elastic/eui';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport React, { Component, Fragment } from 'react';\nvar BasicLoginFormUI = /** @class */ (function (_super) {\n    tslib_1.__extends(BasicLoginFormUI, _super);\n    function BasicLoginFormUI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            hasError: false,\n            isLoading: false,\n            username: '',\n            password: '',\n            message: '',\n        };\n        _this.renderMessage = function () {\n            if (_this.state.message) {\n                return (React.createElement(Fragment, null,\n                    React.createElement(EuiCallOut, { size: \"s\", color: \"danger\", \"data-test-subj\": \"loginErrorMessage\", title: _this.state.message, role: \"alert\" }),\n                    React.createElement(EuiSpacer, { size: \"l\" })));\n            }\n            if (_this.props.infoMessage) {\n                return (React.createElement(Fragment, null,\n                    React.createElement(EuiCallOut, { size: \"s\", color: \"primary\", \"data-test-subj\": \"loginInfoMessage\", title: _this.props.infoMessage, role: \"status\" }),\n                    React.createElement(EuiSpacer, { size: \"l\" })));\n            }\n            return null;\n        };\n        _this.isFormValid = function () {\n            var _a = _this.state, username = _a.username, password = _a.password;\n            return username && password;\n        };\n        _this.onUsernameChange = function (e) {\n            _this.setState({\n                username: e.target.value,\n            });\n        };\n        _this.onPasswordChange = function (e) {\n            _this.setState({\n                password: e.target.value,\n            });\n        };\n        _this.submit = function (e) {\n            e.preventDefault();\n            if (!_this.isFormValid()) {\n                return;\n            }\n            _this.setState({\n                isLoading: true,\n                message: '',\n            });\n            var _a = _this.props, http = _a.http, window = _a.window, next = _a.next, intl = _a.intl;\n            var _b = _this.state, username = _b.username, password = _b.password;\n            http.post('./api/security/v1/login', { username: username, password: password }).then(function () { return (window.location.href = next); }, function (error) {\n                var _a = (error.data || {}).statusCode, statusCode = _a === void 0 ? 500 : _a;\n                var message = intl.formatMessage({\n                    id: 'xpack.security.login.basicLoginForm.unknownErrorMessage',\n                    defaultMessage: 'Oops! Error. Try again.',\n                });\n                if (statusCode === 401) {\n                    message = intl.formatMessage({\n                        id: 'xpack.security.login.basicLoginForm.invalidUsernameOrPasswordErrorMessage',\n                        defaultMessage: 'Invalid username or password. Please try again.',\n                    });\n                }\n                _this.setState({\n                    hasError: true,\n                    message: message,\n                    isLoading: false,\n                });\n            });\n        };\n        return _this;\n    }\n    BasicLoginFormUI.prototype.render = function () {\n        return (React.createElement(Fragment, null,\n            this.renderMessage(),\n            React.createElement(EuiPanel, null,\n                React.createElement(\"form\", { onSubmit: this.submit },\n                    React.createElement(EuiFormRow, { label: React.createElement(FormattedMessage, { id: \"xpack.security.login.basicLoginForm.usernameFormRowLabel\", defaultMessage: \"Username\" }) },\n                        React.createElement(EuiFieldText, { id: \"username\", name: \"username\", \"data-test-subj\": \"loginUsername\", value: this.state.username, onChange: this.onUsernameChange, disabled: this.state.isLoading, isInvalid: false, \"aria-required\": true, inputRef: this.setUsernameInputRef })),\n                    React.createElement(EuiFormRow, { label: React.createElement(FormattedMessage, { id: \"xpack.security.login.basicLoginForm.passwordFormRowLabel\", defaultMessage: \"Password\" }) },\n                        React.createElement(EuiFieldText, { id: \"password\", name: \"password\", \"data-test-subj\": \"loginPassword\", type: \"password\", value: this.state.password, onChange: this.onPasswordChange, disabled: this.state.isLoading, isInvalid: false, \"aria-required\": true })),\n                    React.createElement(EuiButton, { fill: true, type: \"submit\", color: \"primary\", onClick: this.submit, isLoading: this.state.isLoading, \"data-test-subj\": \"loginSubmit\" },\n                        React.createElement(FormattedMessage, { id: \"xpack.security.login.basicLoginForm.logInButtonLabel\", defaultMessage: \"Log in\" }))))));\n    };\n    BasicLoginFormUI.prototype.setUsernameInputRef = function (ref) {\n        if (ref) {\n            ref.focus();\n        }\n    };\n    return BasicLoginFormUI;\n}(Component));\nexport var BasicLoginForm = injectI18n(BasicLoginFormUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/components/basic_login_form/basic_login_form.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/login/components/basic_login_form/basic_login_form.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiButton, EuiCallOut, EuiFieldText, EuiFormRow, EuiPanel, EuiSpacer } from '@elastic/eui';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport React, { ChangeEvent, Component, FormEvent, Fragment, MouseEvent } from 'react';\nimport { LoginState } from '../../../../../common/login_state';\n\ninterface Props {\n  http: any;\n  window: any;\n  infoMessage?: string;\n  loginState: LoginState;\n  next: string;\n  intl: InjectedIntl;\n}\n\ninterface State {\n  hasError: boolean;\n  isLoading: boolean;\n  username: string;\n  password: string;\n  message: string;\n}\n\nclass BasicLoginFormUI extends Component<Props, State> {\n  public state = {\n    hasError: false,\n    isLoading: false,\n    username: '',\n    password: '',\n    message: '',\n  };\n\n  public render() {\n    return (\n      <Fragment>\n        {this.renderMessage()}\n        <EuiPanel>\n          <form onSubmit={this.submit}>\n            <EuiFormRow\n              label={\n                <FormattedMessage\n                  id=\"xpack.security.login.basicLoginForm.usernameFormRowLabel\"\n                  defaultMessage=\"Username\"\n                />\n              }\n            >\n              <EuiFieldText\n                id=\"username\"\n                name=\"username\"\n                data-test-subj=\"loginUsername\"\n                value={this.state.username}\n                onChange={this.onUsernameChange}\n                disabled={this.state.isLoading}\n                isInvalid={false}\n                aria-required={true}\n                inputRef={this.setUsernameInputRef}\n              />\n            </EuiFormRow>\n\n            <EuiFormRow\n              label={\n                <FormattedMessage\n                  id=\"xpack.security.login.basicLoginForm.passwordFormRowLabel\"\n                  defaultMessage=\"Password\"\n                />\n              }\n            >\n              <EuiFieldText\n                id=\"password\"\n                name=\"password\"\n                data-test-subj=\"loginPassword\"\n                type=\"password\"\n                value={this.state.password}\n                onChange={this.onPasswordChange}\n                disabled={this.state.isLoading}\n                isInvalid={false}\n                aria-required={true}\n              />\n            </EuiFormRow>\n\n            <EuiButton\n              fill\n              type=\"submit\"\n              color=\"primary\"\n              onClick={this.submit}\n              isLoading={this.state.isLoading}\n              data-test-subj=\"loginSubmit\"\n            >\n              <FormattedMessage\n                id=\"xpack.security.login.basicLoginForm.logInButtonLabel\"\n                defaultMessage=\"Log in\"\n              />\n            </EuiButton>\n          </form>\n        </EuiPanel>\n      </Fragment>\n    );\n  }\n\n  private renderMessage = () => {\n    if (this.state.message) {\n      return (\n        <Fragment>\n          <EuiCallOut\n            size=\"s\"\n            color=\"danger\"\n            data-test-subj=\"loginErrorMessage\"\n            title={this.state.message}\n            role=\"alert\"\n          />\n          <EuiSpacer size=\"l\" />\n        </Fragment>\n      );\n    }\n\n    if (this.props.infoMessage) {\n      return (\n        <Fragment>\n          <EuiCallOut\n            size=\"s\"\n            color=\"primary\"\n            data-test-subj=\"loginInfoMessage\"\n            title={this.props.infoMessage}\n            role=\"status\"\n          />\n          <EuiSpacer size=\"l\" />\n        </Fragment>\n      );\n    }\n    return null;\n  };\n\n  private setUsernameInputRef(ref: HTMLInputElement) {\n    if (ref) {\n      ref.focus();\n    }\n  }\n\n  private isFormValid = () => {\n    const { username, password } = this.state;\n\n    return username && password;\n  };\n\n  private onUsernameChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      username: e.target.value,\n    });\n  };\n\n  private onPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  private submit = (e: MouseEvent<HTMLButtonElement> | FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!this.isFormValid()) {\n      return;\n    }\n\n    this.setState({\n      isLoading: true,\n      message: '',\n    });\n\n    const { http, window, next, intl } = this.props;\n\n    const { username, password } = this.state;\n\n    http.post('./api/security/v1/login', { username, password }).then(\n      () => (window.location.href = next),\n      (error: any) => {\n        const { statusCode = 500 } = error.data || {};\n\n        let message = intl.formatMessage({\n          id: 'xpack.security.login.basicLoginForm.unknownErrorMessage',\n          defaultMessage: 'Oops! Error. Try again.',\n        });\n        if (statusCode === 401) {\n          message = intl.formatMessage({\n            id: 'xpack.security.login.basicLoginForm.invalidUsernameOrPasswordErrorMessage',\n            defaultMessage: 'Invalid username or password. Please try again.',\n          });\n        }\n\n        this.setState({\n          hasError: true,\n          message,\n          isLoading: false,\n        });\n      }\n    );\n  };\n}\n\nexport const BasicLoginForm = injectI18n(BasicLoginFormUI);\n"]}]}