{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/overview/deprecation_logging_toggle.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/overview/deprecation_logging_toggle.tsx","mtime":1567631712323},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport axios from 'axios';\nimport React from 'react';\nimport { EuiLoadingSpinner, EuiSwitch } from '@elastic/eui';\nimport { injectI18n } from '@kbn/i18n/react';\nimport chrome from 'ui/chrome';\nimport { LoadingState } from '../../types';\nvar DeprecationLoggingToggleUI = /** @class */ (function (_super) {\n    tslib_1.__extends(DeprecationLoggingToggleUI, _super);\n    function DeprecationLoggingToggleUI(props) {\n        var _this = _super.call(this, props) || this;\n        _this.loadData = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var resp, e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        this.setState({ loadingState: LoadingState.Loading });\n                        return [4 /*yield*/, axios.get(chrome.addBasePath('/api/upgrade_assistant/deprecation_logging'))];\n                    case 1:\n                        resp = _a.sent();\n                        this.setState({\n                            loadingState: LoadingState.Success,\n                            loggingEnabled: resp.data.isEnabled,\n                        });\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_1 = _a.sent();\n                        this.setState({ loadingState: LoadingState.Error });\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.toggleLogging = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var newEnabled, resp, e_2;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        newEnabled = !this.state.loggingEnabled;\n                        this.setState({ loadingState: LoadingState.Loading, loggingEnabled: newEnabled });\n                        return [4 /*yield*/, axios.put(chrome.addBasePath('/api/upgrade_assistant/deprecation_logging'), {\n                                isEnabled: newEnabled,\n                            }, {\n                                headers: {\n                                    'kbn-xsrf': chrome.getXsrfToken(),\n                                },\n                            })];\n                    case 1:\n                        resp = _a.sent();\n                        this.setState({\n                            loadingState: LoadingState.Success,\n                            loggingEnabled: resp.data.isEnabled,\n                        });\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_2 = _a.sent();\n                        this.setState({ loadingState: LoadingState.Error });\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.state = {\n            loadingState: LoadingState.Loading,\n        };\n        return _this;\n    }\n    DeprecationLoggingToggleUI.prototype.componentWillMount = function () {\n        this.loadData();\n    };\n    DeprecationLoggingToggleUI.prototype.render = function () {\n        var _a = this.state, loggingEnabled = _a.loggingEnabled, loadingState = _a.loadingState;\n        // Show a spinner until we've done the initial load.\n        if (loadingState === LoadingState.Loading && loggingEnabled === undefined) {\n            return React.createElement(EuiLoadingSpinner, { size: \"l\" });\n        }\n        return (React.createElement(EuiSwitch, { id: \"xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.enableDeprecationLoggingToggleSwitch\", \"data-test-subj\": \"upgradeAssistantDeprecationToggle\", label: this.renderLoggingState(), checked: loggingEnabled, onChange: this.toggleLogging, disabled: loadingState === LoadingState.Loading || loadingState === LoadingState.Error }));\n    };\n    DeprecationLoggingToggleUI.prototype.renderLoggingState = function () {\n        var intl = this.props.intl;\n        var _a = this.state, loggingEnabled = _a.loggingEnabled, loadingState = _a.loadingState;\n        if (loadingState === LoadingState.Error) {\n            return intl.formatMessage({\n                id: 'xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.enableDeprecationLoggingToggleSwitch.errorLabel',\n                defaultMessage: 'Could not load logging state',\n            });\n        }\n        else if (loggingEnabled) {\n            return intl.formatMessage({\n                id: 'xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.enableDeprecationLoggingToggleSwitch.enabledLabel',\n                defaultMessage: 'On',\n            });\n        }\n        else {\n            return intl.formatMessage({\n                id: 'xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.enableDeprecationLoggingToggleSwitch.disabledLabel',\n                defaultMessage: 'Off',\n            });\n        }\n    };\n    return DeprecationLoggingToggleUI;\n}(React.Component));\nexport { DeprecationLoggingToggleUI };\nexport var DeprecationLoggingToggle = injectI18n(DeprecationLoggingToggleUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/overview/deprecation_logging_toggle.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/overview/deprecation_logging_toggle.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\nimport { EuiLoadingSpinner, EuiSwitch } from '@elastic/eui';\nimport { injectI18n } from '@kbn/i18n/react';\n\nimport chrome from 'ui/chrome';\nimport { LoadingState } from '../../types';\n\ninterface DeprecationLoggingTabState {\n  loadingState: LoadingState;\n  loggingEnabled?: boolean;\n}\n\nexport class DeprecationLoggingToggleUI extends React.Component<\n  ReactIntl.InjectedIntlProps,\n  DeprecationLoggingTabState\n> {\n  constructor(props: ReactIntl.InjectedIntlProps) {\n    super(props);\n\n    this.state = {\n      loadingState: LoadingState.Loading,\n    };\n  }\n\n  public componentWillMount() {\n    this.loadData();\n  }\n\n  public render() {\n    const { loggingEnabled, loadingState } = this.state;\n\n    // Show a spinner until we've done the initial load.\n    if (loadingState === LoadingState.Loading && loggingEnabled === undefined) {\n      return <EuiLoadingSpinner size=\"l\" />;\n    }\n\n    return (\n      <EuiSwitch\n        id=\"xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.enableDeprecationLoggingToggleSwitch\"\n        data-test-subj=\"upgradeAssistantDeprecationToggle\"\n        label={this.renderLoggingState()}\n        checked={loggingEnabled}\n        onChange={this.toggleLogging}\n        disabled={loadingState === LoadingState.Loading || loadingState === LoadingState.Error}\n      />\n    );\n  }\n\n  private renderLoggingState() {\n    const { intl } = this.props;\n    const { loggingEnabled, loadingState } = this.state;\n\n    if (loadingState === LoadingState.Error) {\n      return intl.formatMessage({\n        id:\n          'xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.enableDeprecationLoggingToggleSwitch.errorLabel',\n        defaultMessage: 'Could not load logging state',\n      });\n    } else if (loggingEnabled) {\n      return intl.formatMessage({\n        id:\n          'xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.enableDeprecationLoggingToggleSwitch.enabledLabel',\n        defaultMessage: 'On',\n      });\n    } else {\n      return intl.formatMessage({\n        id:\n          'xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.enableDeprecationLoggingToggleSwitch.disabledLabel',\n        defaultMessage: 'Off',\n      });\n    }\n  }\n\n  private loadData = async () => {\n    try {\n      this.setState({ loadingState: LoadingState.Loading });\n      const resp = await axios.get(\n        chrome.addBasePath('/api/upgrade_assistant/deprecation_logging')\n      );\n      this.setState({\n        loadingState: LoadingState.Success,\n        loggingEnabled: resp.data.isEnabled,\n      });\n    } catch (e) {\n      this.setState({ loadingState: LoadingState.Error });\n    }\n  };\n\n  private toggleLogging = async () => {\n    try {\n      // Optimistically toggle the UI\n      const newEnabled = !this.state.loggingEnabled;\n      this.setState({ loadingState: LoadingState.Loading, loggingEnabled: newEnabled });\n\n      const resp = await axios.put(\n        chrome.addBasePath('/api/upgrade_assistant/deprecation_logging'),\n        {\n          isEnabled: newEnabled,\n        },\n        {\n          headers: {\n            'kbn-xsrf': chrome.getXsrfToken(),\n          },\n        }\n      );\n\n      this.setState({\n        loadingState: LoadingState.Success,\n        loggingEnabled: resp.data.isEnabled,\n      });\n    } catch (e) {\n      this.setState({ loadingState: LoadingState.Error });\n    }\n  };\n}\n\nexport const DeprecationLoggingToggle = injectI18n(DeprecationLoggingToggleUI);\n"]}]}