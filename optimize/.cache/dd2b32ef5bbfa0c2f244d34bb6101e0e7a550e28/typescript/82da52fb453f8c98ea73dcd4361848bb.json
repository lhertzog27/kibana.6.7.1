{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_callout_warning.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_callout_warning.tsx","mtime":1567631712301},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { EuiCallOut } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport React, { Component } from 'react';\nimport { NO_PRIVILEGE_VALUE } from '../../../lib/constants';\nvar PrivilegeCalloutWarning = /** @class */ (function (_super) {\n    tslib_1.__extends(PrivilegeCalloutWarning, _super);\n    function PrivilegeCalloutWarning() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            showImpactedSpaces: false,\n        };\n        return _this;\n    }\n    PrivilegeCalloutWarning.prototype.render = function () {\n        var _a = this.props, basePrivilege = _a.basePrivilege, isReservedRole = _a.isReservedRole;\n        var callout = null;\n        if (basePrivilege === 'all') {\n            if (isReservedRole) {\n                callout = (React.createElement(EuiCallOut, { color: \"warning\", iconType: \"iInCircle\", title: React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.notPossibleToCustomizeReservedRoleSpacePrivilegesTitle\", defaultMessage: \"Cannot customize a reserved role's space privileges\" }) },\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.howToCustomizePrivilegesDescription\", defaultMessage: \"This role always grants full access to all spaces. To customize privileges for\\n                individual spaces, you must create a new role.\" }))));\n            }\n            else {\n                callout = (React.createElement(EuiCallOut, { color: \"warning\", iconType: \"iInCircle\", title: React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.minimumPrivilegeTitle\", defaultMessage: \"Minimum privilege is too high to customize individual spaces\" }) },\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.howToCustomizePrivilegesForIndividualSpacesDescription\", defaultMessage: \"Setting the minimum privilege to {allText} grants full access to all\\n                spaces. To customize privileges for individual spaces, the minimum privilege must be\\n                either {readText} or {noneText}.\", values: {\n                                allText: (React.createElement(\"strong\", null,\n                                    React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.allText\", defaultMessage: \"all\" }))),\n                                readText: (React.createElement(\"strong\", null,\n                                    React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.readText\", defaultMessage: \"read\" }))),\n                                noneText: (React.createElement(\"strong\", null,\n                                    React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.noneText\", defaultMessage: \"none\" }))),\n                            } }))));\n            }\n        }\n        if (basePrivilege === 'read') {\n            if (isReservedRole) {\n                callout = (React.createElement(EuiCallOut, { color: \"warning\", iconType: \"iInCircle\", title: React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.notPossibleToCustomizeReservedRoleSpacePrivilegesTitle\", defaultMessage: \"Cannot customize a reserved role's space privileges\" }) },\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.alwaysGrantReadAccessToAllSpacesTitle\", defaultMessage: \"This role always grants read access to all spaces. To customize privileges for\\n                individual spaces, you must create a new role.\" }))));\n            }\n            else {\n                callout = (React.createElement(EuiCallOut, { color: \"primary\", iconType: \"iInCircle\", title: React.createElement(\"span\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.minimalPossiblePrivilageTitle\", defaultMessage: \"The minimal possible privilege is {readText}.\", values: {\n                                readText: (React.createElement(\"strong\", null,\n                                    React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.readText\", defaultMessage: \"read\" }))),\n                            } })) }));\n            }\n        }\n        if (basePrivilege === NO_PRIVILEGE_VALUE && isReservedRole) {\n            callout = (React.createElement(EuiCallOut, { color: \"warning\", iconType: \"iInCircle\", title: React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.notPossibleToCustomizeReservedRoleSpacePrivilegesTitle\", defaultMessage: \"Cannot customize a reserved role's space privileges\" }) },\n                React.createElement(\"p\", null,\n                    React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeCalloutWarning.neverGrantReadAccessToAllSpacesTitle\", defaultMessage: \"This role never grants access to any spaces within Kibana. To customize privileges for\\n              individual spaces, you must create a new role.\" }))));\n        }\n        return callout;\n    };\n    return PrivilegeCalloutWarning;\n}(Component));\nexport { PrivilegeCalloutWarning };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_callout_warning.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_callout_warning.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { EuiCallOut } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport React, { Component } from 'react';\nimport { KibanaPrivilege } from '../../../../../../../common/model/kibana_privilege';\nimport { NO_PRIVILEGE_VALUE } from '../../../lib/constants';\n\ninterface Props {\n  basePrivilege: KibanaPrivilege;\n  isReservedRole: boolean;\n}\n\ninterface State {\n  showImpactedSpaces: boolean;\n}\n\nexport class PrivilegeCalloutWarning extends Component<Props, State> {\n  public state = {\n    showImpactedSpaces: false,\n  };\n\n  public render() {\n    const { basePrivilege, isReservedRole } = this.props;\n\n    let callout = null;\n\n    if (basePrivilege === 'all') {\n      if (isReservedRole) {\n        callout = (\n          <EuiCallOut\n            color=\"warning\"\n            iconType=\"iInCircle\"\n            title={\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.privilegeCalloutWarning.notPossibleToCustomizeReservedRoleSpacePrivilegesTitle\"\n                defaultMessage=\"Cannot customize a reserved role's space privileges\"\n              />\n            }\n          >\n            <p>\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.privilegeCalloutWarning.howToCustomizePrivilegesDescription\"\n                defaultMessage=\"This role always grants full access to all spaces. To customize privileges for\n                individual spaces, you must create a new role.\"\n              />\n            </p>\n          </EuiCallOut>\n        );\n      } else {\n        callout = (\n          <EuiCallOut\n            color=\"warning\"\n            iconType=\"iInCircle\"\n            title={\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.privilegeCalloutWarning.minimumPrivilegeTitle\"\n                defaultMessage=\"Minimum privilege is too high to customize individual spaces\"\n              />\n            }\n          >\n            <p>\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.privilegeCalloutWarning.howToCustomizePrivilegesForIndividualSpacesDescription\"\n                defaultMessage=\"Setting the minimum privilege to {allText} grants full access to all\n                spaces. To customize privileges for individual spaces, the minimum privilege must be\n                either {readText} or {noneText}.\"\n                values={{\n                  allText: (\n                    <strong>\n                      <FormattedMessage\n                        id=\"xpack.security.management.editRoles.privilegeCalloutWarning.allText\"\n                        defaultMessage=\"all\"\n                      />\n                    </strong>\n                  ),\n                  readText: (\n                    <strong>\n                      <FormattedMessage\n                        id=\"xpack.security.management.editRoles.privilegeCalloutWarning.readText\"\n                        defaultMessage=\"read\"\n                      />\n                    </strong>\n                  ),\n                  noneText: (\n                    <strong>\n                      <FormattedMessage\n                        id=\"xpack.security.management.editRoles.privilegeCalloutWarning.noneText\"\n                        defaultMessage=\"none\"\n                      />\n                    </strong>\n                  ),\n                }}\n              />\n            </p>\n          </EuiCallOut>\n        );\n      }\n    }\n\n    if (basePrivilege === 'read') {\n      if (isReservedRole) {\n        callout = (\n          <EuiCallOut\n            color=\"warning\"\n            iconType=\"iInCircle\"\n            title={\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.privilegeCalloutWarning.notPossibleToCustomizeReservedRoleSpacePrivilegesTitle\"\n                defaultMessage=\"Cannot customize a reserved role's space privileges\"\n              />\n            }\n          >\n            <p>\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.privilegeCalloutWarning.alwaysGrantReadAccessToAllSpacesTitle\"\n                defaultMessage=\"This role always grants read access to all spaces. To customize privileges for\n                individual spaces, you must create a new role.\"\n              />\n            </p>\n          </EuiCallOut>\n        );\n      } else {\n        callout = (\n          <EuiCallOut\n            color=\"primary\"\n            iconType=\"iInCircle\"\n            title={\n              <span>\n                <FormattedMessage\n                  id=\"xpack.security.management.editRoles.privilegeCalloutWarning.minimalPossiblePrivilageTitle\"\n                  defaultMessage=\"The minimal possible privilege is {readText}.\"\n                  values={{\n                    readText: (\n                      <strong>\n                        <FormattedMessage\n                          id=\"xpack.security.management.editRoles.privilegeCalloutWarning.readText\"\n                          defaultMessage=\"read\"\n                        />\n                      </strong>\n                    ),\n                  }}\n                />\n              </span>\n            }\n          />\n        );\n      }\n    }\n\n    if (basePrivilege === NO_PRIVILEGE_VALUE && isReservedRole) {\n      callout = (\n        <EuiCallOut\n          color=\"warning\"\n          iconType=\"iInCircle\"\n          title={\n            <FormattedMessage\n              id=\"xpack.security.management.editRoles.privilegeCalloutWarning.notPossibleToCustomizeReservedRoleSpacePrivilegesTitle\"\n              defaultMessage=\"Cannot customize a reserved role's space privileges\"\n            />\n          }\n        >\n          <p>\n            <FormattedMessage\n              id=\"xpack.security.management.editRoles.privilegeCalloutWarning.neverGrantReadAccessToAllSpacesTitle\"\n              defaultMessage=\"This role never grants access to any spaces within Kibana. To customize privileges for\n              individual spaces, you must create a new role.\"\n            />\n          </p>\n        </EuiCallOut>\n      );\n    }\n\n    return callout;\n  }\n}\n"]}]}