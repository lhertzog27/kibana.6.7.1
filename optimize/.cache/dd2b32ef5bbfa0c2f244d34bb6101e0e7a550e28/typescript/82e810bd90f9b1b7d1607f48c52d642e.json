{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionOverview/List/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionOverview/List/index.tsx","mtime":1567631711863},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiToolTip } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { NOT_AVAILABLE_LABEL } from 'x-pack/plugins/apm/common/i18n';\nimport { fontFamilyCode, truncate } from '../../../../style/variables';\nimport { asDecimal, asMillis } from '../../../../utils/formatters';\nimport { ImpactBar } from '../../../shared/ImpactBar';\nimport { KibanaLink } from '../../../shared/Links/KibanaLink';\nimport { legacyEncodeURIComponent } from '../../../shared/Links/url_helpers';\nimport { ManagedTable } from '../../../shared/ManagedTable';\nvar TransactionNameLink = styled(KibanaLink)(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  \", \";\\n  font-family: \", \";\\n\"], [\"\\n  \", \";\\n  font-family: \", \";\\n\"])), truncate('100%'), fontFamilyCode);\nexport function TransactionList(_a) {\n    var items = _a.items, serviceName = _a.serviceName, rest = tslib_1.__rest(_a, [\"items\", \"serviceName\"]);\n    var columns = [\n        {\n            field: 'name',\n            name: i18n.translate('xpack.apm.transactionsTable.nameColumnLabel', {\n                defaultMessage: 'Name'\n            }),\n            width: '50%',\n            sortable: true,\n            render: function (transactionName, data) {\n                var encodedType = legacyEncodeURIComponent(data.sample.transaction.type);\n                var encodedName = legacyEncodeURIComponent(transactionName);\n                var transactionPath = \"/\" + serviceName + \"/transactions/\" + encodedType + \"/\" + encodedName;\n                return (React.createElement(EuiToolTip, { id: \"transaction-name-link-tooltip\", content: transactionName || NOT_AVAILABLE_LABEL },\n                    React.createElement(TransactionNameLink, { hash: transactionPath }, transactionName || NOT_AVAILABLE_LABEL)));\n            }\n        },\n        {\n            field: 'averageResponseTime',\n            name: i18n.translate('xpack.apm.transactionsTable.avgDurationColumnLabel', {\n                defaultMessage: 'Avg. duration'\n            }),\n            sortable: true,\n            dataType: 'number',\n            render: function (value) { return asMillis(value); }\n        },\n        {\n            field: 'p95',\n            name: i18n.translate('xpack.apm.transactionsTable.95thPercentileColumnLabel', {\n                defaultMessage: '95th percentile'\n            }),\n            sortable: true,\n            dataType: 'number',\n            render: function (value) { return asMillis(value); }\n        },\n        {\n            field: 'transactionsPerMinute',\n            name: i18n.translate('xpack.apm.transactionsTable.transactionsPerMinuteColumnLabel', {\n                defaultMessage: 'Trans. per minute'\n            }),\n            sortable: true,\n            dataType: 'number',\n            render: function (value) {\n                return asDecimal(value) + \" \" + i18n.translate('xpack.apm.transactionsTable.transactionsPerMinuteUnitLabel', {\n                    defaultMessage: 'tpm'\n                });\n            }\n        },\n        {\n            field: 'impact',\n            name: i18n.translate('xpack.apm.transactionsTable.impactColumnLabel', {\n                defaultMessage: 'Impact'\n            }),\n            sortable: true,\n            dataType: 'number',\n            render: function (value) { return React.createElement(ImpactBar, { value: value }); }\n        }\n    ];\n    return (React.createElement(ManagedTable, tslib_1.__assign({ columns: columns, items: items, initialSort: { field: 'impact', direction: 'desc' }, initialPageSize: 25 }, rest)));\n}\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionOverview/List/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionOverview/List/index.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,mBAAmB,CAAC;AACvC,OAAO,EAAE,mBAAmB,EAAE,MAAM,gCAAgC,CAAC;AAErE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACnE,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,UAAU,EAAE,MAAM,kCAAkC,CAAC;AAC9D,OAAO,EAAE,wBAAwB,EAAE,MAAM,mCAAmC,CAAC;AAC7E,OAAO,EAAgB,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAE1E,IAAM,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,8GAAA,MAC1C,EAAgB,oBACH,EAAc,KAC9B,KAFG,QAAQ,CAAC,MAAM,CAAC,EACH,cAAc,CAC9B,CAAC;AAOF,MAAM,UAAU,eAAe,CAAC,EAAsC;IAApC,IAAA,gBAAK,EAAE,4BAAW,EAAE,mDAAO;IAC3D,IAAM,OAAO,GAAmB;QAC9B;YACE,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,6CAA6C,EAAE;gBAClE,cAAc,EAAE,MAAM;aACvB,CAAC;YACF,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,UAAC,eAAe,EAAE,IAAI;gBAC5B,IAAM,WAAW,GAAG,wBAAwB,CAC1C,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAC7B,CAAC;gBACF,IAAM,WAAW,GAAG,wBAAwB,CAAC,eAAe,CAAC,CAAC;gBAC9D,IAAM,eAAe,GAAG,MAAI,WAAW,sBAAiB,WAAW,SAAI,WAAa,CAAC;gBAErF,OAAO,CACL,oBAAC,UAAU,IACT,EAAE,EAAC,+BAA+B,EAClC,OAAO,EAAE,eAAe,IAAI,mBAAmB;oBAE/C,oBAAC,mBAAmB,IAAC,IAAI,EAAE,eAAe,IACvC,eAAe,IAAI,mBAAmB,CACnB,CACX,CACd,CAAC;YACJ,CAAC;SACF;QACD;YACE,KAAK,EAAE,qBAAqB;YAC5B,IAAI,EAAE,IAAI,CAAC,SAAS,CAClB,oDAAoD,EACpD;gBACE,cAAc,EAAE,eAAe;aAChC,CACF;YACD,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,KAAK,CAAC,EAAf,CAAe;SACjC;QACD;YACE,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI,CAAC,SAAS,CAClB,uDAAuD,EACvD;gBACE,cAAc,EAAE,iBAAiB;aAClC,CACF;YACD,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,KAAK,CAAC,EAAf,CAAe;SACjC;QACD;YACE,KAAK,EAAE,uBAAuB;YAC9B,IAAI,EAAE,IAAI,CAAC,SAAS,CAClB,8DAA8D,EAC9D;gBACE,cAAc,EAAE,mBAAmB;aACpC,CACF;YACD,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,UAAA,KAAK;gBACX,OAAG,SAAS,CAAC,KAAK,CAAC,SAAI,IAAI,CAAC,SAAS,CACnC,4DAA4D,EAC5D;oBACE,cAAc,EAAE,KAAK;iBACtB,CACA;YALH,CAKG;SACN;QACD;YACE,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,+CAA+C,EAAE;gBACpE,cAAc,EAAE,QAAQ;aACzB,CAAC;YACF,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,oBAAC,SAAS,IAAC,KAAK,EAAE,KAAK,GAAI,EAA3B,CAA2B;SAC7C;KACF,CAAC;IAEF,OAAO,CACL,oBAAC,YAAY,qBACX,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,EACZ,WAAW,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,EACnD,eAAe,EAAE,EAAE,IACf,IAAI,EACR,CACH,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiToolTip } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { NOT_AVAILABLE_LABEL } from 'x-pack/plugins/apm/common/i18n';\nimport { ITransactionGroup } from 'x-pack/plugins/apm/server/lib/transaction_groups/transform';\nimport { fontFamilyCode, truncate } from '../../../../style/variables';\nimport { asDecimal, asMillis } from '../../../../utils/formatters';\nimport { ImpactBar } from '../../../shared/ImpactBar';\nimport { KibanaLink } from '../../../shared/Links/KibanaLink';\nimport { legacyEncodeURIComponent } from '../../../shared/Links/url_helpers';\nimport { ITableColumn, ManagedTable } from '../../../shared/ManagedTable';\n\nconst TransactionNameLink = styled(KibanaLink)`\n  ${truncate('100%')};\n  font-family: ${fontFamilyCode};\n`;\n\ninterface Props {\n  items: ITransactionGroup[];\n  serviceName: string;\n}\n\nexport function TransactionList({ items, serviceName, ...rest }: Props) {\n  const columns: ITableColumn[] = [\n    {\n      field: 'name',\n      name: i18n.translate('xpack.apm.transactionsTable.nameColumnLabel', {\n        defaultMessage: 'Name'\n      }),\n      width: '50%',\n      sortable: true,\n      render: (transactionName, data) => {\n        const encodedType = legacyEncodeURIComponent(\n          data.sample.transaction.type\n        );\n        const encodedName = legacyEncodeURIComponent(transactionName);\n        const transactionPath = `/${serviceName}/transactions/${encodedType}/${encodedName}`;\n\n        return (\n          <EuiToolTip\n            id=\"transaction-name-link-tooltip\"\n            content={transactionName || NOT_AVAILABLE_LABEL}\n          >\n            <TransactionNameLink hash={transactionPath}>\n              {transactionName || NOT_AVAILABLE_LABEL}\n            </TransactionNameLink>\n          </EuiToolTip>\n        );\n      }\n    },\n    {\n      field: 'averageResponseTime',\n      name: i18n.translate(\n        'xpack.apm.transactionsTable.avgDurationColumnLabel',\n        {\n          defaultMessage: 'Avg. duration'\n        }\n      ),\n      sortable: true,\n      dataType: 'number',\n      render: value => asMillis(value)\n    },\n    {\n      field: 'p95',\n      name: i18n.translate(\n        'xpack.apm.transactionsTable.95thPercentileColumnLabel',\n        {\n          defaultMessage: '95th percentile'\n        }\n      ),\n      sortable: true,\n      dataType: 'number',\n      render: value => asMillis(value)\n    },\n    {\n      field: 'transactionsPerMinute',\n      name: i18n.translate(\n        'xpack.apm.transactionsTable.transactionsPerMinuteColumnLabel',\n        {\n          defaultMessage: 'Trans. per minute'\n        }\n      ),\n      sortable: true,\n      dataType: 'number',\n      render: value =>\n        `${asDecimal(value)} ${i18n.translate(\n          'xpack.apm.transactionsTable.transactionsPerMinuteUnitLabel',\n          {\n            defaultMessage: 'tpm'\n          }\n        )}`\n    },\n    {\n      field: 'impact',\n      name: i18n.translate('xpack.apm.transactionsTable.impactColumnLabel', {\n        defaultMessage: 'Impact'\n      }),\n      sortable: true,\n      dataType: 'number',\n      render: value => <ImpactBar value={value} />\n    }\n  ];\n\n  return (\n    <ManagedTable\n      columns={columns}\n      items={items}\n      initialSort={{ field: 'impact', direction: 'desc' }}\n      initialPageSize={25}\n      {...rest}\n    />\n  );\n}\n"]}]}