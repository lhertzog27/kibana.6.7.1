{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/WaterfallContainer/get_agent_marks.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/WaterfallContainer/get_agent_marks.ts","mtime":1567631711863},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { sortBy } from 'lodash';\nexport function getAgentMarks(transaction) {\n    if (!(transaction.transaction.marks && transaction.transaction.marks.agent)) {\n        return [];\n    }\n    return sortBy(Object.entries(transaction.transaction.marks.agent).map(function (_a) {\n        var _b = tslib_1.__read(_a, 2), name = _b[0], ms = _b[1];\n        return ({\n            name: name,\n            us: ms * 1000\n        });\n    }), 'us');\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/WaterfallContainer/get_agent_marks.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/WaterfallContainer/get_agent_marks.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAQhC,MAAM,UAAU,aAAa,CAAC,WAAwB;IACpD,IAAI,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,IAAI,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QAC3E,OAAO,EAAE,CAAC;KACX;IAED,OAAO,MAAM,CACX,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAC,EAAU;YAAV,0BAAU,EAAT,YAAI,EAAE,UAAE;QAAM,OAAA,CAAC;YACvE,IAAI,MAAA;YACJ,EAAE,EAAE,EAAE,GAAG,IAAI;SACd,CAAC;IAHsE,CAGtE,CAAC,EACH,IAAI,CACL,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { sortBy } from 'lodash';\nimport { Transaction } from 'x-pack/plugins/apm/typings/es_schemas/Transaction';\n\nexport interface AgentMark {\n  name: string;\n  us: number;\n}\n\nexport function getAgentMarks(transaction: Transaction): AgentMark[] {\n  if (!(transaction.transaction.marks && transaction.transaction.marks.agent)) {\n    return [];\n  }\n\n  return sortBy(\n    Object.entries(transaction.transaction.marks.agent).map(([name, ms]) => ({\n      name,\n      us: ms * 1000\n    })),\n    'us'\n  );\n}\n"]}]}