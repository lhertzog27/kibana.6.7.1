{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/navigation/child_routes.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/navigation/child_routes.tsx","mtime":1567631711880},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nexport var ChildRoutes = function (_a) {\n    var routes = _a.routes, _b = _a.useSwitch, useSwitch = _b === void 0 ? true : _b, rest = tslib_1.__rest(_a, [\"routes\", \"useSwitch\"]);\n    if (!routes) {\n        return null;\n    }\n    var Parent = useSwitch ? Switch : React.Fragment;\n    return (React.createElement(Parent, null, routes.map(function (route) { return (React.createElement(Route, { key: route.path, path: route.path, render: function (routeProps) {\n            var Component = route.component;\n            return React.createElement(Component, tslib_1.__assign({}, routeProps, { routes: route.routes }, rest));\n        } })); })));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/navigation/child_routes.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/navigation/child_routes.tsx"],"names":[],"mappings":";AAAA;;;;GAIG;AACH,OAAO,KAAc,MAAM,OAAO,CAAC;AACnC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAQjD,MAAM,CAAC,IAAM,WAAW,GAInB,UAAC,EAAqC;IAAnC,IAAA,kBAAM,EAAE,iBAAgB,EAAhB,qCAAgB,EAAE,kDAAO;IACvC,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,IAAI,CAAC;KACb;IACD,IAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;IACnD,OAAO,CACL,oBAAC,MAAM,QACJ,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,CACnB,oBAAC,KAAK,IACJ,GAAG,EAAE,KAAK,CAAC,IAAI,EACf,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,MAAM,EAAE,UAAA,UAAU;YAChB,IAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;YAClC,OAAO,oBAAC,SAAS,uBAAK,UAAU,IAAE,MAAM,EAAE,KAAK,CAAC,MAAM,IAAM,IAAI,EAAI,CAAC;QACvE,CAAC,GACD,CACH,EAToB,CASpB,CAAC,CACK,CACV,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React, { SFC } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\ninterface RouteConfig {\n  path: string;\n  component: React.ComponentType<any>;\n  routes?: RouteConfig[];\n}\n\nexport const ChildRoutes: SFC<{\n  routes?: RouteConfig[];\n  useSwitch?: boolean;\n  [other: string]: any;\n}> = ({ routes, useSwitch = true, ...rest }) => {\n  if (!routes) {\n    return null;\n  }\n  const Parent = useSwitch ? Switch : React.Fragment;\n  return (\n    <Parent>\n      {routes.map(route => (\n        <Route\n          key={route.path}\n          path={route.path}\n          render={routeProps => {\n            const Component = route.component;\n            return <Component {...routeProps} routes={route.routes} {...rest} />;\n          }}\n        />\n      ))}\n    </Parent>\n  );\n};\n"]}]}