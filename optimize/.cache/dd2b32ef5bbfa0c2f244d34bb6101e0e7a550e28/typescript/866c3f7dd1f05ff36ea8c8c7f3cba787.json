{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/selectors/dashboard_selectors.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/selectors/dashboard_selectors.ts","mtime":1567631711600},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as DashboardSelectors from '../dashboard/selectors';\nexport var getDashboard = function (state) {\n    return state.dashboard;\n};\nexport var getPanels = function (state) {\n    return DashboardSelectors.getPanels(getDashboard(state));\n};\nexport var getPanel = function (state, panelId) {\n    return DashboardSelectors.getPanel(getDashboard(state), panelId);\n};\nexport var getPanelType = function (state, panelId) {\n    return DashboardSelectors.getPanelType(getDashboard(state), panelId);\n};\nexport var getEmbeddables = function (state) {\n    return DashboardSelectors.getEmbeddables(getDashboard(state));\n};\nexport var getEmbeddableError = function (state, panelId) {\n    return DashboardSelectors.getEmbeddableError(getDashboard(state), panelId);\n};\nexport var getEmbeddableInitialized = function (state, panelId) {\n    return DashboardSelectors.getEmbeddableInitialized(getDashboard(state), panelId);\n};\nexport var getEmbeddableCustomization = function (state, panelId) {\n    return DashboardSelectors.getEmbeddableCustomization(getDashboard(state), panelId);\n};\nexport var getEmbeddableStagedFilter = function (state, panelId) {\n    return DashboardSelectors.getEmbeddableStagedFilter(getDashboard(state), panelId);\n};\nexport var getEmbeddableMetadata = function (state, panelId) {\n    return DashboardSelectors.getEmbeddableMetadata(getDashboard(state), panelId);\n};\nexport var getStagedFilters = function (state) {\n    return DashboardSelectors.getStagedFilters(getDashboard(state));\n};\nexport var getViewMode = function (state) {\n    return DashboardSelectors.getViewMode(getDashboard(state));\n};\nexport var getFullScreenMode = function (state) {\n    return DashboardSelectors.getFullScreenMode(getDashboard(state));\n};\nexport var getMaximizedPanelId = function (state) {\n    return DashboardSelectors.getMaximizedPanelId(getDashboard(state));\n};\nexport var getUseMargins = function (state) {\n    return DashboardSelectors.getUseMargins(getDashboard(state));\n};\nexport var getHidePanelTitles = function (state) {\n    return DashboardSelectors.getHidePanelTitles(getDashboard(state));\n};\nexport var getTimeRange = function (state) {\n    return DashboardSelectors.getTimeRange(getDashboard(state));\n};\nexport var getFilters = function (state) {\n    return DashboardSelectors.getFilters(getDashboard(state));\n};\nexport var getQuery = function (state) {\n    return DashboardSelectors.getQuery(getDashboard(state));\n};\nexport var getTitle = function (state) {\n    return DashboardSelectors.getTitle(getDashboard(state));\n};\nexport var getDescription = function (state) {\n    return DashboardSelectors.getDescription(getDashboard(state));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/selectors/dashboard_selectors.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/selectors/dashboard_selectors.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Filters, Query, TimeRange } from 'ui/embeddable';\nimport { DashboardViewMode } from '../dashboard/dashboard_view_mode';\nimport * as DashboardSelectors from '../dashboard/selectors';\nimport { PanelId } from '../dashboard/selectors/types';\nimport { CoreKibanaState } from './types';\n\nexport const getDashboard = (state: CoreKibanaState): DashboardSelectors.DashboardState =>\n  state.dashboard;\n\nexport const getPanels = (state: CoreKibanaState) =>\n  DashboardSelectors.getPanels(getDashboard(state));\nexport const getPanel = (state: CoreKibanaState, panelId: PanelId) =>\n  DashboardSelectors.getPanel(getDashboard(state), panelId);\nexport const getPanelType = (state: CoreKibanaState, panelId: PanelId) =>\n  DashboardSelectors.getPanelType(getDashboard(state), panelId);\n\nexport const getEmbeddables = (state: CoreKibanaState) =>\n  DashboardSelectors.getEmbeddables(getDashboard(state));\nexport const getEmbeddableError = (state: CoreKibanaState, panelId: PanelId) =>\n  DashboardSelectors.getEmbeddableError(getDashboard(state), panelId);\nexport const getEmbeddableInitialized = (state: CoreKibanaState, panelId: PanelId) =>\n  DashboardSelectors.getEmbeddableInitialized(getDashboard(state), panelId);\nexport const getEmbeddableCustomization = (state: CoreKibanaState, panelId: PanelId) =>\n  DashboardSelectors.getEmbeddableCustomization(getDashboard(state), panelId);\nexport const getEmbeddableStagedFilter = (state: CoreKibanaState, panelId: PanelId) =>\n  DashboardSelectors.getEmbeddableStagedFilter(getDashboard(state), panelId);\nexport const getEmbeddableMetadata = (state: CoreKibanaState, panelId: PanelId) =>\n  DashboardSelectors.getEmbeddableMetadata(getDashboard(state), panelId);\n\nexport const getStagedFilters = (state: CoreKibanaState): Filters =>\n  DashboardSelectors.getStagedFilters(getDashboard(state));\nexport const getViewMode = (state: CoreKibanaState): DashboardViewMode =>\n  DashboardSelectors.getViewMode(getDashboard(state));\nexport const getFullScreenMode = (state: CoreKibanaState): boolean =>\n  DashboardSelectors.getFullScreenMode(getDashboard(state));\nexport const getMaximizedPanelId = (state: CoreKibanaState): PanelId | undefined =>\n  DashboardSelectors.getMaximizedPanelId(getDashboard(state));\nexport const getUseMargins = (state: CoreKibanaState): boolean =>\n  DashboardSelectors.getUseMargins(getDashboard(state));\nexport const getHidePanelTitles = (state: CoreKibanaState): boolean =>\n  DashboardSelectors.getHidePanelTitles(getDashboard(state));\nexport const getTimeRange = (state: CoreKibanaState): TimeRange =>\n  DashboardSelectors.getTimeRange(getDashboard(state));\nexport const getFilters = (state: CoreKibanaState): Filters =>\n  DashboardSelectors.getFilters(getDashboard(state));\nexport const getQuery = (state: CoreKibanaState): Query =>\n  DashboardSelectors.getQuery(getDashboard(state));\n\nexport const getTitle = (state: CoreKibanaState): string =>\n  DashboardSelectors.getTitle(getDashboard(state));\nexport const getDescription = (state: CoreKibanaState): string | undefined =>\n  DashboardSelectors.getDescription(getDashboard(state));\n"]}]}