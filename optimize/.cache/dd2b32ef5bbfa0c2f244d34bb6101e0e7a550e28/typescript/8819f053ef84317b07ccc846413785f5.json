{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/overview/steps.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/overview/steps.tsx","mtime":1567631712323},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React, { Fragment } from 'react';\nimport { EuiFormRow, EuiLink, EuiNotificationBadge, EuiSpacer, EuiSteps, EuiText, } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport chrome from 'ui/chrome';\nimport { CURRENT_MAJOR_VERSION, NEXT_MAJOR_VERSION } from '../../../../common/version';\nimport { DeprecationLoggingToggle } from './deprecation_logging_toggle';\n// Leaving these here even if unused so they are picked up for i18n static analysis\n// Keep this until last minor release (when next major is also released).\n// @ts-ignore\nvar WAIT_FOR_RELEASE_STEP = {\n    title: i18n.translate('xpack.upgradeAssistant.overviewTab.steps.waitForReleaseStep.stepTitle', {\n        defaultMessage: 'Wait for the Elasticsearch {nextEsVersion} release',\n        values: {\n            nextEsVersion: NEXT_MAJOR_VERSION + \".0\",\n        },\n    }),\n    children: (React.createElement(Fragment, null,\n        React.createElement(EuiText, { grow: false },\n            React.createElement(\"p\", null,\n                React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.waitForReleaseStep.stepDetail\", defaultMessage: \"Once the release is out, upgrade to the latest {currentEsMajorVersion} version, and then\\n              return here to proceed with your {nextEsMajorVersion} upgrade.\", values: {\n                        currentEsMajorVersion: CURRENT_MAJOR_VERSION + \".x\",\n                        nextEsMajorVersion: NEXT_MAJOR_VERSION + \".0\",\n                    } }))))),\n};\n// Swap in this step for the one above it on the last minor release.\n// @ts-ignore\nvar START_UPGRADE_STEP = {\n    title: i18n.translate('xpack.upgradeAssistant.overviewTab.steps.startUpgradeStep.stepTitle', {\n        defaultMessage: 'Start your upgrade',\n    }),\n    children: (React.createElement(Fragment, null,\n        React.createElement(EuiText, { grow: false },\n            React.createElement(\"p\", null, chrome.getInjected('isCloudEnabled', false) ? (React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.startUpgradeStepCloud.stepDetail.goToCloudDashboardDetail\", defaultMessage: \"Go to the Deployments section on the Elastic Cloud dashboard to start your upgrade.\" })) : (React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.startUpgradeStepOnPrem.stepDetail.followInstructionsDetail\", defaultMessage: \"Follow {instructionButton} to start your upgrade.\", values: {\n                    instructionButton: (React.createElement(EuiLink, { href: \"https://www.elastic.co/guide/en/elasticsearch/reference/7.0/setup-upgrade.html\", target: \"_blank\" },\n                        React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.startUpgradeStepOnPrem.stepDetail.instructionButtonLabel\", defaultMessage: \"these instructions\" }))),\n                } })))))),\n};\nexport var StepsUI = function (_a) {\n    var checkupData = _a.checkupData, setSelectedTabIndex = _a.setSelectedTabIndex, intl = _a.intl;\n    var checkupDataTyped = checkupData;\n    var countByType = Object.keys(checkupDataTyped).reduce(function (counts, checkupType) {\n        counts[checkupType] = checkupDataTyped[checkupType].length;\n        return counts;\n    }, {});\n    return (React.createElement(EuiSteps, { className: \"upgSteps\", headingElement: \"h2\", steps: [\n            {\n                title: countByType.cluster\n                    ? intl.formatMessage({\n                        id: 'xpack.upgradeAssistant.overviewTab.steps.clusterStep.issuesRemainingStepTitle',\n                        defaultMessage: 'Check for issues with your cluster',\n                    })\n                    : intl.formatMessage({\n                        id: 'xpack.upgradeAssistant.overviewTab.steps.clusterStep.noIssuesRemainingStepTitle',\n                        defaultMessage: 'Your cluster settings are ready',\n                    }),\n                status: countByType.cluster ? 'warning' : 'complete',\n                children: (React.createElement(EuiText, null, countByType.cluster ? (React.createElement(Fragment, null,\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.clusterStep.todo.todoDetail\", defaultMessage: \"Go to the {clusterTabButton} to update the deprecated settings.\", values: {\n                                clusterTabButton: (React.createElement(EuiLink, { onClick: function () { return setSelectedTabIndex(1); } },\n                                    React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.clusterStep.todo.clusterTabButtonLabel\", defaultMessage: \"Cluster tab\" }))),\n                            } })),\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.clusterStep.remainingIssuesDetail\", defaultMessage: \"{numIssues} issues must be resolved.\", values: {\n                                numIssues: (React.createElement(EuiNotificationBadge, null, countByType.cluster)),\n                            } })))) : (React.createElement(\"p\", null,\n                    React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.clusterStep.noRemainingIssuesLabel\", defaultMessage: \"No remaining deprecated settings.\" }))))),\n            },\n            {\n                title: countByType.indices\n                    ? intl.formatMessage({\n                        id: 'xpack.upgradeAssistant.overviewTab.steps.indicesStep.issuesRemainingStepTitle',\n                        defaultMessage: 'Check for issues with your indices',\n                    })\n                    : intl.formatMessage({\n                        id: 'xpack.upgradeAssistant.overviewTab.steps.indicesStep.noIssuesRemainingStepTitle',\n                        defaultMessage: 'Your index settings are ready',\n                    }),\n                status: countByType.indices ? 'warning' : 'complete',\n                children: (React.createElement(EuiText, null, countByType.indices ? (React.createElement(Fragment, null,\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.indicesStep.todo.todoDetail\", defaultMessage: \"Go to the {indicesTabButton} to update the deprecated settings.\", values: {\n                                indicesTabButton: (React.createElement(EuiLink, { onClick: function () { return setSelectedTabIndex(2); } },\n                                    React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.indicesStep.todo.indicesTabButtonLabel\", defaultMessage: \"Indices tab\" }))),\n                            } })),\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.indicesStep.remainingIssuesDetail\", defaultMessage: \"{numIssues} issues must be resolved.\", values: {\n                                numIssues: (React.createElement(EuiNotificationBadge, null, countByType.indices)),\n                            } })))) : (React.createElement(\"p\", null,\n                    React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.indicesStep.noRemainingIssuesLabel\", defaultMessage: \"No remaining deprecated settings.\" }))))),\n            },\n            {\n                title: intl.formatMessage({\n                    id: 'xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.stepTitle',\n                    defaultMessage: 'Review the Elasticsearch deprecation logs',\n                }),\n                children: (React.createElement(Fragment, null,\n                    React.createElement(EuiText, { grow: false },\n                        React.createElement(\"p\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.deprecationLogs.logsDetail\", defaultMessage: \"Read the {deprecationLogsDocButton} to see if your applications\\n                      are using functionality that is not available in {nextEsVersion}. You may need to enable deprecation logging.\", values: {\n                                    deprecationLogsDocButton: (React.createElement(EuiLink, { href: \"https://www.elastic.co/guide/en/elasticsearch/reference/6.7/logging.html#deprecation-logging\", target: \"_blank\" },\n                                        React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.deprecationLogs.deprecationLogsDocButtonLabel\", defaultMessage: \"deprecation logs\" }))),\n                                    nextEsVersion: NEXT_MAJOR_VERSION + \".0\",\n                                } }))),\n                    React.createElement(EuiSpacer, null),\n                    React.createElement(EuiFormRow, { label: intl.formatMessage({\n                            id: 'xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.enableDeprecationLoggingLabel',\n                            defaultMessage: 'Enable deprecation logging?',\n                        }), describedByIds: ['deprecation-logging'] },\n                        React.createElement(DeprecationLoggingToggle, null)))),\n            },\n            // Swap in START_UPGRADE_STEP on the last minor release.\n            START_UPGRADE_STEP,\n        ] }));\n};\nexport var Steps = injectI18n(StepsUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/overview/steps.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/overview/steps.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAsB,MAAM,OAAO,CAAC;AAE5D,OAAO,EACL,UAAU,EACV,OAAO,EACP,oBAAoB,EACpB,SAAS,EAGT,QAAQ,EACR,OAAO,GACR,MAAM,cAAc,CAAC;AACtB,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC/D,OAAO,MAAM,MAAM,WAAW,CAAC;AAE/B,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAEvF,OAAO,EAAE,wBAAwB,EAAE,MAAM,8BAA8B,CAAC;AAExE,mFAAmF;AACnF,yEAAyE;AACzE,aAAa;AACb,IAAM,qBAAqB,GAAG;IAC5B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,uEAAuE,EAAE;QAC7F,cAAc,EAAE,oDAAoD;QACpE,MAAM,EAAE;YACN,aAAa,EAAK,kBAAkB,OAAI;SACzC;KACF,CAAC;IACF,QAAQ,EAAE,CACR,oBAAC,QAAQ;QACP,oBAAC,OAAO,IAAC,IAAI,EAAE,KAAK;YAClB;gBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,wEAAwE,EAC3E,cAAc,EAAC,wKACkD,EACjE,MAAM,EAAE;wBACN,qBAAqB,EAAK,qBAAqB,OAAI;wBACnD,kBAAkB,EAAK,kBAAkB,OAAI;qBAC9C,GACD,CACA,CACI,CACD,CACZ;CACF,CAAC;AAEF,oEAAoE;AACpE,aAAa;AACb,IAAM,kBAAkB,GAAG;IACzB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,qEAAqE,EAAE;QAC3F,cAAc,EAAE,oBAAoB;KACrC,CAAC;IACF,QAAQ,EAAE,CACR,oBAAC,QAAQ;QACP,oBAAC,OAAO,IAAC,IAAI,EAAE,KAAK;YAClB,+BACG,MAAM,CAAC,WAAW,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAC7C,oBAAC,gBAAgB,IACf,EAAE,EAAC,oGAAoG,EACvG,cAAc,EAAC,qFAAqF,GACpG,CACH,CAAC,CAAC,CAAC,CACF,oBAAC,gBAAgB,IACf,EAAE,EAAC,qGAAqG,EACxG,cAAc,EAAC,mDAAmD,EAClE,MAAM,EAAE;oBACN,iBAAiB,EAAE,CACjB,oBAAC,OAAO,IACN,IAAI,EAAC,gFAAgF,EACrF,MAAM,EAAC,QAAQ;wBAEf,oBAAC,gBAAgB,IACf,EAAE,EAAC,mGAAmG,EACtG,cAAc,EAAC,oBAAoB,GACnC,CACM,CACX;iBACF,GACD,CACH,CACC,CACI,CACD,CACZ;CACF,CAAC;AAEF,MAAM,CAAC,IAAM,OAAO,GAEhB,UAAC,EAA0C;QAAxC,4BAAW,EAAE,4CAAmB,EAAE,cAAI;IAC3C,IAAM,gBAAgB,GAAI,WAA4D,CAAC;IACvF,IAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,CACtD,UAAC,MAAM,EAAE,WAAW;QAClB,MAAM,CAAC,WAAW,CAAC,GAAG,gBAAgB,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;QAC3D,OAAO,MAAM,CAAC;IAChB,CAAC,EACD,EAAuC,CACxC,CAAC;IAEF,OAAO,CACL,oBAAC,QAAQ,IACP,SAAS,EAAC,UAAU,EACpB,cAAc,EAAC,IAAI,EACnB,KAAK,EAAE;YACL;gBACE,KAAK,EAAE,WAAW,CAAC,OAAO;oBACxB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;wBACjB,EAAE,EAAE,+EAA+E;wBACnF,cAAc,EAAE,oCAAoC;qBACrD,CAAC;oBACJ,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;wBACjB,EAAE,EACA,iFAAiF;wBACnF,cAAc,EAAE,iCAAiC;qBAClD,CAAC;gBACN,MAAM,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU;gBACpD,QAAQ,EAAE,CACR,oBAAC,OAAO,QACL,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CACrB,oBAAC,QAAQ;oBACP;wBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,sEAAsE,EACzE,cAAc,EAAC,iEAAiE,EAChF,MAAM,EAAE;gCACN,gBAAgB,EAAE,CAChB,oBAAC,OAAO,IAAC,OAAO,EAAE,cAAM,OAAA,mBAAmB,CAAC,CAAC,CAAC,EAAtB,CAAsB;oCAC5C,oBAAC,gBAAgB,IACf,EAAE,EAAC,iFAAiF,EACpF,cAAc,EAAC,aAAa,GAC5B,CACM,CACX;6BACF,GACD,CACA;oBACJ;wBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,4EAA4E,EAC/E,cAAc,EAAC,sCAAsC,EACrD,MAAM,EAAE;gCACN,SAAS,EAAE,CACT,oBAAC,oBAAoB,QAAE,WAAW,CAAC,OAAO,CAAwB,CACnE;6BACF,GACD,CACA,CACK,CACZ,CAAC,CAAC,CAAC,CACF;oBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,6EAA6E,EAChF,cAAc,EAAC,mCAAmC,GAClD,CACA,CACL,CACO,CACX;aACF;YACD;gBACE,KAAK,EAAE,WAAW,CAAC,OAAO;oBACxB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;wBACjB,EAAE,EAAE,+EAA+E;wBACnF,cAAc,EAAE,oCAAoC;qBACrD,CAAC;oBACJ,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;wBACjB,EAAE,EACA,iFAAiF;wBACnF,cAAc,EAAE,+BAA+B;qBAChD,CAAC;gBACN,MAAM,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU;gBACpD,QAAQ,EAAE,CACR,oBAAC,OAAO,QACL,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CACrB,oBAAC,QAAQ;oBACP;wBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,sEAAsE,EACzE,cAAc,EAAC,iEAAiE,EAChF,MAAM,EAAE;gCACN,gBAAgB,EAAE,CAChB,oBAAC,OAAO,IAAC,OAAO,EAAE,cAAM,OAAA,mBAAmB,CAAC,CAAC,CAAC,EAAtB,CAAsB;oCAC5C,oBAAC,gBAAgB,IACf,EAAE,EAAC,iFAAiF,EACpF,cAAc,EAAC,aAAa,GAC5B,CACM,CACX;6BACF,GACD,CACA;oBACJ;wBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,4EAA4E,EAC/E,cAAc,EAAC,sCAAsC,EACrD,MAAM,EAAE;gCACN,SAAS,EAAE,CACT,oBAAC,oBAAoB,QAAE,WAAW,CAAC,OAAO,CAAwB,CACnE;6BACF,GACD,CACA,CACK,CACZ,CAAC,CAAC,CAAC,CACF;oBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,6EAA6E,EAChF,cAAc,EAAC,mCAAmC,GAClD,CACA,CACL,CACO,CACX;aACF;YACD;gBACE,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC;oBACxB,EAAE,EAAE,wEAAwE;oBAC5E,cAAc,EAAE,2CAA2C;iBAC5D,CAAC;gBACF,QAAQ,EAAE,CACR,oBAAC,QAAQ;oBACP,oBAAC,OAAO,IAAC,IAAI,EAAE,KAAK;wBAClB;4BACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,yFAAyF,EAC5F,cAAc,EAAC,sMACiG,EAChH,MAAM,EAAE;oCACN,wBAAwB,EAAE,CACxB,oBAAC,OAAO,IACN,IAAI,EAAC,8FAA8F,EACnG,MAAM,EAAC,QAAQ;wCAEf,oBAAC,gBAAgB,IACf,EAAE,EAAC,4GAA4G,EAC/G,cAAc,EAAC,kBAAkB,GACjC,CACM,CACX;oCACD,aAAa,EAAK,kBAAkB,OAAI;iCACzC,GACD,CACA,CACI;oBAEV,oBAAC,SAAS,OAAG;oBAEb,oBAAC,UAAU,IACT,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC;4BACxB,EAAE,EACA,4FAA4F;4BAC9F,cAAc,EAAE,6BAA6B;yBAC9C,CAAC,EACF,cAAc,EAAE,CAAC,qBAAqB,CAAC;wBAEvC,oBAAC,wBAAwB,OAAG,CACjB,CACJ,CACZ;aACF;YAED,wDAAwD;YACxD,kBAAkB;SACnB,GACD,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React, { Fragment, StatelessComponent } from 'react';\n\nimport {\n  EuiFormRow,\n  EuiLink,\n  EuiNotificationBadge,\n  EuiSpacer,\n  // @ts-ignore\n  EuiStat,\n  EuiSteps,\n  EuiText,\n} from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport chrome from 'ui/chrome';\n\nimport { CURRENT_MAJOR_VERSION, NEXT_MAJOR_VERSION } from '../../../../common/version';\nimport { UpgradeAssistantTabProps } from '../../types';\nimport { DeprecationLoggingToggle } from './deprecation_logging_toggle';\n\n// Leaving these here even if unused so they are picked up for i18n static analysis\n// Keep this until last minor release (when next major is also released).\n// @ts-ignore\nconst WAIT_FOR_RELEASE_STEP = {\n  title: i18n.translate('xpack.upgradeAssistant.overviewTab.steps.waitForReleaseStep.stepTitle', {\n    defaultMessage: 'Wait for the Elasticsearch {nextEsVersion} release',\n    values: {\n      nextEsVersion: `${NEXT_MAJOR_VERSION}.0`,\n    },\n  }),\n  children: (\n    <Fragment>\n      <EuiText grow={false}>\n        <p>\n          <FormattedMessage\n            id=\"xpack.upgradeAssistant.overviewTab.steps.waitForReleaseStep.stepDetail\"\n            defaultMessage=\"Once the release is out, upgrade to the latest {currentEsMajorVersion} version, and then\n              return here to proceed with your {nextEsMajorVersion} upgrade.\"\n            values={{\n              currentEsMajorVersion: `${CURRENT_MAJOR_VERSION}.x`, // use \"0.x\" notation to imply the last minor\n              nextEsMajorVersion: `${NEXT_MAJOR_VERSION}.0`,\n            }}\n          />\n        </p>\n      </EuiText>\n    </Fragment>\n  ),\n};\n\n// Swap in this step for the one above it on the last minor release.\n// @ts-ignore\nconst START_UPGRADE_STEP = {\n  title: i18n.translate('xpack.upgradeAssistant.overviewTab.steps.startUpgradeStep.stepTitle', {\n    defaultMessage: 'Start your upgrade',\n  }),\n  children: (\n    <Fragment>\n      <EuiText grow={false}>\n        <p>\n          {chrome.getInjected('isCloudEnabled', false) ? (\n            <FormattedMessage\n              id=\"xpack.upgradeAssistant.overviewTab.steps.startUpgradeStepCloud.stepDetail.goToCloudDashboardDetail\"\n              defaultMessage=\"Go to the Deployments section on the Elastic Cloud dashboard to start your upgrade.\"\n            />\n          ) : (\n            <FormattedMessage\n              id=\"xpack.upgradeAssistant.overviewTab.steps.startUpgradeStepOnPrem.stepDetail.followInstructionsDetail\"\n              defaultMessage=\"Follow {instructionButton} to start your upgrade.\"\n              values={{\n                instructionButton: (\n                  <EuiLink\n                    href=\"https://www.elastic.co/guide/en/elasticsearch/reference/7.0/setup-upgrade.html\"\n                    target=\"_blank\"\n                  >\n                    <FormattedMessage\n                      id=\"xpack.upgradeAssistant.overviewTab.steps.startUpgradeStepOnPrem.stepDetail.instructionButtonLabel\"\n                      defaultMessage=\"these instructions\"\n                    />\n                  </EuiLink>\n                ),\n              }}\n            />\n          )}\n        </p>\n      </EuiText>\n    </Fragment>\n  ),\n};\n\nexport const StepsUI: StatelessComponent<\n  UpgradeAssistantTabProps & ReactIntl.InjectedIntlProps\n> = ({ checkupData, setSelectedTabIndex, intl }) => {\n  const checkupDataTyped = (checkupData! as unknown) as { [checkupType: string]: any[] };\n  const countByType = Object.keys(checkupDataTyped).reduce(\n    (counts, checkupType) => {\n      counts[checkupType] = checkupDataTyped[checkupType].length;\n      return counts;\n    },\n    {} as { [checkupType: string]: number }\n  );\n\n  return (\n    <EuiSteps\n      className=\"upgSteps\"\n      headingElement=\"h2\"\n      steps={[\n        {\n          title: countByType.cluster\n            ? intl.formatMessage({\n                id: 'xpack.upgradeAssistant.overviewTab.steps.clusterStep.issuesRemainingStepTitle',\n                defaultMessage: 'Check for issues with your cluster',\n              })\n            : intl.formatMessage({\n                id:\n                  'xpack.upgradeAssistant.overviewTab.steps.clusterStep.noIssuesRemainingStepTitle',\n                defaultMessage: 'Your cluster settings are ready',\n              }),\n          status: countByType.cluster ? 'warning' : 'complete',\n          children: (\n            <EuiText>\n              {countByType.cluster ? (\n                <Fragment>\n                  <p>\n                    <FormattedMessage\n                      id=\"xpack.upgradeAssistant.overviewTab.steps.clusterStep.todo.todoDetail\"\n                      defaultMessage=\"Go to the {clusterTabButton} to update the deprecated settings.\"\n                      values={{\n                        clusterTabButton: (\n                          <EuiLink onClick={() => setSelectedTabIndex(1)}>\n                            <FormattedMessage\n                              id=\"xpack.upgradeAssistant.overviewTab.steps.clusterStep.todo.clusterTabButtonLabel\"\n                              defaultMessage=\"Cluster tab\"\n                            />\n                          </EuiLink>\n                        ),\n                      }}\n                    />\n                  </p>\n                  <p>\n                    <FormattedMessage\n                      id=\"xpack.upgradeAssistant.overviewTab.steps.clusterStep.remainingIssuesDetail\"\n                      defaultMessage=\"{numIssues} issues must be resolved.\"\n                      values={{\n                        numIssues: (\n                          <EuiNotificationBadge>{countByType.cluster}</EuiNotificationBadge>\n                        ),\n                      }}\n                    />\n                  </p>\n                </Fragment>\n              ) : (\n                <p>\n                  <FormattedMessage\n                    id=\"xpack.upgradeAssistant.overviewTab.steps.clusterStep.noRemainingIssuesLabel\"\n                    defaultMessage=\"No remaining deprecated settings.\"\n                  />\n                </p>\n              )}\n            </EuiText>\n          ),\n        },\n        {\n          title: countByType.indices\n            ? intl.formatMessage({\n                id: 'xpack.upgradeAssistant.overviewTab.steps.indicesStep.issuesRemainingStepTitle',\n                defaultMessage: 'Check for issues with your indices',\n              })\n            : intl.formatMessage({\n                id:\n                  'xpack.upgradeAssistant.overviewTab.steps.indicesStep.noIssuesRemainingStepTitle',\n                defaultMessage: 'Your index settings are ready',\n              }),\n          status: countByType.indices ? 'warning' : 'complete',\n          children: (\n            <EuiText>\n              {countByType.indices ? (\n                <Fragment>\n                  <p>\n                    <FormattedMessage\n                      id=\"xpack.upgradeAssistant.overviewTab.steps.indicesStep.todo.todoDetail\"\n                      defaultMessage=\"Go to the {indicesTabButton} to update the deprecated settings.\"\n                      values={{\n                        indicesTabButton: (\n                          <EuiLink onClick={() => setSelectedTabIndex(2)}>\n                            <FormattedMessage\n                              id=\"xpack.upgradeAssistant.overviewTab.steps.indicesStep.todo.indicesTabButtonLabel\"\n                              defaultMessage=\"Indices tab\"\n                            />\n                          </EuiLink>\n                        ),\n                      }}\n                    />\n                  </p>\n                  <p>\n                    <FormattedMessage\n                      id=\"xpack.upgradeAssistant.overviewTab.steps.indicesStep.remainingIssuesDetail\"\n                      defaultMessage=\"{numIssues} issues must be resolved.\"\n                      values={{\n                        numIssues: (\n                          <EuiNotificationBadge>{countByType.indices}</EuiNotificationBadge>\n                        ),\n                      }}\n                    />\n                  </p>\n                </Fragment>\n              ) : (\n                <p>\n                  <FormattedMessage\n                    id=\"xpack.upgradeAssistant.overviewTab.steps.indicesStep.noRemainingIssuesLabel\"\n                    defaultMessage=\"No remaining deprecated settings.\"\n                  />\n                </p>\n              )}\n            </EuiText>\n          ),\n        },\n        {\n          title: intl.formatMessage({\n            id: 'xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.stepTitle',\n            defaultMessage: 'Review the Elasticsearch deprecation logs',\n          }),\n          children: (\n            <Fragment>\n              <EuiText grow={false}>\n                <p>\n                  <FormattedMessage\n                    id=\"xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.deprecationLogs.logsDetail\"\n                    defaultMessage=\"Read the {deprecationLogsDocButton} to see if your applications\n                      are using functionality that is not available in {nextEsVersion}. You may need to enable deprecation logging.\"\n                    values={{\n                      deprecationLogsDocButton: (\n                        <EuiLink\n                          href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.7/logging.html#deprecation-logging\"\n                          target=\"_blank\"\n                        >\n                          <FormattedMessage\n                            id=\"xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.deprecationLogs.deprecationLogsDocButtonLabel\"\n                            defaultMessage=\"deprecation logs\"\n                          />\n                        </EuiLink>\n                      ),\n                      nextEsVersion: `${NEXT_MAJOR_VERSION}.0`,\n                    }}\n                  />\n                </p>\n              </EuiText>\n\n              <EuiSpacer />\n\n              <EuiFormRow\n                label={intl.formatMessage({\n                  id:\n                    'xpack.upgradeAssistant.overviewTab.steps.deprecationLogsStep.enableDeprecationLoggingLabel',\n                  defaultMessage: 'Enable deprecation logging?',\n                })}\n                describedByIds={['deprecation-logging']}\n              >\n                <DeprecationLoggingToggle />\n              </EuiFormRow>\n            </Fragment>\n          ),\n        },\n\n        // Swap in START_UPGRADE_STEP on the last minor release.\n        START_UPGRADE_STEP,\n      ]}\n    />\n  );\n};\n\nexport const Steps = injectI18n(StepsUI);\n"]}]}