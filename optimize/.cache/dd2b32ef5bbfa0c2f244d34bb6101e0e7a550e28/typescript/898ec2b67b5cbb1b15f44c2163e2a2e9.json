{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/monitor_charts/get_monitor_charts.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/monitor_charts/get_monitor_charts.ts","mtime":1567631712329},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport gql from 'graphql-tag';\nexport var createGetMonitorChartsQueryString = \"\\nquery MonitorCharts($dateRangeStart: String!, $dateRangeEnd: String!, $monitorId: String!) {\\n  monitorChartsData: getMonitorChartsData(\\n    monitorId: $monitorId\\n    dateRangeStart: $dateRangeStart\\n    dateRangeEnd: $dateRangeEnd\\n  ) {\\n    minDuration {\\n      x\\n      y\\n    }\\n    maxDuration {\\n      x\\n      y\\n    }\\n    maxContent {\\n      x\\n      y\\n    }\\n    maxResponse {\\n      x\\n      y\\n    }\\n    maxValidate {\\n      x\\n      y\\n    }\\n    maxTotal {\\n      x\\n      y\\n    }\\n    maxWriteRequest {\\n      x\\n      y\\n    }\\n    maxTcpRtt {\\n      x\\n      y\\n    }\\n    avgDuration {\\n      x\\n      y\\n    }\\n    status {\\n      x\\n      up\\n      down\\n      total\\n    }\\n  }\\n}\\n\";\nexport var createGetMonitorChartsQuery = gql(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  \", \"\\n\"], [\"\\n  \", \"\\n\"])), createGetMonitorChartsQueryString);\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/monitor_charts/get_monitor_charts.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/monitor_charts/get_monitor_charts.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,GAAG,MAAM,aAAa,CAAC;AAE9B,MAAM,CAAC,IAAM,iCAAiC,GAAG,ysBAmDhD,CAAC;AAEF,MAAM,CAAC,IAAM,2BAA2B,GAAG,GAAG,uFAAA,MAC1C,EAAiC,IACpC,KADG,iCAAiC,CACpC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport gql from 'graphql-tag';\n\nexport const createGetMonitorChartsQueryString = `\nquery MonitorCharts($dateRangeStart: String!, $dateRangeEnd: String!, $monitorId: String!) {\n  monitorChartsData: getMonitorChartsData(\n    monitorId: $monitorId\n    dateRangeStart: $dateRangeStart\n    dateRangeEnd: $dateRangeEnd\n  ) {\n    minDuration {\n      x\n      y\n    }\n    maxDuration {\n      x\n      y\n    }\n    maxContent {\n      x\n      y\n    }\n    maxResponse {\n      x\n      y\n    }\n    maxValidate {\n      x\n      y\n    }\n    maxTotal {\n      x\n      y\n    }\n    maxWriteRequest {\n      x\n      y\n    }\n    maxTcpRtt {\n      x\n      y\n    }\n    avgDuration {\n      x\n      y\n    }\n    status {\n      x\n      up\n      down\n      total\n    }\n  }\n}\n`;\n\nexport const createGetMonitorChartsQuery = gql`\n  ${createGetMonitorChartsQueryString}\n`;\n"]}]}