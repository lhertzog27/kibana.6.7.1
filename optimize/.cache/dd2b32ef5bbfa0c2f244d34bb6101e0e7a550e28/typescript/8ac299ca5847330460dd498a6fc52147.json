{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/savedObjects.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/savedObjects.ts","mtime":1567631711870},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nvar _this = this;\nimport * as tslib_1 from \"tslib\";\nimport { first, isEmpty, memoize } from 'lodash';\nimport chrome from 'ui/chrome';\nimport { callApi } from './callApi';\nexport var getAPMIndexPattern = memoize(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n    var apmIndexPatternTitle, res, apmSavedObject;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                apmIndexPatternTitle = chrome.getInjected('apmIndexPatternTitle');\n                return [4 /*yield*/, callApi({\n                        pathname: \"/api/saved_objects/_find\",\n                        query: {\n                            type: 'index-pattern',\n                            search: \"\\\"\" + apmIndexPatternTitle + \"\\\"\",\n                            search_fields: 'title',\n                            per_page: 200\n                        }\n                    })];\n            case 1:\n                res = _a.sent();\n                if (isEmpty(res.saved_objects)) {\n                    return [2 /*return*/];\n                }\n                apmSavedObject = first(res.saved_objects.filter(function (savedObject) { return savedObject.attributes.title === apmIndexPatternTitle; }));\n                return [2 /*return*/, apmSavedObject];\n        }\n    });\n}); });\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/savedObjects.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/savedObjects.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,iBA0CA;;AA1CA,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjD,OAAO,MAAM,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAcpC,MAAM,CAAC,IAAM,kBAAkB,GAAG,OAAO,CAAC;;;;;gBAClC,oBAAoB,GAAW,MAAM,CAAC,WAAW,CACrD,sBAAsB,CACvB,CAAC;gBACU,qBAAM,OAAO,CAA0B;wBACjD,QAAQ,EAAE,0BAA0B;wBACpC,KAAK,EAAE;4BACL,IAAI,EAAE,eAAe;4BACrB,MAAM,EAAE,OAAI,oBAAoB,OAAG;4BACnC,aAAa,EAAE,OAAO;4BACtB,QAAQ,EAAE,GAAG;yBACd;qBACF,CAAC,EAAA;;gBARI,GAAG,GAAG,SAQV;gBAEF,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;oBAC9B,sBAAO;iBACR;gBAEK,cAAc,GAAG,KAAK,CAC1B,GAAG,CAAC,aAAa,CAAC,MAAM,CACtB,UAAA,WAAW,IAAI,OAAA,WAAW,CAAC,UAAU,CAAC,KAAK,KAAK,oBAAoB,EAArD,CAAqD,CACrE,CACF,CAAC;gBAEF,sBAAO,cAAc,EAAC;;;KACvB,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { first, isEmpty, memoize } from 'lodash';\nimport chrome from 'ui/chrome';\nimport { callApi } from './callApi';\n\nexport interface ISavedObject {\n  attributes: {\n    title: string;\n  };\n  id: string;\n  type: string;\n}\n\ninterface ISavedObjectAPIResponse {\n  saved_objects: ISavedObject[];\n}\n\nexport const getAPMIndexPattern = memoize(async () => {\n  const apmIndexPatternTitle: string = chrome.getInjected(\n    'apmIndexPatternTitle'\n  );\n  const res = await callApi<ISavedObjectAPIResponse>({\n    pathname: `/api/saved_objects/_find`,\n    query: {\n      type: 'index-pattern',\n      search: `\"${apmIndexPatternTitle}\"`,\n      search_fields: 'title',\n      per_page: 200\n    }\n  });\n\n  if (isEmpty(res.saved_objects)) {\n    return;\n  }\n\n  const apmSavedObject = first(\n    res.saved_objects.filter(\n      savedObject => savedObject.attributes.title === apmIndexPatternTitle\n    )\n  );\n\n  return apmSavedObject;\n});\n"]}]}