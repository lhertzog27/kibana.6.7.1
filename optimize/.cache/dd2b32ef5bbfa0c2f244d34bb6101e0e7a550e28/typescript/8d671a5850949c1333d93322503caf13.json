{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/annotations/annotation_flyout/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/annotations/annotation_flyout/index.tsx","mtime":1567631712026},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React, { Component, Fragment } from 'react';\nimport { EuiButton, EuiButtonEmpty, EuiFlexGroup, EuiFlexItem, EuiFlyout, EuiFlyoutBody, EuiFlyoutFooter, EuiFlyoutHeader, EuiFormRow, EuiSpacer, EuiTextArea, EuiTitle, } from '@elastic/eui';\nimport { annotation$, annotationsRefresh$, } from '../../../services/annotations_service';\nimport { injectObservablesAsProps } from '../../../util/observable_utils';\nimport { AnnotationDescriptionList } from '../annotation_description_list';\nimport { DeleteAnnotationModal } from '../delete_annotation_modal';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport { toastNotifications } from 'ui/notify';\nimport { ml } from '../../../services/ml_api_service';\nvar AnnotationFlyoutIntl = /** @class */ (function (_super) {\n    tslib_1.__extends(AnnotationFlyoutIntl, _super);\n    function AnnotationFlyoutIntl() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isDeleteModalVisible: false,\n        };\n        _this.annotationSub = null;\n        _this.annotationTextChangeHandler = function (e) {\n            if (_this.props.annotation === null) {\n                return;\n            }\n            annotation$.next(tslib_1.__assign({}, _this.props.annotation, { annotation: e.target.value }));\n        };\n        _this.cancelEditingHandler = function () {\n            annotation$.next(null);\n        };\n        _this.deleteConfirmHandler = function () {\n            _this.setState({ isDeleteModalVisible: true });\n        };\n        _this.deleteHandler = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var _a, annotation, intl, err_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.props, annotation = _a.annotation, intl = _a.intl;\n                        if (annotation === null) {\n                            return [2 /*return*/];\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, ml.annotations.deleteAnnotation(annotation._id)];\n                    case 2:\n                        _b.sent();\n                        toastNotifications.addSuccess(intl.formatMessage({\n                            id: 'xpack.ml.timeSeriesExplorer.timeSeriesChart.deletedAnnotationNotificationMessage',\n                            defaultMessage: 'Deleted annotation for job with ID {jobId}.',\n                        }, { jobId: annotation.job_id }));\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _b.sent();\n                        toastNotifications.addDanger(intl.formatMessage({\n                            id: 'xpack.ml.timeSeriesExplorer.timeSeriesChart.errorWithDeletingAnnotationNotificationErrorMessage',\n                            defaultMessage: 'An error occurred deleting the annotation for job with ID {jobId}: {error}',\n                        }, { jobId: annotation.job_id, error: JSON.stringify(err_1) }));\n                        return [3 /*break*/, 4];\n                    case 4:\n                        this.closeDeleteModal();\n                        annotation$.next(null);\n                        annotationsRefresh$.next();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.closeDeleteModal = function () {\n            _this.setState({ isDeleteModalVisible: false });\n        };\n        _this.saveOrUpdateAnnotation = function () {\n            var _a = _this.props, annotation = _a.annotation, intl = _a.intl;\n            if (annotation === null) {\n                return;\n            }\n            annotation$.next(null);\n            ml.annotations\n                .indexAnnotation(annotation)\n                .then(function () {\n                annotationsRefresh$.next();\n                if (typeof annotation._id === 'undefined') {\n                    toastNotifications.addSuccess(intl.formatMessage({\n                        id: 'xpack.ml.timeSeriesExplorer.timeSeriesChart.addedAnnotationNotificationMessage',\n                        defaultMessage: 'Added an annotation for job with ID {jobId}.',\n                    }, { jobId: annotation.job_id }));\n                }\n                else {\n                    toastNotifications.addSuccess(intl.formatMessage({\n                        id: 'xpack.ml.timeSeriesExplorer.timeSeriesChart.updatedAnnotationNotificationMessage',\n                        defaultMessage: 'Updated annotation for job with ID {jobId}.',\n                    }, { jobId: annotation.job_id }));\n                }\n            })\n                .catch(function (resp) {\n                if (typeof annotation._id === 'undefined') {\n                    toastNotifications.addDanger(intl.formatMessage({\n                        id: 'xpack.ml.timeSeriesExplorer.timeSeriesChart.errorWithCreatingAnnotationNotificationErrorMessage',\n                        defaultMessage: 'An error occurred creating the annotation for job with ID {jobId}: {error}',\n                    }, { jobId: annotation.job_id, error: JSON.stringify(resp) }));\n                }\n                else {\n                    toastNotifications.addDanger(intl.formatMessage({\n                        id: 'xpack.ml.timeSeriesExplorer.timeSeriesChart.errorWithUpdatingAnnotationNotificationErrorMessage',\n                        defaultMessage: 'An error occurred updating the annotation for job with ID {jobId}: {error}',\n                    }, { jobId: annotation.job_id, error: JSON.stringify(resp) }));\n                }\n            });\n        };\n        return _this;\n    }\n    AnnotationFlyoutIntl.prototype.render = function () {\n        var annotation = this.props.annotation;\n        var isDeleteModalVisible = this.state.isDeleteModalVisible;\n        if (annotation === null) {\n            return null;\n        }\n        var isExistingAnnotation = typeof annotation._id !== 'undefined';\n        return (React.createElement(Fragment, null,\n            React.createElement(EuiFlyout, { onClose: this.cancelEditingHandler, size: \"s\", \"aria-labelledby\": \"Add annotation\" },\n                React.createElement(EuiFlyoutHeader, { hasBorder: true },\n                    React.createElement(EuiTitle, { size: \"s\" },\n                        React.createElement(\"h2\", { id: \"mlAnnotationFlyoutTitle\" }, isExistingAnnotation ? (React.createElement(FormattedMessage, { id: \"xpack.ml.timeSeriesExplorer.annotationFlyout.editAnnotationTitle\", defaultMessage: \"Edit annotation\" })) : (React.createElement(FormattedMessage, { id: \"xpack.ml.timeSeriesExplorer.annotationFlyout.addAnnotationTitle\", defaultMessage: \"Add annotation\" }))))),\n                React.createElement(EuiFlyoutBody, null,\n                    React.createElement(AnnotationDescriptionList, { annotation: annotation }),\n                    React.createElement(EuiSpacer, { size: \"m\" }),\n                    React.createElement(EuiFormRow, { label: React.createElement(FormattedMessage, { id: \"xpack.ml.timeSeriesExplorer.annotationFlyout.annotationTextLabel\", defaultMessage: \"Annotation text\" }), fullWidth: true },\n                        React.createElement(EuiTextArea, { fullWidth: true, isInvalid: annotation.annotation === '', onChange: this.annotationTextChangeHandler, placeholder: \"...\", value: annotation.annotation }))),\n                React.createElement(EuiFlyoutFooter, null,\n                    React.createElement(EuiFlexGroup, { justifyContent: \"spaceBetween\" },\n                        React.createElement(EuiFlexItem, { grow: false },\n                            React.createElement(EuiButtonEmpty, { iconType: \"cross\", onClick: this.cancelEditingHandler, flush: \"left\" },\n                                React.createElement(FormattedMessage, { id: \"xpack.ml.timeSeriesExplorer.annotationFlyout.cancelButtonLabel\", defaultMessage: \"Cancel\" }))),\n                        React.createElement(EuiFlexItem, { grow: false }, isExistingAnnotation && (React.createElement(EuiButtonEmpty, { color: \"danger\", onClick: this.deleteConfirmHandler },\n                            React.createElement(FormattedMessage, { id: \"xpack.ml.timeSeriesExplorer.annotationFlyout.deleteButtonLabel\", defaultMessage: \"Delete\" })))),\n                        React.createElement(EuiFlexItem, { grow: false },\n                            React.createElement(EuiButton, { fill: true, isDisabled: annotation.annotation === '', onClick: this.saveOrUpdateAnnotation }, isExistingAnnotation ? (React.createElement(FormattedMessage, { id: \"xpack.ml.timeSeriesExplorer.annotationFlyout.updateButtonLabel\", defaultMessage: \"Update\" })) : (React.createElement(FormattedMessage, { id: \"xpack.ml.timeSeriesExplorer.annotationFlyout.createButtonLabel\", defaultMessage: \"Create\" }))))))),\n            React.createElement(DeleteAnnotationModal, { cancelAction: this.closeDeleteModal, deleteAction: this.deleteHandler, isVisible: isDeleteModalVisible })));\n    };\n    return AnnotationFlyoutIntl;\n}(Component));\nexport var AnnotationFlyout = injectObservablesAsProps({ annotation: annotation$ }, injectI18n(AnnotationFlyoutIntl));\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/annotations/annotation_flyout/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/ml/public/components/annotations/annotation_flyout/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React, { Component, ComponentType, Fragment, ReactNode } from 'react';\nimport * as Rx from 'rxjs';\n\nimport {\n  EuiButton,\n  EuiButtonEmpty,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiFlyout,\n  EuiFlyoutBody,\n  EuiFlyoutFooter,\n  EuiFlyoutHeader,\n  EuiFormRow,\n  EuiSpacer,\n  EuiTextArea,\n  EuiTitle,\n} from '@elastic/eui';\n\nimport {\n  annotation$,\n  annotationsRefresh$,\n  AnnotationState,\n} from '../../../services/annotations_service';\nimport { injectObservablesAsProps } from '../../../util/observable_utils';\nimport { AnnotationDescriptionList } from '../annotation_description_list';\nimport { DeleteAnnotationModal } from '../delete_annotation_modal';\n\nimport { CommonProps } from '@elastic/eui';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport { InjectedIntlProps } from 'react-intl';\nimport { toastNotifications } from 'ui/notify';\n\nimport { ml } from '../../../services/ml_api_service';\n\ninterface Props {\n  annotation: AnnotationState;\n}\n\ninterface State {\n  isDeleteModalVisible: boolean;\n}\n\nclass AnnotationFlyoutIntl extends Component<CommonProps & Props & InjectedIntlProps> {\n  public state: State = {\n    isDeleteModalVisible: false,\n  };\n\n  public annotationSub: Rx.Subscription | null = null;\n\n  public annotationTextChangeHandler = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    if (this.props.annotation === null) {\n      return;\n    }\n\n    annotation$.next({\n      ...this.props.annotation,\n      annotation: e.target.value,\n    });\n  };\n\n  public cancelEditingHandler = () => {\n    annotation$.next(null);\n  };\n\n  public deleteConfirmHandler = () => {\n    this.setState({ isDeleteModalVisible: true });\n  };\n\n  public deleteHandler = async () => {\n    const { annotation, intl } = this.props;\n\n    if (annotation === null) {\n      return;\n    }\n\n    try {\n      await ml.annotations.deleteAnnotation(annotation._id);\n      toastNotifications.addSuccess(\n        intl.formatMessage(\n          {\n            id: 'xpack.ml.timeSeriesExplorer.timeSeriesChart.deletedAnnotationNotificationMessage',\n            defaultMessage: 'Deleted annotation for job with ID {jobId}.',\n          },\n          { jobId: annotation.job_id }\n        )\n      );\n    } catch (err) {\n      toastNotifications.addDanger(\n        intl.formatMessage(\n          {\n            id:\n              'xpack.ml.timeSeriesExplorer.timeSeriesChart.errorWithDeletingAnnotationNotificationErrorMessage',\n            defaultMessage:\n              'An error occurred deleting the annotation for job with ID {jobId}: {error}',\n          },\n          { jobId: annotation.job_id, error: JSON.stringify(err) }\n        )\n      );\n    }\n\n    this.closeDeleteModal();\n    annotation$.next(null);\n    annotationsRefresh$.next();\n  };\n\n  public closeDeleteModal = () => {\n    this.setState({ isDeleteModalVisible: false });\n  };\n\n  public saveOrUpdateAnnotation = () => {\n    const { annotation, intl } = this.props;\n\n    if (annotation === null) {\n      return;\n    }\n\n    annotation$.next(null);\n\n    ml.annotations\n      .indexAnnotation(annotation)\n      .then(() => {\n        annotationsRefresh$.next();\n        if (typeof annotation._id === 'undefined') {\n          toastNotifications.addSuccess(\n            intl.formatMessage(\n              {\n                id:\n                  'xpack.ml.timeSeriesExplorer.timeSeriesChart.addedAnnotationNotificationMessage',\n                defaultMessage: 'Added an annotation for job with ID {jobId}.',\n              },\n              { jobId: annotation.job_id }\n            )\n          );\n        } else {\n          toastNotifications.addSuccess(\n            intl.formatMessage(\n              {\n                id:\n                  'xpack.ml.timeSeriesExplorer.timeSeriesChart.updatedAnnotationNotificationMessage',\n                defaultMessage: 'Updated annotation for job with ID {jobId}.',\n              },\n              { jobId: annotation.job_id }\n            )\n          );\n        }\n      })\n      .catch(resp => {\n        if (typeof annotation._id === 'undefined') {\n          toastNotifications.addDanger(\n            intl.formatMessage(\n              {\n                id:\n                  'xpack.ml.timeSeriesExplorer.timeSeriesChart.errorWithCreatingAnnotationNotificationErrorMessage',\n                defaultMessage:\n                  'An error occurred creating the annotation for job with ID {jobId}: {error}',\n              },\n              { jobId: annotation.job_id, error: JSON.stringify(resp) }\n            )\n          );\n        } else {\n          toastNotifications.addDanger(\n            intl.formatMessage(\n              {\n                id:\n                  'xpack.ml.timeSeriesExplorer.timeSeriesChart.errorWithUpdatingAnnotationNotificationErrorMessage',\n                defaultMessage:\n                  'An error occurred updating the annotation for job with ID {jobId}: {error}',\n              },\n              { jobId: annotation.job_id, error: JSON.stringify(resp) }\n            )\n          );\n        }\n      });\n  };\n\n  public render(): ReactNode {\n    const { annotation } = this.props;\n    const { isDeleteModalVisible } = this.state;\n\n    if (annotation === null) {\n      return null;\n    }\n\n    const isExistingAnnotation = typeof annotation._id !== 'undefined';\n\n    return (\n      <Fragment>\n        <EuiFlyout onClose={this.cancelEditingHandler} size=\"s\" aria-labelledby=\"Add annotation\">\n          <EuiFlyoutHeader hasBorder>\n            <EuiTitle size=\"s\">\n              <h2 id=\"mlAnnotationFlyoutTitle\">\n                {isExistingAnnotation ? (\n                  <FormattedMessage\n                    id=\"xpack.ml.timeSeriesExplorer.annotationFlyout.editAnnotationTitle\"\n                    defaultMessage=\"Edit annotation\"\n                  />\n                ) : (\n                  <FormattedMessage\n                    id=\"xpack.ml.timeSeriesExplorer.annotationFlyout.addAnnotationTitle\"\n                    defaultMessage=\"Add annotation\"\n                  />\n                )}\n              </h2>\n            </EuiTitle>\n          </EuiFlyoutHeader>\n          <EuiFlyoutBody>\n            <AnnotationDescriptionList annotation={annotation} />\n            <EuiSpacer size=\"m\" />\n            <EuiFormRow\n              label={\n                <FormattedMessage\n                  id=\"xpack.ml.timeSeriesExplorer.annotationFlyout.annotationTextLabel\"\n                  defaultMessage=\"Annotation text\"\n                />\n              }\n              fullWidth\n            >\n              <EuiTextArea\n                fullWidth\n                isInvalid={annotation.annotation === ''}\n                onChange={this.annotationTextChangeHandler}\n                placeholder=\"...\"\n                value={annotation.annotation}\n              />\n            </EuiFormRow>\n          </EuiFlyoutBody>\n          <EuiFlyoutFooter>\n            <EuiFlexGroup justifyContent=\"spaceBetween\">\n              <EuiFlexItem grow={false}>\n                <EuiButtonEmpty iconType=\"cross\" onClick={this.cancelEditingHandler} flush=\"left\">\n                  <FormattedMessage\n                    id=\"xpack.ml.timeSeriesExplorer.annotationFlyout.cancelButtonLabel\"\n                    defaultMessage=\"Cancel\"\n                  />\n                </EuiButtonEmpty>\n              </EuiFlexItem>\n              <EuiFlexItem grow={false}>\n                {isExistingAnnotation && (\n                  <EuiButtonEmpty color=\"danger\" onClick={this.deleteConfirmHandler}>\n                    <FormattedMessage\n                      id=\"xpack.ml.timeSeriesExplorer.annotationFlyout.deleteButtonLabel\"\n                      defaultMessage=\"Delete\"\n                    />\n                  </EuiButtonEmpty>\n                )}\n              </EuiFlexItem>\n              <EuiFlexItem grow={false}>\n                <EuiButton\n                  fill\n                  isDisabled={annotation.annotation === ''}\n                  onClick={this.saveOrUpdateAnnotation}\n                >\n                  {isExistingAnnotation ? (\n                    <FormattedMessage\n                      id=\"xpack.ml.timeSeriesExplorer.annotationFlyout.updateButtonLabel\"\n                      defaultMessage=\"Update\"\n                    />\n                  ) : (\n                    <FormattedMessage\n                      id=\"xpack.ml.timeSeriesExplorer.annotationFlyout.createButtonLabel\"\n                      defaultMessage=\"Create\"\n                    />\n                  )}\n                </EuiButton>\n              </EuiFlexItem>\n            </EuiFlexGroup>\n          </EuiFlyoutFooter>\n        </EuiFlyout>\n        <DeleteAnnotationModal\n          cancelAction={this.closeDeleteModal}\n          deleteAction={this.deleteHandler}\n          isVisible={isDeleteModalVisible}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport const AnnotationFlyout = injectObservablesAsProps({ annotation: annotation$ }, (injectI18n(\n  AnnotationFlyoutIntl\n) as any) as ComponentType);\n"]}]}