{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/containers/with_url_state.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/containers/with_url_state.tsx","mtime":1567631711881},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { parse, stringify } from 'querystring';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nvar WithURLStateComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(WithURLStateComponent, _super);\n    function WithURLStateComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.historyListener = null;\n        _this.setURLState = function (state) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var newState, pastState, search, newLocation;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        pastState = this.URLState;\n                        if (!(typeof state === 'function')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, state(pastState)];\n                    case 1:\n                        newState = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        newState = state;\n                        _a.label = 3;\n                    case 3:\n                        search = stringify(tslib_1.__assign({}, pastState, newState));\n                        newLocation = tslib_1.__assign({}, this.props.history.location, { search: search });\n                        this.props.history.replace(newLocation);\n                        this.forceUpdate();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.goTo = function (path) {\n            _this.props.history.push({\n                pathname: path,\n                search: _this.props.history.location.search,\n            });\n        };\n        return _this;\n    }\n    Object.defineProperty(WithURLStateComponent.prototype, \"URLState\", {\n        get: function () {\n            // slice because parse does not account for the initial ? in the search string\n            return parse(decodeURIComponent(this.props.history.location.search).substring(1));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WithURLStateComponent.prototype.componentWillUnmount = function () {\n        if (this.historyListener) {\n            this.historyListener();\n        }\n    };\n    WithURLStateComponent.prototype.render = function () {\n        return this.props.children({\n            goTo: this.goTo,\n            setUrlState: this.setURLState,\n            urlState: this.URLState || {},\n        });\n    };\n    return WithURLStateComponent;\n}(React.Component));\nexport { WithURLStateComponent };\nexport var WithURLState = withRouter(WithURLStateComponent);\nexport function withUrlState(UnwrappedComponent) {\n    return function (origProps) {\n        return (React.createElement(WithURLState, null, function (URLProps) { return React.createElement(UnwrappedComponent, tslib_1.__assign({}, URLProps, origProps)); }));\n    };\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/containers/with_url_state.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/containers/with_url_state.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAsB9C;IAAoE,iDAEnE;IAFD;QAAA,qEAyDC;QAjDS,qBAAe,GAAwB,IAAI,CAAC;QAe5C,iBAAW,GAAG,UACpB,KAGoC;;;;;wBAG9B,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;6BAC5B,CAAA,OAAO,KAAK,KAAK,UAAU,CAAA,EAA3B,wBAA2B;wBAClB,qBAAM,KAAK,CAAC,SAAS,CAAC,EAAA;;wBAAjC,QAAQ,GAAG,SAAsB,CAAC;;;wBAElC,QAAQ,GAAG,KAAK,CAAC;;;wBAGb,MAAM,GAAW,SAAS,sBAC1B,SAAiB,EACjB,QAAgB,EACpB,CAAC;wBAEG,WAAW,wBACZ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,IAC9B,MAAM,QAAA,GACP,CAAC;wBAEF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;wBACxC,IAAI,CAAC,WAAW,EAAE,CAAC;;;;aACpB,CAAC;QAEM,UAAI,GAAG,UAAC,IAAY;YAC1B,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;gBACtB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM;aAC3C,CAAC,CAAC;QACL,CAAC,CAAC;;IACJ,CAAC;IAtDC,sBAAY,2CAAQ;aAApB;YACE,8EAA8E;YAC9E,OAAO,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAa,CAAC;QAChG,CAAC;;;OAAA;IAIM,oDAAoB,GAA3B;QACE,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;IACH,CAAC;IACM,sCAAM,GAAb;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YACzB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,EAAE;SAC9B,CAAC,CAAC;IACL,CAAC;IAoCH,4BAAC;AAAD,CAAC,AAzDD,CAAoE,KAAK,CAAC,SAAS,GAyDlF;;AACD,MAAM,CAAC,IAAM,YAAY,GAAG,UAAU,CAAM,qBAAqB,CAAC,CAAC;AAEnE,MAAM,UAAU,YAAY,CAC1B,kBAA2D;IAE3D,OAAO,UAAC,SAAa;QACnB,OAAO,CACL,oBAAC,YAAY,QACV,UAAC,QAAuB,IAAK,OAAA,oBAAC,kBAAkB,uBAAK,QAAQ,EAAM,SAAS,EAAI,EAAnD,CAAmD,CACpE,CAChB,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { parse, stringify } from 'querystring';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FlatObject } from '../frontend_types';\nimport { RendererFunction } from '../utils/typed_react';\n\ntype StateCallback<T> = (previousState: T) => T;\n\nexport interface URLStateProps<URLState = object> {\n  goTo: (path: string) => void;\n  setUrlState: (\n    newState:\n      | Partial<FlatObject<URLState>>\n      | StateCallback<URLState>\n      | Promise<StateCallback<URLState>>\n  ) => void;\n  urlState: URLState;\n}\ninterface ComponentProps<URLState extends object> {\n  history: any;\n  match: any;\n  children: RendererFunction<URLStateProps<URLState>>;\n}\n\nexport class WithURLStateComponent<URLState extends object> extends React.Component<\n  ComponentProps<URLState>\n> {\n  private get URLState(): URLState {\n    // slice because parse does not account for the initial ? in the search string\n    return parse(decodeURIComponent(this.props.history.location.search).substring(1)) as URLState;\n  }\n\n  private historyListener: (() => void) | null = null;\n\n  public componentWillUnmount() {\n    if (this.historyListener) {\n      this.historyListener();\n    }\n  }\n  public render() {\n    return this.props.children({\n      goTo: this.goTo,\n      setUrlState: this.setURLState,\n      urlState: this.URLState || {},\n    });\n  }\n\n  private setURLState = async (\n    state:\n      | Partial<FlatObject<URLState>>\n      | StateCallback<URLState>\n      | Promise<StateCallback<URLState>>\n  ) => {\n    let newState;\n    const pastState = this.URLState;\n    if (typeof state === 'function') {\n      newState = await state(pastState);\n    } else {\n      newState = state;\n    }\n\n    const search: string = stringify({\n      ...(pastState as any),\n      ...(newState as any),\n    });\n\n    const newLocation = {\n      ...this.props.history.location,\n      search,\n    };\n\n    this.props.history.replace(newLocation);\n    this.forceUpdate();\n  };\n\n  private goTo = (path: string) => {\n    this.props.history.push({\n      pathname: path,\n      search: this.props.history.location.search,\n    });\n  };\n}\nexport const WithURLState = withRouter<any>(WithURLStateComponent);\n\nexport function withUrlState<OP>(\n  UnwrappedComponent: React.ComponentType<OP & URLStateProps>\n): React.SFC<any> {\n  return (origProps: OP) => {\n    return (\n      <WithURLState>\n        {(URLProps: URLStateProps) => <UnwrappedComponent {...URLProps} {...origProps} />}\n      </WithURLState>\n    );\n  };\n}\n"]}]}