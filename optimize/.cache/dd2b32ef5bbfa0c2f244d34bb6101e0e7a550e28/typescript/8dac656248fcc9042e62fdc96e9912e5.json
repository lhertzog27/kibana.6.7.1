{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/pod.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/pod.ts","mtime":1567631711986},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { i18n } from '@kbn/i18n';\nimport { InfraMetric } from '../../../graphql/types';\nimport { InfraFormatterType } from '../../../lib/lib';\nimport { nginxLayoutCreator } from './nginx';\nimport { InfraMetricLayoutSectionType, InfraMetricLayoutVisualizationType, } from './types';\nexport var podLayoutCreator = function (theme) { return tslib_1.__spread([\n    {\n        id: 'podOverview',\n        label: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.layoutLabel', {\n            defaultMessage: 'Pod',\n        }),\n        sections: [\n            {\n                id: InfraMetric.podOverview,\n                label: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.overviewSection.sectionLabel', {\n                    defaultMessage: 'Overview',\n                }),\n                requires: ['kubernetes.pod'],\n                type: InfraMetricLayoutSectionType.gauges,\n                visConfig: {\n                    seriesOverrides: {\n                        cpu: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.overviewSection.cpuUsageSeriesLabel', {\n                                defaultMessage: 'CPU Usage',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.percent,\n                            gaugeMax: 1,\n                        },\n                        memory: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.overviewSection.memoryUsageSeriesLabel', {\n                                defaultMessage: 'Memory Usage',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.percent,\n                            gaugeMax: 1,\n                        },\n                        rx: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.overviewSection.inboundRXSeriesLabel', {\n                                defaultMessage: 'Inbound (RX)',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.bits,\n                            formatterTemplate: '{{value}}/s',\n                        },\n                        tx: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.overviewSection.outboundTXSeriesLabel', {\n                                defaultMessage: 'Outbound (TX)',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.bits,\n                            formatterTemplate: '{{value}}/s',\n                        },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.podCpuUsage,\n                label: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.cpuUsageSection.sectionLabel', {\n                    defaultMessage: 'CPU Usage',\n                }),\n                requires: ['kubernetes.pod'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.percent,\n                    seriesOverrides: {\n                        cpu: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.podMemoryUsage,\n                label: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.memoryUsageSection.sectionLabel', {\n                    defaultMessage: 'Memory Usage',\n                }),\n                requires: ['kubernetes.pod'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.percent,\n                    seriesOverrides: {\n                        memory: {\n                            color: theme.eui.euiColorVis1,\n                            type: InfraMetricLayoutVisualizationType.area,\n                        },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.podNetworkTraffic,\n                label: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.networkTrafficSection.sectionLabel', {\n                    defaultMessage: 'Network Traffic',\n                }),\n                requires: ['kubernetes.pod'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.bits,\n                    formatterTemplate: '{{value}}/s',\n                    type: InfraMetricLayoutVisualizationType.area,\n                    seriesOverrides: {\n                        rx: {\n                            color: theme.eui.euiColorVis1,\n                            name: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.networkTrafficSection.networkRxRateSeriesLabel', {\n                                defaultMessage: 'in',\n                            }),\n                        },\n                        tx: {\n                            color: theme.eui.euiColorVis2,\n                            name: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.networkTrafficSection.networkTxRateSeriesLabel', {\n                                defaultMessage: 'out',\n                            }),\n                        },\n                    },\n                },\n            },\n        ],\n    }\n], nginxLayoutCreator(theme)); };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/pod.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/pod.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { i18n } from '@kbn/i18n';\nimport { InfraMetric } from '../../../graphql/types';\nimport { InfraFormatterType } from '../../../lib/lib';\nimport { nginxLayoutCreator } from './nginx';\nimport {\n  InfraMetricLayoutCreator,\n  InfraMetricLayoutSectionType,\n  InfraMetricLayoutVisualizationType,\n} from './types';\n\nexport const podLayoutCreator: InfraMetricLayoutCreator = theme => [\n  {\n    id: 'podOverview',\n    label: i18n.translate('xpack.infra.metricDetailPage.podMetricsLayout.layoutLabel', {\n      defaultMessage: 'Pod',\n    }),\n    sections: [\n      {\n        id: InfraMetric.podOverview,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.podMetricsLayout.overviewSection.sectionLabel',\n          {\n            defaultMessage: 'Overview',\n          }\n        ),\n        requires: ['kubernetes.pod'],\n        type: InfraMetricLayoutSectionType.gauges,\n        visConfig: {\n          seriesOverrides: {\n            cpu: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.podMetricsLayout.overviewSection.cpuUsageSeriesLabel',\n                {\n                  defaultMessage: 'CPU Usage',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.percent,\n              gaugeMax: 1,\n            },\n            memory: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.podMetricsLayout.overviewSection.memoryUsageSeriesLabel',\n                {\n                  defaultMessage: 'Memory Usage',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.percent,\n              gaugeMax: 1,\n            },\n            rx: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.podMetricsLayout.overviewSection.inboundRXSeriesLabel',\n                {\n                  defaultMessage: 'Inbound (RX)',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.bits,\n              formatterTemplate: '{{value}}/s',\n            },\n            tx: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.podMetricsLayout.overviewSection.outboundTXSeriesLabel',\n                {\n                  defaultMessage: 'Outbound (TX)',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.bits,\n              formatterTemplate: '{{value}}/s',\n            },\n          },\n        },\n      },\n      {\n        id: InfraMetric.podCpuUsage,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.podMetricsLayout.cpuUsageSection.sectionLabel',\n          {\n            defaultMessage: 'CPU Usage',\n          }\n        ),\n        requires: ['kubernetes.pod'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.percent,\n          seriesOverrides: {\n            cpu: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n          },\n        },\n      },\n      {\n        id: InfraMetric.podMemoryUsage,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.podMetricsLayout.memoryUsageSection.sectionLabel',\n          {\n            defaultMessage: 'Memory Usage',\n          }\n        ),\n        requires: ['kubernetes.pod'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.percent,\n          seriesOverrides: {\n            memory: {\n              color: theme.eui.euiColorVis1,\n              type: InfraMetricLayoutVisualizationType.area,\n            },\n          },\n        },\n      },\n      {\n        id: InfraMetric.podNetworkTraffic,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.podMetricsLayout.networkTrafficSection.sectionLabel',\n          {\n            defaultMessage: 'Network Traffic',\n          }\n        ),\n        requires: ['kubernetes.pod'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.bits,\n          formatterTemplate: '{{value}}/s',\n          type: InfraMetricLayoutVisualizationType.area,\n          seriesOverrides: {\n            rx: {\n              color: theme.eui.euiColorVis1,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.podMetricsLayout.networkTrafficSection.networkRxRateSeriesLabel',\n                {\n                  defaultMessage: 'in',\n                }\n              ),\n            },\n            tx: {\n              color: theme.eui.euiColorVis2,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.podMetricsLayout.networkTrafficSection.networkTxRateSeriesLabel',\n                {\n                  defaultMessage: 'out',\n                }\n              ),\n            },\n          },\n        },\n      },\n    ],\n  },\n  ...nginxLayoutCreator(theme),\n];\n"]}]}