{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/table/controls/option_control.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/table/controls/option_control.tsx","mtime":1567631711880},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React from 'react';\nimport { ActionComponentType } from '../action_schema';\nimport { ActionControl } from './action_control';\nimport { TagBadgeList } from './tag_badge_list';\nexport var OptionControl = function (props) {\n    switch (props.type) {\n        case ActionComponentType.Action:\n            if (!props.action) {\n                throw Error('Action cannot be undefined');\n            }\n            return (React.createElement(ActionControl, { actionHandler: props.actionHandler, action: props.action, danger: props.danger, name: props.name, showWarning: props.showWarning, warningHeading: props.warningHeading, warningMessage: props.warningMessage, disabled: props.disabled }));\n        case ActionComponentType.TagBadgeList:\n            if (!props.actionDataKey) {\n                throw Error('actionDataKey cannot be undefined');\n            }\n            if (!props.actionData) {\n                throw Error('actionData cannot be undefined');\n            }\n            return (React.createElement(TagBadgeList, { actionHandler: props.actionHandler, action: props.action, name: props.name, items: props.actionData[props.actionDataKey], disabled: props.disabled }));\n    }\n    return React.createElement(\"div\", null, \"Invalid config\");\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/table/controls/option_control.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/table/controls/option_control.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,mBAAmB,EAAiB,MAAM,kBAAkB,CAAC;AAEtE,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAUhD,MAAM,CAAC,IAAM,aAAa,GAA8B,UAAC,KAAqB;IAC5E,QAAQ,KAAK,CAAC,IAAI,EAAE;QAClB,KAAK,mBAAmB,CAAC,MAAM;YAC7B,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACjB,MAAM,KAAK,CAAC,4BAA4B,CAAC,CAAC;aAC3C;YACD,OAAO,CACL,oBAAC,aAAa,IACZ,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,cAAc,EAAE,KAAK,CAAC,cAAc,EACpC,cAAc,EAAE,KAAK,CAAC,cAAc,EACpC,QAAQ,EAAE,KAAK,CAAC,QAAQ,GACxB,CACH,CAAC;QACJ,KAAK,mBAAmB,CAAC,YAAY;YACnC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBACxB,MAAM,KAAK,CAAC,mCAAmC,CAAC,CAAC;aAClD;YACD,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrB,MAAM,KAAK,CAAC,gCAAgC,CAAC,CAAC;aAC/C;YACD,OAAO,CACL,oBAAC,YAAY,IACX,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,EAC5C,QAAQ,EAAE,KAAK,CAAC,QAAQ,GACxB,CACH,CAAC;KACL;IACD,OAAO,kDAAyB,CAAC;AACnC,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\nimport { ActionComponentType, ControlSchema } from '../action_schema';\nimport { AssignmentActionType } from '../table';\nimport { ActionControl } from './action_control';\nimport { TagBadgeList } from './tag_badge_list';\n\ninterface ComponentProps extends ControlSchema {\n  actionData?: {\n    [key: string]: any;\n  };\n  disabled: boolean;\n  actionHandler(action: AssignmentActionType, payload?: any): void;\n}\n\nexport const OptionControl: React.SFC<ComponentProps> = (props: ComponentProps) => {\n  switch (props.type) {\n    case ActionComponentType.Action:\n      if (!props.action) {\n        throw Error('Action cannot be undefined');\n      }\n      return (\n        <ActionControl\n          actionHandler={props.actionHandler}\n          action={props.action}\n          danger={props.danger}\n          name={props.name}\n          showWarning={props.showWarning}\n          warningHeading={props.warningHeading}\n          warningMessage={props.warningMessage}\n          disabled={props.disabled}\n        />\n      );\n    case ActionComponentType.TagBadgeList:\n      if (!props.actionDataKey) {\n        throw Error('actionDataKey cannot be undefined');\n      }\n      if (!props.actionData) {\n        throw Error('actionData cannot be undefined');\n      }\n      return (\n        <TagBadgeList\n          actionHandler={props.actionHandler}\n          action={props.action}\n          name={props.name}\n          items={props.actionData[props.actionDataKey]}\n          disabled={props.disabled}\n        />\n      );\n  }\n  return <div>Invalid config</div>;\n};\n"]}]}