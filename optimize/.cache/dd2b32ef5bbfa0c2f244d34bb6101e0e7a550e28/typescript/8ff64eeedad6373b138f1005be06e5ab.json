{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/visualize/loader/visualize_data_loader.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/visualize/loader/visualize_data_loader.ts","mtime":1567631711782},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\n/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isEqual } from 'lodash';\nimport { VisRequestHandlersRegistryProvider as RequestHandlersProvider } from '../../registry/vis_request_handlers';\nimport { VisResponseHandlersRegistryProvider as ResponseHandlerProvider } from '../../registry/vis_response_handlers';\n// @ts-ignore No typing present\nimport { isTermSizeZeroError } from '../../elasticsearch_errors';\nimport { toastNotifications } from 'ui/notify';\nfunction getHandler(from, type) {\n    if (typeof type === 'function') {\n        return type;\n    }\n    var handlerDesc = from.find(function (handler) { return handler.name === type; });\n    if (!handlerDesc) {\n        throw new Error(\"Could not find handler \\\"\" + type + \"\\\".\");\n    }\n    return handlerDesc.handler;\n}\nvar VisualizeDataLoader = /** @class */ (function () {\n    function VisualizeDataLoader(vis, Private) {\n        this.vis = vis;\n        var _a = vis.type, requestHandler = _a.requestHandler, responseHandler = _a.responseHandler;\n        var requestHandlers = Private(RequestHandlersProvider);\n        var responseHandlers = Private(ResponseHandlerProvider);\n        this.requestHandler = getHandler(requestHandlers, requestHandler);\n        this.responseHandler = getHandler(responseHandlers, responseHandler);\n    }\n    VisualizeDataLoader.prototype.fetch = function (params) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var minimalColumns, filters, savedFilters, query, requestHandlerResponse, canSkipResponseHandler, _a, error_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.vis.filters = { timeRange: params.timeRange };\n                        this.vis.requestError = undefined;\n                        this.vis.showRequestError = false;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 5, , 6]);\n                        minimalColumns = typeof this.vis.params.showMetricsAtAllLevels !== 'undefined'\n                            ? !this.vis.params.showMetricsAtAllLevels\n                            : !this.vis.isHierarchical();\n                        filters = params.filters || [];\n                        savedFilters = params.searchSource.getField('filter') || [];\n                        query = params.query || params.searchSource.getField('query');\n                        return [4 /*yield*/, this.requestHandler(tslib_1.__assign({ partialRows: this.vis.type.requiresPartialRows || this.vis.params.showPartialRows, minimalColumns: minimalColumns, metricsAtAllLevels: this.vis.isHierarchical(), visParams: this.vis.params }, params, { query: query, filters: filters.concat(savedFilters).filter(function (f) { return !f.meta.disabled; }) }))];\n                    case 2:\n                        requestHandlerResponse = _b.sent();\n                        canSkipResponseHandler = this.previousRequestHandlerResponse &&\n                            this.previousRequestHandlerResponse === requestHandlerResponse &&\n                            this.previousVisState &&\n                            isEqual(this.previousVisState, this.vis.getState());\n                        this.previousVisState = this.vis.getState();\n                        this.previousRequestHandlerResponse = requestHandlerResponse;\n                        if (!!canSkipResponseHandler) return [3 /*break*/, 4];\n                        _a = this;\n                        return [4 /*yield*/, Promise.resolve(this.responseHandler(requestHandlerResponse))];\n                    case 3:\n                        _a.visData = _b.sent();\n                        _b.label = 4;\n                    case 4: return [2 /*return*/, this.visData];\n                    case 5:\n                        error_1 = _b.sent();\n                        params.searchSource.cancelQueued();\n                        this.vis.requestError = error_1;\n                        this.vis.showRequestError =\n                            error_1.type && ['NO_OP_SEARCH_STRATEGY', 'UNSUPPORTED_QUERY'].includes(error_1.type);\n                        // tslint:disable-next-line\n                        console.error(error_1);\n                        if (isTermSizeZeroError(error_1)) {\n                            return [2 /*return*/, toastNotifications.addDanger(\"Your visualization ('\" + this.vis.title + \"') has an error: it has a term \" +\n                                    \"aggregation with a size of 0. Please set it to a number greater than 0 to resolve \" +\n                                    \"the error.\")];\n                        }\n                        toastNotifications.addDanger({\n                            title: 'Error in visualization',\n                            text: error_1.message,\n                        });\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return VisualizeDataLoader;\n}());\nexport { VisualizeDataLoader };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/visualize/loader/visualize_data_loader.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/visualize/loader/visualize_data_loader.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isEqual } from 'lodash';\n\nimport { VisRequestHandlersRegistryProvider as RequestHandlersProvider } from '../../registry/vis_request_handlers';\nimport { VisResponseHandlersRegistryProvider as ResponseHandlerProvider } from '../../registry/vis_response_handlers';\n\nimport { IPrivate } from '../../private';\nimport {\n  RequestHandler,\n  RequestHandlerDescription,\n  RequestHandlerParams,\n  ResponseHandler,\n  ResponseHandlerDescription,\n  Vis,\n} from '../../vis';\n\n// @ts-ignore No typing present\nimport { isTermSizeZeroError } from '../../elasticsearch_errors';\n\nimport { toastNotifications } from 'ui/notify';\n\nfunction getHandler<T extends RequestHandler | ResponseHandler>(\n  from: Array<{ name: string; handler: T }>,\n  type: string | T\n): T {\n  if (typeof type === 'function') {\n    return type;\n  }\n  const handlerDesc = from.find(handler => handler.name === type);\n  if (!handlerDesc) {\n    throw new Error(`Could not find handler \"${type}\".`);\n  }\n  return handlerDesc.handler;\n}\n\nexport class VisualizeDataLoader {\n  private requestHandler: RequestHandler;\n  private responseHandler: ResponseHandler;\n\n  private visData: any;\n  private previousVisState: any;\n  private previousRequestHandlerResponse: any;\n\n  constructor(private readonly vis: Vis, Private: IPrivate) {\n    const { requestHandler, responseHandler } = vis.type;\n\n    const requestHandlers: RequestHandlerDescription[] = Private(RequestHandlersProvider);\n    const responseHandlers: ResponseHandlerDescription[] = Private(ResponseHandlerProvider);\n    this.requestHandler = getHandler(requestHandlers, requestHandler);\n    this.responseHandler = getHandler(responseHandlers, responseHandler);\n  }\n\n  public async fetch(params: RequestHandlerParams): Promise<any> {\n    this.vis.filters = { timeRange: params.timeRange };\n    this.vis.requestError = undefined;\n    this.vis.showRequestError = false;\n\n    try {\n      // Vis types that have a `showMetricsAtAllLevels` param (e.g. data table) should tell\n      // tabify whether to return columns for each bucket based on the param value. Vis types\n      // without this param should default to returning all columns if they are hierarchical.\n      const minimalColumns =\n        typeof this.vis.params.showMetricsAtAllLevels !== 'undefined'\n          ? !this.vis.params.showMetricsAtAllLevels\n          : !this.vis.isHierarchical();\n\n      const filters = params.filters || [];\n      const savedFilters = params.searchSource.getField('filter') || [];\n\n      const query = params.query || params.searchSource.getField('query');\n\n      // searchSource is only there for courier request handler\n      const requestHandlerResponse = await this.requestHandler({\n        partialRows: this.vis.type.requiresPartialRows || this.vis.params.showPartialRows,\n        minimalColumns,\n        metricsAtAllLevels: this.vis.isHierarchical(),\n        visParams: this.vis.params,\n        ...params,\n        query,\n        filters: filters.concat(savedFilters).filter(f => !f.meta.disabled),\n      });\n\n      // No need to call the response handler when there have been no data nor has been there changes\n      // in the vis-state (response handler does not depend on uiStat\n      const canSkipResponseHandler =\n        this.previousRequestHandlerResponse &&\n        this.previousRequestHandlerResponse === requestHandlerResponse &&\n        this.previousVisState &&\n        isEqual(this.previousVisState, this.vis.getState());\n\n      this.previousVisState = this.vis.getState();\n      this.previousRequestHandlerResponse = requestHandlerResponse;\n\n      if (!canSkipResponseHandler) {\n        this.visData = await Promise.resolve(this.responseHandler(requestHandlerResponse));\n      }\n      return this.visData;\n    } catch (error) {\n      params.searchSource.cancelQueued();\n\n      this.vis.requestError = error;\n      this.vis.showRequestError =\n        error.type && ['NO_OP_SEARCH_STRATEGY', 'UNSUPPORTED_QUERY'].includes(error.type);\n\n      // tslint:disable-next-line\n      console.error(error);\n\n      if (isTermSizeZeroError(error)) {\n        return toastNotifications.addDanger(\n          `Your visualization ('${this.vis.title}') has an error: it has a term ` +\n            `aggregation with a size of 0. Please set it to a number greater than 0 to resolve ` +\n            `the error.`\n        );\n      }\n\n      toastNotifications.addDanger({\n        title: 'Error in visualization',\n        text: error.message,\n      });\n    }\n  }\n}\n"]}]}