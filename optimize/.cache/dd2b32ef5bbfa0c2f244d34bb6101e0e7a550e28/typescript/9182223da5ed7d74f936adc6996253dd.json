{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/error_list.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/error_list.tsx","mtime":1567631712328},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n// @ts-ignore missing typings\nimport { EuiInMemoryTable, EuiPanel, EuiTitle } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport moment from 'moment';\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nexport var ErrorList = function (_a) {\n    var loading = _a.loading, errorList = _a.errorList;\n    return (React.createElement(Fragment, null,\n        React.createElement(EuiTitle, { size: \"xs\" },\n            React.createElement(\"h5\", null,\n                React.createElement(FormattedMessage, { id: \"xpack.uptime.errorList.title\", defaultMessage: \"Error list\" }))),\n        React.createElement(EuiPanel, null,\n            React.createElement(EuiInMemoryTable, { loading: loading, items: errorList, columns: [\n                    {\n                        field: 'type',\n                        name: i18n.translate('xpack.uptime.errorList.errorTypeColumnLabel', {\n                            defaultMessage: 'Error type',\n                        }),\n                    },\n                    {\n                        field: 'monitorId',\n                        name: i18n.translate('xpack.uptime.errorList.monitorIdColumnLabel', {\n                            defaultMessage: 'Monitor ID',\n                        }),\n                        render: function (id) { return React.createElement(Link, { to: \"/monitor/\" + id }, id); },\n                        width: '25%',\n                    },\n                    {\n                        field: 'count',\n                        name: i18n.translate('xpack.uptime.errorList.CountColumnLabel', {\n                            defaultMessage: 'Count',\n                        }),\n                    },\n                    {\n                        field: 'timestamp',\n                        name: i18n.translate('xpack.uptime.errorList.latestErrorColumnLabel', {\n                            defaultMessage: 'Latest error',\n                        }),\n                        render: function (timestamp) { return moment(timestamp).fromNow(); },\n                    },\n                    {\n                        field: 'statusCode',\n                        name: i18n.translate('xpack.uptime.errorList.statusCodeColumnLabel', {\n                            defaultMessage: 'Status code',\n                        }),\n                    },\n                    {\n                        field: 'latestMessage',\n                        name: i18n.translate('xpack.uptime.errorList.latestMessageColumnLabel', {\n                            defaultMessage: 'Latest message',\n                        }),\n                        width: '40%',\n                    },\n                ], pagination: { initialPageSize: 10, pageSizeOptions: [5, 10, 20, 50] } }))));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/error_list.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/error_list.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,6BAA6B;AAC7B,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACpE,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAQxC,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,EAAsC;QAApC,oBAAO,EAAE,wBAAS;IAAuB,OAAA,CACnE,oBAAC,QAAQ;QACP,oBAAC,QAAQ,IAAC,IAAI,EAAC,IAAI;YACjB;gBACE,oBAAC,gBAAgB,IAAC,EAAE,EAAC,8BAA8B,EAAC,cAAc,EAAC,YAAY,GAAG,CAC/E,CACI;QACX,oBAAC,QAAQ;YACP,oBAAC,gBAAgB,IACf,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,SAAS,EAChB,OAAO,EAAE;oBACP;wBACE,KAAK,EAAE,MAAM;wBACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,6CAA6C,EAAE;4BAClE,cAAc,EAAE,YAAY;yBAC7B,CAAC;qBACH;oBACD;wBACE,KAAK,EAAE,WAAW;wBAClB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,6CAA6C,EAAE;4BAClE,cAAc,EAAE,YAAY;yBAC7B,CAAC;wBACF,MAAM,EAAE,UAAC,EAAU,IAAK,OAAA,oBAAC,IAAI,IAAC,EAAE,EAAE,cAAY,EAAI,IAAG,EAAE,CAAQ,EAAvC,CAAuC;wBAC/D,KAAK,EAAE,KAAK;qBACb;oBACD;wBACE,KAAK,EAAE,OAAO;wBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,yCAAyC,EAAE;4BAC9D,cAAc,EAAE,OAAO;yBACxB,CAAC;qBACH;oBACD;wBACE,KAAK,EAAE,WAAW;wBAClB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,+CAA+C,EAAE;4BACpE,cAAc,EAAE,cAAc;yBAC/B,CAAC;wBACF,MAAM,EAAE,UAAC,SAAiB,IAAK,OAAA,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAA3B,CAA2B;qBAC3D;oBACD;wBACE,KAAK,EAAE,YAAY;wBACnB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,8CAA8C,EAAE;4BACnE,cAAc,EAAE,aAAa;yBAC9B,CAAC;qBACH;oBACD;wBACE,KAAK,EAAE,eAAe;wBACtB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,iDAAiD,EAAE;4BACtE,cAAc,EAAE,gBAAgB;yBACjC,CAAC;wBACF,KAAK,EAAE,KAAK;qBACb;iBACF,EACD,UAAU,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GACrE,CACO,CACF,CACZ;AAzDoE,CAyDpE,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n// @ts-ignore missing typings\nimport { EuiInMemoryTable, EuiPanel, EuiTitle } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport moment from 'moment';\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ErrorListItem } from '../../../common/graphql/types';\n\ninterface ErrorListProps {\n  loading: boolean;\n  errorList: ErrorListItem[];\n}\n\nexport const ErrorList = ({ loading, errorList }: ErrorListProps) => (\n  <Fragment>\n    <EuiTitle size=\"xs\">\n      <h5>\n        <FormattedMessage id=\"xpack.uptime.errorList.title\" defaultMessage=\"Error list\" />\n      </h5>\n    </EuiTitle>\n    <EuiPanel>\n      <EuiInMemoryTable\n        loading={loading}\n        items={errorList}\n        columns={[\n          {\n            field: 'type',\n            name: i18n.translate('xpack.uptime.errorList.errorTypeColumnLabel', {\n              defaultMessage: 'Error type',\n            }),\n          },\n          {\n            field: 'monitorId',\n            name: i18n.translate('xpack.uptime.errorList.monitorIdColumnLabel', {\n              defaultMessage: 'Monitor ID',\n            }),\n            render: (id: string) => <Link to={`/monitor/${id}`}>{id}</Link>,\n            width: '25%',\n          },\n          {\n            field: 'count',\n            name: i18n.translate('xpack.uptime.errorList.CountColumnLabel', {\n              defaultMessage: 'Count',\n            }),\n          },\n          {\n            field: 'timestamp',\n            name: i18n.translate('xpack.uptime.errorList.latestErrorColumnLabel', {\n              defaultMessage: 'Latest error',\n            }),\n            render: (timestamp: string) => moment(timestamp).fromNow(),\n          },\n          {\n            field: 'statusCode',\n            name: i18n.translate('xpack.uptime.errorList.statusCodeColumnLabel', {\n              defaultMessage: 'Status code',\n            }),\n          },\n          {\n            field: 'latestMessage',\n            name: i18n.translate('xpack.uptime.errorList.latestMessageColumnLabel', {\n              defaultMessage: 'Latest message',\n            }),\n            width: '40%',\n          },\n        ]}\n        pagination={{ initialPageSize: 10, pageSizeOptions: [5, 10, 20, 50] }}\n      />\n    </EuiPanel>\n  </Fragment>\n);\n"]}]}