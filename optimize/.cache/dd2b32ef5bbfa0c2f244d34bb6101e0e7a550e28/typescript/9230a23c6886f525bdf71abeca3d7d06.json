{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_space_form.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_space_form.tsx","mtime":1567631712301},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButtonIcon, EuiFlexGroup, EuiFlexItem, EuiFormRow } from '@elastic/eui';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport React, { Component } from 'react';\nimport { PrivilegeSelector } from './privilege_selector';\nimport { SpaceSelector } from './space_selector';\nvar PrivilegeSpaceFormUI = /** @class */ (function (_super) {\n    tslib_1.__extends(PrivilegeSpaceFormUI, _super);\n    function PrivilegeSpaceFormUI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onSelectedSpacesChange = function (selectedSpaceIds) {\n            _this.props.onChange({\n                spaces: selectedSpaceIds,\n                privilege: _this.props.selectedPrivilege,\n            });\n        };\n        _this.onPrivilegeChange = function (privilege) {\n            _this.props.onChange({\n                spaces: _this.props.selectedSpaceIds,\n                privilege: privilege,\n            });\n        };\n        return _this;\n    }\n    PrivilegeSpaceFormUI.prototype.render = function () {\n        var _a = this.props, availableSpaces = _a.availableSpaces, selectedSpaceIds = _a.selectedSpaceIds, availablePrivileges = _a.availablePrivileges, selectedPrivilege = _a.selectedPrivilege, validator = _a.validator, intl = _a.intl;\n        return (React.createElement(EuiFlexGroup, { responsive: false },\n            React.createElement(EuiFlexItem, null,\n                React.createElement(EuiFormRow, tslib_1.__assign({ label: React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeSpaceForm.spacesFormRowLabel\", defaultMessage: \"Spaces\" }) }, validator.validateSelectedSpaces(selectedSpaceIds, selectedPrivilege)),\n                    React.createElement(SpaceSelector, { spaces: availableSpaces, selectedSpaceIds: selectedSpaceIds, onChange: this.onSelectedSpacesChange }))),\n            React.createElement(EuiFlexItem, null,\n                React.createElement(EuiFormRow, tslib_1.__assign({ label: React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.privilegeSpaceForm.privilegeFormRowLabel\", defaultMessage: \"Privilege\" }) }, validator.validateSelectedPrivilege(selectedSpaceIds, selectedPrivilege)),\n                    React.createElement(PrivilegeSelector, { \"data-test-subj\": 'space-form-priv-selector', availablePrivileges: availablePrivileges, value: selectedPrivilege, onChange: this.onPrivilegeChange }))),\n            React.createElement(EuiFlexItem, { grow: false },\n                React.createElement(EuiFormRow, { hasEmptyLabelSpace: true },\n                    React.createElement(EuiButtonIcon, { \"aria-label\": intl.formatMessage({\n                            id: 'xpack.security.management.editRoles.privilegeSpaceForm.deleteSpacePrivilegeAriaLabel',\n                            defaultMessage: 'Delete space privilege',\n                        }), color: 'danger', onClick: this.props.onDelete, iconType: 'trash' })))));\n    };\n    return PrivilegeSpaceFormUI;\n}(Component));\nexport var PrivilegeSpaceForm = injectI18n(PrivilegeSpaceFormUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_space_form.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/privilege_space_form.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AACpF,OAAO,EAAE,gBAAgB,EAAgB,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7E,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAIzC,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAkBjD;IAAmC,gDAAoB;IAAvD;QAAA,qEA+EC;QAbQ,4BAAsB,GAAG,UAAC,gBAA0B;YACzD,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClB,MAAM,EAAE,gBAAgB;gBACxB,SAAS,EAAE,KAAI,CAAC,KAAK,CAAC,iBAAiB;aACxC,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,uBAAiB,GAAG,UAAC,SAA0B;YACpD,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClB,MAAM,EAAE,KAAI,CAAC,KAAK,CAAC,gBAAgB;gBACnC,SAAS,WAAA;aACV,CAAC,CAAC;QACL,CAAC,CAAC;;IACJ,CAAC;IA9EQ,qCAAM,GAAb;QACQ,IAAA,eAOQ,EANZ,oCAAe,EACf,sCAAgB,EAChB,4CAAmB,EACnB,wCAAiB,EACjB,wBAAS,EACT,cAAI,CACS;QAEf,OAAO,CACL,oBAAC,YAAY,IAAC,UAAU,EAAE,KAAK;YAC7B,oBAAC,WAAW;gBACV,oBAAC,UAAU,qBACT,KAAK,EACH,oBAAC,gBAAgB,IACf,EAAE,EAAC,2EAA2E,EAC9E,cAAc,EAAC,QAAQ,GACvB,IAEA,SAAS,CAAC,sBAAsB,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;oBAEzE,oBAAC,aAAa,IACZ,MAAM,EAAE,eAAe,EACvB,gBAAgB,EAAE,gBAAgB,EAClC,QAAQ,EAAE,IAAI,CAAC,sBAAsB,GACrC,CACS,CACD;YACd,oBAAC,WAAW;gBACV,oBAAC,UAAU,qBACT,KAAK,EACH,oBAAC,gBAAgB,IACf,EAAE,EAAC,8EAA8E,EACjF,cAAc,EAAC,WAAW,GAC1B,IAEA,SAAS,CAAC,yBAAyB,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;oBAE5E,oBAAC,iBAAiB,sBACA,0BAA0B,EAC1C,mBAAmB,EAAE,mBAAmB,EACxC,KAAK,EAAE,iBAAiB,EACxB,QAAQ,EAAE,IAAI,CAAC,iBAAiB,GAChC,CACS,CACD;YACd,oBAAC,WAAW,IAAC,IAAI,EAAE,KAAK;gBACtB,oBAAC,UAAU,IAAC,kBAAkB;oBAC5B,oBAAC,aAAa,kBACA,IAAI,CAAC,aAAa,CAAC;4BAC7B,EAAE,EACA,sFAAsF;4BACxF,cAAc,EAAE,wBAAwB;yBACzC,CAAC,EACF,KAAK,EAAE,QAAQ,EACf,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC5B,QAAQ,EAAE,OAAO,GACjB,CACS,CACD,CACD,CAChB,CAAC;IACJ,CAAC;IAeH,2BAAC;AAAD,CAAC,AA/ED,CAAmC,SAAS,GA+E3C;AAED,MAAM,CAAC,IAAM,kBAAkB,GAAG,UAAU,CAAC,oBAAoB,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiButtonIcon, EuiFlexGroup, EuiFlexItem, EuiFormRow } from '@elastic/eui';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport React, { Component } from 'react';\nimport { Space } from '../../../../../../../../spaces/common/model/space';\nimport { KibanaPrivilege } from '../../../../../../../common/model/kibana_privilege';\nimport { RoleValidator } from '../../../lib/validate_role';\nimport { PrivilegeSelector } from './privilege_selector';\nimport { SpaceSelector } from './space_selector';\n\ninterface Props {\n  availableSpaces: Space[];\n  selectedSpaceIds: string[];\n  availablePrivileges: KibanaPrivilege[];\n  selectedPrivilege: KibanaPrivilege | null;\n  onChange: (\n    params: {\n      spaces: string[];\n      privilege: KibanaPrivilege | null;\n    }\n  ) => void;\n  onDelete: () => void;\n  validator: RoleValidator;\n  intl: InjectedIntl;\n}\n\nclass PrivilegeSpaceFormUI extends Component<Props, {}> {\n  public render() {\n    const {\n      availableSpaces,\n      selectedSpaceIds,\n      availablePrivileges,\n      selectedPrivilege,\n      validator,\n      intl,\n    } = this.props;\n\n    return (\n      <EuiFlexGroup responsive={false}>\n        <EuiFlexItem>\n          <EuiFormRow\n            label={\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.privilegeSpaceForm.spacesFormRowLabel\"\n                defaultMessage=\"Spaces\"\n              />\n            }\n            {...validator.validateSelectedSpaces(selectedSpaceIds, selectedPrivilege)}\n          >\n            <SpaceSelector\n              spaces={availableSpaces}\n              selectedSpaceIds={selectedSpaceIds}\n              onChange={this.onSelectedSpacesChange}\n            />\n          </EuiFormRow>\n        </EuiFlexItem>\n        <EuiFlexItem>\n          <EuiFormRow\n            label={\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.privilegeSpaceForm.privilegeFormRowLabel\"\n                defaultMessage=\"Privilege\"\n              />\n            }\n            {...validator.validateSelectedPrivilege(selectedSpaceIds, selectedPrivilege)}\n          >\n            <PrivilegeSelector\n              data-test-subj={'space-form-priv-selector'}\n              availablePrivileges={availablePrivileges}\n              value={selectedPrivilege}\n              onChange={this.onPrivilegeChange}\n            />\n          </EuiFormRow>\n        </EuiFlexItem>\n        <EuiFlexItem grow={false}>\n          <EuiFormRow hasEmptyLabelSpace>\n            <EuiButtonIcon\n              aria-label={intl.formatMessage({\n                id:\n                  'xpack.security.management.editRoles.privilegeSpaceForm.deleteSpacePrivilegeAriaLabel',\n                defaultMessage: 'Delete space privilege',\n              })}\n              color={'danger'}\n              onClick={this.props.onDelete}\n              iconType={'trash'}\n            />\n          </EuiFormRow>\n        </EuiFlexItem>\n      </EuiFlexGroup>\n    );\n  }\n\n  public onSelectedSpacesChange = (selectedSpaceIds: string[]) => {\n    this.props.onChange({\n      spaces: selectedSpaceIds,\n      privilege: this.props.selectedPrivilege,\n    });\n  };\n\n  public onPrivilegeChange = (privilege: KibanaPrivilege) => {\n    this.props.onChange({\n      spaces: this.props.selectedSpaceIds,\n      privilege,\n    });\n  };\n}\n\nexport const PrivilegeSpaceForm = injectI18n(PrivilegeSpaceFormUI);\n"]}]}