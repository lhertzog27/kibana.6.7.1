{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/components/space_card.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/components/space_card.tsx","mtime":1567631712309},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { \n// FIXME: need updated typedefs\n// @ts-ignore\nEuiCard, } from '@elastic/eui';\nimport React from 'react';\nimport { SpaceAvatar } from '../../components';\nexport var SpaceCard = function (props) {\n    var space = props.space, onClick = props.onClick;\n    return (React.createElement(EuiCard, { className: \"spaceCard\", \"data-test-subj\": \"space-card-\" + space.id, icon: renderSpaceAvatar(space), title: space.name, description: renderSpaceDescription(space), onClick: onClick }));\n};\nfunction renderSpaceAvatar(space) {\n    // not announcing space name here because the title of the EuiCard that the SpaceAvatar lives in is already\n    // announcing it. See https://github.com/elastic/kibana/issues/27748\n    return React.createElement(SpaceAvatar, { space: space, size: 'l', announceSpaceName: false });\n}\nfunction renderSpaceDescription(space) {\n    var description = space.description || '';\n    var needsTruncation = description.length > 120;\n    if (needsTruncation) {\n        description = description.substr(0, 120) + '…';\n    }\n    return (React.createElement(\"span\", { title: description, className: \"eui-textBreakWord euiTextColor--subdued\" }, description));\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/components/space_card.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/components/space_card.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO;AACL,+BAA+B;AAC/B,aAAa;AACb,OAAO,GACR,MAAM,cAAc,CAAC;AACtB,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAM/C,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,KAAY;IAC5B,IAAA,mBAAK,EAAE,uBAAO,CAAW;IAEjC,OAAO,CACL,oBAAC,OAAO,IACN,SAAS,EAAC,WAAW,oBACL,gBAAc,KAAK,CAAC,EAAI,EACxC,IAAI,EAAE,iBAAiB,CAAC,KAAK,CAAC,EAC9B,KAAK,EAAE,KAAK,CAAC,IAAI,EACjB,WAAW,EAAE,sBAAsB,CAAC,KAAK,CAAC,EAC1C,OAAO,EAAE,OAAO,GAChB,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS,iBAAiB,CAAC,KAAY;IACrC,2GAA2G;IAC3G,oEAAoE;IACpE,OAAO,oBAAC,WAAW,IAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,iBAAiB,EAAE,KAAK,GAAI,CAAC;AAC5E,CAAC;AAED,SAAS,sBAAsB,CAAC,KAAY;IAC1C,IAAI,WAAW,GAAyB,KAAK,CAAC,WAAW,IAAI,EAAE,CAAC;IAChE,IAAM,eAAe,GAAG,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC;IACjD,IAAI,eAAe,EAAE;QACnB,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;KAChD;IAED,OAAO,CACL,8BAAM,KAAK,EAAE,WAAW,EAAE,SAAS,EAAC,yCAAyC,IAC1E,WAAW,CACP,CACR,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  // FIXME: need updated typedefs\n  // @ts-ignore\n  EuiCard,\n} from '@elastic/eui';\nimport React from 'react';\nimport { Space } from '../../../common/model/space';\nimport { SpaceAvatar } from '../../components';\n\ninterface Props {\n  space: Space;\n  onClick: () => void;\n}\nexport const SpaceCard = (props: Props) => {\n  const { space, onClick } = props;\n\n  return (\n    <EuiCard\n      className=\"spaceCard\"\n      data-test-subj={`space-card-${space.id}`}\n      icon={renderSpaceAvatar(space)}\n      title={space.name}\n      description={renderSpaceDescription(space)}\n      onClick={onClick}\n    />\n  );\n};\n\nfunction renderSpaceAvatar(space: Space) {\n  // not announcing space name here because the title of the EuiCard that the SpaceAvatar lives in is already\n  // announcing it. See https://github.com/elastic/kibana/issues/27748\n  return <SpaceAvatar space={space} size={'l'} announceSpaceName={false} />;\n}\n\nfunction renderSpaceDescription(space: Space) {\n  let description: JSX.Element | string = space.description || '';\n  const needsTruncation = description.length > 120;\n  if (needsTruncation) {\n    description = description.substr(0, 120) + '…';\n  }\n\n  return (\n    <span title={description} className=\"eui-textBreakWord euiTextColor--subdued\">\n      {description}\n    </span>\n  );\n}\n"]}]}