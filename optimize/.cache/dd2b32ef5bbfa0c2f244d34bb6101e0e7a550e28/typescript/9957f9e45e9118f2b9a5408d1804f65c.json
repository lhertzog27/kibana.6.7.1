{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/nav_control_popover.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/nav_control_popover.tsx","mtime":1567631712312},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiAvatar, EuiPopover } from '@elastic/eui';\nimport React, { Component } from 'react';\nimport { SpaceAvatar } from '../../components';\nimport { SpacesDescription } from './components/spaces_description';\nimport { SpacesMenu } from './components/spaces_menu';\nvar NavControlPopover = /** @class */ (function (_super) {\n    tslib_1.__extends(NavControlPopover, _super);\n    function NavControlPopover(props) {\n        var _this = _super.call(this, props) || this;\n        _this.getActiveSpaceButton = function () {\n            var activeSpace = _this.state.activeSpace;\n            if (!activeSpace) {\n                return _this.getButton(React.createElement(EuiAvatar, { size: 's', className: 'spaceNavGraphic', name: 'error' }), 'error');\n            }\n            return _this.getButton(React.createElement(SpaceAvatar, { space: activeSpace, size: 's', className: 'spaceNavGraphic' }), activeSpace.name);\n        };\n        _this.getButton = function (linkIcon, linkTitle) {\n            var Button = _this.props.buttonClass;\n            return (React.createElement(Button, { linkTitle: linkTitle, linkIcon: linkIcon, toggleSpaceSelector: _this.toggleSpaceSelector, spaceSelectorShown: _this.state.showSpaceSelector }));\n        };\n        _this.toggleSpaceSelector = function () {\n            var isOpening = !_this.state.showSpaceSelector;\n            if (isOpening) {\n                _this.loadSpaces();\n            }\n            _this.setState({\n                showSpaceSelector: !_this.state.showSpaceSelector,\n            });\n        };\n        _this.closeSpaceSelector = function () {\n            _this.setState({\n                showSpaceSelector: false,\n            });\n        };\n        _this.onSelectSpace = function (space) {\n            _this.props.spacesManager.changeSelectedSpace(space);\n        };\n        _this.state = {\n            showSpaceSelector: false,\n            loading: false,\n            activeSpace: props.activeSpace.space,\n            spaces: [],\n        };\n        return _this;\n    }\n    NavControlPopover.prototype.componentDidMount = function () {\n        var _this = this;\n        this.loadSpaces();\n        if (this.props.spacesManager) {\n            this.props.spacesManager.on('request_refresh', function () {\n                _this.loadSpaces();\n            });\n        }\n    };\n    NavControlPopover.prototype.render = function () {\n        var button = this.getActiveSpaceButton();\n        if (!button) {\n            return null;\n        }\n        var element;\n        if (this.state.spaces.length < 2) {\n            element = (React.createElement(SpacesDescription, { userProfile: this.props.userProfile, onManageSpacesClick: this.toggleSpaceSelector }));\n        }\n        else {\n            element = (React.createElement(SpacesMenu, { spaces: this.state.spaces, onSelectSpace: this.onSelectSpace, userProfile: this.props.userProfile, onManageSpacesClick: this.toggleSpaceSelector }));\n        }\n        return (React.createElement(EuiPopover, { id: 'spcMenuPopover', \"data-test-subj\": \"spacesNavSelector\", button: button, isOpen: this.state.showSpaceSelector, closePopover: this.closeSpaceSelector, anchorPosition: this.props.anchorPosition, panelPaddingSize: \"none\", \n            // @ts-ignore\n            repositionOnScroll: true, withTitle: this.props.anchorPosition.includes('down'), ownFocus: true }, element));\n    };\n    NavControlPopover.prototype.loadSpaces = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, spacesManager, activeSpace, spaces, activeSpaceEntry;\n            var _this = this;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.props, spacesManager = _a.spacesManager, activeSpace = _a.activeSpace;\n                        this.setState({\n                            loading: true,\n                        });\n                        return [4 /*yield*/, spacesManager.getSpaces()];\n                    case 1:\n                        spaces = _b.sent();\n                        activeSpaceEntry = activeSpace.space;\n                        if (activeSpace.valid) {\n                            activeSpaceEntry = spaces.find(function (space) { return space.id === _this.props.activeSpace.space.id; }) || null;\n                        }\n                        this.setState({\n                            spaces: spaces,\n                            activeSpace: activeSpaceEntry,\n                            loading: false,\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return NavControlPopover;\n}(Component));\nexport { NavControlPopover };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/nav_control_popover.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/nav_control_popover.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiAvatar, EuiPopover, PopoverAnchorPosition } from '@elastic/eui';\nimport React, { Component, ComponentClass } from 'react';\nimport { UserProfile } from '../../../../xpack_main/public/services/user_profile';\nimport { Space } from '../../../common/model/space';\nimport { SpaceAvatar } from '../../components';\nimport { SpacesManager } from '../../lib/spaces_manager';\nimport { SpacesDescription } from './components/spaces_description';\nimport { SpacesMenu } from './components/spaces_menu';\nimport { ButtonProps } from './types';\n\ninterface Props {\n  spacesManager: SpacesManager;\n  activeSpace: {\n    valid: boolean;\n    error?: string;\n    space: Space;\n  };\n  userProfile: UserProfile;\n  anchorPosition: PopoverAnchorPosition;\n  buttonClass: ComponentClass<ButtonProps>;\n}\n\ninterface State {\n  showSpaceSelector: boolean;\n  loading: boolean;\n  activeSpace: Space | null;\n  spaces: Space[];\n}\n\nexport class NavControlPopover extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      showSpaceSelector: false,\n      loading: false,\n      activeSpace: props.activeSpace.space,\n      spaces: [],\n    };\n  }\n\n  public componentDidMount() {\n    this.loadSpaces();\n\n    if (this.props.spacesManager) {\n      this.props.spacesManager.on('request_refresh', () => {\n        this.loadSpaces();\n      });\n    }\n  }\n\n  public render() {\n    const button = this.getActiveSpaceButton();\n    if (!button) {\n      return null;\n    }\n\n    let element: React.ReactNode;\n    if (this.state.spaces.length < 2) {\n      element = (\n        <SpacesDescription\n          userProfile={this.props.userProfile}\n          onManageSpacesClick={this.toggleSpaceSelector}\n        />\n      );\n    } else {\n      element = (\n        <SpacesMenu\n          spaces={this.state.spaces}\n          onSelectSpace={this.onSelectSpace}\n          userProfile={this.props.userProfile}\n          onManageSpacesClick={this.toggleSpaceSelector}\n        />\n      );\n    }\n\n    return (\n      <EuiPopover\n        id={'spcMenuPopover'}\n        data-test-subj={`spacesNavSelector`}\n        button={button}\n        isOpen={this.state.showSpaceSelector}\n        closePopover={this.closeSpaceSelector}\n        anchorPosition={this.props.anchorPosition}\n        panelPaddingSize=\"none\"\n        // @ts-ignore\n        repositionOnScroll={true}\n        withTitle={this.props.anchorPosition.includes('down')}\n        ownFocus\n      >\n        {element}\n      </EuiPopover>\n    );\n  }\n\n  private async loadSpaces() {\n    const { spacesManager, activeSpace } = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    const spaces = await spacesManager.getSpaces();\n\n    // Update the active space definition, if it changed since the last load operation\n    let activeSpaceEntry: Space | null = activeSpace.space;\n\n    if (activeSpace.valid) {\n      activeSpaceEntry = spaces.find(space => space.id === this.props.activeSpace.space.id) || null;\n    }\n\n    this.setState({\n      spaces,\n      activeSpace: activeSpaceEntry,\n      loading: false,\n    });\n  }\n\n  private getActiveSpaceButton = () => {\n    const { activeSpace } = this.state;\n\n    if (!activeSpace) {\n      return this.getButton(\n        <EuiAvatar size={'s'} className={'spaceNavGraphic'} name={'error'} />,\n        'error'\n      );\n    }\n\n    return this.getButton(\n      <SpaceAvatar space={activeSpace} size={'s'} className={'spaceNavGraphic'} />,\n      (activeSpace as Space).name\n    );\n  };\n\n  private getButton = (linkIcon: JSX.Element, linkTitle: string) => {\n    const Button = this.props.buttonClass;\n    return (\n      <Button\n        linkTitle={linkTitle}\n        linkIcon={linkIcon}\n        toggleSpaceSelector={this.toggleSpaceSelector}\n        spaceSelectorShown={this.state.showSpaceSelector}\n      />\n    );\n  };\n\n  private toggleSpaceSelector = () => {\n    const isOpening = !this.state.showSpaceSelector;\n    if (isOpening) {\n      this.loadSpaces();\n    }\n\n    this.setState({\n      showSpaceSelector: !this.state.showSpaceSelector,\n    });\n  };\n\n  private closeSpaceSelector = () => {\n    this.setState({\n      showSpaceSelector: false,\n    });\n  };\n\n  private onSelectSpace = (space: Space) => {\n    this.props.spacesManager.changeSelectedSpace(space);\n  };\n}\n"]}]}