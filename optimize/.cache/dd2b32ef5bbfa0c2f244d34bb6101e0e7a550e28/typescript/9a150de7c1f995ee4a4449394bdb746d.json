{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/index.tsx","mtime":1567631711867},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { EuiSpacer } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { isEmpty, last } from 'lodash';\nimport React, { Fragment } from 'react';\nimport { EmptyMessage } from '../../shared/EmptyMessage';\nimport { LibraryStackFrames } from './LibraryStackFrames';\nimport { Stackframe } from './Stackframe';\nexport function Stacktrace(_a) {\n    var _b = _a.stackframes, stackframes = _b === void 0 ? [] : _b, codeLanguage = _a.codeLanguage;\n    if (isEmpty(stackframes)) {\n        return (React.createElement(EmptyMessage, { heading: i18n.translate('xpack.apm.stacktraceTab.noStacktraceAvailableLabel', {\n                defaultMessage: 'No stacktrace available.'\n            }), hideSubheading: true }));\n    }\n    var groups = getGroupedStackframes(stackframes);\n    return (React.createElement(Fragment, null,\n        groups.map(function (group, i) {\n            // library frame\n            if (group.isLibraryFrame) {\n                var hasMultipleStackframes = group.stackframes.length > 1;\n                var hasLeadingSpacer = hasMultipleStackframes && i !== 0;\n                var hasTrailingSpacer = hasMultipleStackframes && i !== groups.length - 1;\n                return (React.createElement(Fragment, { key: i },\n                    hasLeadingSpacer && React.createElement(EuiSpacer, { size: \"m\" }),\n                    React.createElement(LibraryStackFrames, { initialVisiblity: !hasMultipleStackframes, stackframes: group.stackframes, codeLanguage: codeLanguage }),\n                    hasTrailingSpacer && React.createElement(EuiSpacer, { size: \"m\" })));\n            }\n            // non-library frame\n            return group.stackframes.map(function (stackframe, idx) { return (React.createElement(Stackframe, { key: i + \"-\" + idx, codeLanguage: codeLanguage, stackframe: stackframe })); });\n        }),\n        React.createElement(EuiSpacer, { size: \"m\" })));\n}\nexport function getGroupedStackframes(stackframes) {\n    return stackframes.reduce(function (acc, stackframe) {\n        var prevGroup = last(acc);\n        var shouldAppend = prevGroup &&\n            prevGroup.isLibraryFrame === stackframe.library_frame &&\n            !prevGroup.excludeFromGrouping &&\n            !stackframe.exclude_from_grouping;\n        // append to group\n        if (shouldAppend) {\n            prevGroup.stackframes.push(stackframe);\n            return acc;\n        }\n        // create new group\n        acc.push({\n            isLibraryFrame: Boolean(stackframe.library_frame),\n            excludeFromGrouping: Boolean(stackframe.exclude_from_grouping),\n            stackframes: [stackframe]\n        });\n        return acc;\n    }, []);\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiSpacer } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { isEmpty, last } from 'lodash';\nimport React, { Fragment } from 'react';\nimport { IStackframe } from '../../../../typings/es_schemas/Stackframe';\nimport { EmptyMessage } from '../../shared/EmptyMessage';\n// @ts-ignore\nimport { Ellipsis } from '../../shared/Icons';\nimport { LibraryStackFrames } from './LibraryStackFrames';\nimport { Stackframe } from './Stackframe';\n\ninterface Props {\n  stackframes?: IStackframe[];\n  codeLanguage?: string;\n}\n\nexport function Stacktrace({ stackframes = [], codeLanguage }: Props) {\n  if (isEmpty(stackframes)) {\n    return (\n      <EmptyMessage\n        heading={i18n.translate(\n          'xpack.apm.stacktraceTab.noStacktraceAvailableLabel',\n          {\n            defaultMessage: 'No stacktrace available.'\n          }\n        )}\n        hideSubheading\n      />\n    );\n  }\n\n  const groups = getGroupedStackframes(stackframes);\n  return (\n    <Fragment>\n      {groups.map((group, i) => {\n        // library frame\n        if (group.isLibraryFrame) {\n          const hasMultipleStackframes = group.stackframes.length > 1;\n          const hasLeadingSpacer = hasMultipleStackframes && i !== 0;\n          const hasTrailingSpacer =\n            hasMultipleStackframes && i !== groups.length - 1;\n          return (\n            <Fragment key={i}>\n              {hasLeadingSpacer && <EuiSpacer size=\"m\" />}\n              <LibraryStackFrames\n                initialVisiblity={!hasMultipleStackframes}\n                stackframes={group.stackframes}\n                codeLanguage={codeLanguage}\n              />\n              {hasTrailingSpacer && <EuiSpacer size=\"m\" />}\n            </Fragment>\n          );\n        }\n\n        // non-library frame\n        return group.stackframes.map((stackframe, idx) => (\n          <Stackframe\n            key={`${i}-${idx}`}\n            codeLanguage={codeLanguage}\n            stackframe={stackframe}\n          />\n        ));\n      })}\n      <EuiSpacer size=\"m\" />\n    </Fragment>\n  );\n}\n\ninterface StackframesGroup {\n  isLibraryFrame: boolean;\n  excludeFromGrouping: boolean;\n  stackframes: IStackframe[];\n}\n\nexport function getGroupedStackframes(stackframes: IStackframe[]) {\n  return stackframes.reduce(\n    (acc, stackframe) => {\n      const prevGroup = last(acc);\n      const shouldAppend =\n        prevGroup &&\n        prevGroup.isLibraryFrame === stackframe.library_frame &&\n        !prevGroup.excludeFromGrouping &&\n        !stackframe.exclude_from_grouping;\n\n      // append to group\n      if (shouldAppend) {\n        prevGroup.stackframes.push(stackframe);\n        return acc;\n      }\n\n      // create new group\n      acc.push({\n        isLibraryFrame: Boolean(stackframe.library_frame),\n        excludeFromGrouping: Boolean(stackframe.exclude_from_grouping),\n        stackframes: [stackframe]\n      });\n      return acc;\n    },\n    [] as StackframesGroup[]\n  );\n}\n"]}]}