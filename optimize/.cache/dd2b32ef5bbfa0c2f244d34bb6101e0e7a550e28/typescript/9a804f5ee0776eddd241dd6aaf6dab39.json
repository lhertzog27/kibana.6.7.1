{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/FrameHeading.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/FrameHeading.tsx","mtime":1567631711866},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { get } from 'lodash';\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { colors, fontFamilyCode, px, units } from '../../../style/variables';\nvar FileDetails = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  color: \", \";\\n  padding: \", \";\\n  font-family: \", \";\\n\"], [\"\\n  color: \", \";\\n  padding: \", \";\\n  font-family: \", \";\\n\"])), colors.gray3, px(units.half), fontFamilyCode);\nvar LibraryFrameFileDetail = styled.span(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  color: \", \";\\n\"], [\"\\n  color: \", \";\\n\"])), colors.gray2);\nvar AppFrameFileDetail = styled.span(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n  font-weight: bold;\\n  color: \", \";\\n\"], [\"\\n  font-weight: bold;\\n  color: \", \";\\n\"])), colors.black);\nvar FrameHeading = function (_a) {\n    var stackframe = _a.stackframe, isLibraryFrame = _a.isLibraryFrame;\n    var FileDetail = isLibraryFrame\n        ? LibraryFrameFileDetail\n        : AppFrameFileDetail;\n    var lineNumber = get(stackframe, 'line.number');\n    return (React.createElement(FileDetails, null,\n        React.createElement(FileDetail, null, stackframe.filename),\n        \" in\",\n        ' ',\n        React.createElement(FileDetail, null, stackframe.function),\n        lineNumber > 0 && (React.createElement(Fragment, null,\n            ' at ',\n            React.createElement(FileDetail, null,\n                \"line \",\n                stackframe.line.number)))));\n};\nexport { FrameHeading };\nvar templateObject_1, templateObject_2, templateObject_3;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/FrameHeading.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Stacktrace/FrameHeading.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAC7B,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAEvC,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AAE7E,IAAM,WAAW,GAAG,MAAM,CAAC,GAAG,uIAAA,aACnB,EAAY,gBACV,EAAc,oBACV,EAAc,KAC9B,KAHU,MAAM,CAAC,KAAK,EACV,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EACV,cAAc,CAC9B,CAAC;AACF,IAAM,sBAAsB,GAAG,MAAM,CAAC,IAAI,+FAAA,aAC/B,EAAY,KACtB,KADU,MAAM,CAAC,KAAK,CACtB,CAAC;AACF,IAAM,kBAAkB,GAAG,MAAM,CAAC,IAAI,qHAAA,mCAE3B,EAAY,KACtB,KADU,MAAM,CAAC,KAAK,CACtB,CAAC;AAOF,IAAM,YAAY,GAAqB,UAAC,EAA8B;QAA5B,0BAAU,EAAE,kCAAc;IAClE,IAAM,UAAU,GAAG,cAAc;QAC/B,CAAC,CAAC,sBAAsB;QACxB,CAAC,CAAC,kBAAkB,CAAC;IACvB,IAAM,UAAU,GAAW,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IAC1D,OAAO,CACL,oBAAC,WAAW;QACV,oBAAC,UAAU,QAAE,UAAU,CAAC,QAAQ,CAAc;;QAAI,GAAG;QACrD,oBAAC,UAAU,QAAE,UAAU,CAAC,QAAQ,CAAc;QAC7C,UAAU,GAAG,CAAC,IAAI,CACjB,oBAAC,QAAQ;YACN,MAAM;YACP,oBAAC,UAAU;;gBAAO,UAAU,CAAC,IAAI,CAAC,MAAM,CAAc,CAC7C,CACZ,CACW,CACf,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,YAAY,EAAE,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { get } from 'lodash';\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { IStackframe } from '../../../../typings/es_schemas/Stackframe';\nimport { colors, fontFamilyCode, px, units } from '../../../style/variables';\n\nconst FileDetails = styled.div`\n  color: ${colors.gray3};\n  padding: ${px(units.half)};\n  font-family: ${fontFamilyCode};\n`;\nconst LibraryFrameFileDetail = styled.span`\n  color: ${colors.gray2};\n`;\nconst AppFrameFileDetail = styled.span`\n  font-weight: bold;\n  color: ${colors.black};\n`;\n\ninterface Props {\n  stackframe: IStackframe;\n  isLibraryFrame: boolean;\n}\n\nconst FrameHeading: React.SFC<Props> = ({ stackframe, isLibraryFrame }) => {\n  const FileDetail = isLibraryFrame\n    ? LibraryFrameFileDetail\n    : AppFrameFileDetail;\n  const lineNumber: number = get(stackframe, 'line.number');\n  return (\n    <FileDetails>\n      <FileDetail>{stackframe.filename}</FileDetail> in{' '}\n      <FileDetail>{stackframe.function}</FileDetail>\n      {lineNumber > 0 && (\n        <Fragment>\n          {' at '}\n          <FileDetail>line {stackframe.line.number}</FileDetail>\n        </Fragment>\n      )}\n    </FileDetails>\n  );\n};\n\nexport { FrameHeading };\n"]}]}