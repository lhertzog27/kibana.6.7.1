{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/waffle_options/reducer.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/waffle_options/reducer.ts","mtime":1567631711988},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { combineReducers } from 'redux';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport { InfraMetricType, InfraNodeType, } from '../../../graphql/types';\nimport { changeCustomOptions, changeGroupBy, changeMetric, changeNodeType, changeView, } from './actions';\nexport var initialWaffleOptionsState = {\n    metric: { type: InfraMetricType.cpu },\n    groupBy: [],\n    nodeType: InfraNodeType.host,\n    view: 'map',\n    customOptions: [],\n};\nvar currentMetricReducer = reducerWithInitialState(initialWaffleOptionsState.metric).case(changeMetric, function (current, target) { return target; });\nvar currentCustomOptionsReducer = reducerWithInitialState(initialWaffleOptionsState.customOptions).case(changeCustomOptions, function (current, target) { return target; });\nvar currentGroupByReducer = reducerWithInitialState(initialWaffleOptionsState.groupBy).case(changeGroupBy, function (current, target) { return target; });\nvar currentNodeTypeReducer = reducerWithInitialState(initialWaffleOptionsState.nodeType).case(changeNodeType, function (current, target) { return target; });\nvar currentViewReducer = reducerWithInitialState(initialWaffleOptionsState.view).case(changeView, function (current, target) { return target; });\nexport var waffleOptionsReducer = combineReducers({\n    metric: currentMetricReducer,\n    groupBy: currentGroupByReducer,\n    nodeType: currentNodeTypeReducer,\n    view: currentViewReducer,\n    customOptions: currentCustomOptionsReducer,\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/waffle_options/reducer.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/waffle_options/reducer.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,uBAAuB,EAAE,MAAM,yBAAyB,CAAC;AAElE,OAAO,EAEL,eAAe,EACf,aAAa,GAEd,MAAM,wBAAwB,CAAC;AAEhC,OAAO,EACL,mBAAmB,EACnB,aAAa,EACb,YAAY,EACZ,cAAc,EACd,UAAU,GACX,MAAM,WAAW,CAAC;AAUnB,MAAM,CAAC,IAAM,yBAAyB,GAAuB;IAC3D,MAAM,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,GAAG,EAAE;IACrC,OAAO,EAAE,EAAE;IACX,QAAQ,EAAE,aAAa,CAAC,IAAI;IAC5B,IAAI,EAAE,KAAK;IACX,aAAa,EAAE,EAAE;CAClB,CAAC;AAEF,IAAM,oBAAoB,GAAG,uBAAuB,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,IAAI,CACzF,YAAY,EACZ,UAAC,OAAO,EAAE,MAAM,IAAK,OAAA,MAAM,EAAN,CAAM,CAC5B,CAAC;AAEF,IAAM,2BAA2B,GAAG,uBAAuB,CACzD,yBAAyB,CAAC,aAAa,CACxC,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAC,OAAO,EAAE,MAAM,IAAK,OAAA,MAAM,EAAN,CAAM,CAAC,CAAC;AAEzD,IAAM,qBAAqB,GAAG,uBAAuB,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC,IAAI,CAC3F,aAAa,EACb,UAAC,OAAO,EAAE,MAAM,IAAK,OAAA,MAAM,EAAN,CAAM,CAC5B,CAAC;AAEF,IAAM,sBAAsB,GAAG,uBAAuB,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC7F,cAAc,EACd,UAAC,OAAO,EAAE,MAAM,IAAK,OAAA,MAAM,EAAN,CAAM,CAC5B,CAAC;AAEF,IAAM,kBAAkB,GAAG,uBAAuB,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,IAAI,CACrF,UAAU,EACV,UAAC,OAAO,EAAE,MAAM,IAAK,OAAA,MAAM,EAAN,CAAM,CAC5B,CAAC;AAEF,MAAM,CAAC,IAAM,oBAAoB,GAAG,eAAe,CAAqB;IACtE,MAAM,EAAE,oBAAoB;IAC5B,OAAO,EAAE,qBAAqB;IAC9B,QAAQ,EAAE,sBAAsB;IAChC,IAAI,EAAE,kBAAkB;IACxB,aAAa,EAAE,2BAA2B;CAC3C,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { combineReducers } from 'redux';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport {\n  InfraMetricInput,\n  InfraMetricType,\n  InfraNodeType,\n  InfraPathInput,\n} from '../../../graphql/types';\nimport { InfraGroupByOptions } from '../../../lib/lib';\nimport {\n  changeCustomOptions,\n  changeGroupBy,\n  changeMetric,\n  changeNodeType,\n  changeView,\n} from './actions';\n\nexport interface WaffleOptionsState {\n  metric: InfraMetricInput;\n  groupBy: InfraPathInput[];\n  nodeType: InfraNodeType;\n  view: string;\n  customOptions: InfraGroupByOptions[];\n}\n\nexport const initialWaffleOptionsState: WaffleOptionsState = {\n  metric: { type: InfraMetricType.cpu },\n  groupBy: [],\n  nodeType: InfraNodeType.host,\n  view: 'map',\n  customOptions: [],\n};\n\nconst currentMetricReducer = reducerWithInitialState(initialWaffleOptionsState.metric).case(\n  changeMetric,\n  (current, target) => target\n);\n\nconst currentCustomOptionsReducer = reducerWithInitialState(\n  initialWaffleOptionsState.customOptions\n).case(changeCustomOptions, (current, target) => target);\n\nconst currentGroupByReducer = reducerWithInitialState(initialWaffleOptionsState.groupBy).case(\n  changeGroupBy,\n  (current, target) => target\n);\n\nconst currentNodeTypeReducer = reducerWithInitialState(initialWaffleOptionsState.nodeType).case(\n  changeNodeType,\n  (current, target) => target\n);\n\nconst currentViewReducer = reducerWithInitialState(initialWaffleOptionsState.view).case(\n  changeView,\n  (current, target) => target\n);\n\nexport const waffleOptionsReducer = combineReducers<WaffleOptionsState>({\n  metric: currentMetricReducer,\n  groupBy: currentGroupByReducer,\n  nodeType: currentNodeTypeReducer,\n  view: currentViewReducer,\n  customOptions: currentCustomOptionsReducer,\n});\n"]}]}