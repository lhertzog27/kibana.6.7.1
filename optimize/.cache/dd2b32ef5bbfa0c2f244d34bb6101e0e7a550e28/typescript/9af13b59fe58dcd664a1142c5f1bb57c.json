{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/notify/toasts/toast_notifications.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/notify/toasts/toast_notifications.ts","mtime":1567631711746},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Toast, ToastInput } from '../../../../core/public/notifications';\nexport { Toast, ToastInput };\nvar ToastNotifications = /** @class */ (function () {\n    function ToastNotifications(toasts) {\n        var _this = this;\n        this.toasts = toasts;\n        this.list = [];\n        this.onChange = function (callback) {\n            _this.onChangeCallback = callback;\n        };\n        this.add = function (toastOrTitle) { return _this.toasts.add(toastOrTitle); };\n        this.remove = function (toast) { return _this.toasts.remove(toast); };\n        this.addSuccess = function (toastOrTitle) { return _this.toasts.addSuccess(toastOrTitle); };\n        this.addWarning = function (toastOrTitle) { return _this.toasts.addWarning(toastOrTitle); };\n        this.addDanger = function (toastOrTitle) { return _this.toasts.addDanger(toastOrTitle); };\n        toasts.get$().subscribe(function (list) {\n            _this.list = list;\n            if (_this.onChangeCallback) {\n                _this.onChangeCallback();\n            }\n        });\n    }\n    return ToastNotifications;\n}());\nexport { ToastNotifications };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/notify/toasts/toast_notifications.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/notify/toasts/toast_notifications.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,EAAE,KAAK,EAAE,UAAU,EAAuB,MAAM,uCAAuC,CAAC;AAE/F,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC;AAE7B;IAKE,4BAA6B,MAA2B;QAAxD,iBAQC;QAR4B,WAAM,GAAN,MAAM,CAAqB;QAJjD,SAAI,GAAY,EAAE,CAAC;QAcnB,aAAQ,GAAG,UAAC,QAAoB;YACrC,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACnC,CAAC,CAAC;QAEK,QAAG,GAAG,UAAC,YAAwB,IAAK,OAAA,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,EAA7B,CAA6B,CAAC;QAClE,WAAM,GAAG,UAAC,KAAY,IAAK,OAAA,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC;QACrD,eAAU,GAAG,UAAC,YAAwB,IAAK,OAAA,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,EAApC,CAAoC,CAAC;QAChF,eAAU,GAAG,UAAC,YAAwB,IAAK,OAAA,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,EAApC,CAAoC,CAAC;QAChF,cAAS,GAAG,UAAC,YAAwB,IAAK,OAAA,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,EAAnC,CAAmC,CAAC;QAjBnF,MAAM,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,UAAA,IAAI;YAC1B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,IAAI,KAAI,CAAC,gBAAgB,EAAE;gBACzB,KAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAWH,yBAAC;AAAD,CAAC,AAxBD,IAwBC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Toast, ToastInput, ToastsStartContract } from '../../../../core/public/notifications';\n\nexport { Toast, ToastInput };\n\nexport class ToastNotifications {\n  public list: Toast[] = [];\n\n  private onChangeCallback?: () => void;\n\n  constructor(private readonly toasts: ToastsStartContract) {\n    toasts.get$().subscribe(list => {\n      this.list = list;\n\n      if (this.onChangeCallback) {\n        this.onChangeCallback();\n      }\n    });\n  }\n\n  public onChange = (callback: () => void) => {\n    this.onChangeCallback = callback;\n  };\n\n  public add = (toastOrTitle: ToastInput) => this.toasts.add(toastOrTitle);\n  public remove = (toast: Toast) => this.toasts.remove(toast);\n  public addSuccess = (toastOrTitle: ToastInput) => this.toasts.addSuccess(toastOrTitle);\n  public addWarning = (toastOrTitle: ToastInput) => this.toasts.addWarning(toastOrTitle);\n  public addDanger = (toastOrTitle: ToastInput) => this.toasts.addDanger(toastOrTitle);\n}\n"]}]}