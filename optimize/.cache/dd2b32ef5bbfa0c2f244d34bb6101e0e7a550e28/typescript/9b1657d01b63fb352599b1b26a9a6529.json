{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/elasticsearch.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/elasticsearch.ts","mtime":1567631711883},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nvar ElasticsearchLib = /** @class */ (function () {\n    function ElasticsearchLib(adapter) {\n        this.adapter = adapter;\n        this.hiddenFields = [\n            { op: 'startsWith', value: 'enrollment_token' },\n            { op: 'is', value: 'beat.active' },\n            { op: 'is', value: 'beat.enrollment_token' },\n            { op: 'is', value: 'beat.access_token' },\n            { op: 'is', value: 'beat.ephemeral_id' },\n            { op: 'is', value: 'beat.verified_on' },\n        ];\n    }\n    ElasticsearchLib.prototype.isKueryValid = function (kuery) {\n        return this.adapter.isKueryValid(kuery);\n    };\n    ElasticsearchLib.prototype.convertKueryToEsQuery = function (kuery) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.adapter.convertKueryToEsQuery(kuery)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ElasticsearchLib.prototype.getSuggestions = function (kuery, selectionStart, fieldPrefix) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var suggestions, filteredSuggestions;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.adapter.getSuggestions(kuery, selectionStart)];\n                    case 1:\n                        suggestions = _a.sent();\n                        filteredSuggestions = suggestions.filter(function (suggestion) {\n                            var hiddenFieldsCheck = _this.hiddenFields;\n                            if (fieldPrefix) {\n                                hiddenFieldsCheck.push({\n                                    op: 'withoutPrefix',\n                                    value: fieldPrefix + \".\",\n                                });\n                            }\n                            return hiddenFieldsCheck.reduce(function (isvalid, field) {\n                                if (!isvalid) {\n                                    return false;\n                                }\n                                switch (field.op) {\n                                    case 'startsWith':\n                                        return !suggestion.text.startsWith(field.value);\n                                    case 'is':\n                                        return suggestion.text.trim() !== field.value;\n                                    case 'withoutPrefix':\n                                        return suggestion.text.startsWith(field.value);\n                                }\n                            }, true);\n                        });\n                        return [2 /*return*/, filteredSuggestions];\n                }\n            });\n        });\n    };\n    return ElasticsearchLib;\n}());\nexport { ElasticsearchLib };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/elasticsearch.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/elasticsearch.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAUH;IAUE,0BAA6B,OAA6B;QAA7B,YAAO,GAAP,OAAO,CAAsB;QATzC,iBAAY,GAAmB;YAC9C,EAAE,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,kBAAkB,EAAE;YAC/C,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,EAAE;YAClC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,uBAAuB,EAAE;YAC5C,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE;YACxC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE;YACxC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,kBAAkB,EAAE;SACxC,CAAC;IAE2D,CAAC;IAEvD,uCAAY,GAAnB,UAAoB,KAAa;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACY,gDAAqB,GAAlC,UAAmC,KAAa;+CAAG,OAAO;;;4BACjD,qBAAM,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAA;4BAAtD,sBAAO,SAA+C,EAAC;;;;KACxD;IAEY,yCAAc,GAA3B,UACE,KAAa,EACb,cAAmB,EACnB,WAAoB;+CACnB,OAAO;;;;;4BACY,qBAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,EAAA;;wBAAtE,WAAW,GAAG,SAAwD;wBAEtE,mBAAmB,GAAG,WAAW,CAAC,MAAM,CAAC,UAAA,UAAU;4BACvD,IAAM,iBAAiB,GAAG,KAAI,CAAC,YAAY,CAAC;4BAE5C,IAAI,WAAW,EAAE;gCACf,iBAAiB,CAAC,IAAI,CAAC;oCACrB,EAAE,EAAE,eAAe;oCACnB,KAAK,EAAK,WAAW,MAAG;iCACzB,CAAC,CAAC;6BACJ;4BAED,OAAO,iBAAiB,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,KAAK;gCAC7C,IAAI,CAAC,OAAO,EAAE;oCACZ,OAAO,KAAK,CAAC;iCACd;gCAED,QAAQ,KAAK,CAAC,EAAE,EAAE;oCAChB,KAAK,YAAY;wCACf,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oCAClD,KAAK,IAAI;wCACP,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,KAAK,CAAC,KAAK,CAAC;oCAChD,KAAK,eAAe;wCAClB,OAAO,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iCAClD;4BACH,CAAC,EAAE,IAAI,CAAC,CAAC;wBACX,CAAC,CAAC,CAAC;wBAEH,sBAAO,mBAAmB,EAAC;;;;KAC5B;IACH,uBAAC;AAAD,CAAC,AAtDD,IAsDC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { AutocompleteSuggestion } from 'ui/autocomplete_providers';\nimport { ElasticsearchAdapter } from './adapters/elasticsearch/adapter_types';\n\ninterface HiddenFields {\n  op: 'is' | 'startsWith' | 'withoutPrefix';\n  value: string;\n}\n\nexport class ElasticsearchLib {\n  private readonly hiddenFields: HiddenFields[] = [\n    { op: 'startsWith', value: 'enrollment_token' },\n    { op: 'is', value: 'beat.active' },\n    { op: 'is', value: 'beat.enrollment_token' },\n    { op: 'is', value: 'beat.access_token' },\n    { op: 'is', value: 'beat.ephemeral_id' },\n    { op: 'is', value: 'beat.verified_on' },\n  ];\n\n  constructor(private readonly adapter: ElasticsearchAdapter) {}\n\n  public isKueryValid(kuery: string): boolean {\n    return this.adapter.isKueryValid(kuery);\n  }\n  public async convertKueryToEsQuery(kuery: string): Promise<string> {\n    return await this.adapter.convertKueryToEsQuery(kuery);\n  }\n\n  public async getSuggestions(\n    kuery: string,\n    selectionStart: any,\n    fieldPrefix?: string\n  ): Promise<AutocompleteSuggestion[]> {\n    const suggestions = await this.adapter.getSuggestions(kuery, selectionStart);\n\n    const filteredSuggestions = suggestions.filter(suggestion => {\n      const hiddenFieldsCheck = this.hiddenFields;\n\n      if (fieldPrefix) {\n        hiddenFieldsCheck.push({\n          op: 'withoutPrefix',\n          value: `${fieldPrefix}.`,\n        });\n      }\n\n      return hiddenFieldsCheck.reduce((isvalid, field) => {\n        if (!isvalid) {\n          return false;\n        }\n\n        switch (field.op) {\n          case 'startsWith':\n            return !suggestion.text.startsWith(field.value);\n          case 'is':\n            return suggestion.text.trim() !== field.value;\n          case 'withoutPrefix':\n            return suggestion.text.startsWith(field.value);\n        }\n      }, true);\n    });\n\n    return filteredSuggestions;\n  }\n}\n"]}]}