{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/apm.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/apm.ts","mtime":1567631711870},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { convertKueryToEsQuery, getAPMIndexPatternForKuery } from '../../kuery';\nexport function getEncodedEsQuery(kuery) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var indexPattern, esFilterQuery;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!kuery) {\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, getAPMIndexPatternForKuery()];\n                case 1:\n                    indexPattern = _a.sent();\n                    if (!indexPattern) {\n                        return [2 /*return*/];\n                    }\n                    esFilterQuery = convertKueryToEsQuery(kuery, indexPattern);\n                    return [2 /*return*/, encodeURIComponent(JSON.stringify(esFilterQuery))];\n            }\n        });\n    });\n}\nexport function addVersion(item) {\n    if (item != null) {\n        item.version = item.hasOwnProperty('trace') ? 'v2' : 'v1';\n    }\n    return item;\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/apm.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/apm.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAIH,OAAO,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,MAAM,aAAa,CAAC;AAEhF,MAAM,UAAgB,iBAAiB,CAAC,KAAc;;;;;;oBACpD,IAAI,CAAC,KAAK,EAAE;wBACV,sBAAO;qBACR;oBAEoB,qBAAM,0BAA0B,EAAE,EAAA;;oBAAjD,YAAY,GAAG,SAAkC;oBACvD,IAAI,CAAC,YAAY,EAAE;wBACjB,sBAAO;qBACR;oBAEK,aAAa,GAAG,qBAAqB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;oBACjE,sBAAO,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,EAAC;;;;CAC1D;AAED,MAAM,UAAU,UAAU,CACxB,IAAO;IAEP,IAAI,IAAI,IAAI,IAAI,EAAE;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;KAC3D;IAED,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { Span } from 'x-pack/plugins/apm/typings/es_schemas/Span';\nimport { Transaction } from 'x-pack/plugins/apm/typings/es_schemas/Transaction';\nimport { convertKueryToEsQuery, getAPMIndexPatternForKuery } from '../../kuery';\n\nexport async function getEncodedEsQuery(kuery?: string) {\n  if (!kuery) {\n    return;\n  }\n\n  const indexPattern = await getAPMIndexPatternForKuery();\n  if (!indexPattern) {\n    return;\n  }\n\n  const esFilterQuery = convertKueryToEsQuery(kuery, indexPattern);\n  return encodeURIComponent(JSON.stringify(esFilterQuery));\n}\n\nexport function addVersion<T extends Span | Transaction | null | undefined>(\n  item: T\n): T {\n  if (item != null) {\n    item.version = item.hasOwnProperty('trace') ? 'v2' : 'v1';\n  }\n\n  return item;\n}\n"]}]}