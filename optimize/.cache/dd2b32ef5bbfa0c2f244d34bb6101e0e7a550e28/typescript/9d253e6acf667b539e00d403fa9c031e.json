{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/CPUUsageChart.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/CPUUsageChart.tsx","mtime":1567631711860},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiTitle } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\n// @ts-ignore\nimport CustomPlot from 'x-pack/plugins/apm/public/components/shared/charts/CustomPlot';\nimport { asPercent } from 'x-pack/plugins/apm/public/utils/formatters';\nexport function CPUUsageChart(_a) {\n    var data = _a.data, hoverXHandlers = _a.hoverXHandlers;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(EuiTitle, { size: \"s\" },\n            React.createElement(\"span\", null, i18n.translate('xpack.apm.serviceDetails.metrics.cpuUsageChartTitle', {\n                defaultMessage: 'CPU usage'\n            }))),\n        React.createElement(CustomPlot, tslib_1.__assign({}, hoverXHandlers, { noHits: data.totalHits === 0, series: data.series, tickFormatY: function (y) { return (y || 0) * 100 + \"%\"; }, formatTooltipValue: function (c) { return asPercent(c.y || 0, 1); }, yMax: 1 }))));\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/CPUUsageChart.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/CPUUsageChart.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,aAAa;AACb,OAAO,UAAU,MAAM,+DAA+D,CAAC;AAEvF,OAAO,EAAE,SAAS,EAAE,MAAM,4CAA4C,CAAC;AASvE,MAAM,UAAU,aAAa,CAAC,EAA+B;QAA7B,cAAI,EAAE,kCAAc;IAClD,OAAO,CACL,oBAAC,KAAK,CAAC,QAAQ;QACb,oBAAC,QAAQ,IAAC,IAAI,EAAC,GAAG;YAChB,kCACG,IAAI,CAAC,SAAS,CACb,qDAAqD,EACrD;gBACE,cAAc,EAAE,WAAW;aAC5B,CACF,CACI,CACE;QACX,oBAAC,UAAU,uBACL,cAAc,IAClB,MAAM,EAAE,IAAI,CAAC,SAAS,KAAK,CAAC,EAC5B,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,WAAW,EAAE,UAAC,CAAgB,IAAK,OAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,MAAG,EAApB,CAAoB,EACvD,kBAAkB,EAAE,UAAC,CAAa,IAAK,OAAA,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAtB,CAAsB,EAC7D,IAAI,EAAE,CAAC,IACP,CACa,CAClB,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiTitle } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\n// @ts-ignore\nimport CustomPlot from 'x-pack/plugins/apm/public/components/shared/charts/CustomPlot';\nimport { HoverXHandlers } from 'x-pack/plugins/apm/public/components/shared/charts/SyncChartGroup';\nimport { asPercent } from 'x-pack/plugins/apm/public/utils/formatters';\nimport { CPUChartAPIResponse } from 'x-pack/plugins/apm/server/lib/metrics/get_cpu_chart_data/transformer';\nimport { Coordinate } from 'x-pack/plugins/apm/typings/timeseries';\n\ninterface Props {\n  data: CPUChartAPIResponse;\n  hoverXHandlers: HoverXHandlers;\n}\n\nexport function CPUUsageChart({ data, hoverXHandlers }: Props) {\n  return (\n    <React.Fragment>\n      <EuiTitle size=\"s\">\n        <span>\n          {i18n.translate(\n            'xpack.apm.serviceDetails.metrics.cpuUsageChartTitle',\n            {\n              defaultMessage: 'CPU usage'\n            }\n          )}\n        </span>\n      </EuiTitle>\n      <CustomPlot\n        {...hoverXHandlers}\n        noHits={data.totalHits === 0}\n        series={data.series}\n        tickFormatY={(y: number | null) => `${(y || 0) * 100}%`}\n        formatTooltipValue={(c: Coordinate) => asPercent(c.y || 0, 1)}\n        yMax={1}\n      />\n    </React.Fragment>\n  );\n}\n"]}]}