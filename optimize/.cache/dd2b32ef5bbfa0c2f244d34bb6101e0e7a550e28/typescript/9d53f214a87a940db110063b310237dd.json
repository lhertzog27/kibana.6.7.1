{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/monitor_list/get_monitor_list.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/monitor_list/get_monitor_list.ts","mtime":1567631712329},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport gql from 'graphql-tag';\nexport var getMonitorListQueryString = \"\\n  query MonitorList($dateRangeStart: String!, $dateRangeEnd: String!, $filters: String) {\\n    monitorStatus: getMonitors(\\n      dateRangeStart: $dateRangeStart\\n      dateRangeEnd: $dateRangeEnd\\n      filters: $filters\\n    ) {\\n      monitors {\\n        key {\\n          id\\n          port\\n        }\\n        ping {\\n          timestamp\\n          monitor {\\n            status\\n            type\\n            host\\n            ip\\n            duration {\\n              us\\n            }\\n          }\\n        }\\n        upSeries {\\n          x\\n          y\\n        }\\n        downSeries {\\n          x\\n          y\\n        }\\n      }\\n    }\\n  }\\n\";\nexport var getMonitorListQuery = gql(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  \", \"\\n\"], [\"\\n  \", \"\\n\"])), getMonitorListQueryString);\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/monitor_list/get_monitor_list.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/monitor_list/get_monitor_list.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,GAAG,MAAM,aAAa,CAAC;AAE9B,MAAM,CAAC,IAAM,yBAAyB,GAAG,kpBAmCxC,CAAC;AAEF,MAAM,CAAC,IAAM,mBAAmB,GAAG,GAAG,uFAAA,MAClC,EAAyB,IAC5B,KADG,yBAAyB,CAC5B,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport gql from 'graphql-tag';\n\nexport const getMonitorListQueryString = `\n  query MonitorList($dateRangeStart: String!, $dateRangeEnd: String!, $filters: String) {\n    monitorStatus: getMonitors(\n      dateRangeStart: $dateRangeStart\n      dateRangeEnd: $dateRangeEnd\n      filters: $filters\n    ) {\n      monitors {\n        key {\n          id\n          port\n        }\n        ping {\n          timestamp\n          monitor {\n            status\n            type\n            host\n            ip\n            duration {\n              us\n            }\n          }\n        }\n        upSeries {\n          x\n          y\n        }\n        downSeries {\n          x\n          y\n        }\n      }\n    }\n  }\n`;\n\nexport const getMonitorListQuery = gql`\n  ${getMonitorListQueryString}\n`;\n"]}]}