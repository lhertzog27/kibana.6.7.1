{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/url_helpers.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/url_helpers.ts","mtime":1567631711865},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport createHistory from 'history/createHashHistory';\nimport { isPlainObject, mapValues } from 'lodash';\nimport qs from 'querystring';\nimport rison from 'rison-node';\nimport chrome from 'ui/chrome';\nimport url from 'url';\nexport function toQuery(search) {\n    return search ? qs.parse(search.slice(1)) : {};\n}\nexport function fromQuery(query) {\n    var encodedQuery = encodeQuery(query, ['_g', '_a']);\n    return stringifyWithoutEncoding(encodedQuery);\n}\nexport function encodeQuery(query, exclude) {\n    if (exclude === void 0) { exclude = []; }\n    return mapValues(query, function (value, key) {\n        if (exclude.includes(key)) {\n            return encodeURI(value);\n        }\n        return qs.escape(value);\n    });\n}\nfunction stringifyWithoutEncoding(query) {\n    return qs.stringify(query, undefined, undefined, {\n        encodeURIComponent: function (v) { return v; }\n    });\n}\nfunction risonSafeDecode(value) {\n    if (!value) {\n        return {};\n    }\n    try {\n        var decoded = rison.decode(value);\n        return isPlainObject(decoded) ? decoded : {};\n    }\n    catch (e) {\n        return {};\n    }\n}\n// Kibana default set in: https://github.com/elastic/kibana/blob/e13e47fc4eb6112f2a5401408e9f765eae90f55d/x-pack/plugins/apm/public/utils/timepicker/index.js#L31-L35\n// TODO: store this in config or a shared constant?\nvar DEFAULT_KIBANA_TIME_RANGE = {\n    time: {\n        from: 'now-24h',\n        mode: 'quick',\n        to: 'now'\n    }\n};\nfunction getQueryWithRisonParams(location, query) {\n    if (query === void 0) { query = {}; }\n    // Preserve current _g and _a\n    var currentQuery = toQuery(location.search);\n    var decodedG = risonSafeDecode(currentQuery._g);\n    var combinedG = tslib_1.__assign({}, DEFAULT_KIBANA_TIME_RANGE, decodedG, query._g);\n    var encodedG = rison.encode(combinedG);\n    var encodedA = query._a ? rison.encode(query._a) : '';\n    var queryWithRisonParams = tslib_1.__assign({}, query, { _g: encodedG, _a: encodedA });\n    if (currentQuery.kuery) {\n        queryWithRisonParams.kuery = currentQuery.kuery;\n    }\n    return queryWithRisonParams;\n}\nexport function getKibanaHref(_b) {\n    var location = _b.location, _c = _b.pathname, pathname = _c === void 0 ? '' : _c, hash = _b.hash, _d = _b.query, query = _d === void 0 ? {} : _d;\n    var queryWithRisonParams = getQueryWithRisonParams(location, query);\n    var search = stringifyWithoutEncoding(queryWithRisonParams);\n    var href = url.format({\n        pathname: chrome.addBasePath(pathname),\n        hash: hash + \"?\" + search\n    });\n    return href;\n}\n// This is downright horrible ðŸ˜­ ðŸ’”\n// Angular decodes encoded url tokens like \"%2F\" to \"/\" which causes problems when path params contains forward slashes\n// This was originally fixed in Angular, but roled back to avoid breaking backwards compatability: https://github.com/angular/angular.js/commit/2bdf7126878c87474bb7588ce093d0a3c57b0026\nexport function legacyEncodeURIComponent(rawUrl) {\n    return (rawUrl &&\n        encodeURIComponent(rawUrl)\n            .replace(/~/g, '%7E')\n            .replace(/%/g, '~'));\n}\nexport function legacyDecodeURIComponent(encodedUrl) {\n    return encodedUrl && decodeURIComponent(encodedUrl.replace(/~/g, '%'));\n}\n// Make history singleton available across APM project.\n// This is not great. Other options are to use context or withRouter helper\n// React Context API is unstable and will change soon-ish (probably 16.3)\n// withRouter helper from react-router overrides several props (eg. `location`) which makes it less desireable\nexport var history = createHistory();\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/url_helpers.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/Links/url_helpers.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { Location } from 'history';\nimport createHistory from 'history/createHashHistory';\nimport { isPlainObject, mapValues } from 'lodash';\nimport qs from 'querystring';\nimport rison from 'rison-node';\nimport chrome from 'ui/chrome';\nimport url from 'url';\nimport { StringMap } from 'x-pack/plugins/apm/typings/common';\n\nexport function toQuery(search?: string): QueryParams {\n  return search ? qs.parse(search.slice(1)) : {};\n}\n\nexport function fromQuery(query: QueryParams) {\n  const encodedQuery = encodeQuery(query, ['_g', '_a']);\n  return stringifyWithoutEncoding(encodedQuery);\n}\n\nexport function encodeQuery(query: QueryParams, exclude: string[] = []) {\n  return mapValues(query, (value, key) => {\n    if (exclude.includes(key as string)) {\n      return encodeURI(value);\n    }\n    return qs.escape(value);\n  });\n}\n\nfunction stringifyWithoutEncoding(query: QueryParams) {\n  return qs.stringify(query, undefined, undefined, {\n    encodeURIComponent: (v: string) => v\n  });\n}\n\nfunction risonSafeDecode(value?: string) {\n  if (!value) {\n    return {};\n  }\n\n  try {\n    const decoded = rison.decode(value);\n    return isPlainObject(decoded) ? (decoded as StringMap) : {};\n  } catch (e) {\n    return {};\n  }\n}\n\n// Kibana default set in: https://github.com/elastic/kibana/blob/e13e47fc4eb6112f2a5401408e9f765eae90f55d/x-pack/plugins/apm/public/utils/timepicker/index.js#L31-L35\n// TODO: store this in config or a shared constant?\nconst DEFAULT_KIBANA_TIME_RANGE = {\n  time: {\n    from: 'now-24h',\n    mode: 'quick',\n    to: 'now'\n  }\n};\n\nfunction getQueryWithRisonParams(location: Location, query: RisonDecoded = {}) {\n  // Preserve current _g and _a\n  const currentQuery = toQuery(location.search);\n  const decodedG = risonSafeDecode(currentQuery._g);\n  const combinedG = { ...DEFAULT_KIBANA_TIME_RANGE, ...decodedG, ...query._g };\n  const encodedG = rison.encode(combinedG);\n  const encodedA = query._a ? rison.encode(query._a) : '';\n\n  const queryWithRisonParams: QueryParams = {\n    ...query,\n    _g: encodedG,\n    _a: encodedA\n  };\n\n  if (currentQuery.kuery) {\n    queryWithRisonParams.kuery = currentQuery.kuery;\n  }\n\n  return queryWithRisonParams;\n}\n\nexport interface KibanaHrefArgs {\n  location: Location;\n  pathname?: string;\n  hash?: string;\n  query?: QueryParamsDecoded;\n}\n\nexport function getKibanaHref({\n  location,\n  pathname = '',\n  hash,\n  query = {}\n}: KibanaHrefArgs): string {\n  const queryWithRisonParams = getQueryWithRisonParams(location, query);\n  const search = stringifyWithoutEncoding(queryWithRisonParams);\n  const href = url.format({\n    pathname: chrome.addBasePath(pathname),\n    hash: `${hash}?${search}`\n  });\n  return href;\n}\n\ninterface APMQueryParams {\n  transactionId?: string;\n  traceId?: string;\n  detailTab?: string;\n  flyoutDetailTab?: string;\n  waterfallItemId?: string;\n  spanId?: string;\n  page?: string;\n  sortDirection?: string;\n  sortField?: string;\n  kuery?: string;\n}\n\ninterface RisonEncoded {\n  _g?: string;\n  _a?: string;\n}\n\ninterface RisonDecoded {\n  _g?: StringMap;\n  _a?: StringMap;\n}\n\nexport type QueryParams = APMQueryParams & RisonEncoded;\nexport type QueryParamsDecoded = APMQueryParams & RisonDecoded;\n\n// This is downright horrible ðŸ˜­ ðŸ’”\n// Angular decodes encoded url tokens like \"%2F\" to \"/\" which causes problems when path params contains forward slashes\n// This was originally fixed in Angular, but roled back to avoid breaking backwards compatability: https://github.com/angular/angular.js/commit/2bdf7126878c87474bb7588ce093d0a3c57b0026\nexport function legacyEncodeURIComponent(rawUrl?: string) {\n  return (\n    rawUrl &&\n    encodeURIComponent(rawUrl)\n      .replace(/~/g, '%7E')\n      .replace(/%/g, '~')\n  );\n}\n\nexport function legacyDecodeURIComponent(encodedUrl?: string) {\n  return encodedUrl && decodeURIComponent(encodedUrl.replace(/~/g, '%'));\n}\n\n// Make history singleton available across APM project.\n// This is not great. Other options are to use context or withRouter helper\n// React Context API is unstable and will change soon-ish (probably 16.3)\n// withRouter helper from react-router overrides several props (eg. `location`) which makes it less desireable\nexport const history = createHistory();\n"]}]}