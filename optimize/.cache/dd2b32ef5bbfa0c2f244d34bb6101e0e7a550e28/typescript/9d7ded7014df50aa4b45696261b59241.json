{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/url_state.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/url_state.tsx","mtime":1567631711991},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport throttle from 'lodash/fp/throttle';\nimport React from 'react';\nimport { Route } from 'react-router';\nimport { decode, encode } from 'rison-node';\nimport { QueryString } from 'ui/utils/query_string';\nvar UrlStateContainerLifecycle = /** @class */ (function (_super) {\n    tslib_1.__extends(UrlStateContainerLifecycle, _super);\n    function UrlStateContainerLifecycle() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // tslint:disable-next-line:member-ordering this is really a method despite what tslint thinks\n        _this.replaceStateInLocation = throttle(1000, function (urlState) {\n            var _a = _this.props, history = _a.history, location = _a.location, urlStateKey = _a.urlStateKey;\n            var newLocation = replaceQueryStringInLocation(location, replaceStateKeyInQueryString(urlStateKey, urlState)(getQueryStringFromLocation(location)));\n            if (newLocation !== location) {\n                history.replace(newLocation);\n            }\n        });\n        _this.handleInitialize = function (location) {\n            var _a = _this.props, onInitialize = _a.onInitialize, mapToUrlState = _a.mapToUrlState, urlStateKey = _a.urlStateKey;\n            if (!onInitialize || !mapToUrlState) {\n                return;\n            }\n            var newUrlStateString = getParamFromQueryString(getQueryStringFromLocation(location), urlStateKey);\n            var newUrlState = mapToUrlState(decodeRisonUrlState(newUrlStateString));\n            onInitialize(newUrlState);\n        };\n        _this.handleLocationChange = function (prevLocation, newLocation) {\n            var _a = _this.props, onChange = _a.onChange, mapToUrlState = _a.mapToUrlState, urlStateKey = _a.urlStateKey;\n            if (!onChange || !mapToUrlState) {\n                return;\n            }\n            var previousUrlStateString = getParamFromQueryString(getQueryStringFromLocation(prevLocation), urlStateKey);\n            var newUrlStateString = getParamFromQueryString(getQueryStringFromLocation(newLocation), urlStateKey);\n            if (previousUrlStateString !== newUrlStateString) {\n                var previousUrlState = mapToUrlState(decodeRisonUrlState(previousUrlStateString));\n                var newUrlState = mapToUrlState(decodeRisonUrlState(newUrlStateString));\n                if (typeof newUrlState !== 'undefined') {\n                    onChange(newUrlState, previousUrlState);\n                }\n            }\n        };\n        return _this;\n    }\n    UrlStateContainerLifecycle.prototype.render = function () {\n        return null;\n    };\n    UrlStateContainerLifecycle.prototype.componentDidUpdate = function (_a) {\n        var prevLocation = _a.location, prevUrlState = _a.urlState;\n        var _b = this.props, history = _b.history, location = _b.location, urlState = _b.urlState;\n        if (urlState !== prevUrlState) {\n            this.replaceStateInLocation(urlState);\n        }\n        if (history.action === 'POP' && location !== prevLocation) {\n            this.handleLocationChange(prevLocation, location);\n        }\n    };\n    UrlStateContainerLifecycle.prototype.componentDidMount = function () {\n        var location = this.props.location;\n        this.handleInitialize(location);\n    };\n    return UrlStateContainerLifecycle;\n}(React.Component));\nexport var UrlStateContainer = function (props) { return (React.createElement(Route, null, function (_a) {\n    var history = _a.history, location = _a.location;\n    return (React.createElement(UrlStateContainerLifecycle, tslib_1.__assign({ history: history, location: location }, props)));\n})); };\nexport var decodeRisonUrlState = function (value) {\n    try {\n        return value ? decode(value) : undefined;\n    }\n    catch (error) {\n        if (error instanceof Error && error.message.startsWith('rison decoder error')) {\n            return {};\n        }\n        throw error;\n    }\n};\nvar encodeRisonUrlState = function (state) { return encode(state); };\nexport var getQueryStringFromLocation = function (location) { return location.search.substring(1); };\nexport var getParamFromQueryString = function (queryString, key) {\n    var queryParam = QueryString.decode(queryString)[key];\n    return Array.isArray(queryParam) ? queryParam[0] : queryParam;\n};\nexport var replaceStateKeyInQueryString = function (stateKey, urlState) { return function (queryString) {\n    var _a;\n    var previousQueryValues = QueryString.decode(queryString);\n    var encodedUrlState = typeof urlState !== 'undefined' ? encodeRisonUrlState(urlState) : undefined;\n    return QueryString.encode(tslib_1.__assign({}, previousQueryValues, (_a = {}, _a[stateKey] = encodedUrlState, _a)));\n}; };\nvar replaceQueryStringInLocation = function (location, queryString) {\n    if (queryString === getQueryStringFromLocation(location)) {\n        return location;\n    }\n    else {\n        return tslib_1.__assign({}, location, { search: \"?\" + queryString });\n    }\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/url_state.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/url_state.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAGH,OAAO,QAAQ,MAAM,oBAAoB,CAAC;AAC1C,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,KAAK,EAAc,MAAM,cAAc,CAAC;AACjD,OAAO,EAAE,MAAM,EAAE,MAAM,EAAc,MAAM,YAAY,CAAC;AAExD,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAepD;IAAmD,sDAElD;IAFD;QAAA,qEAmFC;QAvDC,8FAA8F;QACtF,4BAAsB,GAAG,QAAQ,CAAC,IAAI,EAAE,UAAC,QAA8B;YACvE,IAAA,gBAA+C,EAA7C,oBAAO,EAAE,sBAAQ,EAAE,4BAAW,CAAgB;YAEtD,IAAM,WAAW,GAAG,4BAA4B,CAC9C,QAAQ,EACR,4BAA4B,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC,CAC1F,CAAC;YAEF,IAAI,WAAW,KAAK,QAAQ,EAAE;gBAC5B,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;QAEK,sBAAgB,GAAG,UAAC,QAAkB;YACtC,IAAA,gBAAyD,EAAvD,8BAAY,EAAE,gCAAa,EAAE,4BAAW,CAAgB;YAEhE,IAAI,CAAC,YAAY,IAAI,CAAC,aAAa,EAAE;gBACnC,OAAO;aACR;YAED,IAAM,iBAAiB,GAAG,uBAAuB,CAC/C,0BAA0B,CAAC,QAAQ,CAAC,EACpC,WAAW,CACZ,CAAC;YACF,IAAM,WAAW,GAAG,aAAa,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAE1E,YAAY,CAAC,WAAW,CAAC,CAAC;QAC5B,CAAC,CAAC;QAEM,0BAAoB,GAAG,UAAC,YAAsB,EAAE,WAAqB;YACrE,IAAA,gBAAqD,EAAnD,sBAAQ,EAAE,gCAAa,EAAE,4BAAW,CAAgB;YAE5D,IAAI,CAAC,QAAQ,IAAI,CAAC,aAAa,EAAE;gBAC/B,OAAO;aACR;YAED,IAAM,sBAAsB,GAAG,uBAAuB,CACpD,0BAA0B,CAAC,YAAY,CAAC,EACxC,WAAW,CACZ,CAAC;YACF,IAAM,iBAAiB,GAAG,uBAAuB,CAC/C,0BAA0B,CAAC,WAAW,CAAC,EACvC,WAAW,CACZ,CAAC;YAEF,IAAI,sBAAsB,KAAK,iBAAiB,EAAE;gBAChD,IAAM,gBAAgB,GAAG,aAAa,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,CAAC,CAAC;gBACpF,IAAM,WAAW,GAAG,aAAa,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAE1E,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE;oBACtC,QAAQ,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;iBACzC;aACF;QACH,CAAC,CAAC;;IACJ,CAAC;IAhFQ,2CAAM,GAAb;QACE,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,uDAAkB,GAAzB,UAA0B,EAGkB;YAF1C,0BAAsB,EACtB,0BAAsB;QAEhB,IAAA,eAA4C,EAA1C,oBAAO,EAAE,sBAAQ,EAAE,sBAAQ,CAAgB;QAEnD,IAAI,QAAQ,KAAK,YAAY,EAAE;YAC7B,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;SACvC;QAED,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK,IAAI,QAAQ,KAAK,YAAY,EAAE;YACzD,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;SACnD;IACH,CAAC;IAEM,sDAAiB,GAAxB;QACU,IAAA,8BAAQ,CAAgB;QAEhC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAyDH,iCAAC;AAAD,CAAC,AAnFD,CAAmD,KAAK,CAAC,SAAS,GAmFjE;AAED,MAAM,CAAC,IAAM,iBAAiB,GAAG,UAC/B,KAAuC,IACpC,OAAA,CACH,oBAAC,KAAK,QACH,UAAC,EAAqB;QAAnB,oBAAO,EAAE,sBAAQ;IAAO,OAAA,CAC1B,oBAAC,0BAA0B,qBAAW,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,IAAM,KAAK,EAAI,CAC1F;AAF2B,CAE3B,CACK,CACT,EANI,CAMJ,CAAC;AAEF,MAAM,CAAC,IAAM,mBAAmB,GAAG,UAAC,KAAyB;IAC3D,IAAI;QACF,OAAO,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;KAC1C;IAAC,OAAO,KAAK,EAAE;QACd,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAE;YAC7E,OAAO,EAAE,CAAC;SACX;QACD,MAAM,KAAK,CAAC;KACb;AACH,CAAC,CAAC;AAEF,IAAM,mBAAmB,GAAG,UAAC,KAAU,IAAK,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC;AAE1D,MAAM,CAAC,IAAM,0BAA0B,GAAG,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAA5B,CAA4B,CAAC;AAE/F,MAAM,CAAC,IAAM,uBAAuB,GAAG,UAAC,WAAmB,EAAE,GAAW;IACtE,IAAM,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;IACxD,OAAO,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;AAChE,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,4BAA4B,GAAG,UAC1C,QAAgB,EAChB,QAA8B,IAC3B,OAAA,UAAC,WAAmB;;IACvB,IAAM,mBAAmB,GAAG,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAC5D,IAAM,eAAe,GACnB,OAAO,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC9E,OAAO,WAAW,CAAC,MAAM,sBACpB,mBAAmB,eACrB,QAAQ,IAAG,eAAe,OAC3B,CAAC;AACL,CAAC,EARI,CAQJ,CAAC;AAEF,IAAM,4BAA4B,GAAG,UAAC,QAAkB,EAAE,WAAmB;IAC3E,IAAI,WAAW,KAAK,0BAA0B,CAAC,QAAQ,CAAC,EAAE;QACxD,OAAO,QAAQ,CAAC;KACjB;SAAM;QACL,4BACK,QAAQ,IACX,MAAM,EAAE,MAAI,WAAa,IACzB;KACH;AACH,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { History, Location } from 'history';\nimport throttle from 'lodash/fp/throttle';\nimport React from 'react';\nimport { Route, RouteProps } from 'react-router';\nimport { decode, encode, RisonValue } from 'rison-node';\n\nimport { QueryString } from 'ui/utils/query_string';\n\ninterface UrlStateContainerProps<UrlState> {\n  urlState: UrlState | undefined;\n  urlStateKey: string;\n  mapToUrlState?: (value: any) => UrlState | undefined;\n  onChange?: (urlState: UrlState, previousUrlState: UrlState | undefined) => void;\n  onInitialize?: (urlState: UrlState | undefined) => void;\n}\n\ninterface UrlStateContainerLifecycleProps<UrlState> extends UrlStateContainerProps<UrlState> {\n  location: Location;\n  history: History;\n}\n\nclass UrlStateContainerLifecycle<UrlState> extends React.Component<\n  UrlStateContainerLifecycleProps<UrlState>\n> {\n  public render() {\n    return null;\n  }\n\n  public componentDidUpdate({\n    location: prevLocation,\n    urlState: prevUrlState,\n  }: UrlStateContainerLifecycleProps<UrlState>) {\n    const { history, location, urlState } = this.props;\n\n    if (urlState !== prevUrlState) {\n      this.replaceStateInLocation(urlState);\n    }\n\n    if (history.action === 'POP' && location !== prevLocation) {\n      this.handleLocationChange(prevLocation, location);\n    }\n  }\n\n  public componentDidMount() {\n    const { location } = this.props;\n\n    this.handleInitialize(location);\n  }\n\n  // tslint:disable-next-line:member-ordering this is really a method despite what tslint thinks\n  private replaceStateInLocation = throttle(1000, (urlState: UrlState | undefined) => {\n    const { history, location, urlStateKey } = this.props;\n\n    const newLocation = replaceQueryStringInLocation(\n      location,\n      replaceStateKeyInQueryString(urlStateKey, urlState)(getQueryStringFromLocation(location))\n    );\n\n    if (newLocation !== location) {\n      history.replace(newLocation);\n    }\n  });\n\n  private handleInitialize = (location: Location) => {\n    const { onInitialize, mapToUrlState, urlStateKey } = this.props;\n\n    if (!onInitialize || !mapToUrlState) {\n      return;\n    }\n\n    const newUrlStateString = getParamFromQueryString(\n      getQueryStringFromLocation(location),\n      urlStateKey\n    );\n    const newUrlState = mapToUrlState(decodeRisonUrlState(newUrlStateString));\n\n    onInitialize(newUrlState);\n  };\n\n  private handleLocationChange = (prevLocation: Location, newLocation: Location) => {\n    const { onChange, mapToUrlState, urlStateKey } = this.props;\n\n    if (!onChange || !mapToUrlState) {\n      return;\n    }\n\n    const previousUrlStateString = getParamFromQueryString(\n      getQueryStringFromLocation(prevLocation),\n      urlStateKey\n    );\n    const newUrlStateString = getParamFromQueryString(\n      getQueryStringFromLocation(newLocation),\n      urlStateKey\n    );\n\n    if (previousUrlStateString !== newUrlStateString) {\n      const previousUrlState = mapToUrlState(decodeRisonUrlState(previousUrlStateString));\n      const newUrlState = mapToUrlState(decodeRisonUrlState(newUrlStateString));\n\n      if (typeof newUrlState !== 'undefined') {\n        onChange(newUrlState, previousUrlState);\n      }\n    }\n  };\n}\n\nexport const UrlStateContainer = <UrlState extends any>(\n  props: UrlStateContainerProps<UrlState>\n) => (\n  <Route<RouteProps>>\n    {({ history, location }) => (\n      <UrlStateContainerLifecycle<UrlState> history={history} location={location} {...props} />\n    )}\n  </Route>\n);\n\nexport const decodeRisonUrlState = (value: string | undefined): RisonValue | undefined => {\n  try {\n    return value ? decode(value) : undefined;\n  } catch (error) {\n    if (error instanceof Error && error.message.startsWith('rison decoder error')) {\n      return {};\n    }\n    throw error;\n  }\n};\n\nconst encodeRisonUrlState = (state: any) => encode(state);\n\nexport const getQueryStringFromLocation = (location: Location) => location.search.substring(1);\n\nexport const getParamFromQueryString = (queryString: string, key: string): string | undefined => {\n  const queryParam = QueryString.decode(queryString)[key];\n  return Array.isArray(queryParam) ? queryParam[0] : queryParam;\n};\n\nexport const replaceStateKeyInQueryString = <UrlState extends any>(\n  stateKey: string,\n  urlState: UrlState | undefined\n) => (queryString: string) => {\n  const previousQueryValues = QueryString.decode(queryString);\n  const encodedUrlState =\n    typeof urlState !== 'undefined' ? encodeRisonUrlState(urlState) : undefined;\n  return QueryString.encode({\n    ...previousQueryValues,\n    [stateKey]: encodedUrlState,\n  });\n};\n\nconst replaceQueryStringInLocation = (location: Location, queryString: string): Location => {\n  if (queryString === getQueryStringFromLocation(location)) {\n    return location;\n  } else {\n    return {\n      ...location,\n      search: `?${queryString}`,\n    };\n  }\n};\n"]}]}