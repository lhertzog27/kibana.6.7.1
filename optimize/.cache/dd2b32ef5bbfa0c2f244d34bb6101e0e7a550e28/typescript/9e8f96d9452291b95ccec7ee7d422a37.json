{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/tokens/rest_tokens_adapter.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/tokens/rest_tokens_adapter.ts","mtime":1567631711882},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nvar RestTokensAdapter = /** @class */ (function () {\n    function RestTokensAdapter(REST) {\n        this.REST = REST;\n    }\n    RestTokensAdapter.prototype.createEnrollmentTokens = function (numTokens) {\n        if (numTokens === void 0) { numTokens = 1; }\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var tokens;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.REST.post('/api/beats/enrollment_tokens', {\n                            num_tokens: numTokens,\n                        })];\n                    case 1:\n                        tokens = (_a.sent()).tokens;\n                        return [2 /*return*/, tokens];\n                }\n            });\n        });\n    };\n    return RestTokensAdapter;\n}());\nexport { RestTokensAdapter };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/tokens/rest_tokens_adapter.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/tokens/rest_tokens_adapter.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAKH;IACE,2BAA6B,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;IAAG,CAAC;IAExC,kDAAsB,GAAnC,UAAoC,SAAqB;QAArB,0BAAA,EAAA,aAAqB;+CAAG,OAAO;;;;4BACjD,qBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAuB,8BAA8B,EAAE;4BACzF,UAAU,EAAE,SAAS;yBACtB,CAAC,EAAA;;wBAFI,MAAM,GAAG,CAAC,SAEd,CAAC,CAAC,MAAM;wBACV,sBAAO,MAAM,EAAC;;;;KACf;IACH,wBAAC;AAAD,CAAC,AATD,IASC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { RestAPIAdapter } from '../rest_api/adapter_types';\nimport { CMTokensAdapter } from './adapter_types';\n\nexport class RestTokensAdapter implements CMTokensAdapter {\n  constructor(private readonly REST: RestAPIAdapter) {}\n\n  public async createEnrollmentTokens(numTokens: number = 1): Promise<string[]> {\n    const tokens = (await this.REST.post<{ tokens: string[] }>('/api/beats/enrollment_tokens', {\n      num_tokens: numTokens,\n    })).tokens;\n    return tokens;\n  }\n}\n"]}]}