{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/loading_state/loading_state.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/loading_state/loading_state.ts","mtime":1567631711990},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nexport var initialLoadingState = {\n    current: {\n        progress: 'idle',\n    },\n    last: {\n        result: 'uninitialized',\n    },\n    policy: {\n        policy: 'manual',\n    },\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/loading_state/loading_state.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/loading_state/loading_state.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAYH,MAAM,CAAC,IAAM,mBAAmB,GAAsB;IACpD,OAAO,EAAE;QACP,QAAQ,EAAE,MAAM;KACjB;IACD,IAAI,EAAE;QACJ,MAAM,EAAE,eAAe;KACxB;IACD,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ;KACjB;CACF,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { LoadingPolicy } from './loading_policy';\nimport { LoadingProgress } from './loading_progress';\nimport { LoadingResult } from './loading_result';\n\nexport interface LoadingState<Parameters> {\n  current: LoadingProgress<Parameters>;\n  last: LoadingResult<Parameters>;\n  policy: LoadingPolicy;\n}\n\nexport const initialLoadingState: LoadingState<any> = {\n  current: {\n    progress: 'idle',\n  },\n  last: {\n    result: 'uninitialized',\n  },\n  policy: {\n    policy: 'manual',\n  },\n};\n"]}]}