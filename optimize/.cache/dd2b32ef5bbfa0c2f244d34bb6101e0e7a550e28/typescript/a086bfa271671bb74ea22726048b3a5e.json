{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/relative_time.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/relative_time.tsx","mtime":1567631711980},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { decomposeIntoUnits, getLabelOfScale, TimeUnit } from '../../../../common/time';\nvar RelativeTime = /** @class */ (function (_super) {\n    tslib_1.__extends(RelativeTime, _super);\n    function RelativeTime() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            currentTime: Date.now(),\n            timeoutId: null,\n        };\n        _this.updateCurrentTimeEvery = function (refreshInterval) {\n            var nextTimeoutId = window.setTimeout(_this.updateCurrentTimeEvery.bind(_this, refreshInterval), refreshInterval);\n            _this.setState({\n                currentTime: Date.now(),\n                timeoutId: nextTimeoutId,\n            });\n        };\n        _this.cancelUpdate = function () {\n            var timeoutId = _this.state.timeoutId;\n            if (timeoutId) {\n                window.clearTimeout(timeoutId);\n                _this.setState({\n                    timeoutId: null,\n                });\n            }\n        };\n        return _this;\n    }\n    RelativeTime.prototype.componentDidMount = function () {\n        var refreshInterval = this.props.refreshInterval;\n        if (refreshInterval && refreshInterval > 0) {\n            this.updateCurrentTimeEvery(refreshInterval);\n        }\n    };\n    RelativeTime.prototype.componentWillUnmount = function () {\n        this.cancelUpdate();\n    };\n    RelativeTime.prototype.render = function () {\n        var time = this.props.time;\n        var currentTime = this.state.currentTime;\n        var timeDifference = Math.abs(currentTime - time);\n        var timeFragments = decomposeIntoUnits(timeDifference, unitThresholds);\n        if (timeFragments.length === 0) {\n            return '0s';\n        }\n        else {\n            return timeFragments.map(getLabelOfScale).join(' ');\n        }\n    };\n    return RelativeTime;\n}(React.Component));\nexport { RelativeTime };\nvar unitThresholds = [TimeUnit.Day, TimeUnit.Hour, TimeUnit.Minute, TimeUnit.Second];\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/relative_time.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/relative_time.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,kBAAkB,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAYxF;IAAkC,wCAAqD;IAAvF;QAAA,qEAsDC;QArDiB,WAAK,GAAG;YACtB,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE;YACvB,SAAS,EAAE,IAAI;SAChB,CAAC;QAEK,4BAAsB,GAAG,UAAC,eAAuB;YACtD,IAAM,aAAa,GAAG,MAAM,CAAC,UAAU,CACrC,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAI,EAAE,eAAe,CAAC,EACvD,eAAe,CAChB,CAAC;YAEF,KAAI,CAAC,QAAQ,CAAC;gBACZ,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE;gBACvB,SAAS,EAAE,aAAa;aACzB,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,kBAAY,GAAG;YACZ,IAAA,iCAAS,CAAgB;YAEjC,IAAI,SAAS,EAAE;gBACb,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBAC/B,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,IAAI;iBAChB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;;IA2BJ,CAAC;IAzBQ,wCAAiB,GAAxB;QACU,IAAA,4CAAe,CAAgB;QAEvC,IAAI,eAAe,IAAI,eAAe,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;SAC9C;IACH,CAAC;IAEM,2CAAoB,GAA3B;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEM,6BAAM,GAAb;QACU,IAAA,sBAAI,CAAgB;QACpB,IAAA,oCAAW,CAAgB;QACnC,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;QAEpD,IAAM,aAAa,GAAG,kBAAkB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAEzE,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrD;IACH,CAAC;IACH,mBAAC;AAAD,CAAC,AAtDD,CAAkC,KAAK,CAAC,SAAS,GAsDhD;;AAED,IAAM,cAAc,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport * as React from 'react';\n\nimport { decomposeIntoUnits, getLabelOfScale, TimeUnit } from '../../../../common/time';\n\ninterface RelativeTimeProps {\n  time: number;\n  refreshInterval?: number;\n}\n\ninterface RelativeTimeState {\n  currentTime: number;\n  timeoutId: number | null;\n}\n\nexport class RelativeTime extends React.Component<RelativeTimeProps, RelativeTimeState> {\n  public readonly state = {\n    currentTime: Date.now(),\n    timeoutId: null,\n  };\n\n  public updateCurrentTimeEvery = (refreshInterval: number) => {\n    const nextTimeoutId = window.setTimeout(\n      this.updateCurrentTimeEvery.bind(this, refreshInterval),\n      refreshInterval\n    );\n\n    this.setState({\n      currentTime: Date.now(),\n      timeoutId: nextTimeoutId,\n    });\n  };\n\n  public cancelUpdate = () => {\n    const { timeoutId } = this.state;\n\n    if (timeoutId) {\n      window.clearTimeout(timeoutId);\n      this.setState({\n        timeoutId: null,\n      });\n    }\n  };\n\n  public componentDidMount() {\n    const { refreshInterval } = this.props;\n\n    if (refreshInterval && refreshInterval > 0) {\n      this.updateCurrentTimeEvery(refreshInterval);\n    }\n  }\n\n  public componentWillUnmount() {\n    this.cancelUpdate();\n  }\n\n  public render() {\n    const { time } = this.props;\n    const { currentTime } = this.state;\n    const timeDifference = Math.abs(currentTime - time);\n\n    const timeFragments = decomposeIntoUnits(timeDifference, unitThresholds);\n\n    if (timeFragments.length === 0) {\n      return '0s';\n    } else {\n      return timeFragments.map(getLabelOfScale).join(' ');\n    }\n  }\n}\n\nconst unitThresholds = [TimeUnit.Day, TimeUnit.Hour, TimeUnit.Minute, TimeUnit.Second];\n"]}]}