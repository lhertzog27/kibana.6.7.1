{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/elasticsearch/rest.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/elasticsearch/rest.ts","mtime":1567631711882},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\n// @ts-ignore TODO type this\nimport { fromKueryExpression, toElasticsearchQuery } from '@kbn/es-query';\nimport { isEmpty } from 'lodash';\nimport { getAutocompleteProvider } from 'ui/autocomplete_providers';\nvar RestElasticsearchAdapter = /** @class */ (function () {\n    function RestElasticsearchAdapter(api, indexPatternName) {\n        this.api = api;\n        this.indexPatternName = indexPatternName;\n        this.cachedIndexPattern = null;\n    }\n    RestElasticsearchAdapter.prototype.isKueryValid = function (kuery) {\n        try {\n            fromKueryExpression(kuery);\n        }\n        catch (err) {\n            return false;\n        }\n        return true;\n    };\n    RestElasticsearchAdapter.prototype.convertKueryToEsQuery = function (kuery) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var ast, indexPattern;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isKueryValid(kuery)) {\n                            return [2 /*return*/, ''];\n                        }\n                        ast = fromKueryExpression(kuery);\n                        return [4 /*yield*/, this.getIndexPattern()];\n                    case 1:\n                        indexPattern = _a.sent();\n                        return [2 /*return*/, JSON.stringify(toElasticsearchQuery(ast, indexPattern))];\n                }\n            });\n        });\n    };\n    RestElasticsearchAdapter.prototype.getSuggestions = function (kuery, selectionStart) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var autocompleteProvider, config, indexPattern, getAutocompleteSuggestions, results;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        autocompleteProvider = getAutocompleteProvider('kuery');\n                        if (!autocompleteProvider) {\n                            return [2 /*return*/, []];\n                        }\n                        config = {\n                            get: function () { return true; },\n                        };\n                        return [4 /*yield*/, this.getIndexPattern()];\n                    case 1:\n                        indexPattern = _a.sent();\n                        getAutocompleteSuggestions = autocompleteProvider({\n                            config: config,\n                            indexPatterns: [indexPattern],\n                            boolFilter: null,\n                        });\n                        results = getAutocompleteSuggestions({\n                            query: kuery || '',\n                            selectionStart: selectionStart,\n                            selectionEnd: selectionStart,\n                        });\n                        return [2 /*return*/, results];\n                }\n            });\n        });\n    };\n    RestElasticsearchAdapter.prototype.getIndexPattern = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.cachedIndexPattern) {\n                            return [2 /*return*/, this.cachedIndexPattern];\n                        }\n                        return [4 /*yield*/, this.api.get(\"/api/index_patterns/_fields_for_wildcard?pattern=\" + this.indexPatternName)];\n                    case 1:\n                        res = _a.sent();\n                        if (isEmpty(res.fields)) {\n                            return [2 /*return*/];\n                        }\n                        this.cachedIndexPattern = {\n                            fields: res.fields,\n                            title: \"\" + this.indexPatternName,\n                        };\n                        return [2 /*return*/, this.cachedIndexPattern];\n                }\n            });\n        });\n    };\n    return RestElasticsearchAdapter;\n}());\nexport { RestElasticsearchAdapter };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/elasticsearch/rest.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/adapters/elasticsearch/rest.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,4BAA4B;AAC5B,OAAO,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,MAAM,eAAe,CAAC;AAC1E,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjC,OAAO,EAA0B,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAI5F;IAEE,kCAA6B,GAAmB,EAAmB,gBAAwB;QAA9D,QAAG,GAAH,GAAG,CAAgB;QAAmB,qBAAgB,GAAhB,gBAAgB,CAAQ;QADnF,uBAAkB,GAAQ,IAAI,CAAC;IACuD,CAAC;IAExF,+CAAY,GAAnB,UAAoB,KAAa;QAC/B,IAAI;YACF,mBAAmB,CAAC,KAAK,CAAC,CAAC;SAC5B;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IACY,wDAAqB,GAAlC,UAAmC,KAAa;+CAAG,OAAO;;;;;wBACxD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;4BAC7B,sBAAO,EAAE,EAAC;yBACX;wBACK,GAAG,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;wBAClB,qBAAM,IAAI,CAAC,eAAe,EAAE,EAAA;;wBAA3C,YAAY,GAAG,SAA4B;wBACjD,sBAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,EAAC;;;;KAChE;IACY,iDAAc,GAA3B,UACE,KAAa,EACb,cAAmB;+CAClB,OAAO;;;;;wBACF,oBAAoB,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAC;wBAC9D,IAAI,CAAC,oBAAoB,EAAE;4BACzB,sBAAO,EAAE,EAAC;yBACX;wBACK,MAAM,GAAG;4BACb,GAAG,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI;yBAChB,CAAC;wBACmB,qBAAM,IAAI,CAAC,eAAe,EAAE,EAAA;;wBAA3C,YAAY,GAAG,SAA4B;wBAE3C,0BAA0B,GAAG,oBAAoB,CAAC;4BACtD,MAAM,QAAA;4BACN,aAAa,EAAE,CAAC,YAAY,CAAC;4BAC7B,UAAU,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACG,OAAO,GAAG,0BAA0B,CAAC;4BACzC,KAAK,EAAE,KAAK,IAAI,EAAE;4BAClB,cAAc,gBAAA;4BACd,YAAY,EAAE,cAAc;yBAC7B,CAAC,CAAC;wBACH,sBAAO,OAAO,EAAC;;;;KAChB;IAEa,kDAAe,GAA7B;;;;;;wBACE,IAAI,IAAI,CAAC,kBAAkB,EAAE;4BAC3B,sBAAO,IAAI,CAAC,kBAAkB,EAAC;yBAChC;wBACW,qBAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAC5B,sDAAoD,IAAI,CAAC,gBAAkB,CAC5E,EAAA;;wBAFK,GAAG,GAAG,SAEX;wBACD,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;4BACvB,sBAAO;yBACR;wBACD,IAAI,CAAC,kBAAkB,GAAG;4BACxB,MAAM,EAAE,GAAG,CAAC,MAAM;4BAClB,KAAK,EAAE,KAAG,IAAI,CAAC,gBAAkB;yBAClC,CAAC;wBACF,sBAAO,IAAI,CAAC,kBAAkB,EAAC;;;;KAChC;IACH,+BAAC;AAAD,CAAC,AA/DD,IA+DC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\n// @ts-ignore TODO type this\nimport { fromKueryExpression, toElasticsearchQuery } from '@kbn/es-query';\nimport { isEmpty } from 'lodash';\nimport { AutocompleteSuggestion, getAutocompleteProvider } from 'ui/autocomplete_providers';\nimport { RestAPIAdapter } from '../rest_api/adapter_types';\nimport { ElasticsearchAdapter } from './adapter_types';\n\nexport class RestElasticsearchAdapter implements ElasticsearchAdapter {\n  private cachedIndexPattern: any = null;\n  constructor(private readonly api: RestAPIAdapter, private readonly indexPatternName: string) {}\n\n  public isKueryValid(kuery: string): boolean {\n    try {\n      fromKueryExpression(kuery);\n    } catch (err) {\n      return false;\n    }\n\n    return true;\n  }\n  public async convertKueryToEsQuery(kuery: string): Promise<string> {\n    if (!this.isKueryValid(kuery)) {\n      return '';\n    }\n    const ast = fromKueryExpression(kuery);\n    const indexPattern = await this.getIndexPattern();\n    return JSON.stringify(toElasticsearchQuery(ast, indexPattern));\n  }\n  public async getSuggestions(\n    kuery: string,\n    selectionStart: any\n  ): Promise<AutocompleteSuggestion[]> {\n    const autocompleteProvider = getAutocompleteProvider('kuery');\n    if (!autocompleteProvider) {\n      return [];\n    }\n    const config = {\n      get: () => true,\n    };\n    const indexPattern = await this.getIndexPattern();\n\n    const getAutocompleteSuggestions = autocompleteProvider({\n      config,\n      indexPatterns: [indexPattern],\n      boolFilter: null,\n    });\n    const results = getAutocompleteSuggestions({\n      query: kuery || '',\n      selectionStart,\n      selectionEnd: selectionStart,\n    });\n    return results;\n  }\n\n  private async getIndexPattern() {\n    if (this.cachedIndexPattern) {\n      return this.cachedIndexPattern;\n    }\n    const res = await this.api.get<any>(\n      `/api/index_patterns/_fields_for_wildcard?pattern=${this.indexPatternName}`\n    );\n    if (isEmpty(res.fields)) {\n      return;\n    }\n    this.cachedIndexPattern = {\n      fields: res.fields,\n      title: `${this.indexPatternName}`,\n    };\n    return this.cachedIndexPattern;\n  }\n}\n"]}]}