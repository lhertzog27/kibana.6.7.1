{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_minimap/reducer.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_minimap/reducer.ts","mtime":1567631711987},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { reducerWithInitialState } from 'typescript-fsa-reducers/dist';\nimport { setMinimapIntervalSize } from './actions';\nexport var initialLogMinimapState = {\n    intervalSize: 1000 * 60 * 60 * 24,\n};\nexport var logMinimapReducer = reducerWithInitialState(initialLogMinimapState)\n    .case(setMinimapIntervalSize, function (state, intervalSize) { return ({\n    intervalSize: intervalSize,\n}); })\n    .build();\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_minimap/reducer.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_minimap/reducer.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,uBAAuB,EAAE,MAAM,8BAA8B,CAAC;AAEvE,OAAO,EAAE,sBAAsB,EAAE,MAAM,WAAW,CAAC;AAMnD,MAAM,CAAC,IAAM,sBAAsB,GAAoB;IACrD,YAAY,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;CAClC,CAAC;AAEF,MAAM,CAAC,IAAM,iBAAiB,GAAG,uBAAuB,CAAC,sBAAsB,CAAC;KAC7E,IAAI,CAAC,sBAAsB,EAAE,UAAC,KAAK,EAAE,YAAY,IAAK,OAAA,CAAC;IACtD,YAAY,cAAA;CACb,CAAC,EAFqD,CAErD,CAAC;KACF,KAAK,EAAE,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { reducerWithInitialState } from 'typescript-fsa-reducers/dist';\n\nimport { setMinimapIntervalSize } from './actions';\n\nexport interface LogMinimapState {\n  intervalSize: number;\n}\n\nexport const initialLogMinimapState: LogMinimapState = {\n  intervalSize: 1000 * 60 * 60 * 24,\n};\n\nexport const logMinimapReducer = reducerWithInitialState(initialLogMinimapState)\n  .case(setMinimapIntervalSize, (state, intervalSize) => ({\n    intervalSize,\n  }))\n  .build();\n"]}]}