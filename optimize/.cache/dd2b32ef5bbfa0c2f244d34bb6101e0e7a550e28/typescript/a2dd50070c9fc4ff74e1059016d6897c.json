{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/compose/kibana.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/compose/kibana.ts","mtime":1567631711882},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { camelCase } from 'lodash';\n// @ts-ignore not typed yet\nimport { XPackInfoProvider } from 'plugins/xpack_main/services/xpack_info';\nimport 'ui/autoload/all';\nimport chrome from 'ui/chrome';\n// @ts-ignore not typed yet\nimport { management } from 'ui/management';\nimport routes from 'ui/routes';\nimport { translateConfigSchema } from 'x-pack/plugins/beats_management/common/config_schemas_translations_map';\nimport { configBlockSchemas } from '../../../common/config_schemas';\nimport { INDEX_NAMES } from '../../../common/constants/index_names';\nimport { RestBeatsAdapter } from '../adapters/beats/rest_beats_adapter';\nimport { RestConfigBlocksAdapter } from '../adapters/configuration_blocks/rest_config_blocks_adapter';\nimport { RestElasticsearchAdapter } from '../adapters/elasticsearch/rest';\nimport { KibanaFrameworkAdapter } from '../adapters/framework/kibana_framework_adapter';\nimport { AxiosRestAPIAdapter } from '../adapters/rest_api/axios_rest_api_adapter';\nimport { RestTagsAdapter } from '../adapters/tags/rest_tags_adapter';\nimport { RestTokensAdapter } from '../adapters/tokens/rest_tokens_adapter';\nimport { BeatsLib } from '../beats';\nimport { ConfigBlocksLib } from '../configuration_blocks';\nimport { ElasticsearchLib } from '../elasticsearch';\nimport { TagsLib } from '../tags';\nimport { PLUGIN } from './../../../common/constants/plugin';\nimport { FrameworkLib } from './../framework';\n// A super early spot in kibana loading that we can use to hook before most other things\nvar onKibanaReady = chrome.dangerouslyGetActiveInjector;\nexport function compose() {\n    var api = new AxiosRestAPIAdapter(chrome.getXsrfToken(), chrome.getBasePath());\n    var esAdapter = new RestElasticsearchAdapter(api, INDEX_NAMES.BEATS);\n    var elasticsearchLib = new ElasticsearchLib(esAdapter);\n    var configBlocks = new ConfigBlocksLib(new RestConfigBlocksAdapter(api), translateConfigSchema(configBlockSchemas));\n    var tags = new TagsLib(new RestTagsAdapter(api), elasticsearchLib);\n    var tokens = new RestTokensAdapter(api);\n    var beats = new BeatsLib(new RestBeatsAdapter(api), elasticsearchLib);\n    var framework = new FrameworkLib(new KibanaFrameworkAdapter(camelCase(PLUGIN.ID), management, routes, chrome.getBasePath, onKibanaReady, XPackInfoProvider, chrome.getUiSettingsClient(), chrome.getKibanaVersion()));\n    var libs = {\n        framework: framework,\n        elasticsearch: elasticsearchLib,\n        tags: tags,\n        tokens: tokens,\n        beats: beats,\n        configBlocks: configBlocks,\n    };\n    return libs;\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/compose/kibana.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/compose/kibana.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAC;AACnC,2BAA2B;AAC3B,OAAO,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAC3E,OAAO,iBAAiB,CAAC;AACzB,OAAO,MAAM,MAAM,WAAW,CAAC;AAC/B,2BAA2B;AAC3B,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,MAAM,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,qBAAqB,EAAE,MAAM,wEAAwE,CAAC;AAC/G,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AACpE,OAAO,EAAE,WAAW,EAAE,MAAM,uCAAuC,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AACxE,OAAO,EAAE,uBAAuB,EAAE,MAAM,6DAA6D,CAAC;AACtG,OAAO,EAAE,wBAAwB,EAAE,MAAM,gCAAgC,CAAC;AAC1E,OAAO,EAAE,sBAAsB,EAAE,MAAM,gDAAgD,CAAC;AACxF,OAAO,EAAE,mBAAmB,EAAE,MAAM,6CAA6C,CAAC;AAClF,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AACrE,OAAO,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAC3E,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAC;AACpC,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAElC,OAAO,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAC;AAC5D,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,wFAAwF;AACxF,IAAM,aAAa,GAAG,MAAM,CAAC,4BAA4B,CAAC;AAE1D,MAAM,UAAU,OAAO;IACrB,IAAM,GAAG,GAAG,IAAI,mBAAmB,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IACjF,IAAM,SAAS,GAAG,IAAI,wBAAwB,CAAC,GAAG,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;IACvE,IAAM,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,SAAS,CAAC,CAAC;IACzD,IAAM,YAAY,GAAG,IAAI,eAAe,CACtC,IAAI,uBAAuB,CAAC,GAAG,CAAC,EAChC,qBAAqB,CAAC,kBAAkB,CAAC,CAC1C,CAAC;IACF,IAAM,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE,gBAAgB,CAAC,CAAC;IACrE,IAAM,MAAM,GAAG,IAAI,iBAAiB,CAAC,GAAG,CAAC,CAAC;IAC1C,IAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,IAAI,gBAAgB,CAAC,GAAG,CAAC,EAAE,gBAAgB,CAAC,CAAC;IAExE,IAAM,SAAS,GAAG,IAAI,YAAY,CAChC,IAAI,sBAAsB,CACxB,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,EACpB,UAAU,EACV,MAAM,EACN,MAAM,CAAC,WAAW,EAClB,aAAa,EACb,iBAAiB,EACjB,MAAM,CAAC,mBAAmB,EAAE,EAC5B,MAAM,CAAC,gBAAgB,EAAE,CAC1B,CACF,CAAC;IAEF,IAAM,IAAI,GAAiB;QACzB,SAAS,WAAA;QACT,aAAa,EAAE,gBAAgB;QAC/B,IAAI,MAAA;QACJ,MAAM,QAAA;QACN,KAAK,OAAA;QACL,YAAY,cAAA;KACb,CAAC;IACF,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { camelCase } from 'lodash';\n// @ts-ignore not typed yet\nimport { XPackInfoProvider } from 'plugins/xpack_main/services/xpack_info';\nimport 'ui/autoload/all';\nimport chrome from 'ui/chrome';\n// @ts-ignore not typed yet\nimport { management } from 'ui/management';\nimport routes from 'ui/routes';\nimport { translateConfigSchema } from 'x-pack/plugins/beats_management/common/config_schemas_translations_map';\nimport { configBlockSchemas } from '../../../common/config_schemas';\nimport { INDEX_NAMES } from '../../../common/constants/index_names';\nimport { RestBeatsAdapter } from '../adapters/beats/rest_beats_adapter';\nimport { RestConfigBlocksAdapter } from '../adapters/configuration_blocks/rest_config_blocks_adapter';\nimport { RestElasticsearchAdapter } from '../adapters/elasticsearch/rest';\nimport { KibanaFrameworkAdapter } from '../adapters/framework/kibana_framework_adapter';\nimport { AxiosRestAPIAdapter } from '../adapters/rest_api/axios_rest_api_adapter';\nimport { RestTagsAdapter } from '../adapters/tags/rest_tags_adapter';\nimport { RestTokensAdapter } from '../adapters/tokens/rest_tokens_adapter';\nimport { BeatsLib } from '../beats';\nimport { ConfigBlocksLib } from '../configuration_blocks';\nimport { ElasticsearchLib } from '../elasticsearch';\nimport { TagsLib } from '../tags';\nimport { FrontendLibs } from '../types';\nimport { PLUGIN } from './../../../common/constants/plugin';\nimport { FrameworkLib } from './../framework';\n\n// A super early spot in kibana loading that we can use to hook before most other things\nconst onKibanaReady = chrome.dangerouslyGetActiveInjector;\n\nexport function compose(): FrontendLibs {\n  const api = new AxiosRestAPIAdapter(chrome.getXsrfToken(), chrome.getBasePath());\n  const esAdapter = new RestElasticsearchAdapter(api, INDEX_NAMES.BEATS);\n  const elasticsearchLib = new ElasticsearchLib(esAdapter);\n  const configBlocks = new ConfigBlocksLib(\n    new RestConfigBlocksAdapter(api),\n    translateConfigSchema(configBlockSchemas)\n  );\n  const tags = new TagsLib(new RestTagsAdapter(api), elasticsearchLib);\n  const tokens = new RestTokensAdapter(api);\n  const beats = new BeatsLib(new RestBeatsAdapter(api), elasticsearchLib);\n\n  const framework = new FrameworkLib(\n    new KibanaFrameworkAdapter(\n      camelCase(PLUGIN.ID),\n      management,\n      routes,\n      chrome.getBasePath,\n      onKibanaReady,\n      XPackInfoProvider,\n      chrome.getUiSettingsClient(),\n      chrome.getKibanaVersion()\n    )\n  );\n\n  const libs: FrontendLibs = {\n    framework,\n    elasticsearch: elasticsearchLib,\n    tags,\n    tokens,\n    beats,\n    configBlocks,\n  };\n  return libs;\n}\n"]}]}