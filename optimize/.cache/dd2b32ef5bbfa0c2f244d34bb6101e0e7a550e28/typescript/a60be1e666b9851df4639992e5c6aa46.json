{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Distribution/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Distribution/index.tsx","mtime":1567631711862},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiIcon, EuiText, EuiTitle, EuiToolTip } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport d3 from 'd3';\nimport React, { Component } from 'react';\nimport { fromQuery, history, toQuery } from 'x-pack/plugins/apm/public/components/shared/Links/url_helpers';\nimport { getTimeFormatter, timeUnit } from '../../../../utils/formatters';\n// @ts-ignore\nimport Histogram from '../../../shared/charts/Histogram';\nimport { EmptyMessage } from '../../../shared/EmptyMessage';\nexport function getFormattedBuckets(buckets, bucketSize) {\n    if (!buckets) {\n        return [];\n    }\n    return buckets.map(function (_a) {\n        var sample = _a.sample, count = _a.count, key = _a.key;\n        return {\n            sample: sample,\n            x0: key,\n            x: key + bucketSize,\n            y: count,\n            style: { cursor: count > 0 && sample ? 'pointer' : 'default' }\n        };\n    });\n}\nvar Distribution = /** @class */ (function (_super) {\n    tslib_1.__extends(Distribution, _super);\n    function Distribution() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.formatYShort = function (t) {\n            return i18n.translate('xpack.apm.transactionDetails.transactionsDurationDistributionChart.unitShortLabel', {\n                defaultMessage: '{transCount} {transType, select, request {req.} other {trans.}}',\n                values: {\n                    transCount: t,\n                    transType: _this.props.urlParams.transactionType\n                }\n            });\n        };\n        _this.formatYLong = function (t) {\n            return _this.props.urlParams.transactionType === 'request'\n                ? i18n.translate('xpack.apm.transactionDetails.transactionsDurationDistributionChart.requestTypeUnitLongLabel', {\n                    defaultMessage: '{transCount, plural, =0 {# request} one {# request} other {# requests}}',\n                    values: {\n                        transCount: t\n                    }\n                })\n                : i18n.translate('xpack.apm.transactionDetails.transactionsDurationDistributionChart.transactionTypeUnitLongLabel', {\n                    defaultMessage: '{transCount, plural, =0 {# transaction} one {# transaction} other {# transactions}}',\n                    values: {\n                        transCount: t\n                    }\n                });\n        };\n        return _this;\n    }\n    Distribution.prototype.render = function () {\n        var _a = this.props, location = _a.location, distribution = _a.distribution, urlParams = _a.urlParams;\n        var buckets = getFormattedBuckets(distribution.buckets, distribution.bucketSize);\n        var isEmpty = distribution.totalHits === 0;\n        var xMax = d3.max(buckets, function (d) { return d.x; }) || 0;\n        var timeFormatter = getTimeFormatter(xMax);\n        var unit = timeUnit(xMax);\n        if (isEmpty) {\n            return (React.createElement(EmptyMessage, { heading: i18n.translate('xpack.apm.transactionDetails.notFoundLabel', {\n                    defaultMessage: 'No transactions were found.'\n                }) }));\n        }\n        var bucketIndex = buckets.findIndex(function (bucket) {\n            return bucket.sample != null &&\n                bucket.sample.transactionId === urlParams.transactionId &&\n                bucket.sample.traceId === urlParams.traceId;\n        });\n        return (React.createElement(\"div\", null,\n            React.createElement(EuiTitle, { size: \"s\" },\n                React.createElement(\"h5\", null,\n                    i18n.translate('xpack.apm.transactionDetails.transactionsDurationDistributionChartTitle', {\n                        defaultMessage: 'Transactions duration distribution'\n                    }),\n                    ' ',\n                    React.createElement(EuiToolTip, { content: React.createElement(\"div\", null,\n                            React.createElement(EuiText, null,\n                                React.createElement(\"strong\", null, i18n.translate('xpack.apm.transactionDetails.transactionsDurationDistributionChartTooltip.samplingLabel', {\n                                    defaultMessage: 'Sampling'\n                                }))),\n                            React.createElement(EuiText, null, i18n.translate('xpack.apm.transactionDetails.transactionsDurationDistributionChartTooltip.samplingDescription', {\n                                defaultMessage: \"Each bucket will show a sample transaction. If there's no sample available, it's most likely because of the sampling limit set in the agent configuration.\"\n                            }))) },\n                        React.createElement(EuiIcon, { type: \"questionInCircle\" })))),\n            React.createElement(Histogram, { buckets: buckets, bucketSize: distribution.bucketSize, bucketIndex: bucketIndex, onClick: function (bucket) {\n                    if (bucket.sample && bucket.y > 0) {\n                        history.replace(tslib_1.__assign({}, location, { search: fromQuery(tslib_1.__assign({}, toQuery(location.search), { transactionId: bucket.sample.transactionId, traceId: bucket.sample.traceId })) }));\n                    }\n                }, formatX: timeFormatter, formatYShort: this.formatYShort, formatYLong: this.formatYLong, verticalLineHover: function (bucket) {\n                    return bucket.y > 0 && !bucket.sample;\n                }, backgroundHover: function (bucket) {\n                    return bucket.y > 0 && bucket.sample;\n                }, tooltipHeader: function (bucket) {\n                    return timeFormatter(bucket.x0, { withUnit: false }) + \" - \" + timeFormatter(bucket.x, { withUnit: false }) + \" \" + unit;\n                }, tooltipFooter: function (bucket) {\n                    return !bucket.sample &&\n                        i18n.translate('xpack.apm.transactionDetails.transactionsDurationDistributionChart.noSampleTooltip', {\n                            defaultMessage: 'No sample available for this bucket'\n                        });\n                } })));\n    };\n    return Distribution;\n}(Component));\nexport { Distribution };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Distribution/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Distribution/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiIcon, EuiText, EuiTitle, EuiToolTip } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport d3 from 'd3';\nimport { Location } from 'history';\nimport React, { Component } from 'react';\nimport {\n  fromQuery,\n  history,\n  toQuery\n} from 'x-pack/plugins/apm/public/components/shared/Links/url_helpers';\nimport { IUrlParams } from 'x-pack/plugins/apm/public/store/urlParams';\nimport { ITransactionDistributionAPIResponse } from 'x-pack/plugins/apm/server/lib/transactions/distribution';\nimport { IBucket } from 'x-pack/plugins/apm/server/lib/transactions/distribution/get_buckets/transform';\nimport { getTimeFormatter, timeUnit } from '../../../../utils/formatters';\n// @ts-ignore\nimport Histogram from '../../../shared/charts/Histogram';\nimport { EmptyMessage } from '../../../shared/EmptyMessage';\n\ninterface IChartPoint {\n  sample?: IBucket['sample'];\n  x0: number;\n  x: number;\n  y: number;\n  style: {\n    cursor: string;\n  };\n}\n\nexport function getFormattedBuckets(buckets: IBucket[], bucketSize: number) {\n  if (!buckets) {\n    return [];\n  }\n\n  return buckets.map(\n    ({ sample, count, key }): IChartPoint => {\n      return {\n        sample,\n        x0: key,\n        x: key + bucketSize,\n        y: count,\n        style: { cursor: count > 0 && sample ? 'pointer' : 'default' }\n      };\n    }\n  );\n}\n\ninterface Props {\n  location: Location;\n  distribution: ITransactionDistributionAPIResponse;\n  urlParams: IUrlParams;\n}\n\nexport class Distribution extends Component<Props> {\n  public formatYShort = (t: number) => {\n    return i18n.translate(\n      'xpack.apm.transactionDetails.transactionsDurationDistributionChart.unitShortLabel',\n      {\n        defaultMessage:\n          '{transCount} {transType, select, request {req.} other {trans.}}',\n        values: {\n          transCount: t,\n          transType: this.props.urlParams.transactionType\n        }\n      }\n    );\n  };\n\n  public formatYLong = (t: number) => {\n    return this.props.urlParams.transactionType === 'request'\n      ? i18n.translate(\n          'xpack.apm.transactionDetails.transactionsDurationDistributionChart.requestTypeUnitLongLabel',\n          {\n            defaultMessage:\n              '{transCount, plural, =0 {# request} one {# request} other {# requests}}',\n            values: {\n              transCount: t\n            }\n          }\n        )\n      : i18n.translate(\n          'xpack.apm.transactionDetails.transactionsDurationDistributionChart.transactionTypeUnitLongLabel',\n          {\n            defaultMessage:\n              '{transCount, plural, =0 {# transaction} one {# transaction} other {# transactions}}',\n            values: {\n              transCount: t\n            }\n          }\n        );\n  };\n\n  public render() {\n    const { location, distribution, urlParams } = this.props;\n\n    const buckets = getFormattedBuckets(\n      distribution.buckets,\n      distribution.bucketSize\n    );\n\n    const isEmpty = distribution.totalHits === 0;\n    const xMax = d3.max(buckets, d => d.x) || 0;\n    const timeFormatter = getTimeFormatter(xMax);\n    const unit = timeUnit(xMax);\n\n    if (isEmpty) {\n      return (\n        <EmptyMessage\n          heading={i18n.translate(\n            'xpack.apm.transactionDetails.notFoundLabel',\n            {\n              defaultMessage: 'No transactions were found.'\n            }\n          )}\n        />\n      );\n    }\n\n    const bucketIndex = buckets.findIndex(\n      bucket =>\n        bucket.sample != null &&\n        bucket.sample.transactionId === urlParams.transactionId &&\n        bucket.sample.traceId === urlParams.traceId\n    );\n\n    return (\n      <div>\n        <EuiTitle size=\"s\">\n          <h5>\n            {i18n.translate(\n              'xpack.apm.transactionDetails.transactionsDurationDistributionChartTitle',\n              {\n                defaultMessage: 'Transactions duration distribution'\n              }\n            )}{' '}\n            <EuiToolTip\n              content={\n                <div>\n                  <EuiText>\n                    <strong>\n                      {i18n.translate(\n                        'xpack.apm.transactionDetails.transactionsDurationDistributionChartTooltip.samplingLabel',\n                        {\n                          defaultMessage: 'Sampling'\n                        }\n                      )}\n                    </strong>\n                  </EuiText>\n                  <EuiText>\n                    {i18n.translate(\n                      'xpack.apm.transactionDetails.transactionsDurationDistributionChartTooltip.samplingDescription',\n                      {\n                        defaultMessage: `Each bucket will show a sample transaction. If there's no sample available, it's most likely because of the sampling limit set in the agent configuration.`\n                      }\n                    )}\n                  </EuiText>\n                </div>\n              }\n            >\n              <EuiIcon type=\"questionInCircle\" />\n            </EuiToolTip>\n          </h5>\n        </EuiTitle>\n\n        <Histogram\n          buckets={buckets}\n          bucketSize={distribution.bucketSize}\n          bucketIndex={bucketIndex}\n          onClick={(bucket: IChartPoint) => {\n            if (bucket.sample && bucket.y > 0) {\n              history.replace({\n                ...location,\n                search: fromQuery({\n                  ...toQuery(location.search),\n                  transactionId: bucket.sample.transactionId,\n                  traceId: bucket.sample.traceId\n                })\n              });\n            }\n          }}\n          formatX={timeFormatter}\n          formatYShort={this.formatYShort}\n          formatYLong={this.formatYLong}\n          verticalLineHover={(bucket: IChartPoint) =>\n            bucket.y > 0 && !bucket.sample\n          }\n          backgroundHover={(bucket: IChartPoint) =>\n            bucket.y > 0 && bucket.sample\n          }\n          tooltipHeader={(bucket: IChartPoint) =>\n            `${timeFormatter(bucket.x0, { withUnit: false })} - ${timeFormatter(\n              bucket.x,\n              { withUnit: false }\n            )} ${unit}`\n          }\n          tooltipFooter={(bucket: IChartPoint) =>\n            !bucket.sample &&\n            i18n.translate(\n              'xpack.apm.transactionDetails.transactionsDurationDistributionChart.noSampleTooltip',\n              {\n                defaultMessage: 'No sample available for this bucket'\n              }\n            )\n          }\n        />\n      </div>\n    );\n  }\n}\n"]}]}