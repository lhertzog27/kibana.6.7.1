{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap/log_minimap.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap/log_minimap.tsx","mtime":1567631711979},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { scaleLinear } from 'd3-scale';\nimport * as React from 'react';\nimport styled from 'styled-components';\n// import { SearchSummaryBucket } from '../../../../common/log_search_summary';\nimport { DensityChart } from './density_chart';\nimport { HighlightedInterval } from './highlighted_interval';\n// import { SearchMarkers } from './search_markers';\nimport { TimeRuler } from './time_ruler';\nvar LogMinimap = /** @class */ (function (_super) {\n    tslib_1.__extends(LogMinimap, _super);\n    function LogMinimap() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClick = function (event) {\n            var svgPosition = event.currentTarget.getBoundingClientRect();\n            var clickedYPosition = event.clientY - svgPosition.top;\n            var clickedTime = Math.floor(_this.getYScale().invert(clickedYPosition));\n            _this.props.jumpToTarget({\n                tiebreaker: 0,\n                time: clickedTime,\n            });\n        };\n        _this.getYScale = function () {\n            var _a = _this.props, height = _a.height, intervalSize = _a.intervalSize, target = _a.target;\n            var domainStart = target ? target - intervalSize / 2 : 0;\n            var domainEnd = target ? target + intervalSize / 2 : 0;\n            return scaleLinear()\n                .domain([domainStart, domainEnd])\n                .range([0, height]);\n        };\n        _this.getPositionOfTime = function (time) {\n            var _a = _this.props, height = _a.height, intervalSize = _a.intervalSize;\n            var _b = tslib_1.__read(_this.getYScale().domain(), 1), minTime = _b[0];\n            return ((time - minTime) * height) / intervalSize;\n        };\n        _this.updateVisibleInterval = function () {\n            var _a = _this.props, summaryBuckets = _a.summaryBuckets, intervalSize = _a.intervalSize;\n            var _b = tslib_1.__read(_this.getYScale().domain(), 2), minTime = _b[0], maxTime = _b[1];\n            var firstBucket = summaryBuckets[0];\n            var lastBucket = summaryBuckets[summaryBuckets.length - 1];\n            var pagesBeforeStart = firstBucket ? (minTime - firstBucket.start) / intervalSize : 0;\n            var pagesAfterEnd = lastBucket ? (lastBucket.end - maxTime) / intervalSize : 0;\n            var bucketsOnPage = firstBucket\n                ? (maxTime - minTime) / (firstBucket.end - firstBucket.start)\n                : 0;\n            _this.props.reportVisibleInterval({\n                end: Math.ceil(maxTime),\n                start: Math.floor(minTime),\n                bucketsOnPage: bucketsOnPage,\n                pagesBeforeStart: pagesBeforeStart,\n                pagesAfterEnd: pagesAfterEnd,\n            });\n        };\n        return _this;\n    }\n    LogMinimap.prototype.componentDidUpdate = function (prevProps) {\n        var hasNewTarget = prevProps.target !== this.props.target;\n        var hasNewIntervalSize = prevProps.intervalSize !== this.props.intervalSize;\n        if (hasNewTarget || hasNewIntervalSize) {\n            this.updateVisibleInterval();\n        }\n    };\n    LogMinimap.prototype.render = function () {\n        var _a = this.props, className = _a.className, height = _a.height, highlightedInterval = _a.highlightedInterval, \n        // jumpToTarget,\n        summaryBuckets = _a.summaryBuckets, \n        // searchSummaryBuckets,\n        width = _a.width;\n        var _b = tslib_1.__read(this.getYScale().domain(), 2), minTime = _b[0], maxTime = _b[1];\n        return (React.createElement(\"svg\", { className: className, height: height, preserveAspectRatio: \"none\", viewBox: \"0 0 \" + width + \" \" + height, width: width, onClick: this.handleClick },\n            React.createElement(MinimapBackground, { x: width / 2, y: \"0\", width: width / 2, height: height }),\n            React.createElement(DensityChart, { buckets: summaryBuckets, start: minTime, end: maxTime, width: width, height: height }),\n            React.createElement(MinimapBorder, { x1: width / 2, y1: 0, x2: width / 2, y2: height }),\n            React.createElement(TimeRuler, { start: minTime, end: maxTime, width: width, height: height, tickCount: 12 }),\n            highlightedInterval ? (React.createElement(HighlightedInterval, { end: highlightedInterval.end, getPositionOfTime: this.getPositionOfTime, start: highlightedInterval.start, width: width })) : null));\n    };\n    return LogMinimap;\n}(React.Component));\nexport { LogMinimap };\nvar MinimapBackground = styled.rect(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  fill: \", \";\\n\"], [\"\\n  fill: \", \";\\n\"])), function (props) { return props.theme.eui.euiColorLightestShade; });\nvar MinimapBorder = styled.line(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  stroke: \", \";\\n  stroke-width: 1px;\\n\"], [\"\\n  stroke: \", \";\\n  stroke-width: 1px;\\n\"])), function (props) { return props.theme.eui.euiColorMediumShade; });\nvar templateObject_1, templateObject_2;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap/log_minimap.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap/log_minimap.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { scaleLinear } from 'd3-scale';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport { LogEntryTime } from '../../../../common/log_entry';\n// import { SearchSummaryBucket } from '../../../../common/log_search_summary';\nimport { DensityChart } from './density_chart';\nimport { HighlightedInterval } from './highlighted_interval';\n// import { SearchMarkers } from './search_markers';\nimport { TimeRuler } from './time_ruler';\nimport { SummaryBucket } from './types';\n\ninterface LogMinimapProps {\n  className?: string;\n  height: number;\n  highlightedInterval: {\n    end: number;\n    start: number;\n  } | null;\n  jumpToTarget: (params: LogEntryTime) => any;\n  reportVisibleInterval: (\n    params: {\n      start: number;\n      end: number;\n      bucketsOnPage: number;\n      pagesBeforeStart: number;\n      pagesAfterEnd: number;\n    }\n  ) => any;\n  intervalSize: number;\n  summaryBuckets: SummaryBucket[];\n  // searchSummaryBuckets?: SearchSummaryBucket[];\n  target: number | null;\n  width: number;\n}\n\nexport class LogMinimap extends React.Component<LogMinimapProps> {\n  public handleClick: React.MouseEventHandler<SVGSVGElement> = event => {\n    const svgPosition = event.currentTarget.getBoundingClientRect();\n    const clickedYPosition = event.clientY - svgPosition.top;\n    const clickedTime = Math.floor(this.getYScale().invert(clickedYPosition));\n\n    this.props.jumpToTarget({\n      tiebreaker: 0,\n      time: clickedTime,\n    });\n  };\n\n  public getYScale = () => {\n    const { height, intervalSize, target } = this.props;\n\n    const domainStart = target ? target - intervalSize / 2 : 0;\n    const domainEnd = target ? target + intervalSize / 2 : 0;\n    return scaleLinear()\n      .domain([domainStart, domainEnd])\n      .range([0, height]);\n  };\n\n  public getPositionOfTime = (time: number) => {\n    const { height, intervalSize } = this.props;\n\n    const [minTime] = this.getYScale().domain();\n\n    return ((time - minTime) * height) / intervalSize;\n  };\n\n  public updateVisibleInterval = () => {\n    const { summaryBuckets, intervalSize } = this.props;\n    const [minTime, maxTime] = this.getYScale().domain();\n\n    const firstBucket = summaryBuckets[0];\n    const lastBucket = summaryBuckets[summaryBuckets.length - 1];\n\n    const pagesBeforeStart = firstBucket ? (minTime - firstBucket.start) / intervalSize : 0;\n    const pagesAfterEnd = lastBucket ? (lastBucket.end - maxTime) / intervalSize : 0;\n    const bucketsOnPage = firstBucket\n      ? (maxTime - minTime) / (firstBucket.end - firstBucket.start)\n      : 0;\n\n    this.props.reportVisibleInterval({\n      end: Math.ceil(maxTime),\n      start: Math.floor(minTime),\n      bucketsOnPage,\n      pagesBeforeStart,\n      pagesAfterEnd,\n    });\n  };\n\n  public componentDidUpdate(prevProps: LogMinimapProps) {\n    const hasNewTarget = prevProps.target !== this.props.target;\n    const hasNewIntervalSize = prevProps.intervalSize !== this.props.intervalSize;\n\n    if (hasNewTarget || hasNewIntervalSize) {\n      this.updateVisibleInterval();\n    }\n  }\n\n  public render() {\n    const {\n      className,\n      height,\n      highlightedInterval,\n      // jumpToTarget,\n      summaryBuckets,\n      // searchSummaryBuckets,\n      width,\n    } = this.props;\n\n    const [minTime, maxTime] = this.getYScale().domain();\n\n    return (\n      <svg\n        className={className}\n        height={height}\n        preserveAspectRatio=\"none\"\n        viewBox={`0 0 ${width} ${height}`}\n        width={width}\n        onClick={this.handleClick}\n      >\n        <MinimapBackground x={width / 2} y=\"0\" width={width / 2} height={height} />\n        <DensityChart\n          buckets={summaryBuckets}\n          start={minTime}\n          end={maxTime}\n          width={width}\n          height={height}\n        />\n        <MinimapBorder x1={width / 2} y1={0} x2={width / 2} y2={height} />\n        <TimeRuler start={minTime} end={maxTime} width={width} height={height} tickCount={12} />\n        {highlightedInterval ? (\n          <HighlightedInterval\n            end={highlightedInterval.end}\n            getPositionOfTime={this.getPositionOfTime}\n            start={highlightedInterval.start}\n            width={width}\n          />\n        ) : null}\n        {/*<g transform={`translate(${width * 0.5}, 0)`}>\n          <SearchMarkers\n            buckets={searchSummaryBuckets || []}\n            start={minTime}\n            end={maxTime}\n            width={width / 2}\n            height={height}\n            jumpToTarget={jumpToTarget}\n          />\n        </g>*/}\n      </svg>\n    );\n  }\n}\n\nconst MinimapBackground = styled.rect`\n  fill: ${props => props.theme.eui.euiColorLightestShade};\n`;\n\nconst MinimapBorder = styled.line`\n  stroke: ${props => props.theme.eui.euiColorMediumShade};\n  stroke-width: 1px;\n`;\n"]}]}