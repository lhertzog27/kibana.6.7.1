{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/loading_item_view.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/loading_item_view.tsx","mtime":1567631711980},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButtonEmpty, EuiIcon, EuiProgress, EuiText } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { RelativeTime } from './relative_time';\nvar LogTextStreamLoadingItemView = /** @class */ (function (_super) {\n    tslib_1.__extends(LogTextStreamLoadingItemView, _super);\n    function LogTextStreamLoadingItemView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LogTextStreamLoadingItemView.prototype.render = function () {\n        var _a = this.props, alignment = _a.alignment, className = _a.className, hasMore = _a.hasMore, isLoading = _a.isLoading, isStreaming = _a.isStreaming, lastStreamingUpdate = _a.lastStreamingUpdate, onLoadMore = _a.onLoadMore;\n        if (isStreaming) {\n            return (React.createElement(ProgressEntry, { alignment: alignment, className: className, color: \"primary\", isLoading: true },\n                React.createElement(ProgressMessage, null,\n                    React.createElement(EuiText, { color: \"subdued\" },\n                        React.createElement(FormattedMessage, { id: \"xpack.infra.logs.streamingNewEntriesText\", defaultMessage: \"Streaming new entries\" }))),\n                lastStreamingUpdate ? (React.createElement(ProgressMessage, null,\n                    React.createElement(EuiText, { color: \"subdued\" },\n                        React.createElement(EuiIcon, { type: \"clock\" }),\n                        React.createElement(FormattedMessage, { id: \"xpack.infra.logs.lastStreamingUpdateText\", defaultMessage: \" last updated {lastUpdateTime} ago\", values: {\n                                lastUpdateTime: (React.createElement(RelativeTime, { time: lastStreamingUpdate, refreshInterval: 1000 })),\n                            } })))) : null));\n        }\n        else if (isLoading) {\n            return (React.createElement(ProgressEntry, { alignment: alignment, className: className, color: \"subdued\", isLoading: true },\n                React.createElement(ProgressMessage, null,\n                    React.createElement(FormattedMessage, { id: \"xpack.infra.logs.loadingAdditionalEntriesText\", defaultMessage: \"Loading additional entries\" }))));\n        }\n        else if (!hasMore) {\n            return (React.createElement(ProgressEntry, { alignment: alignment, className: className, color: \"subdued\", isLoading: false },\n                React.createElement(ProgressMessage, null,\n                    React.createElement(FormattedMessage, { id: \"xpack.infra.logs.noAdditionalEntriesFoundText\", defaultMessage: \"No additional entries found\" })),\n                onLoadMore ? (React.createElement(EuiButtonEmpty, { size: \"xs\", onClick: onLoadMore, iconType: \"refresh\" },\n                    React.createElement(FormattedMessage, { id: \"xpack.infra.logs.loadAgainButtonLabel\", defaultMessage: \"Load again\" }))) : null));\n        }\n        else {\n            return null;\n        }\n    };\n    return LogTextStreamLoadingItemView;\n}(React.PureComponent));\nexport { LogTextStreamLoadingItemView };\n// tslint:disable-next-line:max-classes-per-file\nvar ProgressEntry = /** @class */ (function (_super) {\n    tslib_1.__extends(ProgressEntry, _super);\n    function ProgressEntry() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ProgressEntry.prototype.render = function () {\n        var _a = this.props, alignment = _a.alignment, children = _a.children, className = _a.className, color = _a.color, isLoading = _a.isLoading;\n        return (React.createElement(ProgressEntryWrapper, { className: className },\n            React.createElement(AlignedProgress, { alignment: alignment, color: color, max: isLoading ? undefined : 1, size: \"xs\", value: isLoading ? undefined : 1, position: \"absolute\" }),\n            children));\n    };\n    return ProgressEntry;\n}(React.PureComponent));\nvar ProgressEntryWrapper = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  align-items: center;\\n  display: flex;\\n  min-height: \", \";\\n  position: relative;\\n\"], [\"\\n  align-items: center;\\n  display: flex;\\n  min-height: \", \";\\n  position: relative;\\n\"])), function (props) { return props.theme.eui.euiSizeXxl; });\nvar ProgressMessage = styled.div(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  padding: 8px 16px;\\n\"], [\"\\n  padding: 8px 16px;\\n\"])));\nvar AlignedProgress = styled(EuiProgress).attrs({})(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n  top: \", \";\\n  bottom: \", \";\\n\"], [\"\\n  top: \", \";\\n  bottom: \", \";\\n\"])), function (props) { return (props.alignment === 'top' ? 0 : 'initial'); }, function (props) { return (props.alignment === 'top' ? 'initial' : 0); });\nvar templateObject_1, templateObject_2, templateObject_3;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/loading_item_view.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/loading_item_view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiButtonEmpty, EuiIcon, EuiProgress, EuiText } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport { RelativeTime } from './relative_time';\n\ninterface LogTextStreamLoadingItemViewProps {\n  alignment: 'top' | 'bottom';\n  className?: string;\n  hasMore: boolean;\n  isLoading: boolean;\n  isStreaming: boolean;\n  lastStreamingUpdate: number | null;\n  onLoadMore?: () => void;\n}\n\nexport class LogTextStreamLoadingItemView extends React.PureComponent<\n  LogTextStreamLoadingItemViewProps,\n  {}\n> {\n  public render() {\n    const {\n      alignment,\n      className,\n      hasMore,\n      isLoading,\n      isStreaming,\n      lastStreamingUpdate,\n      onLoadMore,\n    } = this.props;\n\n    if (isStreaming) {\n      return (\n        <ProgressEntry alignment={alignment} className={className} color=\"primary\" isLoading={true}>\n          <ProgressMessage>\n            <EuiText color=\"subdued\">\n              <FormattedMessage\n                id=\"xpack.infra.logs.streamingNewEntriesText\"\n                defaultMessage=\"Streaming new entries\"\n              />\n            </EuiText>\n          </ProgressMessage>\n          {lastStreamingUpdate ? (\n            <ProgressMessage>\n              <EuiText color=\"subdued\">\n                <EuiIcon type=\"clock\" />\n                <FormattedMessage\n                  id=\"xpack.infra.logs.lastStreamingUpdateText\"\n                  defaultMessage=\" last updated {lastUpdateTime} ago\"\n                  values={{\n                    lastUpdateTime: (\n                      <RelativeTime time={lastStreamingUpdate} refreshInterval={1000} />\n                    ),\n                  }}\n                />\n              </EuiText>\n            </ProgressMessage>\n          ) : null}\n        </ProgressEntry>\n      );\n    } else if (isLoading) {\n      return (\n        <ProgressEntry alignment={alignment} className={className} color=\"subdued\" isLoading={true}>\n          <ProgressMessage>\n            <FormattedMessage\n              id=\"xpack.infra.logs.loadingAdditionalEntriesText\"\n              defaultMessage=\"Loading additional entries\"\n            />\n          </ProgressMessage>\n        </ProgressEntry>\n      );\n    } else if (!hasMore) {\n      return (\n        <ProgressEntry\n          alignment={alignment}\n          className={className}\n          color=\"subdued\"\n          isLoading={false}\n        >\n          <ProgressMessage>\n            <FormattedMessage\n              id=\"xpack.infra.logs.noAdditionalEntriesFoundText\"\n              defaultMessage=\"No additional entries found\"\n            />\n          </ProgressMessage>\n          {onLoadMore ? (\n            <EuiButtonEmpty size=\"xs\" onClick={onLoadMore} iconType=\"refresh\">\n              <FormattedMessage\n                id=\"xpack.infra.logs.loadAgainButtonLabel\"\n                defaultMessage=\"Load again\"\n              />\n            </EuiButtonEmpty>\n          ) : null}\n        </ProgressEntry>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\ninterface ProgressEntryProps {\n  alignment: 'top' | 'bottom';\n  className?: string;\n  color: 'subdued' | 'primary';\n  isLoading: boolean;\n}\n\n// tslint:disable-next-line:max-classes-per-file\nclass ProgressEntry extends React.PureComponent<ProgressEntryProps, {}> {\n  public render() {\n    const { alignment, children, className, color, isLoading } = this.props;\n\n    return (\n      <ProgressEntryWrapper className={className}>\n        <AlignedProgress\n          alignment={alignment}\n          color={color}\n          max={isLoading ? undefined : 1}\n          size=\"xs\"\n          value={isLoading ? undefined : 1}\n          position=\"absolute\"\n        />\n        {children}\n      </ProgressEntryWrapper>\n    );\n  }\n}\n\nconst ProgressEntryWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  min-height: ${props => props.theme.eui.euiSizeXxl};\n  position: relative;\n`;\n\nconst ProgressMessage = styled.div`\n  padding: 8px 16px;\n`;\n\nconst AlignedProgress = styled(EuiProgress).attrs<{\n  alignment: 'top' | 'bottom';\n}>({})`\n  top: ${props => (props.alignment === 'top' ? 0 : 'initial')};\n  bottom: ${props => (props.alignment === 'top' ? 'initial' : 0)};\n`;\n"]}]}