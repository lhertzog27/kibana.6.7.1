{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/navigation/breadcrumb/provider.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/navigation/breadcrumb/provider.tsx","mtime":1567631711880},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React, { Component } from 'react';\nimport chrome from 'ui/chrome';\nimport { Provider } from './context';\nvar BreadcrumbProvider = /** @class */ (function (_super) {\n    tslib_1.__extends(BreadcrumbProvider, _super);\n    function BreadcrumbProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            breadcrumbs: [],\n        };\n        _this.addCrumb = function (breadcrumb, parents) {\n            _this.setState(function (_a) {\n                var prevCrumbs = _a.breadcrumbs;\n                return ({\n                    breadcrumbs: tslib_1.__spread(prevCrumbs, [\n                        {\n                            href: breadcrumb.href,\n                            breadcrumb: breadcrumb,\n                            parents: parents,\n                        },\n                    ]),\n                });\n            });\n        };\n        _this.removeCrumb = function (crumbToRemove) {\n            _this.setState(function (_a) {\n                var prevCrumbs = _a.breadcrumbs;\n                var breadcrumbs = prevCrumbs.filter(function (prevCrumb) {\n                    var href = prevCrumb.href;\n                    return !(crumbToRemove.href === href);\n                });\n                return { breadcrumbs: breadcrumbs };\n            });\n        };\n        return _this;\n    }\n    BreadcrumbProvider.prototype.render = function () {\n        var breadcrumbs = this.state.breadcrumbs;\n        var context = {\n            breadcrumbs: breadcrumbs.reduce(function (crumbs, crumbStorageItem) {\n                if (crumbStorageItem.parents) {\n                    crumbs = crumbs.concat(crumbStorageItem.parents);\n                }\n                crumbs.push(crumbStorageItem.breadcrumb);\n                return crumbs;\n            }, []),\n            addCrumb: this.addCrumb,\n            removeCrumb: this.removeCrumb,\n        };\n        if (this.props.useGlobalBreadcrumbs) {\n            chrome.breadcrumbs.set(context.breadcrumbs);\n        }\n        return React.createElement(Provider, { value: context }, this.props.children);\n    };\n    return BreadcrumbProvider;\n}(Component));\nexport { BreadcrumbProvider };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/navigation/breadcrumb/provider.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/navigation/breadcrumb/provider.tsx"],"names":[],"mappings":";AAAA;;;;GAIG;AACH,OAAO,KAAK,EAAE,EAAE,SAAS,EAAgB,MAAM,OAAO,CAAC;AACvD,OAAO,MAAM,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAC;AAgBrC;IAAwC,8CAAyC;IAAjF;QAAA,qEAkDC;QAjDQ,WAAK,GAAG;YACb,WAAW,EAAE,EAAmC;SACjD,CAAC;QAEK,cAAQ,GAAG,UAAC,UAAsB,EAAE,OAAsB;YAC/D,KAAI,CAAC,QAAQ,CAAC,UAAC,EAA2B;oBAAzB,2BAAuB;gBAAO,OAAA,CAAC;oBAC9C,WAAW,mBACN,UAAU;wBACb;4BACE,IAAI,EAAE,UAAU,CAAC,IAAI;4BACrB,UAAU,YAAA;4BACV,OAAO,SAAA;yBACR;sBACF;iBACF,CAAC;YAT6C,CAS7C,CAAC,CAAC;QACN,CAAC,CAAC;QAEK,iBAAW,GAAG,UAAC,aAAyB;YAC7C,KAAI,CAAC,QAAQ,CAAC,UAAC,EAA2B;oBAAzB,2BAAuB;gBACtC,IAAM,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC,UAAA,SAAS;oBACrC,IAAA,qBAAI,CAAe;oBAC3B,OAAO,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;gBACH,OAAO,EAAE,WAAW,aAAA,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;;IAwBJ,CAAC;IAtBQ,mCAAM,GAAb;QACU,IAAA,oCAAW,CAAgB;QAEnC,IAAM,OAAO,GAAG;YACd,WAAW,EAAE,WAAW,CAAC,MAAM,CAC7B,UAAC,MAAM,EAAE,gBAAgB;gBACvB,IAAI,gBAAgB,CAAC,OAAO,EAAE;oBAC5B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;iBAClD;gBACD,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;gBACzC,OAAO,MAAM,CAAC;YAChB,CAAC,EACD,EAAkB,CACnB;YACD,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,WAAW;SAC9B,CAAC;QACF,IAAI,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE;YACnC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC7C;QACD,OAAO,oBAAC,QAAQ,IAAC,KAAK,EAAE,OAAO,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAY,CAAC;IACpE,CAAC;IACH,yBAAC;AAAD,CAAC,AAlDD,CAAwC,SAAS,GAkDhD","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React, { Component, ReactElement } from 'react';\nimport chrome from 'ui/chrome';\nimport { Provider } from './context';\nimport { Breadcrumb } from './types';\n\ninterface ComponentProps {\n  useGlobalBreadcrumbs: boolean;\n  children: ReactElement<any> | Array<ReactElement<any>>;\n}\n\ninterface ComponentState {\n  breadcrumbs: Array<{\n    href?: string;\n    breadcrumb: Breadcrumb;\n    parents?: Breadcrumb[];\n  }>;\n}\n\nexport class BreadcrumbProvider extends Component<ComponentProps, ComponentState> {\n  public state = {\n    breadcrumbs: [] as ComponentState['breadcrumbs'],\n  };\n\n  public addCrumb = (breadcrumb: Breadcrumb, parents?: Breadcrumb[]) => {\n    this.setState(({ breadcrumbs: prevCrumbs }) => ({\n      breadcrumbs: [\n        ...prevCrumbs,\n        {\n          href: breadcrumb.href,\n          breadcrumb,\n          parents,\n        },\n      ],\n    }));\n  };\n\n  public removeCrumb = (crumbToRemove: Breadcrumb) => {\n    this.setState(({ breadcrumbs: prevCrumbs }) => {\n      const breadcrumbs = prevCrumbs.filter(prevCrumb => {\n        const { href } = prevCrumb;\n        return !(crumbToRemove.href === href);\n      });\n      return { breadcrumbs };\n    });\n  };\n\n  public render() {\n    const { breadcrumbs } = this.state;\n\n    const context = {\n      breadcrumbs: breadcrumbs.reduce(\n        (crumbs, crumbStorageItem) => {\n          if (crumbStorageItem.parents) {\n            crumbs = crumbs.concat(crumbStorageItem.parents);\n          }\n          crumbs.push(crumbStorageItem.breadcrumb);\n          return crumbs;\n        },\n        [] as Breadcrumb[]\n      ),\n      addCrumb: this.addCrumb,\n      removeCrumb: this.removeCrumb,\n    };\n    if (this.props.useGlobalBreadcrumbs) {\n      chrome.breadcrumbs.set(context.breadcrumbs);\n    }\n    return <Provider value={context}>{this.props.children}</Provider>;\n  }\n}\n"]}]}