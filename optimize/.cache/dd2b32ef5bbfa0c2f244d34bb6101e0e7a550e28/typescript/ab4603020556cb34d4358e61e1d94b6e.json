{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/lib/adapters/framework/kibana_framework_adapter.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/lib/adapters/framework/kibana_framework_adapter.ts","mtime":1567631711985},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as ReactDOM from 'react-dom';\nvar ROOT_ELEMENT_ID = 'react-infra-root';\nvar BREADCRUMBS_ELEMENT_ID = 'react-infra-breadcrumbs';\nvar InfraKibanaFrameworkAdapter = /** @class */ (function () {\n    function InfraKibanaFrameworkAdapter(uiModule, uiRoutes, timezoneProvider) {\n        var _this = this;\n        this.rootComponent = null;\n        this.breadcrumbsComponent = null;\n        this.setUISettings = function (key, value) {\n            _this.adapterService.callOrBuffer(function (_a) {\n                var config = _a.config;\n                config.set(key, value);\n            });\n        };\n        this.render = function (component) {\n            _this.adapterService.callOrBuffer(function () { return (_this.rootComponent = component); });\n        };\n        this.renderBreadcrumbs = function (component) {\n            _this.adapterService.callOrBuffer(function () { return (_this.breadcrumbsComponent = component); });\n        };\n        this.register = function (adapterModule, uiRoutes) {\n            adapterModule.provider('kibanaAdapter', _this.adapterService);\n            adapterModule.directive('infraUiKibanaAdapter', function () { return ({\n                controller: function ($scope, $element) { return ({\n                    $onDestroy: function () {\n                        var targetRootElement = $element[0].querySelector(\"#\" + ROOT_ELEMENT_ID);\n                        var targetBreadcrumbsElement = $element[0].querySelector(\"#\" + ROOT_ELEMENT_ID);\n                        if (targetRootElement) {\n                            ReactDOM.unmountComponentAtNode(targetRootElement);\n                        }\n                        if (targetBreadcrumbsElement) {\n                            ReactDOM.unmountComponentAtNode(targetBreadcrumbsElement);\n                        }\n                    },\n                    $onInit: function () {\n                        $scope.topNavMenu = [];\n                    },\n                    $postLink: function () {\n                        $scope.$watchGroup([\n                            function () { return _this.breadcrumbsComponent; },\n                            function () { return $element[0].querySelector(\"#\" + BREADCRUMBS_ELEMENT_ID); },\n                        ], function (_a) {\n                            var _b = tslib_1.__read(_a, 2), breadcrumbsComponent = _b[0], targetElement = _b[1];\n                            if (!targetElement) {\n                                return;\n                            }\n                            if (breadcrumbsComponent) {\n                                ReactDOM.render(breadcrumbsComponent, targetElement);\n                            }\n                            else {\n                                ReactDOM.unmountComponentAtNode(targetElement);\n                            }\n                        });\n                        $scope.$watchGroup([function () { return _this.rootComponent; }, function () { return $element[0].querySelector(\"#\" + ROOT_ELEMENT_ID); }], function (_a) {\n                            var _b = tslib_1.__read(_a, 2), rootComponent = _b[0], targetElement = _b[1];\n                            if (!targetElement) {\n                                return;\n                            }\n                            if (rootComponent) {\n                                ReactDOM.render(rootComponent, targetElement);\n                            }\n                            else {\n                                ReactDOM.unmountComponentAtNode(targetElement);\n                            }\n                        });\n                    },\n                }); },\n                scope: true,\n                template: \"\\n        <div\\n          id=\\\"\" + ROOT_ELEMENT_ID + \"\\\"\\n          class=\\\"infReactRoot\\\"\\n        ></div>\\n      \",\n            }); });\n            adapterModule.run(function (config, kbnVersion, Private, \n            // @ts-ignore: inject kibanaAdapter to force eager instatiation\n            kibanaAdapter) {\n                _this.timezone = Private(_this.timezoneProvider)();\n                _this.kbnVersion = kbnVersion;\n                _this.dateFormat = config.get('dateFormat');\n                try {\n                    _this.darkMode = config.get('theme:darkMode');\n                }\n                catch (e) {\n                    _this.darkMode = false;\n                }\n                _this.scaledDateFormat = config.get('dateFormat:scaled');\n            });\n            uiRoutes.enable();\n            uiRoutes.otherwise({\n                reloadOnSearch: false,\n                template: '<infra-ui-kibana-adapter style=\"display: flex; align-items: stretch; flex: 1 0 0%;\"></infra-ui-kibana-adapter>',\n            });\n        };\n        this.adapterService = new KibanaAdapterServiceProvider();\n        this.timezoneProvider = timezoneProvider;\n        this.appState = {};\n        this.register(uiModule, uiRoutes);\n    }\n    return InfraKibanaFrameworkAdapter;\n}());\nexport { InfraKibanaFrameworkAdapter };\n// tslint:disable-next-line: max-classes-per-file\nvar KibanaAdapterServiceProvider = /** @class */ (function () {\n    function KibanaAdapterServiceProvider() {\n        this.serviceRefs = null;\n        this.bufferedCalls = [];\n    }\n    KibanaAdapterServiceProvider.prototype.$get = function ($rootScope, config) {\n        this.serviceRefs = {\n            config: config,\n            rootScope: $rootScope,\n        };\n        this.applyBufferedCalls(this.bufferedCalls);\n        return this;\n    };\n    KibanaAdapterServiceProvider.prototype.callOrBuffer = function (serviceCall) {\n        if (this.serviceRefs !== null) {\n            this.applyBufferedCalls([serviceCall]);\n        }\n        else {\n            this.bufferedCalls.push(serviceCall);\n        }\n    };\n    KibanaAdapterServiceProvider.prototype.applyBufferedCalls = function (bufferedCalls) {\n        var _this = this;\n        if (!this.serviceRefs) {\n            return;\n        }\n        this.serviceRefs.rootScope.$apply(function () {\n            bufferedCalls.forEach(function (serviceCall) {\n                if (!_this.serviceRefs) {\n                    return;\n                }\n                return serviceCall(_this.serviceRefs);\n            });\n        });\n    };\n    return KibanaAdapterServiceProvider;\n}());\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/lib/adapters/framework/kibana_framework_adapter.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/lib/adapters/framework/kibana_framework_adapter.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { IModule, IScope } from 'angular';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { UIRoutes as KibanaUIRoutes } from 'ui/routes';\n\nimport {\n  InfraBufferedKibanaServiceCall,\n  InfraFrameworkAdapter,\n  InfraKibanaAdapterServiceRefs,\n  InfraKibanaUIConfig,\n  InfraTimezoneProvider,\n  InfraUiKibanaAdapterScope,\n} from '../../lib';\n\nconst ROOT_ELEMENT_ID = 'react-infra-root';\nconst BREADCRUMBS_ELEMENT_ID = 'react-infra-breadcrumbs';\n\nexport class InfraKibanaFrameworkAdapter implements InfraFrameworkAdapter {\n  public appState: object;\n  public dateFormat?: string;\n  public kbnVersion?: string;\n  public darkMode?: boolean;\n  public scaledDateFormat?: string;\n  public timezone?: string;\n\n  private adapterService: KibanaAdapterServiceProvider;\n  private timezoneProvider: InfraTimezoneProvider;\n  private rootComponent: React.ReactElement<any> | null = null;\n  private breadcrumbsComponent: React.ReactElement<any> | null = null;\n\n  constructor(\n    uiModule: IModule,\n    uiRoutes: KibanaUIRoutes,\n    timezoneProvider: InfraTimezoneProvider\n  ) {\n    this.adapterService = new KibanaAdapterServiceProvider();\n    this.timezoneProvider = timezoneProvider;\n    this.appState = {};\n    this.register(uiModule, uiRoutes);\n  }\n\n  public setUISettings = (key: string, value: any) => {\n    this.adapterService.callOrBuffer(({ config }) => {\n      config.set(key, value);\n    });\n  };\n\n  public render = (component: React.ReactElement<any>) => {\n    this.adapterService.callOrBuffer(() => (this.rootComponent = component));\n  };\n\n  public renderBreadcrumbs = (component: React.ReactElement<any>) => {\n    this.adapterService.callOrBuffer(() => (this.breadcrumbsComponent = component));\n  };\n\n  private register = (adapterModule: IModule, uiRoutes: KibanaUIRoutes) => {\n    adapterModule.provider('kibanaAdapter', this.adapterService);\n\n    adapterModule.directive('infraUiKibanaAdapter', () => ({\n      controller: ($scope: InfraUiKibanaAdapterScope, $element: JQLite) => ({\n        $onDestroy: () => {\n          const targetRootElement = $element[0].querySelector(`#${ROOT_ELEMENT_ID}`);\n          const targetBreadcrumbsElement = $element[0].querySelector(`#${ROOT_ELEMENT_ID}`);\n\n          if (targetRootElement) {\n            ReactDOM.unmountComponentAtNode(targetRootElement);\n          }\n\n          if (targetBreadcrumbsElement) {\n            ReactDOM.unmountComponentAtNode(targetBreadcrumbsElement);\n          }\n        },\n        $onInit: () => {\n          $scope.topNavMenu = [];\n        },\n        $postLink: () => {\n          $scope.$watchGroup(\n            [\n              () => this.breadcrumbsComponent,\n              () => $element[0].querySelector(`#${BREADCRUMBS_ELEMENT_ID}`),\n            ],\n            ([breadcrumbsComponent, targetElement]) => {\n              if (!targetElement) {\n                return;\n              }\n\n              if (breadcrumbsComponent) {\n                ReactDOM.render(breadcrumbsComponent, targetElement);\n              } else {\n                ReactDOM.unmountComponentAtNode(targetElement);\n              }\n            }\n          );\n          $scope.$watchGroup(\n            [() => this.rootComponent, () => $element[0].querySelector(`#${ROOT_ELEMENT_ID}`)],\n            ([rootComponent, targetElement]) => {\n              if (!targetElement) {\n                return;\n              }\n\n              if (rootComponent) {\n                ReactDOM.render(rootComponent, targetElement);\n              } else {\n                ReactDOM.unmountComponentAtNode(targetElement);\n              }\n            }\n          );\n        },\n      }),\n      scope: true,\n      template: `\n        <div\n          id=\"${ROOT_ELEMENT_ID}\"\n          class=\"infReactRoot\"\n        ></div>\n      `,\n    }));\n\n    adapterModule.run((\n      config: InfraKibanaUIConfig,\n      kbnVersion: string,\n      Private: <Provider>(provider: Provider) => Provider,\n      // @ts-ignore: inject kibanaAdapter to force eager instatiation\n      kibanaAdapter: any\n    ) => {\n      this.timezone = Private(this.timezoneProvider)();\n      this.kbnVersion = kbnVersion;\n      this.dateFormat = config.get('dateFormat');\n      try {\n        this.darkMode = config.get('theme:darkMode');\n      } catch (e) {\n        this.darkMode = false;\n      }\n      this.scaledDateFormat = config.get('dateFormat:scaled');\n    });\n\n    uiRoutes.enable();\n\n    uiRoutes.otherwise({\n      reloadOnSearch: false,\n      template:\n        '<infra-ui-kibana-adapter style=\"display: flex; align-items: stretch; flex: 1 0 0%;\"></infra-ui-kibana-adapter>',\n    });\n  };\n}\n\n// tslint:disable-next-line: max-classes-per-file\nclass KibanaAdapterServiceProvider {\n  public serviceRefs: InfraKibanaAdapterServiceRefs | null = null;\n  public bufferedCalls: Array<InfraBufferedKibanaServiceCall<InfraKibanaAdapterServiceRefs>> = [];\n\n  public $get($rootScope: IScope, config: InfraKibanaUIConfig) {\n    this.serviceRefs = {\n      config,\n      rootScope: $rootScope,\n    };\n\n    this.applyBufferedCalls(this.bufferedCalls);\n\n    return this;\n  }\n\n  public callOrBuffer(serviceCall: (serviceRefs: InfraKibanaAdapterServiceRefs) => void) {\n    if (this.serviceRefs !== null) {\n      this.applyBufferedCalls([serviceCall]);\n    } else {\n      this.bufferedCalls.push(serviceCall);\n    }\n  }\n\n  public applyBufferedCalls(\n    bufferedCalls: Array<InfraBufferedKibanaServiceCall<InfraKibanaAdapterServiceRefs>>\n  ) {\n    if (!this.serviceRefs) {\n      return;\n    }\n\n    this.serviceRefs.rootScope.$apply(() => {\n      bufferedCalls.forEach(serviceCall => {\n        if (!this.serviceRefs) {\n          return;\n        }\n        return serviceCall(this.serviceRefs);\n      });\n    });\n  }\n}\n"]}]}