{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/ping_list/get_pings.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/ping_list/get_pings.ts","mtime":1567631712330},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport gql from 'graphql-tag';\nexport var getPingsQueryString = \"\\nquery PingList(\\n  $dateRangeStart: String!\\n  $dateRangeEnd: String!\\n  $monitorId: String\\n  $status: String\\n  $sort: String\\n  $size: Int\\n) {\\n  allPings(\\n    dateRangeStart: $dateRangeStart\\n    dateRangeEnd: $dateRangeEnd\\n    monitorId: $monitorId\\n    status: $status\\n    sort: $sort\\n    size: $size\\n  ) {\\n      total\\n      pings {\\n        timestamp\\n        http {\\n          response {\\n            status_code\\n          }\\n        }\\n        error {\\n          message\\n          type\\n        }\\n        monitor {\\n          duration {\\n            us\\n          }\\n          id\\n          ip\\n          name\\n          scheme\\n          status\\n          type\\n        }\\n      }\\n    }\\n  }\\n\";\nexport var getPingsQuery = gql(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  \", \"\\n\"], [\"\\n  \", \"\\n\"])), getPingsQueryString);\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/ping_list/get_pings.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/queries/ping_list/get_pings.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,GAAG,MAAM,aAAa,CAAC;AAE9B,MAAM,CAAC,IAAM,mBAAmB,GAAG,+sBA2ClC,CAAC;AAEF,MAAM,CAAC,IAAM,aAAa,GAAG,GAAG,uFAAA,MAC5B,EAAmB,IACtB,KADG,mBAAmB,CACtB,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport gql from 'graphql-tag';\n\nexport const getPingsQueryString = `\nquery PingList(\n  $dateRangeStart: String!\n  $dateRangeEnd: String!\n  $monitorId: String\n  $status: String\n  $sort: String\n  $size: Int\n) {\n  allPings(\n    dateRangeStart: $dateRangeStart\n    dateRangeEnd: $dateRangeEnd\n    monitorId: $monitorId\n    status: $status\n    sort: $sort\n    size: $size\n  ) {\n      total\n      pings {\n        timestamp\n        http {\n          response {\n            status_code\n          }\n        }\n        error {\n          message\n          type\n        }\n        monitor {\n          duration {\n            us\n          }\n          id\n          ip\n          name\n          scheme\n          status\n          type\n        }\n      }\n    }\n  }\n`;\n\nexport const getPingsQuery = gql`\n  ${getPingsQueryString}\n`;\n"]}]}