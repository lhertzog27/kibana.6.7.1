{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/query_bar/components/typeahead/suggestion_component.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/query_bar/components/typeahead/suggestion_component.tsx","mtime":1567631711750},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { EuiIcon } from '@elastic/eui';\nimport classNames from 'classnames';\nimport React from 'react';\nfunction getEuiIconType(type) {\n    switch (type) {\n        case 'field':\n            return 'kqlField';\n        case 'value':\n            return 'kqlValue';\n        case 'recentSearch':\n            return 'search';\n        case 'conjunction':\n            return 'kqlSelector';\n        case 'operator':\n            return 'kqlOperand';\n        default:\n            throw new Error(\"Unknown type: \" + type);\n    }\n}\nexport var SuggestionComponent = function (props) {\n    return (React.createElement(\"div\", { className: classNames({\n            kbnTypeahead__item: true,\n            active: props.selected,\n        }), role: \"option\", onClick: function () { return props.onClick(props.suggestion); }, onMouseEnter: props.onMouseEnter, ref: props.innerRef, id: props.ariaId, \"aria-selected\": props.selected },\n        React.createElement(\"div\", { className: 'kbnSuggestionItem kbnSuggestionItem--' + props.suggestion.type },\n            React.createElement(\"div\", { className: \"kbnSuggestionItem__type\" },\n                React.createElement(EuiIcon, { type: getEuiIconType(props.suggestion.type) })),\n            React.createElement(\"div\", { className: \"kbnSuggestionItem__text\" }, props.suggestion.text),\n            React.createElement(\"div\", { className: \"kbnSuggestionItem__description\", \n                // Description currently always comes from us and we escape any potential user input\n                // at the time we're generating the description text\n                // eslint-disable-next-line react/no-danger\n                // @ts-ignore\n                dangerouslySetInnerHTML: { __html: props.suggestion.description } }))));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/query_bar/components/typeahead/suggestion_component.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/query_bar/components/typeahead/suggestion_component.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,KAAc,MAAM,OAAO,CAAC;AAGnC,SAAS,cAAc,CAAC,IAAY;IAClC,QAAQ,IAAI,EAAE;QACZ,KAAK,OAAO;YACV,OAAO,UAAU,CAAC;QACpB,KAAK,OAAO;YACV,OAAO,UAAU,CAAC;QACpB,KAAK,cAAc;YACjB,OAAO,QAAQ,CAAC;QAClB,KAAK,aAAa;YAChB,OAAO,aAAa,CAAC;QACvB,KAAK,UAAU;YACb,OAAO,YAAY,CAAC;QACtB;YACE,MAAM,IAAI,KAAK,CAAC,mBAAiB,IAAM,CAAC,CAAC;KAC5C;AACH,CAAC;AAWD,MAAM,CAAC,IAAM,mBAAmB,GAAe,UAAA,KAAK;IAClD,OAAO,CACL,6BACE,SAAS,EAAE,UAAU,CAAC;YACpB,kBAAkB,EAAE,IAAI;YACxB,MAAM,EAAE,KAAK,CAAC,QAAQ;SACvB,CAAC,EACF,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,cAAM,OAAA,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,EAA/B,CAA+B,EAC9C,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,GAAG,EAAE,KAAK,CAAC,QAAQ,EACnB,EAAE,EAAE,KAAK,CAAC,MAAM,mBACD,KAAK,CAAC,QAAQ;QAE7B,6BAAK,SAAS,EAAE,uCAAuC,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI;YAC7E,6BAAK,SAAS,EAAC,yBAAyB;gBACtC,oBAAC,OAAO,IAAC,IAAI,EAAE,cAAc,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAI,CACpD;YACN,6BAAK,SAAS,EAAC,yBAAyB,IAAE,KAAK,CAAC,UAAU,CAAC,IAAI,CAAO;YACtE,6BACE,SAAS,EAAC,gCAAgC;gBAC1C,oFAAoF;gBACpF,oDAAoD;gBACpD,2CAA2C;gBAC3C,aAAa;gBACb,uBAAuB,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,GACjE,CACE,CACF,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { EuiIcon } from '@elastic/eui';\nimport classNames from 'classnames';\nimport React, { SFC } from 'react';\nimport { AutocompleteSuggestion } from 'ui/autocomplete_providers';\n\nfunction getEuiIconType(type: string) {\n  switch (type) {\n    case 'field':\n      return 'kqlField';\n    case 'value':\n      return 'kqlValue';\n    case 'recentSearch':\n      return 'search';\n    case 'conjunction':\n      return 'kqlSelector';\n    case 'operator':\n      return 'kqlOperand';\n    default:\n      throw new Error(`Unknown type: ${type}`);\n  }\n}\n\ninterface Props {\n  onClick: (suggestion: AutocompleteSuggestion) => void;\n  onMouseEnter: () => void;\n  selected: boolean;\n  suggestion: AutocompleteSuggestion;\n  innerRef: (node: HTMLDivElement) => void;\n  ariaId: string;\n}\n\nexport const SuggestionComponent: SFC<Props> = props => {\n  return (\n    <div\n      className={classNames({\n        kbnTypeahead__item: true,\n        active: props.selected,\n      })}\n      role=\"option\"\n      onClick={() => props.onClick(props.suggestion)}\n      onMouseEnter={props.onMouseEnter}\n      ref={props.innerRef}\n      id={props.ariaId}\n      aria-selected={props.selected}\n    >\n      <div className={'kbnSuggestionItem kbnSuggestionItem--' + props.suggestion.type}>\n        <div className=\"kbnSuggestionItem__type\">\n          <EuiIcon type={getEuiIconType(props.suggestion.type)} />\n        </div>\n        <div className=\"kbnSuggestionItem__text\">{props.suggestion.text}</div>\n        <div\n          className=\"kbnSuggestionItem__description\"\n          // Description currently always comes from us and we escape any potential user input\n          // at the time we're generating the description text\n          // eslint-disable-next-line react/no-danger\n          // @ts-ignore\n          dangerouslySetInnerHTML={{ __html: props.suggestion.description }}\n        />\n      </div>\n    </div>\n  );\n};\n"]}]}