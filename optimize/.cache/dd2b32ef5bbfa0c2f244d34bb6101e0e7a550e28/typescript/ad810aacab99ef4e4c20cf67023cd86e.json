{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/home/toolbar.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/home/toolbar.tsx","mtime":1567631711986},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { EuiFlexGroup, EuiFlexItem, EuiText, EuiTitle } from '@elastic/eui';\n// import { i18n } from '@kbn/i18n';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport React from 'react';\nimport { AutocompleteField } from '../../components/autocomplete_field';\nimport { Toolbar } from '../../components/eui/toolbar';\nimport { SourceConfigurationButton } from '../../components/source_configuration';\nimport { WaffleGroupByControls } from '../../components/waffle/waffle_group_by_controls';\nimport { WaffleMetricControls } from '../../components/waffle/waffle_metric_controls';\nimport { WaffleNodeTypeSwitcher } from '../../components/waffle/waffle_node_type_switcher';\nimport { WaffleTimeControls } from '../../components/waffle/waffle_time_controls';\nimport { WithWaffleFilter } from '../../containers/waffle/with_waffle_filters';\nimport { WithWaffleOptions } from '../../containers/waffle/with_waffle_options';\nimport { WithWaffleTime } from '../../containers/waffle/with_waffle_time';\nimport { WithKueryAutocompletion } from '../../containers/with_kuery_autocompletion';\nimport { WithSource } from '../../containers/with_source';\nimport { InfraNodeType } from '../../graphql/types';\nvar getTitle = function (nodeType) {\n    var _a;\n    var TITLES = (_a = {},\n        _a[InfraNodeType.host] = (React.createElement(FormattedMessage, { id: \"xpack.infra.homePage.toolbar.hostsTitle\", defaultMessage: \"Hosts\" })),\n        _a[InfraNodeType.pod] = (React.createElement(FormattedMessage, { id: \"xpack.infra.homePage.toolbar.kubernetesPodsTitle\", defaultMessage: \"Kubernetes Pods\" })),\n        _a[InfraNodeType.container] = (React.createElement(FormattedMessage, { id: \"xpack.infra.homePage.toolbar.dockerContainersTitle\", defaultMessage: \"Docker Containers\" })),\n        _a);\n    return TITLES[nodeType];\n};\nexport var HomeToolbar = injectI18n(function (_a) {\n    var intl = _a.intl;\n    return (React.createElement(Toolbar, null,\n        React.createElement(EuiFlexGroup, { alignItems: \"center\" },\n            React.createElement(EuiFlexItem, null,\n                React.createElement(EuiFlexGroup, { justifyContent: \"flexStart\" },\n                    React.createElement(EuiFlexItem, { grow: false },\n                        React.createElement(WithWaffleOptions, null, function (_a) {\n                            var nodeType = _a.nodeType;\n                            return (React.createElement(EuiTitle, { size: \"m\" },\n                                React.createElement(\"h1\", null, getTitle(nodeType))));\n                        })),\n                    React.createElement(EuiFlexItem, { grow: false },\n                        React.createElement(SourceConfigurationButton, null))),\n                React.createElement(EuiText, { color: \"subdued\" },\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.infra.homePage.toolbar.showingLastOneMinuteDataText\", defaultMessage: \"Showing the last 1 minute of data from the time period\" })))),\n            React.createElement(WithWaffleOptions, null, function (_a) {\n                var nodeType = _a.nodeType, changeNodeType = _a.changeNodeType, changeGroupBy = _a.changeGroupBy, changeMetric = _a.changeMetric;\n                return (React.createElement(EuiFlexItem, { grow: false },\n                    React.createElement(WaffleNodeTypeSwitcher, { nodeType: nodeType, changeNodeType: changeNodeType, changeMetric: changeMetric, changeGroupBy: changeGroupBy })));\n            })),\n        React.createElement(EuiFlexGroup, { alignItems: \"center\", justifyContent: \"spaceBetween\", gutterSize: \"m\" },\n            React.createElement(EuiFlexItem, null,\n                React.createElement(WithSource, null, function (_a) {\n                    var derivedIndexPattern = _a.derivedIndexPattern;\n                    return (React.createElement(WithKueryAutocompletion, { indexPattern: derivedIndexPattern }, function (_a) {\n                        var isLoadingSuggestions = _a.isLoadingSuggestions, loadSuggestions = _a.loadSuggestions, suggestions = _a.suggestions;\n                        return (React.createElement(WithWaffleFilter, { indexPattern: derivedIndexPattern }, function (_a) {\n                            var applyFilterQueryFromKueryExpression = _a.applyFilterQueryFromKueryExpression, filterQueryDraft = _a.filterQueryDraft, isFilterQueryDraftValid = _a.isFilterQueryDraftValid, setFilterQueryDraftFromKueryExpression = _a.setFilterQueryDraftFromKueryExpression;\n                            return (React.createElement(AutocompleteField, { isLoadingSuggestions: isLoadingSuggestions, isValid: isFilterQueryDraftValid, loadSuggestions: loadSuggestions, onChange: setFilterQueryDraftFromKueryExpression, onSubmit: applyFilterQueryFromKueryExpression, placeholder: intl.formatMessage({\n                                    id: 'xpack.infra.homePage.toolbar.kqlSearchFieldPlaceholder',\n                                    defaultMessage: 'Search for infrastructure dataâ€¦ (e.g. host.name:host-1)',\n                                }), suggestions: suggestions, value: filterQueryDraft ? filterQueryDraft.expression : '' }));\n                        }));\n                    }));\n                })),\n            React.createElement(WithSource, null, function (_a) {\n                var derivedIndexPattern = _a.derivedIndexPattern;\n                return (React.createElement(WithWaffleOptions, null, function (_a) {\n                    var changeMetric = _a.changeMetric, changeGroupBy = _a.changeGroupBy, changeCustomOptions = _a.changeCustomOptions, customOptions = _a.customOptions, groupBy = _a.groupBy, metric = _a.metric, nodeType = _a.nodeType;\n                    return (React.createElement(React.Fragment, null,\n                        React.createElement(EuiFlexItem, { grow: false },\n                            React.createElement(WaffleMetricControls, { metric: metric, nodeType: nodeType, onChange: changeMetric })),\n                        React.createElement(EuiFlexItem, { grow: false },\n                            React.createElement(WaffleGroupByControls, { groupBy: groupBy, nodeType: nodeType, onChange: changeGroupBy, fields: derivedIndexPattern.fields, onChangeCustomOptions: changeCustomOptions, customOptions: customOptions }))));\n                }));\n            }),\n            React.createElement(EuiFlexItem, { grow: false },\n                React.createElement(WithWaffleTime, { resetOnUnmount: true }, function (_a) {\n                    var currentTime = _a.currentTime, isAutoReloading = _a.isAutoReloading, jumpToTime = _a.jumpToTime, startAutoReload = _a.startAutoReload, stopAutoReload = _a.stopAutoReload;\n                    return (React.createElement(WaffleTimeControls, { currentTime: currentTime, isLiveStreaming: isAutoReloading, onChangeTime: jumpToTime, startLiveStreaming: startAutoReload, stopLiveStreaming: stopAutoReload }));\n                })))));\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/home/toolbar.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/home/toolbar.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiFlexGroup, EuiFlexItem, EuiText, EuiTitle } from '@elastic/eui';\n// import { i18n } from '@kbn/i18n';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport React from 'react';\n\nimport { AutocompleteField } from '../../components/autocomplete_field';\nimport { Toolbar } from '../../components/eui/toolbar';\nimport { SourceConfigurationButton } from '../../components/source_configuration';\nimport { WaffleGroupByControls } from '../../components/waffle/waffle_group_by_controls';\nimport { WaffleMetricControls } from '../../components/waffle/waffle_metric_controls';\nimport { WaffleNodeTypeSwitcher } from '../../components/waffle/waffle_node_type_switcher';\nimport { WaffleTimeControls } from '../../components/waffle/waffle_time_controls';\nimport { WithWaffleFilter } from '../../containers/waffle/with_waffle_filters';\nimport { WithWaffleOptions } from '../../containers/waffle/with_waffle_options';\nimport { WithWaffleTime } from '../../containers/waffle/with_waffle_time';\nimport { WithKueryAutocompletion } from '../../containers/with_kuery_autocompletion';\nimport { WithSource } from '../../containers/with_source';\nimport { InfraNodeType } from '../../graphql/types';\n\nconst getTitle = (nodeType: string) => {\n  const TITLES = {\n    [InfraNodeType.host as string]: (\n      <FormattedMessage id=\"xpack.infra.homePage.toolbar.hostsTitle\" defaultMessage=\"Hosts\" />\n    ),\n    [InfraNodeType.pod as string]: (\n      <FormattedMessage\n        id=\"xpack.infra.homePage.toolbar.kubernetesPodsTitle\"\n        defaultMessage=\"Kubernetes Pods\"\n      />\n    ),\n    [InfraNodeType.container as string]: (\n      <FormattedMessage\n        id=\"xpack.infra.homePage.toolbar.dockerContainersTitle\"\n        defaultMessage=\"Docker Containers\"\n      />\n    ),\n  };\n  return TITLES[nodeType];\n};\n\nexport const HomeToolbar = injectI18n(({ intl }) => (\n  <Toolbar>\n    <EuiFlexGroup alignItems=\"center\">\n      <EuiFlexItem>\n        <EuiFlexGroup justifyContent=\"flexStart\">\n          <EuiFlexItem grow={false}>\n            <WithWaffleOptions>\n              {({ nodeType }) => (\n                <EuiTitle size=\"m\">\n                  <h1>{getTitle(nodeType)}</h1>\n                </EuiTitle>\n              )}\n            </WithWaffleOptions>\n          </EuiFlexItem>\n          <EuiFlexItem grow={false}>\n            <SourceConfigurationButton />\n          </EuiFlexItem>\n        </EuiFlexGroup>\n        <EuiText color=\"subdued\">\n          <p>\n            <FormattedMessage\n              id=\"xpack.infra.homePage.toolbar.showingLastOneMinuteDataText\"\n              defaultMessage=\"Showing the last 1 minute of data from the time period\"\n            />\n          </p>\n        </EuiText>\n      </EuiFlexItem>\n      <WithWaffleOptions>\n        {({ nodeType, changeNodeType, changeGroupBy, changeMetric }) => (\n          <EuiFlexItem grow={false}>\n            <WaffleNodeTypeSwitcher\n              nodeType={nodeType}\n              changeNodeType={changeNodeType}\n              changeMetric={changeMetric}\n              changeGroupBy={changeGroupBy}\n            />\n          </EuiFlexItem>\n        )}\n      </WithWaffleOptions>\n    </EuiFlexGroup>\n    <EuiFlexGroup alignItems=\"center\" justifyContent=\"spaceBetween\" gutterSize=\"m\">\n      <EuiFlexItem>\n        <WithSource>\n          {({ derivedIndexPattern }) => (\n            <WithKueryAutocompletion indexPattern={derivedIndexPattern}>\n              {({ isLoadingSuggestions, loadSuggestions, suggestions }) => (\n                <WithWaffleFilter indexPattern={derivedIndexPattern}>\n                  {({\n                    applyFilterQueryFromKueryExpression,\n                    filterQueryDraft,\n                    isFilterQueryDraftValid,\n                    setFilterQueryDraftFromKueryExpression,\n                  }) => (\n                    <AutocompleteField\n                      isLoadingSuggestions={isLoadingSuggestions}\n                      isValid={isFilterQueryDraftValid}\n                      loadSuggestions={loadSuggestions}\n                      onChange={setFilterQueryDraftFromKueryExpression}\n                      onSubmit={applyFilterQueryFromKueryExpression}\n                      placeholder={intl.formatMessage({\n                        id: 'xpack.infra.homePage.toolbar.kqlSearchFieldPlaceholder',\n                        defaultMessage: 'Search for infrastructure dataâ€¦ (e.g. host.name:host-1)',\n                      })}\n                      suggestions={suggestions}\n                      value={filterQueryDraft ? filterQueryDraft.expression : ''}\n                    />\n                  )}\n                </WithWaffleFilter>\n              )}\n            </WithKueryAutocompletion>\n          )}\n        </WithSource>\n      </EuiFlexItem>\n      <WithSource>\n        {({ derivedIndexPattern }) => (\n          <WithWaffleOptions>\n            {({\n              changeMetric,\n              changeGroupBy,\n              changeCustomOptions,\n              customOptions,\n              groupBy,\n              metric,\n              nodeType,\n            }) => (\n              <React.Fragment>\n                <EuiFlexItem grow={false}>\n                  <WaffleMetricControls\n                    metric={metric}\n                    nodeType={nodeType}\n                    onChange={changeMetric}\n                  />\n                </EuiFlexItem>\n                <EuiFlexItem grow={false}>\n                  <WaffleGroupByControls\n                    groupBy={groupBy}\n                    nodeType={nodeType}\n                    onChange={changeGroupBy}\n                    fields={derivedIndexPattern.fields}\n                    onChangeCustomOptions={changeCustomOptions}\n                    customOptions={customOptions}\n                  />\n                </EuiFlexItem>\n              </React.Fragment>\n            )}\n          </WithWaffleOptions>\n        )}\n      </WithSource>\n      <EuiFlexItem grow={false}>\n        <WithWaffleTime resetOnUnmount>\n          {({ currentTime, isAutoReloading, jumpToTime, startAutoReload, stopAutoReload }) => (\n            <WaffleTimeControls\n              currentTime={currentTime}\n              isLiveStreaming={isAutoReloading}\n              onChangeTime={jumpToTime}\n              startLiveStreaming={startAutoReload}\n              stopLiveStreaming={stopAutoReload}\n            />\n          )}\n        </WithWaffleTime>\n      </EuiFlexItem>\n    </EuiFlexGroup>\n  </Toolbar>\n));\n"]}]}