{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/callApi.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/callApi.ts","mtime":1567631711870},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { startsWith } from 'lodash';\nimport { kfetch } from 'ui/kfetch';\nfunction fetchOptionsWithDebug(fetchOptions) {\n    var debugEnabled = sessionStorage.getItem('apm_debug') === 'true' &&\n        startsWith(fetchOptions.pathname, '/api/apm');\n    if (!debugEnabled) {\n        return fetchOptions;\n    }\n    return tslib_1.__assign({}, fetchOptions, { query: tslib_1.__assign({}, fetchOptions.query, { _debug: true }) });\n}\nexport function callApi(fetchOptions, options) {\n    return tslib_1.__awaiter(this, void 0, Promise, function () {\n        var combinedFetchOptions;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    combinedFetchOptions = fetchOptionsWithDebug(fetchOptions);\n                    return [4 /*yield*/, kfetch(combinedFetchOptions, options)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/callApi.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/callApi.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AACpC,OAAO,EAAE,MAAM,EAAiB,MAAM,WAAW,CAAC;AAGlD,SAAS,qBAAqB,CAAC,YAA2B;IACxD,IAAM,YAAY,GAChB,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,MAAM;QAC9C,UAAU,CAAC,YAAY,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAEhD,IAAI,CAAC,YAAY,EAAE;QACjB,OAAO,YAAY,CAAC;KACrB;IAED,4BACK,YAAY,IACf,KAAK,uBACA,YAAY,CAAC,KAAK,IACrB,MAAM,EAAE,IAAI,OAEd;AACJ,CAAC;AAED,MAAM,UAAgB,OAAO,CAC3B,YAA2B,EAC3B,OAA6B;2CAC5B,OAAO;;;;;oBACF,oBAAoB,GAAG,qBAAqB,CAAC,YAAY,CAAC,CAAC;oBAC1D,qBAAM,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,EAAA;wBAAlD,sBAAO,SAA2C,EAAC;;;;CACpD","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { startsWith } from 'lodash';\nimport { kfetch, KFetchOptions } from 'ui/kfetch';\nimport { KFetchKibanaOptions } from 'ui/kfetch/kfetch';\n\nfunction fetchOptionsWithDebug(fetchOptions: KFetchOptions) {\n  const debugEnabled =\n    sessionStorage.getItem('apm_debug') === 'true' &&\n    startsWith(fetchOptions.pathname, '/api/apm');\n\n  if (!debugEnabled) {\n    return fetchOptions;\n  }\n\n  return {\n    ...fetchOptions,\n    query: {\n      ...fetchOptions.query,\n      _debug: true\n    }\n  };\n}\n\nexport async function callApi<T = void>(\n  fetchOptions: KFetchOptions,\n  options?: KFetchKibanaOptions\n): Promise<T> {\n  const combinedFetchOptions = fetchOptionsWithDebug(fetchOptions);\n  return await kfetch(combinedFetchOptions, options);\n}\n"]}]}