{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/range_date_picker/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/range_date_picker/index.tsx","mtime":1567631711981},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nvar _a;\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport { find, get } from 'lodash';\nimport moment from 'moment-timezone';\nimport React, { Fragment } from 'react';\nimport { EuiButton, EuiButtonEmpty, EuiDatePicker, EuiDatePickerRange, EuiFieldNumber, EuiFlexGrid, EuiFlexGroup, EuiFlexItem, EuiFormControlLayout, EuiFormRow, EuiHorizontalRule, EuiIcon, EuiLink, EuiPopover, EuiSelect, EuiSpacer, EuiText, EuiTitle, } from '@elastic/eui';\nvar DatePickerDateOptions;\n(function (DatePickerDateOptions) {\n    DatePickerDateOptions[\"today\"] = \"today\";\n    DatePickerDateOptions[\"yesterday\"] = \"yesterday\";\n    DatePickerDateOptions[\"thisWeek\"] = \"this_week\";\n    DatePickerDateOptions[\"weekToDate\"] = \"week_to_date\";\n    DatePickerDateOptions[\"thisMonth\"] = \"this_month\";\n    DatePickerDateOptions[\"monthToDate\"] = \"month_to_date\";\n    DatePickerDateOptions[\"thisYear\"] = \"this_year\";\n    DatePickerDateOptions[\"yearToDate\"] = \"year_to_date\";\n})(DatePickerDateOptions || (DatePickerDateOptions = {}));\nvar commonDates = [\n    {\n        id: DatePickerDateOptions.today,\n        label: i18n.translate('xpack.infra.rangeDatePicker.todayText', {\n            defaultMessage: 'Today',\n        }),\n    },\n    {\n        id: DatePickerDateOptions.yesterday,\n        label: i18n.translate('xpack.infra.rangeDatePicker.yesterdayText', {\n            defaultMessage: 'Yesterday',\n        }),\n    },\n    {\n        id: DatePickerDateOptions.thisWeek,\n        label: i18n.translate('xpack.infra.rangeDatePicker.thisWeekText', {\n            defaultMessage: 'This week',\n        }),\n    },\n    {\n        id: DatePickerDateOptions.weekToDate,\n        label: i18n.translate('xpack.infra.rangeDatePicker.weekToDateText', {\n            defaultMessage: 'Week to date',\n        }),\n    },\n    {\n        id: DatePickerDateOptions.thisMonth,\n        label: i18n.translate('xpack.infra.rangeDatePicker.thisMonthText', {\n            defaultMessage: 'This month',\n        }),\n    },\n    {\n        id: DatePickerDateOptions.monthToDate,\n        label: i18n.translate('xpack.infra.rangeDatePicker.monthToDateText', {\n            defaultMessage: 'Month to date',\n        }),\n    },\n    {\n        id: DatePickerDateOptions.thisYear,\n        label: i18n.translate('xpack.infra.rangeDatePicker.thisYearText', {\n            defaultMessage: 'This year',\n        }),\n    },\n    {\n        id: DatePickerDateOptions.yearToDate,\n        label: i18n.translate('xpack.infra.rangeDatePicker.yearToDateText', {\n            defaultMessage: 'Year to date',\n        }),\n    },\n];\nvar singleLastOptions = [\n    {\n        value: 'seconds',\n        text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.secondLabel', {\n            defaultMessage: 'second',\n        }),\n    },\n    {\n        value: 'minutes',\n        text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.minuteLabel', {\n            defaultMessage: 'minute',\n        }),\n    },\n    {\n        value: 'hours',\n        text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.hourLabel', {\n            defaultMessage: 'hour',\n        }),\n    },\n    {\n        value: 'days',\n        text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.dayLabel', {\n            defaultMessage: 'day',\n        }),\n    },\n    {\n        value: 'weeks',\n        text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.weekLabel', {\n            defaultMessage: 'week',\n        }),\n    },\n    {\n        value: 'months',\n        text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.monthLabel', {\n            defaultMessage: 'month',\n        }),\n    },\n    {\n        value: 'years',\n        text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.yearLabel', {\n            defaultMessage: 'year',\n        }),\n    },\n];\nvar pluralLastOptions = [\n    {\n        value: 'seconds',\n        text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.secondsLabel', {\n            defaultMessage: 'seconds',\n        }),\n    },\n    {\n        value: 'minutes',\n        text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.minutesLabel', {\n            defaultMessage: 'minutes',\n        }),\n    },\n    {\n        value: 'hours',\n        text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.hoursLabel', {\n            defaultMessage: 'hours',\n        }),\n    },\n    {\n        value: 'days',\n        text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.daysLabel', {\n            defaultMessage: 'days',\n        }),\n    },\n    {\n        value: 'weeks',\n        text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.weeksLabel', {\n            defaultMessage: 'weeks',\n        }),\n    },\n    {\n        value: 'months',\n        text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.monthsLabel', {\n            defaultMessage: 'months',\n        }),\n    },\n    {\n        value: 'years',\n        text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.yearsLabel', {\n            defaultMessage: 'years',\n        }),\n    },\n];\nexport var RangeDatePicker = injectI18n((_a = /** @class */ (function (_super) {\n        tslib_1.__extends(class_1, _super);\n        function class_1() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.state = {\n                startDate: _this.props.startDate,\n                endDate: _this.props.endDate,\n                isPopoverOpen: false,\n                recentlyUsed: [],\n                quickSelectTime: 1,\n                quickSelectUnit: 'hours',\n            };\n            _this.handleChangeStart = function (date) {\n                if (date && _this.state.startDate !== date) {\n                    _this.props.onChangeRangeTime(date, _this.state.endDate, false);\n                    _this.setState({\n                        startDate: date,\n                    });\n                }\n            };\n            _this.handleChangeEnd = function (date) {\n                if (date && _this.state.endDate !== date) {\n                    _this.props.onChangeRangeTime(_this.state.startDate, date, false);\n                    _this.setState({\n                        endDate: date,\n                    });\n                }\n            };\n            _this.onButtonClick = function () {\n                _this.setState({\n                    isPopoverOpen: !_this.state.isPopoverOpen,\n                });\n            };\n            _this.closePopover = function (type, from, to) {\n                var _a = _this.managedStartEndDateFromType(type, from, to), startDate = _a.startDate, endDate = _a.endDate, recentlyUsed = _a.recentlyUsed;\n                _this.setState(tslib_1.__assign({}, _this.state, { isPopoverOpen: false, startDate: startDate,\n                    endDate: endDate,\n                    recentlyUsed: recentlyUsed }), function () {\n                    if (type) {\n                        _this.props.onChangeRangeTime(startDate, endDate, true);\n                    }\n                });\n            };\n            _this.renderQuickSelect = function () {\n                var intl = _this.props.intl;\n                return (React.createElement(Fragment, null,\n                    React.createElement(EuiTitle, { size: \"xxxs\" },\n                        React.createElement(\"span\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.infra.rangeDatePicker.quickSelectTitle\", defaultMessage: \"Quick select\" }))),\n                    React.createElement(EuiSpacer, { size: \"s\" }),\n                    React.createElement(EuiFlexGroup, { gutterSize: \"s\", responsive: false },\n                        React.createElement(EuiFlexItem, null,\n                            React.createElement(EuiTitle, { size: \"s\" },\n                                React.createElement(\"span\", null,\n                                    React.createElement(FormattedMessage, { id: \"xpack.infra.rangeDatePicker.lastQuickSelectTitle\", defaultMessage: \"Last\" })))),\n                        React.createElement(EuiFlexItem, null,\n                            React.createElement(EuiFormRow, null,\n                                React.createElement(EuiFieldNumber, { \"aria-label\": intl.formatMessage({\n                                        id: 'xpack.infra.rangeDatePicker.countOfFormRowAriaLabel',\n                                        defaultMessage: 'Count of',\n                                    }), defaultValue: \"1\", value: _this.state.quickSelectTime, step: 0, onChange: function (arg) {\n                                        _this.onChange('quickSelectTime', arg);\n                                    } }))),\n                        React.createElement(EuiFlexItem, null,\n                            React.createElement(EuiFormRow, null,\n                                React.createElement(EuiSelect, { value: _this.state.quickSelectUnit, options: _this.state.quickSelectTime === 1 ? singleLastOptions : pluralLastOptions, onChange: function (arg) {\n                                        _this.onChange('quickSelectUnit', arg);\n                                    } }))),\n                        React.createElement(EuiFlexItem, { grow: false },\n                            React.createElement(EuiFormRow, null,\n                                React.createElement(EuiButton, { onClick: function () { return _this.closePopover('quick-select'); }, style: { minWidth: 0 } },\n                                    React.createElement(FormattedMessage, { id: \"xpack.infra.rangeDatePicker.applyFormRowButtonLabel\", defaultMessage: \"Apply\" })))))));\n            };\n            _this.onChange = function (stateType, args) {\n                var _a;\n                var value = args.currentTarget.value;\n                if (stateType === 'quickSelectTime' && value !== '') {\n                    value = parseInt(args.currentTarget.value, 10);\n                }\n                _this.setState(tslib_1.__assign({}, _this.state, (_a = {}, _a[stateType] = value, _a)));\n            };\n            _this.renderCommonlyUsed = function (recentlyCommonDates) {\n                var links = recentlyCommonDates.map(function (date) {\n                    return (React.createElement(EuiFlexItem, { key: date.id },\n                        React.createElement(EuiLink, { onClick: function () { return _this.closePopover(date.id); } }, date.label)));\n                });\n                return (React.createElement(Fragment, null,\n                    React.createElement(EuiTitle, { size: \"xxxs\" },\n                        React.createElement(\"span\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.infra.rangeDatePicker.renderCommonlyUsedLinksTitle\", defaultMessage: \"Commonly used\" }))),\n                    React.createElement(EuiSpacer, { size: \"s\" }),\n                    React.createElement(EuiText, { size: \"s\" },\n                        React.createElement(EuiFlexGrid, { gutterSize: \"s\", columns: 2 }, links))));\n            };\n            _this.renderRecentlyUsed = function (recentDates) {\n                var links = recentDates.map(function (date) {\n                    var dateRange;\n                    var dateLink = (React.createElement(EuiLink, { onClick: function () { return _this.closePopover(date.type); } }, dateRange || date.text));\n                    if (typeof date.text !== 'string') {\n                        dateRange = date.text[0] + \" \\u2013 \" + date.text[1];\n                        dateLink = (React.createElement(EuiLink, { onClick: function () { return _this.closePopover(date.type, date.text[0], date.text[1]); } }, dateRange || date.type));\n                    }\n                    return (React.createElement(EuiFlexItem, { grow: false, key: \"\" + (dateRange || date.type) }, dateLink));\n                });\n                return (React.createElement(Fragment, null,\n                    React.createElement(EuiTitle, { size: \"xxxs\" },\n                        React.createElement(\"span\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.infra.rangeDatePicker.recentlyUsedDateRangesTitle\", defaultMessage: \"Recently used date ranges\" }))),\n                    React.createElement(EuiSpacer, { size: \"s\" }),\n                    React.createElement(EuiText, { size: \"s\" },\n                        React.createElement(EuiFlexGroup, { gutterSize: \"s\", style: { flexDirection: 'column' } }, links))));\n            };\n            return _this;\n        }\n        class_1.prototype.render = function () {\n            var _a = this.props, isLoading = _a.isLoading, disabled = _a.disabled, intl = _a.intl;\n            var _b = this.state, startDate = _b.startDate, endDate = _b.endDate;\n            var quickSelectButton = (React.createElement(EuiButtonEmpty, { className: \"euiFormControlLayout__prepend\", style: { borderRight: 'none' }, onClick: this.onButtonClick, disabled: disabled, \"aria-label\": intl.formatMessage({\n                    id: 'xpack.infra.rangeDatePicker.dateQuickSelectAriaLabel',\n                    defaultMessage: 'Date quick select',\n                }), size: \"xs\", iconType: \"arrowDown\", iconSide: \"right\" },\n                React.createElement(EuiIcon, { type: \"calendar\" })));\n            var commonlyUsed = this.renderCommonlyUsed(commonDates);\n            var recentlyUsed = this.renderRecentlyUsed(tslib_1.__spread(this.state.recentlyUsed, this.props.recentlyUsed));\n            var quickSelectPopover = (React.createElement(EuiPopover, { id: \"QuickSelectPopover\", button: quickSelectButton, isOpen: this.state.isPopoverOpen, closePopover: this.closePopover.bind(this), anchorPosition: \"downLeft\", ownFocus: true },\n                React.createElement(\"div\", { style: { width: '400px' } },\n                    this.renderQuickSelect(),\n                    React.createElement(EuiHorizontalRule, null),\n                    commonlyUsed,\n                    React.createElement(EuiHorizontalRule, null),\n                    recentlyUsed)));\n            return (React.createElement(EuiFormControlLayout, { prepend: quickSelectPopover },\n                React.createElement(EuiDatePickerRange, { className: \"euiDatePickerRange--inGroup\", iconType: false, fullWidth: true, startDateControl: React.createElement(EuiDatePicker, { dateFormat: \"L LTS\", selected: startDate, onChange: this.handleChangeStart, isInvalid: startDate && endDate ? startDate > endDate : false, fullWidth: true, \"aria-label\": intl.formatMessage({\n                            id: 'xpack.infra.rangeDatePicker.startDateAriaLabel',\n                            defaultMessage: 'Start date',\n                        }), disabled: disabled, shouldCloseOnSelect: true, showTimeSelect: true }), endDateControl: React.createElement(EuiDatePicker, { dateFormat: \"L LTS\", selected: endDate, onChange: this.handleChangeEnd, isInvalid: startDate && endDate ? startDate > endDate : false, fullWidth: true, disabled: disabled, isLoading: isLoading, \"aria-label\": intl.formatMessage({\n                            id: 'xpack.infra.rangeDatePicker.endDateAriaLabel',\n                            defaultMessage: 'End date',\n                        }), shouldCloseOnSelect: true, showTimeSelect: true, popperPlacement: \"top-end\" }) })));\n        };\n        class_1.prototype.resetRangeDate = function (startDate, endDate) {\n            this.setState(tslib_1.__assign({}, this.state, { startDate: startDate,\n                endDate: endDate }));\n        };\n        class_1.prototype.managedStartEndDateFromType = function (type, from, to) {\n            var intl = this.props.intl;\n            var _a = this.state, startDate = _a.startDate, endDate = _a.endDate;\n            var recentlyUsed = this.state.recentlyUsed;\n            var textJustUsed = type;\n            if (type === 'quick-select') {\n                textJustUsed = intl.formatMessage({\n                    id: 'xpack.infra.rangeDatePicker.lastQuickSelectTimeText',\n                    defaultMessage: 'Last {quickSelectTime} {quickSelectUnit}',\n                }, {\n                    quickSelectTime: this.state.quickSelectTime,\n                    quickSelectUnit: this.state.quickSelectTime === 1\n                        ? get(find(singleLastOptions, { value: this.state.quickSelectUnit }), 'text')\n                        : get(find(pluralLastOptions, { value: this.state.quickSelectUnit }), 'text'),\n                });\n                startDate = moment().subtract(this.state.quickSelectTime, this.state\n                    .quickSelectUnit);\n                endDate = moment();\n            }\n            else if (type === DatePickerDateOptions.today) {\n                startDate = moment().startOf('day');\n                endDate = moment()\n                    .startOf('day')\n                    .add(24, 'hour');\n            }\n            else if (type === DatePickerDateOptions.yesterday) {\n                startDate = moment()\n                    .subtract(1, 'day')\n                    .startOf('day');\n                endDate = moment()\n                    .subtract(1, 'day')\n                    .startOf('day')\n                    .add(24, 'hour');\n            }\n            else if (type === DatePickerDateOptions.thisWeek) {\n                startDate = moment().startOf('week');\n                endDate = moment()\n                    .startOf('week')\n                    .add(1, 'week');\n            }\n            else if (type === DatePickerDateOptions.weekToDate) {\n                startDate = moment().subtract(1, 'week');\n                endDate = moment();\n            }\n            else if (type === DatePickerDateOptions.thisMonth) {\n                startDate = moment().startOf('month');\n                endDate = moment()\n                    .startOf('month')\n                    .add(1, 'month');\n            }\n            else if (type === DatePickerDateOptions.monthToDate) {\n                startDate = moment().subtract(1, 'month');\n                endDate = moment();\n            }\n            else if (type === DatePickerDateOptions.thisYear) {\n                startDate = moment().startOf('year');\n                endDate = moment()\n                    .startOf('year')\n                    .add(1, 'year');\n            }\n            else if (type === DatePickerDateOptions.yearToDate) {\n                startDate = moment().subtract(1, 'year');\n                endDate = moment();\n            }\n            else if (type === 'date-range' && to && from) {\n                startDate = moment(from);\n                endDate = moment(to);\n            }\n            textJustUsed =\n                type === 'date-range' || !type ? type : get(find(commonDates, { id: type }), 'label');\n            if (textJustUsed !== undefined && !find(recentlyUsed, ['text', textJustUsed])) {\n                recentlyUsed.unshift({ type: type, text: textJustUsed });\n                recentlyUsed = recentlyUsed.slice(0, 5);\n            }\n            return {\n                startDate: startDate,\n                endDate: endDate,\n                recentlyUsed: recentlyUsed,\n            };\n        };\n        return class_1;\n    }(React.PureComponent)),\n    _a.displayName = 'RangeDatePicker',\n    _a));\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/range_date_picker/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/range_date_picker/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport { find, get } from 'lodash';\nimport moment from 'moment-timezone';\nimport React, { Fragment } from 'react';\n\nimport {\n  EuiButton,\n  EuiButtonEmpty,\n  EuiDatePicker,\n  EuiDatePickerRange,\n  EuiFieldNumber,\n  EuiFlexGrid,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiFormControlLayout,\n  EuiFormRow,\n  EuiHorizontalRule,\n  EuiIcon,\n  EuiLink,\n  EuiPopover,\n  EuiSelect,\n  EuiSpacer,\n  EuiText,\n  EuiTitle,\n} from '@elastic/eui';\n\nenum DatePickerDateOptions {\n  today = 'today',\n  yesterday = 'yesterday',\n  thisWeek = 'this_week',\n  weekToDate = 'week_to_date',\n  thisMonth = 'this_month',\n  monthToDate = 'month_to_date',\n  thisYear = 'this_year',\n  yearToDate = 'year_to_date',\n}\n\nconst commonDates: Array<{ id: string; label: any }> = [\n  {\n    id: DatePickerDateOptions.today,\n    label: i18n.translate('xpack.infra.rangeDatePicker.todayText', {\n      defaultMessage: 'Today',\n    }),\n  },\n  {\n    id: DatePickerDateOptions.yesterday,\n    label: i18n.translate('xpack.infra.rangeDatePicker.yesterdayText', {\n      defaultMessage: 'Yesterday',\n    }),\n  },\n  {\n    id: DatePickerDateOptions.thisWeek,\n    label: i18n.translate('xpack.infra.rangeDatePicker.thisWeekText', {\n      defaultMessage: 'This week',\n    }),\n  },\n  {\n    id: DatePickerDateOptions.weekToDate,\n    label: i18n.translate('xpack.infra.rangeDatePicker.weekToDateText', {\n      defaultMessage: 'Week to date',\n    }),\n  },\n  {\n    id: DatePickerDateOptions.thisMonth,\n    label: i18n.translate('xpack.infra.rangeDatePicker.thisMonthText', {\n      defaultMessage: 'This month',\n    }),\n  },\n  {\n    id: DatePickerDateOptions.monthToDate,\n    label: i18n.translate('xpack.infra.rangeDatePicker.monthToDateText', {\n      defaultMessage: 'Month to date',\n    }),\n  },\n  {\n    id: DatePickerDateOptions.thisYear,\n    label: i18n.translate('xpack.infra.rangeDatePicker.thisYearText', {\n      defaultMessage: 'This year',\n    }),\n  },\n  {\n    id: DatePickerDateOptions.yearToDate,\n    label: i18n.translate('xpack.infra.rangeDatePicker.yearToDateText', {\n      defaultMessage: 'Year to date',\n    }),\n  },\n];\n\nconst singleLastOptions: Array<{ value: string; text: any }> = [\n  {\n    value: 'seconds',\n    text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.secondLabel', {\n      defaultMessage: 'second',\n    }),\n  },\n  {\n    value: 'minutes',\n    text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.minuteLabel', {\n      defaultMessage: 'minute',\n    }),\n  },\n  {\n    value: 'hours',\n    text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.hourLabel', {\n      defaultMessage: 'hour',\n    }),\n  },\n  {\n    value: 'days',\n    text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.dayLabel', {\n      defaultMessage: 'day',\n    }),\n  },\n  {\n    value: 'weeks',\n    text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.weekLabel', {\n      defaultMessage: 'week',\n    }),\n  },\n  {\n    value: 'months',\n    text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.monthLabel', {\n      defaultMessage: 'month',\n    }),\n  },\n  {\n    value: 'years',\n    text: i18n.translate('xpack.infra.rangeDatePicker.singleUnitOptions.yearLabel', {\n      defaultMessage: 'year',\n    }),\n  },\n];\n\nconst pluralLastOptions: Array<{ value: string; text: any }> = [\n  {\n    value: 'seconds',\n    text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.secondsLabel', {\n      defaultMessage: 'seconds',\n    }),\n  },\n  {\n    value: 'minutes',\n    text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.minutesLabel', {\n      defaultMessage: 'minutes',\n    }),\n  },\n  {\n    value: 'hours',\n    text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.hoursLabel', {\n      defaultMessage: 'hours',\n    }),\n  },\n  {\n    value: 'days',\n    text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.daysLabel', {\n      defaultMessage: 'days',\n    }),\n  },\n  {\n    value: 'weeks',\n    text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.weeksLabel', {\n      defaultMessage: 'weeks',\n    }),\n  },\n  {\n    value: 'months',\n    text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.monthsLabel', {\n      defaultMessage: 'months',\n    }),\n  },\n  {\n    value: 'years',\n    text: i18n.translate('xpack.infra.rangeDatePicker.pluralUnitOptions.yearsLabel', {\n      defaultMessage: 'years',\n    }),\n  },\n];\n\ninterface RangeDatePickerProps {\n  startDate: moment.Moment | undefined;\n  endDate: moment.Moment | undefined;\n  onChangeRangeTime: (\n    from: moment.Moment | undefined,\n    to: moment.Moment | undefined,\n    search: boolean\n  ) => void;\n  recentlyUsed: RecentlyUsed[];\n  disabled?: boolean;\n  isLoading?: boolean;\n  ref?: React.RefObject<any>;\n  intl: InjectedIntl;\n}\n\nexport interface RecentlyUsed {\n  type: string;\n  text: string | string[];\n}\n\ninterface RangeDatePickerState {\n  startDate: moment.Moment | undefined;\n  endDate: moment.Moment | undefined;\n  isPopoverOpen: boolean;\n  recentlyUsed: RecentlyUsed[];\n  quickSelectTime: number;\n  quickSelectUnit: string;\n}\n\nexport const RangeDatePicker = injectI18n(\n  class extends React.PureComponent<RangeDatePickerProps, RangeDatePickerState> {\n    public static displayName = 'RangeDatePicker';\n    public readonly state = {\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      isPopoverOpen: false,\n      recentlyUsed: [],\n      quickSelectTime: 1,\n      quickSelectUnit: 'hours',\n    };\n\n    public render() {\n      const { isLoading, disabled, intl } = this.props;\n      const { startDate, endDate } = this.state;\n      const quickSelectButton = (\n        <EuiButtonEmpty\n          className=\"euiFormControlLayout__prepend\"\n          style={{ borderRight: 'none' }}\n          onClick={this.onButtonClick}\n          disabled={disabled}\n          aria-label={intl.formatMessage({\n            id: 'xpack.infra.rangeDatePicker.dateQuickSelectAriaLabel',\n            defaultMessage: 'Date quick select',\n          })}\n          size=\"xs\"\n          iconType=\"arrowDown\"\n          iconSide=\"right\"\n        >\n          <EuiIcon type=\"calendar\" />\n        </EuiButtonEmpty>\n      );\n\n      const commonlyUsed = this.renderCommonlyUsed(commonDates);\n      const recentlyUsed = this.renderRecentlyUsed([\n        ...this.state.recentlyUsed,\n        ...this.props.recentlyUsed,\n      ]);\n\n      const quickSelectPopover = (\n        <EuiPopover\n          id=\"QuickSelectPopover\"\n          button={quickSelectButton}\n          isOpen={this.state.isPopoverOpen}\n          closePopover={this.closePopover.bind(this)}\n          anchorPosition=\"downLeft\"\n          ownFocus\n        >\n          <div style={{ width: '400px' }}>\n            {this.renderQuickSelect()}\n            <EuiHorizontalRule />\n            {commonlyUsed}\n            <EuiHorizontalRule />\n            {recentlyUsed}\n          </div>\n        </EuiPopover>\n      );\n\n      return (\n        <EuiFormControlLayout prepend={quickSelectPopover}>\n          <EuiDatePickerRange\n            className=\"euiDatePickerRange--inGroup\"\n            iconType={false}\n            fullWidth\n            startDateControl={\n              <EuiDatePicker\n                dateFormat=\"L LTS\"\n                selected={startDate}\n                onChange={this.handleChangeStart}\n                isInvalid={startDate && endDate ? startDate > endDate : false}\n                fullWidth\n                aria-label={intl.formatMessage({\n                  id: 'xpack.infra.rangeDatePicker.startDateAriaLabel',\n                  defaultMessage: 'Start date',\n                })}\n                disabled={disabled}\n                shouldCloseOnSelect\n                showTimeSelect\n              />\n            }\n            endDateControl={\n              <EuiDatePicker\n                dateFormat=\"L LTS\"\n                selected={endDate}\n                onChange={this.handleChangeEnd}\n                isInvalid={startDate && endDate ? startDate > endDate : false}\n                fullWidth\n                disabled={disabled}\n                isLoading={isLoading}\n                aria-label={intl.formatMessage({\n                  id: 'xpack.infra.rangeDatePicker.endDateAriaLabel',\n                  defaultMessage: 'End date',\n                })}\n                shouldCloseOnSelect\n                showTimeSelect\n                popperPlacement=\"top-end\"\n              />\n            }\n          />\n        </EuiFormControlLayout>\n      );\n    }\n\n    public resetRangeDate(startDate: moment.Moment, endDate: moment.Moment) {\n      this.setState({\n        ...this.state,\n        startDate,\n        endDate,\n      });\n    }\n\n    private handleChangeStart = (date: moment.Moment | null) => {\n      if (date && this.state.startDate !== date) {\n        this.props.onChangeRangeTime(date, this.state.endDate, false);\n        this.setState({\n          startDate: date,\n        });\n      }\n    };\n\n    private handleChangeEnd = (date: moment.Moment | null) => {\n      if (date && this.state.endDate !== date) {\n        this.props.onChangeRangeTime(this.state.startDate, date, false);\n        this.setState({\n          endDate: date,\n        });\n      }\n    };\n\n    private onButtonClick = () => {\n      this.setState({\n        isPopoverOpen: !this.state.isPopoverOpen,\n      });\n    };\n\n    private closePopover = (type: string, from?: string, to?: string) => {\n      const { startDate, endDate, recentlyUsed } = this.managedStartEndDateFromType(type, from, to);\n      this.setState(\n        {\n          ...this.state,\n          isPopoverOpen: false,\n          startDate,\n          endDate,\n          recentlyUsed,\n        },\n        () => {\n          if (type) {\n            this.props.onChangeRangeTime(startDate, endDate, true);\n          }\n        }\n      );\n    };\n\n    private managedStartEndDateFromType(type: string, from?: string, to?: string) {\n      const { intl } = this.props;\n      let { startDate, endDate } = this.state;\n      let recentlyUsed: RecentlyUsed[] = this.state.recentlyUsed;\n      let textJustUsed = type;\n\n      if (type === 'quick-select') {\n        textJustUsed = intl.formatMessage(\n          {\n            id: 'xpack.infra.rangeDatePicker.lastQuickSelectTimeText',\n            defaultMessage: 'Last {quickSelectTime} {quickSelectUnit}',\n          },\n          {\n            quickSelectTime: this.state.quickSelectTime,\n            quickSelectUnit:\n              this.state.quickSelectTime === 1\n                ? get(find(singleLastOptions, { value: this.state.quickSelectUnit }), 'text')\n                : get(find(pluralLastOptions, { value: this.state.quickSelectUnit }), 'text'),\n          }\n        );\n        startDate = moment().subtract(this.state.quickSelectTime, this.state\n          .quickSelectUnit as moment.unitOfTime.DurationConstructor);\n        endDate = moment();\n      } else if (type === DatePickerDateOptions.today) {\n        startDate = moment().startOf('day');\n        endDate = moment()\n          .startOf('day')\n          .add(24, 'hour');\n      } else if (type === DatePickerDateOptions.yesterday) {\n        startDate = moment()\n          .subtract(1, 'day')\n          .startOf('day');\n        endDate = moment()\n          .subtract(1, 'day')\n          .startOf('day')\n          .add(24, 'hour');\n      } else if (type === DatePickerDateOptions.thisWeek) {\n        startDate = moment().startOf('week');\n        endDate = moment()\n          .startOf('week')\n          .add(1, 'week');\n      } else if (type === DatePickerDateOptions.weekToDate) {\n        startDate = moment().subtract(1, 'week');\n        endDate = moment();\n      } else if (type === DatePickerDateOptions.thisMonth) {\n        startDate = moment().startOf('month');\n        endDate = moment()\n          .startOf('month')\n          .add(1, 'month');\n      } else if (type === DatePickerDateOptions.monthToDate) {\n        startDate = moment().subtract(1, 'month');\n        endDate = moment();\n      } else if (type === DatePickerDateOptions.thisYear) {\n        startDate = moment().startOf('year');\n        endDate = moment()\n          .startOf('year')\n          .add(1, 'year');\n      } else if (type === DatePickerDateOptions.yearToDate) {\n        startDate = moment().subtract(1, 'year');\n        endDate = moment();\n      } else if (type === 'date-range' && to && from) {\n        startDate = moment(from);\n        endDate = moment(to);\n      }\n\n      textJustUsed =\n        type === 'date-range' || !type ? type : get(find(commonDates, { id: type }), 'label');\n\n      if (textJustUsed !== undefined && !find(recentlyUsed, ['text', textJustUsed])) {\n        recentlyUsed.unshift({ type, text: textJustUsed });\n        recentlyUsed = recentlyUsed.slice(0, 5);\n      }\n\n      return {\n        startDate,\n        endDate,\n        recentlyUsed,\n      };\n    }\n\n    private renderQuickSelect = () => {\n      const { intl } = this.props;\n\n      return (\n        <Fragment>\n          <EuiTitle size=\"xxxs\">\n            <span>\n              <FormattedMessage\n                id=\"xpack.infra.rangeDatePicker.quickSelectTitle\"\n                defaultMessage=\"Quick select\"\n              />\n            </span>\n          </EuiTitle>\n          <EuiSpacer size=\"s\" />\n          <EuiFlexGroup gutterSize=\"s\" responsive={false}>\n            <EuiFlexItem>\n              <EuiTitle size=\"s\">\n                <span>\n                  <FormattedMessage\n                    id=\"xpack.infra.rangeDatePicker.lastQuickSelectTitle\"\n                    defaultMessage=\"Last\"\n                  />\n                </span>\n              </EuiTitle>\n            </EuiFlexItem>\n            <EuiFlexItem>\n              <EuiFormRow>\n                <EuiFieldNumber\n                  aria-label={intl.formatMessage({\n                    id: 'xpack.infra.rangeDatePicker.countOfFormRowAriaLabel',\n                    defaultMessage: 'Count of',\n                  })}\n                  defaultValue=\"1\"\n                  value={this.state.quickSelectTime}\n                  step={0}\n                  onChange={arg => {\n                    this.onChange('quickSelectTime', arg);\n                  }}\n                />\n              </EuiFormRow>\n            </EuiFlexItem>\n            <EuiFlexItem>\n              <EuiFormRow>\n                <EuiSelect\n                  value={this.state.quickSelectUnit}\n                  options={this.state.quickSelectTime === 1 ? singleLastOptions : pluralLastOptions}\n                  onChange={arg => {\n                    this.onChange('quickSelectUnit', arg);\n                  }}\n                />\n              </EuiFormRow>\n            </EuiFlexItem>\n            <EuiFlexItem grow={false}>\n              <EuiFormRow>\n                <EuiButton\n                  onClick={() => this.closePopover('quick-select')}\n                  style={{ minWidth: 0 }}\n                >\n                  <FormattedMessage\n                    id=\"xpack.infra.rangeDatePicker.applyFormRowButtonLabel\"\n                    defaultMessage=\"Apply\"\n                  />\n                </EuiButton>\n              </EuiFormRow>\n            </EuiFlexItem>\n          </EuiFlexGroup>\n        </Fragment>\n      );\n    };\n\n    private onChange = (stateType: string, args: any) => {\n      let value = args.currentTarget.value;\n\n      if (stateType === 'quickSelectTime' && value !== '') {\n        value = parseInt(args.currentTarget.value, 10);\n      }\n      this.setState({\n        ...this.state,\n        [stateType]: value,\n      });\n    };\n\n    private renderCommonlyUsed = (recentlyCommonDates: Array<{ id: string; label: any }>) => {\n      const links = recentlyCommonDates.map(date => {\n        return (\n          <EuiFlexItem key={date.id}>\n            <EuiLink onClick={() => this.closePopover(date.id)}>{date.label}</EuiLink>\n          </EuiFlexItem>\n        );\n      });\n\n      return (\n        <Fragment>\n          <EuiTitle size=\"xxxs\">\n            <span>\n              <FormattedMessage\n                id=\"xpack.infra.rangeDatePicker.renderCommonlyUsedLinksTitle\"\n                defaultMessage=\"Commonly used\"\n              />\n            </span>\n          </EuiTitle>\n          <EuiSpacer size=\"s\" />\n          <EuiText size=\"s\">\n            <EuiFlexGrid gutterSize=\"s\" columns={2}>\n              {links}\n            </EuiFlexGrid>\n          </EuiText>\n        </Fragment>\n      );\n    };\n\n    private renderRecentlyUsed = (recentDates: RecentlyUsed[]) => {\n      const links = recentDates.map((date: RecentlyUsed) => {\n        let dateRange;\n        let dateLink = (\n          <EuiLink onClick={() => this.closePopover(date.type)}>{dateRange || date.text}</EuiLink>\n        );\n        if (typeof date.text !== 'string') {\n          dateRange = `${date.text[0]} – ${date.text[1]}`;\n          dateLink = (\n            <EuiLink onClick={() => this.closePopover(date.type, date.text[0], date.text[1])}>\n              {dateRange || date.type}\n            </EuiLink>\n          );\n        }\n\n        return (\n          <EuiFlexItem grow={false} key={`${dateRange || date.type}`}>\n            {dateLink}\n          </EuiFlexItem>\n        );\n      });\n\n      return (\n        <Fragment>\n          <EuiTitle size=\"xxxs\">\n            <span>\n              <FormattedMessage\n                id=\"xpack.infra.rangeDatePicker.recentlyUsedDateRangesTitle\"\n                defaultMessage=\"Recently used date ranges\"\n              />\n            </span>\n          </EuiTitle>\n          <EuiSpacer size=\"s\" />\n          <EuiText size=\"s\">\n            <EuiFlexGroup gutterSize=\"s\" style={{ flexDirection: 'column' }}>\n              {links}\n            </EuiFlexGroup>\n          </EuiText>\n        </Fragment>\n      );\n    };\n  }\n);\n"]}]}