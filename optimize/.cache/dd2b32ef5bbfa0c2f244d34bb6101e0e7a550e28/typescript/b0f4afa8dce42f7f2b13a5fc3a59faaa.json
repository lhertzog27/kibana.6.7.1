{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/nav_control.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/nav_control.tsx","mtime":1567631712312},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { constant } from 'lodash';\nimport { SpacesManager } from 'plugins/spaces/lib/spaces_manager';\n// @ts-ignore\nimport template from 'plugins/spaces/views/nav_control/nav_control.html';\nimport { NavControlPopover } from 'plugins/spaces/views/nav_control/nav_control_popover';\n// @ts-ignore\nimport { PathProvider } from 'plugins/xpack_main/services/path';\nimport { UserProfileProvider } from 'plugins/xpack_main/services/user_profile';\nimport React from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport ReactDOM from 'react-dom';\nimport { NavControlSide } from 'ui/chrome/directives/header_global_nav';\nimport { I18nContext } from 'ui/i18n';\n// @ts-ignore\nimport { uiModules } from 'ui/modules';\n// @ts-ignore\nimport { chromeHeaderNavControlsRegistry } from 'ui/registry/chrome_header_nav_controls';\n// @ts-ignore\nimport { chromeNavControlsRegistry } from 'ui/registry/chrome_nav_controls';\nimport { SpacesGlobalNavButton } from './components/spaces_global_nav_button';\nimport { SpacesHeaderNavButton } from './components/spaces_header_nav_button';\nchromeNavControlsRegistry.register(constant({\n    name: 'spaces',\n    order: 90,\n    template: template,\n}));\nvar module = uiModules.get('spaces_nav', ['kibana']);\nvar spacesManager;\nmodule.controller('spacesNavController', function ($scope, $http, chrome, Private, activeSpace) {\n    var userProfile = Private(UserProfileProvider);\n    var pathProvider = Private(PathProvider);\n    var domNode = document.getElementById(\"spacesNavReactRoot\");\n    var spaceSelectorURL = chrome.getInjected('spaceSelectorURL');\n    spacesManager = new SpacesManager($http, chrome, spaceSelectorURL);\n    var mounted = false;\n    $scope.$parent.$watch('isVisible', function isVisibleWatcher(isVisible) {\n        if (isVisible && !mounted && !pathProvider.isUnauthenticated()) {\n            render(React.createElement(I18nContext, null,\n                React.createElement(NavControlPopover, { spacesManager: spacesManager, activeSpace: activeSpace, userProfile: userProfile, anchorPosition: 'rightCenter', buttonClass: SpacesGlobalNavButton })), domNode);\n            mounted = true;\n        }\n    });\n    // unmount react on controller destroy\n    $scope.$on('$destroy', function () {\n        if (domNode) {\n            unmountComponentAtNode(domNode);\n        }\n        mounted = false;\n    });\n});\nmodule.service('spacesNavState', function (activeSpace) {\n    return {\n        getActiveSpace: function () {\n            return activeSpace.space;\n        },\n        refreshSpacesList: function () {\n            if (spacesManager) {\n                spacesManager.requestRefresh();\n            }\n        },\n    };\n});\nchromeHeaderNavControlsRegistry.register(function ($http, chrome, Private, activeSpace) { return ({\n    name: 'spaces',\n    order: 1000,\n    side: NavControlSide.Left,\n    render: function (el) {\n        var userProfile = Private(UserProfileProvider);\n        var pathProvider = Private(PathProvider);\n        if (pathProvider.isUnauthenticated()) {\n            return;\n        }\n        var spaceSelectorURL = chrome.getInjected('spaceSelectorURL');\n        spacesManager = new SpacesManager($http, chrome, spaceSelectorURL);\n        ReactDOM.render(React.createElement(I18nContext, null,\n            React.createElement(NavControlPopover, { spacesManager: spacesManager, activeSpace: activeSpace, userProfile: userProfile, anchorPosition: \"downLeft\", buttonClass: SpacesHeaderNavButton })), el);\n    },\n}); });\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/nav_control.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/nav_control.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { constant } from 'lodash';\nimport { SpacesManager } from 'plugins/spaces/lib/spaces_manager';\n// @ts-ignore\nimport template from 'plugins/spaces/views/nav_control/nav_control.html';\nimport { NavControlPopover } from 'plugins/spaces/views/nav_control/nav_control_popover';\n// @ts-ignore\nimport { PathProvider } from 'plugins/xpack_main/services/path';\nimport { UserProfileProvider } from 'plugins/xpack_main/services/user_profile';\nimport React from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport ReactDOM from 'react-dom';\nimport { NavControlSide } from 'ui/chrome/directives/header_global_nav';\nimport { I18nContext } from 'ui/i18n';\n// @ts-ignore\nimport { uiModules } from 'ui/modules';\n// @ts-ignore\nimport { chromeHeaderNavControlsRegistry } from 'ui/registry/chrome_header_nav_controls';\n// @ts-ignore\nimport { chromeNavControlsRegistry } from 'ui/registry/chrome_nav_controls';\nimport { Space } from '../../../common/model/space';\nimport { SpacesGlobalNavButton } from './components/spaces_global_nav_button';\nimport { SpacesHeaderNavButton } from './components/spaces_header_nav_button';\n\nchromeNavControlsRegistry.register(\n  constant({\n    name: 'spaces',\n    order: 90,\n    template,\n  })\n);\n\nconst module = uiModules.get('spaces_nav', ['kibana']);\n\nexport interface SpacesNavState {\n  getActiveSpace: () => Space;\n  refreshSpacesList: () => void;\n}\n\nlet spacesManager: SpacesManager;\n\nmodule.controller(\n  'spacesNavController',\n  ($scope: any, $http: any, chrome: any, Private: any, activeSpace: any) => {\n    const userProfile = Private(UserProfileProvider);\n    const pathProvider = Private(PathProvider);\n\n    const domNode = document.getElementById(`spacesNavReactRoot`);\n    const spaceSelectorURL = chrome.getInjected('spaceSelectorURL');\n\n    spacesManager = new SpacesManager($http, chrome, spaceSelectorURL);\n\n    let mounted = false;\n\n    $scope.$parent.$watch('isVisible', function isVisibleWatcher(isVisible: boolean) {\n      if (isVisible && !mounted && !pathProvider.isUnauthenticated()) {\n        render(\n          <I18nContext>\n            <NavControlPopover\n              spacesManager={spacesManager}\n              activeSpace={activeSpace}\n              userProfile={userProfile}\n              anchorPosition={'rightCenter'}\n              buttonClass={SpacesGlobalNavButton}\n            />\n          </I18nContext>,\n          domNode\n        );\n        mounted = true;\n      }\n    });\n\n    // unmount react on controller destroy\n    $scope.$on('$destroy', () => {\n      if (domNode) {\n        unmountComponentAtNode(domNode);\n      }\n      mounted = false;\n    });\n  }\n);\n\nmodule.service('spacesNavState', (activeSpace: any) => {\n  return {\n    getActiveSpace: () => {\n      return activeSpace.space;\n    },\n    refreshSpacesList: () => {\n      if (spacesManager) {\n        spacesManager.requestRefresh();\n      }\n    },\n  } as SpacesNavState;\n});\n\nchromeHeaderNavControlsRegistry.register(\n  ($http: any, chrome: any, Private: any, activeSpace: any) => ({\n    name: 'spaces',\n    order: 1000,\n    side: NavControlSide.Left,\n    render(el: HTMLElement) {\n      const userProfile = Private(UserProfileProvider);\n      const pathProvider = Private(PathProvider);\n\n      if (pathProvider.isUnauthenticated()) {\n        return;\n      }\n\n      const spaceSelectorURL = chrome.getInjected('spaceSelectorURL');\n\n      spacesManager = new SpacesManager($http, chrome, spaceSelectorURL);\n\n      ReactDOM.render(\n        <I18nContext>\n          <NavControlPopover\n            spacesManager={spacesManager}\n            activeSpace={activeSpace}\n            userProfile={userProfile}\n            anchorPosition=\"downLeft\"\n            buttonClass={SpacesHeaderNavButton}\n          />\n        </I18nContext>,\n        el\n      );\n    },\n  })\n);\n"]}]}