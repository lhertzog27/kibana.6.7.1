{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/es/elasticsearch_privileges.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/es/elasticsearch_privileges.tsx","mtime":1567631712300},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButton, EuiComboBox, \n// @ts-ignore\nEuiDescribedFormGroup, EuiFormRow, EuiHorizontalRule, EuiLink, EuiSpacer, EuiText, EuiTitle, } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport React, { Component, Fragment } from 'react';\n// @ts-ignore\nimport { documentationLinks } from '../../../../../../documentation_links';\nimport { CollapsiblePanel } from '../../collapsible_panel';\nimport { ClusterPrivileges } from './cluster_privileges';\nimport { IndexPrivileges } from './index_privileges';\nvar ElasticsearchPrivileges = /** @class */ (function (_super) {\n    tslib_1.__extends(ElasticsearchPrivileges, _super);\n    function ElasticsearchPrivileges() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.getForm = function () {\n            var _a = _this.props, role = _a.role, httpClient = _a.httpClient, validator = _a.validator, onChange = _a.onChange, indexPatterns = _a.indexPatterns, allowDocumentLevelSecurity = _a.allowDocumentLevelSecurity, allowFieldLevelSecurity = _a.allowFieldLevelSecurity;\n            var indexProps = {\n                role: role,\n                httpClient: httpClient,\n                validator: validator,\n                indexPatterns: indexPatterns,\n                allowDocumentLevelSecurity: allowDocumentLevelSecurity,\n                allowFieldLevelSecurity: allowFieldLevelSecurity,\n                onChange: onChange,\n            };\n            return (React.createElement(Fragment, null,\n                React.createElement(EuiDescribedFormGroup, { title: React.createElement(\"h3\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.elasticSearchPrivileges.clusterPrivilegesTitle\", defaultMessage: \"Cluster privileges\" })), description: React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.elasticSearchPrivileges.manageRoleActionsDescription\", defaultMessage: \"Manage the actions this role can perform against your cluster. \" }),\n                        _this.learnMore(documentationLinks.esClusterPrivileges)) },\n                    React.createElement(EuiFormRow, { fullWidth: true, hasEmptyLabelSpace: true },\n                        React.createElement(ClusterPrivileges, { role: _this.props.role, onChange: _this.onClusterPrivilegesChange }))),\n                React.createElement(EuiSpacer, null),\n                React.createElement(EuiDescribedFormGroup, { title: React.createElement(\"h3\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.elasticSearchPrivileges.runAsPrivilegesTitle\", defaultMessage: \"Run As privileges\" })), description: React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.elasticSearchPrivileges.howToBeSubmittedOnBehalfOfOtherUsersDescription\", defaultMessage: \"Allow requests to be submitted on the behalf of other users. \" }),\n                        _this.learnMore(documentationLinks.esRunAsPrivileges)) },\n                    React.createElement(EuiFormRow, { hasEmptyLabelSpace: true },\n                        React.createElement(EuiComboBox, { placeholder: _this.props.editable\n                                ? i18n.translate('xpack.security.management.editRoles.elasticSearchPrivileges.addUserTitle', { defaultMessage: 'Add a userâ€¦' })\n                                : undefined, options: _this.props.runAsUsers.map(function (username) { return ({\n                                id: username,\n                                label: username,\n                                isGroupLabelOption: false,\n                            }); }), selectedOptions: _this.props.role.elasticsearch.run_as.map(function (u) { return ({ label: u }); }), onCreateOption: _this.onCreateRunAsOption, onChange: _this.onRunAsUserChange, isDisabled: !_this.props.editable }))),\n                React.createElement(EuiSpacer, null),\n                React.createElement(EuiTitle, { size: 'xs' },\n                    React.createElement(\"h3\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.elasticSearchPrivileges.indexPrivilegesTitle\", defaultMessage: \"Index privileges\" }))),\n                React.createElement(EuiSpacer, { size: 's' }),\n                React.createElement(EuiText, { size: 's', color: 'subdued' },\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.elasticSearchPrivileges.controlAccessToClusterDataDescription\", defaultMessage: \"Control access to the data in your cluster. \" }),\n                        _this.learnMore(documentationLinks.esIndicesPrivileges))),\n                React.createElement(IndexPrivileges, tslib_1.__assign({}, indexProps)),\n                React.createElement(EuiHorizontalRule, null),\n                _this.props.editable && (React.createElement(EuiButton, { size: 's', iconType: 'plusInCircle', onClick: _this.addIndexPrivilege },\n                    React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.elasticSearchPrivileges.addIndexPrivilegesButtonLabel\", defaultMessage: \"Add index privilege\" })))));\n        };\n        _this.learnMore = function (href) { return (React.createElement(EuiLink, { className: \"editRole__learnMore\", href: href, target: '_blank' },\n            React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.elasticSearchPrivileges.learnMoreLinkText\", defaultMessage: \"Learn more\" }))); };\n        _this.addIndexPrivilege = function () {\n            var role = _this.props.role;\n            var newIndices = tslib_1.__spread(role.elasticsearch.indices, [\n                {\n                    names: [],\n                    privileges: [],\n                    field_security: {\n                        grant: ['*'],\n                    },\n                },\n            ]);\n            _this.props.onChange(tslib_1.__assign({}, _this.props.role, { elasticsearch: tslib_1.__assign({}, _this.props.role.elasticsearch, { indices: newIndices }) }));\n        };\n        _this.onClusterPrivilegesChange = function (cluster) {\n            var role = tslib_1.__assign({}, _this.props.role, { elasticsearch: tslib_1.__assign({}, _this.props.role.elasticsearch, { cluster: cluster }) });\n            _this.props.onChange(role);\n        };\n        _this.onRunAsUserChange = function (users) {\n            var role = tslib_1.__assign({}, _this.props.role, { elasticsearch: tslib_1.__assign({}, _this.props.role.elasticsearch, { run_as: users.map(function (u) { return u.label; }) }) });\n            _this.props.onChange(role);\n        };\n        _this.onCreateRunAsOption = function (option) {\n            var newRunAsUsers = _this.props.role.elasticsearch.run_as.concat(option);\n            var role = tslib_1.__assign({}, _this.props.role, { elasticsearch: tslib_1.__assign({}, _this.props.role.elasticsearch, { run_as: newRunAsUsers }) });\n            _this.props.onChange(role);\n        };\n        return _this;\n    }\n    ElasticsearchPrivileges.prototype.render = function () {\n        return (React.createElement(CollapsiblePanel, { iconType: 'logoElasticsearch', title: 'Elasticsearch' }, this.getForm()));\n    };\n    return ElasticsearchPrivileges;\n}(Component));\nexport { ElasticsearchPrivileges };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/es/elasticsearch_privileges.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/es/elasticsearch_privileges.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiButton,\n  EuiComboBox,\n  // @ts-ignore\n  EuiDescribedFormGroup,\n  EuiFormRow,\n  EuiHorizontalRule,\n  EuiLink,\n  EuiSpacer,\n  EuiText,\n  EuiTitle,\n} from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport React, { Component, Fragment } from 'react';\nimport { Role } from '../../../../../../../common/model/role';\n// @ts-ignore\nimport { documentationLinks } from '../../../../../../documentation_links';\nimport { RoleValidator } from '../../../lib/validate_role';\nimport { CollapsiblePanel } from '../../collapsible_panel';\nimport { ClusterPrivileges } from './cluster_privileges';\n\nimport { IndexPrivileges } from './index_privileges';\n\ninterface Props {\n  role: Role;\n  editable: boolean;\n  httpClient: any;\n  onChange: (role: Role) => void;\n  runAsUsers: string[];\n  validator: RoleValidator;\n  indexPatterns: string[];\n  allowDocumentLevelSecurity: boolean;\n  allowFieldLevelSecurity: boolean;\n}\n\nexport class ElasticsearchPrivileges extends Component<Props, {}> {\n  public render() {\n    return (\n      <CollapsiblePanel iconType={'logoElasticsearch'} title={'Elasticsearch'}>\n        {this.getForm()}\n      </CollapsiblePanel>\n    );\n  }\n\n  public getForm = () => {\n    const {\n      role,\n      httpClient,\n      validator,\n      onChange,\n      indexPatterns,\n      allowDocumentLevelSecurity,\n      allowFieldLevelSecurity,\n    } = this.props;\n\n    const indexProps = {\n      role,\n      httpClient,\n      validator,\n      indexPatterns,\n      allowDocumentLevelSecurity,\n      allowFieldLevelSecurity,\n      onChange,\n    };\n\n    return (\n      <Fragment>\n        <EuiDescribedFormGroup\n          title={\n            <h3>\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.elasticSearchPrivileges.clusterPrivilegesTitle\"\n                defaultMessage=\"Cluster privileges\"\n              />\n            </h3>\n          }\n          description={\n            <p>\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.elasticSearchPrivileges.manageRoleActionsDescription\"\n                defaultMessage=\"Manage the actions this role can perform against your cluster. \"\n              />\n              {this.learnMore(documentationLinks.esClusterPrivileges)}\n            </p>\n          }\n        >\n          <EuiFormRow fullWidth={true} hasEmptyLabelSpace>\n            <ClusterPrivileges role={this.props.role} onChange={this.onClusterPrivilegesChange} />\n          </EuiFormRow>\n        </EuiDescribedFormGroup>\n\n        <EuiSpacer />\n\n        <EuiDescribedFormGroup\n          title={\n            <h3>\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.elasticSearchPrivileges.runAsPrivilegesTitle\"\n                defaultMessage=\"Run As privileges\"\n              />\n            </h3>\n          }\n          description={\n            <p>\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.elasticSearchPrivileges.howToBeSubmittedOnBehalfOfOtherUsersDescription\"\n                defaultMessage=\"Allow requests to be submitted on the behalf of other users. \"\n              />\n              {this.learnMore(documentationLinks.esRunAsPrivileges)}\n            </p>\n          }\n        >\n          <EuiFormRow hasEmptyLabelSpace>\n            <EuiComboBox\n              placeholder={\n                this.props.editable\n                  ? i18n.translate(\n                      'xpack.security.management.editRoles.elasticSearchPrivileges.addUserTitle',\n                      { defaultMessage: 'Add a userâ€¦' }\n                    )\n                  : undefined\n              }\n              options={this.props.runAsUsers.map(username => ({\n                id: username,\n                label: username,\n                isGroupLabelOption: false,\n              }))}\n              selectedOptions={this.props.role.elasticsearch.run_as.map(u => ({ label: u }))}\n              onCreateOption={this.onCreateRunAsOption}\n              onChange={this.onRunAsUserChange}\n              isDisabled={!this.props.editable}\n            />\n          </EuiFormRow>\n        </EuiDescribedFormGroup>\n\n        <EuiSpacer />\n\n        <EuiTitle size={'xs'}>\n          <h3>\n            <FormattedMessage\n              id=\"xpack.security.management.editRoles.elasticSearchPrivileges.indexPrivilegesTitle\"\n              defaultMessage=\"Index privileges\"\n            />\n          </h3>\n        </EuiTitle>\n        <EuiSpacer size={'s'} />\n        <EuiText size={'s'} color={'subdued'}>\n          <p>\n            <FormattedMessage\n              id=\"xpack.security.management.editRoles.elasticSearchPrivileges.controlAccessToClusterDataDescription\"\n              defaultMessage=\"Control access to the data in your cluster. \"\n            />\n            {this.learnMore(documentationLinks.esIndicesPrivileges)}\n          </p>\n        </EuiText>\n\n        <IndexPrivileges {...indexProps} />\n\n        <EuiHorizontalRule />\n\n        {this.props.editable && (\n          <EuiButton size={'s'} iconType={'plusInCircle'} onClick={this.addIndexPrivilege}>\n            <FormattedMessage\n              id=\"xpack.security.management.editRoles.elasticSearchPrivileges.addIndexPrivilegesButtonLabel\"\n              defaultMessage=\"Add index privilege\"\n            />\n          </EuiButton>\n        )}\n      </Fragment>\n    );\n  };\n\n  public learnMore = (href: string) => (\n    <EuiLink className=\"editRole__learnMore\" href={href} target={'_blank'}>\n      <FormattedMessage\n        id=\"xpack.security.management.editRoles.elasticSearchPrivileges.learnMoreLinkText\"\n        defaultMessage=\"Learn more\"\n      />\n    </EuiLink>\n  );\n\n  public addIndexPrivilege = () => {\n    const { role } = this.props;\n\n    const newIndices = [\n      ...role.elasticsearch.indices,\n      {\n        names: [],\n        privileges: [],\n        field_security: {\n          grant: ['*'],\n        },\n      },\n    ];\n\n    this.props.onChange({\n      ...this.props.role,\n      elasticsearch: {\n        ...this.props.role.elasticsearch,\n        indices: newIndices,\n      },\n    });\n  };\n\n  public onClusterPrivilegesChange = (cluster: string[]) => {\n    const role = {\n      ...this.props.role,\n      elasticsearch: {\n        ...this.props.role.elasticsearch,\n        cluster,\n      },\n    };\n\n    this.props.onChange(role);\n  };\n\n  public onRunAsUserChange = (users: any) => {\n    const role = {\n      ...this.props.role,\n      elasticsearch: {\n        ...this.props.role.elasticsearch,\n        run_as: users.map((u: any) => u.label),\n      },\n    };\n\n    this.props.onChange(role);\n  };\n\n  public onCreateRunAsOption = (option: any) => {\n    const newRunAsUsers = this.props.role.elasticsearch.run_as.concat(option);\n\n    const role = {\n      ...this.props.role,\n      elasticsearch: {\n        ...this.props.role.elasticsearch,\n        run_as: newRunAsUsers,\n      },\n    };\n    this.props.onChange(role);\n  };\n}\n"]}]}