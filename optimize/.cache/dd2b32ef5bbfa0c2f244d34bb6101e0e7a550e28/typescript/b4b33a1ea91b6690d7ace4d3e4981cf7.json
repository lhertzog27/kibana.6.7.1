{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/host.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/host.ts","mtime":1567631711986},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { i18n } from '@kbn/i18n';\nimport { InfraMetric } from '../../../graphql/types';\nimport { InfraFormatterType } from '../../../lib/lib';\nimport { nginxLayoutCreator } from './nginx';\nimport { InfraMetricLayoutSectionType, InfraMetricLayoutVisualizationType, } from './types';\nexport var hostLayoutCreator = function (theme) { return tslib_1.__spread([\n    {\n        id: 'hostOverview',\n        label: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.layoutLabel', {\n            defaultMessage: 'Host',\n        }),\n        sections: [\n            {\n                id: InfraMetric.hostSystemOverview,\n                linkToId: 'hostOverview',\n                label: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.sectionLabel', {\n                    defaultMessage: 'Overview',\n                }),\n                requires: ['system.cpu', 'system.load', 'system.memory', 'system.network'],\n                type: InfraMetricLayoutSectionType.gauges,\n                visConfig: {\n                    seriesOverrides: {\n                        cpu: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.cpuUsageSeriesLabel', {\n                                defaultMessage: 'CPU Usage',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.percent,\n                            gaugeMax: 1,\n                        },\n                        load: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.loadSeriesLabel', {\n                                defaultMessage: 'Load (5m)',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                        },\n                        memory: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.memoryCapacitySeriesLabel', {\n                                defaultMessage: 'Memory Usage',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.percent,\n                            gaugeMax: 1,\n                        },\n                        rx: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.inboundRXSeriesLabel', {\n                                defaultMessage: 'Inbound (RX)',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.bits,\n                            formatterTemplate: '{{value}}/s',\n                        },\n                        tx: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.outboundTXSeriesLabel', {\n                                defaultMessage: 'Outbound (TX)',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.bits,\n                            formatterTemplate: '{{value}}/s',\n                        },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.hostCpuUsage,\n                label: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.cpuUsageSection.sectionLabel', {\n                    defaultMessage: 'CPU Usage',\n                }),\n                requires: ['system.cpu'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    stacked: true,\n                    type: InfraMetricLayoutVisualizationType.area,\n                    formatter: InfraFormatterType.percent,\n                    bounds: { min: 0, max: 1 },\n                    seriesOverrides: {\n                        user: { color: theme.eui.euiColorVis0 },\n                        system: { color: theme.eui.euiColorVis2 },\n                        steal: { color: theme.eui.euiColorVis9 },\n                        irq: { color: theme.eui.euiColorVis4 },\n                        softirq: { color: theme.eui.euiColorVis6 },\n                        iowait: { color: theme.eui.euiColorVis7 },\n                        nice: { color: theme.eui.euiColorVis5 },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.hostLoad,\n                label: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.loadSection.sectionLabel', {\n                    defaultMessage: 'Load',\n                }),\n                requires: ['system.load'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    seriesOverrides: {\n                        load_1m: {\n                            color: theme.eui.euiColorVis0,\n                            name: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.loadSection.oneMinuteSeriesLabel', {\n                                defaultMessage: '1m',\n                            }),\n                        },\n                        load_5m: {\n                            color: theme.eui.euiColorVis1,\n                            name: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.loadSection.fiveMinuteSeriesLabel', {\n                                defaultMessage: '5m',\n                            }),\n                        },\n                        load_15m: {\n                            color: theme.eui.euiColorVis3,\n                            name: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.loadSection.fifteenMinuteSeriesLabel', {\n                                defaultMessage: '15m',\n                            }),\n                        },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.hostMemoryUsage,\n                label: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.memoryUsageSection.sectionLabel', {\n                    defaultMessage: 'Memory Usage',\n                }),\n                requires: ['system.memory'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    stacked: true,\n                    formatter: InfraFormatterType.bytes,\n                    type: InfraMetricLayoutVisualizationType.area,\n                    seriesOverrides: {\n                        used: { color: theme.eui.euiColorVis2 },\n                        free: { color: theme.eui.euiColorVis0 },\n                        cache: { color: theme.eui.euiColorVis1 },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.hostNetworkTraffic,\n                label: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.networkTrafficSection.sectionLabel', {\n                    defaultMessage: 'Network Traffic',\n                }),\n                requires: ['system.network'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.bits,\n                    formatterTemplate: '{{value}}/s',\n                    type: InfraMetricLayoutVisualizationType.area,\n                    seriesOverrides: {\n                        rx: {\n                            color: theme.eui.euiColorVis1,\n                            name: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.networkTrafficSection.networkRxRateSeriesLabel', {\n                                defaultMessage: 'in',\n                            }),\n                        },\n                        tx: {\n                            color: theme.eui.euiColorVis2,\n                            name: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.networkTrafficSection.networkTxRateSeriesLabel', {\n                                defaultMessage: 'out',\n                            }),\n                        },\n                    },\n                },\n            },\n        ],\n    },\n    {\n        id: 'k8sOverview',\n        label: 'Kubernetes',\n        sections: [\n            {\n                id: InfraMetric.hostK8sOverview,\n                linkToId: 'k8sOverview',\n                label: i18n.translate('xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.sectionLabel', {\n                    defaultMessage: 'Overview',\n                }),\n                requires: ['kubernetes.node'],\n                type: InfraMetricLayoutSectionType.gauges,\n                visConfig: {\n                    seriesOverrides: {\n                        cpucap: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.cpuUsageSeriesLabel', {\n                                defaultMessage: 'CPU Capacity',\n                            }),\n                            color: 'secondary',\n                            formatter: InfraFormatterType.percent,\n                            gaugeMax: 1,\n                        },\n                        load: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.loadSeriesLabel', {\n                                defaultMessage: 'Load (5m)',\n                            }),\n                            color: 'secondary',\n                        },\n                        memorycap: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.memoryUsageSeriesLabel', {\n                                defaultMessage: 'Memory Capacity',\n                            }),\n                            color: 'secondary',\n                            formatter: InfraFormatterType.percent,\n                            gaugeMax: 1,\n                        },\n                        podcap: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.podCapacitySeriesLabel', {\n                                defaultMessage: 'Pod Capacity',\n                            }),\n                            color: 'secondary',\n                            formatter: InfraFormatterType.percent,\n                            gaugeMax: 1,\n                        },\n                        diskcap: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.diskCapacitySeriesLabel', {\n                                defaultMessage: 'Disk Capacity',\n                            }),\n                            color: 'secondary',\n                            formatter: InfraFormatterType.percent,\n                            gaugeMax: 1,\n                        },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.hostK8sCpuCap,\n                label: i18n.translate('xpack.infra.metricDetailPage.kubernetesMetricsLayout.nodeCpuCapacitySection.sectionLabel', {\n                    defaultMessage: 'Node CPU Capacity',\n                }),\n                requires: ['kubernetes.node'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.abbreviatedNumber,\n                    seriesOverrides: {\n                        capacity: { color: theme.eui.euiColorVis2 },\n                        used: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.hostK8sMemoryCap,\n                label: i18n.translate('xpack.infra.metricDetailPage.kubernetesMetricsLayout.nodeMemoryCapacitySection.sectionLabel', {\n                    defaultMessage: 'Node Memory Capacity',\n                }),\n                requires: ['kubernetes.node'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.bytes,\n                    seriesOverrides: {\n                        capacity: { color: theme.eui.euiColorVis2 },\n                        used: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.hostK8sDiskCap,\n                label: i18n.translate('xpack.infra.metricDetailPage.kubernetesMetricsLayout.nodeDiskCapacitySection.sectionLabel', {\n                    defaultMessage: 'Node Disk Capacity',\n                }),\n                requires: ['kubernetes.node'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.bytes,\n                    seriesOverrides: {\n                        capacity: { color: theme.eui.euiColorVis2 },\n                        used: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.hostK8sPodCap,\n                label: i18n.translate('xpack.infra.metricDetailPage.kubernetesMetricsLayout.nodePodCapacitySection.sectionLabel', {\n                    defaultMessage: 'Node Pod Capacity',\n                }),\n                requires: ['kubernetes.node'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.number,\n                    seriesOverrides: {\n                        capacity: { color: theme.eui.euiColorVis2 },\n                        used: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n                    },\n                },\n            },\n        ],\n    }\n], nginxLayoutCreator(theme)); };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/host.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/host.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { i18n } from '@kbn/i18n';\nimport { InfraMetric } from '../../../graphql/types';\nimport { InfraFormatterType } from '../../../lib/lib';\nimport { nginxLayoutCreator } from './nginx';\nimport {\n  InfraMetricLayoutCreator,\n  InfraMetricLayoutSectionType,\n  InfraMetricLayoutVisualizationType,\n} from './types';\n\nexport const hostLayoutCreator: InfraMetricLayoutCreator = theme => [\n  {\n    id: 'hostOverview',\n    label: i18n.translate('xpack.infra.metricDetailPage.hostMetricsLayout.layoutLabel', {\n      defaultMessage: 'Host',\n    }),\n    sections: [\n      {\n        id: InfraMetric.hostSystemOverview,\n        linkToId: 'hostOverview',\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.sectionLabel',\n          {\n            defaultMessage: 'Overview',\n          }\n        ),\n        requires: ['system.cpu', 'system.load', 'system.memory', 'system.network'],\n        type: InfraMetricLayoutSectionType.gauges,\n        visConfig: {\n          seriesOverrides: {\n            cpu: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.cpuUsageSeriesLabel',\n                {\n                  defaultMessage: 'CPU Usage',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.percent,\n              gaugeMax: 1,\n            },\n            load: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.loadSeriesLabel',\n                {\n                  defaultMessage: 'Load (5m)',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n            },\n            memory: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.memoryCapacitySeriesLabel',\n                {\n                  defaultMessage: 'Memory Usage',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.percent,\n              gaugeMax: 1,\n            },\n            rx: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.inboundRXSeriesLabel',\n                {\n                  defaultMessage: 'Inbound (RX)',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.bits,\n              formatterTemplate: '{{value}}/s',\n            },\n            tx: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.hostMetricsLayout.overviewSection.outboundTXSeriesLabel',\n                {\n                  defaultMessage: 'Outbound (TX)',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.bits,\n              formatterTemplate: '{{value}}/s',\n            },\n          },\n        },\n      },\n      {\n        id: InfraMetric.hostCpuUsage,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.hostMetricsLayout.cpuUsageSection.sectionLabel',\n          {\n            defaultMessage: 'CPU Usage',\n          }\n        ),\n        requires: ['system.cpu'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          stacked: true,\n          type: InfraMetricLayoutVisualizationType.area,\n          formatter: InfraFormatterType.percent,\n          bounds: { min: 0, max: 1 },\n          seriesOverrides: {\n            user: { color: theme.eui.euiColorVis0 },\n            system: { color: theme.eui.euiColorVis2 },\n            steal: { color: theme.eui.euiColorVis9 },\n            irq: { color: theme.eui.euiColorVis4 },\n            softirq: { color: theme.eui.euiColorVis6 },\n            iowait: { color: theme.eui.euiColorVis7 },\n            nice: { color: theme.eui.euiColorVis5 },\n          },\n        },\n      },\n      {\n        id: InfraMetric.hostLoad,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.hostMetricsLayout.loadSection.sectionLabel',\n          {\n            defaultMessage: 'Load',\n          }\n        ),\n        requires: ['system.load'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          seriesOverrides: {\n            load_1m: {\n              color: theme.eui.euiColorVis0,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.hostMetricsLayout.loadSection.oneMinuteSeriesLabel',\n                {\n                  defaultMessage: '1m',\n                }\n              ),\n            },\n            load_5m: {\n              color: theme.eui.euiColorVis1,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.hostMetricsLayout.loadSection.fiveMinuteSeriesLabel',\n                {\n                  defaultMessage: '5m',\n                }\n              ),\n            },\n            load_15m: {\n              color: theme.eui.euiColorVis3,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.hostMetricsLayout.loadSection.fifteenMinuteSeriesLabel',\n                {\n                  defaultMessage: '15m',\n                }\n              ),\n            },\n          },\n        },\n      },\n      {\n        id: InfraMetric.hostMemoryUsage,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.hostMetricsLayout.memoryUsageSection.sectionLabel',\n          {\n            defaultMessage: 'Memory Usage',\n          }\n        ),\n        requires: ['system.memory'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          stacked: true,\n          formatter: InfraFormatterType.bytes,\n          type: InfraMetricLayoutVisualizationType.area,\n          seriesOverrides: {\n            used: { color: theme.eui.euiColorVis2 },\n            free: { color: theme.eui.euiColorVis0 },\n            cache: { color: theme.eui.euiColorVis1 },\n          },\n        },\n      },\n      {\n        id: InfraMetric.hostNetworkTraffic,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.hostMetricsLayout.networkTrafficSection.sectionLabel',\n          {\n            defaultMessage: 'Network Traffic',\n          }\n        ),\n        requires: ['system.network'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.bits,\n          formatterTemplate: '{{value}}/s',\n          type: InfraMetricLayoutVisualizationType.area,\n          seriesOverrides: {\n            rx: {\n              color: theme.eui.euiColorVis1,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.hostMetricsLayout.networkTrafficSection.networkRxRateSeriesLabel',\n                {\n                  defaultMessage: 'in',\n                }\n              ),\n            },\n            tx: {\n              color: theme.eui.euiColorVis2,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.hostMetricsLayout.networkTrafficSection.networkTxRateSeriesLabel',\n                {\n                  defaultMessage: 'out',\n                }\n              ),\n            },\n          },\n        },\n      },\n    ],\n  },\n  {\n    id: 'k8sOverview',\n    label: 'Kubernetes',\n    sections: [\n      {\n        id: InfraMetric.hostK8sOverview,\n        linkToId: 'k8sOverview',\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.sectionLabel',\n          {\n            defaultMessage: 'Overview',\n          }\n        ),\n        requires: ['kubernetes.node'],\n        type: InfraMetricLayoutSectionType.gauges,\n        visConfig: {\n          seriesOverrides: {\n            cpucap: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.cpuUsageSeriesLabel',\n                {\n                  defaultMessage: 'CPU Capacity',\n                }\n              ),\n              color: 'secondary',\n              formatter: InfraFormatterType.percent,\n              gaugeMax: 1,\n            },\n            load: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.loadSeriesLabel',\n                {\n                  defaultMessage: 'Load (5m)',\n                }\n              ),\n              color: 'secondary',\n            },\n            memorycap: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.memoryUsageSeriesLabel',\n                {\n                  defaultMessage: 'Memory Capacity',\n                }\n              ),\n              color: 'secondary',\n              formatter: InfraFormatterType.percent,\n              gaugeMax: 1,\n            },\n            podcap: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.podCapacitySeriesLabel',\n                {\n                  defaultMessage: 'Pod Capacity',\n                }\n              ),\n              color: 'secondary',\n              formatter: InfraFormatterType.percent,\n              gaugeMax: 1,\n            },\n            diskcap: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.kubernetesMetricsLayout.overviewSection.diskCapacitySeriesLabel',\n                {\n                  defaultMessage: 'Disk Capacity',\n                }\n              ),\n              color: 'secondary',\n              formatter: InfraFormatterType.percent,\n              gaugeMax: 1,\n            },\n          },\n        },\n      },\n      {\n        id: InfraMetric.hostK8sCpuCap,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.kubernetesMetricsLayout.nodeCpuCapacitySection.sectionLabel',\n          {\n            defaultMessage: 'Node CPU Capacity',\n          }\n        ),\n        requires: ['kubernetes.node'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.abbreviatedNumber,\n          seriesOverrides: {\n            capacity: { color: theme.eui.euiColorVis2 },\n            used: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n          },\n        },\n      },\n      {\n        id: InfraMetric.hostK8sMemoryCap,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.kubernetesMetricsLayout.nodeMemoryCapacitySection.sectionLabel',\n          {\n            defaultMessage: 'Node Memory Capacity',\n          }\n        ),\n        requires: ['kubernetes.node'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.bytes,\n          seriesOverrides: {\n            capacity: { color: theme.eui.euiColorVis2 },\n            used: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n          },\n        },\n      },\n      {\n        id: InfraMetric.hostK8sDiskCap,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.kubernetesMetricsLayout.nodeDiskCapacitySection.sectionLabel',\n          {\n            defaultMessage: 'Node Disk Capacity',\n          }\n        ),\n        requires: ['kubernetes.node'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.bytes,\n          seriesOverrides: {\n            capacity: { color: theme.eui.euiColorVis2 },\n            used: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n          },\n        },\n      },\n      {\n        id: InfraMetric.hostK8sPodCap,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.kubernetesMetricsLayout.nodePodCapacitySection.sectionLabel',\n          {\n            defaultMessage: 'Node Pod Capacity',\n          }\n        ),\n        requires: ['kubernetes.node'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.number,\n          seriesOverrides: {\n            capacity: { color: theme.eui.euiColorVis2 },\n            used: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n          },\n        },\n      },\n    ],\n  },\n  ...nginxLayoutCreator(theme),\n];\n"]}]}