{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/WaterfallContainer/Waterfall/SpanFlyout/DatabaseContext.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/WaterfallContainer/Waterfall/SpanFlyout/DatabaseContext.tsx","mtime":1567631711862},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiSpacer, EuiTitle } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React, { Fragment } from 'react';\n// @ts-ignore\nimport sql from 'react-syntax-highlighter/dist/languages/sql';\nimport SyntaxHighlighter, { registerLanguage\n// @ts-ignore\n } from 'react-syntax-highlighter/dist/light';\n// @ts-ignore\nimport { xcode } from 'react-syntax-highlighter/dist/styles';\nimport styled from 'styled-components';\nimport { borderRadius, colors, fontFamilyCode, px, unit, units } from '../../../../../../../style/variables';\nregisterLanguage('sql', sql);\nvar DatabaseStatement = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  padding: \", \" \", \";\\n  background: \", \";\\n  border-radius: \", \";\\n  border: 1px solid \", \";\\n  font-family: \", \";\\n\"], [\"\\n  padding: \", \" \", \";\\n  background: \", \";\\n  border-radius: \", \";\\n  border: 1px solid \", \";\\n  font-family: \", \";\\n\"])), px(units.half), px(unit), colors.yellow, borderRadius, colors.gray4, fontFamilyCode);\nexport function DatabaseContext(_a) {\n    var dbContext = _a.dbContext;\n    if (!dbContext || !dbContext.statement) {\n        return null;\n    }\n    if (dbContext.type !== 'sql') {\n        return React.createElement(DatabaseStatement, null, dbContext.statement);\n    }\n    return (React.createElement(Fragment, null,\n        React.createElement(EuiTitle, { size: \"xs\" },\n            React.createElement(\"h3\", null, i18n.translate('xpack.apm.transactionDetails.spanFlyout.databaseStatementTitle', {\n                defaultMessage: 'Database statement'\n            }))),\n        React.createElement(EuiSpacer, { size: \"m\" }),\n        React.createElement(DatabaseStatement, null,\n            React.createElement(SyntaxHighlighter, { language: 'sql', style: xcode, customStyle: {\n                    color: null,\n                    background: null,\n                    padding: null,\n                    lineHeight: px(unit * 1.5),\n                    whiteSpace: 'pre-wrap',\n                    overflowX: 'scroll'\n                } }, dbContext.statement)),\n        React.createElement(EuiSpacer, { size: \"l\" })));\n}\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/WaterfallContainer/Waterfall/SpanFlyout/DatabaseContext.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionDetails/Transaction/WaterfallContainer/Waterfall/SpanFlyout/DatabaseContext.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACnD,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,aAAa;AACb,OAAO,GAAG,MAAM,6CAA6C,CAAC;AAC9D,OAAO,iBAAiB,EAAE,EACxB,gBAAgB;AAChB,aAAa;EACd,MAAM,qCAAqC,CAAC;AAC7C,aAAa;AACb,OAAO,EAAE,KAAK,EAAE,MAAM,sCAAsC,CAAC;AAC7D,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAEvC,OAAO,EACL,YAAY,EACZ,MAAM,EACN,cAAc,EACd,EAAE,EACF,IAAI,EACJ,KAAK,EACN,MAAM,sCAAsC,CAAC;AAE9C,gBAAgB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAE7B,IAAM,iBAAiB,GAAG,MAAM,CAAC,GAAG,oMAAA,eACvB,EAAc,GAAI,EAAQ,mBACvB,EAAa,sBACV,EAAY,yBACT,EAAY,oBACjB,EAAc,KAC9B,KALY,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAI,EAAE,CAAC,IAAI,CAAC,EACvB,MAAM,CAAC,MAAM,EACV,YAAY,EACT,MAAM,CAAC,KAAK,EACjB,cAAc,CAC9B,CAAC;AAMF,MAAM,UAAU,eAAe,CAAC,EAAoB;QAAlB,wBAAS;IACzC,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;QACtC,OAAO,IAAI,CAAC;KACb;IAED,IAAI,SAAS,CAAC,IAAI,KAAK,KAAK,EAAE;QAC5B,OAAO,oBAAC,iBAAiB,QAAE,SAAS,CAAC,SAAS,CAAqB,CAAC;KACrE;IAED,OAAO,CACL,oBAAC,QAAQ;QACP,oBAAC,QAAQ,IAAC,IAAI,EAAC,IAAI;YACjB,gCACG,IAAI,CAAC,SAAS,CACb,gEAAgE,EAChE;gBACE,cAAc,EAAE,oBAAoB;aACrC,CACF,CACE,CACI;QACX,oBAAC,SAAS,IAAC,IAAI,EAAC,GAAG,GAAG;QACtB,oBAAC,iBAAiB;YAChB,oBAAC,iBAAiB,IAChB,QAAQ,EAAE,KAAK,EACf,KAAK,EAAE,KAAK,EACZ,WAAW,EAAE;oBACX,KAAK,EAAE,IAAI;oBACX,UAAU,EAAE,IAAI;oBAChB,OAAO,EAAE,IAAI;oBACb,UAAU,EAAE,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC;oBAC1B,UAAU,EAAE,UAAU;oBACtB,SAAS,EAAE,QAAQ;iBACpB,IAEA,SAAS,CAAC,SAAS,CACF,CACF;QACpB,oBAAC,SAAS,IAAC,IAAI,EAAC,GAAG,GAAG,CACb,CACZ,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiSpacer, EuiTitle } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React, { Fragment } from 'react';\n// @ts-ignore\nimport sql from 'react-syntax-highlighter/dist/languages/sql';\nimport SyntaxHighlighter, {\n  registerLanguage\n  // @ts-ignore\n} from 'react-syntax-highlighter/dist/light';\n// @ts-ignore\nimport { xcode } from 'react-syntax-highlighter/dist/styles';\nimport styled from 'styled-components';\nimport { DbContext } from '../../../../../../../../typings/es_schemas/Span';\nimport {\n  borderRadius,\n  colors,\n  fontFamilyCode,\n  px,\n  unit,\n  units\n} from '../../../../../../../style/variables';\n\nregisterLanguage('sql', sql);\n\nconst DatabaseStatement = styled.div`\n  padding: ${px(units.half)} ${px(unit)};\n  background: ${colors.yellow};\n  border-radius: ${borderRadius};\n  border: 1px solid ${colors.gray4};\n  font-family: ${fontFamilyCode};\n`;\n\ninterface Props {\n  dbContext?: DbContext;\n}\n\nexport function DatabaseContext({ dbContext }: Props) {\n  if (!dbContext || !dbContext.statement) {\n    return null;\n  }\n\n  if (dbContext.type !== 'sql') {\n    return <DatabaseStatement>{dbContext.statement}</DatabaseStatement>;\n  }\n\n  return (\n    <Fragment>\n      <EuiTitle size=\"xs\">\n        <h3>\n          {i18n.translate(\n            'xpack.apm.transactionDetails.spanFlyout.databaseStatementTitle',\n            {\n              defaultMessage: 'Database statement'\n            }\n          )}\n        </h3>\n      </EuiTitle>\n      <EuiSpacer size=\"m\" />\n      <DatabaseStatement>\n        <SyntaxHighlighter\n          language={'sql'}\n          style={xcode}\n          customStyle={{\n            color: null,\n            background: null,\n            padding: null,\n            lineHeight: px(unit * 1.5),\n            whiteSpace: 'pre-wrap',\n            overflowX: 'scroll'\n          }}\n        >\n          {dbContext.statement}\n        </SyntaxHighlighter>\n      </DatabaseStatement>\n      <EuiSpacer size=\"l\" />\n    </Fragment>\n  );\n}\n"]}]}