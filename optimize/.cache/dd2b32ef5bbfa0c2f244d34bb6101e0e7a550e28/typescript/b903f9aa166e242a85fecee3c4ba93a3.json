{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/utils/formatters.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/utils/formatters.ts","mtime":1567631711873},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport numeral from '@elastic/numeral';\nimport { i18n } from '@kbn/i18n';\nimport { memoize } from 'lodash';\nimport { NOT_AVAILABLE_LABEL } from 'x-pack/plugins/apm/common/i18n';\nvar SECONDS_CUT_OFF = 10 * 1000000; // 10 seconds (in microseconds)\nvar MILLISECONDS_CUT_OFF = 10 * 1000; // 10 milliseconds (in microseconds)\nvar SPACE = ' ';\nexport function asSeconds(value, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.withUnit, withUnit = _c === void 0 ? true : _c, _d = _b.defaultValue, defaultValue = _d === void 0 ? NOT_AVAILABLE_LABEL : _d;\n    if (value == null) {\n        return defaultValue;\n    }\n    var secondsLabel = SPACE +\n        i18n.translate('xpack.apm.formatters.secondsTimeUnitLabel', {\n            defaultMessage: 's'\n        });\n    var formatted = asDecimal(value / 1000000);\n    return \"\" + formatted + (withUnit ? secondsLabel : '');\n}\nexport function asMillis(value, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.withUnit, withUnit = _c === void 0 ? true : _c, _d = _b.defaultValue, defaultValue = _d === void 0 ? NOT_AVAILABLE_LABEL : _d;\n    if (value == null) {\n        return defaultValue;\n    }\n    var millisLabel = SPACE +\n        i18n.translate('xpack.apm.formatters.millisTimeUnitLabel', {\n            defaultMessage: 'ms'\n        });\n    var formatted = asInteger(value / 1000);\n    return \"\" + formatted + (withUnit ? millisLabel : '');\n}\nexport function asMicros(value, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.withUnit, withUnit = _c === void 0 ? true : _c, _d = _b.defaultValue, defaultValue = _d === void 0 ? NOT_AVAILABLE_LABEL : _d;\n    if (value == null) {\n        return defaultValue;\n    }\n    var microsLabel = SPACE +\n        i18n.translate('xpack.apm.formatters.microsTimeUnitLabel', {\n            defaultMessage: 'μs'\n        });\n    var formatted = asInteger(value);\n    return \"\" + formatted + (withUnit ? microsLabel : '');\n}\nexport var getTimeFormatter = memoize(function (max) {\n    var unit = timeUnit(max);\n    switch (unit) {\n        case 's':\n            return asSeconds;\n        case 'ms':\n            return asMillis;\n        case 'us':\n            return asMicros;\n    }\n});\nexport function timeUnit(max) {\n    if (max > SECONDS_CUT_OFF) {\n        return 's';\n    }\n    else if (max > MILLISECONDS_CUT_OFF) {\n        return 'ms';\n    }\n    else {\n        return 'us';\n    }\n}\nexport function asTime(value, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.withUnit, withUnit = _c === void 0 ? true : _c, _d = _b.defaultValue, defaultValue = _d === void 0 ? NOT_AVAILABLE_LABEL : _d;\n    if (value == null) {\n        return defaultValue;\n    }\n    var formatter = getTimeFormatter(value);\n    return formatter(value, { withUnit: withUnit, defaultValue: defaultValue });\n}\nexport function asDecimal(value) {\n    return numeral(value).format('0,0.0');\n}\nexport function asInteger(value) {\n    return numeral(value).format('0,0');\n}\nexport function tpmUnit(type) {\n    return type === 'request'\n        ? i18n.translate('xpack.apm.formatters.requestsPerMinLabel', {\n            defaultMessage: 'rpm'\n        })\n        : i18n.translate('xpack.apm.formatters.transactionsPerMinLabel', {\n            defaultMessage: 'tpm'\n        });\n}\nexport function asPercent(numerator, denominator, fallbackResult) {\n    if (fallbackResult === void 0) { fallbackResult = ''; }\n    if (!denominator || isNaN(numerator)) {\n        return fallbackResult;\n    }\n    var decimal = numerator / denominator;\n    return numeral(decimal).format('0.0%');\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/utils/formatters.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/utils/formatters.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,OAAO,MAAM,kBAAkB,CAAC;AACvC,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjC,OAAO,EAAE,mBAAmB,EAAE,MAAM,gCAAgC,CAAC;AAErE,IAAM,eAAe,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC,+BAA+B;AACrE,IAAM,oBAAoB,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,oCAAoC;AAC5E,IAAM,KAAK,GAAG,GAAG,CAAC;AAalB,MAAM,UAAU,SAAS,CACvB,KAAqB,EACrB,EAA8E;QAA9E,4BAA8E,EAA5E,gBAAe,EAAf,oCAAe,EAAE,oBAAkC,EAAlC,uDAAkC;IAErD,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,YAAY,CAAC;KACrB;IACD,IAAM,YAAY,GAChB,KAAK;QACL,IAAI,CAAC,SAAS,CAAC,2CAA2C,EAAE;YAC1D,cAAc,EAAE,GAAG;SACpB,CAAC,CAAC;IACL,IAAM,SAAS,GAAG,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC;IAC7C,OAAO,KAAG,SAAS,IAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC;AACvD,CAAC;AAED,MAAM,UAAU,QAAQ,CACtB,KAAqB,EACrB,EAA8E;QAA9E,4BAA8E,EAA5E,gBAAe,EAAf,oCAAe,EAAE,oBAAkC,EAAlC,uDAAkC;IAErD,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,YAAY,CAAC;KACrB;IAED,IAAM,WAAW,GACf,KAAK;QACL,IAAI,CAAC,SAAS,CAAC,0CAA0C,EAAE;YACzD,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC;IACL,IAAM,SAAS,GAAG,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;IAC1C,OAAO,KAAG,SAAS,IAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC;AACtD,CAAC;AAED,MAAM,UAAU,QAAQ,CACtB,KAAqB,EACrB,EAA8E;QAA9E,4BAA8E,EAA5E,gBAAe,EAAf,oCAAe,EAAE,oBAAkC,EAAlC,uDAAkC;IAErD,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,YAAY,CAAC;KACrB;IAED,IAAM,WAAW,GACf,KAAK;QACL,IAAI,CAAC,SAAS,CAAC,0CAA0C,EAAE;YACzD,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC;IACL,IAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IACnC,OAAO,KAAG,SAAS,IAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC;AACtD,CAAC;AAMD,MAAM,CAAC,IAAM,gBAAgB,GAAkB,OAAO,CAAC,UAAC,GAAW;IACjE,IAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,EAAE;QACZ,KAAK,GAAG;YACN,OAAO,SAAS,CAAC;QACnB,KAAK,IAAI;YACP,OAAO,QAAQ,CAAC;QAClB,KAAK,IAAI;YACP,OAAO,QAAQ,CAAC;KACnB;AACH,CAAC,CAAC,CAAC;AAEH,MAAM,UAAU,QAAQ,CAAC,GAAW;IAClC,IAAI,GAAG,GAAG,eAAe,EAAE;QACzB,OAAO,GAAG,CAAC;KACZ;SAAM,IAAI,GAAG,GAAG,oBAAoB,EAAE;QACrC,OAAO,IAAI,CAAC;KACb;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAED,MAAM,UAAU,MAAM,CACpB,KAAqB,EACrB,EAA8E;QAA9E,4BAA8E,EAA5E,gBAAe,EAAf,oCAAe,EAAE,oBAAkC,EAAlC,uDAAkC;IAErD,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,YAAY,CAAC;KACrB;IACD,IAAM,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC1C,OAAO,SAAS,CAAC,KAAK,EAAE,EAAE,QAAQ,UAAA,EAAE,YAAY,cAAA,EAAE,CAAC,CAAC;AACtD,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,KAAa;IACrC,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,KAAa;IACrC,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACtC,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,IAAa;IACnC,OAAO,IAAI,KAAK,SAAS;QACvB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,0CAA0C,EAAE;YACzD,cAAc,EAAE,KAAK;SACtB,CAAC;QACJ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,8CAA8C,EAAE;YAC7D,cAAc,EAAE,KAAK;SACtB,CAAC,CAAC;AACT,CAAC;AAED,MAAM,UAAU,SAAS,CACvB,SAAiB,EACjB,WAA+B,EAC/B,cAAmB;IAAnB,+BAAA,EAAA,mBAAmB;IAEnB,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE;QACpC,OAAO,cAAc,CAAC;KACvB;IAED,IAAM,OAAO,GAAG,SAAS,GAAG,WAAW,CAAC;IACxC,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACzC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport numeral from '@elastic/numeral';\nimport { i18n } from '@kbn/i18n';\nimport { memoize } from 'lodash';\nimport { NOT_AVAILABLE_LABEL } from 'x-pack/plugins/apm/common/i18n';\n\nconst SECONDS_CUT_OFF = 10 * 1000000; // 10 seconds (in microseconds)\nconst MILLISECONDS_CUT_OFF = 10 * 1000; // 10 milliseconds (in microseconds)\nconst SPACE = ' ';\n\n/*\n * value: time in microseconds\n * withUnit: add unit suffix\n * defaultValue: value to use if the specified is null/undefined\n */\ntype FormatterValue = number | undefined | null;\ninterface FormatterOptions {\n  withUnit?: boolean;\n  defaultValue?: string;\n}\n\nexport function asSeconds(\n  value: FormatterValue,\n  { withUnit = true, defaultValue = NOT_AVAILABLE_LABEL }: FormatterOptions = {}\n) {\n  if (value == null) {\n    return defaultValue;\n  }\n  const secondsLabel =\n    SPACE +\n    i18n.translate('xpack.apm.formatters.secondsTimeUnitLabel', {\n      defaultMessage: 's'\n    });\n  const formatted = asDecimal(value / 1000000);\n  return `${formatted}${withUnit ? secondsLabel : ''}`;\n}\n\nexport function asMillis(\n  value: FormatterValue,\n  { withUnit = true, defaultValue = NOT_AVAILABLE_LABEL }: FormatterOptions = {}\n) {\n  if (value == null) {\n    return defaultValue;\n  }\n\n  const millisLabel =\n    SPACE +\n    i18n.translate('xpack.apm.formatters.millisTimeUnitLabel', {\n      defaultMessage: 'ms'\n    });\n  const formatted = asInteger(value / 1000);\n  return `${formatted}${withUnit ? millisLabel : ''}`;\n}\n\nexport function asMicros(\n  value: FormatterValue,\n  { withUnit = true, defaultValue = NOT_AVAILABLE_LABEL }: FormatterOptions = {}\n) {\n  if (value == null) {\n    return defaultValue;\n  }\n\n  const microsLabel =\n    SPACE +\n    i18n.translate('xpack.apm.formatters.microsTimeUnitLabel', {\n      defaultMessage: 'μs'\n    });\n  const formatted = asInteger(value);\n  return `${formatted}${withUnit ? microsLabel : ''}`;\n}\n\ntype TimeFormatter = (\n  max: number\n) => (value: FormatterValue, options: FormatterOptions) => string;\n\nexport const getTimeFormatter: TimeFormatter = memoize((max: number) => {\n  const unit = timeUnit(max);\n  switch (unit) {\n    case 's':\n      return asSeconds;\n    case 'ms':\n      return asMillis;\n    case 'us':\n      return asMicros;\n  }\n});\n\nexport function timeUnit(max: number) {\n  if (max > SECONDS_CUT_OFF) {\n    return 's';\n  } else if (max > MILLISECONDS_CUT_OFF) {\n    return 'ms';\n  } else {\n    return 'us';\n  }\n}\n\nexport function asTime(\n  value: FormatterValue,\n  { withUnit = true, defaultValue = NOT_AVAILABLE_LABEL }: FormatterOptions = {}\n) {\n  if (value == null) {\n    return defaultValue;\n  }\n  const formatter = getTimeFormatter(value);\n  return formatter(value, { withUnit, defaultValue });\n}\n\nexport function asDecimal(value: number) {\n  return numeral(value).format('0,0.0');\n}\n\nexport function asInteger(value: number) {\n  return numeral(value).format('0,0');\n}\n\nexport function tpmUnit(type?: string) {\n  return type === 'request'\n    ? i18n.translate('xpack.apm.formatters.requestsPerMinLabel', {\n        defaultMessage: 'rpm'\n      })\n    : i18n.translate('xpack.apm.formatters.transactionsPerMinLabel', {\n        defaultMessage: 'tpm'\n      });\n}\n\nexport function asPercent(\n  numerator: number,\n  denominator: number | undefined,\n  fallbackResult = ''\n) {\n  if (!denominator || isNaN(numerator)) {\n    return fallbackResult;\n  }\n\n  const decimal = numerator / denominator;\n  return numeral(decimal).format('0.0%');\n}\n"]}]}