{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/simple_privilege_form.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/simple_privilege_form.tsx","mtime":1567631712301},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { \n// @ts-ignore\nEuiDescribedFormGroup, EuiFormRow, } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport React, { Component, Fragment } from 'react';\nimport { isReservedRole } from '../../../../../../lib/role';\nimport { NO_PRIVILEGE_VALUE } from '../../../lib/constants';\nimport { copyRole } from '../../../lib/copy_role';\nimport { PrivilegeSelector } from './privilege_selector';\nvar SimplePrivilegeForm = /** @class */ (function (_super) {\n    tslib_1.__extends(SimplePrivilegeForm, _super);\n    function SimplePrivilegeForm() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onKibanaPrivilegeChange = function (privilege) {\n            var role = copyRole(_this.props.role);\n            // Remove base privilege value\n            role.kibana.global = [];\n            if (privilege !== NO_PRIVILEGE_VALUE) {\n                role.kibana.global = [privilege];\n            }\n            _this.props.onChange(role);\n        };\n        return _this;\n    }\n    SimplePrivilegeForm.prototype.render = function () {\n        var _a = this.props, kibanaAppPrivileges = _a.kibanaAppPrivileges, role = _a.role;\n        var assignedPrivileges = role.kibana;\n        var kibanaPrivilege = assignedPrivileges.global.length > 0\n            ? assignedPrivileges.global[0]\n            : NO_PRIVILEGE_VALUE;\n        var description = (React.createElement(\"p\", null,\n            React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.simplePrivilegeForm.specifyPrivilegeForRoleDescription\", defaultMessage: \"Specifies the Kibana privilege for this role.\" })));\n        return (React.createElement(Fragment, null,\n            React.createElement(EuiDescribedFormGroup, { title: React.createElement(\"h3\", null,\n                    React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.simplePrivilegeForm.kibanaPrivilegesTitle\", defaultMessage: \"Kibana privileges\" })), description: description },\n                React.createElement(EuiFormRow, { hasEmptyLabelSpace: true },\n                    React.createElement(PrivilegeSelector, { \"data-test-subj\": 'kibanaPrivilege', availablePrivileges: kibanaAppPrivileges, value: kibanaPrivilege, disabled: isReservedRole(role), allowNone: true, onChange: this.onKibanaPrivilegeChange })))));\n    };\n    return SimplePrivilegeForm;\n}(Component));\nexport { SimplePrivilegeForm };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/simple_privilege_form.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/privileges/kibana/simple_privilege_form.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO;AACL,aAAa;AACb,qBAAqB,EACrB,UAAU,GACX,MAAM,cAAc,CAAC;AACtB,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAGnD,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC5D,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAClD,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AASzD;IAAyC,+CAAoB;IAA7D;QAAA,qEA4DC;QAZQ,6BAAuB,GAAG,UAAC,SAA0B;YAC1D,IAAM,IAAI,GAAG,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAEvC,8BAA8B;YAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;YAExB,IAAI,SAAS,KAAK,kBAAkB,EAAE;gBACpC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC;aAClC;YAED,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC;;IACJ,CAAC;IA3DQ,oCAAM,GAAb;QACQ,IAAA,eAA0C,EAAxC,4CAAmB,EAAE,cAAI,CAAgB;QAEjD,IAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC;QAEvC,IAAM,eAAe,GACnB,kBAAkB,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;YAClC,CAAC,CAAE,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAqB;YACnD,CAAC,CAAC,kBAAkB,CAAC;QAEzB,IAAM,WAAW,GAAG,CAClB;YACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,4FAA4F,EAC/F,cAAc,EAAC,+CAA+C,GAC9D,CACA,CACL,CAAC;QAEF,OAAO,CACL,oBAAC,QAAQ;YACP,oBAAC,qBAAqB,IACpB,KAAK,EACH;oBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,+EAA+E,EAClF,cAAc,EAAC,mBAAmB,GAClC,CACC,EAEP,WAAW,EAAE,WAAW;gBAExB,oBAAC,UAAU,IAAC,kBAAkB;oBAC5B,oBAAC,iBAAiB,sBACA,iBAAiB,EACjC,mBAAmB,EAAE,mBAAmB,EACxC,KAAK,EAAE,eAAe,EACtB,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,EAC9B,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,uBAAuB,GACtC,CACS,CACS,CACf,CACZ,CAAC;IACJ,CAAC;IAcH,0BAAC;AAAD,CAAC,AA5DD,CAAyC,SAAS,GA4DjD","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  // @ts-ignore\n  EuiDescribedFormGroup,\n  EuiFormRow,\n} from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport React, { Component, Fragment } from 'react';\nimport { KibanaPrivilege } from '../../../../../../../common/model/kibana_privilege';\nimport { Role } from '../../../../../../../common/model/role';\nimport { isReservedRole } from '../../../../../../lib/role';\nimport { NO_PRIVILEGE_VALUE } from '../../../lib/constants';\nimport { copyRole } from '../../../lib/copy_role';\nimport { PrivilegeSelector } from './privilege_selector';\n\ninterface Props {\n  kibanaAppPrivileges: KibanaPrivilege[];\n  role: Role;\n  onChange: (role: Role) => void;\n  editable: boolean;\n}\n\nexport class SimplePrivilegeForm extends Component<Props, {}> {\n  public render() {\n    const { kibanaAppPrivileges, role } = this.props;\n\n    const assignedPrivileges = role.kibana;\n\n    const kibanaPrivilege: KibanaPrivilege =\n      assignedPrivileges.global.length > 0\n        ? (assignedPrivileges.global[0] as KibanaPrivilege)\n        : NO_PRIVILEGE_VALUE;\n\n    const description = (\n      <p>\n        <FormattedMessage\n          id=\"xpack.security.management.editRoles.simplePrivilegeForm.specifyPrivilegeForRoleDescription\"\n          defaultMessage=\"Specifies the Kibana privilege for this role.\"\n        />\n      </p>\n    );\n\n    return (\n      <Fragment>\n        <EuiDescribedFormGroup\n          title={\n            <h3>\n              <FormattedMessage\n                id=\"xpack.security.management.editRoles.simplePrivilegeForm.kibanaPrivilegesTitle\"\n                defaultMessage=\"Kibana privileges\"\n              />\n            </h3>\n          }\n          description={description}\n        >\n          <EuiFormRow hasEmptyLabelSpace>\n            <PrivilegeSelector\n              data-test-subj={'kibanaPrivilege'}\n              availablePrivileges={kibanaAppPrivileges}\n              value={kibanaPrivilege}\n              disabled={isReservedRole(role)}\n              allowNone={true}\n              onChange={this.onKibanaPrivilegeChange}\n            />\n          </EuiFormRow>\n        </EuiDescribedFormGroup>\n      </Fragment>\n    );\n  }\n\n  public onKibanaPrivilegeChange = (privilege: KibanaPrivilege) => {\n    const role = copyRole(this.props.role);\n\n    // Remove base privilege value\n    role.kibana.global = [];\n\n    if (privilege !== NO_PRIVILEGE_VALUE) {\n      role.kibana.global = [privilege];\n    }\n\n    this.props.onChange(role);\n  };\n}\n"]}]}