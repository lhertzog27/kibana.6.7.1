{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/logs/page_content.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/logs/page_content.tsx","mtime":1567631711986},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { AutoSizer } from '../../components/auto_sizer';\nimport { LogMinimap } from '../../components/logging/log_minimap';\nimport { ScrollableLogTextStreamView } from '../../components/logging/log_text_stream';\nimport { PageContent } from '../../components/page';\nimport { WithLogMinimap } from '../../containers/logs/with_log_minimap';\nimport { WithLogPosition } from '../../containers/logs/with_log_position';\nimport { WithLogTextview } from '../../containers/logs/with_log_textview';\nimport { WithStreamItems } from '../../containers/logs/with_stream_items';\nimport { WithSummary } from '../../containers/logs/with_summary';\nexport var LogsPageContent = function (_a) {\n    var showFlyout = _a.showFlyout, setFlyoutItem = _a.setFlyoutItem;\n    return (React.createElement(PageContent, null,\n        React.createElement(AutoSizer, { content: true }, function (_a) {\n            var measureRef = _a.measureRef, _b = _a.content, _c = _b.width, width = _c === void 0 ? 0 : _c, _d = _b.height, height = _d === void 0 ? 0 : _d;\n            return (React.createElement(LogPageEventStreamColumn, { innerRef: measureRef },\n                React.createElement(WithLogTextview, null, function (_a) {\n                    var textScale = _a.textScale, wrap = _a.wrap;\n                    return (React.createElement(WithLogPosition, null, function (_a) {\n                        var isAutoReloading = _a.isAutoReloading, jumpToTargetPosition = _a.jumpToTargetPosition, reportVisiblePositions = _a.reportVisiblePositions, targetPosition = _a.targetPosition;\n                        return (React.createElement(WithStreamItems, null, function (_a) {\n                            var hasMoreAfterEnd = _a.hasMoreAfterEnd, hasMoreBeforeStart = _a.hasMoreBeforeStart, isLoadingMore = _a.isLoadingMore, isReloading = _a.isReloading, items = _a.items, lastLoadedTime = _a.lastLoadedTime, loadNewerEntries = _a.loadNewerEntries;\n                            return (React.createElement(ScrollableLogTextStreamView, { hasMoreAfterEnd: hasMoreAfterEnd, hasMoreBeforeStart: hasMoreBeforeStart, height: height, isLoadingMore: isLoadingMore, isReloading: isReloading, isStreaming: isAutoReloading, items: items, jumpToTarget: jumpToTargetPosition, lastLoadedTime: lastLoadedTime, loadNewerItems: loadNewerEntries, reportVisibleInterval: reportVisiblePositions, scale: textScale, target: targetPosition, width: width, wrap: wrap, setFlyoutItem: setFlyoutItem, showFlyout: showFlyout }));\n                        }));\n                    }));\n                })));\n        }),\n        React.createElement(AutoSizer, { content: true }, function (_a) {\n            var measureRef = _a.measureRef, _b = _a.content, _c = _b.width, width = _c === void 0 ? 0 : _c, _d = _b.height, height = _d === void 0 ? 0 : _d;\n            return (React.createElement(LogPageMinimapColumn, { innerRef: measureRef },\n                React.createElement(WithLogMinimap, null, function (_a) {\n                    var intervalSize = _a.intervalSize;\n                    return (React.createElement(WithSummary, null, function (_a) {\n                        var buckets = _a.buckets;\n                        return (React.createElement(WithLogPosition, null, function (_a) {\n                            var jumpToTargetPosition = _a.jumpToTargetPosition, reportVisibleSummary = _a.reportVisibleSummary, visibleMidpointTime = _a.visibleMidpointTime, visibleTimeInterval = _a.visibleTimeInterval;\n                            return (React.createElement(LogMinimap, { height: height, width: width, highlightedInterval: visibleTimeInterval, intervalSize: intervalSize, jumpToTarget: jumpToTargetPosition, reportVisibleInterval: reportVisibleSummary, summaryBuckets: buckets, target: visibleMidpointTime }));\n                        }));\n                    }));\n                })));\n        })));\n};\nvar LogPageEventStreamColumn = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  flex: 1 0 0%;\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n\"], [\"\\n  flex: 1 0 0%;\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n\"])));\nvar LogPageMinimapColumn = styled.div(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  flex: 1 0 0%;\\n  overflow: hidden;\\n  min-width: 100px;\\n  max-width: 100px;\\n  display: flex;\\n  flex-direction: column;\\n\"], [\"\\n  flex: 1 0 0%;\\n  overflow: hidden;\\n  min-width: 100px;\\n  max-width: 100px;\\n  display: flex;\\n  flex-direction: column;\\n\"])));\nvar templateObject_1, templateObject_2;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/logs/page_content.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/logs/page_content.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { AutoSizer } from '../../components/auto_sizer';\nimport { LogMinimap } from '../../components/logging/log_minimap';\nimport { ScrollableLogTextStreamView } from '../../components/logging/log_text_stream';\nimport { PageContent } from '../../components/page';\nimport { WithLogMinimap } from '../../containers/logs/with_log_minimap';\nimport { WithLogPosition } from '../../containers/logs/with_log_position';\nimport { WithLogTextview } from '../../containers/logs/with_log_textview';\nimport { WithStreamItems } from '../../containers/logs/with_stream_items';\nimport { WithSummary } from '../../containers/logs/with_summary';\n\ninterface Props {\n  setFlyoutItem: (id: string) => void;\n  showFlyout: () => void;\n}\n\nexport const LogsPageContent: React.SFC<Props> = ({ showFlyout, setFlyoutItem }) => (\n  <PageContent>\n    <AutoSizer content>\n      {({ measureRef, content: { width = 0, height = 0 } }) => (\n        <LogPageEventStreamColumn innerRef={measureRef}>\n          <WithLogTextview>\n            {({ textScale, wrap }) => (\n              <WithLogPosition>\n                {({\n                  isAutoReloading,\n                  jumpToTargetPosition,\n                  reportVisiblePositions,\n                  targetPosition,\n                }) => (\n                  <WithStreamItems>\n                    {({\n                      hasMoreAfterEnd,\n                      hasMoreBeforeStart,\n                      isLoadingMore,\n                      isReloading,\n                      items,\n                      lastLoadedTime,\n                      loadNewerEntries,\n                    }) => (\n                      <ScrollableLogTextStreamView\n                        hasMoreAfterEnd={hasMoreAfterEnd}\n                        hasMoreBeforeStart={hasMoreBeforeStart}\n                        height={height}\n                        isLoadingMore={isLoadingMore}\n                        isReloading={isReloading}\n                        isStreaming={isAutoReloading}\n                        items={items}\n                        jumpToTarget={jumpToTargetPosition}\n                        lastLoadedTime={lastLoadedTime}\n                        loadNewerItems={loadNewerEntries}\n                        reportVisibleInterval={reportVisiblePositions}\n                        scale={textScale}\n                        target={targetPosition}\n                        width={width}\n                        wrap={wrap}\n                        setFlyoutItem={setFlyoutItem}\n                        showFlyout={showFlyout}\n                      />\n                    )}\n                  </WithStreamItems>\n                )}\n              </WithLogPosition>\n            )}\n          </WithLogTextview>\n        </LogPageEventStreamColumn>\n      )}\n    </AutoSizer>\n    <AutoSizer content>\n      {({ measureRef, content: { width = 0, height = 0 } }) => {\n        return (\n          <LogPageMinimapColumn innerRef={measureRef}>\n            <WithLogMinimap>\n              {({ intervalSize }) => (\n                <WithSummary>\n                  {({ buckets }) => (\n                    <WithLogPosition>\n                      {({\n                        jumpToTargetPosition,\n                        reportVisibleSummary,\n                        visibleMidpointTime,\n                        visibleTimeInterval,\n                      }) => (\n                        <LogMinimap\n                          height={height}\n                          width={width}\n                          highlightedInterval={visibleTimeInterval}\n                          intervalSize={intervalSize}\n                          jumpToTarget={jumpToTargetPosition}\n                          reportVisibleInterval={reportVisibleSummary}\n                          summaryBuckets={buckets}\n                          target={visibleMidpointTime}\n                        />\n                      )}\n                    </WithLogPosition>\n                  )}\n                </WithSummary>\n              )}\n            </WithLogMinimap>\n          </LogPageMinimapColumn>\n        );\n      }}\n    </AutoSizer>\n  </PageContent>\n);\n\nconst LogPageEventStreamColumn = styled.div`\n  flex: 1 0 0%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LogPageMinimapColumn = styled.div`\n  flex: 1 0 0%;\n  overflow: hidden;\n  min-width: 100px;\n  max-width: 100px;\n  display: flex;\n  flex-direction: column;\n`;\n"]}]}