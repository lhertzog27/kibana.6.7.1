{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/transaction_groups.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/transaction_groups.ts","mtime":1567631711870},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { callApi } from '../callApi';\nimport { addVersion, getEncodedEsQuery } from './apm';\nexport function loadTransactionList(_a) {\n    var serviceName = _a.serviceName, start = _a.start, end = _a.end, kuery = _a.kuery, _b = _a.transactionType, transactionType = _b === void 0 ? 'request' : _b;\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var groups, _c, _d, _e;\n        return tslib_1.__generator(this, function (_f) {\n            switch (_f.label) {\n                case 0:\n                    _c = callApi;\n                    _d = {\n                        pathname: \"/api/apm/services/\" + serviceName + \"/transaction_groups/\" + transactionType\n                    };\n                    _e = {\n                        start: start,\n                        end: end\n                    };\n                    return [4 /*yield*/, getEncodedEsQuery(kuery)];\n                case 1: return [4 /*yield*/, _c.apply(void 0, [(_d.query = (_e.esFilterQuery = _f.sent(),\n                            _e),\n                            _d)])];\n                case 2:\n                    groups = _f.sent();\n                    return [2 /*return*/, groups.map(function (group) {\n                            group.sample = addVersion(group.sample);\n                            return group;\n                        })];\n            }\n        });\n    });\n}\nexport function loadTransactionDistribution(_a) {\n    var serviceName = _a.serviceName, start = _a.start, end = _a.end, transactionName = _a.transactionName, _b = _a.transactionType, transactionType = _b === void 0 ? 'request' : _b, transactionId = _a.transactionId, traceId = _a.traceId, kuery = _a.kuery;\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var _c, _d, _e;\n        return tslib_1.__generator(this, function (_f) {\n            switch (_f.label) {\n                case 0:\n                    _c = callApi;\n                    _d = {\n                        pathname: \"/api/apm/services/\" + serviceName + \"/transaction_groups/\" + transactionType + \"/\" + encodeURIComponent(transactionName) + \"/distribution\"\n                    };\n                    _e = {\n                        start: start,\n                        end: end,\n                        transactionId: transactionId,\n                        traceId: traceId\n                    };\n                    return [4 /*yield*/, getEncodedEsQuery(kuery)];\n                case 1: return [2 /*return*/, _c.apply(void 0, [(_d.query = (_e.esFilterQuery = _f.sent(),\n                            _e),\n                            _d)])];\n            }\n        });\n    });\n}\nexport function loadDetailsCharts(_a) {\n    var serviceName = _a.serviceName, start = _a.start, end = _a.end, kuery = _a.kuery, _b = _a.transactionType, transactionType = _b === void 0 ? 'request' : _b, transactionName = _a.transactionName;\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var _c, _d, _e;\n        return tslib_1.__generator(this, function (_f) {\n            switch (_f.label) {\n                case 0:\n                    _c = callApi;\n                    _d = {\n                        pathname: \"/api/apm/services/\" + serviceName + \"/transaction_groups/\" + transactionType + \"/\" + encodeURIComponent(transactionName) + \"/charts\"\n                    };\n                    _e = {\n                        start: start,\n                        end: end\n                    };\n                    return [4 /*yield*/, getEncodedEsQuery(kuery)];\n                case 1: return [2 /*return*/, _c.apply(void 0, [(_d.query = (_e.esFilterQuery = _f.sent(),\n                            _e),\n                            _d)])];\n            }\n        });\n    });\n}\nexport function loadOverviewCharts(_a) {\n    var serviceName = _a.serviceName, start = _a.start, end = _a.end, kuery = _a.kuery, _b = _a.transactionType, transactionType = _b === void 0 ? 'request' : _b;\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var _c, _d, _e;\n        return tslib_1.__generator(this, function (_f) {\n            switch (_f.label) {\n                case 0:\n                    _c = callApi;\n                    _d = {\n                        pathname: \"/api/apm/services/\" + serviceName + \"/transaction_groups/\" + transactionType + \"/charts\"\n                    };\n                    _e = {\n                        start: start,\n                        end: end\n                    };\n                    return [4 /*yield*/, getEncodedEsQuery(kuery)];\n                case 1: return [2 /*return*/, _c.apply(void 0, [(_d.query = (_e.esFilterQuery = _f.sent(),\n                            _e),\n                            _d)])];\n            }\n        });\n    });\n}\nexport function loadOverviewChartsForAllTypes(_a) {\n    var serviceName = _a.serviceName, start = _a.start, end = _a.end, kuery = _a.kuery;\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var _b, _c, _d;\n        return tslib_1.__generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    _b = callApi;\n                    _c = {\n                        pathname: \"/api/apm/services/\" + serviceName + \"/transaction_groups/charts\"\n                    };\n                    _d = {\n                        start: start,\n                        end: end\n                    };\n                    return [4 /*yield*/, getEncodedEsQuery(kuery)];\n                case 1: return [2 /*return*/, _b.apply(void 0, [(_c.query = (_d.esFilterQuery = _e.sent(),\n                            _d),\n                            _c)])];\n            }\n        });\n    });\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/transaction_groups.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/services/rest/apm/transaction_groups.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAMH,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,OAAO,CAAC;AAEtD,MAAM,UAAgB,mBAAmB,CAAC,EAM7B;QALX,4BAAW,EACX,gBAAK,EACL,YAAG,EACH,gBAAK,EACL,uBAA2B,EAA3B,gDAA2B;;;;;;oBAEN,KAAA,OAAO,CAAA;;wBAC1B,QAAQ,EAAE,uBAAqB,WAAW,4BAAuB,eAAiB;;;wBAEhF,KAAK,OAAA;wBACL,GAAG,KAAA;;oBACY,qBAAM,iBAAiB,CAAC,KAAK,CAAC,EAAA;wBALlC,qBAAM,mBAEnB,QAAK,IAGH,gBAAa,GAAE,SAA8B;+BAC9C;iCACD,EAAA;;oBAPI,MAAM,GAAG,SAOb;oBAEF,sBAAO,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK;4BACrB,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;4BACxC,OAAO,KAAK,CAAC;wBACf,CAAC,CAAC,EAAC;;;;CACJ;AAED,MAAM,UAAgB,2BAA2B,CAAC,EAS3B;QARrB,4BAAW,EACX,gBAAK,EACL,YAAG,EACH,oCAAe,EACf,uBAA2B,EAA3B,gDAA2B,EAC3B,gCAAa,EACb,oBAAO,EACP,gBAAK;;;;;;oBAEE,KAAA,OAAO,CAAA;;wBACZ,QAAQ,EAAE,uBAAqB,WAAW,4BAAuB,eAAe,SAAI,kBAAkB,CACpG,eAAe,CAChB,kBAAe;;;wBAEd,KAAK,OAAA;wBACL,GAAG,KAAA;wBACH,aAAa,eAAA;wBACb,OAAO,SAAA;;oBACQ,qBAAM,iBAAiB,CAAC,KAAK,CAAC,EAAA;wBATjD,sBAAO,mBAIL,QAAK,IAKH,gBAAa,GAAE,SAA8B;+BAC9C;iCACD,EAAC;;;;CACJ;AAED,MAAM,UAAgB,iBAAiB,CAAC,EAOjB;QANrB,4BAAW,EACX,gBAAK,EACL,YAAG,EACH,gBAAK,EACL,uBAA2B,EAA3B,gDAA2B,EAC3B,oCAAe;;;;;;oBAER,KAAA,OAAO,CAAA;;wBACZ,QAAQ,EAAE,uBAAqB,WAAW,4BAAuB,eAAe,SAAI,kBAAkB,CACpG,eAAe,CAChB,YAAS;;;wBAER,KAAK,OAAA;wBACL,GAAG,KAAA;;oBACY,qBAAM,iBAAiB,CAAC,KAAK,CAAC,EAAA;wBAPjD,sBAAO,mBAIL,QAAK,IAGH,gBAAa,GAAE,SAA8B;+BAC9C;iCACD,EAAC;;;;CACJ;AAED,MAAM,UAAgB,kBAAkB,CAAC,EAM5B;QALX,4BAAW,EACX,gBAAK,EACL,YAAG,EACH,gBAAK,EACL,uBAA2B,EAA3B,gDAA2B;;;;;;oBAEpB,KAAA,OAAO,CAAA;;wBACZ,QAAQ,EAAE,uBAAqB,WAAW,4BAAuB,eAAe,YAAS;;;wBAEvF,KAAK,OAAA;wBACL,GAAG,KAAA;;oBACY,qBAAM,iBAAiB,CAAC,KAAK,CAAC,EAAA;wBALjD,sBAAO,mBAEL,QAAK,IAGH,gBAAa,GAAE,SAA8B;+BAC9C;iCACD,EAAC;;;;CACJ;AAED,MAAM,UAAgB,6BAA6B,CAAC,EAKvC;QAJX,4BAAW,EACX,gBAAK,EACL,YAAG,EACH,gBAAK;;;;;;oBAEE,KAAA,OAAO,CAAA;;wBACZ,QAAQ,EAAE,uBAAqB,WAAW,+BAA4B;;;wBAEpE,KAAK,OAAA;wBACL,GAAG,KAAA;;oBACY,qBAAM,iBAAiB,CAAC,KAAK,CAAC,EAAA;wBALjD,sBAAO,mBAEL,QAAK,IAGH,gBAAa,GAAE,SAA8B;+BAC9C;iCACD,EAAC;;;;CACJ","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { TimeSeriesAPIResponse } from 'x-pack/plugins/apm/server/lib/transactions/charts';\nimport { ITransactionDistributionAPIResponse } from 'x-pack/plugins/apm/server/lib/transactions/distribution';\nimport { TransactionListAPIResponse } from 'x-pack/plugins/apm/server/lib/transactions/get_top_transactions';\nimport { IUrlParams } from '../../../store/urlParams';\nimport { callApi } from '../callApi';\nimport { addVersion, getEncodedEsQuery } from './apm';\n\nexport async function loadTransactionList({\n  serviceName,\n  start,\n  end,\n  kuery,\n  transactionType = 'request'\n}: IUrlParams) {\n  const groups = await callApi<TransactionListAPIResponse>({\n    pathname: `/api/apm/services/${serviceName}/transaction_groups/${transactionType}`,\n    query: {\n      start,\n      end,\n      esFilterQuery: await getEncodedEsQuery(kuery)\n    }\n  });\n\n  return groups.map(group => {\n    group.sample = addVersion(group.sample);\n    return group;\n  });\n}\n\nexport async function loadTransactionDistribution({\n  serviceName,\n  start,\n  end,\n  transactionName,\n  transactionType = 'request',\n  transactionId,\n  traceId,\n  kuery\n}: Required<IUrlParams>) {\n  return callApi<ITransactionDistributionAPIResponse>({\n    pathname: `/api/apm/services/${serviceName}/transaction_groups/${transactionType}/${encodeURIComponent(\n      transactionName\n    )}/distribution`,\n    query: {\n      start,\n      end,\n      transactionId,\n      traceId,\n      esFilterQuery: await getEncodedEsQuery(kuery)\n    }\n  });\n}\n\nexport async function loadDetailsCharts({\n  serviceName,\n  start,\n  end,\n  kuery,\n  transactionType = 'request',\n  transactionName\n}: Required<IUrlParams>) {\n  return callApi<TimeSeriesAPIResponse>({\n    pathname: `/api/apm/services/${serviceName}/transaction_groups/${transactionType}/${encodeURIComponent(\n      transactionName\n    )}/charts`,\n    query: {\n      start,\n      end,\n      esFilterQuery: await getEncodedEsQuery(kuery)\n    }\n  });\n}\n\nexport async function loadOverviewCharts({\n  serviceName,\n  start,\n  end,\n  kuery,\n  transactionType = 'request'\n}: IUrlParams) {\n  return callApi<TimeSeriesAPIResponse>({\n    pathname: `/api/apm/services/${serviceName}/transaction_groups/${transactionType}/charts`,\n    query: {\n      start,\n      end,\n      esFilterQuery: await getEncodedEsQuery(kuery)\n    }\n  });\n}\n\nexport async function loadOverviewChartsForAllTypes({\n  serviceName,\n  start,\n  end,\n  kuery\n}: IUrlParams) {\n  return callApi<TimeSeriesAPIResponse>({\n    pathname: `/api/apm/services/${serviceName}/transaction_groups/charts`,\n    query: {\n      start,\n      end,\n      esFilterQuery: await getEncodedEsQuery(kuery)\n    }\n  });\n}\n"]}]}