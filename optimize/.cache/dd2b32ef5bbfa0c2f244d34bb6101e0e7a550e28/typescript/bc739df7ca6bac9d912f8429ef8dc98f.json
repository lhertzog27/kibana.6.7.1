{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/waffle_time_controls.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/waffle_time_controls.tsx","mtime":1567631711983},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButtonEmpty, EuiDatePicker, EuiFormControlLayout } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport moment from 'moment-timezone';\nimport React from 'react';\nvar WaffleTimeControls = /** @class */ (function (_super) {\n    tslib_1.__extends(WaffleTimeControls, _super);\n    function WaffleTimeControls() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleChangeDate = function (time) {\n            var onChangeTime = _this.props.onChangeTime;\n            if (onChangeTime && time) {\n                onChangeTime(time.valueOf());\n            }\n        };\n        _this.startLiveStreaming = function () {\n            var startLiveStreaming = _this.props.startLiveStreaming;\n            if (startLiveStreaming) {\n                startLiveStreaming();\n            }\n        };\n        _this.stopLiveStreaming = function () {\n            var stopLiveStreaming = _this.props.stopLiveStreaming;\n            if (stopLiveStreaming) {\n                stopLiveStreaming();\n            }\n        };\n        return _this;\n    }\n    WaffleTimeControls.prototype.render = function () {\n        var _a = this.props, currentTime = _a.currentTime, isLiveStreaming = _a.isLiveStreaming;\n        var currentMoment = moment(currentTime);\n        var liveStreamingButton = isLiveStreaming ? (React.createElement(EuiButtonEmpty, { color: \"primary\", iconSide: \"left\", iconType: \"pause\", onClick: this.stopLiveStreaming },\n            React.createElement(FormattedMessage, { id: \"xpack.infra.waffleTime.stopRefreshingButtonLabel\", defaultMessage: \"Stop refreshing\" }))) : (React.createElement(EuiButtonEmpty, { iconSide: \"left\", iconType: \"play\", onClick: this.startLiveStreaming },\n            React.createElement(FormattedMessage, { id: \"xpack.infra.waffleTime.autoRefreshButtonLabel\", defaultMessage: \"Auto-refresh\" })));\n        return (React.createElement(EuiFormControlLayout, { append: liveStreamingButton, \"data-test-subj\": \"waffleDatePicker\" },\n            React.createElement(EuiDatePicker, { className: \"euiFieldText--inGroup\", dateFormat: \"L LTS\", disabled: isLiveStreaming, injectTimes: currentMoment ? [currentMoment] : [], isLoading: isLiveStreaming, onChange: this.handleChangeDate, popperPlacement: \"top-end\", selected: currentMoment, shouldCloseOnSelect: true, showTimeSelect: true, timeFormat: \"LT\" })));\n    };\n    return WaffleTimeControls;\n}(React.Component));\nexport { WaffleTimeControls };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/waffle_time_controls.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/waffle/waffle_time_controls.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,cAAc,EAAE,aAAa,EAAE,oBAAoB,EAAE,MAAM,cAAc,CAAC;AACnF,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,MAAkB,MAAM,iBAAiB,CAAC;AACjD,OAAO,KAAK,MAAM,OAAO,CAAC;AAU1B;IAAwC,8CAAwC;IAAhF;QAAA,qEAqEC;QAvBS,sBAAgB,GAAG,UAAC,IAAmB;YACrC,IAAA,uCAAY,CAAgB;YAEpC,IAAI,YAAY,IAAI,IAAI,EAAE;gBACxB,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC;QAEM,wBAAkB,GAAG;YACnB,IAAA,mDAAkB,CAAgB;YAE1C,IAAI,kBAAkB,EAAE;gBACtB,kBAAkB,EAAE,CAAC;aACtB;QACH,CAAC,CAAC;QAEM,uBAAiB,GAAG;YAClB,IAAA,iDAAiB,CAAgB;YAEzC,IAAI,iBAAiB,EAAE;gBACrB,iBAAiB,EAAE,CAAC;aACrB;QACH,CAAC,CAAC;;IACJ,CAAC;IApEQ,mCAAM,GAAb;QACQ,IAAA,eAA6C,EAA3C,4BAAW,EAAE,oCAAe,CAAgB;QAEpD,IAAM,aAAa,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QAE1C,IAAM,mBAAmB,GAAG,eAAe,CAAC,CAAC,CAAC,CAC5C,oBAAC,cAAc,IACb,KAAK,EAAC,SAAS,EACf,QAAQ,EAAC,MAAM,EACf,QAAQ,EAAC,OAAO,EAChB,OAAO,EAAE,IAAI,CAAC,iBAAiB;YAE/B,oBAAC,gBAAgB,IACf,EAAE,EAAC,kDAAkD,EACrD,cAAc,EAAC,iBAAiB,GAChC,CACa,CAClB,CAAC,CAAC,CAAC,CACF,oBAAC,cAAc,IAAC,QAAQ,EAAC,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB;YAC9E,oBAAC,gBAAgB,IACf,EAAE,EAAC,+CAA+C,EAClD,cAAc,EAAC,cAAc,GAC7B,CACa,CAClB,CAAC;QAEF,OAAO,CACL,oBAAC,oBAAoB,IAAC,MAAM,EAAE,mBAAmB,oBAAiB,kBAAkB;YAClF,oBAAC,aAAa,IACZ,SAAS,EAAC,uBAAuB,EACjC,UAAU,EAAC,OAAO,EAClB,QAAQ,EAAE,eAAe,EACzB,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,EACjD,SAAS,EAAE,eAAe,EAC1B,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAC/B,eAAe,EAAC,SAAS,EACzB,QAAQ,EAAE,aAAa,EACvB,mBAAmB,QACnB,cAAc,QACd,UAAU,EAAC,IAAI,GACf,CACmB,CACxB,CAAC;IACJ,CAAC;IAyBH,yBAAC;AAAD,CAAC,AArED,CAAwC,KAAK,CAAC,SAAS,GAqEtD","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiButtonEmpty, EuiDatePicker, EuiFormControlLayout } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport moment, { Moment } from 'moment-timezone';\nimport React from 'react';\n\ninterface WaffleTimeControlsProps {\n  currentTime: number;\n  isLiveStreaming?: boolean;\n  onChangeTime?: (time: number) => void;\n  startLiveStreaming?: () => void;\n  stopLiveStreaming?: () => void;\n}\n\nexport class WaffleTimeControls extends React.Component<WaffleTimeControlsProps> {\n  public render() {\n    const { currentTime, isLiveStreaming } = this.props;\n\n    const currentMoment = moment(currentTime);\n\n    const liveStreamingButton = isLiveStreaming ? (\n      <EuiButtonEmpty\n        color=\"primary\"\n        iconSide=\"left\"\n        iconType=\"pause\"\n        onClick={this.stopLiveStreaming}\n      >\n        <FormattedMessage\n          id=\"xpack.infra.waffleTime.stopRefreshingButtonLabel\"\n          defaultMessage=\"Stop refreshing\"\n        />\n      </EuiButtonEmpty>\n    ) : (\n      <EuiButtonEmpty iconSide=\"left\" iconType=\"play\" onClick={this.startLiveStreaming}>\n        <FormattedMessage\n          id=\"xpack.infra.waffleTime.autoRefreshButtonLabel\"\n          defaultMessage=\"Auto-refresh\"\n        />\n      </EuiButtonEmpty>\n    );\n\n    return (\n      <EuiFormControlLayout append={liveStreamingButton} data-test-subj=\"waffleDatePicker\">\n        <EuiDatePicker\n          className=\"euiFieldText--inGroup\"\n          dateFormat=\"L LTS\"\n          disabled={isLiveStreaming}\n          injectTimes={currentMoment ? [currentMoment] : []}\n          isLoading={isLiveStreaming}\n          onChange={this.handleChangeDate}\n          popperPlacement=\"top-end\"\n          selected={currentMoment}\n          shouldCloseOnSelect\n          showTimeSelect\n          timeFormat=\"LT\"\n        />\n      </EuiFormControlLayout>\n    );\n  }\n\n  private handleChangeDate = (time: Moment | null) => {\n    const { onChangeTime } = this.props;\n\n    if (onChangeTime && time) {\n      onChangeTime(time.valueOf());\n    }\n  };\n\n  private startLiveStreaming = () => {\n    const { startLiveStreaming } = this.props;\n\n    if (startLiveStreaming) {\n      startLiveStreaming();\n    }\n  };\n\n  private stopLiveStreaming = () => {\n    const { stopLiveStreaming } = this.props;\n\n    if (stopLiveStreaming) {\n      stopLiveStreaming();\n    }\n  };\n}\n"]}]}