{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap_scale_controls.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap_scale_controls.tsx","mtime":1567631711980},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiFormRow, EuiRadioGroup } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport * as React from 'react';\nvar LogMinimapScaleControls = /** @class */ (function (_super) {\n    tslib_1.__extends(LogMinimapScaleControls, _super);\n    function LogMinimapScaleControls() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleScaleChange = function (intervalSizeDescriptorKey) {\n            var _a = _this.props, availableIntervalSizes = _a.availableIntervalSizes, setIntervalSize = _a.setIntervalSize;\n            var _b = tslib_1.__read(availableIntervalSizes.filter(intervalKeyEquals(intervalSizeDescriptorKey)), 1), sizeDescriptor = _b[0];\n            if (sizeDescriptor) {\n                setIntervalSize(sizeDescriptor.intervalSize);\n            }\n        };\n        return _this;\n    }\n    LogMinimapScaleControls.prototype.render = function () {\n        var _a = this.props, availableIntervalSizes = _a.availableIntervalSizes, intervalSize = _a.intervalSize;\n        var _b = tslib_1.__read(availableIntervalSizes.filter(intervalSizeEquals(intervalSize)), 1), currentSizeDescriptor = _b[0];\n        return (React.createElement(EuiFormRow, { label: React.createElement(FormattedMessage, { id: \"xpack.infra.logs.customizeLogs.minimapScaleFormRowLabel\", defaultMessage: \"Minimap Scale\" }) },\n            React.createElement(EuiRadioGroup, { options: availableIntervalSizes.map(function (sizeDescriptor) { return ({\n                    id: getIntervalSizeDescriptorKey(sizeDescriptor),\n                    label: sizeDescriptor.label,\n                }); }), onChange: this.handleScaleChange, idSelected: getIntervalSizeDescriptorKey(currentSizeDescriptor) })));\n    };\n    return LogMinimapScaleControls;\n}(React.PureComponent));\nexport { LogMinimapScaleControls };\nvar getIntervalSizeDescriptorKey = function (sizeDescriptor) {\n    return \"\" + sizeDescriptor.intervalSize;\n};\nvar intervalKeyEquals = function (key) { return function (sizeDescriptor) {\n    return getIntervalSizeDescriptorKey(sizeDescriptor) === key;\n}; };\nvar intervalSizeEquals = function (size) { return function (sizeDescriptor) {\n    return sizeDescriptor.intervalSize === size;\n}; };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap_scale_controls.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_minimap_scale_controls.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AACzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAa/B;IAA6C,mDAAiD;IAA9F;QAAA,qEAoCC;QAnCQ,uBAAiB,GAAG,UAAC,yBAAiC;YACrD,IAAA,gBAAwD,EAAtD,kDAAsB,EAAE,oCAAe,CAAgB;YACzD,IAAA,mGAEL,EAFM,sBAAc,CAEnB;YAEF,IAAI,cAAc,EAAE;gBAClB,eAAe,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;aAC9C;QACH,CAAC,CAAC;;IA0BJ,CAAC;IAxBQ,wCAAM,GAAb;QACQ,IAAA,eAAqD,EAAnD,kDAAsB,EAAE,8BAAY,CAAgB;QACtD,IAAA,uFAAyF,EAAxF,6BAAqB,CAAoE;QAEhG,OAAO,CACL,oBAAC,UAAU,IACT,KAAK,EACH,oBAAC,gBAAgB,IACf,EAAE,EAAC,yDAAyD,EAC5D,cAAc,EAAC,eAAe,GAC9B;YAGJ,oBAAC,aAAa,IACZ,OAAO,EAAE,sBAAsB,CAAC,GAAG,CAAC,UAAA,cAAc,IAAI,OAAA,CAAC;oBACrD,EAAE,EAAE,4BAA4B,CAAC,cAAc,CAAC;oBAChD,KAAK,EAAE,cAAc,CAAC,KAAK;iBAC5B,CAAC,EAHoD,CAGpD,CAAC,EACH,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAChC,UAAU,EAAE,4BAA4B,CAAC,qBAAqB,CAAC,GAC/D,CACS,CACd,CAAC;IACJ,CAAC;IACH,8BAAC;AAAD,CAAC,AApCD,CAA6C,KAAK,CAAC,aAAa,GAoC/D;;AAED,IAAM,4BAA4B,GAAG,UAAC,cAAsC;IAC1E,OAAA,KAAG,cAAc,CAAC,YAAc;AAAhC,CAAgC,CAAC;AAEnC,IAAM,iBAAiB,GAAG,UAAC,GAAW,IAAK,OAAA,UAAC,cAAsC;IAChF,OAAA,4BAA4B,CAAC,cAAc,CAAC,KAAK,GAAG;AAApD,CAAoD,EADX,CACW,CAAC;AAEvD,IAAM,kBAAkB,GAAG,UAAC,IAAY,IAAK,OAAA,UAAC,cAAsC;IAClF,OAAA,cAAc,CAAC,YAAY,KAAK,IAAI;AAApC,CAAoC,EADO,CACP,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiFormRow, EuiRadioGroup } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport * as React from 'react';\n\ninterface IntervalSizeDescriptor {\n  label: string;\n  intervalSize: number;\n}\n\ninterface LogMinimapScaleControlsProps {\n  availableIntervalSizes: IntervalSizeDescriptor[];\n  intervalSize: number;\n  setIntervalSize: (intervalSize: number) => any;\n}\n\nexport class LogMinimapScaleControls extends React.PureComponent<LogMinimapScaleControlsProps> {\n  public handleScaleChange = (intervalSizeDescriptorKey: string) => {\n    const { availableIntervalSizes, setIntervalSize } = this.props;\n    const [sizeDescriptor] = availableIntervalSizes.filter(\n      intervalKeyEquals(intervalSizeDescriptorKey)\n    );\n\n    if (sizeDescriptor) {\n      setIntervalSize(sizeDescriptor.intervalSize);\n    }\n  };\n\n  public render() {\n    const { availableIntervalSizes, intervalSize } = this.props;\n    const [currentSizeDescriptor] = availableIntervalSizes.filter(intervalSizeEquals(intervalSize));\n\n    return (\n      <EuiFormRow\n        label={\n          <FormattedMessage\n            id=\"xpack.infra.logs.customizeLogs.minimapScaleFormRowLabel\"\n            defaultMessage=\"Minimap Scale\"\n          />\n        }\n      >\n        <EuiRadioGroup\n          options={availableIntervalSizes.map(sizeDescriptor => ({\n            id: getIntervalSizeDescriptorKey(sizeDescriptor),\n            label: sizeDescriptor.label,\n          }))}\n          onChange={this.handleScaleChange}\n          idSelected={getIntervalSizeDescriptorKey(currentSizeDescriptor)}\n        />\n      </EuiFormRow>\n    );\n  }\n}\n\nconst getIntervalSizeDescriptorKey = (sizeDescriptor: IntervalSizeDescriptor) =>\n  `${sizeDescriptor.intervalSize}`;\n\nconst intervalKeyEquals = (key: string) => (sizeDescriptor: IntervalSizeDescriptor) =>\n  getIntervalSizeDescriptorKey(sizeDescriptor) === key;\n\nconst intervalSizeEquals = (size: number) => (sizeDescriptor: IntervalSizeDescriptor) =>\n  sizeDescriptor.intervalSize === size;\n"]}]}