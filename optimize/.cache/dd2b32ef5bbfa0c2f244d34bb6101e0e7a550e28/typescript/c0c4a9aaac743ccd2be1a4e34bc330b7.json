{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/routes.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/routes.tsx","mtime":1567631711987},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React from 'react';\nimport { Redirect, Route, Router, Switch } from 'react-router-dom';\nimport { NotFoundPage } from './pages/404';\nimport { HomePage } from './pages/home';\nimport { LinkToPage } from './pages/link_to';\nimport { LogsPage } from './pages/logs';\nimport { MetricDetail } from './pages/metrics';\nexport var PageRouter = function (_a) {\n    var history = _a.history;\n    return (React.createElement(Router, { history: history },\n        React.createElement(Switch, null,\n            React.createElement(Redirect, { from: \"/\", exact: true, to: \"/home\" }),\n            React.createElement(Route, { path: \"/logs\", component: LogsPage }),\n            React.createElement(Route, { path: \"/home\", component: HomePage }),\n            React.createElement(Route, { path: \"/link-to\", component: LinkToPage }),\n            React.createElement(Route, { path: \"/metrics/:type/:node\", component: MetricDetail }),\n            React.createElement(Route, { component: NotFoundPage }))));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/routes.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/routes.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAGH,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAEnE,OAAO,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAM/C,MAAM,CAAC,IAAM,UAAU,GAA2B,UAAC,EAAW;QAAT,oBAAO;IAC1D,OAAO,CACL,oBAAC,MAAM,IAAC,OAAO,EAAE,OAAO;QACtB,oBAAC,MAAM;YACL,oBAAC,QAAQ,IAAC,IAAI,EAAC,GAAG,EAAC,KAAK,EAAE,IAAI,EAAE,EAAE,EAAC,OAAO,GAAG;YAC7C,oBAAC,KAAK,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAE,QAAQ,GAAI;YAC3C,oBAAC,KAAK,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAE,QAAQ,GAAI;YAC3C,oBAAC,KAAK,IAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAE,UAAU,GAAI;YAChD,oBAAC,KAAK,IAAC,IAAI,EAAC,sBAAsB,EAAC,SAAS,EAAE,YAAY,GAAI;YAC9D,oBAAC,KAAK,IAAC,SAAS,EAAE,YAAY,GAAI,CAC3B,CACF,CACV,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { History } from 'history';\nimport React from 'react';\nimport { Redirect, Route, Router, Switch } from 'react-router-dom';\n\nimport { NotFoundPage } from './pages/404';\nimport { HomePage } from './pages/home';\nimport { LinkToPage } from './pages/link_to';\nimport { LogsPage } from './pages/logs';\nimport { MetricDetail } from './pages/metrics';\n\ninterface RouterProps {\n  history: History;\n}\n\nexport const PageRouter: React.SFC<RouterProps> = ({ history }) => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Redirect from=\"/\" exact={true} to=\"/home\" />\n        <Route path=\"/logs\" component={LogsPage} />\n        <Route path=\"/home\" component={HomePage} />\n        <Route path=\"/link-to\" component={LinkToPage} />\n        <Route path=\"/metrics/:type/:node\" component={MetricDetail} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n};\n"]}]}