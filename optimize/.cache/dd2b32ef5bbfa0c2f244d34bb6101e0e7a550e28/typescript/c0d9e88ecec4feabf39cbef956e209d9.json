{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/charts/TransactionCharts/view.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/charts/TransactionCharts/view.tsx","mtime":1567631711869},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiFlexGrid, EuiFlexGroup, EuiFlexItem, EuiIconTip, EuiText, EuiTitle } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { MLJobLink } from 'x-pack/plugins/apm/public/components/shared/Links/MLJobLink';\nimport { asInteger, asMillis, tpmUnit } from '../../../../utils/formatters';\n// @ts-ignore\nimport CustomPlot from '../CustomPlot';\nimport { SyncChartGroup } from '../SyncChartGroup';\nvar ShiftedIconWrapper = styled.span(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  padding-right: 5px;\\n  position: relative;\\n  top: -1px;\\n  display: inline-block;\\n\"], [\"\\n  padding-right: 5px;\\n  position: relative;\\n  top: -1px;\\n  display: inline-block;\\n\"])));\nvar ShiftedEuiText = styled(EuiText)(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  position: relative;\\n  top: 5px;\\n\"], [\"\\n  position: relative;\\n  top: 5px;\\n\"])));\nvar msTimeUnitLabel = i18n.translate('xpack.apm.metrics.transactionChart.msTimeUnitLabel', {\n    defaultMessage: 'ms'\n});\nvar TransactionChartsView = /** @class */ (function (_super) {\n    tslib_1.__extends(TransactionChartsView, _super);\n    function TransactionChartsView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.getResponseTimeTickFormatter = function (t) {\n            return _this.props.charts.noHits ? \"- \" + msTimeUnitLabel : asMillis(t);\n        };\n        _this.getResponseTimeTooltipFormatter = function (p) {\n            return _this.props.charts.noHits || !p\n                ? \"- \" + msTimeUnitLabel\n                : asMillis(p.y);\n        };\n        _this.getTPMFormatter = function (t) {\n            var _a = _this.props, urlParams = _a.urlParams, charts = _a.charts;\n            var unit = tpmUnit(urlParams.transactionType);\n            return charts.noHits || t === null\n                ? \"- \" + unit\n                : asInteger(t) + \" \" + unit;\n        };\n        _this.getTPMTooltipFormatter = function (p) {\n            return _this.getTPMFormatter(p.y);\n        };\n        return _this;\n    }\n    TransactionChartsView.prototype.renderMLHeader = function () {\n        if (!this.props.mlAvailable || !this.props.hasMLJob) {\n            return null;\n        }\n        var _a = this.props.urlParams, serviceName = _a.serviceName, transactionType = _a.transactionType;\n        if (!serviceName) {\n            return null;\n        }\n        return (React.createElement(EuiFlexItem, { grow: false },\n            React.createElement(ShiftedEuiText, { size: \"xs\" },\n                React.createElement(ShiftedIconWrapper, null,\n                    React.createElement(EuiIconTip, { content: i18n.translate('xpack.apm.metrics.transactionChart.machineLearningTooltip', {\n                            defaultMessage: 'The stream around the average duration shows the expected bounds. An annotation is shown for anomaly scores >= 75.'\n                        }) })),\n                React.createElement(\"span\", null,\n                    i18n.translate('xpack.apm.metrics.transactionChart.machineLearningLabel', {\n                        defaultMessage: 'Machine learning:'\n                    }),\n                    ' '),\n                React.createElement(MLJobLink, { serviceName: serviceName, transactionType: transactionType, location: this.props.location }, \"View Job\"))));\n    };\n    TransactionChartsView.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, charts = _a.charts, urlParams = _a.urlParams, _b = _a.chartWrapper, ChartWrapper = _b === void 0 ? React.Fragment : _b;\n        var noHits = charts.noHits, responseTimeSeries = charts.responseTimeSeries, tpmSeries = charts.tpmSeries;\n        var transactionType = urlParams.transactionType;\n        return (React.createElement(SyncChartGroup, { render: function (hoverXHandlers) { return (React.createElement(EuiFlexGrid, { columns: 2 },\n                React.createElement(EuiFlexItem, null,\n                    React.createElement(ChartWrapper, null,\n                        React.createElement(EuiFlexGroup, { justifyContent: \"spaceBetween\" },\n                            React.createElement(EuiFlexItem, null,\n                                React.createElement(EuiTitle, { size: \"s\" },\n                                    React.createElement(\"span\", null, responseTimeLabel(transactionType)))),\n                            _this.renderMLHeader()),\n                        React.createElement(CustomPlot, tslib_1.__assign({ noHits: noHits, series: responseTimeSeries }, hoverXHandlers, { tickFormatY: _this.getResponseTimeTickFormatter, formatTooltipValue: _this.getResponseTimeTooltipFormatter })))),\n                React.createElement(EuiFlexItem, { style: { flexShrink: 1 } },\n                    React.createElement(ChartWrapper, null,\n                        React.createElement(EuiTitle, { size: \"s\" },\n                            React.createElement(\"span\", null, tpmLabel(transactionType))),\n                        React.createElement(CustomPlot, tslib_1.__assign({ noHits: noHits, series: tpmSeries }, hoverXHandlers, { tickFormatY: _this.getTPMFormatter, formatTooltipValue: _this.getTPMTooltipFormatter, truncateLegends: true })))))); } }));\n    };\n    return TransactionChartsView;\n}(Component));\nexport { TransactionChartsView };\nfunction tpmLabel(type) {\n    return type === 'request'\n        ? i18n.translate('xpack.apm.metrics.transactionChart.requestsPerMinuteLabel', {\n            defaultMessage: 'Requests per minute'\n        })\n        : i18n.translate('xpack.apm.metrics.transactionChart.transactionsPerMinuteLabel', {\n            defaultMessage: 'Transactions per minute'\n        });\n}\nfunction responseTimeLabel(type) {\n    switch (type) {\n        case 'page-load':\n            return i18n.translate('xpack.apm.metrics.transactionChart.pageLoadTimesLabel', {\n                defaultMessage: 'Page load times'\n            });\n        case 'route-change':\n            return i18n.translate('xpack.apm.metrics.transactionChart.routeChangeTimesLabel', {\n                defaultMessage: 'Route change times'\n            });\n        default:\n            return i18n.translate('xpack.apm.metrics.transactionChart.transactionDurationLabel', {\n                defaultMessage: 'Transaction duration'\n            });\n    }\n}\nvar templateObject_1, templateObject_2;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/charts/TransactionCharts/view.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/charts/TransactionCharts/view.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiFlexGrid,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiIconTip,\n  EuiText,\n  EuiTitle\n} from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { Location } from 'history';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { MLJobLink } from 'x-pack/plugins/apm/public/components/shared/Links/MLJobLink';\nimport { ITransactionChartData } from 'x-pack/plugins/apm/public/store/selectors/chartSelectors';\nimport { IUrlParams } from 'x-pack/plugins/apm/public/store/urlParams';\nimport { Coordinate } from 'x-pack/plugins/apm/typings/timeseries';\nimport { asInteger, asMillis, tpmUnit } from '../../../../utils/formatters';\n// @ts-ignore\nimport CustomPlot from '../CustomPlot';\nimport { SyncChartGroup } from '../SyncChartGroup';\n\ninterface TransactionChartProps {\n  charts: ITransactionChartData;\n  chartWrapper?: React.ComponentClass | React.SFC;\n  location: Location;\n  urlParams: IUrlParams;\n  mlAvailable: boolean;\n  hasMLJob: boolean;\n}\n\nconst ShiftedIconWrapper = styled.span`\n  padding-right: 5px;\n  position: relative;\n  top: -1px;\n  display: inline-block;\n`;\n\nconst ShiftedEuiText = styled(EuiText)`\n  position: relative;\n  top: 5px;\n`;\n\nconst msTimeUnitLabel = i18n.translate(\n  'xpack.apm.metrics.transactionChart.msTimeUnitLabel',\n  {\n    defaultMessage: 'ms'\n  }\n);\n\nexport class TransactionChartsView extends Component<TransactionChartProps> {\n  public getResponseTimeTickFormatter = (t: number) => {\n    return this.props.charts.noHits ? `- ${msTimeUnitLabel}` : asMillis(t);\n  };\n\n  public getResponseTimeTooltipFormatter = (p: Coordinate) => {\n    return this.props.charts.noHits || !p\n      ? `- ${msTimeUnitLabel}`\n      : asMillis(p.y);\n  };\n\n  public getTPMFormatter = (t: number | null) => {\n    const { urlParams, charts } = this.props;\n    const unit = tpmUnit(urlParams.transactionType);\n    return charts.noHits || t === null\n      ? `- ${unit}`\n      : `${asInteger(t)} ${unit}`;\n  };\n\n  public getTPMTooltipFormatter = (p: Coordinate) => {\n    return this.getTPMFormatter(p.y);\n  };\n\n  public renderMLHeader() {\n    if (!this.props.mlAvailable || !this.props.hasMLJob) {\n      return null;\n    }\n\n    const { serviceName, transactionType } = this.props.urlParams;\n\n    if (!serviceName) {\n      return null;\n    }\n\n    return (\n      <EuiFlexItem grow={false}>\n        <ShiftedEuiText size=\"xs\">\n          <ShiftedIconWrapper>\n            <EuiIconTip\n              content={i18n.translate(\n                'xpack.apm.metrics.transactionChart.machineLearningTooltip',\n                {\n                  defaultMessage:\n                    'The stream around the average duration shows the expected bounds. An annotation is shown for anomaly scores >= 75.'\n                }\n              )}\n            />\n          </ShiftedIconWrapper>\n          <span>\n            {i18n.translate(\n              'xpack.apm.metrics.transactionChart.machineLearningLabel',\n              {\n                defaultMessage: 'Machine learning:'\n              }\n            )}{' '}\n          </span>\n          <MLJobLink\n            serviceName={serviceName}\n            transactionType={transactionType}\n            location={this.props.location}\n          >\n            View Job\n          </MLJobLink>\n        </ShiftedEuiText>\n      </EuiFlexItem>\n    );\n  }\n\n  public render() {\n    const {\n      charts,\n      urlParams,\n      chartWrapper: ChartWrapper = React.Fragment\n    } = this.props;\n    const { noHits, responseTimeSeries, tpmSeries } = charts;\n    const { transactionType } = urlParams;\n\n    return (\n      <SyncChartGroup\n        render={hoverXHandlers => (\n          <EuiFlexGrid columns={2}>\n            <EuiFlexItem>\n              <ChartWrapper>\n                <EuiFlexGroup justifyContent=\"spaceBetween\">\n                  <EuiFlexItem>\n                    <EuiTitle size=\"s\">\n                      <span>{responseTimeLabel(transactionType)}</span>\n                    </EuiTitle>\n                  </EuiFlexItem>\n                  {this.renderMLHeader()}\n                </EuiFlexGroup>\n                <CustomPlot\n                  noHits={noHits}\n                  series={responseTimeSeries}\n                  {...hoverXHandlers}\n                  tickFormatY={this.getResponseTimeTickFormatter}\n                  formatTooltipValue={this.getResponseTimeTooltipFormatter}\n                />\n              </ChartWrapper>\n            </EuiFlexItem>\n\n            <EuiFlexItem style={{ flexShrink: 1 }}>\n              <ChartWrapper>\n                <EuiTitle size=\"s\">\n                  <span>{tpmLabel(transactionType)}</span>\n                </EuiTitle>\n                <CustomPlot\n                  noHits={noHits}\n                  series={tpmSeries}\n                  {...hoverXHandlers}\n                  tickFormatY={this.getTPMFormatter}\n                  formatTooltipValue={this.getTPMTooltipFormatter}\n                  truncateLegends\n                />\n              </ChartWrapper>\n            </EuiFlexItem>\n          </EuiFlexGrid>\n        )}\n      />\n    );\n  }\n}\n\nfunction tpmLabel(type?: string) {\n  return type === 'request'\n    ? i18n.translate(\n        'xpack.apm.metrics.transactionChart.requestsPerMinuteLabel',\n        {\n          defaultMessage: 'Requests per minute'\n        }\n      )\n    : i18n.translate(\n        'xpack.apm.metrics.transactionChart.transactionsPerMinuteLabel',\n        {\n          defaultMessage: 'Transactions per minute'\n        }\n      );\n}\n\nfunction responseTimeLabel(type?: string) {\n  switch (type) {\n    case 'page-load':\n      return i18n.translate(\n        'xpack.apm.metrics.transactionChart.pageLoadTimesLabel',\n        {\n          defaultMessage: 'Page load times'\n        }\n      );\n    case 'route-change':\n      return i18n.translate(\n        'xpack.apm.metrics.transactionChart.routeChangeTimesLabel',\n        {\n          defaultMessage: 'Route change times'\n        }\n      );\n    default:\n      return i18n.translate(\n        'xpack.apm.metrics.transactionChart.transactionDurationLabel',\n        {\n          defaultMessage: 'Transaction duration'\n        }\n      );\n  }\n}\n"]}]}