{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/share/components/url_panel_content.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/share/components/url_panel_content.tsx","mtime":1567631711753},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport React, { Component } from 'react';\nimport { EuiButton, EuiCopy, EuiFlexGroup, EuiFlexItem, EuiForm, EuiFormRow, EuiIconTip, EuiLoadingSpinner, EuiRadioGroup, EuiSwitch, } from '@elastic/eui';\nimport { format as formatUrl, parse as parseUrl } from 'url';\nimport { unhashUrl } from '../../state_management/state_hashing';\nimport { shortenUrl } from '../lib/url_shortener';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\n// TODO: Remove once EuiIconTip supports \"content\" prop\nvar FixedEuiIconTip = EuiIconTip;\nvar ExportUrlAsType;\n(function (ExportUrlAsType) {\n    ExportUrlAsType[\"EXPORT_URL_AS_SAVED_OBJECT\"] = \"savedObject\";\n    ExportUrlAsType[\"EXPORT_URL_AS_SNAPSHOT\"] = \"snapshot\";\n})(ExportUrlAsType || (ExportUrlAsType = {}));\nvar UrlPanelContentUI = /** @class */ (function (_super) {\n    tslib_1.__extends(UrlPanelContentUI, _super);\n    function UrlPanelContentUI(props) {\n        var _this = _super.call(this, props) || this;\n        _this.isNotSaved = function () {\n            return _this.props.objectId === undefined || _this.props.objectId === '';\n        };\n        _this.resetUrl = function () {\n            if (_this.mounted) {\n                _this.shortUrlCache = undefined;\n                _this.setState({\n                    useShortUrl: false,\n                }, _this.setUrl);\n            }\n        };\n        _this.getSavedObjectUrl = function () {\n            if (_this.isNotSaved()) {\n                return;\n            }\n            var url = window.location.href;\n            // Replace hashes with original RISON values.\n            var unhashedUrl = unhashUrl(url, _this.props.getUnhashableStates());\n            var parsedUrl = parseUrl(unhashedUrl);\n            if (!parsedUrl || !parsedUrl.hash) {\n                return;\n            }\n            // Get the application route, after the hash, and remove the #.\n            var parsedAppUrl = parseUrl(parsedUrl.hash.slice(1), true);\n            return formatUrl({\n                protocol: parsedUrl.protocol,\n                auth: parsedUrl.auth,\n                host: parsedUrl.host,\n                pathname: parsedUrl.pathname,\n                hash: formatUrl({\n                    pathname: parsedAppUrl.pathname,\n                    query: {\n                        // Add global state to the URL so that the iframe doesn't just show the time range\n                        // default.\n                        _g: parsedAppUrl.query._g,\n                    },\n                }),\n            });\n        };\n        _this.getSnapshotUrl = function () {\n            var url = window.location.href;\n            // Replace hashes with original RISON values.\n            return unhashUrl(url, _this.props.getUnhashableStates());\n        };\n        _this.makeUrlEmbeddable = function (url) {\n            var embedQueryParam = '?embed=true';\n            var urlHasQueryString = url.indexOf('?') !== -1;\n            if (urlHasQueryString) {\n                return url.replace('?', embedQueryParam + \"&\");\n            }\n            return \"\" + url + embedQueryParam;\n        };\n        _this.makeIframeTag = function (url) {\n            if (!url) {\n                return;\n            }\n            var embeddableUrl = _this.makeUrlEmbeddable(url);\n            return \"<iframe src=\\\"\" + embeddableUrl + \"\\\" height=\\\"600\\\" width=\\\"800\\\"></iframe>\";\n        };\n        _this.setUrl = function () {\n            var url;\n            if (_this.state.exportUrlAs === ExportUrlAsType.EXPORT_URL_AS_SAVED_OBJECT) {\n                url = _this.getSavedObjectUrl();\n            }\n            else if (_this.state.useShortUrl) {\n                url = _this.shortUrlCache;\n            }\n            else {\n                url = _this.getSnapshotUrl();\n            }\n            if (_this.props.isEmbedded) {\n                url = _this.makeIframeTag(url);\n            }\n            _this.setState({ url: url });\n        };\n        _this.handleExportUrlAs = function (optionId) {\n            _this.setState({\n                exportUrlAs: optionId,\n            }, _this.setUrl);\n        };\n        // TODO: switch evt type to ChangeEvent<HTMLInputElement> once https://github.com/elastic/eui/issues/1134 is resolved\n        _this.handleShortUrlChange = function (evt) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var isChecked, shortUrl, fetchError_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        isChecked = evt.target.checked;\n                        if (!isChecked || this.shortUrlCache !== undefined) {\n                            this.setState({ useShortUrl: isChecked }, this.setUrl);\n                            return [2 /*return*/];\n                        }\n                        // \"Use short URL\" is checked but shortUrl has not been generated yet so one needs to be created.\n                        this.setState({\n                            isCreatingShortUrl: true,\n                            shortUrlErrorMsg: undefined,\n                        });\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, shortenUrl(this.getSnapshotUrl())];\n                    case 2:\n                        shortUrl = _a.sent();\n                        if (this.mounted) {\n                            this.shortUrlCache = shortUrl;\n                            this.setState({\n                                isCreatingShortUrl: false,\n                                useShortUrl: isChecked,\n                            }, this.setUrl);\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        fetchError_1 = _a.sent();\n                        if (this.mounted) {\n                            this.shortUrlCache = undefined;\n                            this.setState({\n                                useShortUrl: false,\n                                isCreatingShortUrl: false,\n                                shortUrlErrorMsg: this.props.intl.formatMessage({\n                                    id: 'common.ui.share.urlPanel.unableCreateShortUrlErrorMessage',\n                                    defaultMessage: 'Unable to create short URL. Error: {errorMessage}',\n                                }, {\n                                    errorMessage: fetchError_1.message,\n                                }),\n                            }, this.setUrl);\n                        }\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.renderExportUrlAsOptions = function () {\n            var _a, _b;\n            return [\n                (_a = {\n                        id: ExportUrlAsType.EXPORT_URL_AS_SNAPSHOT,\n                        label: _this.renderWithIconTip(React.createElement(FormattedMessage, { id: \"common.ui.share.urlPanel.snapshotLabel\", defaultMessage: \"Snapshot\" }), React.createElement(FormattedMessage, { id: \"common.ui.share.urlPanel.snapshotDescription\", defaultMessage: \"Snapshot URLs encode the current state of the {objectType} in the URL itself.\\n            Edits to the saved {objectType} won't be visible via this URL.\", values: { objectType: _this.props.objectType } }))\n                    },\n                    _a['data-test-subj'] = 'exportAsSnapshot',\n                    _a),\n                (_b = {\n                        id: ExportUrlAsType.EXPORT_URL_AS_SAVED_OBJECT,\n                        disabled: _this.isNotSaved(),\n                        label: _this.renderWithIconTip(React.createElement(FormattedMessage, { id: \"common.ui.share.urlPanel.savedObjectLabel\", defaultMessage: \"Saved object\" }), React.createElement(FormattedMessage, { id: \"common.ui.share.urlPanel.savedObjectDescription\", defaultMessage: \"You can share this URL with people to let them load the most recent saved version of this {objectType}.\", values: { objectType: _this.props.objectType } }))\n                    },\n                    _b['data-test-subj'] = 'exportAsSavedObject',\n                    _b),\n            ];\n        };\n        _this.renderWithIconTip = function (child, tipContent) {\n            return (React.createElement(EuiFlexGroup, { gutterSize: \"none\" },\n                React.createElement(EuiFlexItem, null, child),\n                React.createElement(EuiFlexItem, { grow: false },\n                    React.createElement(FixedEuiIconTip, { content: tipContent, position: \"bottom\" }))));\n        };\n        _this.renderExportAsRadioGroup = function () {\n            var generateLinkAsHelp = _this.isNotSaved() ? (React.createElement(FormattedMessage, { id: \"common.ui.share.urlPanel.canNotShareAsSavedObjectHelpText\", defaultMessage: \"Can't share as saved object until the {objectType} has been saved.\", values: { objectType: _this.props.objectType } })) : (undefined);\n            return (React.createElement(EuiFormRow, { label: React.createElement(FormattedMessage, { id: \"common.ui.share.urlPanel.generateLinkAsLabel\", defaultMessage: \"Generate the link as\" }), helpText: generateLinkAsHelp },\n                React.createElement(EuiRadioGroup, { options: _this.renderExportUrlAsOptions(), idSelected: _this.state.exportUrlAs, onChange: _this.handleExportUrlAs })));\n        };\n        _this.renderShortUrlSwitch = function () {\n            if (_this.state.exportUrlAs === ExportUrlAsType.EXPORT_URL_AS_SAVED_OBJECT) {\n                return;\n            }\n            var shortUrlLabel = (React.createElement(FormattedMessage, { id: \"common.ui.share.urlPanel.shortUrlLabel\", defaultMessage: \"Short URL\" }));\n            var switchLabel = _this.state.isCreatingShortUrl ? (React.createElement(\"span\", null,\n                React.createElement(EuiLoadingSpinner, { size: \"s\" }),\n                \" \",\n                shortUrlLabel)) : (shortUrlLabel);\n            var switchComponent = (React.createElement(EuiSwitch, { label: switchLabel, checked: _this.state.useShortUrl, onChange: _this.handleShortUrlChange, \"data-test-subj\": \"useShortUrl\" }));\n            var tipContent = (React.createElement(FormattedMessage, { id: \"common.ui.share.urlPanel.shortUrlHelpText\", defaultMessage: \"We recommend sharing shortened snapshot URLs for maximum compatibility.\\n        Internet Explorer has URL length restrictions,\\n        and some wiki and markup parsers don't do well with the full-length version of the snapshot URL,\\n        but the short URL should work great.\" }));\n            return (React.createElement(EuiFormRow, { helpText: _this.state.shortUrlErrorMsg }, _this.renderWithIconTip(switchComponent, tipContent)));\n        };\n        _this.shortUrlCache = undefined;\n        _this.state = {\n            exportUrlAs: ExportUrlAsType.EXPORT_URL_AS_SNAPSHOT,\n            useShortUrl: false,\n            isCreatingShortUrl: false,\n            url: '',\n        };\n        return _this;\n    }\n    UrlPanelContentUI.prototype.componentWillUnmount = function () {\n        window.removeEventListener('hashchange', this.resetUrl);\n        this.mounted = false;\n    };\n    UrlPanelContentUI.prototype.componentDidMount = function () {\n        this.mounted = true;\n        this.setUrl();\n        window.addEventListener('hashchange', this.resetUrl, false);\n    };\n    UrlPanelContentUI.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(EuiForm, { className: \"sharePanelContent\", \"data-test-subj\": \"shareUrlForm\" },\n            this.renderExportAsRadioGroup(),\n            this.renderShortUrlSwitch(),\n            React.createElement(EuiCopy, { textToCopy: this.state.url, anchorClassName: \"sharePanel__copyAnchor\" }, function (copy) { return (React.createElement(EuiFormRow, null,\n                React.createElement(EuiButton, { fill: true, onClick: copy, disabled: _this.state.isCreatingShortUrl || _this.state.url === '', \"data-share-url\": _this.state.url, \"data-test-subj\": \"copyShareUrlButton\", size: \"s\" }, _this.props.isEmbedded ? (React.createElement(FormattedMessage, { id: \"common.ui.share.urlPanel.copyIframeCodeButtonLabel\", defaultMessage: \"Copy iFrame code\" })) : (React.createElement(FormattedMessage, { id: \"common.ui.share.urlPanel.copyLinkButtonLabel\", defaultMessage: \"Copy link\" }))))); })));\n    };\n    return UrlPanelContentUI;\n}(Component));\nexport var UrlPanelContent = injectI18n(UrlPanelContentUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/share/components/url_panel_content.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/share/components/url_panel_content.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\n\nimport {\n  EuiButton,\n  EuiCopy,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiForm,\n  EuiFormRow,\n  EuiIconTip,\n  EuiLoadingSpinner,\n  EuiRadioGroup,\n  EuiSwitch,\n} from '@elastic/eui';\n\nimport { format as formatUrl, parse as parseUrl } from 'url';\n\nimport { unhashUrl } from '../../state_management/state_hashing';\nimport { shortenUrl } from '../lib/url_shortener';\n\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\n\n// TODO: Remove once EuiIconTip supports \"content\" prop\nconst FixedEuiIconTip = EuiIconTip as React.SFC<any>;\n\ninterface Props {\n  isEmbedded?: boolean;\n  objectId?: string;\n  objectType: string;\n  getUnhashableStates: () => object[];\n  intl: InjectedIntl;\n}\n\nenum ExportUrlAsType {\n  EXPORT_URL_AS_SAVED_OBJECT = 'savedObject',\n  EXPORT_URL_AS_SNAPSHOT = 'snapshot',\n}\n\ninterface State {\n  exportUrlAs: ExportUrlAsType;\n  useShortUrl: boolean;\n  isCreatingShortUrl: boolean;\n  url?: string;\n  shortUrlErrorMsg?: string;\n}\n\nclass UrlPanelContentUI extends Component<Props, State> {\n  private mounted?: boolean;\n  private shortUrlCache?: string;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.shortUrlCache = undefined;\n\n    this.state = {\n      exportUrlAs: ExportUrlAsType.EXPORT_URL_AS_SNAPSHOT,\n      useShortUrl: false,\n      isCreatingShortUrl: false,\n      url: '',\n    };\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('hashchange', this.resetUrl);\n\n    this.mounted = false;\n  }\n\n  public componentDidMount() {\n    this.mounted = true;\n    this.setUrl();\n\n    window.addEventListener('hashchange', this.resetUrl, false);\n  }\n\n  public render() {\n    return (\n      <EuiForm className=\"sharePanelContent\" data-test-subj=\"shareUrlForm\">\n        {this.renderExportAsRadioGroup()}\n\n        {this.renderShortUrlSwitch()}\n\n        <EuiCopy textToCopy={this.state.url} anchorClassName=\"sharePanel__copyAnchor\">\n          {(copy: () => void) => (\n            <EuiFormRow>\n              <EuiButton\n                fill\n                onClick={copy}\n                disabled={this.state.isCreatingShortUrl || this.state.url === ''}\n                data-share-url={this.state.url}\n                data-test-subj=\"copyShareUrlButton\"\n                size=\"s\"\n              >\n                {this.props.isEmbedded ? (\n                  <FormattedMessage\n                    id=\"common.ui.share.urlPanel.copyIframeCodeButtonLabel\"\n                    defaultMessage=\"Copy iFrame code\"\n                  />\n                ) : (\n                  <FormattedMessage\n                    id=\"common.ui.share.urlPanel.copyLinkButtonLabel\"\n                    defaultMessage=\"Copy link\"\n                  />\n                )}\n              </EuiButton>\n            </EuiFormRow>\n          )}\n        </EuiCopy>\n      </EuiForm>\n    );\n  }\n\n  private isNotSaved = () => {\n    return this.props.objectId === undefined || this.props.objectId === '';\n  };\n\n  private resetUrl = () => {\n    if (this.mounted) {\n      this.shortUrlCache = undefined;\n      this.setState(\n        {\n          useShortUrl: false,\n        },\n        this.setUrl\n      );\n    }\n  };\n\n  private getSavedObjectUrl = () => {\n    if (this.isNotSaved()) {\n      return;\n    }\n\n    const url = window.location.href;\n    // Replace hashes with original RISON values.\n    const unhashedUrl = unhashUrl(url, this.props.getUnhashableStates());\n\n    const parsedUrl = parseUrl(unhashedUrl);\n    if (!parsedUrl || !parsedUrl.hash) {\n      return;\n    }\n\n    // Get the application route, after the hash, and remove the #.\n    const parsedAppUrl = parseUrl(parsedUrl.hash.slice(1), true);\n\n    return formatUrl({\n      protocol: parsedUrl.protocol,\n      auth: parsedUrl.auth,\n      host: parsedUrl.host,\n      pathname: parsedUrl.pathname,\n      hash: formatUrl({\n        pathname: parsedAppUrl.pathname,\n        query: {\n          // Add global state to the URL so that the iframe doesn't just show the time range\n          // default.\n          _g: parsedAppUrl.query._g,\n        },\n      }),\n    });\n  };\n\n  private getSnapshotUrl = () => {\n    const url = window.location.href;\n    // Replace hashes with original RISON values.\n    return unhashUrl(url, this.props.getUnhashableStates());\n  };\n\n  private makeUrlEmbeddable = (url: string) => {\n    const embedQueryParam = '?embed=true';\n    const urlHasQueryString = url.indexOf('?') !== -1;\n    if (urlHasQueryString) {\n      return url.replace('?', `${embedQueryParam}&`);\n    }\n    return `${url}${embedQueryParam}`;\n  };\n\n  private makeIframeTag = (url?: string) => {\n    if (!url) {\n      return;\n    }\n\n    const embeddableUrl = this.makeUrlEmbeddable(url);\n    return `<iframe src=\"${embeddableUrl}\" height=\"600\" width=\"800\"></iframe>`;\n  };\n\n  private setUrl = () => {\n    let url;\n    if (this.state.exportUrlAs === ExportUrlAsType.EXPORT_URL_AS_SAVED_OBJECT) {\n      url = this.getSavedObjectUrl();\n    } else if (this.state.useShortUrl) {\n      url = this.shortUrlCache;\n    } else {\n      url = this.getSnapshotUrl();\n    }\n\n    if (this.props.isEmbedded) {\n      url = this.makeIframeTag(url);\n    }\n\n    this.setState({ url });\n  };\n\n  private handleExportUrlAs = (optionId: string) => {\n    this.setState(\n      {\n        exportUrlAs: optionId as ExportUrlAsType,\n      },\n      this.setUrl\n    );\n  };\n\n  // TODO: switch evt type to ChangeEvent<HTMLInputElement> once https://github.com/elastic/eui/issues/1134 is resolved\n  private handleShortUrlChange = async (evt: any) => {\n    const isChecked = evt.target.checked;\n\n    if (!isChecked || this.shortUrlCache !== undefined) {\n      this.setState({ useShortUrl: isChecked }, this.setUrl);\n      return;\n    }\n\n    // \"Use short URL\" is checked but shortUrl has not been generated yet so one needs to be created.\n    this.setState({\n      isCreatingShortUrl: true,\n      shortUrlErrorMsg: undefined,\n    });\n\n    try {\n      const shortUrl = await shortenUrl(this.getSnapshotUrl());\n      if (this.mounted) {\n        this.shortUrlCache = shortUrl;\n        this.setState(\n          {\n            isCreatingShortUrl: false,\n            useShortUrl: isChecked,\n          },\n          this.setUrl\n        );\n      }\n    } catch (fetchError) {\n      if (this.mounted) {\n        this.shortUrlCache = undefined;\n        this.setState(\n          {\n            useShortUrl: false,\n            isCreatingShortUrl: false,\n            shortUrlErrorMsg: this.props.intl.formatMessage(\n              {\n                id: 'common.ui.share.urlPanel.unableCreateShortUrlErrorMessage',\n                defaultMessage: 'Unable to create short URL. Error: {errorMessage}',\n              },\n              {\n                errorMessage: fetchError.message,\n              }\n            ),\n          },\n          this.setUrl\n        );\n      }\n    }\n  };\n\n  private renderExportUrlAsOptions = () => {\n    return [\n      {\n        id: ExportUrlAsType.EXPORT_URL_AS_SNAPSHOT,\n        label: this.renderWithIconTip(\n          <FormattedMessage\n            id=\"common.ui.share.urlPanel.snapshotLabel\"\n            defaultMessage=\"Snapshot\"\n          />,\n          <FormattedMessage\n            id=\"common.ui.share.urlPanel.snapshotDescription\"\n            defaultMessage=\"Snapshot URLs encode the current state of the {objectType} in the URL itself.\n            Edits to the saved {objectType} won't be visible via this URL.\"\n            values={{ objectType: this.props.objectType }}\n          />\n        ),\n        ['data-test-subj']: 'exportAsSnapshot',\n      },\n      {\n        id: ExportUrlAsType.EXPORT_URL_AS_SAVED_OBJECT,\n        disabled: this.isNotSaved(),\n        label: this.renderWithIconTip(\n          <FormattedMessage\n            id=\"common.ui.share.urlPanel.savedObjectLabel\"\n            defaultMessage=\"Saved object\"\n          />,\n          <FormattedMessage\n            id=\"common.ui.share.urlPanel.savedObjectDescription\"\n            defaultMessage=\"You can share this URL with people to let them load the most recent saved version of this {objectType}.\"\n            values={{ objectType: this.props.objectType }}\n          />\n        ),\n        ['data-test-subj']: 'exportAsSavedObject',\n      },\n    ];\n  };\n\n  private renderWithIconTip = (child: React.ReactNode, tipContent: React.ReactNode) => {\n    return (\n      <EuiFlexGroup gutterSize=\"none\">\n        <EuiFlexItem>{child}</EuiFlexItem>\n        <EuiFlexItem grow={false}>\n          <FixedEuiIconTip content={tipContent} position=\"bottom\" />\n        </EuiFlexItem>\n      </EuiFlexGroup>\n    );\n  };\n\n  private renderExportAsRadioGroup = () => {\n    const generateLinkAsHelp = this.isNotSaved() ? (\n      <FormattedMessage\n        id=\"common.ui.share.urlPanel.canNotShareAsSavedObjectHelpText\"\n        defaultMessage=\"Can't share as saved object until the {objectType} has been saved.\"\n        values={{ objectType: this.props.objectType }}\n      />\n    ) : (\n      undefined\n    );\n    return (\n      <EuiFormRow\n        label={\n          <FormattedMessage\n            id=\"common.ui.share.urlPanel.generateLinkAsLabel\"\n            defaultMessage=\"Generate the link as\"\n          />\n        }\n        helpText={generateLinkAsHelp}\n      >\n        <EuiRadioGroup\n          options={this.renderExportUrlAsOptions()}\n          idSelected={this.state.exportUrlAs}\n          onChange={this.handleExportUrlAs}\n        />\n      </EuiFormRow>\n    );\n  };\n\n  private renderShortUrlSwitch = () => {\n    if (this.state.exportUrlAs === ExportUrlAsType.EXPORT_URL_AS_SAVED_OBJECT) {\n      return;\n    }\n    const shortUrlLabel = (\n      <FormattedMessage id=\"common.ui.share.urlPanel.shortUrlLabel\" defaultMessage=\"Short URL\" />\n    );\n    const switchLabel = this.state.isCreatingShortUrl ? (\n      <span>\n        <EuiLoadingSpinner size=\"s\" /> {shortUrlLabel}\n      </span>\n    ) : (\n      shortUrlLabel\n    );\n    const switchComponent = (\n      <EuiSwitch\n        label={switchLabel}\n        checked={this.state.useShortUrl}\n        onChange={this.handleShortUrlChange}\n        data-test-subj=\"useShortUrl\"\n      />\n    );\n    const tipContent = (\n      <FormattedMessage\n        id=\"common.ui.share.urlPanel.shortUrlHelpText\"\n        defaultMessage=\"We recommend sharing shortened snapshot URLs for maximum compatibility.\n        Internet Explorer has URL length restrictions,\n        and some wiki and markup parsers don't do well with the full-length version of the snapshot URL,\n        but the short URL should work great.\"\n      />\n    );\n\n    return (\n      <EuiFormRow helpText={this.state.shortUrlErrorMsg}>\n        {this.renderWithIconTip(switchComponent, tipContent)}\n      </EuiFormRow>\n    );\n  };\n}\n\nexport const UrlPanelContent = injectI18n(UrlPanelContentUI);\n"]}]}