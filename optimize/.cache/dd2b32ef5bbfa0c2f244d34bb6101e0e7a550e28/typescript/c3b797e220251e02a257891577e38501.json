{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/reindex/flyout/checklist_step.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/reindex/flyout/checklist_step.tsx","mtime":1567631712322},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport React, { Fragment } from 'react';\nimport { EuiButton, EuiButtonEmpty, EuiCallOut, EuiFlexGroup, EuiFlexItem, EuiFlyoutBody, EuiFlyoutFooter, EuiSpacer, EuiTitle, } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport { ReindexStatus } from '../../../../../../../common/types';\nimport { LoadingState } from '../../../../../types';\nimport { ReindexProgress } from './progress';\nvar buttonLabel = function (status) {\n    switch (status) {\n        case ReindexStatus.failed:\n            return (React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexButton.tryAgainLabel\", defaultMessage: \"Try again\" }));\n        case ReindexStatus.inProgress:\n            return (React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexButton.reindexingLabel\", defaultMessage: \"Reindexing\\u2026\" }));\n        case ReindexStatus.completed:\n            return (React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexButton.doneLabel\", defaultMessage: \"Done!\" }));\n        case ReindexStatus.paused:\n            return (React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexButton.resumeLabel\", defaultMessage: \"Resume\" }));\n        default:\n            return (React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexButton.runReindexLabel\", defaultMessage: \"Run reindex\" }));\n    }\n};\n/**\n * Displays a flyout that shows the current reindexing status for a given index.\n */\nexport var ChecklistFlyoutStep = function (_a) {\n    var closeFlyout = _a.closeFlyout, reindexState = _a.reindexState, startReindex = _a.startReindex, cancelReindex = _a.cancelReindex;\n    var loadingState = reindexState.loadingState, status = reindexState.status, hasRequiredPrivileges = reindexState.hasRequiredPrivileges;\n    var loading = loadingState === LoadingState.Loading || status === ReindexStatus.inProgress;\n    return (React.createElement(Fragment, null,\n        React.createElement(EuiFlyoutBody, null,\n            React.createElement(EuiCallOut, { title: React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.readonlyCallout.calloutTitle\", defaultMessage: \"Index is unable to ingest, update, or delete documents while reindexing\" }), color: \"warning\", iconType: \"alert\" },\n                React.createElement(\"p\", null,\n                    React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.readonlyCallout.cantStopDetail\", defaultMessage: \"If you can\\u2019t stop document updates or need to reindex into a new cluster,\\n                consider using a different upgrade strategy.\" })),\n                React.createElement(\"p\", null,\n                    React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.readonlyCallout.backgroundResumeDetail\", defaultMessage: \"Reindexing will continue in the background, but if Kibana shuts down or restarts you will\\n                need to return to this page to resume reindexing.\" }))),\n            !hasRequiredPrivileges && (React.createElement(Fragment, null,\n                React.createElement(EuiSpacer, null),\n                React.createElement(EuiCallOut, { title: React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.insufficientPrivilegeCallout.calloutTitle\", defaultMessage: \"You do not have sufficient privileges to reindex this index\" }), color: \"danger\", iconType: \"alert\" }))),\n            React.createElement(EuiSpacer, null),\n            React.createElement(EuiTitle, { size: \"xs\" },\n                React.createElement(\"h3\", null,\n                    React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexingChecklistTitle\", defaultMessage: \"Reindexing process\" }))),\n            React.createElement(ReindexProgress, { reindexState: reindexState, cancelReindex: cancelReindex })),\n        React.createElement(EuiFlyoutFooter, null,\n            React.createElement(EuiFlexGroup, { justifyContent: \"spaceBetween\" },\n                React.createElement(EuiFlexItem, { grow: false },\n                    React.createElement(EuiButtonEmpty, { iconType: \"cross\", onClick: closeFlyout, flush: \"left\" },\n                        React.createElement(FormattedMessage, { id: \"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.closeButtonLabel\", defaultMessage: \"Close\" }))),\n                React.createElement(EuiFlexItem, { grow: false },\n                    React.createElement(EuiButton, { fill: true, color: status === ReindexStatus.paused ? 'warning' : 'primary', iconType: status === ReindexStatus.paused ? 'play' : undefined, onClick: startReindex, isLoading: loading, disabled: loading || status === ReindexStatus.completed || !hasRequiredPrivileges }, buttonLabel(status)))))));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/reindex/flyout/checklist_step.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/reindex/flyout/checklist_step.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport React, { Fragment } from 'react';\n\nimport {\n  EuiButton,\n  EuiButtonEmpty,\n  EuiCallOut,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiFlyoutBody,\n  EuiFlyoutFooter,\n  EuiSpacer,\n  EuiTitle,\n} from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\n\nimport { ReindexStatus } from '../../../../../../../common/types';\nimport { LoadingState } from '../../../../../types';\nimport { ReindexState } from '../polling_service';\nimport { ReindexProgress } from './progress';\n\nconst buttonLabel = (status?: ReindexStatus) => {\n  switch (status) {\n    case ReindexStatus.failed:\n      return (\n        <FormattedMessage\n          id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexButton.tryAgainLabel\"\n          defaultMessage=\"Try again\"\n        />\n      );\n    case ReindexStatus.inProgress:\n      return (\n        <FormattedMessage\n          id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexButton.reindexingLabel\"\n          defaultMessage=\"Reindexing…\"\n        />\n      );\n    case ReindexStatus.completed:\n      return (\n        <FormattedMessage\n          id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexButton.doneLabel\"\n          defaultMessage=\"Done!\"\n        />\n      );\n    case ReindexStatus.paused:\n      return (\n        <FormattedMessage\n          id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexButton.resumeLabel\"\n          defaultMessage=\"Resume\"\n        />\n      );\n    default:\n      return (\n        <FormattedMessage\n          id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexButton.runReindexLabel\"\n          defaultMessage=\"Run reindex\"\n        />\n      );\n  }\n};\n\n/**\n * Displays a flyout that shows the current reindexing status for a given index.\n */\nexport const ChecklistFlyoutStep: React.StatelessComponent<{\n  closeFlyout: () => void;\n  reindexState: ReindexState;\n  startReindex: () => void;\n  cancelReindex: () => void;\n}> = ({ closeFlyout, reindexState, startReindex, cancelReindex }) => {\n  const { loadingState, status, hasRequiredPrivileges } = reindexState;\n  const loading = loadingState === LoadingState.Loading || status === ReindexStatus.inProgress;\n\n  return (\n    <Fragment>\n      <EuiFlyoutBody>\n        <EuiCallOut\n          title={\n            <FormattedMessage\n              id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.readonlyCallout.calloutTitle\"\n              defaultMessage=\"Index is unable to ingest, update, or delete documents while reindexing\"\n            />\n          }\n          color=\"warning\"\n          iconType=\"alert\"\n        >\n          <p>\n            <FormattedMessage\n              id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.readonlyCallout.cantStopDetail\"\n              defaultMessage=\"If you can’t stop document updates or need to reindex into a new cluster,\n                consider using a different upgrade strategy.\"\n            />\n          </p>\n          <p>\n            <FormattedMessage\n              id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.readonlyCallout.backgroundResumeDetail\"\n              defaultMessage=\"Reindexing will continue in the background, but if Kibana shuts down or restarts you will\n                need to return to this page to resume reindexing.\"\n            />\n          </p>\n        </EuiCallOut>\n        {!hasRequiredPrivileges && (\n          <Fragment>\n            <EuiSpacer />\n            <EuiCallOut\n              title={\n                <FormattedMessage\n                  id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.insufficientPrivilegeCallout.calloutTitle\"\n                  defaultMessage=\"You do not have sufficient privileges to reindex this index\"\n                />\n              }\n              color=\"danger\"\n              iconType=\"alert\"\n            />\n          </Fragment>\n        )}\n        <EuiSpacer />\n        <EuiTitle size=\"xs\">\n          <h3>\n            <FormattedMessage\n              id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.reindexingChecklistTitle\"\n              defaultMessage=\"Reindexing process\"\n            />\n          </h3>\n        </EuiTitle>\n        <ReindexProgress reindexState={reindexState} cancelReindex={cancelReindex} />\n      </EuiFlyoutBody>\n      <EuiFlyoutFooter>\n        <EuiFlexGroup justifyContent=\"spaceBetween\">\n          <EuiFlexItem grow={false}>\n            <EuiButtonEmpty iconType=\"cross\" onClick={closeFlyout} flush=\"left\">\n              <FormattedMessage\n                id=\"xpack.upgradeAssistant.checkupTab.reindexing.flyout.checklistStep.closeButtonLabel\"\n                defaultMessage=\"Close\"\n              />\n            </EuiButtonEmpty>\n          </EuiFlexItem>\n          <EuiFlexItem grow={false}>\n            <EuiButton\n              fill\n              color={status === ReindexStatus.paused ? 'warning' : 'primary'}\n              iconType={status === ReindexStatus.paused ? 'play' : undefined}\n              onClick={startReindex}\n              isLoading={loading}\n              disabled={loading || status === ReindexStatus.completed || !hasRequiredPrivileges}\n            >\n              {buttonLabel(status)}\n            </EuiButton>\n          </EuiFlexItem>\n        </EuiFlexGroup>\n      </EuiFlyoutFooter>\n    </Fragment>\n  );\n};\n"]}]}