{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/tag/tag_edit.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/tag/tag_edit.tsx","mtime":1567631711881},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButton, \n// @ts-ignore\nEuiColorPicker, EuiFieldText, EuiFlexGroup, EuiFlexItem, \n// @ts-ignore\nEuiForm, EuiFormRow, EuiHorizontalRule, EuiSpacer, EuiText, EuiTitle, } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport 'brace/mode/yaml';\nimport 'brace/theme/github';\nimport React from 'react';\nimport { ConfigList } from '../config_list';\nimport { AssignmentActionType, BeatsTableType, Table, tagConfigActions } from '../table';\nimport { ConfigView } from './config_view';\nimport { TagBadge } from './tag_badge';\nvar TagEdit = /** @class */ (function (_super) {\n    tslib_1.__extends(TagEdit, _super);\n    function TagEdit(props) {\n        var _this = _super.call(this, props) || this;\n        _this.getNameError = function (name) {\n            if (name && name !== '' && name.search(/^[a-zA-Z0-9-]+$/) === -1) {\n                return i18n.translate('xpack.beatsManagement.tag.tagName.validationErrorMessage', {\n                    defaultMessage: 'Tag name must consist of letters, numbers, and dashes only',\n                });\n            }\n            else {\n                return false;\n            }\n        };\n        _this.handleAssignmentActions = function (action) {\n            switch (action) {\n                case AssignmentActionType.Delete:\n                    var selection = _this.state.tableRef.current.state.selection;\n                    if (_this.props.onDetachBeat) {\n                        _this.props.onDetachBeat(selection.map(function (beat) { return beat.id; }));\n                    }\n            }\n        };\n        _this.updateTag = function (key, value) {\n            return value !== undefined\n                ? _this.props.onTagChange(key, value)\n                : function (e) { return _this.props.onTagChange(key, e.target ? e.target.value : e); };\n        };\n        _this.state = {\n            showFlyout: false,\n            tableRef: React.createRef(),\n        };\n        return _this;\n    }\n    TagEdit.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, tag = _a.tag, attachedBeats = _a.attachedBeats, configuration_blocks = _a.configuration_blocks;\n        return (React.createElement(\"div\", null,\n            React.createElement(EuiFlexGroup, null,\n                React.createElement(EuiFlexItem, null,\n                    React.createElement(EuiTitle, { size: \"xs\" },\n                        React.createElement(\"h3\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.tag.tagDetailsTitle\", defaultMessage: \"Tag details\" }))),\n                    React.createElement(EuiText, { color: \"subdued\" },\n                        React.createElement(\"p\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.tag.tagDetailsDescription\", defaultMessage: \"A tag is a group of configuration blocks that you can apply to one or more Beats.\" }))),\n                    React.createElement(\"div\", null,\n                        React.createElement(TagBadge, { tag: tag }))),\n                React.createElement(EuiFlexItem, null,\n                    React.createElement(EuiForm, null,\n                        React.createElement(EuiFormRow, { label: React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.tag.tagNameLabel\", defaultMessage: \"Tag Name\" }), isInvalid: !!this.getNameError(tag.name), error: this.getNameError(tag.name) || undefined },\n                            React.createElement(EuiFieldText, { name: \"name\", isInvalid: !!this.getNameError(tag.name), onChange: this.updateTag('name'), value: tag.name, placeholder: i18n.translate('xpack.beatsManagement.tag.tagNamePlaceholder', {\n                                    defaultMessage: 'Tag name (required)',\n                                }) })),\n                        React.createElement(EuiFormRow, { label: i18n.translate('xpack.beatsManagement.tag.tagColorLabel', {\n                                defaultMessage: 'Tag Color',\n                            }) },\n                            React.createElement(EuiColorPicker, { color: tag.color, onChange: this.updateTag('color') }))))),\n            React.createElement(EuiSpacer, null),\n            React.createElement(EuiHorizontalRule, null),\n            React.createElement(EuiFlexGroup, { alignItems: \"stretch\" },\n                React.createElement(EuiFlexItem, null,\n                    React.createElement(EuiTitle, { size: \"xs\" },\n                        React.createElement(\"h3\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.tag.tagConfigurationsTitle\", defaultMessage: \"Configuration blocks\" }))),\n                    React.createElement(EuiText, { color: \"subdued\" },\n                        React.createElement(\"p\", null,\n                            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.tag.tagConfigurationsDescription\", defaultMessage: \"A tag can have configuration blocks for different types of Beats. For example, a tag\\n                  can have two Metricbeat configuration blocks and one Filebeat input configuration block.\" })))),\n                React.createElement(EuiFlexItem, null,\n                    React.createElement(\"div\", null,\n                        React.createElement(ConfigList, { onTableChange: this.props.onConfigListChange, configs: configuration_blocks, onConfigClick: function (action, block) {\n                                if (action === 'delete') {\n                                    _this.props.onConfigRemoved(block);\n                                }\n                                else {\n                                    _this.setState({\n                                        showFlyout: true,\n                                        selectedConfig: block,\n                                    });\n                                }\n                            } }),\n                        React.createElement(\"br\", null),\n                        React.createElement(EuiButton, { onClick: function () {\n                                _this.setState({ showFlyout: true });\n                            } },\n                            React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.tag.addConfigurationButtonLabel\", defaultMessage: \"Add configuration block\" }))))),\n            React.createElement(EuiSpacer, null),\n            attachedBeats && (React.createElement(\"div\", null,\n                React.createElement(EuiHorizontalRule, null),\n                React.createElement(EuiTitle, { size: \"xs\" },\n                    React.createElement(\"h3\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.beatsManagement.tag.beatsAssignedToTagTitle\", defaultMessage: \"Beats with this tag\" }))),\n                React.createElement(Table, { actions: tagConfigActions, actionHandler: this.handleAssignmentActions, items: attachedBeats, ref: this.state.tableRef, type: BeatsTableType }))),\n            this.state.showFlyout && (React.createElement(ConfigView, { configBlock: this.state.selectedConfig, onClose: function () { return _this.setState({ showFlyout: false, selectedConfig: undefined }); }, onSave: function (config) {\n                    _this.setState({ showFlyout: false, selectedConfig: undefined });\n                    _this.props.onConfigAddOrEdit(config);\n                } }))));\n    };\n    return TagEdit;\n}(React.PureComponent));\nexport { TagEdit };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/tag/tag_edit.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/tag/tag_edit.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiButton,\n  // @ts-ignore\n  EuiColorPicker,\n  EuiFieldText,\n  EuiFlexGroup,\n  EuiFlexItem,\n  // @ts-ignore\n  EuiForm,\n  EuiFormRow,\n  EuiHorizontalRule,\n  EuiSpacer,\n  EuiText,\n  EuiTitle,\n} from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport 'brace/mode/yaml';\nimport 'brace/theme/github';\nimport React from 'react';\nimport { BeatTag, CMBeat, ConfigurationBlock } from '../../../common/domain_types';\nimport { ConfigList } from '../config_list';\nimport { AssignmentActionType, BeatsTableType, Table, tagConfigActions } from '../table';\nimport { ConfigView } from './config_view';\nimport { TagBadge } from './tag_badge';\n\ninterface TagEditProps {\n  tag: BeatTag;\n  configuration_blocks: {\n    error?: string | undefined;\n    blocks: ConfigurationBlock[];\n    page: number;\n    total: number;\n  };\n  onConfigListChange: (index: number, size: number) => void;\n  onDetachBeat?: (beatIds: string[]) => void;\n  onTagChange: (field: keyof BeatTag, value: string) => any;\n  onConfigAddOrEdit: (block: ConfigurationBlock) => any;\n  onConfigRemoved: (block: ConfigurationBlock) => any;\n  attachedBeats?: CMBeat[];\n}\n\ninterface TagEditState {\n  showFlyout: boolean;\n  tableRef: any;\n  selectedConfig?: ConfigurationBlock;\n}\n\nexport class TagEdit extends React.PureComponent<TagEditProps, TagEditState> {\n  constructor(props: TagEditProps) {\n    super(props);\n\n    this.state = {\n      showFlyout: false,\n      tableRef: React.createRef(),\n    };\n  }\n\n  public render() {\n    const { tag, attachedBeats, configuration_blocks } = this.props;\n\n    return (\n      <div>\n        <EuiFlexGroup>\n          <EuiFlexItem>\n            <EuiTitle size=\"xs\">\n              <h3>\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.tag.tagDetailsTitle\"\n                  defaultMessage=\"Tag details\"\n                />\n              </h3>\n            </EuiTitle>\n            <EuiText color=\"subdued\">\n              <p>\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.tag.tagDetailsDescription\"\n                  defaultMessage=\"A tag is a group of configuration blocks that you can apply to one or more Beats.\"\n                />\n              </p>\n            </EuiText>\n            <div>\n              <TagBadge tag={tag} />\n            </div>\n          </EuiFlexItem>\n          <EuiFlexItem>\n            <EuiForm>\n              <EuiFormRow\n                label={\n                  <FormattedMessage\n                    id=\"xpack.beatsManagement.tag.tagNameLabel\"\n                    defaultMessage=\"Tag Name\"\n                  />\n                }\n                isInvalid={!!this.getNameError(tag.name)}\n                error={this.getNameError(tag.name) || undefined}\n              >\n                <EuiFieldText\n                  name=\"name\"\n                  isInvalid={!!this.getNameError(tag.name)}\n                  onChange={this.updateTag('name')}\n                  value={tag.name}\n                  placeholder={i18n.translate('xpack.beatsManagement.tag.tagNamePlaceholder', {\n                    defaultMessage: 'Tag name (required)',\n                  })}\n                />\n              </EuiFormRow>\n              <EuiFormRow\n                label={i18n.translate('xpack.beatsManagement.tag.tagColorLabel', {\n                  defaultMessage: 'Tag Color',\n                })}\n              >\n                <EuiColorPicker color={tag.color} onChange={this.updateTag('color')} />\n              </EuiFormRow>\n            </EuiForm>\n          </EuiFlexItem>\n        </EuiFlexGroup>\n        <EuiSpacer />\n        <EuiHorizontalRule />\n        <EuiFlexGroup alignItems=\"stretch\">\n          <EuiFlexItem>\n            <EuiTitle size=\"xs\">\n              <h3>\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.tag.tagConfigurationsTitle\"\n                  defaultMessage=\"Configuration blocks\"\n                />\n              </h3>\n            </EuiTitle>\n            <EuiText color=\"subdued\">\n              <p>\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.tag.tagConfigurationsDescription\"\n                  defaultMessage=\"A tag can have configuration blocks for different types of Beats. For example, a tag\n                  can have two Metricbeat configuration blocks and one Filebeat input configuration block.\"\n                />\n              </p>\n            </EuiText>\n          </EuiFlexItem>\n          <EuiFlexItem>\n            <div>\n              <ConfigList\n                onTableChange={this.props.onConfigListChange}\n                configs={configuration_blocks}\n                onConfigClick={(action: string, block: ConfigurationBlock) => {\n                  if (action === 'delete') {\n                    this.props.onConfigRemoved(block);\n                  } else {\n                    this.setState({\n                      showFlyout: true,\n                      selectedConfig: block,\n                    });\n                  }\n                }}\n              />\n              <br />\n              <EuiButton\n                onClick={() => {\n                  this.setState({ showFlyout: true });\n                }}\n              >\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.tag.addConfigurationButtonLabel\"\n                  defaultMessage=\"Add configuration block\"\n                />\n              </EuiButton>\n            </div>\n          </EuiFlexItem>\n        </EuiFlexGroup>\n        <EuiSpacer />\n        {attachedBeats && (\n          <div>\n            <EuiHorizontalRule />\n\n            <EuiTitle size=\"xs\">\n              <h3>\n                <FormattedMessage\n                  id=\"xpack.beatsManagement.tag.beatsAssignedToTagTitle\"\n                  defaultMessage=\"Beats with this tag\"\n                />\n              </h3>\n            </EuiTitle>\n            <Table\n              actions={tagConfigActions}\n              actionHandler={this.handleAssignmentActions}\n              items={attachedBeats}\n              ref={this.state.tableRef}\n              type={BeatsTableType}\n            />\n          </div>\n        )}\n        {this.state.showFlyout && (\n          <ConfigView\n            configBlock={this.state.selectedConfig}\n            onClose={() => this.setState({ showFlyout: false, selectedConfig: undefined })}\n            onSave={(config: ConfigurationBlock) => {\n              this.setState({ showFlyout: false, selectedConfig: undefined });\n              this.props.onConfigAddOrEdit(config);\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private getNameError = (name: string) => {\n    if (name && name !== '' && name.search(/^[a-zA-Z0-9-]+$/) === -1) {\n      return i18n.translate('xpack.beatsManagement.tag.tagName.validationErrorMessage', {\n        defaultMessage: 'Tag name must consist of letters, numbers, and dashes only',\n      });\n    } else {\n      return false;\n    }\n  };\n\n  private handleAssignmentActions = (action: AssignmentActionType) => {\n    switch (action) {\n      case AssignmentActionType.Delete:\n        const { selection } = this.state.tableRef.current.state;\n        if (this.props.onDetachBeat) {\n          this.props.onDetachBeat(selection.map((beat: any) => beat.id));\n        }\n    }\n  };\n\n  private updateTag = (key: keyof BeatTag, value?: any) =>\n    value !== undefined\n      ? this.props.onTagChange(key, value)\n      : (e: any) => this.props.onTagChange(key, e.target ? e.target.value : e);\n}\n"]}]}