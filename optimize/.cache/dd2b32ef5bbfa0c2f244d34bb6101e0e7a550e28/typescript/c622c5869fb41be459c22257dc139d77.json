{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/index_table.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/index_table.tsx","mtime":1567631712322},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { sortBy } from 'lodash';\nimport React from 'react';\nimport { EuiBasicTable } from '@elastic/eui';\nimport { injectI18n } from '@kbn/i18n/react';\nimport { FixDefaultFieldsButton } from './default_fields/button';\nimport { DeleteTasksButton } from './delete_tasks_button';\nimport { ReindexButton } from './reindex';\nvar PAGE_SIZES = [10, 25, 50, 100, 250, 500, 1000];\nvar IndexDeprecationTableUI = /** @class */ (function (_super) {\n    tslib_1.__extends(IndexDeprecationTableUI, _super);\n    function IndexDeprecationTableUI(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onTableChange = function (tableProps) {\n            _this.setState({\n                sortField: tableProps.sort.field,\n                sortDirection: tableProps.sort.direction,\n                pageIndex: tableProps.page.index,\n                pageSize: tableProps.page.size,\n            });\n        };\n        _this.state = {\n            sortField: 'index',\n            sortDirection: 'asc',\n            pageIndex: 0,\n            pageSize: 10,\n        };\n        return _this;\n    }\n    IndexDeprecationTableUI.prototype.render = function () {\n        var intl = this.props.intl;\n        var _a = this.state, pageIndex = _a.pageIndex, pageSize = _a.pageSize, sortField = _a.sortField, sortDirection = _a.sortDirection;\n        var columns = [\n            {\n                field: 'index',\n                name: intl.formatMessage({\n                    id: 'xpack.upgradeAssistant.checkupTab.deprecations.indexTable.indexColumnLabel',\n                    defaultMessage: 'Index',\n                }),\n                sortable: true,\n            },\n            {\n                field: 'details',\n                name: intl.formatMessage({\n                    id: 'xpack.upgradeAssistant.checkupTab.deprecations.indexTable.detailsColumnLabel',\n                    defaultMessage: 'Details',\n                }),\n            },\n        ];\n        if (this.actionsColumn) {\n            // @ts-ignore\n            columns.push(this.actionsColumn);\n        }\n        var sorting = { sort: { field: sortField, direction: sortDirection } };\n        var pagination = tslib_1.__assign({ pageIndex: pageIndex,\n            pageSize: pageSize }, this.pageSizeOptions());\n        return (React.createElement(EuiBasicTable, { items: this.getRows(), columns: columns, sorting: sorting, pagination: pagination, onChange: this.onTableChange, hasActions: false }));\n    };\n    IndexDeprecationTableUI.prototype.getRows = function () {\n        var _a = this.state, sortField = _a.sortField, sortDirection = _a.sortDirection, pageIndex = _a.pageIndex, pageSize = _a.pageSize;\n        var indices = this.props.indices;\n        var sorted = sortBy(indices, sortField);\n        if (sortDirection === 'desc') {\n            sorted = sorted.reverse();\n        }\n        var start = pageIndex * pageSize;\n        return sorted.slice(start, start + pageSize);\n    };\n    IndexDeprecationTableUI.prototype.pageSizeOptions = function () {\n        var indices = this.props.indices;\n        var totalItemCount = indices.length;\n        // If we only have that smallest page size, don't show any page size options.\n        if (totalItemCount <= PAGE_SIZES[0]) {\n            return { totalItemCount: totalItemCount, pageSizeOptions: [], hidePerPageOptions: true };\n        }\n        // Keep a size option if the # of items is larger than the previous option.\n        // This avoids having a long list of useless page sizes.\n        var pageSizeOptions = PAGE_SIZES.filter(function (perPage, idx) {\n            return idx === 0 || totalItemCount > PAGE_SIZES[idx - 1];\n        });\n        return { totalItemCount: totalItemCount, pageSizeOptions: pageSizeOptions, hidePerPageOptions: false };\n    };\n    Object.defineProperty(IndexDeprecationTableUI.prototype, \"actionsColumn\", {\n        get: function () {\n            // NOTE: this naive implementation assumes all indices in the table are\n            // should show the reindex button. This should work for known usecases.\n            var indices = this.props.indices;\n            var showDeleteButton = indices.find(function (i) { return i.delete === true; });\n            var showReindexButton = indices.find(function (i) { return i.reindex === true; });\n            var showNeedsDefaultFieldsButton = indices.find(function (i) { return i.needsDefaultFields === true; });\n            if (!showDeleteButton && !showReindexButton && !showNeedsDefaultFieldsButton) {\n                return null;\n            }\n            return {\n                actions: [\n                    {\n                        render: function (indexDep) {\n                            if (showDeleteButton) {\n                                return React.createElement(DeleteTasksButton, null);\n                            }\n                            else if (showReindexButton) {\n                                return React.createElement(ReindexButton, { indexName: indexDep.index });\n                            }\n                            else {\n                                return React.createElement(FixDefaultFieldsButton, { indexName: indexDep.index });\n                            }\n                        },\n                    },\n                ],\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IndexDeprecationTableUI;\n}(React.Component));\nexport { IndexDeprecationTableUI };\nexport var IndexDeprecationTable = injectI18n(IndexDeprecationTableUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/index_table.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/upgrade_assistant/public/components/tabs/checkup/deprecations/index_table.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { sortBy } from 'lodash';\nimport React from 'react';\n\nimport { EuiBasicTable } from '@elastic/eui';\nimport { injectI18n } from '@kbn/i18n/react';\nimport { FixDefaultFieldsButton } from './default_fields/button';\nimport { DeleteTasksButton } from './delete_tasks_button';\nimport { ReindexButton } from './reindex';\n\nconst PAGE_SIZES = [10, 25, 50, 100, 250, 500, 1000];\n\nexport interface IndexDeprecationDetails {\n  index: string;\n  reindex: boolean;\n  delete: boolean;\n  needsDefaultFields: boolean;\n  details?: string;\n}\n\nexport interface IndexDeprecationTableProps extends ReactIntl.InjectedIntlProps {\n  indices: IndexDeprecationDetails[];\n}\n\ninterface IndexDeprecationTableState {\n  sortField: string;\n  sortDirection: 'asc' | 'desc';\n  pageIndex: number;\n  pageSize: number;\n}\n\nexport class IndexDeprecationTableUI extends React.Component<\n  IndexDeprecationTableProps,\n  IndexDeprecationTableState\n> {\n  constructor(props: IndexDeprecationTableProps) {\n    super(props);\n\n    this.state = {\n      sortField: 'index',\n      sortDirection: 'asc',\n      pageIndex: 0,\n      pageSize: 10,\n    };\n  }\n\n  public render() {\n    const { intl } = this.props;\n    const { pageIndex, pageSize, sortField, sortDirection } = this.state;\n\n    const columns = [\n      {\n        field: 'index',\n        name: intl.formatMessage({\n          id: 'xpack.upgradeAssistant.checkupTab.deprecations.indexTable.indexColumnLabel',\n          defaultMessage: 'Index',\n        }),\n        sortable: true,\n      },\n      {\n        field: 'details',\n        name: intl.formatMessage({\n          id: 'xpack.upgradeAssistant.checkupTab.deprecations.indexTable.detailsColumnLabel',\n          defaultMessage: 'Details',\n        }),\n      },\n    ];\n\n    if (this.actionsColumn) {\n      // @ts-ignore\n      columns.push(this.actionsColumn);\n    }\n\n    const sorting = { sort: { field: sortField, direction: sortDirection } };\n    const pagination = {\n      pageIndex,\n      pageSize,\n      ...this.pageSizeOptions(),\n    };\n\n    return (\n      <EuiBasicTable\n        items={this.getRows()}\n        columns={columns}\n        sorting={sorting}\n        pagination={pagination}\n        onChange={this.onTableChange}\n        hasActions={false}\n      />\n    );\n  }\n\n  private getRows() {\n    const { sortField, sortDirection, pageIndex, pageSize } = this.state;\n    const { indices } = this.props;\n\n    let sorted = sortBy(indices, sortField);\n    if (sortDirection === 'desc') {\n      sorted = sorted.reverse();\n    }\n\n    const start = pageIndex * pageSize;\n    return sorted.slice(start, start + pageSize);\n  }\n\n  private onTableChange = (tableProps: any) => {\n    this.setState({\n      sortField: tableProps.sort.field,\n      sortDirection: tableProps.sort.direction,\n      pageIndex: tableProps.page.index,\n      pageSize: tableProps.page.size,\n    });\n  };\n\n  private pageSizeOptions() {\n    const { indices } = this.props;\n    const totalItemCount = indices.length;\n\n    // If we only have that smallest page size, don't show any page size options.\n    if (totalItemCount <= PAGE_SIZES[0]) {\n      return { totalItemCount, pageSizeOptions: [], hidePerPageOptions: true };\n    }\n\n    // Keep a size option if the # of items is larger than the previous option.\n    // This avoids having a long list of useless page sizes.\n    const pageSizeOptions = PAGE_SIZES.filter((perPage, idx) => {\n      return idx === 0 || totalItemCount > PAGE_SIZES[idx - 1];\n    });\n\n    return { totalItemCount, pageSizeOptions, hidePerPageOptions: false };\n  }\n\n  private get actionsColumn() {\n    // NOTE: this naive implementation assumes all indices in the table are\n    // should show the reindex button. This should work for known usecases.\n    const { indices } = this.props;\n    const showDeleteButton = indices.find(i => i.delete === true);\n    const showReindexButton = indices.find(i => i.reindex === true);\n    const showNeedsDefaultFieldsButton = indices.find(i => i.needsDefaultFields === true);\n    if (!showDeleteButton && !showReindexButton && !showNeedsDefaultFieldsButton) {\n      return null;\n    }\n\n    return {\n      actions: [\n        {\n          render(indexDep: IndexDeprecationDetails) {\n            if (showDeleteButton) {\n              return <DeleteTasksButton />;\n            } else if (showReindexButton) {\n              return <ReindexButton indexName={indexDep.index!} />;\n            } else {\n              return <FixDefaultFieldsButton indexName={indexDep.index!} />;\n            }\n          },\n        },\n      ],\n    };\n  }\n}\n\nexport const IndexDeprecationTable = injectI18n(IndexDeprecationTableUI);\n"]}]}