{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/delete_role_button.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/delete_role_button.tsx","mtime":1567631712299},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButtonEmpty, \n// @ts-ignore\nEuiConfirmModal, \n// @ts-ignore\nEuiOverlayMask, } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport React, { Component, Fragment } from 'react';\nvar DeleteRoleButton = /** @class */ (function (_super) {\n    tslib_1.__extends(DeleteRoleButton, _super);\n    function DeleteRoleButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            showModal: false,\n        };\n        _this.maybeShowModal = function () {\n            if (!_this.state.showModal) {\n                return null;\n            }\n            return (React.createElement(EuiOverlayMask, null,\n                React.createElement(EuiConfirmModal, { title: React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.deleteRoleButton.deleteRoleTitle\", defaultMessage: \"Delete Role\" }), onCancel: _this.closeModal, onConfirm: _this.onConfirmDelete, cancelButtonText: React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.deleteRoleButton.cancelButtonLabel\", defaultMessage: \"No, don't delete\" }), confirmButtonText: React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.deleteRoleButton.confirmButtonLabel\", defaultMessage: \"Yes, delete role\" }), buttonColor: 'danger' },\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.deleteRoleButton.deletingRoleConfirmationText\", defaultMessage: \"Are you sure you want to delete this role?\" })),\n                    React.createElement(\"p\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.deleteRoleButton.deletingRoleWarningText\", defaultMessage: \"This action cannot be undone!\" })))));\n        };\n        _this.closeModal = function () {\n            _this.setState({\n                showModal: false,\n            });\n        };\n        _this.showModal = function () {\n            _this.setState({\n                showModal: true,\n            });\n        };\n        _this.onConfirmDelete = function () {\n            _this.closeModal();\n            _this.props.onDelete();\n        };\n        return _this;\n    }\n    DeleteRoleButton.prototype.render = function () {\n        if (!this.props.canDelete) {\n            return null;\n        }\n        return (React.createElement(Fragment, null,\n            React.createElement(EuiButtonEmpty, { color: 'danger', onClick: this.showModal },\n                React.createElement(FormattedMessage, { id: \"xpack.security.management.editRoles.deleteRoleButton.deleteRoleButtonLabel\", defaultMessage: \"Delete role\" })),\n            this.maybeShowModal()));\n    };\n    return DeleteRoleButton;\n}(Component));\nexport { DeleteRoleButton };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/delete_role_button.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/views/management/edit_role/components/delete_role_button.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EACL,cAAc;AACd,aAAa;AACb,eAAe;AACf,aAAa;AACb,cAAc,GACf,MAAM,cAAc,CAAC;AACtB,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAWnD;IAAsC,4CAAuB;IAA7D;QAAA,qEAqFC;QApFQ,WAAK,GAAG;YACb,SAAS,EAAE,KAAK;SACjB,CAAC;QAoBK,oBAAc,GAAG;YACtB,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBACzB,OAAO,IAAI,CAAC;aACb;YACD,OAAO,CACL,oBAAC,cAAc;gBACb,oBAAC,eAAe,IACd,KAAK,EACH,oBAAC,gBAAgB,IACf,EAAE,EAAC,sEAAsE,EACzE,cAAc,EAAC,aAAa,GAC5B,EAEJ,QAAQ,EAAE,KAAI,CAAC,UAAU,EACzB,SAAS,EAAE,KAAI,CAAC,eAAe,EAC/B,gBAAgB,EACd,oBAAC,gBAAgB,IACf,EAAE,EAAC,wEAAwE,EAC3E,cAAc,EAAC,kBAAkB,GACjC,EAEJ,iBAAiB,EACf,oBAAC,gBAAgB,IACf,EAAE,EAAC,yEAAyE,EAC5E,cAAc,EAAC,kBAAkB,GACjC,EAEJ,WAAW,EAAE,QAAQ;oBAErB;wBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,mFAAmF,EACtF,cAAc,EAAC,4CAA4C,GAC3D,CACA;oBACJ;wBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,8EAA8E,EACjF,cAAc,EAAC,+BAA+B,GAC9C,CACA,CACY,CACH,CAClB,CAAC;QACJ,CAAC,CAAC;QAEK,gBAAU,GAAG;YAClB,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,eAAS,GAAG;YACjB,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,IAAI;aAChB,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,qBAAe,GAAG;YACvB,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC;;IACJ,CAAC;IAhFQ,iCAAM,GAAb;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACzB,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CACL,oBAAC,QAAQ;YACP,oBAAC,cAAc,IAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS;gBACtD,oBAAC,gBAAgB,IACf,EAAE,EAAC,4EAA4E,EAC/E,cAAc,EAAC,aAAa,GAC5B,CACa;YAChB,IAAI,CAAC,cAAc,EAAE,CACb,CACZ,CAAC;IACJ,CAAC;IAgEH,uBAAC;AAAD,CAAC,AArFD,CAAsC,SAAS,GAqF9C","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiButtonEmpty,\n  // @ts-ignore\n  EuiConfirmModal,\n  // @ts-ignore\n  EuiOverlayMask,\n} from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport React, { Component, Fragment } from 'react';\n\ninterface Props {\n  canDelete: boolean;\n  onDelete: () => void;\n}\n\ninterface State {\n  showModal: boolean;\n}\n\nexport class DeleteRoleButton extends Component<Props, State> {\n  public state = {\n    showModal: false,\n  };\n\n  public render() {\n    if (!this.props.canDelete) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <EuiButtonEmpty color={'danger'} onClick={this.showModal}>\n          <FormattedMessage\n            id=\"xpack.security.management.editRoles.deleteRoleButton.deleteRoleButtonLabel\"\n            defaultMessage=\"Delete role\"\n          />\n        </EuiButtonEmpty>\n        {this.maybeShowModal()}\n      </Fragment>\n    );\n  }\n\n  public maybeShowModal = () => {\n    if (!this.state.showModal) {\n      return null;\n    }\n    return (\n      <EuiOverlayMask>\n        <EuiConfirmModal\n          title={\n            <FormattedMessage\n              id=\"xpack.security.management.editRoles.deleteRoleButton.deleteRoleTitle\"\n              defaultMessage=\"Delete Role\"\n            />\n          }\n          onCancel={this.closeModal}\n          onConfirm={this.onConfirmDelete}\n          cancelButtonText={\n            <FormattedMessage\n              id=\"xpack.security.management.editRoles.deleteRoleButton.cancelButtonLabel\"\n              defaultMessage=\"No, don't delete\"\n            />\n          }\n          confirmButtonText={\n            <FormattedMessage\n              id=\"xpack.security.management.editRoles.deleteRoleButton.confirmButtonLabel\"\n              defaultMessage=\"Yes, delete role\"\n            />\n          }\n          buttonColor={'danger'}\n        >\n          <p>\n            <FormattedMessage\n              id=\"xpack.security.management.editRoles.deleteRoleButton.deletingRoleConfirmationText\"\n              defaultMessage=\"Are you sure you want to delete this role?\"\n            />\n          </p>\n          <p>\n            <FormattedMessage\n              id=\"xpack.security.management.editRoles.deleteRoleButton.deletingRoleWarningText\"\n              defaultMessage=\"This action cannot be undone!\"\n            />\n          </p>\n        </EuiConfirmModal>\n      </EuiOverlayMask>\n    );\n  };\n\n  public closeModal = () => {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  public showModal = () => {\n    this.setState({\n      showModal: true,\n    });\n  };\n\n  public onConfirmDelete = () => {\n    this.closeModal();\n    this.props.onDelete();\n  };\n}\n"]}]}