{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/reporting/public/share_context_menu/register_csv_reporting.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/reporting/public/share_context_menu/register_csv_reporting.tsx","mtime":1567631712281},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\n// @ts-ignore: implicit any for JS file\nimport { XPackInfoProvider } from 'plugins/xpack_main/services/xpack_info';\nimport React from 'react';\nimport { ShareContextMenuExtensionsRegistryProvider } from 'ui/share/share_action_registry';\nimport { ReportingPanelContent } from '../components/reporting_panel_content';\nfunction reportingProvider(Private, i18n) {\n    var xpackInfo = Private(XPackInfoProvider);\n    var getShareActions = function (_a) {\n        var objectType = _a.objectType, objectId = _a.objectId, sharingData = _a.sharingData, isDirty = _a.isDirty, onClose = _a.onClose;\n        var _b;\n        if ('search' !== objectType) {\n            return [];\n        }\n        var getJobParams = function () {\n            return tslib_1.__assign({}, sharingData, { type: objectType });\n        };\n        var shareActions = [];\n        if (xpackInfo.get('features.reporting.csv.showLinks', false)) {\n            var panelTitle = i18n('xpack.reporting.shareContextMenu.csvReportsButtonLabel', {\n                defaultMessage: 'CSV Reports',\n            });\n            shareActions.push({\n                shareMenuItem: (_b = {\n                        name: panelTitle,\n                        icon: 'document',\n                        toolTipContent: xpackInfo.get('features.reporting.csv.message'),\n                        disabled: !xpackInfo.get('features.reporting.csv.enableLinks', false) ? true : false\n                    },\n                    _b['data-test-subj'] = 'csvReportMenuItem',\n                    _b),\n                panel: {\n                    title: panelTitle,\n                    content: (React.createElement(ReportingPanelContent, { reportType: \"csv\", layoutId: undefined, objectType: objectType, objectId: objectId, getJobParams: getJobParams, isDirty: isDirty, onClose: onClose })),\n                },\n            });\n        }\n        return shareActions;\n    };\n    return {\n        id: 'csvReports',\n        getShareActions: getShareActions,\n    };\n}\nShareContextMenuExtensionsRegistryProvider.register(reportingProvider);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/reporting/public/share_context_menu/register_csv_reporting.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/reporting/public/share_context_menu/register_csv_reporting.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAGH,uCAAuC;AACvC,OAAO,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAC3E,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,0CAA0C,EAAE,MAAM,gCAAgC,CAAC;AAC5F,OAAO,EAAE,qBAAqB,EAAE,MAAM,uCAAuC,CAAC;AAE9E,SAAS,iBAAiB,CAAC,OAAY,EAAE,IAAqB;IAC5D,IAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAC7C,IAAM,eAAe,GAAG,UAAC,EAMN;YALjB,0BAAU,EACV,sBAAQ,EACR,4BAAW,EACX,oBAAO,EACP,oBAAO;;QAEP,IAAI,QAAQ,KAAK,UAAU,EAAE;YAC3B,OAAO,EAAE,CAAC;SACX;QAED,IAAM,YAAY,GAAG;YACnB,4BACK,WAAW,IACd,IAAI,EAAE,UAAU,IAChB;QACJ,CAAC,CAAC;QAEF,IAAM,YAAY,GAAG,EAAE,CAAC;QACxB,IAAI,SAAS,CAAC,GAAG,CAAC,kCAAkC,EAAE,KAAK,CAAC,EAAE;YAC5D,IAAM,UAAU,GAAG,IAAI,CAAC,wDAAwD,EAAE;gBAChF,cAAc,EAAE,aAAa;aAC9B,CAAC,CAAC;YAEH,YAAY,CAAC,IAAI,CAAC;gBAChB,aAAa;wBACX,IAAI,EAAE,UAAU;wBAChB,IAAI,EAAE,UAAU;wBAChB,cAAc,EAAE,SAAS,CAAC,GAAG,CAAC,gCAAgC,CAAC;wBAC/D,QAAQ,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;;oBACpF,GAAC,gBAAgB,IAAG,mBAAmB;uBACxC;gBACD,KAAK,EAAE;oBACL,KAAK,EAAE,UAAU;oBACjB,OAAO,EAAE,CACP,oBAAC,qBAAqB,IACpB,UAAU,EAAC,KAAK,EAChB,QAAQ,EAAE,SAAS,EACnB,UAAU,EAAE,UAAU,EACtB,QAAQ,EAAE,QAAQ,EAClB,YAAY,EAAE,YAAY,EAC1B,OAAO,EAAE,OAAO,EAChB,OAAO,EAAE,OAAO,GAChB,CACH;iBACF;aACF,CAAC,CAAC;SACJ;QAED,OAAO,YAAY,CAAC;IACtB,CAAC,CAAC;IAEF,OAAO;QACL,EAAE,EAAE,YAAY;QAChB,eAAe,iBAAA;KAChB,CAAC;AACJ,CAAC;AAED,0CAA0C,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { I18nServiceType } from '@kbn/i18n/angular';\n// @ts-ignore: implicit any for JS file\nimport { XPackInfoProvider } from 'plugins/xpack_main/services/xpack_info';\nimport React from 'react';\nimport { ShareActionProps } from 'ui/share/share_action';\nimport { ShareContextMenuExtensionsRegistryProvider } from 'ui/share/share_action_registry';\nimport { ReportingPanelContent } from '../components/reporting_panel_content';\n\nfunction reportingProvider(Private: any, i18n: I18nServiceType) {\n  const xpackInfo = Private(XPackInfoProvider);\n  const getShareActions = ({\n    objectType,\n    objectId,\n    sharingData,\n    isDirty,\n    onClose,\n  }: ShareActionProps) => {\n    if ('search' !== objectType) {\n      return [];\n    }\n\n    const getJobParams = () => {\n      return {\n        ...sharingData,\n        type: objectType,\n      };\n    };\n\n    const shareActions = [];\n    if (xpackInfo.get('features.reporting.csv.showLinks', false)) {\n      const panelTitle = i18n('xpack.reporting.shareContextMenu.csvReportsButtonLabel', {\n        defaultMessage: 'CSV Reports',\n      });\n\n      shareActions.push({\n        shareMenuItem: {\n          name: panelTitle,\n          icon: 'document',\n          toolTipContent: xpackInfo.get('features.reporting.csv.message'),\n          disabled: !xpackInfo.get('features.reporting.csv.enableLinks', false) ? true : false,\n          ['data-test-subj']: 'csvReportMenuItem',\n        },\n        panel: {\n          title: panelTitle,\n          content: (\n            <ReportingPanelContent\n              reportType=\"csv\"\n              layoutId={undefined}\n              objectType={objectType}\n              objectId={objectId}\n              getJobParams={getJobParams}\n              isDirty={isDirty}\n              onClose={onClose}\n            />\n          ),\n        },\n      });\n    }\n\n    return shareActions;\n  };\n\n  return {\n    id: 'csvReports',\n    getShareActions,\n  };\n}\n\nShareContextMenuExtensionsRegistryProvider.register(reportingProvider);\n"]}]}