{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/measurable_item_view.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/measurable_item_view.tsx","mtime":1567631711980},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nvar MeasurableItemView = /** @class */ (function (_super) {\n    tslib_1.__extends(MeasurableItemView, _super);\n    function MeasurableItemView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childRef = React.createRef();\n        _this.getOffsetRect = function () {\n            var currentElement = _this.childRef.current;\n            if (currentElement === null) {\n                return null;\n            }\n            return {\n                height: currentElement.offsetHeight,\n                left: currentElement.offsetLeft,\n                top: currentElement.offsetTop,\n                width: currentElement.offsetWidth,\n            };\n        };\n        return _this;\n    }\n    MeasurableItemView.prototype.componentDidMount = function () {\n        this.props.register(this.props.registrationKey, this);\n    };\n    MeasurableItemView.prototype.componentWillUnmount = function () {\n        this.props.register(this.props.registrationKey, null);\n    };\n    MeasurableItemView.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.registrationKey !== this.props.registrationKey) {\n            this.props.register(prevProps.registrationKey, null);\n            this.props.register(this.props.registrationKey, this);\n        }\n    };\n    MeasurableItemView.prototype.render = function () {\n        return this.props.children(this.childRef);\n    };\n    return MeasurableItemView;\n}(React.PureComponent));\nexport { MeasurableItemView };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/measurable_item_view.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/measurable_item_view.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAe/B;IAAwC,8CAAyC;IAAjF;QAAA,qEAoCC;QAnCQ,cAAQ,GAAG,KAAK,CAAC,SAAS,EAAe,CAAC;QAE1C,mBAAa,GAAG;YACrB,IAAM,cAAc,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YAE7C,IAAI,cAAc,KAAK,IAAI,EAAE;gBAC3B,OAAO,IAAI,CAAC;aACb;YAED,OAAO;gBACL,MAAM,EAAE,cAAc,CAAC,YAAY;gBACnC,IAAI,EAAE,cAAc,CAAC,UAAU;gBAC/B,GAAG,EAAE,cAAc,CAAC,SAAS;gBAC7B,KAAK,EAAE,cAAc,CAAC,WAAW;aAClC,CAAC;QACJ,CAAC,CAAC;;IAoBJ,CAAC;IAlBQ,8CAAiB,GAAxB;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAEM,iDAAoB,GAA3B;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAEM,+CAAkB,GAAzB,UAA0B,SAA2B;QACnD,IAAI,SAAS,CAAC,eAAe,KAAK,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;YAC5D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;SACvD;IACH,CAAC;IAEM,mCAAM,GAAb;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IACH,yBAAC;AAAD,CAAC,AApCD,CAAwC,KAAK,CAAC,aAAa,GAoC1D","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport * as React from 'react';\n\nexport interface Rect {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n}\n\ninterface MeasureableProps {\n  children: (measureRef: React.Ref<HTMLElement>) => React.ReactNode;\n  register: (key: any, element: MeasurableItemView | null) => void;\n  registrationKey: any;\n}\n\nexport class MeasurableItemView extends React.PureComponent<MeasureableProps, {}> {\n  public childRef = React.createRef<HTMLElement>();\n\n  public getOffsetRect = (): Rect | null => {\n    const currentElement = this.childRef.current;\n\n    if (currentElement === null) {\n      return null;\n    }\n\n    return {\n      height: currentElement.offsetHeight,\n      left: currentElement.offsetLeft,\n      top: currentElement.offsetTop,\n      width: currentElement.offsetWidth,\n    };\n  };\n\n  public componentDidMount() {\n    this.props.register(this.props.registrationKey, this);\n  }\n\n  public componentWillUnmount() {\n    this.props.register(this.props.registrationKey, null);\n  }\n\n  public componentDidUpdate(prevProps: MeasureableProps) {\n    if (prevProps.registrationKey !== this.props.registrationKey) {\n      this.props.register(prevProps.registrationKey, null);\n      this.props.register(this.props.registrationKey, this);\n    }\n  }\n\n  public render() {\n    return this.props.children(this.childRef);\n  }\n}\n"]}]}