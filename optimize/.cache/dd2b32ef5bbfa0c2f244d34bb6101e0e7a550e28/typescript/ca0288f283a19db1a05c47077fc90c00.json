{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/components/spaces_menu.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/components/spaces_menu.tsx","mtime":1567631712312},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiContextMenuItem, EuiContextMenuPanel, EuiFieldSearch, EuiText } from '@elastic/eui';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport React, { Component } from 'react';\nimport { SPACE_SEARCH_COUNT_THRESHOLD } from '../../../../common/constants';\nimport { ManageSpacesButton, SpaceAvatar } from '../../../components';\nvar SpacesMenuUI = /** @class */ (function (_super) {\n    tslib_1.__extends(SpacesMenuUI, _super);\n    function SpacesMenuUI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            searchTerm: '',\n            allowSpacesListFocus: false,\n        };\n        _this.getVisibleSpaces = function (searchTerm) {\n            var spaces = _this.props.spaces;\n            var filteredSpaces = spaces;\n            if (searchTerm) {\n                filteredSpaces = spaces.filter(function (space) {\n                    var name = space.name, _a = space.description, description = _a === void 0 ? '' : _a;\n                    return (name.toLowerCase().indexOf(searchTerm) >= 0 ||\n                        description.toLowerCase().indexOf(searchTerm) >= 0);\n                });\n            }\n            return filteredSpaces;\n        };\n        _this.renderSpacesListPanel = function (items, searchTerm) {\n            if (items.length === 0) {\n                return (React.createElement(EuiText, { color: \"subdued\", className: \"eui-textCenter\" },\n                    React.createElement(FormattedMessage, { id: \"xpack.spaces.navControl.spacesMenu.noSpacesFoundTitle\", defaultMessage: \" no spaces found \" })));\n            }\n            return (React.createElement(EuiContextMenuPanel, { key: \"spcMenuList\", \"data-search-term\": searchTerm, className: \"spcMenu__spacesList\", hasFocus: _this.state.allowSpacesListFocus, initialFocusedItemIndex: _this.state.allowSpacesListFocus ? 0 : undefined, items: items }));\n        };\n        _this.renderSearchField = function () {\n            var intl = _this.props.intl;\n            return (React.createElement(\"div\", { key: \"manageSpacesSearchField\", className: \"spcMenu__searchFieldWrapper\" },\n                React.createElement(EuiFieldSearch, { placeholder: intl.formatMessage({\n                        id: 'xpack.spaces.navControl.spacesMenu.findSpacePlaceholder',\n                        defaultMessage: 'Find a space',\n                    }), incremental: true, \n                    // FIXME needs updated typedef\n                    // @ts-ignore\n                    onSearch: _this.onSearch, onKeyDown: _this.onSearchKeyDown, onFocus: _this.onSearchFocus, compressed: true })));\n        };\n        _this.onSearchKeyDown = function (e) {\n            //  9: tab\n            // 13: enter\n            // 40: arrow-down\n            var focusableKeyCodes = [9, 13, 40];\n            var keyCode = e.keyCode;\n            if (focusableKeyCodes.includes(keyCode)) {\n                // Allows the spaces list panel to recieve focus. This enables keyboard and screen reader navigation\n                _this.setState({\n                    allowSpacesListFocus: true,\n                });\n            }\n        };\n        _this.onSearchFocus = function () {\n            _this.setState({\n                allowSpacesListFocus: false,\n            });\n        };\n        _this.renderManageButton = function () {\n            return (React.createElement(ManageSpacesButton, { key: \"manageSpacesButton\", className: \"spcMenu__manageButton\", size: \"s\", userProfile: _this.props.userProfile, onClick: _this.props.onManageSpacesClick }));\n        };\n        _this.onSearch = function (searchTerm) {\n            _this.setState({\n                searchTerm: searchTerm.trim().toLowerCase(),\n            });\n        };\n        _this.renderSpaceMenuItem = function (space) {\n            var icon = React.createElement(SpaceAvatar, { space: space, size: 's' });\n            return (React.createElement(EuiContextMenuItem, { key: space.id, icon: icon, onClick: _this.props.onSelectSpace.bind(_this, space), toolTipTitle: space.description && space.name, toolTipContent: space.description }, space.name));\n        };\n        return _this;\n    }\n    SpacesMenuUI.prototype.render = function () {\n        var intl = this.props.intl;\n        var searchTerm = this.state.searchTerm;\n        var items = this.getVisibleSpaces(searchTerm).map(this.renderSpaceMenuItem);\n        var panelProps = {\n            className: 'spcMenu',\n            title: intl.formatMessage({\n                id: 'xpack.spaces.navControl.spacesMenu.changeCurrentSpaceTitle',\n                defaultMessage: 'Change current space',\n            }),\n            watchedItemProps: ['data-search-term'],\n        };\n        if (this.props.spaces.length >= SPACE_SEARCH_COUNT_THRESHOLD) {\n            return (React.createElement(EuiContextMenuPanel, tslib_1.__assign({}, panelProps),\n                this.renderSearchField(),\n                this.renderSpacesListPanel(items, searchTerm),\n                this.renderManageButton()));\n        }\n        items.push(this.renderManageButton());\n        return React.createElement(EuiContextMenuPanel, tslib_1.__assign({}, panelProps, { items: items }));\n    };\n    return SpacesMenuUI;\n}(Component));\nexport var SpacesMenu = injectI18n(SpacesMenuUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/components/spaces_menu.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/nav_control/components/spaces_menu.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiContextMenuItem, EuiContextMenuPanel, EuiFieldSearch, EuiText } from '@elastic/eui';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport React, { Component } from 'react';\nimport { UserProfile } from '../../../../../xpack_main/public/services/user_profile';\nimport { SPACE_SEARCH_COUNT_THRESHOLD } from '../../../../common/constants';\nimport { Space } from '../../../../common/model/space';\nimport { ManageSpacesButton, SpaceAvatar } from '../../../components';\n\ninterface Props {\n  spaces: Space[];\n  onSelectSpace: (space: Space) => void;\n  onManageSpacesClick: () => void;\n  userProfile: UserProfile;\n  intl: InjectedIntl;\n}\n\ninterface State {\n  searchTerm: string;\n  allowSpacesListFocus: boolean;\n}\n\nclass SpacesMenuUI extends Component<Props, State> {\n  public state = {\n    searchTerm: '',\n    allowSpacesListFocus: false,\n  };\n\n  public render() {\n    const { intl } = this.props;\n    const { searchTerm } = this.state;\n\n    const items = this.getVisibleSpaces(searchTerm).map(this.renderSpaceMenuItem);\n\n    const panelProps = {\n      className: 'spcMenu',\n      title: intl.formatMessage({\n        id: 'xpack.spaces.navControl.spacesMenu.changeCurrentSpaceTitle',\n        defaultMessage: 'Change current space',\n      }),\n      watchedItemProps: ['data-search-term'],\n    };\n\n    if (this.props.spaces.length >= SPACE_SEARCH_COUNT_THRESHOLD) {\n      return (\n        <EuiContextMenuPanel {...panelProps}>\n          {this.renderSearchField()}\n          {this.renderSpacesListPanel(items, searchTerm)}\n          {this.renderManageButton()}\n        </EuiContextMenuPanel>\n      );\n    }\n\n    items.push(this.renderManageButton());\n\n    return <EuiContextMenuPanel {...panelProps} items={items} />;\n  }\n\n  private getVisibleSpaces = (searchTerm: string): Space[] => {\n    const { spaces } = this.props;\n\n    let filteredSpaces = spaces;\n    if (searchTerm) {\n      filteredSpaces = spaces.filter(space => {\n        const { name, description = '' } = space;\n        return (\n          name.toLowerCase().indexOf(searchTerm) >= 0 ||\n          description.toLowerCase().indexOf(searchTerm) >= 0\n        );\n      });\n    }\n\n    return filteredSpaces;\n  };\n\n  private renderSpacesListPanel = (items: JSX.Element[], searchTerm: string) => {\n    if (items.length === 0) {\n      return (\n        <EuiText color=\"subdued\" className=\"eui-textCenter\">\n          <FormattedMessage\n            id=\"xpack.spaces.navControl.spacesMenu.noSpacesFoundTitle\"\n            defaultMessage=\" no spaces found \"\n          />\n        </EuiText>\n      );\n    }\n\n    return (\n      <EuiContextMenuPanel\n        key={`spcMenuList`}\n        data-search-term={searchTerm}\n        className=\"spcMenu__spacesList\"\n        hasFocus={this.state.allowSpacesListFocus}\n        initialFocusedItemIndex={this.state.allowSpacesListFocus ? 0 : undefined}\n        items={items}\n      />\n    );\n  };\n\n  private renderSearchField = () => {\n    const { intl } = this.props;\n    return (\n      <div key=\"manageSpacesSearchField\" className=\"spcMenu__searchFieldWrapper\">\n        <EuiFieldSearch\n          placeholder={intl.formatMessage({\n            id: 'xpack.spaces.navControl.spacesMenu.findSpacePlaceholder',\n            defaultMessage: 'Find a space',\n          })}\n          incremental={true}\n          // FIXME needs updated typedef\n          // @ts-ignore\n          onSearch={this.onSearch}\n          onKeyDown={this.onSearchKeyDown}\n          onFocus={this.onSearchFocus}\n          compressed\n        />\n      </div>\n    );\n  };\n\n  private onSearchKeyDown = (e: any) => {\n    //  9: tab\n    // 13: enter\n    // 40: arrow-down\n    const focusableKeyCodes = [9, 13, 40];\n\n    const keyCode = e.keyCode;\n    if (focusableKeyCodes.includes(keyCode)) {\n      // Allows the spaces list panel to recieve focus. This enables keyboard and screen reader navigation\n      this.setState({\n        allowSpacesListFocus: true,\n      });\n    }\n  };\n\n  private onSearchFocus = () => {\n    this.setState({\n      allowSpacesListFocus: false,\n    });\n  };\n\n  private renderManageButton = () => {\n    return (\n      <ManageSpacesButton\n        key=\"manageSpacesButton\"\n        className=\"spcMenu__manageButton\"\n        size=\"s\"\n        userProfile={this.props.userProfile}\n        onClick={this.props.onManageSpacesClick}\n      />\n    );\n  };\n\n  private onSearch = (searchTerm: string) => {\n    this.setState({\n      searchTerm: searchTerm.trim().toLowerCase(),\n    });\n  };\n\n  private renderSpaceMenuItem = (space: Space): JSX.Element => {\n    const icon = <SpaceAvatar space={space} size={'s'} />;\n    return (\n      <EuiContextMenuItem\n        key={space.id}\n        icon={icon}\n        onClick={this.props.onSelectSpace.bind(this, space)}\n        toolTipTitle={space.description && space.name}\n        toolTipContent={space.description}\n      >\n        {space.name}\n      </EuiContextMenuItem>\n    );\n  };\n}\n\nexport const SpacesMenu = injectI18n(SpacesMenuUI);\n"]}]}