{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/loading_state/loading_progress.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/loading_state/loading_progress.ts","mtime":1567631711990},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nexport var isIdleLoadingProgress = function (loadingProgress) { return loadingProgress.progress === 'idle'; };\nexport var isRunningLoadingProgress = function (loadingProgress) { return loadingProgress.progress === 'running'; };\nexport var createIdleProgressReducer = function () { return function (state) { return ({\n    progress: 'idle',\n}); }; };\nexport var createRunningProgressReducer = function () { return function (state, parameters) { return ({\n    parameters: parameters,\n    progress: 'running',\n    time: Date.now(),\n}); }; };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/loading_state/loading_progress.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/utils/loading_state/loading_progress.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAcH,MAAM,CAAC,IAAM,qBAAqB,GAAG,UACnC,eAAmC,IACQ,OAAA,eAAe,CAAC,QAAQ,KAAK,MAAM,EAAnC,CAAmC,CAAC;AAEjF,MAAM,CAAC,IAAM,wBAAwB,GAAG,UACtC,eAAmC,IACc,OAAA,eAAe,CAAC,QAAQ,KAAK,SAAS,EAAtC,CAAsC,CAAC;AAE1F,MAAM,CAAC,IAAM,yBAAyB,GAAG,cAAkB,OAAA,UACzD,KAAkC,IACV,OAAA,CAAC;IACzB,QAAQ,EAAE,MAAM;CACjB,CAAC,EAFwB,CAExB,EAJyD,CAIzD,CAAC;AAEH,MAAM,CAAC,IAAM,4BAA4B,GAAG,cAAkB,OAAA,UAC5D,KAAkC,EAClC,UAAsB,IACiB,OAAA,CAAC;IACxC,UAAU,YAAA;IACV,QAAQ,EAAE,SAAS;IACnB,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE;CACjB,CAAC,EAJuC,CAIvC,EAP4D,CAO5D,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\ninterface IdleLoadingProgress {\n  progress: 'idle';\n}\n\ninterface RunningLoadingProgress<Parameters> {\n  progress: 'running';\n  time: number;\n  parameters: Parameters;\n}\n\nexport type LoadingProgress<Parameters> = IdleLoadingProgress | RunningLoadingProgress<Parameters>;\n\nexport const isIdleLoadingProgress = <P>(\n  loadingProgress: LoadingProgress<P>\n): loadingProgress is IdleLoadingProgress => loadingProgress.progress === 'idle';\n\nexport const isRunningLoadingProgress = <P>(\n  loadingProgress: LoadingProgress<P>\n): loadingProgress is RunningLoadingProgress<P> => loadingProgress.progress === 'running';\n\nexport const createIdleProgressReducer = <Parameters>() => (\n  state: LoadingProgress<Parameters>\n): IdleLoadingProgress => ({\n  progress: 'idle',\n});\n\nexport const createRunningProgressReducer = <Parameters>() => (\n  state: LoadingProgress<Parameters>,\n  parameters: Parameters\n): RunningLoadingProgress<Parameters> => ({\n  parameters,\n  progress: 'running',\n  time: Date.now(),\n});\n"]}]}