{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/lib/adapters/framework/apollo_client_adapter.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/lib/adapters/framework/apollo_client_adapter.ts","mtime":1567631712330},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nexport var createApolloClient = function (uri, xsrfHeader) {\n    return new ApolloClient({\n        link: new HttpLink({ uri: uri, credentials: 'same-origin', headers: { 'kbn-xsrf': xsrfHeader } }),\n        cache: new InMemoryCache({ dataIdFromObject: function () { return undefined; } }),\n    });\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/lib/adapters/framework/apollo_client_adapter.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/lib/adapters/framework/apollo_client_adapter.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAG5C,MAAM,CAAC,IAAM,kBAAkB,GAAwB,UAAC,GAAW,EAAE,UAAkB;IACrF,OAAA,IAAI,YAAY,CAAC;QACf,IAAI,EAAE,IAAI,QAAQ,CAAC,EAAE,GAAG,KAAA,EAAE,WAAW,EAAE,aAAa,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE,CAAC;QAC5F,KAAK,EAAE,IAAI,aAAa,CAAC,EAAE,gBAAgB,EAAE,cAAM,OAAA,SAAS,EAAT,CAAS,EAAE,CAAC;KAChE,CAAC;AAHF,CAGE,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { CreateGraphQLClient } from './framework_adapter_types';\n\nexport const createApolloClient: CreateGraphQLClient = (uri: string, xsrfHeader: string) =>\n  new ApolloClient({\n    link: new HttpLink({ uri, credentials: 'same-origin', headers: { 'kbn-xsrf': xsrfHeader } }),\n    cache: new InMemoryCache({ dataIdFromObject: () => undefined }),\n  });\n"]}]}