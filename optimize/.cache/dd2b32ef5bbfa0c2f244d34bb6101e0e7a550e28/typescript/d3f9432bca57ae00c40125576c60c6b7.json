{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/persisted_log/persisted_log.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/persisted_log/persisted_log.ts","mtime":1567631711748},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport _ from 'lodash';\nimport { Storage } from 'ui/storage';\nvar localStorage = new Storage(window.localStorage);\nvar defaultIsDuplicate = function (oldItem, newItem) {\n    return _.isEqual(oldItem, newItem);\n};\nvar PersistedLog = /** @class */ (function () {\n    function PersistedLog(name, options, storage) {\n        if (options === void 0) { options = {}; }\n        if (storage === void 0) { storage = localStorage; }\n        this.name = name;\n        this.maxLength =\n            typeof options.maxLength === 'string'\n                ? (this.maxLength = parseInt(options.maxLength, 10))\n                : options.maxLength;\n        this.filterDuplicates = options.filterDuplicates || false;\n        this.isDuplicate = options.isDuplicate || defaultIsDuplicate;\n        this.storage = storage;\n        this.items = this.storage.get(this.name) || [];\n        if (this.maxLength !== undefined && !isNaN(this.maxLength)) {\n            this.items = _.take(this.items, this.maxLength);\n        }\n    }\n    PersistedLog.prototype.add = function (val) {\n        var _this = this;\n        if (val == null) {\n            return this.items;\n        }\n        // remove any matching items from the stack if option is set\n        if (this.filterDuplicates) {\n            _.remove(this.items, function (item) {\n                return _this.isDuplicate(item, val);\n            });\n        }\n        this.items.unshift(val);\n        // if maxLength is set, truncate the stack\n        if (this.maxLength && !isNaN(this.maxLength)) {\n            this.items = _.take(this.items, this.maxLength);\n        }\n        // persist the stack\n        this.storage.set(this.name, this.items);\n        return this.items;\n    };\n    PersistedLog.prototype.get = function () {\n        return _.cloneDeep(this.items);\n    };\n    return PersistedLog;\n}());\nexport { PersistedLog };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/persisted_log/persisted_log.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/persisted_log/persisted_log.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAEH,OAAO,CAAC,MAAM,QAAQ,CAAC;AACvB,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAErC,IAAM,YAAY,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AAEtD,IAAM,kBAAkB,GAAG,UAAC,OAAY,EAAE,OAAY;IACpD,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACrC,CAAC,CAAC;AAQF;IAQE,sBAAY,IAAY,EAAE,OAAoC,EAAE,OAAsB;QAA5D,wBAAA,EAAA,YAAoC;QAAE,wBAAA,EAAA,sBAAsB;QACpF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS;YACZ,OAAO,OAAO,CAAC,SAAS,KAAK,QAAQ;gBACnC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;gBACpD,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;QACxB,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,gBAAgB,IAAI,KAAK,CAAC;QAC1D,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,kBAAkB,CAAC;QAC7D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAC/C,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC1D,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjD;IACH,CAAC;IAEM,0BAAG,GAAV,UAAW,GAAQ;QAAnB,iBAsBC;QArBC,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAED,4DAA4D;QAC5D,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAA,IAAI;gBACvB,OAAO,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAExB,0CAA0C;QAC1C,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC5C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjD;QAED,oBAAoB;QACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAEM,0BAAG,GAAV;QACE,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IACH,mBAAC;AAAD,CAAC,AAlDD,IAkDC","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport _ from 'lodash';\nimport { Storage } from 'ui/storage';\n\nconst localStorage = new Storage(window.localStorage);\n\nconst defaultIsDuplicate = (oldItem: any, newItem: any) => {\n  return _.isEqual(oldItem, newItem);\n};\n\ninterface PersistedLogOptions<T = any> {\n  maxLength?: number | string;\n  filterDuplicates?: boolean;\n  isDuplicate?: (oldItem: T, newItem: T) => boolean;\n}\n\nexport class PersistedLog<T = any> {\n  public name: string;\n  public maxLength?: number;\n  public filterDuplicates?: boolean;\n  public isDuplicate: (oldItem: T, newItem: T) => boolean;\n  public storage: Storage;\n  public items: T[];\n\n  constructor(name: string, options: PersistedLogOptions<T> = {}, storage = localStorage) {\n    this.name = name;\n    this.maxLength =\n      typeof options.maxLength === 'string'\n        ? (this.maxLength = parseInt(options.maxLength, 10))\n        : options.maxLength;\n    this.filterDuplicates = options.filterDuplicates || false;\n    this.isDuplicate = options.isDuplicate || defaultIsDuplicate;\n    this.storage = storage;\n    this.items = this.storage.get(this.name) || [];\n    if (this.maxLength !== undefined && !isNaN(this.maxLength)) {\n      this.items = _.take(this.items, this.maxLength);\n    }\n  }\n\n  public add(val: any) {\n    if (val == null) {\n      return this.items;\n    }\n\n    // remove any matching items from the stack if option is set\n    if (this.filterDuplicates) {\n      _.remove(this.items, item => {\n        return this.isDuplicate(item, val);\n      });\n    }\n\n    this.items.unshift(val);\n\n    // if maxLength is set, truncate the stack\n    if (this.maxLength && !isNaN(this.maxLength)) {\n      this.items = _.take(this.items, this.maxLength);\n    }\n\n    // persist the stack\n    this.storage.set(this.name, this.items);\n    return this.items;\n  }\n\n  public get() {\n    return _.cloneDeep(this.items);\n  }\n}\n"]}]}