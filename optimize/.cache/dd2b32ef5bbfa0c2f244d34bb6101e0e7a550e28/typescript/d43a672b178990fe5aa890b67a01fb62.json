{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_position/selectors.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_position/selectors.ts","mtime":1567631711988},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { createSelector } from 'reselect';\nexport var selectTargetPosition = function (state) { return state.targetPosition; };\nexport var selectIsAutoReloading = function (state) {\n    return state.updatePolicy.policy === 'interval';\n};\nexport var selectFirstVisiblePosition = function (state) {\n    return state.visiblePositions.startKey ? state.visiblePositions.startKey : null;\n};\nexport var selectMiddleVisiblePosition = function (state) {\n    return state.visiblePositions.middleKey ? state.visiblePositions.middleKey : null;\n};\nexport var selectLastVisiblePosition = function (state) {\n    return state.visiblePositions.endKey ? state.visiblePositions.endKey : null;\n};\nexport var selectVisibleMidpointOrTarget = createSelector(selectMiddleVisiblePosition, selectTargetPosition, function (middleVisiblePosition, targetPosition) {\n    if (middleVisiblePosition) {\n        return middleVisiblePosition;\n    }\n    else if (targetPosition) {\n        return targetPosition;\n    }\n    else {\n        return null;\n    }\n});\nexport var selectVisibleMidpointOrTargetTime = createSelector(selectVisibleMidpointOrTarget, function (visibleMidpointOrTarget) { return (visibleMidpointOrTarget ? visibleMidpointOrTarget.time : null); });\nexport var selectVisibleTimeInterval = createSelector(selectFirstVisiblePosition, selectLastVisiblePosition, function (firstVisiblePosition, lastVisiblePosition) {\n    return firstVisiblePosition && lastVisiblePosition\n        ? {\n            start: firstVisiblePosition.time,\n            end: lastVisiblePosition.time,\n        }\n        : null;\n});\nexport var selectVisibleSummary = function (state) { return state.visibleSummary; };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_position/selectors.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_position/selectors.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAI1C,MAAM,CAAC,IAAM,oBAAoB,GAAG,UAAC,KAAuB,IAAK,OAAA,KAAK,CAAC,cAAc,EAApB,CAAoB,CAAC;AAEtF,MAAM,CAAC,IAAM,qBAAqB,GAAG,UAAC,KAAuB;IAC3D,OAAA,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,UAAU;AAAxC,CAAwC,CAAC;AAE3C,MAAM,CAAC,IAAM,0BAA0B,GAAG,UAAC,KAAuB;IAChE,OAAA,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;AAAxE,CAAwE,CAAC;AAE3E,MAAM,CAAC,IAAM,2BAA2B,GAAG,UAAC,KAAuB;IACjE,OAAA,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;AAA1E,CAA0E,CAAC;AAE7E,MAAM,CAAC,IAAM,yBAAyB,GAAG,UAAC,KAAuB;IAC/D,OAAA,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI;AAApE,CAAoE,CAAC;AAEvE,MAAM,CAAC,IAAM,6BAA6B,GAAG,cAAc,CACzD,2BAA2B,EAC3B,oBAAoB,EACpB,UAAC,qBAAqB,EAAE,cAAc;IACpC,IAAI,qBAAqB,EAAE;QACzB,OAAO,qBAAqB,CAAC;KAC9B;SAAM,IAAI,cAAc,EAAE;QACzB,OAAO,cAAc,CAAC;KACvB;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CACF,CAAC;AAEF,MAAM,CAAC,IAAM,iCAAiC,GAAG,cAAc,CAC7D,6BAA6B,EAC7B,UAAA,uBAAuB,IAAI,OAAA,CAAC,uBAAuB,CAAC,CAAC,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAA/D,CAA+D,CAC3F,CAAC;AAEF,MAAM,CAAC,IAAM,yBAAyB,GAAG,cAAc,CACrD,0BAA0B,EAC1B,yBAAyB,EACzB,UAAC,oBAAoB,EAAE,mBAAmB;IACxC,OAAA,oBAAoB,IAAI,mBAAmB;QACzC,CAAC,CAAC;YACE,KAAK,EAAE,oBAAoB,CAAC,IAAI;YAChC,GAAG,EAAE,mBAAmB,CAAC,IAAI;SAC9B;QACH,CAAC,CAAC,IAAI;AALR,CAKQ,CACX,CAAC;AAEF,MAAM,CAAC,IAAM,oBAAoB,GAAG,UAAC,KAAuB,IAAK,OAAA,KAAK,CAAC,cAAc,EAApB,CAAoB,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { createSelector } from 'reselect';\n\nimport { LogPositionState } from './reducer';\n\nexport const selectTargetPosition = (state: LogPositionState) => state.targetPosition;\n\nexport const selectIsAutoReloading = (state: LogPositionState) =>\n  state.updatePolicy.policy === 'interval';\n\nexport const selectFirstVisiblePosition = (state: LogPositionState) =>\n  state.visiblePositions.startKey ? state.visiblePositions.startKey : null;\n\nexport const selectMiddleVisiblePosition = (state: LogPositionState) =>\n  state.visiblePositions.middleKey ? state.visiblePositions.middleKey : null;\n\nexport const selectLastVisiblePosition = (state: LogPositionState) =>\n  state.visiblePositions.endKey ? state.visiblePositions.endKey : null;\n\nexport const selectVisibleMidpointOrTarget = createSelector(\n  selectMiddleVisiblePosition,\n  selectTargetPosition,\n  (middleVisiblePosition, targetPosition) => {\n    if (middleVisiblePosition) {\n      return middleVisiblePosition;\n    } else if (targetPosition) {\n      return targetPosition;\n    } else {\n      return null;\n    }\n  }\n);\n\nexport const selectVisibleMidpointOrTargetTime = createSelector(\n  selectVisibleMidpointOrTarget,\n  visibleMidpointOrTarget => (visibleMidpointOrTarget ? visibleMidpointOrTarget.time : null)\n);\n\nexport const selectVisibleTimeInterval = createSelector(\n  selectFirstVisiblePosition,\n  selectLastVisiblePosition,\n  (firstVisiblePosition, lastVisiblePosition) =>\n    firstVisiblePosition && lastVisiblePosition\n      ? {\n          start: firstVisiblePosition.time,\n          end: lastVisiblePosition.time,\n        }\n      : null\n);\n\nexport const selectVisibleSummary = (state: LogPositionState) => state.visibleSummary;\n"]}]}