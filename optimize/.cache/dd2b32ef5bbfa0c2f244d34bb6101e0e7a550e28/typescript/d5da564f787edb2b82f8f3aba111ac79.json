{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/delete_spaces_button.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/delete_spaces_button.tsx","mtime":1567631712311},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButton, EuiButtonIcon } from '@elastic/eui';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport React, { Component, Fragment } from 'react';\n// @ts-ignore\nimport { toastNotifications } from 'ui/notify';\nimport { ConfirmDeleteModal } from '../components/confirm_delete_modal';\nvar DeleteSpacesButtonUI = /** @class */ (function (_super) {\n    tslib_1.__extends(DeleteSpacesButtonUI, _super);\n    function DeleteSpacesButtonUI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            showConfirmDeleteModal: false,\n            showConfirmRedirectModal: false,\n        };\n        _this.onDeleteClick = function () {\n            _this.setState({\n                showConfirmDeleteModal: true,\n            });\n        };\n        _this.getConfirmDeleteModal = function () {\n            if (!_this.state.showConfirmDeleteModal) {\n                return null;\n            }\n            var _a = _this.props, spacesNavState = _a.spacesNavState, spacesManager = _a.spacesManager;\n            return (React.createElement(ConfirmDeleteModal, { space: _this.props.space, spacesNavState: spacesNavState, spacesManager: spacesManager, onCancel: function () {\n                    _this.setState({\n                        showConfirmDeleteModal: false,\n                    });\n                }, onConfirm: _this.deleteSpaces }));\n        };\n        _this.deleteSpaces = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var _a, spacesManager, space, spacesNavState, intl, error_1, _b, errorMessage, message;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.props, spacesManager = _a.spacesManager, space = _a.space, spacesNavState = _a.spacesNavState, intl = _a.intl;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, spacesManager.deleteSpace(space)];\n                    case 2:\n                        _c.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _c.sent();\n                        _b = (error_1.data || {}).message, errorMessage = _b === void 0 ? '' : _b;\n                        toastNotifications.addDanger(intl.formatMessage({\n                            id: 'xpack.spaces.management.deleteSpacesButton.deleteSpaceErrorTitle',\n                            defaultMessage: 'Error deleting space: {errorMessage}',\n                        }, {\n                            errorMessage: errorMessage,\n                        }));\n                        return [3 /*break*/, 4];\n                    case 4:\n                        this.setState({\n                            showConfirmDeleteModal: false,\n                        });\n                        message = intl.formatMessage({\n                            id: 'xpack.spaces.management.deleteSpacesButton.spaceSuccessfullyDeletedNotificationMessage',\n                            defaultMessage: 'Deleted {spaceName} space.',\n                        }, {\n                            spaceName: space.name,\n                        });\n                        toastNotifications.addSuccess(message);\n                        if (this.props.onDelete) {\n                            this.props.onDelete();\n                        }\n                        spacesNavState.refreshSpacesList();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        return _this;\n    }\n    DeleteSpacesButtonUI.prototype.render = function () {\n        var buttonText = (React.createElement(FormattedMessage, { id: \"xpack.spaces.management.deleteSpacesButton.deleteSpaceButtonLabel\", defaultMessage: \"Delete space\" }));\n        var intl = this.props.intl;\n        var ButtonComponent = EuiButton;\n        var extraProps = {};\n        if (this.props.style === 'icon') {\n            ButtonComponent = EuiButtonIcon;\n            extraProps.iconType = 'trash';\n        }\n        return (React.createElement(Fragment, null,\n            React.createElement(ButtonComponent, tslib_1.__assign({ color: 'danger', onClick: this.onDeleteClick, \"aria-label\": intl.formatMessage({\n                    id: 'xpack.spaces.management.deleteSpacesButton.deleteSpaceAriaLabel',\n                    defaultMessage: 'Delete this space',\n                }) }, extraProps), buttonText),\n            this.getConfirmDeleteModal()));\n    };\n    return DeleteSpacesButtonUI;\n}(Component));\nexport var DeleteSpacesButton = injectI18n(DeleteSpacesButtonUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/delete_spaces_button.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/delete_spaces_button.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiButton, EuiButtonIcon, EuiButtonIconProps } from '@elastic/eui';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport { SpacesNavState } from 'plugins/spaces/views/nav_control';\nimport React, { Component, Fragment } from 'react';\n// @ts-ignore\nimport { toastNotifications } from 'ui/notify';\nimport { Space } from '../../../../common/model/space';\nimport { SpacesManager } from '../../../lib/spaces_manager';\nimport { ConfirmDeleteModal } from '../components/confirm_delete_modal';\n\ninterface Props {\n  style?: 'button' | 'icon';\n  space: Space;\n  spacesManager: SpacesManager;\n  spacesNavState: SpacesNavState;\n  onDelete: () => void;\n  intl: InjectedIntl;\n}\n\ninterface State {\n  showConfirmDeleteModal: boolean;\n  showConfirmRedirectModal: boolean;\n}\n\nclass DeleteSpacesButtonUI extends Component<Props, State> {\n  public state = {\n    showConfirmDeleteModal: false,\n    showConfirmRedirectModal: false,\n  };\n\n  public render() {\n    const buttonText = (\n      <FormattedMessage\n        id=\"xpack.spaces.management.deleteSpacesButton.deleteSpaceButtonLabel\"\n        defaultMessage=\"Delete space\"\n      />\n    );\n    const { intl } = this.props;\n\n    let ButtonComponent: any = EuiButton;\n\n    const extraProps: EuiButtonIconProps = {};\n\n    if (this.props.style === 'icon') {\n      ButtonComponent = EuiButtonIcon;\n      extraProps.iconType = 'trash';\n    }\n\n    return (\n      <Fragment>\n        <ButtonComponent\n          color={'danger'}\n          onClick={this.onDeleteClick}\n          aria-label={intl.formatMessage({\n            id: 'xpack.spaces.management.deleteSpacesButton.deleteSpaceAriaLabel',\n            defaultMessage: 'Delete this space',\n          })}\n          {...extraProps}\n        >\n          {buttonText}\n        </ButtonComponent>\n        {this.getConfirmDeleteModal()}\n      </Fragment>\n    );\n  }\n\n  public onDeleteClick = () => {\n    this.setState({\n      showConfirmDeleteModal: true,\n    });\n  };\n\n  public getConfirmDeleteModal = () => {\n    if (!this.state.showConfirmDeleteModal) {\n      return null;\n    }\n\n    const { spacesNavState, spacesManager } = this.props;\n\n    return (\n      <ConfirmDeleteModal\n        space={this.props.space}\n        spacesNavState={spacesNavState}\n        spacesManager={spacesManager}\n        onCancel={() => {\n          this.setState({\n            showConfirmDeleteModal: false,\n          });\n        }}\n        onConfirm={this.deleteSpaces}\n      />\n    );\n  };\n\n  public deleteSpaces = async () => {\n    const { spacesManager, space, spacesNavState, intl } = this.props;\n\n    try {\n      await spacesManager.deleteSpace(space);\n    } catch (error) {\n      const { message: errorMessage = '' } = error.data || {};\n\n      toastNotifications.addDanger(\n        intl.formatMessage(\n          {\n            id: 'xpack.spaces.management.deleteSpacesButton.deleteSpaceErrorTitle',\n            defaultMessage: 'Error deleting space: {errorMessage}',\n          },\n          {\n            errorMessage,\n          }\n        )\n      );\n    }\n\n    this.setState({\n      showConfirmDeleteModal: false,\n    });\n\n    const message = intl.formatMessage(\n      {\n        id:\n          'xpack.spaces.management.deleteSpacesButton.spaceSuccessfullyDeletedNotificationMessage',\n        defaultMessage: 'Deleted {spaceName} space.',\n      },\n      {\n        spaceName: space.name,\n      }\n    );\n\n    toastNotifications.addSuccess(message);\n\n    if (this.props.onDelete) {\n      this.props.onDelete();\n    }\n\n    spacesNavState.refreshSpacesList();\n  };\n}\n\nexport const DeleteSpacesButton = injectI18n(DeleteSpacesButtonUI);\n"]}]}