{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionOverview/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionOverview/index.tsx","mtime":1567631711863},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiFormRow, EuiSelect, EuiSpacer } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { TransactionCharts } from 'x-pack/plugins/apm/public/components/shared/charts/TransactionCharts';\nimport { legacyEncodeURIComponent } from 'x-pack/plugins/apm/public/components/shared/Links/url_helpers';\nimport { TransactionListRequest } from 'x-pack/plugins/apm/public/store/reactReduxRequest/transactionList';\nimport { TransactionOverviewChartsRequest } from 'x-pack/plugins/apm/public/store/reactReduxRequest/transactionOverviewCharts';\nimport { TransactionList } from './List';\nvar TransactionOverviewView = /** @class */ (function (_super) {\n    tslib_1.__extends(TransactionOverviewView, _super);\n    function TransactionOverviewView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleTypeChange = function (event) {\n            var _a = _this.props, urlParams = _a.urlParams, history = _a.history, location = _a.location;\n            var type = legacyEncodeURIComponent(event.target.value);\n            history.push(tslib_1.__assign({}, location, { pathname: \"/\" + urlParams.serviceName + \"/transactions/\" + type }));\n        };\n        return _this;\n    }\n    TransactionOverviewView.prototype.render = function () {\n        var _a = this.props, urlParams = _a.urlParams, serviceTransactionTypes = _a.serviceTransactionTypes, location = _a.location;\n        var serviceName = urlParams.serviceName, transactionType = urlParams.transactionType;\n        // filtering by type is currently required\n        if (!serviceName || !transactionType) {\n            return null;\n        }\n        return (React.createElement(React.Fragment, null,\n            serviceTransactionTypes.length > 1 ? (React.createElement(EuiFormRow, { label: i18n.translate('xpack.apm.transactionsTable.filterByTypeLabel', {\n                    defaultMessage: 'Filter by type'\n                }) },\n                React.createElement(EuiSelect, { options: serviceTransactionTypes.map(function (type) { return ({\n                        text: \"\" + type,\n                        value: type\n                    }); }), value: transactionType, onChange: this.handleTypeChange }))) : null,\n            React.createElement(TransactionOverviewChartsRequest, { urlParams: urlParams, render: function (_a) {\n                    var data = _a.data;\n                    return (React.createElement(TransactionCharts, { charts: data, location: location, urlParams: urlParams }));\n                } }),\n            React.createElement(EuiSpacer, { size: \"l\" }),\n            React.createElement(TransactionListRequest, { urlParams: urlParams, render: function (_a) {\n                    var data = _a.data;\n                    return (React.createElement(TransactionList, { items: data, serviceName: serviceName }));\n                } })));\n    };\n    return TransactionOverviewView;\n}(React.Component));\nexport { TransactionOverviewView };\nexport var TransactionOverview = withRouter(TransactionOverviewView);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionOverview/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TransactionOverview/index.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAChE,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAuB,UAAU,EAAE,MAAM,kBAAkB,CAAC;AACnE,OAAO,EAAE,iBAAiB,EAAE,MAAM,sEAAsE,CAAC;AACzG,OAAO,EAAE,wBAAwB,EAAE,MAAM,+DAA+D,CAAC;AACzG,OAAO,EAAE,sBAAsB,EAAE,MAAM,mEAAmE,CAAC;AAC3G,OAAO,EAAE,gCAAgC,EAAE,MAAM,6EAA6E,CAAC;AAE/H,OAAO,EAAE,eAAe,EAAE,MAAM,QAAQ,CAAC;AAOzC;IAA6C,mDAE5C;IAFD;QAAA,qEAiEC;QA9DQ,sBAAgB,GAAG,UAAC,KAA2C;YAC9D,IAAA,gBAA6C,EAA3C,wBAAS,EAAE,oBAAO,EAAE,sBAAQ,CAAgB;YACpD,IAAM,IAAI,GAAG,wBAAwB,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC1D,OAAO,CAAC,IAAI,sBACP,QAAQ,IACX,QAAQ,EAAE,MAAI,SAAS,CAAC,WAAW,sBAAiB,IAAM,IAC1D,CAAC;QACL,CAAC,CAAC;;IAuDJ,CAAC;IArDQ,wCAAM,GAAb;QACQ,IAAA,eAA6D,EAA3D,wBAAS,EAAE,oDAAuB,EAAE,sBAAQ,CAAgB;QAC5D,IAAA,mCAAW,EAAE,2CAAe,CAAe;QAEnD,0CAA0C;QAC1C,IAAI,CAAC,WAAW,IAAI,CAAC,eAAe,EAAE;YACpC,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CACL,oBAAC,KAAK,CAAC,QAAQ;YACZ,uBAAuB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CACpC,oBAAC,UAAU,IACT,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,+CAA+C,EAC/C;oBACE,cAAc,EAAE,gBAAgB;iBACjC,CACF;gBAED,oBAAC,SAAS,IACR,OAAO,EAAE,uBAAuB,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC;wBAC5C,IAAI,EAAE,KAAG,IAAM;wBACf,KAAK,EAAE,IAAI;qBACZ,CAAC,EAH2C,CAG3C,CAAC,EACH,KAAK,EAAE,eAAe,EACtB,QAAQ,EAAE,IAAI,CAAC,gBAAgB,GAC/B,CACS,CACd,CAAC,CAAC,CAAC,IAAI;YAER,oBAAC,gCAAgC,IAC/B,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,UAAC,EAAQ;wBAAN,cAAI;oBAAO,OAAA,CACpB,oBAAC,iBAAiB,IAChB,MAAM,EAAE,IAAI,EACZ,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,SAAS,GACpB,CACH;gBANqB,CAMrB,GACD;YAEF,oBAAC,SAAS,IAAC,IAAI,EAAC,GAAG,GAAG;YAEtB,oBAAC,sBAAsB,IACrB,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,UAAC,EAAQ;wBAAN,cAAI;oBAAO,OAAA,CACpB,oBAAC,eAAe,IAAC,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,GAAI,CAC3D;gBAFqB,CAErB,GACD,CACa,CAClB,CAAC;IACJ,CAAC;IACH,8BAAC;AAAD,CAAC,AAjED,CAA6C,KAAK,CAAC,SAAS,GAiE3D;;AAED,MAAM,CAAC,IAAM,mBAAmB,GAAG,UAAU,CAAC,uBAAuB,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiFormRow, EuiSelect, EuiSpacer } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { TransactionCharts } from 'x-pack/plugins/apm/public/components/shared/charts/TransactionCharts';\nimport { legacyEncodeURIComponent } from 'x-pack/plugins/apm/public/components/shared/Links/url_helpers';\nimport { TransactionListRequest } from 'x-pack/plugins/apm/public/store/reactReduxRequest/transactionList';\nimport { TransactionOverviewChartsRequest } from 'x-pack/plugins/apm/public/store/reactReduxRequest/transactionOverviewCharts';\nimport { IUrlParams } from 'x-pack/plugins/apm/public/store/urlParams';\nimport { TransactionList } from './List';\n\ninterface TransactionOverviewProps extends RouteComponentProps {\n  urlParams: IUrlParams;\n  serviceTransactionTypes: string[];\n}\n\nexport class TransactionOverviewView extends React.Component<\n  TransactionOverviewProps\n> {\n  public handleTypeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { urlParams, history, location } = this.props;\n    const type = legacyEncodeURIComponent(event.target.value);\n    history.push({\n      ...location,\n      pathname: `/${urlParams.serviceName}/transactions/${type}`\n    });\n  };\n\n  public render() {\n    const { urlParams, serviceTransactionTypes, location } = this.props;\n    const { serviceName, transactionType } = urlParams;\n\n    // filtering by type is currently required\n    if (!serviceName || !transactionType) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        {serviceTransactionTypes.length > 1 ? (\n          <EuiFormRow\n            label={i18n.translate(\n              'xpack.apm.transactionsTable.filterByTypeLabel',\n              {\n                defaultMessage: 'Filter by type'\n              }\n            )}\n          >\n            <EuiSelect\n              options={serviceTransactionTypes.map(type => ({\n                text: `${type}`,\n                value: type\n              }))}\n              value={transactionType}\n              onChange={this.handleTypeChange}\n            />\n          </EuiFormRow>\n        ) : null}\n\n        <TransactionOverviewChartsRequest\n          urlParams={urlParams}\n          render={({ data }) => (\n            <TransactionCharts\n              charts={data}\n              location={location}\n              urlParams={urlParams}\n            />\n          )}\n        />\n\n        <EuiSpacer size=\"l\" />\n\n        <TransactionListRequest\n          urlParams={urlParams}\n          render={({ data }) => (\n            <TransactionList items={data} serviceName={serviceName} />\n          )}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport const TransactionOverview = withRouter(TransactionOverviewView);\n"]}]}