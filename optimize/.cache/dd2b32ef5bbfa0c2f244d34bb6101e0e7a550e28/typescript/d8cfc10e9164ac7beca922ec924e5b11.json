{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/Main/routeConfig.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/Main/routeConfig.tsx","mtime":1567631711860},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { legacyDecodeURIComponent } from 'x-pack/plugins/apm/public/components/shared/Links/url_helpers';\n// @ts-ignore\nimport ErrorGroupDetails from '../ErrorGroupDetails';\nimport { ServiceDetails } from '../ServiceDetails';\nimport { TransactionDetails } from '../TransactionDetails';\nimport { Home } from './Home';\nvar renderAsRedirectTo = function (to) {\n    return function (_a) {\n        var location = _a.location;\n        return (React.createElement(Redirect, { to: tslib_1.__assign({}, location, { pathname: to }) }));\n    };\n};\nexport var routes = [\n    {\n        exact: true,\n        path: '/',\n        render: renderAsRedirectTo('/services'),\n        breadcrumb: 'APM'\n    },\n    {\n        exact: true,\n        path: '/:serviceName/errors/:groupId',\n        component: ErrorGroupDetails,\n        breadcrumb: function (_a) {\n            var match = _a.match;\n            return match.params.groupId;\n        }\n    },\n    {\n        exact: true,\n        path: '/:serviceName/errors',\n        component: ServiceDetails,\n        breadcrumb: i18n.translate('xpack.apm.breadcrumb.errorsTitle', {\n            defaultMessage: 'Errors'\n        })\n    },\n    {\n        switch: true,\n        routes: [\n            {\n                exact: true,\n                path: '/invalid-license',\n                breadcrumb: i18n.translate('xpack.apm.breadcrumb.invalidLicenseTitle', {\n                    defaultMessage: 'Invalid License'\n                }),\n                render: function () { return (React.createElement(\"div\", null, i18n.translate('xpack.apm.invalidLicenseLabel', {\n                    defaultMessage: 'Invalid license'\n                }))); }\n            },\n            {\n                exact: true,\n                path: '/services',\n                component: Home,\n                breadcrumb: i18n.translate('xpack.apm.breadcrumb.servicesTitle', {\n                    defaultMessage: 'Services'\n                })\n            },\n            {\n                exact: true,\n                path: '/traces',\n                component: Home,\n                breadcrumb: i18n.translate('xpack.apm.breadcrumb.tracesTitle', {\n                    defaultMessage: 'Traces'\n                })\n            },\n            {\n                exact: true,\n                path: '/:serviceName',\n                breadcrumb: function (_a) {\n                    var match = _a.match;\n                    return match.params.serviceName;\n                },\n                render: function (props) {\n                    return renderAsRedirectTo(\"/\" + props.match.params.serviceName + \"/transactions\")(props);\n                }\n            }\n        ]\n    },\n    {\n        exact: true,\n        path: '/:serviceName/transactions',\n        component: ServiceDetails,\n        breadcrumb: i18n.translate('xpack.apm.breadcrumb.transactionsTitle', {\n            defaultMessage: 'Transactions'\n        })\n    },\n    // Have to split this out as its own route to prevent duplicate breadcrumbs from both matching\n    // if we use :transactionType? as a single route here\n    {\n        exact: true,\n        path: '/:serviceName/transactions/:transactionType',\n        component: ServiceDetails,\n        breadcrumb: null\n    },\n    {\n        exact: true,\n        path: '/:serviceName/metrics',\n        component: ServiceDetails,\n        breadcrumb: i18n.translate('xpack.apm.breadcrumb.metricsTitle', {\n            defaultMessage: 'Metrics'\n        })\n    },\n    {\n        exact: true,\n        path: '/:serviceName/transactions/:transactionType/:transactionName',\n        component: TransactionDetails,\n        breadcrumb: function (_a) {\n            var match = _a.match;\n            return legacyDecodeURIComponent(match.params.transactionName);\n        }\n    }\n];\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/Main/routeConfig.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/Main/routeConfig.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport { legacyDecodeURIComponent } from 'x-pack/plugins/apm/public/components/shared/Links/url_helpers';\nimport { StringMap } from '../../../../typings/common';\n// @ts-ignore\nimport ErrorGroupDetails from '../ErrorGroupDetails';\nimport { ServiceDetails } from '../ServiceDetails';\nimport { TransactionDetails } from '../TransactionDetails';\nimport { Home } from './Home';\n\ninterface BreadcrumbArgs {\n  match: {\n    params: StringMap;\n  };\n}\n\ninterface RouteParams {\n  serviceName: string;\n}\n\nconst renderAsRedirectTo = (to: string) => {\n  return ({ location }: RouteComponentProps<RouteParams>) => (\n    <Redirect\n      to={{\n        ...location,\n        pathname: to\n      }}\n    />\n  );\n};\n\nexport const routes = [\n  {\n    exact: true,\n    path: '/',\n    render: renderAsRedirectTo('/services'),\n    breadcrumb: 'APM'\n  },\n  {\n    exact: true,\n    path: '/:serviceName/errors/:groupId',\n    component: ErrorGroupDetails,\n    breadcrumb: ({ match }: BreadcrumbArgs) => match.params.groupId\n  },\n  {\n    exact: true,\n    path: '/:serviceName/errors',\n    component: ServiceDetails,\n    breadcrumb: i18n.translate('xpack.apm.breadcrumb.errorsTitle', {\n      defaultMessage: 'Errors'\n    })\n  },\n  {\n    switch: true,\n    routes: [\n      {\n        exact: true,\n        path: '/invalid-license',\n        breadcrumb: i18n.translate('xpack.apm.breadcrumb.invalidLicenseTitle', {\n          defaultMessage: 'Invalid License'\n        }),\n        render: () => (\n          <div>\n            {i18n.translate('xpack.apm.invalidLicenseLabel', {\n              defaultMessage: 'Invalid license'\n            })}\n          </div>\n        )\n      },\n      {\n        exact: true,\n        path: '/services',\n        component: Home,\n        breadcrumb: i18n.translate('xpack.apm.breadcrumb.servicesTitle', {\n          defaultMessage: 'Services'\n        })\n      },\n      {\n        exact: true,\n        path: '/traces',\n        component: Home,\n        breadcrumb: i18n.translate('xpack.apm.breadcrumb.tracesTitle', {\n          defaultMessage: 'Traces'\n        })\n      },\n      {\n        exact: true,\n        path: '/:serviceName',\n        breadcrumb: ({ match }: BreadcrumbArgs) => match.params.serviceName,\n        render: (props: RouteComponentProps<RouteParams>) =>\n          renderAsRedirectTo(`/${props.match.params.serviceName}/transactions`)(\n            props\n          )\n      }\n    ]\n  },\n  {\n    exact: true,\n    path: '/:serviceName/transactions',\n    component: ServiceDetails,\n    breadcrumb: i18n.translate('xpack.apm.breadcrumb.transactionsTitle', {\n      defaultMessage: 'Transactions'\n    })\n  },\n  // Have to split this out as its own route to prevent duplicate breadcrumbs from both matching\n  // if we use :transactionType? as a single route here\n  {\n    exact: true,\n    path: '/:serviceName/transactions/:transactionType',\n    component: ServiceDetails,\n    breadcrumb: null\n  },\n  {\n    exact: true,\n    path: '/:serviceName/metrics',\n    component: ServiceDetails,\n    breadcrumb: i18n.translate('xpack.apm.breadcrumb.metricsTitle', {\n      defaultMessage: 'Metrics'\n    })\n  },\n  {\n    exact: true,\n    path: '/:serviceName/transactions/:transactionType/:transactionName',\n    component: TransactionDetails,\n    breadcrumb: ({ match }: BreadcrumbArgs) =>\n      legacyDecodeURIComponent(match.params.transactionName)\n  }\n];\n"]}]}