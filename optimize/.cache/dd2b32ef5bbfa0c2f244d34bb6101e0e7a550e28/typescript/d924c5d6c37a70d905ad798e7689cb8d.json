{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/metrics/time_controls.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/metrics/time_controls.tsx","mtime":1567631711981},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButton, EuiButtonEmpty, EuiFlexGroup, EuiFlexItem } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { RangeDatePicker } from '../range_date_picker';\nvar MetricsTimeControls = /** @class */ (function (_super) {\n    tslib_1.__extends(MetricsTimeControls, _super);\n    function MetricsTimeControls() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.dateRangeRef = React.createRef();\n        _this.state = {\n            showGoButton: false,\n            to: moment().millisecond(_this.props.currentTimeRange.to),\n            from: moment().millisecond(_this.props.currentTimeRange.from),\n            recentlyUsed: [],\n        };\n        _this.handleChangeDate = function (from, to, search) {\n            var onChangeRangeTime = _this.props.onChangeRangeTime;\n            var duration = moment.duration(from && to ? from.diff(to) : 0);\n            var milliseconds = duration.asMilliseconds();\n            if (to && from && onChangeRangeTime && search && to > from) {\n                _this.setState({\n                    showGoButton: false,\n                    to: to,\n                    from: from,\n                });\n                onChangeRangeTime({\n                    to: to && to.valueOf(),\n                    from: from && from.valueOf(),\n                });\n            }\n            else if (milliseconds !== 0) {\n                _this.setState({\n                    showGoButton: true,\n                    to: to,\n                    from: from,\n                });\n            }\n        };\n        _this.searchRangeTime = function () {\n            var onChangeRangeTime = _this.props.onChangeRangeTime;\n            var _a = _this.state, to = _a.to, from = _a.from, recentlyUsed = _a.recentlyUsed;\n            if (to && from && onChangeRangeTime && to > from) {\n                _this.setState(tslib_1.__assign({}, _this.state, { showGoButton: false, recentlyUsed: tslib_1.__spread(recentlyUsed, [\n                        {\n                            type: 'date-range',\n                            text: [from.format('L LTS'), to.format('L LTS')],\n                        },\n                    ]) }));\n                onChangeRangeTime({\n                    to: to.valueOf(),\n                    from: from.valueOf(),\n                });\n            }\n        };\n        _this.startLiveStreaming = function () {\n            var startLiveStreaming = _this.props.startLiveStreaming;\n            if (startLiveStreaming) {\n                startLiveStreaming();\n            }\n        };\n        _this.stopLiveStreaming = function () {\n            var stopLiveStreaming = _this.props.stopLiveStreaming;\n            if (stopLiveStreaming) {\n                stopLiveStreaming();\n            }\n        };\n        _this.cancelSearch = function () {\n            var onChangeRangeTime = _this.props.onChangeRangeTime;\n            var to = moment(_this.props.currentTimeRange.to);\n            var from = moment(_this.props.currentTimeRange.from);\n            _this.setState(tslib_1.__assign({}, _this.state, { showGoButton: false, to: to,\n                from: from }));\n            _this.dateRangeRef.current.resetRangeDate(from, to);\n            if (onChangeRangeTime) {\n                onChangeRangeTime({\n                    to: to && to.valueOf(),\n                    from: from && from.valueOf(),\n                });\n            }\n        };\n        _this.resetSearch = function () {\n            var onChangeRangeTime = _this.props.onChangeRangeTime;\n            var to = moment();\n            var from = moment().subtract(1, 'hour');\n            if (onChangeRangeTime) {\n                onChangeRangeTime({\n                    to: to.valueOf(),\n                    from: from.valueOf(),\n                });\n            }\n        };\n        return _this;\n    }\n    MetricsTimeControls.prototype.render = function () {\n        var _a = this.props, currentTimeRange = _a.currentTimeRange, isLiveStreaming = _a.isLiveStreaming;\n        var _b = this.state, showGoButton = _b.showGoButton, to = _b.to, from = _b.from, recentlyUsed = _b.recentlyUsed;\n        var liveStreamingButton = (React.createElement(EuiFlexGroup, { gutterSize: \"s\", justifyContent: \"flexStart\" },\n            React.createElement(EuiFlexItem, { grow: false }, isLiveStreaming ? (React.createElement(EuiButton, { color: \"primary\", iconSide: \"left\", iconType: \"pause\", onClick: this.stopLiveStreaming },\n                React.createElement(FormattedMessage, { id: \"xpack.infra.metricsTimeControls.stopRefreshingButtonLabel\", defaultMessage: \"Stop refreshing\" }))) : (React.createElement(EuiButton, { iconSide: \"left\", iconType: \"play\", onClick: this.startLiveStreaming },\n                React.createElement(FormattedMessage, { id: \"xpack.infra.metricsTimeControls.autoRefreshButtonLabel\", defaultMessage: \"Auto-refresh\" })))),\n            React.createElement(EuiFlexItem, { grow: false },\n                React.createElement(EuiButtonEmpty, { onClick: this.resetSearch },\n                    React.createElement(FormattedMessage, { id: \"xpack.infra.metricsTimeControls.resetButtonLabel\", defaultMessage: \"Reset\" })))));\n        var goColor = from && to && from > to ? 'danger' : 'primary';\n        var appendButton = showGoButton ? (React.createElement(EuiFlexGroup, { gutterSize: \"s\", justifyContent: \"flexStart\" },\n            React.createElement(EuiFlexItem, { grow: false },\n                React.createElement(EuiButton, { color: goColor, fill: true, onClick: this.searchRangeTime },\n                    React.createElement(FormattedMessage, { id: \"xpack.infra.metricsTimeControls.goButtonLabel\", defaultMessage: \"Go\" }))),\n            React.createElement(EuiFlexItem, { grow: false },\n                React.createElement(EuiButtonEmpty, { onClick: this.cancelSearch },\n                    React.createElement(FormattedMessage, { id: \"xpack.infra.metricsTimeControls.cancelButtonLabel\", defaultMessage: \"Cancel\" }))))) : (liveStreamingButton);\n        return (React.createElement(MetricsTimeControlsContainer, null,\n            React.createElement(RangeDatePicker, { key: currentTimeRange.from + \"-\" + currentTimeRange.to, startDate: moment(currentTimeRange.from), endDate: moment(currentTimeRange.to), onChangeRangeTime: this.handleChangeDate, isLoading: isLiveStreaming, disabled: isLiveStreaming, recentlyUsed: recentlyUsed, ref: this.dateRangeRef }),\n            appendButton));\n    };\n    return MetricsTimeControls;\n}(React.Component));\nexport { MetricsTimeControls };\nvar MetricsTimeControlsContainer = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  display: flex;\\n  justify-content: right;\\n  flex-flow: row wrap;\\n  & > div:first-child {\\n    margin-right: 0.5rem;\\n  }\\n\"], [\"\\n  display: flex;\\n  justify-content: right;\\n  flex-flow: row wrap;\\n  & > div:first-child {\\n    margin-right: 0.5rem;\\n  }\\n\"])));\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/metrics/time_controls.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/metrics/time_controls.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiButton, EuiButtonEmpty, EuiFlexGroup, EuiFlexItem } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport moment, { Moment } from 'moment-timezone';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { RangeDatePicker, RecentlyUsed } from '../range_date_picker';\n\nimport { metricTimeActions } from '../../store';\n\ninterface MetricsTimeControlsProps {\n  currentTimeRange: metricTimeActions.MetricRangeTimeState;\n  isLiveStreaming?: boolean;\n  onChangeRangeTime?: (time: metricTimeActions.MetricRangeTimeState) => void;\n  startLiveStreaming?: () => void;\n  stopLiveStreaming?: () => void;\n}\n\ninterface MetricsTimeControlsState {\n  showGoButton: boolean;\n  to: moment.Moment | undefined;\n  from: moment.Moment | undefined;\n  recentlyUsed: RecentlyUsed[];\n}\n\nexport class MetricsTimeControls extends React.Component<\n  MetricsTimeControlsProps,\n  MetricsTimeControlsState\n> {\n  public dateRangeRef: React.RefObject<any> = React.createRef();\n  public readonly state = {\n    showGoButton: false,\n    to: moment().millisecond(this.props.currentTimeRange.to),\n    from: moment().millisecond(this.props.currentTimeRange.from),\n    recentlyUsed: [],\n  };\n  public render() {\n    const { currentTimeRange, isLiveStreaming } = this.props;\n    const { showGoButton, to, from, recentlyUsed } = this.state;\n\n    const liveStreamingButton = (\n      <EuiFlexGroup gutterSize=\"s\" justifyContent=\"flexStart\">\n        <EuiFlexItem grow={false}>\n          {isLiveStreaming ? (\n            <EuiButton\n              color=\"primary\"\n              iconSide=\"left\"\n              iconType=\"pause\"\n              onClick={this.stopLiveStreaming}\n            >\n              <FormattedMessage\n                id=\"xpack.infra.metricsTimeControls.stopRefreshingButtonLabel\"\n                defaultMessage=\"Stop refreshing\"\n              />\n            </EuiButton>\n          ) : (\n            <EuiButton iconSide=\"left\" iconType=\"play\" onClick={this.startLiveStreaming}>\n              <FormattedMessage\n                id=\"xpack.infra.metricsTimeControls.autoRefreshButtonLabel\"\n                defaultMessage=\"Auto-refresh\"\n              />\n            </EuiButton>\n          )}\n        </EuiFlexItem>\n        <EuiFlexItem grow={false}>\n          <EuiButtonEmpty onClick={this.resetSearch}>\n            <FormattedMessage\n              id=\"xpack.infra.metricsTimeControls.resetButtonLabel\"\n              defaultMessage=\"Reset\"\n            />\n          </EuiButtonEmpty>\n        </EuiFlexItem>\n      </EuiFlexGroup>\n    );\n\n    const goColor = from && to && from > to ? 'danger' : 'primary';\n    const appendButton = showGoButton ? (\n      <EuiFlexGroup gutterSize=\"s\" justifyContent=\"flexStart\">\n        <EuiFlexItem grow={false}>\n          <EuiButton color={goColor} fill onClick={this.searchRangeTime}>\n            <FormattedMessage\n              id=\"xpack.infra.metricsTimeControls.goButtonLabel\"\n              defaultMessage=\"Go\"\n            />\n          </EuiButton>\n        </EuiFlexItem>\n        <EuiFlexItem grow={false}>\n          <EuiButtonEmpty onClick={this.cancelSearch}>\n            <FormattedMessage\n              id=\"xpack.infra.metricsTimeControls.cancelButtonLabel\"\n              defaultMessage=\"Cancel\"\n            />\n          </EuiButtonEmpty>\n        </EuiFlexItem>\n      </EuiFlexGroup>\n    ) : (\n      liveStreamingButton\n    );\n\n    return (\n      <MetricsTimeControlsContainer>\n        <RangeDatePicker\n          key={`${currentTimeRange.from}-${currentTimeRange.to}`}\n          startDate={moment(currentTimeRange.from)}\n          endDate={moment(currentTimeRange.to)}\n          onChangeRangeTime={this.handleChangeDate}\n          isLoading={isLiveStreaming}\n          disabled={isLiveStreaming}\n          recentlyUsed={recentlyUsed}\n          ref={this.dateRangeRef}\n        />\n        {appendButton}\n      </MetricsTimeControlsContainer>\n    );\n  }\n\n  private handleChangeDate = (\n    from: Moment | undefined,\n    to: Moment | undefined,\n    search: boolean\n  ) => {\n    const { onChangeRangeTime } = this.props;\n    const duration = moment.duration(from && to ? from.diff(to) : 0);\n    const milliseconds = duration.asMilliseconds();\n    if (to && from && onChangeRangeTime && search && to > from) {\n      this.setState({\n        showGoButton: false,\n        to,\n        from,\n      });\n      onChangeRangeTime({\n        to: to && to.valueOf(),\n        from: from && from.valueOf(),\n      } as metricTimeActions.MetricRangeTimeState);\n    } else if (milliseconds !== 0) {\n      this.setState({\n        showGoButton: true,\n        to,\n        from,\n      });\n    }\n  };\n\n  private searchRangeTime = () => {\n    const { onChangeRangeTime } = this.props;\n    const { to, from, recentlyUsed } = this.state;\n    if (to && from && onChangeRangeTime && to > from) {\n      this.setState({\n        ...this.state,\n        showGoButton: false,\n        recentlyUsed: [\n          ...recentlyUsed,\n          ...[\n            {\n              type: 'date-range',\n              text: [from.format('L LTS'), to.format('L LTS')],\n            },\n          ],\n        ],\n      });\n      onChangeRangeTime({\n        to: to.valueOf(),\n        from: from.valueOf(),\n      } as metricTimeActions.MetricRangeTimeState);\n    }\n  };\n\n  private startLiveStreaming = () => {\n    const { startLiveStreaming } = this.props;\n\n    if (startLiveStreaming) {\n      startLiveStreaming();\n    }\n  };\n\n  private stopLiveStreaming = () => {\n    const { stopLiveStreaming } = this.props;\n\n    if (stopLiveStreaming) {\n      stopLiveStreaming();\n    }\n  };\n\n  private cancelSearch = () => {\n    const { onChangeRangeTime } = this.props;\n    const to = moment(this.props.currentTimeRange.to);\n    const from = moment(this.props.currentTimeRange.from);\n\n    this.setState({\n      ...this.state,\n      showGoButton: false,\n      to,\n      from,\n    });\n    this.dateRangeRef.current.resetRangeDate(from, to);\n    if (onChangeRangeTime) {\n      onChangeRangeTime({\n        to: to && to.valueOf(),\n        from: from && from.valueOf(),\n      } as metricTimeActions.MetricRangeTimeState);\n    }\n  };\n\n  private resetSearch = () => {\n    const { onChangeRangeTime } = this.props;\n    const to = moment();\n    const from = moment().subtract(1, 'hour');\n    if (onChangeRangeTime) {\n      onChangeRangeTime({\n        to: to.valueOf(),\n        from: from.valueOf(),\n      } as metricTimeActions.MetricRangeTimeState);\n    }\n  };\n}\nconst MetricsTimeControlsContainer = styled.div`\n  display: flex;\n  justify-content: right;\n  flex-flow: row wrap;\n  & > div:first-child {\n    margin-right: 0.5rem;\n  }\n`;\n"]}]}