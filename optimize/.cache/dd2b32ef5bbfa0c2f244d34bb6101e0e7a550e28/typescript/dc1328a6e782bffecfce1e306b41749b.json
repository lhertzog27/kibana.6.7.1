{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/source_configuration.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/source_configuration.ts","mtime":1567631711977},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nexport var convertChangeToUpdater = function (change) { return function (configuration) {\n    var updaters = [\n        function (c) { return (change.setName ? Object.assign({}, c, { name: change.setName.name }) : c); },\n        function (c) {\n            return change.setDescription\n                ? Object.assign({}, c, { description: change.setDescription.description })\n                : c;\n        },\n        function (c) {\n            return change.setAliases\n                ? Object.assign({}, c, {\n                    metricAlias: defaultTo(c.metricAlias, change.setAliases.metricAlias),\n                    logAlias: defaultTo(c.logAlias, change.setAliases.logAlias),\n                })\n                : c;\n        },\n        function (c) {\n            return change.setFields\n                ? Object.assign({}, c, {\n                    fields: {\n                        container: defaultTo(c.fields.container, change.setFields.container),\n                        host: defaultTo(c.fields.host, change.setFields.host),\n                        message: c.fields.message,\n                        pod: defaultTo(c.fields.pod, change.setFields.pod),\n                        tiebreaker: defaultTo(c.fields.tiebreaker, change.setFields.tiebreaker),\n                        timestamp: defaultTo(c.fields.timestamp, change.setFields.timestamp),\n                    },\n                })\n                : c;\n        },\n    ];\n    return updaters.reduce(function (updatedConfiguration, updater) { return updater(updatedConfiguration); }, configuration);\n}; };\nvar defaultTo = function (defaultValue, maybeValue) {\n    return typeof maybeValue === 'undefined' || maybeValue === null ? defaultValue : maybeValue;\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/source_configuration.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/source_configuration.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAIH,MAAM,CAAC,IAAM,sBAAsB,GAAG,UAAC,MAAyB,IAAK,OAAA,UAGnE,aAAgB;IAEhB,IAAM,QAAQ,GAAuB;QACnC,UAAA,CAAC,IAAI,OAAA,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAA1E,CAA0E;QAC/E,UAAA,CAAC;YACC,OAAA,MAAM,CAAC,cAAc;gBACnB,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,MAAM,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;gBAC1E,CAAC,CAAC,CAAC;QAFL,CAEK;QACP,UAAA,CAAC;YACC,OAAA,MAAM,CAAC,UAAU;gBACf,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE;oBACnB,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;oBACpE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;iBAC5D,CAAC;gBACJ,CAAC,CAAC,CAAC;QALL,CAKK;QACP,UAAA,CAAC;YACC,OAAA,MAAM,CAAC,SAAS;gBACd,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE;oBACnB,MAAM,EAAE;wBACN,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;wBACpE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC;wBACrD,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO;wBACzB,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;wBAClD,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC;wBACvE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;qBACrE;iBACF,CAAC;gBACJ,CAAC,CAAC,CAAC;QAXL,CAWK;KACR,CAAC;IACF,OAAO,QAAQ,CAAC,MAAM,CACpB,UAAC,oBAAoB,EAAE,OAAO,IAAK,OAAA,OAAO,CAAC,oBAAoB,CAAC,EAA7B,CAA6B,EAChE,aAAa,CACd,CAAC;AACJ,CAAC,EApCoE,CAoCpE,CAAC;AAEF,IAAM,SAAS,GAAG,UAAI,YAAe,EAAE,UAAgC;IACrE,OAAA,OAAO,UAAU,KAAK,WAAW,IAAI,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU;AAApF,CAAoF,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { InfraSourceConfiguration, UpdateSourceInput } from './graphql/types';\n\nexport const convertChangeToUpdater = (change: UpdateSourceInput) => <\n  C extends InfraSourceConfiguration\n>(\n  configuration: C\n): C => {\n  const updaters: Array<(c: C) => C> = [\n    c => (change.setName ? Object.assign({}, c, { name: change.setName.name }) : c),\n    c =>\n      change.setDescription\n        ? Object.assign({}, c, { description: change.setDescription.description })\n        : c,\n    c =>\n      change.setAliases\n        ? Object.assign({}, c, {\n            metricAlias: defaultTo(c.metricAlias, change.setAliases.metricAlias),\n            logAlias: defaultTo(c.logAlias, change.setAliases.logAlias),\n          })\n        : c,\n    c =>\n      change.setFields\n        ? Object.assign({}, c, {\n            fields: {\n              container: defaultTo(c.fields.container, change.setFields.container),\n              host: defaultTo(c.fields.host, change.setFields.host),\n              message: c.fields.message,\n              pod: defaultTo(c.fields.pod, change.setFields.pod),\n              tiebreaker: defaultTo(c.fields.tiebreaker, change.setFields.tiebreaker),\n              timestamp: defaultTo(c.fields.timestamp, change.setFields.timestamp),\n            },\n          })\n        : c,\n  ];\n  return updaters.reduce(\n    (updatedConfiguration, updater) => updater(updatedConfiguration),\n    configuration\n  );\n};\n\nconst defaultTo = <T>(defaultValue: T, maybeValue: T | undefined | null): T =>\n  typeof maybeValue === 'undefined' || maybeValue === null ? defaultValue : maybeValue;\n"]}]}