{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/item_view.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/item_view.tsx","mtime":1567631711980},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as React from 'react';\nimport { LogTextStreamLogEntryItemView } from './log_entry_item_view';\nexport var LogTextStreamItemView = React.forwardRef(function (_a, ref) {\n    var item = _a.item, scale = _a.scale, wrap = _a.wrap, openFlyoutWithItem = _a.openFlyoutWithItem;\n    switch (item.kind) {\n        case 'logEntry':\n            return (React.createElement(LogTextStreamLogEntryItemView, { boundingBoxRef: ref, logEntry: item.logEntry, searchResult: item.searchResult, scale: scale, wrap: wrap, openFlyoutWithItem: openFlyoutWithItem }));\n    }\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/item_view.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_text_stream/item_view.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAI/B,OAAO,EAAE,6BAA6B,EAAE,MAAM,uBAAuB,CAAC;AAStE,MAAM,CAAC,IAAM,qBAAqB,GAAG,KAAK,CAAC,UAAU,CACnD,UAAC,EAAyC,EAAE,GAAG;QAA5C,cAAI,EAAE,gBAAK,EAAE,cAAI,EAAE,0CAAkB;IACtC,QAAQ,IAAI,CAAC,IAAI,EAAE;QACjB,KAAK,UAAU;YACb,OAAO,CACL,oBAAC,6BAA6B,IAC5B,cAAc,EAAE,GAAG,EACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,kBAAkB,EAAE,kBAAkB,GACtC,CACH,CAAC;KACL;AACH,CAAC,CACF,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport * as React from 'react';\n\nimport { TextScale } from '../../../../common/log_text_scale';\nimport { StreamItem } from './item';\nimport { LogTextStreamLogEntryItemView } from './log_entry_item_view';\n\ninterface StreamItemProps {\n  item: StreamItem;\n  scale: TextScale;\n  wrap: boolean;\n  openFlyoutWithItem: (id: string) => void;\n}\n\nexport const LogTextStreamItemView = React.forwardRef<Element, StreamItemProps>(\n  ({ item, scale, wrap, openFlyoutWithItem }, ref) => {\n    switch (item.kind) {\n      case 'logEntry':\n        return (\n          <LogTextStreamLogEntryItemView\n            boundingBoxRef={ref}\n            logEntry={item.logEntry}\n            searchResult={item.searchResult}\n            scale={scale}\n            wrap={wrap}\n            openFlyoutWithItem={openFlyoutWithItem}\n          />\n        );\n    }\n  }\n);\n"]}]}