{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/inputs/select.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/inputs/select.tsx","mtime":1567631711879},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiFormRow, \n// @ts-ignore\nEuiSelect, } from '@elastic/eui';\n// @ts-ignore\nimport { withFormsy } from 'formsy-react';\nimport React, { Component } from 'react';\nvar FixedSelect = EuiSelect;\nvar FieldSelect = /** @class */ (function (_super) {\n    tslib_1.__extends(FieldSelect, _super);\n    function FieldSelect() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { allowError: false };\n        _this.handleChange = function (e) {\n            var value = e.currentTarget.value;\n            _this.props.setValue(value);\n            if (_this.props.onChange) {\n                _this.props.onChange(e, e.currentTarget.value);\n            }\n            if (_this.props.instantValidation) {\n                _this.showError();\n            }\n        };\n        _this.handleBlur = function (e) {\n            _this.showError();\n            if (_this.props.onBlur) {\n                _this.props.onBlur(e, e.currentTarget.value);\n            }\n        };\n        _this.showError = function () { return _this.setState({ allowError: true }); };\n        return _this;\n    }\n    FieldSelect.prototype.componentDidMount = function () {\n        var _a = this.props, defaultValue = _a.defaultValue, setValue = _a.setValue;\n        if (defaultValue) {\n            setValue(defaultValue);\n        }\n    };\n    FieldSelect.prototype.componentWillReceiveProps = function (nextProps) {\n        if (nextProps.isFormSubmitted()) {\n            this.showError();\n        }\n    };\n    FieldSelect.prototype.render = function () {\n        var _a = this.props, id = _a.id, required = _a.required, label = _a.label, options = _a.options, getValue = _a.getValue, isValid = _a.isValid, isPristine = _a.isPristine, getErrorMessage = _a.getErrorMessage, fullWidth = _a.fullWidth, className = _a.className, disabled = _a.disabled, helpText = _a.helpText;\n        var allowError = this.state.allowError;\n        var error = !isPristine() && !isValid() && allowError;\n        return (React.createElement(EuiFormRow, { id: id, label: label, helpText: helpText, isInvalid: !disabled && error, error: !disabled && error ? getErrorMessage() : [] },\n            React.createElement(FixedSelect, { id: id, name: name, value: getValue() || '', options: options, isInvalid: !disabled && error, onChange: this.handleChange, onBlur: this.handleBlur, fullWidth: fullWidth, disabled: disabled, required: required, className: className })));\n    };\n    FieldSelect.defaultProps = {\n        passRequiredToField: true,\n    };\n    return FieldSelect;\n}(Component));\nexport var FormsyEuiSelect = withFormsy(FieldSelect);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/inputs/select.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/components/inputs/select.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiFormRow,\n  // @ts-ignore\n  EuiSelect,\n} from '@elastic/eui';\nimport { CommonProps } from '@elastic/eui/src/components/common';\n// @ts-ignore\nimport { FormsyInputProps, withFormsy } from 'formsy-react';\nimport React, { Component, InputHTMLAttributes } from 'react';\n\nconst FixedSelect = EuiSelect as React.SFC<any>;\n\ninterface ComponentProps extends FormsyInputProps, CommonProps {\n  instantValidation: boolean;\n  options: Array<{ value: string; text: string }>;\n  label: string;\n  errorText: string;\n  fullWidth: boolean;\n  helpText: React.ReactElement<any>;\n  compressed: boolean;\n  onChange(e: React.ChangeEvent<HTMLInputElement>, value: any): void;\n  onBlur(e: React.ChangeEvent<HTMLInputElement>, value: any): void;\n}\n\ninterface ComponentState {\n  allowError: boolean;\n}\n\nclass FieldSelect extends Component<\n  InputHTMLAttributes<HTMLInputElement> & ComponentProps,\n  ComponentState\n> {\n  public static defaultProps = {\n    passRequiredToField: true,\n  };\n\n  public state = { allowError: false };\n\n  public componentDidMount() {\n    const { defaultValue, setValue } = this.props;\n    if (defaultValue) {\n      setValue(defaultValue);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: ComponentProps) {\n    if (nextProps.isFormSubmitted()) {\n      this.showError();\n    }\n  }\n\n  public handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n\n    this.props.setValue(value);\n    if (this.props.onChange) {\n      this.props.onChange(e, e.currentTarget.value);\n    }\n    if (this.props.instantValidation) {\n      this.showError();\n    }\n  };\n\n  public handleBlur = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.showError();\n    if (this.props.onBlur) {\n      this.props.onBlur(e, e.currentTarget.value);\n    }\n  };\n\n  public showError = () => this.setState({ allowError: true });\n\n  public render() {\n    const {\n      id,\n      required,\n      label,\n      options,\n      getValue,\n      isValid,\n      isPristine,\n      getErrorMessage,\n      fullWidth,\n      className,\n      disabled,\n      helpText,\n    } = this.props;\n\n    const { allowError } = this.state;\n    const error = !isPristine() && !isValid() && allowError;\n\n    return (\n      <EuiFormRow\n        id={id}\n        label={label}\n        helpText={helpText}\n        isInvalid={!disabled && error}\n        error={!disabled && error ? getErrorMessage() : []}\n      >\n        <FixedSelect\n          id={id}\n          name={name}\n          value={getValue() || ''}\n          options={options}\n          isInvalid={!disabled && error}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          fullWidth={fullWidth}\n          disabled={disabled}\n          required={required}\n          className={className}\n        />\n      </EuiFormRow>\n    );\n  }\n}\n\nexport const FormsyEuiSelect = withFormsy(FieldSelect);\n"]}]}