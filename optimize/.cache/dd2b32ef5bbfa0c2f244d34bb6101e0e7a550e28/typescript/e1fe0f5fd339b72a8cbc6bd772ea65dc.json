{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/ServiceIntegrations/TransactionSelect.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/ServiceIntegrations/TransactionSelect.tsx","mtime":1567631711860},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { EuiFlexGroup, EuiFlexItem, EuiFormRow, EuiIcon, \n// @ts-ignore\nEuiSuperSelect, EuiText, EuiToolTip } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nexport var TransactionSelect = function (_a) {\n    var existingJobs = _a.existingJobs, types = _a.types, selected = _a.selected, onChange = _a.onChange;\n    return (React.createElement(EuiFormRow, { label: i18n.translate('xpack.apm.serviceDetails.enableAnomalyDetectionPanel.selectTransactionTypeLabel', {\n            defaultMessage: 'Select a transaction type for this job'\n        }) },\n        React.createElement(EuiSuperSelect, { valueOfSelected: selected, onChange: onChange, options: types.map(function (type, i) { return ({\n                value: type,\n                inputDisplay: type,\n                dropdownDisplay: (React.createElement(EuiFlexGroup, { justifyContent: \"spaceBetween\" },\n                    React.createElement(EuiFlexItem, null,\n                        React.createElement(EuiText, null, type)),\n                    React.createElement(EuiFlexItem, { grow: false }, Boolean(existingJobs.find(function (job) { return job.jobId && job.jobId.includes(type); })) ? (React.createElement(EuiToolTip, { content: i18n.translate('xpack.apm.serviceDetails.enableAnomalyDetectionPanel.existedJobTooltip', {\n                            defaultMessage: 'ML job exists for this type'\n                        }) },\n                        React.createElement(EuiIcon, { type: \"machineLearningApp\" }))) : (React.createElement(EuiIcon, { type: \"empty\" })))))\n            }); }) })));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/ServiceIntegrations/TransactionSelect.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/ServiceIntegrations/TransactionSelect.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EACL,YAAY,EACZ,WAAW,EACX,UAAU,EACV,OAAO;AACP,aAAa;AACb,cAAc,EACd,OAAO,EACP,UAAU,EACX,MAAM,cAAc,CAAC;AACtB,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,KAAK,MAAM,OAAO,CAAC;AAU1B,MAAM,CAAC,IAAM,iBAAiB,GAAsC,UAAC,EAKpE;QAJC,8BAAY,EACZ,gBAAK,EACL,sBAAQ,EACR,sBAAQ;IAER,OAAO,CACL,oBAAC,UAAU,IACT,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,iFAAiF,EACjF;YACE,cAAc,EAAE,wCAAwC;SACzD,CACF;QAED,oBAAC,cAAc,IACb,eAAe,EAAE,QAAQ,EACzB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC,IAAK,OAAA,CAAC;gBAC/B,KAAK,EAAE,IAAI;gBACX,YAAY,EAAE,IAAI;gBAClB,eAAe,EAAE,CACf,oBAAC,YAAY,IAAC,cAAc,EAAC,cAAc;oBACzC,oBAAC,WAAW;wBACV,oBAAC,OAAO,QAAE,IAAI,CAAW,CACb;oBACd,oBAAC,WAAW,IAAC,IAAI,EAAE,KAAK,IACrB,OAAO,CACN,YAAY,CAAC,IAAI,CACf,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAArC,CAAqC,CAC7C,CACF,CAAC,CAAC,CAAC,CACF,oBAAC,UAAU,IACT,OAAO,EAAE,IAAI,CAAC,SAAS,CACrB,wEAAwE,EACxE;4BACE,cAAc,EAAE,6BAA6B;yBAC9C,CACF;wBAED,oBAAC,OAAO,IAAC,IAAI,EAAC,oBAAoB,GAAG,CAC1B,CACd,CAAC,CAAC,CAAC,CACF,oBAAC,OAAO,IAAC,IAAI,EAAC,OAAO,GAAG,CACzB,CACW,CACD,CAChB;aACF,CAAC,EA9B8B,CA8B9B,CAAC,GACH,CACS,CACd,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiFormRow,\n  EuiIcon,\n  // @ts-ignore\n  EuiSuperSelect,\n  EuiText,\n  EuiToolTip\n} from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport { MLJobApiResponse } from 'x-pack/plugins/apm/public/services/rest/ml';\n\ninterface TransactionSelectProps {\n  existingJobs: MLJobApiResponse['jobs'];\n  types: string[];\n  selected?: string;\n  onChange: (value: string) => void;\n}\n\nexport const TransactionSelect: React.SFC<TransactionSelectProps> = ({\n  existingJobs,\n  types,\n  selected,\n  onChange\n}) => {\n  return (\n    <EuiFormRow\n      label={i18n.translate(\n        'xpack.apm.serviceDetails.enableAnomalyDetectionPanel.selectTransactionTypeLabel',\n        {\n          defaultMessage: 'Select a transaction type for this job'\n        }\n      )}\n    >\n      <EuiSuperSelect\n        valueOfSelected={selected}\n        onChange={onChange}\n        options={types.map((type, i) => ({\n          value: type,\n          inputDisplay: type,\n          dropdownDisplay: (\n            <EuiFlexGroup justifyContent=\"spaceBetween\">\n              <EuiFlexItem>\n                <EuiText>{type}</EuiText>\n              </EuiFlexItem>\n              <EuiFlexItem grow={false}>\n                {Boolean(\n                  existingJobs.find(\n                    job => job.jobId && job.jobId.includes(type)\n                  )\n                ) ? (\n                  <EuiToolTip\n                    content={i18n.translate(\n                      'xpack.apm.serviceDetails.enableAnomalyDetectionPanel.existedJobTooltip',\n                      {\n                        defaultMessage: 'ML job exists for this type'\n                      }\n                    )}\n                  >\n                    <EuiIcon type=\"machineLearningApp\" />\n                  </EuiToolTip>\n                ) : (\n                  <EuiIcon type=\"empty\" />\n                )}\n              </EuiFlexItem>\n            </EuiFlexGroup>\n          )\n        }))}\n      />\n    </EuiFormRow>\n  );\n};\n"]}]}