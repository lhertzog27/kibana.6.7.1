{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/status_bar.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/status_bar.tsx","mtime":1567631712329},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { EuiFlexGroup, EuiFlexItem, EuiHealth, EuiPanel } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport moment from 'moment';\nimport React from 'react';\nexport var StatusBar = function (_a) {\n    var timestamp = _a.timestamp, host = _a.host, port = _a.port, duration = _a.duration, scheme = _a.scheme, status = _a.status;\n    return (React.createElement(EuiPanel, null,\n        React.createElement(EuiFlexGroup, { gutterSize: \"l\" },\n            React.createElement(EuiFlexItem, { grow: false },\n                React.createElement(EuiHealth, { \"aria-label\": i18n.translate('xpack.uptime.monitorStatusBar.healthStatusMessageAriaLabel', {\n                        defaultMessage: 'Monitor status',\n                    }), color: status === 'up' ? 'success' : 'danger', style: { lineHeight: 'inherit' } }, status === 'up'\n                    ? i18n.translate('xpack.uptime.monitorStatusBar.healthStatusMessage.upLabel', {\n                        defaultMessage: 'Up',\n                    })\n                    : i18n.translate('xpack.uptime.monitorStatusBar.healthStatusMessage.downLabel', {\n                        defaultMessage: 'Down',\n                    }))),\n            React.createElement(EuiFlexItem, { grow: false },\n                React.createElement(FormattedMessage, { id: \"xpack.uptime.monitorStatusBar.healthStatus.hostMessage\", values: { host: host }, defaultMessage: \"Host: {host}\" })),\n            React.createElement(EuiFlexItem, { grow: false },\n                React.createElement(FormattedMessage, { id: \"xpack.uptime.monitorStatusBar.healthStatus.portMessage\", values: { port: port }, defaultMessage: \"Port: {port}\" })),\n            React.createElement(EuiFlexItem, { \"aria-label\": i18n.translate('xpack.uptime.monitorStatusBar.durationTextAriaLabel', {\n                    defaultMessage: 'Monitor duration in milliseconds',\n                }), grow: false },\n                React.createElement(FormattedMessage, { id: \"xpack.uptime.monitorStatusBar.healthStatus.durationInMillisecondsMessage\", \n                    // TODO: this should not be computed inline\n                    values: { duration: duration }, defaultMessage: \"{duration}ms\", description: \"The 'ms' is an abbreviation for 'milliseconds'.\" })),\n            React.createElement(EuiFlexItem, { grow: false },\n                React.createElement(FormattedMessage, { id: \"xpack.uptime.monitorStatusBar.healthStatus.schemeMessage\", values: { scheme: scheme }, defaultMessage: \"Scheme: {scheme}\" })),\n            React.createElement(EuiFlexItem, { \"aria-label\": i18n.translate('xpack.uptime.monitorStatusBar.timestampFromNowTextAriaLabel', {\n                    defaultMessage: 'Time since last check',\n                }), grow: false }, moment(timestamp).fromNow()))));\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/status_bar.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/components/functional/status_bar.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAC9E,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,KAAK,MAAM,OAAO,CAAC;AAW1B,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,EAA0D;QAAxD,wBAAS,EAAE,cAAI,EAAE,cAAI,EAAE,sBAAQ,EAAE,kBAAM,EAAE,kBAAM;IAAc,OAAA,CACvF,oBAAC,QAAQ;QACP,oBAAC,YAAY,IAAC,UAAU,EAAC,GAAG;YAC1B,oBAAC,WAAW,IAAC,IAAI,EAAE,KAAK;gBACtB,oBAAC,SAAS,kBACI,IAAI,CAAC,SAAS,CAAC,4DAA4D,EAAE;wBACvF,cAAc,EAAE,gBAAgB;qBACjC,CAAC,EACF,KAAK,EAAE,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAC7C,KAAK,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,IAE/B,MAAM,KAAK,IAAI;oBACd,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,2DAA2D,EAAE;wBAC1E,cAAc,EAAE,IAAI;qBACrB,CAAC;oBACJ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,6DAA6D,EAAE;wBAC5E,cAAc,EAAE,MAAM;qBACvB,CAAC,CACI,CACA;YACd,oBAAC,WAAW,IAAC,IAAI,EAAE,KAAK;gBACtB,oBAAC,gBAAgB,IACf,EAAE,EAAC,wDAAwD,EAC3D,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE,EAChB,cAAc,EAAC,cAAc,GAC7B,CACU;YACd,oBAAC,WAAW,IAAC,IAAI,EAAE,KAAK;gBACtB,oBAAC,gBAAgB,IACf,EAAE,EAAC,wDAAwD,EAC3D,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE,EAChB,cAAc,EAAC,cAAc,GAC7B,CACU;YACd,oBAAC,WAAW,kBACE,IAAI,CAAC,SAAS,CAAC,qDAAqD,EAAE;oBAChF,cAAc,EAAE,kCAAkC;iBACnD,CAAC,EACF,IAAI,EAAE,KAAK;gBAEX,oBAAC,gBAAgB,IACf,EAAE,EAAC,0EAA0E;oBAC7E,2CAA2C;oBAC3C,MAAM,EAAE,EAAE,QAAQ,UAAA,EAAE,EACpB,cAAc,EAAC,cAAc,EAC7B,WAAW,EAAC,iDAAiD,GAC7D,CACU;YACd,oBAAC,WAAW,IAAC,IAAI,EAAE,KAAK;gBACtB,oBAAC,gBAAgB,IACf,EAAE,EAAC,0DAA0D,EAC7D,MAAM,EAAE,EAAE,MAAM,QAAA,EAAE,EAClB,cAAc,EAAC,kBAAkB,GACjC,CACU;YACd,oBAAC,WAAW,kBACE,IAAI,CAAC,SAAS,CAAC,6DAA6D,EAAE;oBACxF,cAAc,EAAE,uBAAuB;iBACxC,CAAC,EACF,IAAI,EAAE,KAAK,IAEV,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAChB,CACD,CACN,CACZ;AAjEwF,CAiExF,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiFlexGroup, EuiFlexItem, EuiHealth, EuiPanel } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport moment from 'moment';\nimport React from 'react';\n\ninterface Props {\n  duration?: string;\n  host?: string;\n  port?: string;\n  scheme?: string;\n  status?: string;\n  timestamp?: string;\n}\n\nexport const StatusBar = ({ timestamp, host, port, duration, scheme, status }: Props) => (\n  <EuiPanel>\n    <EuiFlexGroup gutterSize=\"l\">\n      <EuiFlexItem grow={false}>\n        <EuiHealth\n          aria-label={i18n.translate('xpack.uptime.monitorStatusBar.healthStatusMessageAriaLabel', {\n            defaultMessage: 'Monitor status',\n          })}\n          color={status === 'up' ? 'success' : 'danger'}\n          style={{ lineHeight: 'inherit' }}\n        >\n          {status === 'up'\n            ? i18n.translate('xpack.uptime.monitorStatusBar.healthStatusMessage.upLabel', {\n                defaultMessage: 'Up',\n              })\n            : i18n.translate('xpack.uptime.monitorStatusBar.healthStatusMessage.downLabel', {\n                defaultMessage: 'Down',\n              })}\n        </EuiHealth>\n      </EuiFlexItem>\n      <EuiFlexItem grow={false}>\n        <FormattedMessage\n          id=\"xpack.uptime.monitorStatusBar.healthStatus.hostMessage\"\n          values={{ host }}\n          defaultMessage=\"Host: {host}\"\n        />\n      </EuiFlexItem>\n      <EuiFlexItem grow={false}>\n        <FormattedMessage\n          id=\"xpack.uptime.monitorStatusBar.healthStatus.portMessage\"\n          values={{ port }}\n          defaultMessage=\"Port: {port}\"\n        />\n      </EuiFlexItem>\n      <EuiFlexItem\n        aria-label={i18n.translate('xpack.uptime.monitorStatusBar.durationTextAriaLabel', {\n          defaultMessage: 'Monitor duration in milliseconds',\n        })}\n        grow={false}\n      >\n        <FormattedMessage\n          id=\"xpack.uptime.monitorStatusBar.healthStatus.durationInMillisecondsMessage\"\n          // TODO: this should not be computed inline\n          values={{ duration }}\n          defaultMessage=\"{duration}ms\"\n          description=\"The 'ms' is an abbreviation for 'milliseconds'.\"\n        />\n      </EuiFlexItem>\n      <EuiFlexItem grow={false}>\n        <FormattedMessage\n          id=\"xpack.uptime.monitorStatusBar.healthStatus.schemeMessage\"\n          values={{ scheme }}\n          defaultMessage=\"Scheme: {scheme}\"\n        />\n      </EuiFlexItem>\n      <EuiFlexItem\n        aria-label={i18n.translate('xpack.uptime.monitorStatusBar.timestampFromNowTextAriaLabel', {\n          defaultMessage: 'Time since last check',\n        })}\n        grow={false}\n      >\n        {moment(timestamp).fromNow()}\n      </EuiFlexItem>\n    </EuiFlexGroup>\n  </EuiPanel>\n);\n"]}]}