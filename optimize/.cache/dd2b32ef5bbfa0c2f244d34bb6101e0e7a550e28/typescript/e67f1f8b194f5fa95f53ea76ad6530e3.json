{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TraceOverview/TraceList.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TraceOverview/TraceList.tsx","mtime":1567631711861},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiToolTip } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { fontSizes, truncate } from '../../../style/variables';\nimport { asMillis } from '../../../utils/formatters';\nimport { ImpactBar } from '../../shared/ImpactBar';\nimport { ManagedTable } from '../../shared/ManagedTable';\nimport { TransactionLink } from '../../shared/TransactionLink';\nvar StyledTransactionLink = styled(TransactionLink)(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  font-size: \", \";\\n  \", \";\\n\"], [\"\\n  font-size: \", \";\\n  \", \";\\n\"])), fontSizes.large, truncate('100%'));\nvar traceListColumns = [\n    {\n        field: 'name',\n        name: i18n.translate('xpack.apm.tracesTable.nameColumnLabel', {\n            defaultMessage: 'Name'\n        }),\n        width: '40%',\n        sortable: true,\n        render: function (name, group) { return (React.createElement(EuiToolTip, { id: \"trace-transaction-link-tooltip\", content: name },\n            React.createElement(StyledTransactionLink, { transaction: group.sample }, name))); }\n    },\n    {\n        field: 'sample.context.service.name',\n        name: i18n.translate('xpack.apm.tracesTable.originatingServiceColumnLabel', {\n            defaultMessage: 'Originating service'\n        }),\n        sortable: true\n    },\n    {\n        field: 'averageResponseTime',\n        name: i18n.translate('xpack.apm.tracesTable.avgResponseTimeColumnLabel', {\n            defaultMessage: 'Avg. response time'\n        }),\n        sortable: true,\n        dataType: 'number',\n        render: function (value) { return asMillis(value); }\n    },\n    {\n        field: 'transactionsPerMinute',\n        name: i18n.translate('xpack.apm.tracesTable.tracesPerMinuteColumnLabel', {\n            defaultMessage: 'Traces per minute'\n        }),\n        sortable: true,\n        dataType: 'number',\n        render: function (value) {\n            return value.toLocaleString() + \" \" + i18n.translate('xpack.apm.tracesTable.tracesPerMinuteUnitLabel', {\n                defaultMessage: 'tpm'\n            });\n        }\n    },\n    {\n        field: 'impact',\n        name: i18n.translate('xpack.apm.tracesTable.impactColumnLabel', {\n            defaultMessage: 'Impact'\n        }),\n        width: '20%',\n        align: 'right',\n        sortable: true,\n        render: function (value) { return React.createElement(ImpactBar, { value: value }); }\n    }\n];\nexport function TraceList(_a) {\n    var _b = _a.items, items = _b === void 0 ? [] : _b, noItemsMessage = _a.noItemsMessage, isLoading = _a.isLoading;\n    var noItems = isLoading ? null : noItemsMessage;\n    return (React.createElement(ManagedTable, { columns: traceListColumns, items: items, initialSort: { field: 'impact', direction: 'desc' }, noItemsMessage: noItems, initialPageSize: 25 }));\n}\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TraceOverview/TraceList.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/TraceOverview/TraceList.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiToolTip } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ITransactionGroup } from 'x-pack/plugins/apm/server/lib/transaction_groups/transform';\nimport { fontSizes, truncate } from '../../../style/variables';\nimport { asMillis } from '../../../utils/formatters';\nimport { ImpactBar } from '../../shared/ImpactBar';\nimport { ITableColumn, ManagedTable } from '../../shared/ManagedTable';\nimport { TransactionLink } from '../../shared/TransactionLink';\n\nconst StyledTransactionLink = styled(TransactionLink)`\n  font-size: ${fontSizes.large};\n  ${truncate('100%')};\n`;\n\ninterface Props {\n  items: ITransactionGroup[];\n  noItemsMessage: React.ReactNode;\n  isLoading: boolean;\n}\n\nconst traceListColumns: ITableColumn[] = [\n  {\n    field: 'name',\n    name: i18n.translate('xpack.apm.tracesTable.nameColumnLabel', {\n      defaultMessage: 'Name'\n    }),\n    width: '40%',\n    sortable: true,\n    render: (name, group: ITransactionGroup) => (\n      <EuiToolTip id=\"trace-transaction-link-tooltip\" content={name}>\n        <StyledTransactionLink transaction={group.sample}>\n          {name}\n        </StyledTransactionLink>\n      </EuiToolTip>\n    )\n  },\n  {\n    field: 'sample.context.service.name',\n    name: i18n.translate(\n      'xpack.apm.tracesTable.originatingServiceColumnLabel',\n      {\n        defaultMessage: 'Originating service'\n      }\n    ),\n    sortable: true\n  },\n  {\n    field: 'averageResponseTime',\n    name: i18n.translate('xpack.apm.tracesTable.avgResponseTimeColumnLabel', {\n      defaultMessage: 'Avg. response time'\n    }),\n    sortable: true,\n    dataType: 'number',\n    render: (value: number) => asMillis(value)\n  },\n  {\n    field: 'transactionsPerMinute',\n    name: i18n.translate('xpack.apm.tracesTable.tracesPerMinuteColumnLabel', {\n      defaultMessage: 'Traces per minute'\n    }),\n    sortable: true,\n    dataType: 'number',\n    render: (value: number) =>\n      `${value.toLocaleString()} ${i18n.translate(\n        'xpack.apm.tracesTable.tracesPerMinuteUnitLabel',\n        {\n          defaultMessage: 'tpm'\n        }\n      )}`\n  },\n  {\n    field: 'impact',\n    name: i18n.translate('xpack.apm.tracesTable.impactColumnLabel', {\n      defaultMessage: 'Impact'\n    }),\n    width: '20%',\n    align: 'right',\n    sortable: true,\n    render: (value: number) => <ImpactBar value={value} />\n  }\n];\n\nexport function TraceList({ items = [], noItemsMessage, isLoading }: Props) {\n  const noItems = isLoading ? null : noItemsMessage;\n  return (\n    <ManagedTable\n      columns={traceListColumns}\n      items={items}\n      initialSort={{ field: 'impact', direction: 'desc' }}\n      noItemsMessage={noItems}\n      initialPageSize={25}\n    />\n  );\n}\n"]}]}