{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/lib/role.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/lib/role.ts","mtime":1567631712297},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { get } from 'lodash';\n/**\n * Returns whether given role is enabled or not\n *\n * @param role Object Role JSON, as returned by roles API\n * @return Boolean true if role is enabled; false otherwise\n */\nexport function isRoleEnabled(role) {\n    return get(role, 'transient_metadata.enabled', true);\n}\n/**\n * Returns whether given role is reserved or not.\n *\n * @param {role} the Role as returned by roles API\n */\nexport function isReservedRole(role) {\n    return get(role, 'metadata._reserved', false);\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/lib/role.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/lib/role.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAG7B;;;;;GAKG;AACH,MAAM,UAAU,aAAa,CAAC,IAAmB;IAC/C,OAAO,GAAG,CAAC,IAAI,EAAE,4BAA4B,EAAE,IAAI,CAAC,CAAC;AACvD,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,cAAc,CAAC,IAAmB;IAChD,OAAO,GAAG,CAAC,IAAI,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;AAChD,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { get } from 'lodash';\nimport { Role } from '../../common/model/role';\n\n/**\n * Returns whether given role is enabled or not\n *\n * @param role Object Role JSON, as returned by roles API\n * @return Boolean true if role is enabled; false otherwise\n */\nexport function isRoleEnabled(role: Partial<Role>) {\n  return get(role, 'transient_metadata.enabled', true);\n}\n\n/**\n * Returns whether given role is reserved or not.\n *\n * @param {role} the Role as returned by roles API\n */\nexport function isReservedRole(role: Partial<Role>) {\n  return get(role, 'metadata._reserved', false);\n}\n"]}]}