{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/graphql/shared/schema.gql.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/graphql/shared/schema.gql.ts","mtime":1567631711976},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport gql from 'graphql-tag';\nexport var sharedSchema = gql(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  \\\"A representation of the log entry's position in the event stream\\\"\\n  type InfraTimeKey {\\n    \\\"The timestamp of the event that the log entry corresponds to\\\"\\n    time: Float!\\n    \\\"The tiebreaker that disambiguates events with the same timestamp\\\"\\n    tiebreaker: Float!\\n  }\\n\\n  input InfraTimeKeyInput {\\n    time: Float!\\n    tiebreaker: Float!\\n  }\\n\\n  enum InfraIndexType {\\n    ANY\\n    LOGS\\n    METRICS\\n  }\\n\\n  enum InfraNodeType {\\n    pod\\n    container\\n    host\\n  }\\n\"], [\"\\n  \\\"A representation of the log entry's position in the event stream\\\"\\n  type InfraTimeKey {\\n    \\\"The timestamp of the event that the log entry corresponds to\\\"\\n    time: Float!\\n    \\\"The tiebreaker that disambiguates events with the same timestamp\\\"\\n    tiebreaker: Float!\\n  }\\n\\n  input InfraTimeKeyInput {\\n    time: Float!\\n    tiebreaker: Float!\\n  }\\n\\n  enum InfraIndexType {\\n    ANY\\n    LOGS\\n    METRICS\\n  }\\n\\n  enum InfraNodeType {\\n    pod\\n    container\\n    host\\n  }\\n\"])));\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/graphql/shared/schema.gql.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/common/graphql/shared/schema.gql.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,GAAG,MAAM,aAAa,CAAC;AAE9B,MAAM,CAAC,IAAM,YAAY,GAAG,GAAG,4jBAAA,ifAyB9B,IAAA,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport gql from 'graphql-tag';\n\nexport const sharedSchema = gql`\n  \"A representation of the log entry's position in the event stream\"\n  type InfraTimeKey {\n    \"The timestamp of the event that the log entry corresponds to\"\n    time: Float!\n    \"The tiebreaker that disambiguates events with the same timestamp\"\n    tiebreaker: Float!\n  }\n\n  input InfraTimeKeyInput {\n    time: Float!\n    tiebreaker: Float!\n  }\n\n  enum InfraIndexType {\n    ANY\n    LOGS\n    METRICS\n  }\n\n  enum InfraNodeType {\n    pod\n    container\n    host\n  }\n`;\n"]}]}