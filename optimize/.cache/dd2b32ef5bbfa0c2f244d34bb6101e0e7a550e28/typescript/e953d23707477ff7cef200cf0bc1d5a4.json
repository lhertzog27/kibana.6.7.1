{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/nginx.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/nginx.ts","mtime":1567631711986},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { i18n } from '@kbn/i18n';\nimport { InfraMetric } from '../../../graphql/types';\nimport { InfraFormatterType } from '../../../lib/lib';\nimport { InfraMetricLayoutSectionType, InfraMetricLayoutVisualizationType, } from './types';\nexport var nginxLayoutCreator = function (theme) { return [\n    {\n        id: 'nginxOverview',\n        label: 'Nginx',\n        requires: ['nginx'],\n        sections: [\n            {\n                id: InfraMetric.nginxHits,\n                label: i18n.translate('xpack.infra.metricDetailPage.nginxMetricsLayout.hitsSection.sectionLabel', {\n                    defaultMessage: 'Hits',\n                }),\n                requires: ['nginx.access'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.abbreviatedNumber,\n                    stacked: true,\n                    seriesOverrides: {\n                        '200s': { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.bar },\n                        '300s': { color: theme.eui.euiColorVis5, type: InfraMetricLayoutVisualizationType.bar },\n                        '400s': { color: theme.eui.euiColorVis2, type: InfraMetricLayoutVisualizationType.bar },\n                        '500s': { color: theme.eui.euiColorVis9, type: InfraMetricLayoutVisualizationType.bar },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.nginxRequestRate,\n                label: i18n.translate('xpack.infra.metricDetailPage.nginxMetricsLayout.requestRateSection.sectionLabel', {\n                    defaultMessage: 'Request Rate',\n                }),\n                requires: ['nginx.stubstatus'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.abbreviatedNumber,\n                    formatterTemplate: '{{value}}/s',\n                    seriesOverrides: {\n                        rate: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.nginxActiveConnections,\n                label: i18n.translate('xpack.infra.metricDetailPage.nginxMetricsLayout.activeConnectionsSection.sectionLabel', {\n                    defaultMessage: 'Active Connections',\n                }),\n                requires: ['nginx.stubstatus'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.abbreviatedNumber,\n                    seriesOverrides: {\n                        connections: {\n                            color: theme.eui.euiColorVis1,\n                            type: InfraMetricLayoutVisualizationType.bar,\n                        },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.nginxRequestsPerConnection,\n                label: i18n.translate('xpack.infra.metricDetailPage.nginxMetricsLayout.requestsPerConnectionsSection.sectionLabel', {\n                    defaultMessage: 'Requests per Connections',\n                }),\n                requires: ['nginx.stubstatus'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.abbreviatedNumber,\n                    seriesOverrides: {\n                        reqPerConns: {\n                            color: theme.eui.euiColorVis1,\n                            type: InfraMetricLayoutVisualizationType.bar,\n                            name: i18n.translate('xpack.infra.metricDetailPage.nginxMetricsLayout.requestsPerConnectionsSection.reqsPerConnSeriesLabel', {\n                                defaultMessage: 'reqs per conn',\n                            }),\n                        },\n                    },\n                },\n            },\n        ],\n    },\n]; };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/nginx.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/nginx.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { i18n } from '@kbn/i18n';\nimport { InfraMetric } from '../../../graphql/types';\nimport { InfraFormatterType } from '../../../lib/lib';\nimport {\n  InfraMetricLayoutCreator,\n  InfraMetricLayoutSectionType,\n  InfraMetricLayoutVisualizationType,\n} from './types';\n\nexport const nginxLayoutCreator: InfraMetricLayoutCreator = theme => [\n  {\n    id: 'nginxOverview',\n    label: 'Nginx',\n    requires: ['nginx'],\n    sections: [\n      {\n        id: InfraMetric.nginxHits,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.nginxMetricsLayout.hitsSection.sectionLabel',\n          {\n            defaultMessage: 'Hits',\n          }\n        ),\n        requires: ['nginx.access'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.abbreviatedNumber,\n          stacked: true,\n          seriesOverrides: {\n            '200s': { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.bar },\n            '300s': { color: theme.eui.euiColorVis5, type: InfraMetricLayoutVisualizationType.bar },\n            '400s': { color: theme.eui.euiColorVis2, type: InfraMetricLayoutVisualizationType.bar },\n            '500s': { color: theme.eui.euiColorVis9, type: InfraMetricLayoutVisualizationType.bar },\n          },\n        },\n      },\n      {\n        id: InfraMetric.nginxRequestRate,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.nginxMetricsLayout.requestRateSection.sectionLabel',\n          {\n            defaultMessage: 'Request Rate',\n          }\n        ),\n        requires: ['nginx.stubstatus'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.abbreviatedNumber,\n          formatterTemplate: '{{value}}/s',\n          seriesOverrides: {\n            rate: { color: theme.eui.euiColorVis1, type: InfraMetricLayoutVisualizationType.area },\n          },\n        },\n      },\n      {\n        id: InfraMetric.nginxActiveConnections,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.nginxMetricsLayout.activeConnectionsSection.sectionLabel',\n          {\n            defaultMessage: 'Active Connections',\n          }\n        ),\n        requires: ['nginx.stubstatus'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.abbreviatedNumber,\n          seriesOverrides: {\n            connections: {\n              color: theme.eui.euiColorVis1,\n              type: InfraMetricLayoutVisualizationType.bar,\n            },\n          },\n        },\n      },\n      {\n        id: InfraMetric.nginxRequestsPerConnection,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.nginxMetricsLayout.requestsPerConnectionsSection.sectionLabel',\n          {\n            defaultMessage: 'Requests per Connections',\n          }\n        ),\n        requires: ['nginx.stubstatus'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.abbreviatedNumber,\n          seriesOverrides: {\n            reqPerConns: {\n              color: theme.eui.euiColorVis1,\n              type: InfraMetricLayoutVisualizationType.bar,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.nginxMetricsLayout.requestsPerConnectionsSection.reqsPerConnSeriesLabel',\n                {\n                  defaultMessage: 'reqs per conn',\n                }\n              ),\n            },\n          },\n        },\n      },\n    ],\n  },\n];\n"]}]}