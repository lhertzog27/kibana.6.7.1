{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_filter/selectors.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_filter/selectors.ts","mtime":1567631711987},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { createSelector } from 'reselect';\nimport { fromKueryExpression } from '@kbn/es-query';\nexport var selectLogFilterQuery = function (state) {\n    return state.filterQuery ? state.filterQuery.query : null;\n};\nexport var selectLogFilterQueryAsJson = function (state) {\n    return state.filterQuery ? state.filterQuery.serializedQuery : null;\n};\nexport var selectLogFilterQueryDraft = function (state) { return state.filterQueryDraft; };\nexport var selectIsLogFilterQueryDraftValid = createSelector(selectLogFilterQueryDraft, function (filterQueryDraft) {\n    if (filterQueryDraft && filterQueryDraft.kind === 'kuery') {\n        try {\n            fromKueryExpression(filterQueryDraft.expression);\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    return true;\n});\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_filter/selectors.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/store/local/log_filter/selectors.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAE1C,OAAO,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AAIpD,MAAM,CAAC,IAAM,oBAAoB,GAAG,UAAC,KAAqB;IACxD,OAAA,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;AAAlD,CAAkD,CAAC;AAErD,MAAM,CAAC,IAAM,0BAA0B,GAAG,UAAC,KAAqB;IAC9D,OAAA,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI;AAA5D,CAA4D,CAAC;AAE/D,MAAM,CAAC,IAAM,yBAAyB,GAAG,UAAC,KAAqB,IAAK,OAAA,KAAK,CAAC,gBAAgB,EAAtB,CAAsB,CAAC;AAE3F,MAAM,CAAC,IAAM,gCAAgC,GAAG,cAAc,CAC5D,yBAAyB,EACzB,UAAA,gBAAgB;IACd,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,IAAI,KAAK,OAAO,EAAE;QACzD,IAAI;YACF,mBAAmB,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SAClD;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,KAAK,CAAC;SACd;KACF;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CACF,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { createSelector } from 'reselect';\n\nimport { fromKueryExpression } from '@kbn/es-query';\n\nimport { LogFilterState } from './reducer';\n\nexport const selectLogFilterQuery = (state: LogFilterState) =>\n  state.filterQuery ? state.filterQuery.query : null;\n\nexport const selectLogFilterQueryAsJson = (state: LogFilterState) =>\n  state.filterQuery ? state.filterQuery.serializedQuery : null;\n\nexport const selectLogFilterQueryDraft = (state: LogFilterState) => state.filterQueryDraft;\n\nexport const selectIsLogFilterQueryDraftValid = createSelector(\n  selectLogFilterQueryDraft,\n  filterQueryDraft => {\n    if (filterQueryDraft && filterQueryDraft.kind === 'kuery') {\n      try {\n        fromKueryExpression(filterQueryDraft.expression);\n      } catch (err) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n);\n"]}]}