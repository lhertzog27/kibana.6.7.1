{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/TransactionActionMenu/TransactionActionMenu.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/TransactionActionMenu/TransactionActionMenu.tsx","mtime":1567631711867},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButtonEmpty, EuiContextMenuItem, EuiContextMenuPanel, EuiFlexGroup, EuiFlexItem, EuiIcon, EuiLink, EuiPopover } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport idx from 'idx';\nimport React from 'react';\nimport { getKibanaHref } from 'x-pack/plugins/apm/public/components/shared/Links/url_helpers';\nimport { getDiscoverQuery } from '../Links/DiscoverLinks/DiscoverTransactionLink';\nimport { QueryWithIndexPattern } from '../Links/DiscoverLinks/QueryWithIndexPattern';\nfunction getInfraMetricsQuery(transaction) {\n    var plus5 = new Date(transaction['@timestamp']);\n    var minus5 = new Date(transaction['@timestamp']);\n    plus5.setMinutes(plus5.getMinutes() + 5);\n    minus5.setMinutes(minus5.getMinutes() - 5);\n    return {\n        from: minus5.getTime(),\n        to: plus5.getTime()\n    };\n}\nfunction ActionMenuButton(_a) {\n    var onClick = _a.onClick;\n    return (React.createElement(EuiButtonEmpty, { iconType: \"arrowDown\", iconSide: \"right\", onClick: onClick }, i18n.translate('xpack.apm.transactionActionMenu.actionsButtonLabel', {\n        defaultMessage: 'Actions'\n    })));\n}\nvar TransactionActionMenu = /** @class */ (function (_super) {\n    tslib_1.__extends(TransactionActionMenu, _super);\n    function TransactionActionMenu() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isOpen: false\n        };\n        _this.toggle = function () {\n            _this.setState(function (state) { return ({ isOpen: !state.isOpen }); });\n        };\n        _this.close = function () {\n            _this.setState({ isOpen: false });\n        };\n        return _this;\n    }\n    TransactionActionMenu.prototype.getInfraActions = function () {\n        var _a = this.props, transaction = _a.transaction, location = _a.location;\n        var hostName = idx(transaction, function (_) { return _.context.system.hostname; });\n        var podId = idx(transaction, function (_) { return _.kubernetes.pod.uid; });\n        var containerId = idx(transaction, function (_) { return _.docker.container.id; });\n        var pathname = '/app/infra';\n        var time = new Date(transaction['@timestamp']).getTime();\n        var infraMetricsQuery = getInfraMetricsQuery(transaction);\n        return [\n            {\n                icon: 'loggingApp',\n                label: i18n.translate('xpack.apm.transactionActionMenu.showPodLogsLinkLabel', { defaultMessage: 'Show pod logs' }),\n                target: podId,\n                hash: \"/link-to/pod-logs/\" + podId,\n                query: { time: time }\n            },\n            {\n                icon: 'loggingApp',\n                label: i18n.translate('xpack.apm.transactionActionMenu.showContainerLogsLinkLabel', { defaultMessage: 'Show container logs' }),\n                target: containerId,\n                hash: \"/link-to/container-logs/\" + containerId,\n                query: { time: time }\n            },\n            {\n                icon: 'loggingApp',\n                label: i18n.translate('xpack.apm.transactionActionMenu.showHostLogsLinkLabel', { defaultMessage: 'Show host logs' }),\n                target: hostName,\n                hash: \"/link-to/host-logs/\" + hostName,\n                query: { time: time }\n            },\n            {\n                icon: 'infraApp',\n                label: i18n.translate('xpack.apm.transactionActionMenu.showPodMetricsLinkLabel', { defaultMessage: 'Show pod metrics' }),\n                target: podId,\n                hash: \"/link-to/pod-detail/\" + podId,\n                query: infraMetricsQuery\n            },\n            {\n                icon: 'infraApp',\n                label: i18n.translate('xpack.apm.transactionActionMenu.showContainerMetricsLinkLabel', { defaultMessage: 'Show container metrics' }),\n                target: containerId,\n                hash: \"/link-to/container-detail/\" + containerId,\n                query: infraMetricsQuery\n            },\n            {\n                icon: 'infraApp',\n                label: i18n.translate('xpack.apm.transactionActionMenu.showHostMetricsLinkLabel', { defaultMessage: 'Show host metrics' }),\n                target: hostName,\n                hash: \"/link-to/host-detail/\" + hostName,\n                query: infraMetricsQuery\n            }\n        ]\n            .filter(function (_a) {\n            var target = _a.target;\n            return Boolean(target);\n        })\n            .map(function (_a, index) {\n            var icon = _a.icon, label = _a.label, hash = _a.hash, query = _a.query;\n            var href = getKibanaHref({\n                location: location,\n                pathname: pathname,\n                hash: hash,\n                query: query // TODO: differentiate between APM ui query args, and external query args\n            });\n            return (React.createElement(EuiContextMenuItem, { icon: icon, href: href, key: index },\n                React.createElement(EuiFlexGroup, { gutterSize: \"s\" },\n                    React.createElement(EuiFlexItem, null,\n                        React.createElement(EuiLink, null, label)),\n                    React.createElement(EuiFlexItem, { grow: false },\n                        React.createElement(EuiIcon, { type: \"popout\" })))));\n        });\n    };\n    TransactionActionMenu.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, transaction = _a.transaction, location = _a.location;\n        return (React.createElement(QueryWithIndexPattern, { query: getDiscoverQuery(transaction) }, function (query) {\n            var discoverTransactionHref = getKibanaHref({\n                location: location,\n                pathname: '/app/kibana',\n                hash: '/discover',\n                query: query\n            });\n            var items = tslib_1.__spread(_this.getInfraActions(), [\n                React.createElement(EuiContextMenuItem, { icon: \"discoverApp\", href: discoverTransactionHref, key: \"discover-transaction\" },\n                    React.createElement(EuiFlexGroup, { gutterSize: \"s\" },\n                        React.createElement(EuiFlexItem, null,\n                            React.createElement(EuiLink, null, i18n.translate('xpack.apm.transactionActionMenu.viewSampleDocumentLinkLabel', {\n                                defaultMessage: 'View sample document'\n                            }))),\n                        React.createElement(EuiFlexItem, { grow: false },\n                            React.createElement(EuiIcon, { type: \"popout\" }))))\n            ]);\n            return (React.createElement(EuiPopover, { id: \"transactionActionMenu\", button: React.createElement(ActionMenuButton, { onClick: _this.toggle }), isOpen: _this.state.isOpen, closePopover: _this.close, anchorPosition: \"downRight\", panelPaddingSize: \"none\" },\n                React.createElement(EuiContextMenuPanel, { items: items, title: i18n.translate('xpack.apm.transactionActionMenu.actionsLabel', { defaultMessage: 'Actions' }) })));\n        }));\n    };\n    return TransactionActionMenu;\n}(React.Component));\nexport { TransactionActionMenu };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/TransactionActionMenu/TransactionActionMenu.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/TransactionActionMenu/TransactionActionMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiButtonEmpty,\n  EuiContextMenuItem,\n  EuiContextMenuPanel,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiIcon,\n  EuiLink,\n  EuiPopover\n} from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { Location } from 'history';\nimport idx from 'idx';\nimport React from 'react';\nimport { getKibanaHref } from 'x-pack/plugins/apm/public/components/shared/Links/url_helpers';\nimport { StringMap } from 'x-pack/plugins/apm/typings/common';\nimport {\n  Transaction,\n  TransactionV2\n} from 'x-pack/plugins/apm/typings/es_schemas/Transaction';\nimport { getDiscoverQuery } from '../Links/DiscoverLinks/DiscoverTransactionLink';\nimport { QueryWithIndexPattern } from '../Links/DiscoverLinks/QueryWithIndexPattern';\n\nfunction getInfraMetricsQuery(transaction: Transaction) {\n  const plus5 = new Date(transaction['@timestamp']);\n  const minus5 = new Date(transaction['@timestamp']);\n\n  plus5.setMinutes(plus5.getMinutes() + 5);\n  minus5.setMinutes(minus5.getMinutes() - 5);\n\n  return {\n    from: minus5.getTime(),\n    to: plus5.getTime()\n  };\n}\n\nfunction ActionMenuButton({ onClick }: { onClick: () => void }) {\n  return (\n    <EuiButtonEmpty iconType=\"arrowDown\" iconSide=\"right\" onClick={onClick}>\n      {i18n.translate('xpack.apm.transactionActionMenu.actionsButtonLabel', {\n        defaultMessage: 'Actions'\n      })}\n    </EuiButtonEmpty>\n  );\n}\n\ninterface Props {\n  readonly transaction: Transaction;\n  readonly location: Location;\n}\n\ninterface State {\n  readonly isOpen: boolean;\n}\n\nexport class TransactionActionMenu extends React.Component<Props, State> {\n  public state: State = {\n    isOpen: false\n  };\n\n  public toggle = () => {\n    this.setState(state => ({ isOpen: !state.isOpen }));\n  };\n\n  public close = () => {\n    this.setState({ isOpen: false });\n  };\n\n  public getInfraActions() {\n    const { transaction, location } = this.props;\n    const hostName = idx(transaction, _ => _.context.system.hostname);\n    const podId = idx(transaction as TransactionV2, _ => _.kubernetes.pod.uid);\n    const containerId = idx(\n      transaction as TransactionV2,\n      _ => _.docker.container.id\n    );\n    const pathname = '/app/infra';\n    const time = new Date(transaction['@timestamp']).getTime();\n    const infraMetricsQuery = getInfraMetricsQuery(transaction);\n\n    return [\n      {\n        icon: 'loggingApp',\n        label: i18n.translate(\n          'xpack.apm.transactionActionMenu.showPodLogsLinkLabel',\n          { defaultMessage: 'Show pod logs' }\n        ),\n        target: podId,\n        hash: `/link-to/pod-logs/${podId}`,\n        query: { time }\n      },\n\n      {\n        icon: 'loggingApp',\n        label: i18n.translate(\n          'xpack.apm.transactionActionMenu.showContainerLogsLinkLabel',\n          { defaultMessage: 'Show container logs' }\n        ),\n        target: containerId,\n        hash: `/link-to/container-logs/${containerId}`,\n        query: { time }\n      },\n\n      {\n        icon: 'loggingApp',\n        label: i18n.translate(\n          'xpack.apm.transactionActionMenu.showHostLogsLinkLabel',\n          { defaultMessage: 'Show host logs' }\n        ),\n        target: hostName,\n        hash: `/link-to/host-logs/${hostName}`,\n        query: { time }\n      },\n\n      {\n        icon: 'infraApp',\n        label: i18n.translate(\n          'xpack.apm.transactionActionMenu.showPodMetricsLinkLabel',\n          { defaultMessage: 'Show pod metrics' }\n        ),\n        target: podId,\n        hash: `/link-to/pod-detail/${podId}`,\n        query: infraMetricsQuery\n      },\n\n      {\n        icon: 'infraApp',\n        label: i18n.translate(\n          'xpack.apm.transactionActionMenu.showContainerMetricsLinkLabel',\n          { defaultMessage: 'Show container metrics' }\n        ),\n        target: containerId,\n        hash: `/link-to/container-detail/${containerId}`,\n        query: infraMetricsQuery\n      },\n\n      {\n        icon: 'infraApp',\n        label: i18n.translate(\n          'xpack.apm.transactionActionMenu.showHostMetricsLinkLabel',\n          { defaultMessage: 'Show host metrics' }\n        ),\n        target: hostName,\n        hash: `/link-to/host-detail/${hostName}`,\n        query: infraMetricsQuery\n      }\n    ]\n      .filter(({ target }) => Boolean(target))\n      .map(({ icon, label, hash, query }, index) => {\n        const href = getKibanaHref({\n          location,\n          pathname,\n          hash,\n          query: query as StringMap // TODO: differentiate between APM ui query args, and external query args\n        });\n\n        return (\n          <EuiContextMenuItem icon={icon} href={href} key={index}>\n            <EuiFlexGroup gutterSize=\"s\">\n              <EuiFlexItem>\n                <EuiLink>{label}</EuiLink>\n              </EuiFlexItem>\n              <EuiFlexItem grow={false}>\n                <EuiIcon type=\"popout\" />\n              </EuiFlexItem>\n            </EuiFlexGroup>\n          </EuiContextMenuItem>\n        );\n      });\n  }\n\n  public render() {\n    const { transaction, location } = this.props;\n    return (\n      <QueryWithIndexPattern query={getDiscoverQuery(transaction)}>\n        {query => {\n          const discoverTransactionHref = getKibanaHref({\n            location,\n            pathname: '/app/kibana',\n            hash: '/discover',\n            query\n          });\n\n          const items = [\n            ...this.getInfraActions(),\n            <EuiContextMenuItem\n              icon=\"discoverApp\"\n              href={discoverTransactionHref}\n              key=\"discover-transaction\"\n            >\n              <EuiFlexGroup gutterSize=\"s\">\n                <EuiFlexItem>\n                  <EuiLink>\n                    {i18n.translate(\n                      'xpack.apm.transactionActionMenu.viewSampleDocumentLinkLabel',\n                      {\n                        defaultMessage: 'View sample document'\n                      }\n                    )}\n                  </EuiLink>\n                </EuiFlexItem>\n                <EuiFlexItem grow={false}>\n                  <EuiIcon type=\"popout\" />\n                </EuiFlexItem>\n              </EuiFlexGroup>\n            </EuiContextMenuItem>\n          ];\n\n          return (\n            <EuiPopover\n              id=\"transactionActionMenu\"\n              button={<ActionMenuButton onClick={this.toggle} />}\n              isOpen={this.state.isOpen}\n              closePopover={this.close}\n              anchorPosition=\"downRight\"\n              panelPaddingSize=\"none\"\n            >\n              <EuiContextMenuPanel\n                items={items}\n                title={i18n.translate(\n                  'xpack.apm.transactionActionMenu.actionsLabel',\n                  { defaultMessage: 'Actions' }\n                )}\n              />\n            </EuiPopover>\n          );\n        }}\n      </QueryWithIndexPattern>\n    );\n  }\n}\n"]}]}