{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/PropertiesTable/index.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/PropertiesTable/index.tsx","mtime":1567631711866},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiIcon } from '@elastic/eui';\nimport { EuiLink } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { get, indexBy, uniq } from 'lodash';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { colors, fontSize, fontSizes, px, unit, units } from '../../../style/variables';\nimport { getAgentFeatureDocsUrl } from '../../../utils/documentation/agents';\nimport { NestedKeyValueTable } from './NestedKeyValueTable';\nimport { PROPERTY_CONFIG } from './propertyConfig';\nvar TableContainer = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  padding-bottom: \", \";\\n\"], [\"\\n  padding-bottom: \", \";\\n\"])), px(units.double));\nvar TableInfo = styled.div(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  padding: \", \" 0 0;\\n  text-align: center;\\n  font-size: \", \";\\n  color: \", \";\\n  line-height: 1.5;\\n\"], [\"\\n  padding: \", \" 0 0;\\n  text-align: center;\\n  font-size: \", \";\\n  color: \", \";\\n  line-height: 1.5;\\n\"])), px(unit), fontSize, colors.gray2);\nvar TableInfoHeader = styled(TableInfo)(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n  font-size: \", \";\\n  color: \", \";\\n\"], [\"\\n  font-size: \", \";\\n  color: \", \";\\n\"])), fontSizes.large, colors.black2);\nvar EuiIconWithSpace = styled(EuiIcon)(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"\\n  margin-right: \", \";\\n\"], [\"\\n  margin-right: \", \";\\n\"])), px(units.half));\nexport function getPropertyTabNames(selected) {\n    return PROPERTY_CONFIG.filter(function (_a) {\n        var key = _a.key, required = _a.required;\n        return required || selected.includes(key);\n    }).map(function (_a) {\n        var key = _a.key, label = _a.label;\n        return ({ key: key, label: label });\n    });\n}\nfunction getAgentFeatureText(featureName) {\n    switch (featureName) {\n        case 'user':\n            return i18n.translate('xpack.apm.propertiesTable.userTab.agentFeatureText', {\n                defaultMessage: 'You can configure your agent to add contextual information about your users.'\n            });\n        case 'tags':\n            return i18n.translate('xpack.apm.propertiesTable.tagsTab.agentFeatureText', {\n                defaultMessage: 'You can configure your agent to add filterable tags on transactions.'\n            });\n        case 'custom':\n            return i18n.translate('xpack.apm.propertiesTable.customTab.agentFeatureText', {\n                defaultMessage: 'You can configure your agent to add custom contextual information on transactions.'\n            });\n    }\n}\nexport function AgentFeatureTipMessage(_a) {\n    var featureName = _a.featureName, agentName = _a.agentName;\n    var docsUrl = getAgentFeatureDocsUrl(featureName, agentName);\n    if (!docsUrl) {\n        return null;\n    }\n    return (React.createElement(TableInfo, null,\n        React.createElement(EuiIconWithSpace, { type: \"iInCircle\" }),\n        getAgentFeatureText(featureName),\n        ' ',\n        React.createElement(EuiLink, { target: \"_blank\", rel: \"noopener\", href: docsUrl }, i18n.translate('xpack.apm.propertiesTable.agentFeature.learnMoreLinkLabel', { defaultMessage: 'Learn more in the documentation.' }))));\n}\nexport var sortKeysByConfig = function (object, currentKey) {\n    var indexedPropertyConfig = indexBy(PROPERTY_CONFIG, 'key');\n    var presorted = get(indexedPropertyConfig, currentKey + \".presortedKeys\", []);\n    return uniq(tslib_1.__spread(presorted, Object.keys(object).sort()));\n};\nexport function PropertiesTable(_a) {\n    var propData = _a.propData, propKey = _a.propKey, agentName = _a.agentName;\n    return (React.createElement(TableContainer, null,\n        propData ? (React.createElement(NestedKeyValueTable, { data: propData, parentKey: propKey, keySorter: sortKeysByConfig, depth: 1 })) : (React.createElement(TableInfoHeader, null, i18n.translate('xpack.apm.propertiesTable.agentFeature.noDataAvailableLabel', { defaultMessage: 'No data available' }))),\n        React.createElement(AgentFeatureTipMessage, { featureName: propKey, agentName: agentName })));\n}\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/PropertiesTable/index.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/shared/PropertiesTable/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiIcon } from '@elastic/eui';\nimport { EuiLink } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { get, indexBy, uniq } from 'lodash';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { StringMap } from '../../../../typings/common';\nimport {\n  colors,\n  fontSize,\n  fontSizes,\n  px,\n  unit,\n  units\n} from '../../../style/variables';\nimport { getAgentFeatureDocsUrl } from '../../../utils/documentation/agents';\nimport { KeySorter, NestedKeyValueTable } from './NestedKeyValueTable';\nimport { PROPERTY_CONFIG } from './propertyConfig';\n\nconst TableContainer = styled.div`\n  padding-bottom: ${px(units.double)};\n`;\n\nconst TableInfo = styled.div`\n  padding: ${px(unit)} 0 0;\n  text-align: center;\n  font-size: ${fontSize};\n  color: ${colors.gray2};\n  line-height: 1.5;\n`;\n\nconst TableInfoHeader = styled(TableInfo)`\n  font-size: ${fontSizes.large};\n  color: ${colors.black2};\n`;\n\nconst EuiIconWithSpace = styled(EuiIcon)`\n  margin-right: ${px(units.half)};\n`;\n\nexport interface Tab {\n  key: string;\n  label: string;\n}\n\nexport function getPropertyTabNames(selected: string[]): Tab[] {\n  return PROPERTY_CONFIG.filter(\n    ({ key, required }) => required || selected.includes(key)\n  ).map(({ key, label }) => ({ key, label }));\n}\n\nfunction getAgentFeatureText(featureName: string) {\n  switch (featureName) {\n    case 'user':\n      return i18n.translate(\n        'xpack.apm.propertiesTable.userTab.agentFeatureText',\n        {\n          defaultMessage:\n            'You can configure your agent to add contextual information about your users.'\n        }\n      );\n    case 'tags':\n      return i18n.translate(\n        'xpack.apm.propertiesTable.tagsTab.agentFeatureText',\n        {\n          defaultMessage:\n            'You can configure your agent to add filterable tags on transactions.'\n        }\n      );\n    case 'custom':\n      return i18n.translate(\n        'xpack.apm.propertiesTable.customTab.agentFeatureText',\n        {\n          defaultMessage:\n            'You can configure your agent to add custom contextual information on transactions.'\n        }\n      );\n  }\n}\n\nexport function AgentFeatureTipMessage({\n  featureName,\n  agentName\n}: {\n  featureName: string;\n  agentName?: string;\n}) {\n  const docsUrl = getAgentFeatureDocsUrl(featureName, agentName);\n  if (!docsUrl) {\n    return null;\n  }\n\n  return (\n    <TableInfo>\n      <EuiIconWithSpace type=\"iInCircle\" />\n      {getAgentFeatureText(featureName)}{' '}\n      <EuiLink target=\"_blank\" rel=\"noopener\" href={docsUrl}>\n        {i18n.translate(\n          'xpack.apm.propertiesTable.agentFeature.learnMoreLinkLabel',\n          { defaultMessage: 'Learn more in the documentation.' }\n        )}\n      </EuiLink>\n    </TableInfo>\n  );\n}\n\nexport const sortKeysByConfig: KeySorter = (object, currentKey) => {\n  const indexedPropertyConfig = indexBy(PROPERTY_CONFIG, 'key');\n  const presorted = get(\n    indexedPropertyConfig,\n    `${currentKey}.presortedKeys`,\n    []\n  );\n  return uniq([...presorted, ...Object.keys(object).sort()]);\n};\n\nexport function PropertiesTable({\n  propData,\n  propKey,\n  agentName\n}: {\n  propData?: StringMap<any>;\n  propKey: string;\n  agentName?: string;\n}) {\n  return (\n    <TableContainer>\n      {propData ? (\n        <NestedKeyValueTable\n          data={propData}\n          parentKey={propKey}\n          keySorter={sortKeysByConfig}\n          depth={1}\n        />\n      ) : (\n        <TableInfoHeader>\n          {i18n.translate(\n            'xpack.apm.propertiesTable.agentFeature.noDataAvailableLabel',\n            { defaultMessage: 'No data available' }\n          )}\n        </TableInfoHeader>\n      )}\n      <AgentFeatureTipMessage featureName={propKey} agentName={agentName} />\n    </TableContainer>\n  );\n}\n"]}]}