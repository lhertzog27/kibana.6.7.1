{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/objects/lib/get_fields.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/objects/lib/get_fields.ts","mtime":1567631712297},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport chrome from 'ui/chrome';\nvar apiBase = chrome.addBasePath(\"/api/security/v1/fields\");\nexport function getFields($http, query) {\n    return tslib_1.__awaiter(this, void 0, Promise, function () {\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, $http\n                        .get(apiBase + \"/\" + query)\n                        .then(function (response) { return response.data || []; })];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/objects/lib/get_fields.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/security/public/objects/lib/get_fields.ts"],"names":[],"mappings":";AAMA,OAAO,MAAM,MAAM,WAAW,CAAC;AAE/B,IAAM,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC;AAE9D,MAAM,UAAgB,SAAS,CAAC,KAAU,EAAE,KAAa;2CAAG,OAAO;;;wBAC1D,qBAAM,KAAK;yBACf,GAAG,CAAI,OAAO,SAAI,KAAO,CAAC;yBAC1B,IAAI,CAAC,UAAC,QAAiC,IAAK,OAAA,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAnB,CAAmB,CAAC,EAAA;wBAFnE,sBAAO,SAE4D,EAAC;;;;CACrE","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { IHttpResponse } from 'angular';\nimport chrome from 'ui/chrome';\n\nconst apiBase = chrome.addBasePath(`/api/security/v1/fields`);\n\nexport async function getFields($http: any, query: string): Promise<string[]> {\n  return await $http\n    .get(`${apiBase}/${query}`)\n    .then((response: IHttpResponse<string[]>) => response.data || []);\n}\n"]}]}