{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/tags.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/tags.ts","mtime":1567631711883},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport uuidv4 from 'uuid/v4';\nvar TagsLib = /** @class */ (function () {\n    function TagsLib(adapter, elasticsearch) {\n        this.adapter = adapter;\n        this.elasticsearch = elasticsearch;\n    }\n    TagsLib.prototype.getTagsWithIds = function (tagIds) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (tagIds.length === 0) {\n                            return [2 /*return*/, []];\n                        }\n                        return [4 /*yield*/, this.adapter.getTagsWithIds(tslib_1.__spread(new Set(tagIds)))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    TagsLib.prototype.delete = function (tagIds) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.adapter.delete(tslib_1.__spread(new Set(tagIds)))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    // FIXME: This needs to be paginated https://github.com/elastic/kibana/issues/26022\n    TagsLib.prototype.getAll = function (kuery) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var ESQuery;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!kuery) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.elasticsearch.convertKueryToEsQuery(kuery)];\n                    case 1:\n                        ESQuery = _a.sent();\n                        _a.label = 2;\n                    case 2: return [4 /*yield*/, this.adapter.getAll(ESQuery)];\n                    case 3: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    TagsLib.prototype.upsertTag = function (tag) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!tag.id) {\n                            tag.id = uuidv4();\n                        }\n                        return [4 /*yield*/, this.adapter.upsertTag(tag)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    TagsLib.prototype.getassignableTagsForBeats = function (beats) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.adapter.getAssignable(beats)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    return TagsLib;\n}());\nexport { TagsLib };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/tags.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/tags.ts"],"names":[],"mappings":";AAAA;;;;GAIG;AACH,OAAO,MAAM,MAAM,SAAS,CAAC;AAK7B;IACE,iBACmB,OAAsB,EACtB,aAA+B;QAD/B,YAAO,GAAP,OAAO,CAAe;QACtB,kBAAa,GAAb,aAAa,CAAkB;IAC/C,CAAC;IAES,gCAAc,GAA3B,UAA4B,MAAgB;+CAAG,OAAO;;;;wBACpD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;4BACvB,sBAAO,EAAE,EAAC;yBACX;wBACM,qBAAM,IAAI,CAAC,OAAO,CAAC,cAAc,kBAAK,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE,EAAA;4BAA9D,sBAAO,SAAuD,EAAC;;;;KAChE;IACY,wBAAM,GAAnB,UAAoB,MAAgB;+CAAG,OAAO;;;4BACrC,qBAAM,IAAI,CAAC,OAAO,CAAC,MAAM,kBAAK,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE,EAAA;4BAAtD,sBAAO,SAA+C,EAAC;;;;KACxD;IAED,mFAAmF;IACtE,wBAAM,GAAnB,UAAoB,KAAc;+CAAG,OAAO;;;;;6BAEtC,KAAK,EAAL,wBAAK;wBACG,qBAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAA;;wBAA/D,OAAO,GAAG,SAAqD,CAAC;;4BAG3D,qBAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,EAAA;4BAAzC,sBAAO,SAAkC,EAAC;;;;KAC3C;IACY,2BAAS,GAAtB,UAAuB,GAAY;+CAAG,OAAO;;;;wBAC3C,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE;4BACX,GAAG,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC;yBACnB;wBACM,qBAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAA;4BAAxC,sBAAO,SAAiC,EAAC;;;;KAC1C;IAEY,2CAAyB,GAAtC,UAAuC,KAAe;+CAAG,OAAO;;;4BACvD,qBAAM,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,EAAA;4BAA9C,sBAAO,SAAuC,EAAC;;;;KAChD;IACH,cAAC;AAAD,CAAC,AAnCD,IAmCC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport uuidv4 from 'uuid/v4';\nimport { BeatTag, CMBeat } from '../../common/domain_types';\nimport { CMTagsAdapter } from './adapters/tags/adapter_types';\nimport { ElasticsearchLib } from './elasticsearch';\n\nexport class TagsLib {\n  constructor(\n    private readonly adapter: CMTagsAdapter,\n    private readonly elasticsearch: ElasticsearchLib\n  ) {}\n\n  public async getTagsWithIds(tagIds: string[]): Promise<BeatTag[]> {\n    if (tagIds.length === 0) {\n      return [];\n    }\n    return await this.adapter.getTagsWithIds([...new Set(tagIds)]);\n  }\n  public async delete(tagIds: string[]): Promise<boolean> {\n    return await this.adapter.delete([...new Set(tagIds)]);\n  }\n\n  // FIXME: This needs to be paginated https://github.com/elastic/kibana/issues/26022\n  public async getAll(kuery?: string): Promise<BeatTag[]> {\n    let ESQuery;\n    if (kuery) {\n      ESQuery = await this.elasticsearch.convertKueryToEsQuery(kuery);\n    }\n\n    return await this.adapter.getAll(ESQuery);\n  }\n  public async upsertTag(tag: BeatTag): Promise<BeatTag | null> {\n    if (!tag.id) {\n      tag.id = uuidv4();\n    }\n    return await this.adapter.upsertTag(tag);\n  }\n\n  public async getassignableTagsForBeats(beats: CMBeat[]): Promise<BeatTag[]> {\n    return await this.adapter.getAssignable(beats);\n  }\n}\n"]}]}