{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/ServiceIntegrations/WatcherFlyout.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/ServiceIntegrations/WatcherFlyout.tsx","mtime":1567631711860},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiButton, EuiFieldNumber, EuiFieldText, EuiFlexGroup, EuiFlexItem, EuiFlyout, EuiFlyoutBody, EuiFlyoutFooter, EuiFlyoutHeader, EuiForm, EuiFormRow, EuiLink, EuiRadio, EuiSelect, EuiSpacer, EuiSwitch, EuiText, EuiTitle } from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport { memoize, padLeft, range } from 'lodash';\nimport moment from 'moment-timezone';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport chrome from 'ui/chrome';\nimport { toastNotifications } from 'ui/notify';\nimport { UnconnectedKibanaLink } from 'x-pack/plugins/apm/public/components/shared/Links/KibanaLink';\nimport { XPACK_DOCS } from '../../../../utils/documentation/xpack';\nimport { createErrorGroupWatch } from './createErrorGroupWatch';\nvar getUserTimezone = memoize(function () {\n    var uiSettings = chrome.getUiSettingsClient();\n    return uiSettings.get('dateFormat:tz') === 'Browser'\n        ? moment.tz.guess()\n        : uiSettings.get('dateFormat:tz');\n});\nvar SmallInput = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  .euiFormRow {\\n    max-width: 85px;\\n  }\\n  .euiFormHelpText {\\n    width: 200px;\\n  }\\n\"], [\"\\n  .euiFormRow {\\n    max-width: 85px;\\n  }\\n  .euiFormHelpText {\\n    width: 200px;\\n  }\\n\"])));\nvar WatcherFlyout = /** @class */ (function (_super) {\n    tslib_1.__extends(WatcherFlyout, _super);\n    function WatcherFlyout() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            schedule: 'daily',\n            threshold: 10,\n            actions: {\n                slack: false,\n                email: false\n            },\n            interval: {\n                value: 10,\n                unit: 'm'\n            },\n            daily: '08:00',\n            emails: '',\n            slackUrl: ''\n        };\n        _this.onChangeSchedule = function (schedule) {\n            _this.setState({ schedule: schedule });\n        };\n        _this.onChangeThreshold = function (event) {\n            _this.setState({\n                threshold: parseInt(event.target.value, 10)\n            });\n        };\n        _this.onChangeDailyUnit = function (event) {\n            _this.setState({\n                daily: event.target.value\n            });\n        };\n        _this.onChangeIntervalValue = function (event) {\n            _this.setState({\n                interval: {\n                    value: parseInt(event.target.value, 10),\n                    unit: _this.state.interval.unit\n                }\n            });\n        };\n        _this.onChangeIntervalUnit = function (event) {\n            _this.setState({\n                interval: {\n                    value: _this.state.interval.value,\n                    unit: event.target.value\n                }\n            });\n        };\n        _this.onChangeAction = function (actionName) {\n            var _a;\n            _this.setState({\n                actions: tslib_1.__assign({}, _this.state.actions, (_a = {}, _a[actionName] = !_this.state.actions[actionName], _a))\n            });\n        };\n        _this.onChangeEmails = function (event) {\n            _this.setState({ emails: event.target.value });\n        };\n        _this.onChangeSlackUrl = function (event) {\n            _this.setState({ slackUrl: event.target.value });\n        };\n        _this.createWatch = function () {\n            var serviceName = _this.props.urlParams.serviceName;\n            if (!serviceName) {\n                return;\n            }\n            var emails = _this.state.actions.email\n                ? _this.state.emails\n                    .split(',')\n                    .map(function (email) { return email.trim(); })\n                    .filter(function (email) { return !!email; })\n                : [];\n            var slackUrl = _this.state.actions.slack ? _this.state.slackUrl : '';\n            var schedule = _this.state.schedule === 'interval'\n                ? {\n                    interval: \"\" + _this.state.interval.value + _this.state.interval.unit\n                }\n                : {\n                    daily: { at: \"\" + _this.state.daily }\n                };\n            var timeRange = _this.state.schedule === 'interval'\n                ? {\n                    value: _this.state.interval.value,\n                    unit: _this.state.interval.unit\n                }\n                : {\n                    value: 24,\n                    unit: 'h'\n                };\n            return createErrorGroupWatch({\n                emails: emails,\n                schedule: schedule,\n                serviceName: serviceName,\n                slackUrl: slackUrl,\n                threshold: _this.state.threshold,\n                timeRange: timeRange\n            })\n                .then(function (id) {\n                _this.props.onClose();\n                _this.addSuccessToast(id);\n            })\n                .catch(function (e) {\n                // tslint:disable-next-line\n                console.error(e);\n                _this.addErrorToast();\n            });\n        };\n        _this.addErrorToast = function () {\n            toastNotifications.addWarning({\n                title: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.watchCreationFailedNotificationTitle', {\n                    defaultMessage: 'Watch creation failed'\n                }),\n                text: (React.createElement(\"p\", null, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.watchCreationFailedNotificationText', {\n                    defaultMessage: 'Make sure your user has permission to create watches.'\n                })))\n            });\n        };\n        _this.addSuccessToast = function (id) {\n            toastNotifications.addSuccess({\n                title: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.watchCreatedNotificationTitle', {\n                    defaultMessage: 'New watch created!'\n                }),\n                text: (React.createElement(\"p\", null,\n                    i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.watchCreatedNotificationText', {\n                        defaultMessage: 'The watch is now ready and will send error reports for {serviceName}.',\n                        values: {\n                            serviceName: _this.props.urlParams.serviceName\n                        }\n                    }),\n                    ' ',\n                    React.createElement(UnconnectedKibanaLink, { location: _this.props.location, pathname: '/app/kibana', hash: \"/management/elasticsearch/watcher/watches/watch/\" + id }, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.watchCreatedNotificationText.viewWatchLinkText', {\n                        defaultMessage: 'View watch'\n                    }))))\n            });\n        };\n        return _this;\n    }\n    WatcherFlyout.prototype.render = function () {\n        var _this = this;\n        if (!this.props.isOpen) {\n            return null;\n        }\n        var userTimezoneSetting = getUserTimezone();\n        var dailyTime = this.state.daily;\n        var inputTime = dailyTime + \"Z\"; // Add tz to make into UTC\n        var inputFormat = 'HH:mmZ'; // Parse as 24 hour w. tz\n        var dailyTimeFormatted = moment(inputTime, inputFormat)\n            .tz(userTimezoneSetting)\n            .format('HH:mm'); // Format as 24h\n        var dailyTime12HourFormatted = moment(inputTime, inputFormat)\n            .tz(userTimezoneSetting)\n            .format('hh:mm A (z)'); // Format as 12h w. tz\n        // Generate UTC hours for Daily Report select field\n        var intervalHours = range(24).map(function (i) {\n            var hour = padLeft(i.toString(), 2, '0');\n            return { value: hour + \":00\", text: hour + \":00 UTC\" };\n        });\n        var flyoutBody = (React.createElement(EuiText, null,\n            React.createElement(\"p\", null,\n                React.createElement(FormattedMessage, { id: \"xpack.apm.serviceDetails.enableErrorReportsPanel.formDescription\", defaultMessage: \"This form will assist in creating a Watch that can notify you of error occurrences from this service.\\n              To learn more about Watcher, please read our {documentationLink}.\", values: {\n                        documentationLink: (React.createElement(EuiLink, { target: \"_blank\", href: XPACK_DOCS.xpackWatcher }, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.formDescription.documentationLinkText', {\n                            defaultMessage: 'documentation'\n                        })))\n                    } })),\n            React.createElement(EuiForm, null,\n                React.createElement(\"h3\", null, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.conditionTitle', {\n                    defaultMessage: 'Condition'\n                })),\n                React.createElement(EuiFormRow, { label: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.occurrencesThresholdLabel', {\n                        defaultMessage: 'Occurrences threshold per error group'\n                    }), helpText: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.occurrencesThresholdHelpText', {\n                        defaultMessage: 'Threshold to be met for error group to be included in report.'\n                    }), compressed: true },\n                    React.createElement(EuiFieldNumber, { icon: \"number\", min: 1, value: this.state.threshold, onChange: this.onChangeThreshold })),\n                React.createElement(\"h3\", null, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.triggerScheduleTitle', {\n                    defaultMessage: 'Trigger schedule'\n                })),\n                React.createElement(\"p\", null, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.triggerScheduleDescription', {\n                    defaultMessage: 'Choose the time interval for the report, when the threshold is exceeded.'\n                })),\n                React.createElement(EuiRadio, { id: \"daily\", label: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.dailyReportRadioButtonLabel', {\n                        defaultMessage: 'Daily report'\n                    }), onChange: function () { return _this.onChangeSchedule('daily'); }, checked: this.state.schedule === 'daily' }),\n                React.createElement(EuiSpacer, { size: \"m\" }),\n                React.createElement(EuiFormRow, { helpText: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.dailyReportHelpText', {\n                        defaultMessage: 'The daily report will be sent at {dailyTimeFormatted} / {dailyTime12HourFormatted}.',\n                        values: { dailyTimeFormatted: dailyTimeFormatted, dailyTime12HourFormatted: dailyTime12HourFormatted }\n                    }), compressed: true },\n                    React.createElement(EuiSelect, { value: dailyTime, onChange: this.onChangeDailyUnit, options: intervalHours, disabled: this.state.schedule !== 'daily' })),\n                React.createElement(EuiRadio, { id: \"interval\", label: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.intervalRadioButtonLabel', {\n                        defaultMessage: 'Interval'\n                    }), onChange: function () { return _this.onChangeSchedule('interval'); }, checked: this.state.schedule === 'interval' }),\n                React.createElement(EuiSpacer, { size: \"m\" }),\n                React.createElement(EuiFlexGroup, null,\n                    React.createElement(EuiFlexItem, { grow: false },\n                        React.createElement(SmallInput, null,\n                            React.createElement(EuiFormRow, { helpText: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.intervalHelpText', {\n                                    defaultMessage: 'Time interval between reports.'\n                                }), compressed: true },\n                                React.createElement(EuiFieldNumber, { icon: \"clock\", min: 1, value: this.state.interval.value, onChange: this.onChangeIntervalValue, disabled: this.state.schedule !== 'interval' })))),\n                    React.createElement(EuiFlexItem, { grow: false },\n                        React.createElement(EuiFormRow, { compressed: true },\n                            React.createElement(EuiSelect, { value: this.state.interval.unit, onChange: this.onChangeIntervalUnit, options: [\n                                    {\n                                        value: 'm',\n                                        text: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.intervalUnit.minsLabel', {\n                                            defaultMessage: 'mins'\n                                        })\n                                    },\n                                    {\n                                        value: 'h',\n                                        text: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.intervalUnit.hrsLabel', {\n                                            defaultMessage: 'hrs'\n                                        })\n                                    }\n                                ], disabled: this.state.schedule !== 'interval' })))),\n                React.createElement(\"h3\", null, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.actionsTitle', {\n                    defaultMessage: 'Actions'\n                })),\n                React.createElement(\"p\", null, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.actionsDescription', {\n                    defaultMessage: 'Reports can be sent by email or posted to a Slack channel. Each report will include the top 10 errors sorted by occurrence.'\n                })),\n                React.createElement(EuiSwitch, { label: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.sendEmailLabel', {\n                        defaultMessage: 'Send email'\n                    }), checked: this.state.actions.email, onChange: function () { return _this.onChangeAction('email'); } }),\n                React.createElement(EuiSpacer, { size: \"m\" }),\n                this.state.actions.email && (React.createElement(EuiFormRow, { label: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.recipientsLabel', {\n                        defaultMessage: 'Recipients (separated with comma)'\n                    }), compressed: true, helpText: React.createElement(\"span\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.apm.serviceDetails.enableErrorReportsPanel.recipientsHelpText\", defaultMessage: \"If you have not configured email, please see the {documentationLink}.\", values: {\n                                documentationLink: (React.createElement(EuiLink, { target: \"_blank\", href: XPACK_DOCS.xpackEmails }, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.recipientsHelpText.documentationLinkText', {\n                                    defaultMessage: 'documentation'\n                                })))\n                            } })) },\n                    React.createElement(EuiFieldText, { icon: \"user\", value: this.state.emails, onChange: this.onChangeEmails }))),\n                React.createElement(EuiSwitch, { label: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.sendSlackNotificationLabel', {\n                        defaultMessage: 'Send Slack notification'\n                    }), checked: this.state.actions.slack, onChange: function () { return _this.onChangeAction('slack'); } }),\n                React.createElement(EuiSpacer, { size: \"m\" }),\n                this.state.actions.slack && (React.createElement(EuiFormRow, { label: i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.slackWebhookURLLabel', {\n                        defaultMessage: 'Slack Webhook URL'\n                    }), compressed: true, helpText: React.createElement(\"span\", null,\n                        React.createElement(FormattedMessage, { id: \"xpack.apm.serviceDetails.enableErrorReportsPanel.slackWebhookURLHelpText\", defaultMessage: \"To get a Slack webhook, please see the {documentationLink}.\", values: {\n                                documentationLink: (React.createElement(EuiLink, { target: \"_blank\", href: \"https://get.slack.help/hc/en-us/articles/115005265063-Incoming-WebHooks-for-Slack\" }, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.slackWebhookURLHelpText.documentationLinkText', {\n                                    defaultMessage: 'documentation'\n                                })))\n                            } })) },\n                    React.createElement(EuiFieldText, { icon: \"link\", value: this.state.slackUrl, onChange: this.onChangeSlackUrl }))))));\n        return (React.createElement(EuiFlyout, { onClose: this.props.onClose, size: \"s\" },\n            React.createElement(EuiFlyoutHeader, null,\n                React.createElement(EuiTitle, null,\n                    React.createElement(\"h2\", null, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.enableErrorReportsTitle', {\n                        defaultMessage: 'Enable error reports'\n                    })))),\n            React.createElement(EuiFlyoutBody, null, flyoutBody),\n            React.createElement(EuiFlyoutFooter, null,\n                React.createElement(EuiButton, { onClick: this.createWatch, fill: true, disabled: !this.state.actions.email && !this.state.actions.slack }, i18n.translate('xpack.apm.serviceDetails.enableErrorReportsPanel.createWatchButtonLabel', {\n                    defaultMessage: 'Create watch'\n                })))));\n    };\n    return WatcherFlyout;\n}(Component));\nexport { WatcherFlyout };\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/ServiceIntegrations/WatcherFlyout.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/apm/public/components/app/ServiceDetails/ServiceIntegrations/WatcherFlyout.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EACL,SAAS,EACT,cAAc,EACd,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,SAAS,EACT,aAAa,EACb,eAAe,EACf,eAAe,EACf,OAAO,EACP,UAAU,EACV,OAAO,EACP,QAAQ,EACR,SAAS,EACT,SAAS,EACT,SAAS,EACT,OAAO,EACP,QAAQ,EACT,MAAM,cAAc,CAAC;AACtB,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEnD,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAC;AACjD,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,MAAM,MAAM,mBAAmB,CAAC;AACvC,OAAO,MAAM,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,kBAAkB,EAAE,MAAM,WAAW,CAAC;AAC/C,OAAO,EAAE,qBAAqB,EAAE,MAAM,8DAA8D,CAAC;AAErG,OAAO,EAAE,UAAU,EAAE,MAAM,uCAAuC,CAAC;AACnE,OAAO,EAAE,qBAAqB,EAAY,MAAM,yBAAyB,CAAC;AAI1E,IAAM,eAAe,GAAG,OAAO,CAAC;IAC9B,IAAM,UAAU,GAAG,MAAM,CAAC,mBAAmB,EAAE,CAAC;IAChD,OAAO,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,SAAS;QAClD,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;QACnB,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,IAAM,UAAU,GAAG,MAAM,CAAC,GAAG,yKAAA,8FAO5B,IAAA,CAAC;AA2BF;IAAmC,yCAGlC;IAHD;QAAA,qEA4hBC;QAxhBQ,WAAK,GAAuB;YACjC,QAAQ,EAAE,OAAO;YACjB,SAAS,EAAE,EAAE;YACb,OAAO,EAAE;gBACP,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,KAAK;aACb;YACD,QAAQ,EAAE;gBACR,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,GAAG;aACV;YACD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;SACb,CAAC;QAEK,sBAAgB,GAAG,UAAC,QAAqB;YAC9C,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC;QAC9B,CAAC,CAAC;QAEK,uBAAiB,GAAG,UAAC,KAA0C;YACpE,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC;aAC5C,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,uBAAiB,GAAG,UAAC,KAA2C;YACrE,KAAI,CAAC,QAAQ,CAAC;gBACZ,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;aAC1B,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,2BAAqB,GAAG,UAC7B,KAA0C;YAE1C,KAAI,CAAC,QAAQ,CAAC;gBACZ,QAAQ,EAAE;oBACR,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC;oBACvC,IAAI,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI;iBAC/B;aACF,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,0BAAoB,GAAG,UAC5B,KAA2C;YAE3C,KAAI,CAAC,QAAQ,CAAC;gBACZ,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK;oBAChC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,KAAqB;iBACzC;aACF,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,oBAAc,GAAG,UAAC,UAA6B;;YACpD,KAAI,CAAC,QAAQ,CAAC;gBACZ,OAAO,uBACF,KAAI,CAAC,KAAK,CAAC,OAAO,eACpB,UAAU,IAAG,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,MAC9C;aACF,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,oBAAc,GAAG,UAAC,KAA0C;YACjE,KAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC;QAEK,sBAAgB,GAAG,UAAC,KAA0C;YACnE,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAClD,CAAC,CAAC;QAEK,iBAAW,GAAG;YACX,IAAA,+CAAW,CAA0B;YAE7C,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO;aACR;YAED,IAAM,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK;gBACrC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM;qBACd,KAAK,CAAC,GAAG,CAAC;qBACV,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,IAAI,EAAE,EAAZ,CAAY,CAAC;qBAC1B,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,CAAC,CAAC,KAAK,EAAP,CAAO,CAAC;gBAC7B,CAAC,CAAC,EAAE,CAAC;YAEP,IAAM,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;YAErE,IAAM,QAAQ,GACZ,KAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,UAAU;gBAChC,CAAC,CAAC;oBACE,QAAQ,EAAE,KAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAM;iBACpE;gBACH,CAAC,CAAC;oBACE,KAAK,EAAE,EAAE,EAAE,EAAE,KAAG,KAAI,CAAC,KAAK,CAAC,KAAO,EAAE;iBACrC,CAAC;YAER,IAAM,SAAS,GACb,KAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,UAAU;gBAChC,CAAC,CAAC;oBACE,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK;oBAChC,IAAI,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI;iBAC/B;gBACH,CAAC,CAAC;oBACE,KAAK,EAAE,EAAE;oBACT,IAAI,EAAE,GAAG;iBACV,CAAC;YAER,OAAO,qBAAqB,CAAC;gBAC3B,MAAM,QAAA;gBACN,QAAQ,UAAA;gBACR,WAAW,aAAA;gBACX,QAAQ,UAAA;gBACR,SAAS,EAAE,KAAI,CAAC,KAAK,CAAC,SAAS;gBAC/B,SAAS,WAAA;aACV,CAAC;iBACC,IAAI,CAAC,UAAC,EAAU;gBACf,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;gBACrB,KAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAC3B,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACN,2BAA2B;gBAC3B,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAEK,mBAAa,GAAG;YACrB,kBAAkB,CAAC,UAAU,CAAC;gBAC5B,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,uFAAuF,EACvF;oBACE,cAAc,EAAE,uBAAuB;iBACxC,CACF;gBACD,IAAI,EAAE,CACJ,+BACG,IAAI,CAAC,SAAS,CACb,sFAAsF,EACtF;oBACE,cAAc,EACZ,uDAAuD;iBAC1D,CACF,CACC,CACL;aACF,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,qBAAe,GAAG,UAAC,EAAU;YAClC,kBAAkB,CAAC,UAAU,CAAC;gBAC5B,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,gFAAgF,EAChF;oBACE,cAAc,EAAE,oBAAoB;iBACrC,CACF;gBACD,IAAI,EAAE,CACJ;oBACG,IAAI,CAAC,SAAS,CACb,+EAA+E,EAC/E;wBACE,cAAc,EACZ,uEAAuE;wBACzE,MAAM,EAAE;4BACN,WAAW,EAAE,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW;yBAC9C;qBACF,CACF;oBAAE,GAAG;oBACN,oBAAC,qBAAqB,IACpB,QAAQ,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,QAAQ,EAAE,aAAa,EACvB,IAAI,EAAE,qDAAmD,EAAI,IAE5D,IAAI,CAAC,SAAS,CACb,iGAAiG,EACjG;wBACE,cAAc,EAAE,YAAY;qBAC7B,CACF,CACqB,CACtB,CACL;aACF,CAAC,CAAC;QACL,CAAC,CAAC;;IAiWJ,CAAC;IA/VQ,8BAAM,GAAb;QAAA,iBA8VC;QA7VC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACtB,OAAO,IAAI,CAAC;SACb;QAED,IAAM,mBAAmB,GAAG,eAAe,EAAE,CAAC;QAC9C,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACnC,IAAM,SAAS,GAAM,SAAS,MAAG,CAAC,CAAC,0BAA0B;QAC7D,IAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,yBAAyB;QACvD,IAAM,kBAAkB,GAAG,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC;aACtD,EAAE,CAAC,mBAAmB,CAAC;aACvB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,gBAAgB;QACpC,IAAM,wBAAwB,GAAG,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC;aAC5D,EAAE,CAAC,mBAAmB,CAAC;aACvB,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,sBAAsB;QAEhD,mDAAmD;QACnD,IAAM,aAAa,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC;YACnC,IAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YAC3C,OAAO,EAAE,KAAK,EAAK,IAAI,QAAK,EAAE,IAAI,EAAK,IAAI,YAAS,EAAE,CAAC;QACzD,CAAC,CAAC,CAAC;QAEH,IAAM,UAAU,GAAG,CACjB,oBAAC,OAAO;YACN;gBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,kEAAkE,EACrE,cAAc,EAAC,wLACqD,EACpE,MAAM,EAAE;wBACN,iBAAiB,EAAE,CACjB,oBAAC,OAAO,IAAC,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAE,UAAU,CAAC,YAAY,IACnD,IAAI,CAAC,SAAS,CACb,wFAAwF,EACxF;4BACE,cAAc,EAAE,eAAe;yBAChC,CACF,CACO,CACX;qBACF,GACD,CACA;YAEJ,oBAAC,OAAO;gBACN,gCACG,IAAI,CAAC,SAAS,CACb,iEAAiE,EACjE;oBACE,cAAc,EAAE,WAAW;iBAC5B,CACF,CACE;gBACL,oBAAC,UAAU,IACT,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,4EAA4E,EAC5E;wBACE,cAAc,EAAE,uCAAuC;qBACxD,CACF,EACD,QAAQ,EAAE,IAAI,CAAC,SAAS,CACtB,+EAA+E,EAC/E;wBACE,cAAc,EACZ,+DAA+D;qBAClE,CACF,EACD,UAAU;oBAEV,oBAAC,cAAc,IACb,IAAI,EAAC,QAAQ,EACb,GAAG,EAAE,CAAC,EACN,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC3B,QAAQ,EAAE,IAAI,CAAC,iBAAiB,GAChC,CACS;gBAEb,gCACG,IAAI,CAAC,SAAS,CACb,uEAAuE,EACvE;oBACE,cAAc,EAAE,kBAAkB;iBACnC,CACF,CACE;gBAEL,+BACG,IAAI,CAAC,SAAS,CACb,6EAA6E,EAC7E;oBACE,cAAc,EACZ,0EAA0E;iBAC7E,CACF,CACC;gBAEJ,oBAAC,QAAQ,IACP,EAAE,EAAC,OAAO,EACV,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,8EAA8E,EAC9E;wBACE,cAAc,EAAE,cAAc;qBAC/B,CACF,EACD,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAA9B,CAA8B,EAC9C,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,OAAO,GACxC;gBAEF,oBAAC,SAAS,IAAC,IAAI,EAAC,GAAG,GAAG;gBAEtB,oBAAC,UAAU,IACT,QAAQ,EAAE,IAAI,CAAC,SAAS,CACtB,sEAAsE,EACtE;wBACE,cAAc,EACZ,qFAAqF;wBACvF,MAAM,EAAE,EAAE,kBAAkB,oBAAA,EAAE,wBAAwB,0BAAA,EAAE;qBACzD,CACF,EACD,UAAU;oBAEV,oBAAC,SAAS,IACR,KAAK,EAAE,SAAS,EAChB,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAChC,OAAO,EAAE,aAAa,EACtB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,OAAO,GACzC,CACS;gBAEb,oBAAC,QAAQ,IACP,EAAE,EAAC,UAAU,EACb,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,2EAA2E,EAC3E;wBACE,cAAc,EAAE,UAAU;qBAC3B,CACF,EACD,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAjC,CAAiC,EACjD,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,UAAU,GAC3C;gBAEF,oBAAC,SAAS,IAAC,IAAI,EAAC,GAAG,GAAG;gBAEtB,oBAAC,YAAY;oBACX,oBAAC,WAAW,IAAC,IAAI,EAAE,KAAK;wBACtB,oBAAC,UAAU;4BACT,oBAAC,UAAU,IACT,QAAQ,EAAE,IAAI,CAAC,SAAS,CACtB,mEAAmE,EACnE;oCACE,cAAc,EAAE,gCAAgC;iCACjD,CACF,EACD,UAAU;gCAEV,oBAAC,cAAc,IACb,IAAI,EAAC,OAAO,EACZ,GAAG,EAAE,CAAC,EACN,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAChC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EACpC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,UAAU,GAC5C,CACS,CACF,CACD;oBACd,oBAAC,WAAW,IAAC,IAAI,EAAE,KAAK;wBACtB,oBAAC,UAAU,IAAC,UAAU;4BACpB,oBAAC,SAAS,IACR,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAC/B,QAAQ,EAAE,IAAI,CAAC,oBAAoB,EACnC,OAAO,EAAE;oCACP;wCACE,KAAK,EAAE,GAAG;wCACV,IAAI,EAAE,IAAI,CAAC,SAAS,CAClB,yEAAyE,EACzE;4CACE,cAAc,EAAE,MAAM;yCACvB,CACF;qCACF;oCACD;wCACE,KAAK,EAAE,GAAG;wCACV,IAAI,EAAE,IAAI,CAAC,SAAS,CAClB,wEAAwE,EACxE;4CACE,cAAc,EAAE,KAAK;yCACtB,CACF;qCACF;iCACF,EACD,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,UAAU,GAC5C,CACS,CACD,CACD;gBAEf,gCACG,IAAI,CAAC,SAAS,CACb,+DAA+D,EAC/D;oBACE,cAAc,EAAE,SAAS;iBAC1B,CACF,CACE;gBACL,+BACG,IAAI,CAAC,SAAS,CACb,qEAAqE,EACrE;oBACE,cAAc,EACZ,6HAA6H;iBAChI,CACF,CACC;gBACJ,oBAAC,SAAS,IACR,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,iEAAiE,EACjE;wBACE,cAAc,EAAE,YAAY;qBAC7B,CACF,EACD,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EACjC,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAA5B,CAA4B,GAC5C;gBAEF,oBAAC,SAAS,IAAC,IAAI,EAAC,GAAG,GAAG;gBACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,CAC3B,oBAAC,UAAU,IACT,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,kEAAkE,EAClE;wBACE,cAAc,EAAE,mCAAmC;qBACpD,CACF,EACD,UAAU,QACV,QAAQ,EACN;wBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,qEAAqE,EACxE,cAAc,EAAC,uEAAuE,EACtF,MAAM,EAAE;gCACN,iBAAiB,EAAE,CACjB,oBAAC,OAAO,IAAC,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAE,UAAU,CAAC,WAAW,IAClD,IAAI,CAAC,SAAS,CACb,2FAA2F,EAC3F;oCACE,cAAc,EAAE,eAAe;iCAChC,CACF,CACO,CACX;6BACF,GACD,CACG;oBAGT,oBAAC,YAAY,IACX,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EACxB,QAAQ,EAAE,IAAI,CAAC,cAAc,GAC7B,CACS,CACd;gBAED,oBAAC,SAAS,IACR,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,6EAA6E,EAC7E;wBACE,cAAc,EAAE,yBAAyB;qBAC1C,CACF,EACD,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EACjC,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAA5B,CAA4B,GAC5C;gBACF,oBAAC,SAAS,IAAC,IAAI,EAAC,GAAG,GAAG;gBAErB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,CAC3B,oBAAC,UAAU,IACT,KAAK,EAAE,IAAI,CAAC,SAAS,CACnB,uEAAuE,EACvE;wBACE,cAAc,EAAE,mBAAmB;qBACpC,CACF,EACD,UAAU,QACV,QAAQ,EACN;wBACE,oBAAC,gBAAgB,IACf,EAAE,EAAC,0EAA0E,EAC7E,cAAc,EAAC,6DAA6D,EAC5E,MAAM,EAAE;gCACN,iBAAiB,EAAE,CACjB,oBAAC,OAAO,IACN,MAAM,EAAC,QAAQ,EACf,IAAI,EAAC,mFAAmF,IAEvF,IAAI,CAAC,SAAS,CACb,gGAAgG,EAChG;oCACE,cAAc,EAAE,eAAe;iCAChC,CACF,CACO,CACX;6BACF,GACD,CACG;oBAGT,oBAAC,YAAY,IACX,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC1B,QAAQ,EAAE,IAAI,CAAC,gBAAgB,GAC/B,CACS,CACd,CACO,CACF,CACX,CAAC;QAEF,OAAO,CACL,oBAAC,SAAS,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAC,GAAG;YAC9C,oBAAC,eAAe;gBACd,oBAAC,QAAQ;oBACP,gCACG,IAAI,CAAC,SAAS,CACb,0EAA0E,EAC1E;wBACE,cAAc,EAAE,sBAAsB;qBACvC,CACF,CACE,CACI,CACK;YAClB,oBAAC,aAAa,QAAE,UAAU,CAAiB;YAC3C,oBAAC,eAAe;gBACd,oBAAC,SAAS,IACR,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,IAAI,QACJ,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,IAE/D,IAAI,CAAC,SAAS,CACb,yEAAyE,EACzE;oBACE,cAAc,EAAE,cAAc;iBAC/B,CACF,CACS,CACI,CACR,CACb,CAAC;IACJ,CAAC;IACH,oBAAC;AAAD,CAAC,AA5hBD,CAAmC,SAAS,GA4hB3C","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport {\n  EuiButton,\n  EuiFieldNumber,\n  EuiFieldText,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiFlyout,\n  EuiFlyoutBody,\n  EuiFlyoutFooter,\n  EuiFlyoutHeader,\n  EuiForm,\n  EuiFormRow,\n  EuiLink,\n  EuiRadio,\n  EuiSelect,\n  EuiSpacer,\n  EuiSwitch,\n  EuiText,\n  EuiTitle\n} from '@elastic/eui';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport { Location } from 'history';\nimport { memoize, padLeft, range } from 'lodash';\nimport moment from 'moment-timezone';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport chrome from 'ui/chrome';\nimport { toastNotifications } from 'ui/notify';\nimport { UnconnectedKibanaLink } from 'x-pack/plugins/apm/public/components/shared/Links/KibanaLink';\nimport { IUrlParams } from 'x-pack/plugins/apm/public/store/urlParams';\nimport { XPACK_DOCS } from '../../../../utils/documentation/xpack';\nimport { createErrorGroupWatch, Schedule } from './createErrorGroupWatch';\n\ntype ScheduleKey = keyof Schedule;\n\nconst getUserTimezone = memoize(() => {\n  const uiSettings = chrome.getUiSettingsClient();\n  return uiSettings.get('dateFormat:tz') === 'Browser'\n    ? moment.tz.guess()\n    : uiSettings.get('dateFormat:tz');\n});\n\nconst SmallInput = styled.div`\n  .euiFormRow {\n    max-width: 85px;\n  }\n  .euiFormHelpText {\n    width: 200px;\n  }\n`;\n\ninterface WatcherFlyoutProps {\n  urlParams: IUrlParams;\n  onClose: () => void;\n  location: Location;\n  isOpen: boolean;\n}\n\ntype IntervalUnit = 'm' | 'h';\n\ninterface WatcherFlyoutState {\n  schedule: ScheduleKey;\n  threshold: number;\n  actions: {\n    slack: boolean;\n    email: boolean;\n  };\n  interval: {\n    value: number;\n    unit: IntervalUnit;\n  };\n  daily: string;\n  emails: string;\n  slackUrl: string;\n}\n\nexport class WatcherFlyout extends Component<\n  WatcherFlyoutProps,\n  WatcherFlyoutState\n> {\n  public state: WatcherFlyoutState = {\n    schedule: 'daily',\n    threshold: 10,\n    actions: {\n      slack: false,\n      email: false\n    },\n    interval: {\n      value: 10,\n      unit: 'm'\n    },\n    daily: '08:00',\n    emails: '',\n    slackUrl: ''\n  };\n\n  public onChangeSchedule = (schedule: ScheduleKey) => {\n    this.setState({ schedule });\n  };\n\n  public onChangeThreshold = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      threshold: parseInt(event.target.value, 10)\n    });\n  };\n\n  public onChangeDailyUnit = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      daily: event.target.value\n    });\n  };\n\n  public onChangeIntervalValue = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    this.setState({\n      interval: {\n        value: parseInt(event.target.value, 10),\n        unit: this.state.interval.unit\n      }\n    });\n  };\n\n  public onChangeIntervalUnit = (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    this.setState({\n      interval: {\n        value: this.state.interval.value,\n        unit: event.target.value as IntervalUnit\n      }\n    });\n  };\n\n  public onChangeAction = (actionName: 'slack' | 'email') => {\n    this.setState({\n      actions: {\n        ...this.state.actions,\n        [actionName]: !this.state.actions[actionName]\n      }\n    });\n  };\n\n  public onChangeEmails = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ emails: event.target.value });\n  };\n\n  public onChangeSlackUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ slackUrl: event.target.value });\n  };\n\n  public createWatch = () => {\n    const { serviceName } = this.props.urlParams;\n\n    if (!serviceName) {\n      return;\n    }\n\n    const emails = this.state.actions.email\n      ? this.state.emails\n          .split(',')\n          .map(email => email.trim())\n          .filter(email => !!email)\n      : [];\n\n    const slackUrl = this.state.actions.slack ? this.state.slackUrl : '';\n\n    const schedule =\n      this.state.schedule === 'interval'\n        ? {\n            interval: `${this.state.interval.value}${this.state.interval.unit}`\n          }\n        : {\n            daily: { at: `${this.state.daily}` }\n          };\n\n    const timeRange =\n      this.state.schedule === 'interval'\n        ? {\n            value: this.state.interval.value,\n            unit: this.state.interval.unit\n          }\n        : {\n            value: 24,\n            unit: 'h'\n          };\n\n    return createErrorGroupWatch({\n      emails,\n      schedule,\n      serviceName,\n      slackUrl,\n      threshold: this.state.threshold,\n      timeRange\n    })\n      .then((id: string) => {\n        this.props.onClose();\n        this.addSuccessToast(id);\n      })\n      .catch(e => {\n        // tslint:disable-next-line\n        console.error(e);\n        this.addErrorToast();\n      });\n  };\n\n  public addErrorToast = () => {\n    toastNotifications.addWarning({\n      title: i18n.translate(\n        'xpack.apm.serviceDetails.enableErrorReportsPanel.watchCreationFailedNotificationTitle',\n        {\n          defaultMessage: 'Watch creation failed'\n        }\n      ),\n      text: (\n        <p>\n          {i18n.translate(\n            'xpack.apm.serviceDetails.enableErrorReportsPanel.watchCreationFailedNotificationText',\n            {\n              defaultMessage:\n                'Make sure your user has permission to create watches.'\n            }\n          )}\n        </p>\n      )\n    });\n  };\n\n  public addSuccessToast = (id: string) => {\n    toastNotifications.addSuccess({\n      title: i18n.translate(\n        'xpack.apm.serviceDetails.enableErrorReportsPanel.watchCreatedNotificationTitle',\n        {\n          defaultMessage: 'New watch created!'\n        }\n      ),\n      text: (\n        <p>\n          {i18n.translate(\n            'xpack.apm.serviceDetails.enableErrorReportsPanel.watchCreatedNotificationText',\n            {\n              defaultMessage:\n                'The watch is now ready and will send error reports for {serviceName}.',\n              values: {\n                serviceName: this.props.urlParams.serviceName\n              }\n            }\n          )}{' '}\n          <UnconnectedKibanaLink\n            location={this.props.location}\n            pathname={'/app/kibana'}\n            hash={`/management/elasticsearch/watcher/watches/watch/${id}`}\n          >\n            {i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.watchCreatedNotificationText.viewWatchLinkText',\n              {\n                defaultMessage: 'View watch'\n              }\n            )}\n          </UnconnectedKibanaLink>\n        </p>\n      )\n    });\n  };\n\n  public render() {\n    if (!this.props.isOpen) {\n      return null;\n    }\n\n    const userTimezoneSetting = getUserTimezone();\n    const dailyTime = this.state.daily;\n    const inputTime = `${dailyTime}Z`; // Add tz to make into UTC\n    const inputFormat = 'HH:mmZ'; // Parse as 24 hour w. tz\n    const dailyTimeFormatted = moment(inputTime, inputFormat)\n      .tz(userTimezoneSetting)\n      .format('HH:mm'); // Format as 24h\n    const dailyTime12HourFormatted = moment(inputTime, inputFormat)\n      .tz(userTimezoneSetting)\n      .format('hh:mm A (z)'); // Format as 12h w. tz\n\n    // Generate UTC hours for Daily Report select field\n    const intervalHours = range(24).map(i => {\n      const hour = padLeft(i.toString(), 2, '0');\n      return { value: `${hour}:00`, text: `${hour}:00 UTC` };\n    });\n\n    const flyoutBody = (\n      <EuiText>\n        <p>\n          <FormattedMessage\n            id=\"xpack.apm.serviceDetails.enableErrorReportsPanel.formDescription\"\n            defaultMessage=\"This form will assist in creating a Watch that can notify you of error occurrences from this service.\n              To learn more about Watcher, please read our {documentationLink}.\"\n            values={{\n              documentationLink: (\n                <EuiLink target=\"_blank\" href={XPACK_DOCS.xpackWatcher}>\n                  {i18n.translate(\n                    'xpack.apm.serviceDetails.enableErrorReportsPanel.formDescription.documentationLinkText',\n                    {\n                      defaultMessage: 'documentation'\n                    }\n                  )}\n                </EuiLink>\n              )\n            }}\n          />\n        </p>\n\n        <EuiForm>\n          <h3>\n            {i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.conditionTitle',\n              {\n                defaultMessage: 'Condition'\n              }\n            )}\n          </h3>\n          <EuiFormRow\n            label={i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.occurrencesThresholdLabel',\n              {\n                defaultMessage: 'Occurrences threshold per error group'\n              }\n            )}\n            helpText={i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.occurrencesThresholdHelpText',\n              {\n                defaultMessage:\n                  'Threshold to be met for error group to be included in report.'\n              }\n            )}\n            compressed\n          >\n            <EuiFieldNumber\n              icon=\"number\"\n              min={1}\n              value={this.state.threshold}\n              onChange={this.onChangeThreshold}\n            />\n          </EuiFormRow>\n\n          <h3>\n            {i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.triggerScheduleTitle',\n              {\n                defaultMessage: 'Trigger schedule'\n              }\n            )}\n          </h3>\n\n          <p>\n            {i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.triggerScheduleDescription',\n              {\n                defaultMessage:\n                  'Choose the time interval for the report, when the threshold is exceeded.'\n              }\n            )}\n          </p>\n\n          <EuiRadio\n            id=\"daily\"\n            label={i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.dailyReportRadioButtonLabel',\n              {\n                defaultMessage: 'Daily report'\n              }\n            )}\n            onChange={() => this.onChangeSchedule('daily')}\n            checked={this.state.schedule === 'daily'}\n          />\n\n          <EuiSpacer size=\"m\" />\n\n          <EuiFormRow\n            helpText={i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.dailyReportHelpText',\n              {\n                defaultMessage:\n                  'The daily report will be sent at {dailyTimeFormatted} / {dailyTime12HourFormatted}.',\n                values: { dailyTimeFormatted, dailyTime12HourFormatted }\n              }\n            )}\n            compressed\n          >\n            <EuiSelect\n              value={dailyTime}\n              onChange={this.onChangeDailyUnit}\n              options={intervalHours}\n              disabled={this.state.schedule !== 'daily'}\n            />\n          </EuiFormRow>\n\n          <EuiRadio\n            id=\"interval\"\n            label={i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.intervalRadioButtonLabel',\n              {\n                defaultMessage: 'Interval'\n              }\n            )}\n            onChange={() => this.onChangeSchedule('interval')}\n            checked={this.state.schedule === 'interval'}\n          />\n\n          <EuiSpacer size=\"m\" />\n\n          <EuiFlexGroup>\n            <EuiFlexItem grow={false}>\n              <SmallInput>\n                <EuiFormRow\n                  helpText={i18n.translate(\n                    'xpack.apm.serviceDetails.enableErrorReportsPanel.intervalHelpText',\n                    {\n                      defaultMessage: 'Time interval between reports.'\n                    }\n                  )}\n                  compressed\n                >\n                  <EuiFieldNumber\n                    icon=\"clock\"\n                    min={1}\n                    value={this.state.interval.value}\n                    onChange={this.onChangeIntervalValue}\n                    disabled={this.state.schedule !== 'interval'}\n                  />\n                </EuiFormRow>\n              </SmallInput>\n            </EuiFlexItem>\n            <EuiFlexItem grow={false}>\n              <EuiFormRow compressed>\n                <EuiSelect\n                  value={this.state.interval.unit}\n                  onChange={this.onChangeIntervalUnit}\n                  options={[\n                    {\n                      value: 'm',\n                      text: i18n.translate(\n                        'xpack.apm.serviceDetails.enableErrorReportsPanel.intervalUnit.minsLabel',\n                        {\n                          defaultMessage: 'mins'\n                        }\n                      )\n                    },\n                    {\n                      value: 'h',\n                      text: i18n.translate(\n                        'xpack.apm.serviceDetails.enableErrorReportsPanel.intervalUnit.hrsLabel',\n                        {\n                          defaultMessage: 'hrs'\n                        }\n                      )\n                    }\n                  ]}\n                  disabled={this.state.schedule !== 'interval'}\n                />\n              </EuiFormRow>\n            </EuiFlexItem>\n          </EuiFlexGroup>\n\n          <h3>\n            {i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.actionsTitle',\n              {\n                defaultMessage: 'Actions'\n              }\n            )}\n          </h3>\n          <p>\n            {i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.actionsDescription',\n              {\n                defaultMessage:\n                  'Reports can be sent by email or posted to a Slack channel. Each report will include the top 10 errors sorted by occurrence.'\n              }\n            )}\n          </p>\n          <EuiSwitch\n            label={i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.sendEmailLabel',\n              {\n                defaultMessage: 'Send email'\n              }\n            )}\n            checked={this.state.actions.email}\n            onChange={() => this.onChangeAction('email')}\n          />\n\n          <EuiSpacer size=\"m\" />\n          {this.state.actions.email && (\n            <EuiFormRow\n              label={i18n.translate(\n                'xpack.apm.serviceDetails.enableErrorReportsPanel.recipientsLabel',\n                {\n                  defaultMessage: 'Recipients (separated with comma)'\n                }\n              )}\n              compressed\n              helpText={\n                <span>\n                  <FormattedMessage\n                    id=\"xpack.apm.serviceDetails.enableErrorReportsPanel.recipientsHelpText\"\n                    defaultMessage=\"If you have not configured email, please see the {documentationLink}.\"\n                    values={{\n                      documentationLink: (\n                        <EuiLink target=\"_blank\" href={XPACK_DOCS.xpackEmails}>\n                          {i18n.translate(\n                            'xpack.apm.serviceDetails.enableErrorReportsPanel.recipientsHelpText.documentationLinkText',\n                            {\n                              defaultMessage: 'documentation'\n                            }\n                          )}\n                        </EuiLink>\n                      )\n                    }}\n                  />\n                </span>\n              }\n            >\n              <EuiFieldText\n                icon=\"user\"\n                value={this.state.emails}\n                onChange={this.onChangeEmails}\n              />\n            </EuiFormRow>\n          )}\n\n          <EuiSwitch\n            label={i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.sendSlackNotificationLabel',\n              {\n                defaultMessage: 'Send Slack notification'\n              }\n            )}\n            checked={this.state.actions.slack}\n            onChange={() => this.onChangeAction('slack')}\n          />\n          <EuiSpacer size=\"m\" />\n\n          {this.state.actions.slack && (\n            <EuiFormRow\n              label={i18n.translate(\n                'xpack.apm.serviceDetails.enableErrorReportsPanel.slackWebhookURLLabel',\n                {\n                  defaultMessage: 'Slack Webhook URL'\n                }\n              )}\n              compressed\n              helpText={\n                <span>\n                  <FormattedMessage\n                    id=\"xpack.apm.serviceDetails.enableErrorReportsPanel.slackWebhookURLHelpText\"\n                    defaultMessage=\"To get a Slack webhook, please see the {documentationLink}.\"\n                    values={{\n                      documentationLink: (\n                        <EuiLink\n                          target=\"_blank\"\n                          href=\"https://get.slack.help/hc/en-us/articles/115005265063-Incoming-WebHooks-for-Slack\"\n                        >\n                          {i18n.translate(\n                            'xpack.apm.serviceDetails.enableErrorReportsPanel.slackWebhookURLHelpText.documentationLinkText',\n                            {\n                              defaultMessage: 'documentation'\n                            }\n                          )}\n                        </EuiLink>\n                      )\n                    }}\n                  />\n                </span>\n              }\n            >\n              <EuiFieldText\n                icon=\"link\"\n                value={this.state.slackUrl}\n                onChange={this.onChangeSlackUrl}\n              />\n            </EuiFormRow>\n          )}\n        </EuiForm>\n      </EuiText>\n    );\n\n    return (\n      <EuiFlyout onClose={this.props.onClose} size=\"s\">\n        <EuiFlyoutHeader>\n          <EuiTitle>\n            <h2>\n              {i18n.translate(\n                'xpack.apm.serviceDetails.enableErrorReportsPanel.enableErrorReportsTitle',\n                {\n                  defaultMessage: 'Enable error reports'\n                }\n              )}\n            </h2>\n          </EuiTitle>\n        </EuiFlyoutHeader>\n        <EuiFlyoutBody>{flyoutBody}</EuiFlyoutBody>\n        <EuiFlyoutFooter>\n          <EuiButton\n            onClick={this.createWatch}\n            fill\n            disabled={!this.state.actions.email && !this.state.actions.slack}\n          >\n            {i18n.translate(\n              'xpack.apm.serviceDetails.enableErrorReportsPanel.createWatchButtonLabel',\n              {\n                defaultMessage: 'Create watch'\n              }\n            )}\n          </EuiButton>\n        </EuiFlyoutFooter>\n      </EuiFlyout>\n    );\n  }\n}\n"]}]}