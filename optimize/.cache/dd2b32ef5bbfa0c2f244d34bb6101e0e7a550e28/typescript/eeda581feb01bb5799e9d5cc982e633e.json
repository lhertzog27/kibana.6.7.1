{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/view.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/view.ts","mtime":1567631711561},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { cloneDeep } from 'lodash';\nimport { ViewActionTypeKeys } from '../actions';\nimport { QueryLanguageType } from 'ui/embeddable/types';\nimport { DashboardViewMode } from '../dashboard_view_mode';\nvar closeContextMenu = function (view) { return (tslib_1.__assign({}, view, { visibleContextMenuPanelId: undefined })); };\nvar setVisibleContextMenuPanelId = function (view, panelId) { return (tslib_1.__assign({}, view, { visibleContextMenuPanelId: panelId })); };\nvar updateHidePanelTitles = function (view, hidePanelTitles) { return (tslib_1.__assign({}, view, { hidePanelTitles: hidePanelTitles })); };\nvar minimizePanel = function (view) { return (tslib_1.__assign({}, view, { maximizedPanelId: undefined })); };\nvar maximizePanel = function (view, panelId) { return (tslib_1.__assign({}, view, { maximizedPanelId: panelId })); };\nvar updateIsFullScreenMode = function (view, isFullScreenMode) { return (tslib_1.__assign({}, view, { isFullScreenMode: isFullScreenMode })); };\nvar updateTimeRange = function (view, timeRange) { return (tslib_1.__assign({}, view, { timeRange: timeRange })); };\nvar updateFilters = function (view, filters) { return (tslib_1.__assign({}, view, { filters: cloneDeep(filters) })); };\nvar updateQuery = function (view, query) { return (tslib_1.__assign({}, view, { query: query })); };\nvar updateUseMargins = function (view, useMargins) { return (tslib_1.__assign({}, view, { useMargins: useMargins })); };\nvar updateViewMode = function (view, viewMode) { return (tslib_1.__assign({}, view, { viewMode: viewMode })); };\nexport var viewReducer = function (view, action) {\n    if (view === void 0) { view = {\n        filters: [],\n        hidePanelTitles: false,\n        isFullScreenMode: false,\n        query: { language: QueryLanguageType.LUCENE, query: '' },\n        timeRange: { to: 'now', from: 'now-15m' },\n        useMargins: true,\n        viewMode: DashboardViewMode.VIEW,\n    }; }\n    switch (action.type) {\n        case ViewActionTypeKeys.MINIMIZE_PANEL:\n            return minimizePanel(view);\n        case ViewActionTypeKeys.MAXIMIZE_PANEl:\n            return maximizePanel(view, action.payload);\n        case ViewActionTypeKeys.SET_VISIBLE_CONTEXT_MENU_PANEL_ID:\n            return setVisibleContextMenuPanelId(view, action.payload);\n        case ViewActionTypeKeys.CLOSE_CONTEXT_MENU:\n            return closeContextMenu(view);\n        case ViewActionTypeKeys.UPDATE_HIDE_PANEL_TITLES:\n            return updateHidePanelTitles(view, action.payload);\n        case ViewActionTypeKeys.UPDATE_TIME_RANGE:\n            return updateTimeRange(view, action.payload);\n        case ViewActionTypeKeys.UPDATE_USE_MARGINS:\n            return updateUseMargins(view, action.payload);\n        case ViewActionTypeKeys.UPDATE_VIEW_MODE:\n            return updateViewMode(view, action.payload);\n        case ViewActionTypeKeys.UPDATE_IS_FULL_SCREEN_MODE:\n            return updateIsFullScreenMode(view, action.payload);\n        case ViewActionTypeKeys.UPDATE_FILTERS:\n            return updateFilters(view, action.payload);\n        case ViewActionTypeKeys.UPDATE_QUERY:\n            return updateQuery(view, action.payload);\n        default:\n            return view;\n    }\n};\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/view.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/legacy/core_plugins/kibana/public/dashboard/reducers/view.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { cloneDeep } from 'lodash';\nimport { Reducer } from 'redux';\nimport { ViewActions, ViewActionTypeKeys } from '../actions';\n\nimport { Filters, Query, TimeRange } from 'ui/embeddable';\nimport { QueryLanguageType } from 'ui/embeddable/types';\nimport { DashboardViewMode } from '../dashboard_view_mode';\nimport { PanelId, ViewState } from '../selectors';\n\nconst closeContextMenu = (view: ViewState) => ({\n  ...view,\n  visibleContextMenuPanelId: undefined,\n});\n\nconst setVisibleContextMenuPanelId = (view: ViewState, panelId: PanelId) => ({\n  ...view,\n  visibleContextMenuPanelId: panelId,\n});\n\nconst updateHidePanelTitles = (view: ViewState, hidePanelTitles: boolean) => ({\n  ...view,\n  hidePanelTitles,\n});\n\nconst minimizePanel = (view: ViewState) => ({\n  ...view,\n  maximizedPanelId: undefined,\n});\n\nconst maximizePanel = (view: ViewState, panelId: PanelId) => ({\n  ...view,\n  maximizedPanelId: panelId,\n});\n\nconst updateIsFullScreenMode = (view: ViewState, isFullScreenMode: boolean) => ({\n  ...view,\n  isFullScreenMode,\n});\n\nconst updateTimeRange = (view: ViewState, timeRange: TimeRange) => ({\n  ...view,\n  timeRange,\n});\n\nconst updateFilters = (view: ViewState, filters: Filters) => ({\n  ...view,\n  filters: cloneDeep(filters),\n});\n\nconst updateQuery = (view: ViewState, query: Query) => ({\n  ...view,\n  query,\n});\n\nconst updateUseMargins = (view: ViewState, useMargins: boolean) => ({\n  ...view,\n  useMargins,\n});\n\nconst updateViewMode = (view: ViewState, viewMode: DashboardViewMode) => ({\n  ...view,\n  viewMode,\n});\n\nexport const viewReducer: Reducer<ViewState> = (\n  view = {\n    filters: [],\n    hidePanelTitles: false,\n    isFullScreenMode: false,\n    query: { language: QueryLanguageType.LUCENE, query: '' },\n    timeRange: { to: 'now', from: 'now-15m' },\n    useMargins: true,\n    viewMode: DashboardViewMode.VIEW,\n  },\n  action\n): ViewState => {\n  switch ((action as ViewActions).type) {\n    case ViewActionTypeKeys.MINIMIZE_PANEL:\n      return minimizePanel(view);\n    case ViewActionTypeKeys.MAXIMIZE_PANEl:\n      return maximizePanel(view, action.payload);\n    case ViewActionTypeKeys.SET_VISIBLE_CONTEXT_MENU_PANEL_ID:\n      return setVisibleContextMenuPanelId(view, action.payload);\n    case ViewActionTypeKeys.CLOSE_CONTEXT_MENU:\n      return closeContextMenu(view);\n    case ViewActionTypeKeys.UPDATE_HIDE_PANEL_TITLES:\n      return updateHidePanelTitles(view, action.payload);\n    case ViewActionTypeKeys.UPDATE_TIME_RANGE:\n      return updateTimeRange(view, action.payload);\n    case ViewActionTypeKeys.UPDATE_USE_MARGINS:\n      return updateUseMargins(view, action.payload);\n    case ViewActionTypeKeys.UPDATE_VIEW_MODE:\n      return updateViewMode(view, action.payload);\n    case ViewActionTypeKeys.UPDATE_IS_FULL_SCREEN_MODE:\n      return updateIsFullScreenMode(view, action.payload);\n    case ViewActionTypeKeys.UPDATE_FILTERS:\n      return updateFilters(view, action.payload);\n    case ViewActionTypeKeys.UPDATE_QUERY:\n      return updateQuery(view, action.payload);\n    default:\n      return view;\n  }\n};\n"]}]}