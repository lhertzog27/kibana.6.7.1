{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_time_controls.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_time_controls.tsx","mtime":1567631711981},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiDatePicker, EuiFilterButton, EuiFilterGroup } from '@elastic/eui';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport styled from 'styled-components';\nvar noop = function () { return undefined; };\nvar LogTimeControlsUI = /** @class */ (function (_super) {\n    tslib_1.__extends(LogTimeControlsUI, _super);\n    function LogTimeControlsUI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleChangeDate = function (date) {\n            if (date !== null) {\n                _this.props.jumpToTime(date.valueOf());\n            }\n        };\n        _this.startLiveStreaming = function () {\n            _this.props.startLiveStreaming(5000);\n        };\n        _this.stopLiveStreaming = function () {\n            _this.props.stopLiveStreaming();\n        };\n        return _this;\n    }\n    LogTimeControlsUI.prototype.render = function () {\n        var _a = this.props, currentTime = _a.currentTime, isLiveStreaming = _a.isLiveStreaming, intl = _a.intl;\n        var currentMoment = currentTime ? moment(currentTime) : null;\n        if (isLiveStreaming) {\n            return (React.createElement(EuiFilterGroup, null,\n                React.createElement(InlineWrapper, null,\n                    React.createElement(EuiDatePicker, { disabled: true, onChange: noop, value: intl.formatMessage({\n                            id: 'xpack.infra.logs.streamingDescription',\n                            defaultMessage: 'streaming…',\n                        }) })),\n                React.createElement(EuiFilterButton, { color: \"primary\", iconType: \"pause\", iconSide: \"left\", onClick: this.stopLiveStreaming },\n                    React.createElement(FormattedMessage, { id: \"xpack.infra.logs.stopStreamingButtonLabel\", defaultMessage: \"Stop streaming\" }))));\n        }\n        else {\n            return (React.createElement(EuiFilterGroup, null,\n                React.createElement(InlineWrapper, null,\n                    React.createElement(EuiDatePicker, { dateFormat: \"L LTS\", onChange: this.handleChangeDate, popperPlacement: \"top-end\", selected: currentMoment, shouldCloseOnSelect: true, showTimeSelect: true, timeFormat: \"LTS\", injectTimes: currentMoment ? [currentMoment] : [] })),\n                React.createElement(EuiFilterButton, { iconType: \"play\", iconSide: \"left\", onClick: this.startLiveStreaming },\n                    React.createElement(FormattedMessage, { id: \"xpack.infra.logs.startStreamingButtonLabel\", defaultMessage: \"Stream live\" }))));\n        }\n    };\n    return LogTimeControlsUI;\n}(React.PureComponent));\nexport var LogTimeControls = injectI18n(LogTimeControlsUI);\nvar InlineWrapper = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  display: inline-block;\\n\"], [\"\\n  display: inline-block;\\n\"])));\nvar templateObject_1;\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_time_controls.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/components/logging/log_time_controls.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAC9E,OAAO,EAAE,gBAAgB,EAAgB,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7E,OAAO,MAAkB,MAAM,iBAAiB,CAAC;AACjD,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAEvC,IAAM,IAAI,GAAG,cAAM,OAAA,SAAS,EAAT,CAAS,CAAC;AAW7B;IAAgC,6CAAyC;IAAzE;QAAA,qEAuEC;QAbS,sBAAgB,GAAG,UAAC,IAAmB;YAC7C,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aACvC;QACH,CAAC,CAAC;QAEM,wBAAkB,GAAG;YAC3B,KAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC;QAEM,uBAAiB,GAAG;YAC1B,KAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;QACjC,CAAC,CAAC;;IACJ,CAAC;IAtEQ,kCAAM,GAAb;QACQ,IAAA,eAAmD,EAAjD,4BAAW,EAAE,oCAAe,EAAE,cAAI,CAAgB;QAE1D,IAAM,aAAa,GAAG,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAE/D,IAAI,eAAe,EAAE;YACnB,OAAO,CACL,oBAAC,cAAc;gBACb,oBAAC,aAAa;oBACZ,oBAAC,aAAa,IACZ,QAAQ,QACR,QAAQ,EAAE,IAAI,EACd,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC;4BACxB,EAAE,EAAE,uCAAuC;4BAC3C,cAAc,EAAE,YAAY;yBAC7B,CAAC,GACF,CACY;gBAChB,oBAAC,eAAe,IACd,KAAK,EAAC,SAAS,EACf,QAAQ,EAAC,OAAO,EAChB,QAAQ,EAAC,MAAM,EACf,OAAO,EAAE,IAAI,CAAC,iBAAiB;oBAE/B,oBAAC,gBAAgB,IACf,EAAE,EAAC,2CAA2C,EAC9C,cAAc,EAAC,gBAAgB,GAC/B,CACc,CACH,CAClB,CAAC;SACH;aAAM;YACL,OAAO,CACL,oBAAC,cAAc;gBACb,oBAAC,aAAa;oBACZ,oBAAC,aAAa,IACZ,UAAU,EAAC,OAAO,EAClB,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAC/B,eAAe,EAAC,SAAS,EACzB,QAAQ,EAAE,aAAa,EACvB,mBAAmB,QACnB,cAAc,QACd,UAAU,EAAC,KAAK,EAChB,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,GACjD,CACY;gBAChB,oBAAC,eAAe,IAAC,QAAQ,EAAC,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB;oBAC/E,oBAAC,gBAAgB,IACf,EAAE,EAAC,4CAA4C,EAC/C,cAAc,EAAC,aAAa,GAC5B,CACc,CACH,CAClB,CAAC;SACH;IACH,CAAC;IAeH,wBAAC;AAAD,CAAC,AAvED,CAAgC,KAAK,CAAC,aAAa,GAuElD;AAED,MAAM,CAAC,IAAM,eAAe,GAAG,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAE7D,IAAM,aAAa,GAAG,MAAM,CAAC,GAAG,yGAAA,8BAE/B,IAAA,CAAC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiDatePicker, EuiFilterButton, EuiFilterGroup } from '@elastic/eui';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport moment, { Moment } from 'moment-timezone';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst noop = () => undefined;\n\ninterface LogTimeControlsProps {\n  currentTime: number | null;\n  startLiveStreaming: (interval: number) => any;\n  stopLiveStreaming: () => any;\n  isLiveStreaming: boolean;\n  jumpToTime: (time: number) => any;\n  intl: InjectedIntl;\n}\n\nclass LogTimeControlsUI extends React.PureComponent<LogTimeControlsProps> {\n  public render() {\n    const { currentTime, isLiveStreaming, intl } = this.props;\n\n    const currentMoment = currentTime ? moment(currentTime) : null;\n\n    if (isLiveStreaming) {\n      return (\n        <EuiFilterGroup>\n          <InlineWrapper>\n            <EuiDatePicker\n              disabled\n              onChange={noop}\n              value={intl.formatMessage({\n                id: 'xpack.infra.logs.streamingDescription',\n                defaultMessage: 'streaming…',\n              })}\n            />\n          </InlineWrapper>\n          <EuiFilterButton\n            color=\"primary\"\n            iconType=\"pause\"\n            iconSide=\"left\"\n            onClick={this.stopLiveStreaming}\n          >\n            <FormattedMessage\n              id=\"xpack.infra.logs.stopStreamingButtonLabel\"\n              defaultMessage=\"Stop streaming\"\n            />\n          </EuiFilterButton>\n        </EuiFilterGroup>\n      );\n    } else {\n      return (\n        <EuiFilterGroup>\n          <InlineWrapper>\n            <EuiDatePicker\n              dateFormat=\"L LTS\"\n              onChange={this.handleChangeDate}\n              popperPlacement=\"top-end\"\n              selected={currentMoment}\n              shouldCloseOnSelect\n              showTimeSelect\n              timeFormat=\"LTS\"\n              injectTimes={currentMoment ? [currentMoment] : []}\n            />\n          </InlineWrapper>\n          <EuiFilterButton iconType=\"play\" iconSide=\"left\" onClick={this.startLiveStreaming}>\n            <FormattedMessage\n              id=\"xpack.infra.logs.startStreamingButtonLabel\"\n              defaultMessage=\"Stream live\"\n            />\n          </EuiFilterButton>\n        </EuiFilterGroup>\n      );\n    }\n  }\n\n  private handleChangeDate = (date: Moment | null) => {\n    if (date !== null) {\n      this.props.jumpToTime(date.valueOf());\n    }\n  };\n\n  private startLiveStreaming = () => {\n    this.props.startLiveStreaming(5000);\n  };\n\n  private stopLiveStreaming = () => {\n    this.props.stopLiveStreaming();\n  };\n}\n\nexport const LogTimeControls = injectI18n(LogTimeControlsUI);\n\nconst InlineWrapper = styled.div`\n  display: inline-block;\n`;\n"]}]}