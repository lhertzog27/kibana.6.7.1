{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/lib/spaces_manager.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/lib/spaces_manager.ts","mtime":1567631712309},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { i18n } from '@kbn/i18n';\nimport { toastNotifications } from 'ui/notify';\nimport { EventEmitter } from 'events';\nvar SpacesManager = /** @class */ (function (_super) {\n    tslib_1.__extends(SpacesManager, _super);\n    function SpacesManager(httpAgent, chrome, spaceSelectorURL) {\n        var _this = _super.call(this) || this;\n        _this.httpAgent = httpAgent;\n        _this.baseUrl = chrome.addBasePath(\"/api/spaces\");\n        _this.spaceSelectorURL = spaceSelectorURL;\n        return _this;\n    }\n    SpacesManager.prototype.getSpaces = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpAgent\n                            .get(this.baseUrl + \"/space\")\n                            .then(function (response) { return response.data; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    SpacesManager.prototype.getSpace = function (id) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpAgent.get(this.baseUrl + \"/space/\" + id)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    SpacesManager.prototype.createSpace = function (space) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpAgent.post(this.baseUrl + \"/space\", space)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    SpacesManager.prototype.updateSpace = function (space) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpAgent.put(this.baseUrl + \"/space/\" + space.id + \"?overwrite=true\", space)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    SpacesManager.prototype.deleteSpace = function (space) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpAgent.delete(this.baseUrl + \"/space/\" + space.id)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    SpacesManager.prototype.changeSelectedSpace = function (space) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpAgent\n                            .post(this.baseUrl + \"/v1/space/\" + space.id + \"/select\")\n                            .then(function (response) {\n                            if (response.data && response.data.location) {\n                                window.location = response.data.location;\n                            }\n                            else {\n                                _this._displayError();\n                            }\n                        })\n                            .catch(function () { return _this._displayError(); })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    SpacesManager.prototype.redirectToSpaceSelector = function () {\n        window.location.href = this.spaceSelectorURL;\n    };\n    SpacesManager.prototype.requestRefresh = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                this.emit('request_refresh');\n                return [2 /*return*/];\n            });\n        });\n    };\n    SpacesManager.prototype._displayError = function () {\n        toastNotifications.addDanger({\n            title: i18n.translate('xpack.spaces.spacesManager.unableToChangeSpaceWarningTitle', {\n                defaultMessage: 'Unable to change your Space',\n            }),\n            text: i18n.translate('xpack.spaces.spacesManager.unableToChangeSpaceWarningDescription', {\n                defaultMessage: 'please try again later',\n            }),\n        });\n    };\n    return SpacesManager;\n}(EventEmitter));\nexport { SpacesManager };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/lib/spaces_manager.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/lib/spaces_manager.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { i18n } from '@kbn/i18n';\nimport { toastNotifications } from 'ui/notify';\n\nimport { IHttpResponse } from 'angular';\nimport { EventEmitter } from 'events';\nimport { Space } from '../../common/model/space';\n\nexport class SpacesManager extends EventEmitter {\n  private httpAgent: any;\n  private baseUrl: any;\n  private spaceSelectorURL: string;\n\n  constructor(httpAgent: any, chrome: any, spaceSelectorURL: string) {\n    super();\n    this.httpAgent = httpAgent;\n    this.baseUrl = chrome.addBasePath(`/api/spaces`);\n    this.spaceSelectorURL = spaceSelectorURL;\n  }\n\n  public async getSpaces(): Promise<Space[]> {\n    return await this.httpAgent\n      .get(`${this.baseUrl}/space`)\n      .then((response: IHttpResponse<Space[]>) => response.data);\n  }\n\n  public async getSpace(id: string): Promise<Space> {\n    return await this.httpAgent.get(`${this.baseUrl}/space/${id}`);\n  }\n\n  public async createSpace(space: Space) {\n    return await this.httpAgent.post(`${this.baseUrl}/space`, space);\n  }\n\n  public async updateSpace(space: Space) {\n    return await this.httpAgent.put(`${this.baseUrl}/space/${space.id}?overwrite=true`, space);\n  }\n\n  public async deleteSpace(space: Space) {\n    return await this.httpAgent.delete(`${this.baseUrl}/space/${space.id}`);\n  }\n\n  public async changeSelectedSpace(space: Space) {\n    return await this.httpAgent\n      .post(`${this.baseUrl}/v1/space/${space.id}/select`)\n      .then((response: IHttpResponse<any>) => {\n        if (response.data && response.data.location) {\n          window.location = response.data.location;\n        } else {\n          this._displayError();\n        }\n      })\n      .catch(() => this._displayError());\n  }\n\n  public redirectToSpaceSelector() {\n    window.location.href = this.spaceSelectorURL;\n  }\n\n  public async requestRefresh() {\n    this.emit('request_refresh');\n  }\n\n  public _displayError() {\n    toastNotifications.addDanger({\n      title: i18n.translate('xpack.spaces.spacesManager.unableToChangeSpaceWarningTitle', {\n        defaultMessage: 'Unable to change your Space',\n      }),\n      text: i18n.translate('xpack.spaces.spacesManager.unableToChangeSpaceWarningDescription', {\n        defaultMessage: 'please try again later',\n      }),\n    });\n  }\n}\n"]}]}