{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/pages/overview.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/pages/overview.tsx","mtime":1567631712330},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EuiSpacer } from '@elastic/eui';\nimport React, { Fragment } from 'react';\nimport { getOverviewPageBreadcrumbs } from '../breadcrumbs';\nimport { EmptyStateQuery, ErrorListQuery, FilterBarQuery, MonitorListQuery, SnapshotQuery, } from '../components/queries';\nvar OverviewPage = /** @class */ (function (_super) {\n    tslib_1.__extends(OverviewPage, _super);\n    function OverviewPage(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            currentFilterQuery: undefined,\n        };\n        return _this;\n    }\n    OverviewPage.prototype.componentWillMount = function () {\n        this.props.setBreadcrumbs(getOverviewPageBreadcrumbs());\n    };\n    OverviewPage.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Fragment, null,\n            React.createElement(EmptyStateQuery, tslib_1.__assign({}, this.props),\n                React.createElement(FilterBarQuery, tslib_1.__assign({}, this.props, { updateQuery: function (query) {\n                        _this.setState({ currentFilterQuery: query ? JSON.stringify(query) : query });\n                    } })),\n                React.createElement(SnapshotQuery, tslib_1.__assign({ filters: this.state.currentFilterQuery }, this.props)),\n                React.createElement(EuiSpacer, { size: \"xl\" }),\n                React.createElement(MonitorListQuery, tslib_1.__assign({ filters: this.state.currentFilterQuery }, this.props)),\n                React.createElement(EuiSpacer, null),\n                React.createElement(ErrorListQuery, tslib_1.__assign({ filters: this.state.currentFilterQuery }, this.props)))));\n    };\n    return OverviewPage;\n}(React.Component));\nexport { OverviewPage };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/pages/overview.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/uptime/public/pages/overview.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,0BAA0B,EAAE,MAAM,gBAAgB,CAAC;AAC5D,OAAO,EACL,eAAe,EACf,cAAc,EACd,cAAc,EACd,gBAAgB,EAChB,aAAa,GACd,MAAM,uBAAuB,CAAC;AAc/B;IAAkC,wCAAyC;IACzE,sBAAY,KAAY;QAAxB,YACE,kBAAM,KAAK,CAAC,SAIb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,kBAAkB,EAAE,SAAS;SAC9B,CAAC;;IACJ,CAAC;IAEM,yCAAkB,GAAzB;QACE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,0BAA0B,EAAE,CAAC,CAAC;IAC1D,CAAC;IAEM,6BAAM,GAAb;QAAA,iBAkBC;QAjBC,OAAO,CACL,oBAAC,QAAQ;YACP,oBAAC,eAAe,uBAAK,IAAI,CAAC,KAAK;gBAC7B,oBAAC,cAAc,uBACT,IAAI,CAAC,KAAK,IACd,WAAW,EAAE,UAAC,KAAyB;wBACrC,KAAI,CAAC,QAAQ,CAAC,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC/E,CAAC,IACD;gBACF,oBAAC,aAAa,qBAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,IAAM,IAAI,CAAC,KAAK,EAAI;gBACzE,oBAAC,SAAS,IAAC,IAAI,EAAC,IAAI,GAAG;gBACvB,oBAAC,gBAAgB,qBAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,IAAM,IAAI,CAAC,KAAK,EAAI;gBAC5E,oBAAC,SAAS,OAAG;gBACb,oBAAC,cAAc,qBAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,IAAM,IAAI,CAAC,KAAK,EAAI,CAC1D,CACT,CACZ,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AA/BD,CAAkC,KAAK,CAAC,SAAS,GA+BhD","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { EuiSpacer } from '@elastic/eui';\nimport React, { Fragment } from 'react';\nimport { getOverviewPageBreadcrumbs } from '../breadcrumbs';\nimport {\n  EmptyStateQuery,\n  ErrorListQuery,\n  FilterBarQuery,\n  MonitorListQuery,\n  SnapshotQuery,\n} from '../components/queries';\nimport { UMUpdateBreadcrumbs } from '../lib/lib';\nimport { UptimeCommonProps } from '../uptime_app';\n\ninterface OverviewPageProps {\n  setBreadcrumbs: UMUpdateBreadcrumbs;\n}\n\ntype Props = OverviewPageProps & UptimeCommonProps;\n\ninterface OverviewPageState {\n  currentFilterQuery?: string;\n}\n\nexport class OverviewPage extends React.Component<Props, OverviewPageState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      currentFilterQuery: undefined,\n    };\n  }\n\n  public componentWillMount() {\n    this.props.setBreadcrumbs(getOverviewPageBreadcrumbs());\n  }\n\n  public render() {\n    return (\n      <Fragment>\n        <EmptyStateQuery {...this.props}>\n          <FilterBarQuery\n            {...this.props}\n            updateQuery={(query: object | undefined) => {\n              this.setState({ currentFilterQuery: query ? JSON.stringify(query) : query });\n            }}\n          />\n          <SnapshotQuery filters={this.state.currentFilterQuery} {...this.props} />\n          <EuiSpacer size=\"xl\" />\n          <MonitorListQuery filters={this.state.currentFilterQuery} {...this.props} />\n          <EuiSpacer />\n          <ErrorListQuery filters={this.state.currentFilterQuery} {...this.props} />\n        </EmptyStateQuery>\n      </Fragment>\n    );\n  }\n}\n"]}]}