{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/customize_space_avatar.tsx","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/customize_space_avatar.tsx","mtime":1567631712311},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n// @ts-ignore\nimport { EuiColorPicker, EuiFieldText, EuiFlexItem, EuiFormRow, EuiLink } from '@elastic/eui';\nimport { FormattedMessage, injectI18n } from '@kbn/i18n/react';\nimport React, { Component, Fragment } from 'react';\nimport { MAX_SPACE_INITIALS } from '../../../../common/constants';\nimport { getSpaceColor, getSpaceInitials } from '../../../../common/space_attributes';\nvar CustomizeSpaceAvatarUI = /** @class */ (function (_super) {\n    tslib_1.__extends(CustomizeSpaceAvatarUI, _super);\n    function CustomizeSpaceAvatarUI(props) {\n        var _this = _super.call(this, props) || this;\n        _this.initialsRef = null;\n        _this.getCustomizeFields = function () {\n            var _a = _this.props, space = _a.space, intl = _a.intl;\n            var _b = _this.state, initialsHasFocus = _b.initialsHasFocus, pendingInitials = _b.pendingInitials;\n            return (React.createElement(Fragment, null,\n                React.createElement(EuiFlexItem, { grow: false },\n                    React.createElement(EuiFormRow, { label: intl.formatMessage({\n                            id: 'xpack.spaces.management.customizeSpaceAvatar.initialItemsFormRowLabel',\n                            defaultMessage: 'Initials (2 max)',\n                        }) },\n                        React.createElement(EuiFieldText, { inputRef: _this.initialsInputRef, name: \"spaceInitials\", \n                            // allows input to be cleared or otherwise invalidated while user is editing the initials,\n                            // without defaulting to the derived initials provided by `getSpaceInitials`\n                            value: initialsHasFocus ? pendingInitials || '' : getSpaceInitials(space), onChange: _this.onInitialsChange }))),\n                React.createElement(EuiFlexItem, { grow: true },\n                    React.createElement(EuiFormRow, { label: intl.formatMessage({\n                            id: 'xpack.spaces.management.customizeSpaceAvatar.colorFormRowLabel',\n                            defaultMessage: 'Color',\n                        }) },\n                        React.createElement(EuiColorPicker, { color: getSpaceColor(space), onChange: _this.onColorChange })))));\n        };\n        _this.initialsInputRef = function (ref) {\n            if (ref) {\n                _this.initialsRef = ref;\n                _this.initialsRef.addEventListener('focus', _this.onInitialsFocus);\n                _this.initialsRef.addEventListener('blur', _this.onInitialsBlur);\n            }\n            else {\n                if (_this.initialsRef) {\n                    _this.initialsRef.removeEventListener('focus', _this.onInitialsFocus);\n                    _this.initialsRef.removeEventListener('blur', _this.onInitialsBlur);\n                    _this.initialsRef = null;\n                }\n            }\n        };\n        _this.onInitialsFocus = function () {\n            _this.setState({\n                initialsHasFocus: true,\n                pendingInitials: getSpaceInitials(_this.props.space),\n            });\n        };\n        _this.onInitialsBlur = function () {\n            _this.setState({\n                initialsHasFocus: false,\n                pendingInitials: null,\n            });\n        };\n        _this.getCustomizeLink = function () {\n            return (React.createElement(EuiFlexItem, { grow: false },\n                React.createElement(EuiFormRow, { hasEmptyLabelSpace: true },\n                    React.createElement(EuiLink, { name: \"customize_space_link\", onClick: _this.showFields },\n                        React.createElement(FormattedMessage, { id: \"xpack.spaces.management.customizeSpaceAvatar.customizeLinkText\", defaultMessage: \"Customize\" })))));\n        };\n        _this.showFields = function () {\n            _this.setState({\n                expanded: true,\n            });\n        };\n        _this.onInitialsChange = function (e) {\n            var initials = (e.target.value || '').substring(0, MAX_SPACE_INITIALS);\n            _this.setState({\n                pendingInitials: initials,\n            });\n            _this.props.onChange(tslib_1.__assign({}, _this.props.space, { initials: initials }));\n        };\n        _this.onColorChange = function (color) {\n            _this.props.onChange(tslib_1.__assign({}, _this.props.space, { color: color }));\n        };\n        _this.state = {\n            expanded: false,\n            initialsHasFocus: false,\n        };\n        return _this;\n    }\n    CustomizeSpaceAvatarUI.prototype.render = function () {\n        return this.state.expanded ? this.getCustomizeFields() : this.getCustomizeLink();\n    };\n    return CustomizeSpaceAvatarUI;\n}(Component));\nexport var CustomizeSpaceAvatar = injectI18n(CustomizeSpaceAvatarUI);\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/customize_space_avatar.tsx","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/spaces/public/views/management/edit_space/customize_space_avatar.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n// @ts-ignore\nimport { EuiColorPicker, EuiFieldText, EuiFlexItem, EuiFormRow, EuiLink } from '@elastic/eui';\nimport { FormattedMessage, InjectedIntl, injectI18n } from '@kbn/i18n/react';\nimport React, { ChangeEvent, Component, Fragment } from 'react';\nimport { MAX_SPACE_INITIALS } from '../../../../common/constants';\nimport { Space } from '../../../../common/model/space';\nimport { getSpaceColor, getSpaceInitials } from '../../../../common/space_attributes';\n\ninterface Props {\n  space: Partial<Space>;\n  onChange: (space: Partial<Space>) => void;\n  intl: InjectedIntl;\n}\n\ninterface State {\n  expanded: boolean;\n  initialsHasFocus: boolean;\n  pendingInitials?: string | null;\n}\n\nclass CustomizeSpaceAvatarUI extends Component<Props, State> {\n  private initialsRef: HTMLInputElement | null = null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      initialsHasFocus: false,\n    };\n  }\n\n  public render() {\n    return this.state.expanded ? this.getCustomizeFields() : this.getCustomizeLink();\n  }\n\n  public getCustomizeFields = () => {\n    const { space, intl } = this.props;\n\n    const { initialsHasFocus, pendingInitials } = this.state;\n\n    return (\n      <Fragment>\n        <EuiFlexItem grow={false}>\n          <EuiFormRow\n            label={intl.formatMessage({\n              id: 'xpack.spaces.management.customizeSpaceAvatar.initialItemsFormRowLabel',\n              defaultMessage: 'Initials (2 max)',\n            })}\n          >\n            <EuiFieldText\n              inputRef={this.initialsInputRef}\n              name=\"spaceInitials\"\n              // allows input to be cleared or otherwise invalidated while user is editing the initials,\n              // without defaulting to the derived initials provided by `getSpaceInitials`\n              value={initialsHasFocus ? pendingInitials || '' : getSpaceInitials(space)}\n              onChange={this.onInitialsChange}\n            />\n          </EuiFormRow>\n        </EuiFlexItem>\n        <EuiFlexItem grow={true}>\n          <EuiFormRow\n            label={intl.formatMessage({\n              id: 'xpack.spaces.management.customizeSpaceAvatar.colorFormRowLabel',\n              defaultMessage: 'Color',\n            })}\n          >\n            <EuiColorPicker color={getSpaceColor(space)} onChange={this.onColorChange} />\n          </EuiFormRow>\n        </EuiFlexItem>\n      </Fragment>\n    );\n  };\n\n  public initialsInputRef = (ref: HTMLInputElement) => {\n    if (ref) {\n      this.initialsRef = ref;\n      this.initialsRef.addEventListener('focus', this.onInitialsFocus);\n      this.initialsRef.addEventListener('blur', this.onInitialsBlur);\n    } else {\n      if (this.initialsRef) {\n        this.initialsRef.removeEventListener('focus', this.onInitialsFocus);\n        this.initialsRef.removeEventListener('blur', this.onInitialsBlur);\n        this.initialsRef = null;\n      }\n    }\n  };\n\n  public onInitialsFocus = () => {\n    this.setState({\n      initialsHasFocus: true,\n      pendingInitials: getSpaceInitials(this.props.space),\n    });\n  };\n\n  public onInitialsBlur = () => {\n    this.setState({\n      initialsHasFocus: false,\n      pendingInitials: null,\n    });\n  };\n\n  public getCustomizeLink = () => {\n    return (\n      <EuiFlexItem grow={false}>\n        <EuiFormRow hasEmptyLabelSpace={true}>\n          <EuiLink name=\"customize_space_link\" onClick={this.showFields}>\n            <FormattedMessage\n              id=\"xpack.spaces.management.customizeSpaceAvatar.customizeLinkText\"\n              defaultMessage=\"Customize\"\n            />\n          </EuiLink>\n        </EuiFormRow>\n      </EuiFlexItem>\n    );\n  };\n\n  public showFields = () => {\n    this.setState({\n      expanded: true,\n    });\n  };\n\n  public onInitialsChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const initials = (e.target.value || '').substring(0, MAX_SPACE_INITIALS);\n\n    this.setState({\n      pendingInitials: initials,\n    });\n\n    this.props.onChange({\n      ...this.props.space,\n      initials,\n    });\n  };\n\n  public onColorChange = (color: string) => {\n    this.props.onChange({\n      ...this.props.space,\n      color,\n    });\n  };\n}\n\nexport const CustomizeSpaceAvatar = injectI18n(CustomizeSpaceAvatarUI);\n"]}]}