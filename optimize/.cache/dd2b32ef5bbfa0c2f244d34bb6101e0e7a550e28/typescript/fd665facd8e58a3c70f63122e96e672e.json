{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/src/ui/public/visualize/loader/types.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/src/ui/public/visualize/loader/types.ts","mtime":1567631711781},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport var QueryLanguageType;\n(function (QueryLanguageType) {\n    QueryLanguageType[\"KUERY\"] = \"kuery\";\n    QueryLanguageType[\"LUCENE\"] = \"lucene\";\n})(QueryLanguageType || (QueryLanguageType = {}));\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/src/ui/public/visualize/loader/types.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/src/ui/public/visualize/loader/types.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAuBH,MAAM,CAAN,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,oCAAe,CAAA;IACf,sCAAiB,CAAA;AACnB,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB,QAG5B","sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SearchSource } from '../../courier';\nimport { PersistedState } from '../../persisted_state';\nimport { AppState } from '../../state_management/app_state';\nimport { Vis } from '../../vis';\n\nexport interface TimeRange {\n  from: string;\n  to: string;\n}\n\nexport interface FilterMeta {\n  disabled: boolean;\n}\n\nexport interface Filter {\n  meta: FilterMeta;\n  query: object;\n}\n\nexport type Filters = Filter[];\n\nexport enum QueryLanguageType {\n  KUERY = 'kuery',\n  LUCENE = 'lucene',\n}\n\nexport interface Query {\n  language: QueryLanguageType;\n  query: string;\n}\n\nexport interface VisSavedObject {\n  vis: Vis;\n  description?: string;\n  searchSource: SearchSource;\n  title: string;\n  uiStateJSON?: string;\n  destroy: () => void;\n}\n\n/**\n * The parameters accepted by the embedVisualize calls.\n */\nexport interface VisualizeLoaderParams {\n  /**\n   * An object with a from/to key, that must be either a date in ISO format, or a\n   * valid datetime Elasticsearch expression, e.g.: { from: 'now-7d/d', to: 'now' }\n   */\n  timeRange?: TimeRange;\n  /**\n   * If set to true, the visualization will be appended to the passed element instead\n   * of replacing all its content. (default: false)\n   */\n  append?: boolean;\n  /**\n   * If specified this CSS class (or classes with space separated) will be set to\n   * the root visualize element.\n   */\n  cssClass?: string;\n  /**\n   * An object of key-value pairs, that will be set as data-{key}=\"{value}\" attributes\n   * on the visualization element.\n   */\n  dataAttrs?: { [key: string]: string };\n  /**\n   * Specifies the filters that should be applied to that visualization.\n   */\n  filters?: Filters;\n  /**\n   * The query that should apply to that visualization.\n   */\n  query?: Query;\n  /**\n   * The current uiState of the application. If you don't pass a uiState, the\n   * visualization will creates it's own uiState to store information like whether\n   * the legend is open or closed, but you don't have access to it from the outside.\n   * Pass one in if you need that access, e.g. for saving that state.\n   */\n  uiState?: PersistedState;\n  /**\n   * The appState this visualization should use. If you don't specify it, the\n   * global AppState (that is decoded in the URL) will be used. Usually you don't\n   * need to overwrite this, unless you don't want the visualization to use the\n   * global AppState.\n   */\n  appState?: AppState;\n  /**\n   * Whether or not the visualization should fetch its data automatically. If this is\n   * set to `false` the loader won't trigger a fetch on embedding or when an auto refresh\n   * cycle happens. Default value: `true`\n   */\n  autoFetch?: boolean;\n}\n\n/**\n * The subset of properties allowed to update on an already embedded visualization.\n */\nexport type VisualizeUpdateParams = Pick<\n  VisualizeLoaderParams,\n  'timeRange' | 'dataAttrs' | 'filters' | 'query'\n>;\n"]}]}