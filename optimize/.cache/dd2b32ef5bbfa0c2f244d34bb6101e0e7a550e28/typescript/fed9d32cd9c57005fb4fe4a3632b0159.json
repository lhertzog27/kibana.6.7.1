{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/framework.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/framework.ts","mtime":1567631711883},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport { difference, get } from 'lodash';\nimport { LICENSES } from '../../common/constants/security';\nvar FrameworkLib = /** @class */ (function () {\n    function FrameworkLib(adapter) {\n        this.adapter = adapter;\n        this.waitUntilFrameworkReady = this.adapter.waitUntilFrameworkReady.bind(this.adapter);\n        this.renderUIAtPath = this.adapter.renderUIAtPath.bind(this.adapter);\n        this.registerManagementSection = this.adapter.registerManagementSection.bind(this.adapter);\n        this.registerManagementUI = this.adapter.registerManagementUI.bind(this.adapter);\n        this.setUISettings = this.adapter.setUISettings.bind(this.adapter);\n        this.getUISetting = this.adapter.getUISetting.bind(this.adapter);\n    }\n    Object.defineProperty(FrameworkLib.prototype, \"currentUser\", {\n        get: function () {\n            return this.adapter.currentUser;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrameworkLib.prototype, \"info\", {\n        get: function () {\n            return this.adapter.info;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FrameworkLib.prototype.licenseIsAtLeast = function (type) {\n        return (LICENSES.indexOf(get(this.adapter.info, 'license.type', 'oss')) >= LICENSES.indexOf(type));\n    };\n    FrameworkLib.prototype.versionGreaterThen = function (version) {\n        var pa = this.adapter.version.split('.');\n        var pb = version.split('.');\n        for (var i = 0; i < 3; i++) {\n            var na = Number(pa[i]);\n            var nb = Number(pb[i]);\n            // version is greater\n            if (na > nb) {\n                return true;\n            }\n            // version is less then\n            if (nb > na) {\n                return false;\n            }\n            if (!isNaN(na) && isNaN(nb)) {\n                return true;\n            }\n            if (isNaN(na) && !isNaN(nb)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    FrameworkLib.prototype.currentUserHasOneOfRoles = function (roles) {\n        // If the user has at least one of the roles requested, the returnd difference will be less\n        // then the orig array size. difference only compares based on the left side arg\n        return difference(roles, get(this.currentUser, 'roles', [])).length < roles.length;\n    };\n    return FrameworkLib;\n}());\nexport { FrameworkLib };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/framework.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/beats_management/public/lib/framework.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAe,MAAM,iCAAiC,CAAC;AAGxE;IAQE,sBAA6B,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QAP/C,4BAAuB,GAAG,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClF,mBAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChE,8BAAyB,GAAG,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtF,yBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5E,kBAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9D,iBAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAEV,CAAC;IAE1D,sBAAW,qCAAW;aAAtB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAW,8BAAI;aAAf;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC3B,CAAC;;;OAAA;IAEM,uCAAgB,GAAvB,UAAwB,IAAiB;QACvC,OAAO,CACL,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAC1F,CAAC;IACJ,CAAC;IAEM,yCAAkB,GAAzB,UAA0B,OAAe;QACvC,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAM,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAM,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACzB,IAAM,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACzB,qBAAqB;YACrB,IAAI,EAAE,GAAG,EAAE,EAAE;gBACX,OAAO,IAAI,CAAC;aACb;YACD,uBAAuB;YACvB,IAAI,EAAE,GAAG,EAAE,EAAE;gBACX,OAAO,KAAK,CAAC;aACd;YACD,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE;gBAC3B,OAAO,IAAI,CAAC;aACb;YACD,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;gBAC3B,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,+CAAwB,GAA/B,UAAgC,KAAe;QAC7C,2FAA2F;QAC3F,gFAAgF;QAChF,OAAO,UAAU,CAAC,KAAK,EAAE,GAAG,CAAW,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC/F,CAAC;IACH,mBAAC;AAAD,CAAC,AArDD,IAqDC","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { difference, get } from 'lodash';\nimport { LICENSES, LicenseType } from '../../common/constants/security';\nimport { FrameworkAdapter } from './adapters/framework/adapter_types';\n\nexport class FrameworkLib {\n  public waitUntilFrameworkReady = this.adapter.waitUntilFrameworkReady.bind(this.adapter);\n  public renderUIAtPath = this.adapter.renderUIAtPath.bind(this.adapter);\n  public registerManagementSection = this.adapter.registerManagementSection.bind(this.adapter);\n  public registerManagementUI = this.adapter.registerManagementUI.bind(this.adapter);\n  public setUISettings = this.adapter.setUISettings.bind(this.adapter);\n  public getUISetting = this.adapter.getUISetting.bind(this.adapter);\n\n  constructor(private readonly adapter: FrameworkAdapter) {}\n\n  public get currentUser() {\n    return this.adapter.currentUser;\n  }\n\n  public get info() {\n    return this.adapter.info;\n  }\n\n  public licenseIsAtLeast(type: LicenseType) {\n    return (\n      LICENSES.indexOf(get(this.adapter.info, 'license.type', 'oss')) >= LICENSES.indexOf(type)\n    );\n  }\n\n  public versionGreaterThen(version: string) {\n    const pa = this.adapter.version.split('.');\n    const pb = version.split('.');\n    for (let i = 0; i < 3; i++) {\n      const na = Number(pa[i]);\n      const nb = Number(pb[i]);\n      // version is greater\n      if (na > nb) {\n        return true;\n      }\n      // version is less then\n      if (nb > na) {\n        return false;\n      }\n      if (!isNaN(na) && isNaN(nb)) {\n        return true;\n      }\n      if (isNaN(na) && !isNaN(nb)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public currentUserHasOneOfRoles(roles: string[]) {\n    // If the user has at least one of the roles requested, the returnd difference will be less\n    // then the orig array size. difference only compares based on the left side arg\n    return difference(roles, get<string[]>(this.currentUser, 'roles', [])).length < roles.length;\n  }\n}\n"]}]}