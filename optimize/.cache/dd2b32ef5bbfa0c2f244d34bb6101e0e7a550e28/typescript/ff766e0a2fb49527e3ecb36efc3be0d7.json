{"remainingRequest":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js??ref--10-1!/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js??ref--10-2!/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/container.ts","dependencies":[{"path":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/container.ts","mtime":1567631711986},{"path":"/home/anthony/git_workspaces/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1567666236302},{"path":"/home/anthony/git_workspaces/kibana/node_modules/thread-loader/dist/cjs.js","mtime":1567666239443},{"path":"/home/anthony/git_workspaces/kibana/node_modules/ts-loader/index.js","mtime":1567666229769}],"contextDependencies":[],"result":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { i18n } from '@kbn/i18n';\nimport { InfraMetric } from '../../../graphql/types';\nimport { InfraFormatterType } from '../../../lib/lib';\nimport { nginxLayoutCreator } from './nginx';\nimport { InfraMetricLayoutSectionType, InfraMetricLayoutVisualizationType, } from './types';\nexport var containerLayoutCreator = function (theme) { return tslib_1.__spread([\n    {\n        id: 'containerOverview',\n        label: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.layoutLabel', {\n            defaultMessage: 'Container',\n        }),\n        sections: [\n            {\n                id: InfraMetric.containerOverview,\n                label: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.overviewSection.sectionLabel', {\n                    defaultMessage: 'Overview',\n                }),\n                requires: ['docker.cpu', 'docker.memory', 'docker.network'],\n                type: InfraMetricLayoutSectionType.gauges,\n                visConfig: {\n                    seriesOverrides: {\n                        cpu: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.overviewSection.cpuUsageSeriesLabel', {\n                                defaultMessage: 'CPU Usage',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.percent,\n                            gaugeMax: 1,\n                        },\n                        memory: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.overviewSection.memoryUsageSeriesLabel', {\n                                defaultMessage: 'Memory Usage',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.percent,\n                            gaugeMax: 1,\n                        },\n                        rx: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.overviewSection.inboundRXSeriesLabel', {\n                                defaultMessage: 'Inbound (RX)',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.bits,\n                            formatterTemplate: '{{value}}/s',\n                        },\n                        tx: {\n                            name: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.overviewSection.outboundTXSeriesLabel', {\n                                defaultMessage: 'Outbound (TX)',\n                            }),\n                            color: theme.eui.euiColorFullShade,\n                            formatter: InfraFormatterType.bits,\n                            formatterTemplate: '{{value}}/s',\n                        },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.containerCpuUsage,\n                label: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.cpuUsageSection.sectionLabel', {\n                    defaultMessage: 'CPU Usage',\n                }),\n                requires: ['docker.cpu'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    stacked: true,\n                    type: InfraMetricLayoutVisualizationType.area,\n                    formatter: InfraFormatterType.percent,\n                    seriesOverrides: {\n                        cpu: { color: theme.eui.euiColorVis1 },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.containerMemory,\n                label: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.memoryUsageSection.sectionLabel', {\n                    defaultMessage: 'Memory Usage',\n                }),\n                requires: ['docker.memory'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    stacked: true,\n                    type: InfraMetricLayoutVisualizationType.area,\n                    formatter: InfraFormatterType.percent,\n                    seriesOverrides: {\n                        memory: { color: theme.eui.euiColorVis1 },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.containerNetworkTraffic,\n                label: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.networkTrafficSection.sectionLabel', {\n                    defaultMessage: 'Network Traffic',\n                }),\n                requires: ['docker.network'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.bits,\n                    formatterTemplate: '{{value}}/s',\n                    type: InfraMetricLayoutVisualizationType.area,\n                    seriesOverrides: {\n                        rx: {\n                            color: theme.eui.euiColorVis1,\n                            name: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.networkTrafficSection.networkRxRateSeriesLabel', {\n                                defaultMessage: 'in',\n                            }),\n                        },\n                        tx: {\n                            color: theme.eui.euiColorVis2,\n                            name: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.networkTrafficSection.networkTxRateSeriesLabel', {\n                                defaultMessage: 'out',\n                            }),\n                        },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.containerDiskIOOps,\n                label: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.diskIoOpsSection.sectionLabel', {\n                    defaultMessage: 'Disk IO (Ops)',\n                }),\n                requires: ['docker.diskio'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.number,\n                    formatterTemplate: '{{value}}/s',\n                    type: InfraMetricLayoutVisualizationType.area,\n                    seriesOverrides: {\n                        read: {\n                            color: theme.eui.euiColorVis1,\n                            name: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.diskIoOpsSection.readRateSeriesLabel', {\n                                defaultMessage: 'reads',\n                            }),\n                        },\n                        write: {\n                            color: theme.eui.euiColorVis2,\n                            name: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.diskIoOpsSection.writeRateSeriesLabel', {\n                                defaultMessage: 'writes',\n                            }),\n                        },\n                    },\n                },\n            },\n            {\n                id: InfraMetric.containerDiskIOBytes,\n                label: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.diskIoBytesSection.sectionLabel', {\n                    defaultMessage: 'Disk IO (Bytes)',\n                }),\n                requires: ['docker.diskio'],\n                type: InfraMetricLayoutSectionType.chart,\n                visConfig: {\n                    formatter: InfraFormatterType.bytes,\n                    formatterTemplate: '{{value}}/s',\n                    type: InfraMetricLayoutVisualizationType.area,\n                    seriesOverrides: {\n                        read: {\n                            color: theme.eui.euiColorVis1,\n                            name: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.diskIoBytesSection.readRateSeriesLabel', {\n                                defaultMessage: 'reads',\n                            }),\n                        },\n                        write: {\n                            color: theme.eui.euiColorVis2,\n                            name: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.diskIoBytesSection.writeRateSeriesLabel', {\n                                defaultMessage: 'writes',\n                            }),\n                        },\n                    },\n                },\n            },\n        ],\n    }\n], nginxLayoutCreator(theme)); };\n",{"version":3,"file":"/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/container.ts","sourceRoot":"","sources":["/home/anthony/git_workspaces/kibana/x-pack/plugins/infra/public/pages/metrics/layouts/container.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License;\n * you may not use this file except in compliance with the Elastic License.\n */\n\nimport { i18n } from '@kbn/i18n';\nimport { InfraMetric } from '../../../graphql/types';\nimport { InfraFormatterType } from '../../../lib/lib';\nimport { nginxLayoutCreator } from './nginx';\nimport {\n  InfraMetricLayoutCreator,\n  InfraMetricLayoutSectionType,\n  InfraMetricLayoutVisualizationType,\n} from './types';\n\nexport const containerLayoutCreator: InfraMetricLayoutCreator = theme => [\n  {\n    id: 'containerOverview',\n    label: i18n.translate('xpack.infra.metricDetailPage.containerMetricsLayout.layoutLabel', {\n      defaultMessage: 'Container',\n    }),\n    sections: [\n      {\n        id: InfraMetric.containerOverview,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.containerMetricsLayout.overviewSection.sectionLabel',\n          {\n            defaultMessage: 'Overview',\n          }\n        ),\n        requires: ['docker.cpu', 'docker.memory', 'docker.network'],\n        type: InfraMetricLayoutSectionType.gauges,\n        visConfig: {\n          seriesOverrides: {\n            cpu: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.containerMetricsLayout.overviewSection.cpuUsageSeriesLabel',\n                {\n                  defaultMessage: 'CPU Usage',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.percent,\n              gaugeMax: 1,\n            },\n            memory: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.containerMetricsLayout.overviewSection.memoryUsageSeriesLabel',\n                {\n                  defaultMessage: 'Memory Usage',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.percent,\n              gaugeMax: 1,\n            },\n            rx: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.containerMetricsLayout.overviewSection.inboundRXSeriesLabel',\n                {\n                  defaultMessage: 'Inbound (RX)',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.bits,\n              formatterTemplate: '{{value}}/s',\n            },\n            tx: {\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.containerMetricsLayout.overviewSection.outboundTXSeriesLabel',\n                {\n                  defaultMessage: 'Outbound (TX)',\n                }\n              ),\n              color: theme.eui.euiColorFullShade,\n              formatter: InfraFormatterType.bits,\n              formatterTemplate: '{{value}}/s',\n            },\n          },\n        },\n      },\n      {\n        id: InfraMetric.containerCpuUsage,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.containerMetricsLayout.cpuUsageSection.sectionLabel',\n          {\n            defaultMessage: 'CPU Usage',\n          }\n        ),\n        requires: ['docker.cpu'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          stacked: true,\n          type: InfraMetricLayoutVisualizationType.area,\n          formatter: InfraFormatterType.percent,\n          seriesOverrides: {\n            cpu: { color: theme.eui.euiColorVis1 },\n          },\n        },\n      },\n      {\n        id: InfraMetric.containerMemory,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.containerMetricsLayout.memoryUsageSection.sectionLabel',\n          {\n            defaultMessage: 'Memory Usage',\n          }\n        ),\n        requires: ['docker.memory'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          stacked: true,\n          type: InfraMetricLayoutVisualizationType.area,\n          formatter: InfraFormatterType.percent,\n          seriesOverrides: {\n            memory: { color: theme.eui.euiColorVis1 },\n          },\n        },\n      },\n      {\n        id: InfraMetric.containerNetworkTraffic,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.containerMetricsLayout.networkTrafficSection.sectionLabel',\n          {\n            defaultMessage: 'Network Traffic',\n          }\n        ),\n        requires: ['docker.network'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.bits,\n          formatterTemplate: '{{value}}/s',\n          type: InfraMetricLayoutVisualizationType.area,\n          seriesOverrides: {\n            rx: {\n              color: theme.eui.euiColorVis1,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.containerMetricsLayout.networkTrafficSection.networkRxRateSeriesLabel',\n                {\n                  defaultMessage: 'in',\n                }\n              ),\n            },\n            tx: {\n              color: theme.eui.euiColorVis2,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.containerMetricsLayout.networkTrafficSection.networkTxRateSeriesLabel',\n                {\n                  defaultMessage: 'out',\n                }\n              ),\n            },\n          },\n        },\n      },\n      {\n        id: InfraMetric.containerDiskIOOps,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.containerMetricsLayout.diskIoOpsSection.sectionLabel',\n          {\n            defaultMessage: 'Disk IO (Ops)',\n          }\n        ),\n        requires: ['docker.diskio'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.number,\n          formatterTemplate: '{{value}}/s',\n          type: InfraMetricLayoutVisualizationType.area,\n          seriesOverrides: {\n            read: {\n              color: theme.eui.euiColorVis1,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.containerMetricsLayout.diskIoOpsSection.readRateSeriesLabel',\n                {\n                  defaultMessage: 'reads',\n                }\n              ),\n            },\n            write: {\n              color: theme.eui.euiColorVis2,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.containerMetricsLayout.diskIoOpsSection.writeRateSeriesLabel',\n                {\n                  defaultMessage: 'writes',\n                }\n              ),\n            },\n          },\n        },\n      },\n      {\n        id: InfraMetric.containerDiskIOBytes,\n        label: i18n.translate(\n          'xpack.infra.metricDetailPage.containerMetricsLayout.diskIoBytesSection.sectionLabel',\n          {\n            defaultMessage: 'Disk IO (Bytes)',\n          }\n        ),\n        requires: ['docker.diskio'],\n        type: InfraMetricLayoutSectionType.chart,\n        visConfig: {\n          formatter: InfraFormatterType.bytes,\n          formatterTemplate: '{{value}}/s',\n          type: InfraMetricLayoutVisualizationType.area,\n          seriesOverrides: {\n            read: {\n              color: theme.eui.euiColorVis1,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.containerMetricsLayout.diskIoBytesSection.readRateSeriesLabel',\n                {\n                  defaultMessage: 'reads',\n                }\n              ),\n            },\n            write: {\n              color: theme.eui.euiColorVis2,\n              name: i18n.translate(\n                'xpack.infra.metricDetailPage.containerMetricsLayout.diskIoBytesSection.writeRateSeriesLabel',\n                {\n                  defaultMessage: 'writes',\n                }\n              ),\n            },\n          },\n        },\n      },\n    ],\n  },\n  ...nginxLayoutCreator(theme),\n];\n"]}]}