"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const convert_nodes_response_to_groups_1 = require("./convert_nodes_response_to_groups");
const create_node_item_1 = require("./create_node_item");
function processNodes(options, nodes) {
    if (options.groupBy.length === 0) {
        // If there are NO group by options then we need to return a
        // nodes only response
        const nodeResults = nodes.map((node) => {
            return create_node_item_1.createNodeItem(options, node, node);
        });
        return nodeResults;
    }
    // Return a grouped response
    return convert_nodes_response_to_groups_1.convertNodesResponseToGroups(options, nodes);
}
exports.processNodes = processNodes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvaW5mcmEvc2VydmVyL2xpYi9hZGFwdGVycy9ub2Rlcy9saWIvcHJvY2Vzc19ub2Rlcy50cyIsInNvdXJjZXMiOlsiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvaW5mcmEvc2VydmVyL2xpYi9hZGFwdGVycy9ub2Rlcy9saWIvcHJvY2Vzc19ub2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7R0FJRzs7QUFJSCx5RkFBa0Y7QUFDbEYseURBQW9EO0FBRXBELFNBQWdCLFlBQVksQ0FBQyxPQUFnQyxFQUFFLEtBQVk7SUFDekUsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDaEMsNERBQTREO1FBQzVELHNCQUFzQjtRQUN0QixNQUFNLFdBQVcsR0FBZ0IsS0FBSyxDQUFDLEdBQUcsQ0FDeEMsQ0FBQyxJQUFpQixFQUFhLEVBQUU7WUFDL0IsT0FBTyxpQ0FBYyxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDN0MsQ0FBQyxDQUNGLENBQUM7UUFDRixPQUFPLFdBQVcsQ0FBQztLQUNwQjtJQUVELDRCQUE0QjtJQUM1QixPQUFPLCtEQUE0QixDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQztBQUN0RCxDQUFDO0FBZEQsb0NBY0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBJbmZyYU5vZGUgfSBmcm9tICcuLi8uLi8uLi8uLi9ncmFwaHFsL3R5cGVzJztcbmltcG9ydCB7IEluZnJhQnVja2V0LCBJbmZyYU5vZGVSZXF1ZXN0T3B0aW9ucyB9IGZyb20gJy4uL2FkYXB0ZXJfdHlwZXMnO1xuaW1wb3J0IHsgY29udmVydE5vZGVzUmVzcG9uc2VUb0dyb3VwcyB9IGZyb20gJy4vY29udmVydF9ub2Rlc19yZXNwb25zZV90b19ncm91cHMnO1xuaW1wb3J0IHsgY3JlYXRlTm9kZUl0ZW0gfSBmcm9tICcuL2NyZWF0ZV9ub2RlX2l0ZW0nO1xuXG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc05vZGVzKG9wdGlvbnM6IEluZnJhTm9kZVJlcXVlc3RPcHRpb25zLCBub2RlczogYW55W10pOiBJbmZyYU5vZGVbXSB7XG4gIGlmIChvcHRpb25zLmdyb3VwQnkubGVuZ3RoID09PSAwKSB7XG4gICAgLy8gSWYgdGhlcmUgYXJlIE5PIGdyb3VwIGJ5IG9wdGlvbnMgdGhlbiB3ZSBuZWVkIHRvIHJldHVybiBhXG4gICAgLy8gbm9kZXMgb25seSByZXNwb25zZVxuICAgIGNvbnN0IG5vZGVSZXN1bHRzOiBJbmZyYU5vZGVbXSA9IG5vZGVzLm1hcChcbiAgICAgIChub2RlOiBJbmZyYUJ1Y2tldCk6IEluZnJhTm9kZSA9PiB7XG4gICAgICAgIHJldHVybiBjcmVhdGVOb2RlSXRlbShvcHRpb25zLCBub2RlLCBub2RlKTtcbiAgICAgIH1cbiAgICApO1xuICAgIHJldHVybiBub2RlUmVzdWx0cztcbiAgfVxuXG4gIC8vIFJldHVybiBhIGdyb3VwZWQgcmVzcG9uc2VcbiAgcmV0dXJuIGNvbnZlcnROb2Rlc1Jlc3BvbnNlVG9Hcm91cHMob3B0aW9ucywgbm9kZXMpO1xufVxuIl19