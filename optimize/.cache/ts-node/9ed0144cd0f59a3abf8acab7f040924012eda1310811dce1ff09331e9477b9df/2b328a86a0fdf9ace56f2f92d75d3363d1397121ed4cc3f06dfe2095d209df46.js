"use strict";
/*
 * Licensed to Elasticsearch B.V. under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch B.V. licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
function get(obj, path) {
    if (typeof path === 'string') {
        if (path.includes('.')) {
            throw new Error('Using dots in `get` with a string is not allowed, use array instead');
        }
        return obj[path];
    }
    for (const key of path) {
        obj = obj[key];
    }
    return obj;
}
exports.get = get;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEvc3JjL2NvcmUvdXRpbHMvZ2V0LnRzIiwic291cmNlcyI6WyIvaG9tZS9hbnRob255L2dpdF93b3Jrc3BhY2VzL2tpYmFuYS9zcmMvY29yZS91dGlscy9nZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCRzs7QUFxQ0gsU0FBZ0IsR0FBRyxDQUFtQyxHQUFRLEVBQUUsSUFBdUI7SUFDckYsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7UUFDNUIsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3RCLE1BQU0sSUFBSSxLQUFLLENBQUMscUVBQXFFLENBQUMsQ0FBQztTQUN4RjtRQUVELE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2xCO0lBRUQsS0FBSyxNQUFNLEdBQUcsSUFBSSxJQUFJLEVBQUU7UUFDdEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUNoQjtJQUVELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQWRELGtCQWNDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvclxuICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGhcbiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0XG4gKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyXG4gKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5XG4gKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKlxuICogUmV0cmlldmUgdGhlIHZhbHVlIGZvciB0aGUgc3BlY2lmaWVkIHBhdGhcbiAqXG4gKiBOb3RlIHRoYXQgZG90IGlzIF9ub3RfIGFsbG93ZWQgdG8gc3BlY2lmeSBhIGRlZXBlciBrZXksIGl0IHdpbGwgYXNzdW1lIHRoYXRcbiAqIHRoZSBkb3QgaXMgcGFydCBvZiB0aGUga2V5IGl0c2VsZi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldDxcbiAgQ0ZHIGV4dGVuZHMgeyBbazogc3RyaW5nXTogYW55IH0sXG4gIEEgZXh0ZW5kcyBrZXlvZiBDRkcsXG4gIEIgZXh0ZW5kcyBrZXlvZiBDRkdbQV0sXG4gIEMgZXh0ZW5kcyBrZXlvZiBDRkdbQV1bQl0sXG4gIEQgZXh0ZW5kcyBrZXlvZiBDRkdbQV1bQl1bQ10sXG4gIEUgZXh0ZW5kcyBrZXlvZiBDRkdbQV1bQl1bQ11bRF1cbj4ob2JqOiBDRkcsIHBhdGg6IFtBLCBCLCBDLCBELCBFXSk6IENGR1tBXVtCXVtDXVtEXVtFXTtcbmV4cG9ydCBmdW5jdGlvbiBnZXQ8XG4gIENGRyBleHRlbmRzIHsgW2s6IHN0cmluZ106IGFueSB9LFxuICBBIGV4dGVuZHMga2V5b2YgQ0ZHLFxuICBCIGV4dGVuZHMga2V5b2YgQ0ZHW0FdLFxuICBDIGV4dGVuZHMga2V5b2YgQ0ZHW0FdW0JdLFxuICBEIGV4dGVuZHMga2V5b2YgQ0ZHW0FdW0JdW0NdXG4+KG9iajogQ0ZHLCBwYXRoOiBbQSwgQiwgQywgRF0pOiBDRkdbQV1bQl1bQ11bRF07XG5leHBvcnQgZnVuY3Rpb24gZ2V0PFxuICBDRkcgZXh0ZW5kcyB7IFtrOiBzdHJpbmddOiBhbnkgfSxcbiAgQSBleHRlbmRzIGtleW9mIENGRyxcbiAgQiBleHRlbmRzIGtleW9mIENGR1tBXSxcbiAgQyBleHRlbmRzIGtleW9mIENGR1tBXVtCXVxuPihvYmo6IENGRywgcGF0aDogW0EsIEIsIENdKTogQ0ZHW0FdW0JdW0NdO1xuZXhwb3J0IGZ1bmN0aW9uIGdldDxDRkcgZXh0ZW5kcyB7IFtrOiBzdHJpbmddOiBhbnkgfSwgQSBleHRlbmRzIGtleW9mIENGRywgQiBleHRlbmRzIGtleW9mIENGR1tBXT4oXG4gIG9iajogQ0ZHLFxuICBwYXRoOiBbQSwgQl1cbik6IENGR1tBXVtCXTtcbmV4cG9ydCBmdW5jdGlvbiBnZXQ8Q0ZHIGV4dGVuZHMgeyBbazogc3RyaW5nXTogYW55IH0sIEEgZXh0ZW5kcyBrZXlvZiBDRkc+KFxuICBvYmo6IENGRyxcbiAgcGF0aDogW0FdIHwgQVxuKTogQ0ZHW0FdO1xuZXhwb3J0IGZ1bmN0aW9uIGdldDxDRkcgZXh0ZW5kcyB7IFtrOiBzdHJpbmddOiBhbnkgfT4ob2JqOiBDRkcsIHBhdGg6IHN0cmluZ1tdIHwgc3RyaW5nKTogYW55IHtcbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIGlmIChwYXRoLmluY2x1ZGVzKCcuJykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVXNpbmcgZG90cyBpbiBgZ2V0YCB3aXRoIGEgc3RyaW5nIGlzIG5vdCBhbGxvd2VkLCB1c2UgYXJyYXkgaW5zdGVhZCcpO1xuICAgIH1cblxuICAgIHJldHVybiBvYmpbcGF0aF07XG4gIH1cblxuICBmb3IgKGNvbnN0IGtleSBvZiBwYXRoKSB7XG4gICAgb2JqID0gb2JqW2tleV07XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuIl19