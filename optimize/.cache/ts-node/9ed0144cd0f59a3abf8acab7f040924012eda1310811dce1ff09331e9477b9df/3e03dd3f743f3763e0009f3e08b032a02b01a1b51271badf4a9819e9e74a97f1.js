"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const ml_telemetry_1 = require("./ml_telemetry");
function makeMlUsageCollector(server) {
    const mlUsageCollector = server.usage.collectorSet.makeUsageCollector({
        type: 'ml',
        fetch: async () => {
            try {
                const savedObjectsClient = ml_telemetry_1.getSavedObjectsClient(server);
                const mlTelemetrySavedObject = (await savedObjectsClient.get('ml-telemetry', ml_telemetry_1.ML_TELEMETRY_DOC_ID));
                return mlTelemetrySavedObject.attributes;
            }
            catch (err) {
                return ml_telemetry_1.createMlTelemetry();
            }
        },
    });
    server.usage.collectorSet.register(mlUsageCollector);
}
exports.makeMlUsageCollector = makeMlUsageCollector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvbWwvc2VydmVyL2xpYi9tbF90ZWxlbWV0cnkvbWFrZV9tbF91c2FnZV9jb2xsZWN0b3IudHMiLCJzb3VyY2VzIjpbIi9ob21lL2FudGhvbnkvZ2l0X3dvcmtzcGFjZXMva2liYW5hL3gtcGFjay9wbHVnaW5zL21sL3NlcnZlci9saWIvbWxfdGVsZW1ldHJ5L21ha2VfbWxfdXNhZ2VfY29sbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7OztHQUlHOztBQUlILGlEQU13QjtBQVl4QixTQUFnQixvQkFBb0IsQ0FBQyxNQUF3QjtJQUMzRCxNQUFNLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLGtCQUFrQixDQUFDO1FBQ3BFLElBQUksRUFBRSxJQUFJO1FBQ1YsS0FBSyxFQUFFLEtBQUssSUFBMEIsRUFBRTtZQUN0QyxJQUFJO2dCQUNGLE1BQU0sa0JBQWtCLEdBQUcsb0NBQXFCLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ3pELE1BQU0sc0JBQXNCLEdBQUcsQ0FBQyxNQUFNLGtCQUFrQixDQUFDLEdBQUcsQ0FDMUQsY0FBYyxFQUNkLGtDQUFtQixDQUNwQixDQUEyQixDQUFDO2dCQUM3QixPQUFPLHNCQUFzQixDQUFDLFVBQVUsQ0FBQzthQUMxQztZQUFDLE9BQU8sR0FBRyxFQUFFO2dCQUNaLE9BQU8sZ0NBQWlCLEVBQUUsQ0FBQzthQUM1QjtRQUNILENBQUM7S0FDRixDQUFDLENBQUM7SUFDSCxNQUFNLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUN2RCxDQUFDO0FBakJELG9EQWlCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFNlcnZlciB9IGZyb20gJ2hhcGknO1xuXG5pbXBvcnQge1xuICBjcmVhdGVNbFRlbGVtZXRyeSxcbiAgZ2V0U2F2ZWRPYmplY3RzQ2xpZW50LFxuICBNTF9URUxFTUVUUllfRE9DX0lELFxuICBNbFRlbGVtZXRyeSxcbiAgTWxUZWxlbWV0cnlTYXZlZE9iamVjdCxcbn0gZnJvbSAnLi9tbF90ZWxlbWV0cnknO1xuXG4vLyBUT0RPIHRoaXMgdHlwZSBzaG91bGQgYmUgZGVmaW5lZCBieSB0aGUgcGxhdGZvcm1cbmludGVyZmFjZSBLaWJhbmFIYXBpU2VydmVyIGV4dGVuZHMgU2VydmVyIHtcbiAgdXNhZ2U6IHtcbiAgICBjb2xsZWN0b3JTZXQ6IHtcbiAgICAgIG1ha2VVc2FnZUNvbGxlY3RvcjogYW55O1xuICAgICAgcmVnaXN0ZXI6IGFueTtcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZU1sVXNhZ2VDb2xsZWN0b3Ioc2VydmVyOiBLaWJhbmFIYXBpU2VydmVyKTogdm9pZCB7XG4gIGNvbnN0IG1sVXNhZ2VDb2xsZWN0b3IgPSBzZXJ2ZXIudXNhZ2UuY29sbGVjdG9yU2V0Lm1ha2VVc2FnZUNvbGxlY3Rvcih7XG4gICAgdHlwZTogJ21sJyxcbiAgICBmZXRjaDogYXN5bmMgKCk6IFByb21pc2U8TWxUZWxlbWV0cnk+ID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHNhdmVkT2JqZWN0c0NsaWVudCA9IGdldFNhdmVkT2JqZWN0c0NsaWVudChzZXJ2ZXIpO1xuICAgICAgICBjb25zdCBtbFRlbGVtZXRyeVNhdmVkT2JqZWN0ID0gKGF3YWl0IHNhdmVkT2JqZWN0c0NsaWVudC5nZXQoXG4gICAgICAgICAgJ21sLXRlbGVtZXRyeScsXG4gICAgICAgICAgTUxfVEVMRU1FVFJZX0RPQ19JRFxuICAgICAgICApKSBhcyBNbFRlbGVtZXRyeVNhdmVkT2JqZWN0O1xuICAgICAgICByZXR1cm4gbWxUZWxlbWV0cnlTYXZlZE9iamVjdC5hdHRyaWJ1dGVzO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVNbFRlbGVtZXRyeSgpO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuICBzZXJ2ZXIudXNhZ2UuY29sbGVjdG9yU2V0LnJlZ2lzdGVyKG1sVXNhZ2VDb2xsZWN0b3IpO1xufVxuIl19