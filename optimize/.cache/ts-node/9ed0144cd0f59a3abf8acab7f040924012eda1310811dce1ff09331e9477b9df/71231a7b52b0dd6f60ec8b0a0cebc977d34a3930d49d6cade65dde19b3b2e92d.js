"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConditionalHeaders = ({ job, filteredHeaders, server, }) => {
    const config = server.config();
    const conditionalHeaders = {
        headers: filteredHeaders,
        conditions: {
            hostname: config.get('xpack.reporting.kibanaServer.hostname') || config.get('server.host'),
            port: config.get('xpack.reporting.kibanaServer.port') || config.get('server.port'),
            basePath: config.get('server.basePath'),
            protocol: config.get('xpack.reporting.kibanaServer.protocol') || server.info.protocol,
        },
    };
    return { job, conditionalHeaders, server };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvcmVwb3J0aW5nL2V4cG9ydF90eXBlcy9jb21tb24vZXhlY3V0ZV9qb2IvZ2V0X2NvbmRpdGlvbmFsX2hlYWRlcnMudHMiLCJzb3VyY2VzIjpbIi9ob21lL2FudGhvbnkvZ2l0X3dvcmtzcGFjZXMva2liYW5hL3gtcGFjay9wbHVnaW5zL3JlcG9ydGluZy9leHBvcnRfdHlwZXMvY29tbW9uL2V4ZWN1dGVfam9iL2dldF9jb25kaXRpb25hbF9oZWFkZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBT2EsUUFBQSxxQkFBcUIsR0FBRyxDQUFDLEVBQ3BDLEdBQUcsRUFDSCxlQUFlLEVBQ2YsTUFBTSxHQUtQLEVBQUUsRUFBRTtJQUNILE1BQU0sTUFBTSxHQUFpQixNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7SUFFN0MsTUFBTSxrQkFBa0IsR0FBdUI7UUFDN0MsT0FBTyxFQUFFLGVBQWU7UUFDeEIsVUFBVSxFQUFFO1lBQ1YsUUFBUSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsdUNBQXVDLENBQUMsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQztZQUMxRixJQUFJLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxtQ0FBbUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDO1lBQ2xGLFFBQVEsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDO1lBQ3ZDLFFBQVEsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHVDQUF1QyxDQUFDLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRO1NBQ3RGO0tBQ0YsQ0FBQztJQUVGLE9BQU8sRUFBRSxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFDN0MsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IENvbmRpdGlvbmFsSGVhZGVycywgQ29uZmlnT2JqZWN0LCBLYm5TZXJ2ZXIsIFJlcG9ydGluZ0pvYiB9IGZyb20gJy4uLy4uLy4uL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGdldENvbmRpdGlvbmFsSGVhZGVycyA9ICh7XG4gIGpvYixcbiAgZmlsdGVyZWRIZWFkZXJzLFxuICBzZXJ2ZXIsXG59OiB7XG4gIGpvYjogUmVwb3J0aW5nSm9iO1xuICBmaWx0ZXJlZEhlYWRlcnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XG4gIHNlcnZlcjogS2JuU2VydmVyO1xufSkgPT4ge1xuICBjb25zdCBjb25maWc6IENvbmZpZ09iamVjdCA9IHNlcnZlci5jb25maWcoKTtcblxuICBjb25zdCBjb25kaXRpb25hbEhlYWRlcnM6IENvbmRpdGlvbmFsSGVhZGVycyA9IHtcbiAgICBoZWFkZXJzOiBmaWx0ZXJlZEhlYWRlcnMsXG4gICAgY29uZGl0aW9uczoge1xuICAgICAgaG9zdG5hbWU6IGNvbmZpZy5nZXQoJ3hwYWNrLnJlcG9ydGluZy5raWJhbmFTZXJ2ZXIuaG9zdG5hbWUnKSB8fCBjb25maWcuZ2V0KCdzZXJ2ZXIuaG9zdCcpLFxuICAgICAgcG9ydDogY29uZmlnLmdldCgneHBhY2sucmVwb3J0aW5nLmtpYmFuYVNlcnZlci5wb3J0JykgfHwgY29uZmlnLmdldCgnc2VydmVyLnBvcnQnKSxcbiAgICAgIGJhc2VQYXRoOiBjb25maWcuZ2V0KCdzZXJ2ZXIuYmFzZVBhdGgnKSxcbiAgICAgIHByb3RvY29sOiBjb25maWcuZ2V0KCd4cGFjay5yZXBvcnRpbmcua2liYW5hU2VydmVyLnByb3RvY29sJykgfHwgc2VydmVyLmluZm8ucHJvdG9jb2wsXG4gICAgfSxcbiAgfTtcblxuICByZXR1cm4geyBqb2IsIGNvbmRpdGlvbmFsSGVhZGVycywgc2VydmVyIH07XG59O1xuIl19