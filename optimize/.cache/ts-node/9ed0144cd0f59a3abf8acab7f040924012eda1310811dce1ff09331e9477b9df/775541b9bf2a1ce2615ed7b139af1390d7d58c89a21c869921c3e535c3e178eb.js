"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const apm_telemetry_1 = require("./apm_telemetry");
function makeApmUsageCollector(server) {
    const apmUsageCollector = server.usage.collectorSet.makeUsageCollector({
        type: 'apm',
        fetch: async () => {
            const savedObjectsClient = apm_telemetry_1.getSavedObjectsClient(server);
            try {
                const apmTelemetrySavedObject = await savedObjectsClient.get('apm-telemetry', apm_telemetry_1.APM_TELEMETRY_DOC_ID);
                return apmTelemetrySavedObject.attributes;
            }
            catch (err) {
                return apm_telemetry_1.createApmTelementry();
            }
        }
    });
    server.usage.collectorSet.register(apmUsageCollector);
}
exports.makeApmUsageCollector = makeApmUsageCollector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvYXBtL3NlcnZlci9saWIvYXBtX3RlbGVtZXRyeS9tYWtlX2FwbV91c2FnZV9jb2xsZWN0b3IudHMiLCJzb3VyY2VzIjpbIi9ob21lL2FudGhvbnkvZ2l0X3dvcmtzcGFjZXMva2liYW5hL3gtcGFjay9wbHVnaW5zL2FwbS9zZXJ2ZXIvbGliL2FwbV90ZWxlbWV0cnkvbWFrZV9hcG1fdXNhZ2VfY29sbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7OztHQUlHOztBQUdILG1EQUt5QjtBQVl6QixTQUFnQixxQkFBcUIsQ0FBQyxNQUF3QjtJQUM1RCxNQUFNLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLGtCQUFrQixDQUFDO1FBQ3JFLElBQUksRUFBRSxLQUFLO1FBQ1gsS0FBSyxFQUFFLEtBQUssSUFBMkIsRUFBRTtZQUN2QyxNQUFNLGtCQUFrQixHQUFHLHFDQUFxQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3pELElBQUk7Z0JBQ0YsTUFBTSx1QkFBdUIsR0FBRyxNQUFNLGtCQUFrQixDQUFDLEdBQUcsQ0FDMUQsZUFBZSxFQUNmLG9DQUFvQixDQUNyQixDQUFDO2dCQUNGLE9BQU8sdUJBQXVCLENBQUMsVUFBVSxDQUFDO2FBQzNDO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osT0FBTyxtQ0FBbUIsRUFBRSxDQUFDO2FBQzlCO1FBQ0gsQ0FBQztLQUNGLENBQUMsQ0FBQztJQUNILE1BQU0sQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQ3hELENBQUM7QUFqQkQsc0RBaUJDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgU2VydmVyIH0gZnJvbSAnaGFwaSc7XG5pbXBvcnQge1xuICBBUE1fVEVMRU1FVFJZX0RPQ19JRCxcbiAgQXBtVGVsZW1ldHJ5LFxuICBjcmVhdGVBcG1UZWxlbWVudHJ5LFxuICBnZXRTYXZlZE9iamVjdHNDbGllbnRcbn0gZnJvbSAnLi9hcG1fdGVsZW1ldHJ5JztcblxuLy8gVE9ETyB0aGlzIHR5cGUgc2hvdWxkIGJlIGRlZmluZWQgYnkgdGhlIHBsYXRmb3JtXG5pbnRlcmZhY2UgS2liYW5hSGFwaVNlcnZlciBleHRlbmRzIFNlcnZlciB7XG4gIHVzYWdlOiB7XG4gICAgY29sbGVjdG9yU2V0OiB7XG4gICAgICBtYWtlVXNhZ2VDb2xsZWN0b3I6IGFueTtcbiAgICAgIHJlZ2lzdGVyOiBhbnk7XG4gICAgfTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VBcG1Vc2FnZUNvbGxlY3RvcihzZXJ2ZXI6IEtpYmFuYUhhcGlTZXJ2ZXIpOiB2b2lkIHtcbiAgY29uc3QgYXBtVXNhZ2VDb2xsZWN0b3IgPSBzZXJ2ZXIudXNhZ2UuY29sbGVjdG9yU2V0Lm1ha2VVc2FnZUNvbGxlY3Rvcih7XG4gICAgdHlwZTogJ2FwbScsXG4gICAgZmV0Y2g6IGFzeW5jICgpOiBQcm9taXNlPEFwbVRlbGVtZXRyeT4gPT4ge1xuICAgICAgY29uc3Qgc2F2ZWRPYmplY3RzQ2xpZW50ID0gZ2V0U2F2ZWRPYmplY3RzQ2xpZW50KHNlcnZlcik7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBhcG1UZWxlbWV0cnlTYXZlZE9iamVjdCA9IGF3YWl0IHNhdmVkT2JqZWN0c0NsaWVudC5nZXQoXG4gICAgICAgICAgJ2FwbS10ZWxlbWV0cnknLFxuICAgICAgICAgIEFQTV9URUxFTUVUUllfRE9DX0lEXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiBhcG1UZWxlbWV0cnlTYXZlZE9iamVjdC5hdHRyaWJ1dGVzO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVBcG1UZWxlbWVudHJ5KCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgc2VydmVyLnVzYWdlLmNvbGxlY3RvclNldC5yZWdpc3RlcihhcG1Vc2FnZUNvbGxlY3Rvcik7XG59XG4iXX0=