"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
exports.SERVICE_NAME = 'context.service.name';
exports.SERVICE_AGENT_NAME = 'context.service.agent.name';
exports.SERVICE_LANGUAGE_NAME = 'context.service.language.name';
exports.REQUEST_URL_FULL = 'context.request.url.full';
exports.REQUEST_METHOD = 'context.request.method';
exports.USER_ID = 'context.user.id';
exports.PROCESSOR_NAME = 'processor.name';
exports.PROCESSOR_EVENT = 'processor.event';
exports.TRANSACTION_DURATION = 'transaction.duration.us';
exports.TRANSACTION_TYPE = 'transaction.type';
exports.TRANSACTION_RESULT = 'transaction.result';
exports.TRANSACTION_NAME = 'transaction.name';
exports.TRANSACTION_ID = 'transaction.id';
exports.TRANSACTION_SAMPLED = 'transaction.sampled';
exports.TRACE_ID = 'trace.id';
exports.SPAN_START = 'span.start.us';
exports.SPAN_DURATION = 'span.duration.us';
exports.SPAN_TYPE = 'span.type';
exports.SPAN_NAME = 'span.name';
exports.SPAN_ID = 'span.id';
exports.SPAN_SQL = 'context.db.statement';
exports.SPAN_HEX_ID = 'span.hex_id';
// Parent ID for a transaction or span
exports.PARENT_ID = 'parent.id';
exports.ERROR_GROUP_ID = 'error.grouping_key';
exports.ERROR_CULPRIT = 'error.culprit';
exports.ERROR_LOG_MESSAGE = 'error.log.message';
exports.ERROR_LOG_STACKTRACE = 'error.log.stacktrace';
exports.ERROR_EXC_MESSAGE = 'error.exception.message';
exports.ERROR_EXC_STACKTRACE = 'error.exception.stacktrace';
exports.ERROR_EXC_HANDLED = 'error.exception.handled';
// METRICS
exports.METRIC_SYSTEM_FREE_MEMORY = 'system.memory.actual.free';
exports.METRIC_SYSTEM_TOTAL_MEMORY = 'system.memory.total';
exports.METRIC_PROCESS_MEMORY_SIZE = 'system.process.memory.size';
exports.METRIC_PROCESS_MEMORY_RSS = 'system.process.memory.rss.bytes';
exports.METRIC_SYSTEM_CPU_PERCENT = 'system.cpu.total.norm.pct';
exports.METRIC_PROCESS_CPU_PERCENT = 'system.process.cpu.total.norm.pct';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvYXBtL2NvbW1vbi9jb25zdGFudHMudHMiLCJzb3VyY2VzIjpbIi9ob21lL2FudGhvbnkvZ2l0X3dvcmtzcGFjZXMva2liYW5hL3gtcGFjay9wbHVnaW5zL2FwbS9jb21tb24vY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7R0FJRztBQUNVLFFBQUEsWUFBWSxHQUFHLHNCQUFzQixDQUFDO0FBQ3RDLFFBQUEsa0JBQWtCLEdBQUcsNEJBQTRCLENBQUM7QUFDbEQsUUFBQSxxQkFBcUIsR0FBRywrQkFBK0IsQ0FBQztBQUN4RCxRQUFBLGdCQUFnQixHQUFHLDBCQUEwQixDQUFDO0FBQzlDLFFBQUEsY0FBYyxHQUFHLHdCQUF3QixDQUFDO0FBQzFDLFFBQUEsT0FBTyxHQUFHLGlCQUFpQixDQUFDO0FBRTVCLFFBQUEsY0FBYyxHQUFHLGdCQUFnQixDQUFDO0FBQ2xDLFFBQUEsZUFBZSxHQUFHLGlCQUFpQixDQUFDO0FBRXBDLFFBQUEsb0JBQW9CLEdBQUcseUJBQXlCLENBQUM7QUFDakQsUUFBQSxnQkFBZ0IsR0FBRyxrQkFBa0IsQ0FBQztBQUN0QyxRQUFBLGtCQUFrQixHQUFHLG9CQUFvQixDQUFDO0FBQzFDLFFBQUEsZ0JBQWdCLEdBQUcsa0JBQWtCLENBQUM7QUFDdEMsUUFBQSxjQUFjLEdBQUcsZ0JBQWdCLENBQUM7QUFDbEMsUUFBQSxtQkFBbUIsR0FBRyxxQkFBcUIsQ0FBQztBQUU1QyxRQUFBLFFBQVEsR0FBRyxVQUFVLENBQUM7QUFFdEIsUUFBQSxVQUFVLEdBQUcsZUFBZSxDQUFDO0FBQzdCLFFBQUEsYUFBYSxHQUFHLGtCQUFrQixDQUFDO0FBQ25DLFFBQUEsU0FBUyxHQUFHLFdBQVcsQ0FBQztBQUN4QixRQUFBLFNBQVMsR0FBRyxXQUFXLENBQUM7QUFDeEIsUUFBQSxPQUFPLEdBQUcsU0FBUyxDQUFDO0FBQ3BCLFFBQUEsUUFBUSxHQUFHLHNCQUFzQixDQUFDO0FBQ2xDLFFBQUEsV0FBVyxHQUFHLGFBQWEsQ0FBQztBQUV6QyxzQ0FBc0M7QUFDekIsUUFBQSxTQUFTLEdBQUcsV0FBVyxDQUFDO0FBRXhCLFFBQUEsY0FBYyxHQUFHLG9CQUFvQixDQUFDO0FBQ3RDLFFBQUEsYUFBYSxHQUFHLGVBQWUsQ0FBQztBQUNoQyxRQUFBLGlCQUFpQixHQUFHLG1CQUFtQixDQUFDO0FBQ3hDLFFBQUEsb0JBQW9CLEdBQUcsc0JBQXNCLENBQUM7QUFDOUMsUUFBQSxpQkFBaUIsR0FBRyx5QkFBeUIsQ0FBQztBQUM5QyxRQUFBLG9CQUFvQixHQUFHLDRCQUE0QixDQUFDO0FBQ3BELFFBQUEsaUJBQWlCLEdBQUcseUJBQXlCLENBQUM7QUFFM0QsVUFBVTtBQUNHLFFBQUEseUJBQXlCLEdBQUcsMkJBQTJCLENBQUM7QUFDeEQsUUFBQSwwQkFBMEIsR0FBRyxxQkFBcUIsQ0FBQztBQUNuRCxRQUFBLDBCQUEwQixHQUFHLDRCQUE0QixDQUFDO0FBQzFELFFBQUEseUJBQXlCLEdBQUcsaUNBQWlDLENBQUM7QUFFOUQsUUFBQSx5QkFBeUIsR0FBRywyQkFBMkIsQ0FBQztBQUN4RCxRQUFBLDBCQUEwQixHQUFHLG1DQUFtQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuXG4gKi9cbmV4cG9ydCBjb25zdCBTRVJWSUNFX05BTUUgPSAnY29udGV4dC5zZXJ2aWNlLm5hbWUnO1xuZXhwb3J0IGNvbnN0IFNFUlZJQ0VfQUdFTlRfTkFNRSA9ICdjb250ZXh0LnNlcnZpY2UuYWdlbnQubmFtZSc7XG5leHBvcnQgY29uc3QgU0VSVklDRV9MQU5HVUFHRV9OQU1FID0gJ2NvbnRleHQuc2VydmljZS5sYW5ndWFnZS5uYW1lJztcbmV4cG9ydCBjb25zdCBSRVFVRVNUX1VSTF9GVUxMID0gJ2NvbnRleHQucmVxdWVzdC51cmwuZnVsbCc7XG5leHBvcnQgY29uc3QgUkVRVUVTVF9NRVRIT0QgPSAnY29udGV4dC5yZXF1ZXN0Lm1ldGhvZCc7XG5leHBvcnQgY29uc3QgVVNFUl9JRCA9ICdjb250ZXh0LnVzZXIuaWQnO1xuXG5leHBvcnQgY29uc3QgUFJPQ0VTU09SX05BTUUgPSAncHJvY2Vzc29yLm5hbWUnO1xuZXhwb3J0IGNvbnN0IFBST0NFU1NPUl9FVkVOVCA9ICdwcm9jZXNzb3IuZXZlbnQnO1xuXG5leHBvcnQgY29uc3QgVFJBTlNBQ1RJT05fRFVSQVRJT04gPSAndHJhbnNhY3Rpb24uZHVyYXRpb24udXMnO1xuZXhwb3J0IGNvbnN0IFRSQU5TQUNUSU9OX1RZUEUgPSAndHJhbnNhY3Rpb24udHlwZSc7XG5leHBvcnQgY29uc3QgVFJBTlNBQ1RJT05fUkVTVUxUID0gJ3RyYW5zYWN0aW9uLnJlc3VsdCc7XG5leHBvcnQgY29uc3QgVFJBTlNBQ1RJT05fTkFNRSA9ICd0cmFuc2FjdGlvbi5uYW1lJztcbmV4cG9ydCBjb25zdCBUUkFOU0FDVElPTl9JRCA9ICd0cmFuc2FjdGlvbi5pZCc7XG5leHBvcnQgY29uc3QgVFJBTlNBQ1RJT05fU0FNUExFRCA9ICd0cmFuc2FjdGlvbi5zYW1wbGVkJztcblxuZXhwb3J0IGNvbnN0IFRSQUNFX0lEID0gJ3RyYWNlLmlkJztcblxuZXhwb3J0IGNvbnN0IFNQQU5fU1RBUlQgPSAnc3Bhbi5zdGFydC51cyc7XG5leHBvcnQgY29uc3QgU1BBTl9EVVJBVElPTiA9ICdzcGFuLmR1cmF0aW9uLnVzJztcbmV4cG9ydCBjb25zdCBTUEFOX1RZUEUgPSAnc3Bhbi50eXBlJztcbmV4cG9ydCBjb25zdCBTUEFOX05BTUUgPSAnc3Bhbi5uYW1lJztcbmV4cG9ydCBjb25zdCBTUEFOX0lEID0gJ3NwYW4uaWQnO1xuZXhwb3J0IGNvbnN0IFNQQU5fU1FMID0gJ2NvbnRleHQuZGIuc3RhdGVtZW50JztcbmV4cG9ydCBjb25zdCBTUEFOX0hFWF9JRCA9ICdzcGFuLmhleF9pZCc7XG5cbi8vIFBhcmVudCBJRCBmb3IgYSB0cmFuc2FjdGlvbiBvciBzcGFuXG5leHBvcnQgY29uc3QgUEFSRU5UX0lEID0gJ3BhcmVudC5pZCc7XG5cbmV4cG9ydCBjb25zdCBFUlJPUl9HUk9VUF9JRCA9ICdlcnJvci5ncm91cGluZ19rZXknO1xuZXhwb3J0IGNvbnN0IEVSUk9SX0NVTFBSSVQgPSAnZXJyb3IuY3VscHJpdCc7XG5leHBvcnQgY29uc3QgRVJST1JfTE9HX01FU1NBR0UgPSAnZXJyb3IubG9nLm1lc3NhZ2UnO1xuZXhwb3J0IGNvbnN0IEVSUk9SX0xPR19TVEFDS1RSQUNFID0gJ2Vycm9yLmxvZy5zdGFja3RyYWNlJztcbmV4cG9ydCBjb25zdCBFUlJPUl9FWENfTUVTU0FHRSA9ICdlcnJvci5leGNlcHRpb24ubWVzc2FnZSc7XG5leHBvcnQgY29uc3QgRVJST1JfRVhDX1NUQUNLVFJBQ0UgPSAnZXJyb3IuZXhjZXB0aW9uLnN0YWNrdHJhY2UnO1xuZXhwb3J0IGNvbnN0IEVSUk9SX0VYQ19IQU5ETEVEID0gJ2Vycm9yLmV4Y2VwdGlvbi5oYW5kbGVkJztcblxuLy8gTUVUUklDU1xuZXhwb3J0IGNvbnN0IE1FVFJJQ19TWVNURU1fRlJFRV9NRU1PUlkgPSAnc3lzdGVtLm1lbW9yeS5hY3R1YWwuZnJlZSc7XG5leHBvcnQgY29uc3QgTUVUUklDX1NZU1RFTV9UT1RBTF9NRU1PUlkgPSAnc3lzdGVtLm1lbW9yeS50b3RhbCc7XG5leHBvcnQgY29uc3QgTUVUUklDX1BST0NFU1NfTUVNT1JZX1NJWkUgPSAnc3lzdGVtLnByb2Nlc3MubWVtb3J5LnNpemUnO1xuZXhwb3J0IGNvbnN0IE1FVFJJQ19QUk9DRVNTX01FTU9SWV9SU1MgPSAnc3lzdGVtLnByb2Nlc3MubWVtb3J5LnJzcy5ieXRlcyc7XG5cbmV4cG9ydCBjb25zdCBNRVRSSUNfU1lTVEVNX0NQVV9QRVJDRU5UID0gJ3N5c3RlbS5jcHUudG90YWwubm9ybS5wY3QnO1xuZXhwb3J0IGNvbnN0IE1FVFJJQ19QUk9DRVNTX0NQVV9QRVJDRU5UID0gJ3N5c3RlbS5wcm9jZXNzLmNwdS50b3RhbC5ub3JtLnBjdCc7XG4iXX0=