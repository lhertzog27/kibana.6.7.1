"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const index_names_1 = require("../common/constants/index_names");
const index_templates_1 = require("./index_templates");
const configuration_1 = require("./rest_api/beats/configuration");
const enroll_1 = require("./rest_api/beats/enroll");
const events_1 = require("./rest_api/beats/events");
const get_1 = require("./rest_api/beats/get");
const list_1 = require("./rest_api/beats/list");
const tag_assignment_1 = require("./rest_api/beats/tag_assignment");
const tag_removal_1 = require("./rest_api/beats/tag_removal");
const update_1 = require("./rest_api/beats/update");
const delete_1 = require("./rest_api/configurations/delete");
const get_2 = require("./rest_api/configurations/get");
const upsert_1 = require("./rest_api/configurations/upsert");
const assignable_1 = require("./rest_api/tags/assignable");
const delete_2 = require("./rest_api/tags/delete");
const get_3 = require("./rest_api/tags/get");
const list_2 = require("./rest_api/tags/list");
const set_1 = require("./rest_api/tags/set");
const create_1 = require("./rest_api/tokens/create");
exports.initManagementServer = (libs) => {
    if (libs.database) {
        libs.framework.on('elasticsearch.status.green', async () => {
            await libs.database.putTemplate(index_names_1.INDEX_NAMES.BEATS, index_templates_1.beatsIndexTemplate);
        });
    }
    libs.framework.registerRoute(get_1.createGetBeatRoute(libs));
    libs.framework.registerRoute(get_3.createGetTagsWithIdsRoute(libs));
    libs.framework.registerRoute(list_2.createListTagsRoute(libs));
    libs.framework.registerRoute(delete_2.createDeleteTagsWithIdsRoute(libs));
    libs.framework.registerRoute(configuration_1.createGetBeatConfigurationRoute(libs));
    libs.framework.registerRoute(tag_assignment_1.createTagAssignmentsRoute(libs));
    libs.framework.registerRoute(list_1.createListAgentsRoute(libs));
    libs.framework.registerRoute(tag_removal_1.createTagRemovalsRoute(libs));
    libs.framework.registerRoute(enroll_1.createBeatEnrollmentRoute(libs));
    libs.framework.registerRoute(set_1.createSetTagRoute(libs));
    libs.framework.registerRoute(create_1.createTokensRoute(libs));
    libs.framework.registerRoute(update_1.createBeatUpdateRoute(libs));
    libs.framework.registerRoute(delete_1.createDeleteConfidurationsRoute(libs));
    libs.framework.registerRoute(get_2.createGetConfigurationBlocksRoute(libs));
    libs.framework.registerRoute(upsert_1.upsertConfigurationRoute(libs));
    libs.framework.registerRoute(assignable_1.createAssignableTagsRoute(libs));
    libs.framework.registerRoute(events_1.beatEventsRoute(libs));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvYmVhdHNfbWFuYWdlbWVudC9zZXJ2ZXIvbWFuYWdlbWVudF9zZXJ2ZXIudHMiLCJzb3VyY2VzIjpbIi9ob21lL2FudGhvbnkvZ2l0X3dvcmtzcGFjZXMva2liYW5hL3gtcGFjay9wbHVnaW5zL2JlYXRzX21hbmFnZW1lbnQvc2VydmVyL21hbmFnZW1lbnRfc2VydmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7OztHQUlHOztBQUVILGlFQUE4RDtBQUM5RCx1REFBdUQ7QUFFdkQsa0VBQWlGO0FBQ2pGLG9EQUFvRTtBQUNwRSxvREFBMEQ7QUFDMUQsOENBQTBEO0FBQzFELGdEQUE4RDtBQUM5RCxvRUFBNEU7QUFDNUUsOERBQXNFO0FBQ3RFLG9EQUFnRTtBQUNoRSw2REFBbUY7QUFDbkYsdURBQWtGO0FBQ2xGLDZEQUE0RTtBQUM1RSwyREFBdUU7QUFDdkUsbURBQXNFO0FBQ3RFLDZDQUFnRTtBQUNoRSwrQ0FBMkQ7QUFDM0QsNkNBQXdEO0FBQ3hELHFEQUE2RDtBQUVoRCxRQUFBLG9CQUFvQixHQUFHLENBQUMsSUFBa0IsRUFBRSxFQUFFO0lBQ3pELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtRQUNqQixJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyw0QkFBNEIsRUFBRSxLQUFLLElBQUksRUFBRTtZQUN6RCxNQUFNLElBQUksQ0FBQyxRQUFTLENBQUMsV0FBVyxDQUFDLHlCQUFXLENBQUMsS0FBSyxFQUFFLG9DQUFrQixDQUFDLENBQUM7UUFDMUUsQ0FBQyxDQUFDLENBQUM7S0FDSjtJQUVELElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLHdCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDdkQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsK0JBQXlCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUM5RCxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQywwQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3hELElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLHFDQUE0QixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDakUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsK0NBQStCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNwRSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQywwQ0FBeUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzlELElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLDRCQUFxQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDMUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsb0NBQXNCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMzRCxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxrQ0FBeUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzlELElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLHVCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDdEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsMEJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN0RCxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyw4QkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzFELElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLHdDQUErQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDcEUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsdUNBQWlDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN0RSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxpQ0FBd0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzdELElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLHNDQUF5QixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDOUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsd0JBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ3RELENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IElOREVYX05BTUVTIH0gZnJvbSAnLi4vY29tbW9uL2NvbnN0YW50cy9pbmRleF9uYW1lcyc7XG5pbXBvcnQgeyBiZWF0c0luZGV4VGVtcGxhdGUgfSBmcm9tICcuL2luZGV4X3RlbXBsYXRlcyc7XG5pbXBvcnQgeyBDTVNlcnZlckxpYnMgfSBmcm9tICcuL2xpYi90eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVHZXRCZWF0Q29uZmlndXJhdGlvblJvdXRlIH0gZnJvbSAnLi9yZXN0X2FwaS9iZWF0cy9jb25maWd1cmF0aW9uJztcbmltcG9ydCB7IGNyZWF0ZUJlYXRFbnJvbGxtZW50Um91dGUgfSBmcm9tICcuL3Jlc3RfYXBpL2JlYXRzL2Vucm9sbCc7XG5pbXBvcnQgeyBiZWF0RXZlbnRzUm91dGUgfSBmcm9tICcuL3Jlc3RfYXBpL2JlYXRzL2V2ZW50cyc7XG5pbXBvcnQgeyBjcmVhdGVHZXRCZWF0Um91dGUgfSBmcm9tICcuL3Jlc3RfYXBpL2JlYXRzL2dldCc7XG5pbXBvcnQgeyBjcmVhdGVMaXN0QWdlbnRzUm91dGUgfSBmcm9tICcuL3Jlc3RfYXBpL2JlYXRzL2xpc3QnO1xuaW1wb3J0IHsgY3JlYXRlVGFnQXNzaWdubWVudHNSb3V0ZSB9IGZyb20gJy4vcmVzdF9hcGkvYmVhdHMvdGFnX2Fzc2lnbm1lbnQnO1xuaW1wb3J0IHsgY3JlYXRlVGFnUmVtb3ZhbHNSb3V0ZSB9IGZyb20gJy4vcmVzdF9hcGkvYmVhdHMvdGFnX3JlbW92YWwnO1xuaW1wb3J0IHsgY3JlYXRlQmVhdFVwZGF0ZVJvdXRlIH0gZnJvbSAnLi9yZXN0X2FwaS9iZWF0cy91cGRhdGUnO1xuaW1wb3J0IHsgY3JlYXRlRGVsZXRlQ29uZmlkdXJhdGlvbnNSb3V0ZSB9IGZyb20gJy4vcmVzdF9hcGkvY29uZmlndXJhdGlvbnMvZGVsZXRlJztcbmltcG9ydCB7IGNyZWF0ZUdldENvbmZpZ3VyYXRpb25CbG9ja3NSb3V0ZSB9IGZyb20gJy4vcmVzdF9hcGkvY29uZmlndXJhdGlvbnMvZ2V0JztcbmltcG9ydCB7IHVwc2VydENvbmZpZ3VyYXRpb25Sb3V0ZSB9IGZyb20gJy4vcmVzdF9hcGkvY29uZmlndXJhdGlvbnMvdXBzZXJ0JztcbmltcG9ydCB7IGNyZWF0ZUFzc2lnbmFibGVUYWdzUm91dGUgfSBmcm9tICcuL3Jlc3RfYXBpL3RhZ3MvYXNzaWduYWJsZSc7XG5pbXBvcnQgeyBjcmVhdGVEZWxldGVUYWdzV2l0aElkc1JvdXRlIH0gZnJvbSAnLi9yZXN0X2FwaS90YWdzL2RlbGV0ZSc7XG5pbXBvcnQgeyBjcmVhdGVHZXRUYWdzV2l0aElkc1JvdXRlIH0gZnJvbSAnLi9yZXN0X2FwaS90YWdzL2dldCc7XG5pbXBvcnQgeyBjcmVhdGVMaXN0VGFnc1JvdXRlIH0gZnJvbSAnLi9yZXN0X2FwaS90YWdzL2xpc3QnO1xuaW1wb3J0IHsgY3JlYXRlU2V0VGFnUm91dGUgfSBmcm9tICcuL3Jlc3RfYXBpL3RhZ3Mvc2V0JztcbmltcG9ydCB7IGNyZWF0ZVRva2Vuc1JvdXRlIH0gZnJvbSAnLi9yZXN0X2FwaS90b2tlbnMvY3JlYXRlJztcblxuZXhwb3J0IGNvbnN0IGluaXRNYW5hZ2VtZW50U2VydmVyID0gKGxpYnM6IENNU2VydmVyTGlicykgPT4ge1xuICBpZiAobGlicy5kYXRhYmFzZSkge1xuICAgIGxpYnMuZnJhbWV3b3JrLm9uKCdlbGFzdGljc2VhcmNoLnN0YXR1cy5ncmVlbicsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGxpYnMuZGF0YWJhc2UhLnB1dFRlbXBsYXRlKElOREVYX05BTUVTLkJFQVRTLCBiZWF0c0luZGV4VGVtcGxhdGUpO1xuICAgIH0pO1xuICB9XG5cbiAgbGlicy5mcmFtZXdvcmsucmVnaXN0ZXJSb3V0ZShjcmVhdGVHZXRCZWF0Um91dGUobGlicykpO1xuICBsaWJzLmZyYW1ld29yay5yZWdpc3RlclJvdXRlKGNyZWF0ZUdldFRhZ3NXaXRoSWRzUm91dGUobGlicykpO1xuICBsaWJzLmZyYW1ld29yay5yZWdpc3RlclJvdXRlKGNyZWF0ZUxpc3RUYWdzUm91dGUobGlicykpO1xuICBsaWJzLmZyYW1ld29yay5yZWdpc3RlclJvdXRlKGNyZWF0ZURlbGV0ZVRhZ3NXaXRoSWRzUm91dGUobGlicykpO1xuICBsaWJzLmZyYW1ld29yay5yZWdpc3RlclJvdXRlKGNyZWF0ZUdldEJlYXRDb25maWd1cmF0aW9uUm91dGUobGlicykpO1xuICBsaWJzLmZyYW1ld29yay5yZWdpc3RlclJvdXRlKGNyZWF0ZVRhZ0Fzc2lnbm1lbnRzUm91dGUobGlicykpO1xuICBsaWJzLmZyYW1ld29yay5yZWdpc3RlclJvdXRlKGNyZWF0ZUxpc3RBZ2VudHNSb3V0ZShsaWJzKSk7XG4gIGxpYnMuZnJhbWV3b3JrLnJlZ2lzdGVyUm91dGUoY3JlYXRlVGFnUmVtb3ZhbHNSb3V0ZShsaWJzKSk7XG4gIGxpYnMuZnJhbWV3b3JrLnJlZ2lzdGVyUm91dGUoY3JlYXRlQmVhdEVucm9sbG1lbnRSb3V0ZShsaWJzKSk7XG4gIGxpYnMuZnJhbWV3b3JrLnJlZ2lzdGVyUm91dGUoY3JlYXRlU2V0VGFnUm91dGUobGlicykpO1xuICBsaWJzLmZyYW1ld29yay5yZWdpc3RlclJvdXRlKGNyZWF0ZVRva2Vuc1JvdXRlKGxpYnMpKTtcbiAgbGlicy5mcmFtZXdvcmsucmVnaXN0ZXJSb3V0ZShjcmVhdGVCZWF0VXBkYXRlUm91dGUobGlicykpO1xuICBsaWJzLmZyYW1ld29yay5yZWdpc3RlclJvdXRlKGNyZWF0ZURlbGV0ZUNvbmZpZHVyYXRpb25zUm91dGUobGlicykpO1xuICBsaWJzLmZyYW1ld29yay5yZWdpc3RlclJvdXRlKGNyZWF0ZUdldENvbmZpZ3VyYXRpb25CbG9ja3NSb3V0ZShsaWJzKSk7XG4gIGxpYnMuZnJhbWV3b3JrLnJlZ2lzdGVyUm91dGUodXBzZXJ0Q29uZmlndXJhdGlvblJvdXRlKGxpYnMpKTtcbiAgbGlicy5mcmFtZXdvcmsucmVnaXN0ZXJSb3V0ZShjcmVhdGVBc3NpZ25hYmxlVGFnc1JvdXRlKGxpYnMpKTtcbiAgbGlicy5mcmFtZXdvcmsucmVnaXN0ZXJSb3V0ZShiZWF0RXZlbnRzUm91dGUobGlicykpO1xufTtcbiJdfQ==