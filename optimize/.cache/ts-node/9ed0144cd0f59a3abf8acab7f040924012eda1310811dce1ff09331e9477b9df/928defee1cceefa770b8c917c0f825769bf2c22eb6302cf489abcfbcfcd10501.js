"use strict";
/*
 * Licensed to Elasticsearch B.V. under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch B.V. licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Checks whether specified value can be considered as config path.
 * @param value Value to check.
 * @internal
 */
function isConfigPath(value) {
    if (!value) {
        return false;
    }
    if (typeof value === 'string') {
        return true;
    }
    return Array.isArray(value) && value.every(segment => typeof segment === 'string');
}
exports.isConfigPath = isConfigPath;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEvc3JjL2NvcmUvc2VydmVyL2NvbmZpZy9jb25maWcudHMiLCJzb3VyY2VzIjpbIi9ob21lL2FudGhvbnkvZ2l0X3dvcmtzcGFjZXMva2liYW5hL3NyYy9jb3JlL3NlcnZlci9jb25maWcvY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQkc7O0FBSUg7Ozs7R0FJRztBQUNILFNBQWdCLFlBQVksQ0FBQyxLQUFjO0lBQ3pDLElBQUksQ0FBQyxLQUFLLEVBQUU7UUFDVixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDN0IsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUVELE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxPQUFPLEtBQUssUUFBUSxDQUFDLENBQUM7QUFDckYsQ0FBQztBQVZELG9DQVVDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvclxuICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGhcbiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0XG4gKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyXG4gKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5XG4gKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmV4cG9ydCB0eXBlIENvbmZpZ1BhdGggPSBzdHJpbmcgfCBzdHJpbmdbXTtcblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBzcGVjaWZpZWQgdmFsdWUgY2FuIGJlIGNvbnNpZGVyZWQgYXMgY29uZmlnIHBhdGguXG4gKiBAcGFyYW0gdmFsdWUgVmFsdWUgdG8gY2hlY2suXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ29uZmlnUGF0aCh2YWx1ZTogdW5rbm93bik6IHZhbHVlIGlzIENvbmZpZ1BhdGgge1xuICBpZiAoIXZhbHVlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB2YWx1ZS5ldmVyeShzZWdtZW50ID0+IHR5cGVvZiBzZWdtZW50ID09PSAnc3RyaW5nJyk7XG59XG5cbi8qKlxuICogUmVwcmVzZW50cyBjb25maWcgc3RvcmUuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDb25maWcge1xuICAvKipcbiAgICogUmV0dXJucyB3aGV0aGVyIG9yIG5vdCB0aGVyZSBpcyBhIGNvbmZpZyB2YWx1ZSBsb2NhdGVkIGF0IHRoZSBzcGVjaWZpZWQgcGF0aC5cbiAgICogQHBhcmFtIGNvbmZpZ1BhdGggUGF0aCB0byBsb2NhdGUgdmFsdWUgYXQuXG4gICAqIEByZXR1cm5zIFdoZXRoZXIgb3Igbm90IGEgdmFsdWUgZXhpc3RzIGF0IHRoZSBwYXRoLlxuICAgKi9cbiAgaGFzKGNvbmZpZ1BhdGg6IENvbmZpZ1BhdGgpOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGNvbmZpZyB2YWx1ZSBsb2NhdGVkIGF0IHRoZSBzcGVjaWZpZWQgcGF0aC5cbiAgICogQHBhcmFtIGNvbmZpZ1BhdGggUGF0aCB0byBsb2NhdGUgdmFsdWUgYXQuXG4gICAqIEByZXR1cm5zIENvbmZpZyB2YWx1ZS5cbiAgICovXG4gIGdldChjb25maWdQYXRoOiBDb25maWdQYXRoKTogYW55O1xuXG4gIC8qKlxuICAgKiBTZXRzIGNvbmZpZyB2YWx1ZSBhdCB0aGUgc3BlY2lmaWVkIHBhdGguXG4gICAqIEBwYXJhbSBjb25maWdQYXRoIFBhdGggdG8gc2V0IHZhbHVlIGZvci5cbiAgICogQHBhcmFtIHZhbHVlIFZhbHVlIHRvIHNldCBmb3IgdGhlIHNwZWNpZmllZCBwYXRoLlxuICAgKi9cbiAgc2V0KGNvbmZpZ1BhdGg6IENvbmZpZ1BhdGgsIHZhbHVlOiBhbnkpOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGZ1bGwgZmxhdHRlbmVkIGxpc3Qgb2YgdGhlIGNvbmZpZyBwYXRocyB0aGF0IGNvbmZpZyBjb250YWlucy5cbiAgICogQHJldHVybnMgTGlzdCBvZiB0aGUgc3RyaW5nIGNvbmZpZyBwYXRocy5cbiAgICovXG4gIGdldEZsYXR0ZW5lZFBhdGhzKCk6IHN0cmluZ1tdO1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgZnVsbCBjb3B5IG9mIHRoZSB1bmRlcmx5aW5nIHJhdyBjb25maWcgb2JqZWN0LiBTaG91bGQgYmUgdXNlZCBPTkxZXG4gICAqIGluIGV4dHJlbWUgY2FzZXMgd2hlbiB0aGVyZSBpcyBubyBvdGhlciBiZXR0ZXIgd2F5LCBlLmcuIGJyaWRnaW5nIHdpdGggdGhlXG4gICAqIFwibGVnYWN5XCIgc3lzdGVtcyB0aGF0IGNvbnN1bWUgYW5kIHByb2Nlc3MgY29uZmlnIGluIGEgZGlmZmVyZW50IHdheS5cbiAgICovXG4gIHRvUmF3KCk6IFJlY29yZDxzdHJpbmcsIGFueT47XG59XG4iXX0=