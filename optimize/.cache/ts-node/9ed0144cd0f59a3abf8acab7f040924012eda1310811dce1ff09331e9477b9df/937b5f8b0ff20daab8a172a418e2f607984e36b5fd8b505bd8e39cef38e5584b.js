"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const types_1 = require("../../../../graphql/types");
const constants_1 = require("../constants");
const create_node_request_body_1 = require("./create_node_request_body");
function createPartitionBodies(totalNodes, nodeType, nodeField, nodeOptions) {
    const { sourceConfiguration } = nodeOptions;
    const bodies = [];
    const numberOfPartitions = Math.ceil(totalNodes / constants_1.NODE_REQUEST_PARTITION_SIZE);
    const indices = nodeOptions.metric.type === types_1.InfraMetricType.logRate
        ? sourceConfiguration.logAlias
        : sourceConfiguration.metricAlias;
    lodash_1.times(numberOfPartitions, (partitionId) => {
        const processorOptions = {
            nodeType,
            nodeField,
            nodeOptions,
            numberOfPartitions,
            partitionId,
        };
        bodies.push({
            index: indices,
        });
        bodies.push(create_node_request_body_1.createNodeRequestBody(processorOptions));
    });
    return bodies;
}
exports.createPartitionBodies = createPartitionBodies;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvaW5mcmEvc2VydmVyL2xpYi9hZGFwdGVycy9ub2Rlcy9saWIvY3JlYXRlX3BhcnRpdGlvbl9ib2RpZXMudHMiLCJzb3VyY2VzIjpbIi9ob21lL2FudGhvbnkvZ2l0X3dvcmtzcGFjZXMva2liYW5hL3gtcGFjay9wbHVnaW5zL2luZnJhL3NlcnZlci9saWIvYWRhcHRlcnMvbm9kZXMvbGliL2NyZWF0ZV9wYXJ0aXRpb25fYm9kaWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7OztHQUlHOztBQUVILG1DQUErQjtBQUUvQixxREFBNEQ7QUFPNUQsNENBQTJEO0FBQzNELHlFQUFtRTtBQUVuRSxTQUFnQixxQkFBcUIsQ0FDbkMsVUFBa0IsRUFDbEIsUUFBdUIsRUFDdkIsU0FBaUIsRUFDakIsV0FBb0M7SUFFcEMsTUFBTSxFQUFFLG1CQUFtQixFQUFFLEdBQTRCLFdBQVcsQ0FBQztJQUNyRSxNQUFNLE1BQU0sR0FBeUIsRUFBRSxDQUFDO0lBQ3hDLE1BQU0sa0JBQWtCLEdBQVcsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEdBQUcsdUNBQTJCLENBQUMsQ0FBQztJQUN2RixNQUFNLE9BQU8sR0FDWCxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyx1QkFBZSxDQUFDLE9BQU87UUFDakQsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLFFBQVE7UUFDOUIsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQztJQUN0QyxjQUFLLENBQ0gsa0JBQWtCLEVBQ2xCLENBQUMsV0FBbUIsRUFBUSxFQUFFO1FBQzVCLE1BQU0sZ0JBQWdCLEdBQWdDO1lBQ3BELFFBQVE7WUFDUixTQUFTO1lBQ1QsV0FBVztZQUNYLGtCQUFrQjtZQUNsQixXQUFXO1NBQ1osQ0FBQztRQUNGLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDVixLQUFLLEVBQUUsT0FBTztTQUNmLENBQUMsQ0FBQztRQUNILE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0RBQXFCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELENBQUMsQ0FDRixDQUFDO0lBQ0YsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQTlCRCxzREE4QkMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyB0aW1lcyB9IGZyb20gJ2xvZGFzaCc7XG5cbmltcG9ydCB7IEluZnJhTWV0cmljVHlwZSB9IGZyb20gJy4uLy4uLy4uLy4uL2dyYXBocWwvdHlwZXMnO1xuaW1wb3J0IHtcbiAgSW5mcmFFU01TZWFyY2hCb2R5LFxuICBJbmZyYU5vZGVSZXF1ZXN0T3B0aW9ucyxcbiAgSW5mcmFOb2RlVHlwZSxcbiAgSW5mcmFQcm9jZXNvclJlcXVlc3RPcHRpb25zLFxufSBmcm9tICcuLi9hZGFwdGVyX3R5cGVzJztcbmltcG9ydCB7IE5PREVfUkVRVUVTVF9QQVJUSVRJT05fU0laRSB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBjcmVhdGVOb2RlUmVxdWVzdEJvZHkgfSBmcm9tICcuL2NyZWF0ZV9ub2RlX3JlcXVlc3RfYm9keSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQYXJ0aXRpb25Cb2RpZXMoXG4gIHRvdGFsTm9kZXM6IG51bWJlcixcbiAgbm9kZVR5cGU6IEluZnJhTm9kZVR5cGUsXG4gIG5vZGVGaWVsZDogc3RyaW5nLFxuICBub2RlT3B0aW9uczogSW5mcmFOb2RlUmVxdWVzdE9wdGlvbnNcbik6IEluZnJhRVNNU2VhcmNoQm9keVtdIHtcbiAgY29uc3QgeyBzb3VyY2VDb25maWd1cmF0aW9uIH06IEluZnJhTm9kZVJlcXVlc3RPcHRpb25zID0gbm9kZU9wdGlvbnM7XG4gIGNvbnN0IGJvZGllczogSW5mcmFFU01TZWFyY2hCb2R5W10gPSBbXTtcbiAgY29uc3QgbnVtYmVyT2ZQYXJ0aXRpb25zOiBudW1iZXIgPSBNYXRoLmNlaWwodG90YWxOb2RlcyAvIE5PREVfUkVRVUVTVF9QQVJUSVRJT05fU0laRSk7XG4gIGNvbnN0IGluZGljZXMgPVxuICAgIG5vZGVPcHRpb25zLm1ldHJpYy50eXBlID09PSBJbmZyYU1ldHJpY1R5cGUubG9nUmF0ZVxuICAgICAgPyBzb3VyY2VDb25maWd1cmF0aW9uLmxvZ0FsaWFzXG4gICAgICA6IHNvdXJjZUNvbmZpZ3VyYXRpb24ubWV0cmljQWxpYXM7XG4gIHRpbWVzKFxuICAgIG51bWJlck9mUGFydGl0aW9ucyxcbiAgICAocGFydGl0aW9uSWQ6IG51bWJlcik6IHZvaWQgPT4ge1xuICAgICAgY29uc3QgcHJvY2Vzc29yT3B0aW9uczogSW5mcmFQcm9jZXNvclJlcXVlc3RPcHRpb25zID0ge1xuICAgICAgICBub2RlVHlwZSxcbiAgICAgICAgbm9kZUZpZWxkLFxuICAgICAgICBub2RlT3B0aW9ucyxcbiAgICAgICAgbnVtYmVyT2ZQYXJ0aXRpb25zLFxuICAgICAgICBwYXJ0aXRpb25JZCxcbiAgICAgIH07XG4gICAgICBib2RpZXMucHVzaCh7XG4gICAgICAgIGluZGV4OiBpbmRpY2VzLFxuICAgICAgfSk7XG4gICAgICBib2RpZXMucHVzaChjcmVhdGVOb2RlUmVxdWVzdEJvZHkocHJvY2Vzc29yT3B0aW9ucykpO1xuICAgIH1cbiAgKTtcbiAgcmV0dXJuIGJvZGllcztcbn1cbiJdfQ==