"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("../../../../graphql/types");
const host_cpu_usage_1 = require("./host/host_cpu_usage");
const host_filesystem_1 = require("./host/host_filesystem");
const host_k8s_cpu_cap_1 = require("./host/host_k8s_cpu_cap");
const host_k8s_disk_cap_1 = require("./host/host_k8s_disk_cap");
const host_k8s_memory_cap_1 = require("./host/host_k8s_memory_cap");
const host_k8s_overview_1 = require("./host/host_k8s_overview");
const host_k8s_pod_cap_1 = require("./host/host_k8s_pod_cap");
const host_load_1 = require("./host/host_load");
const host_memory_usage_1 = require("./host/host_memory_usage");
const host_network_traffic_1 = require("./host/host_network_traffic");
const host_system_overview_1 = require("./host/host_system_overview");
const pod_cpu_usage_1 = require("./pod/pod_cpu_usage");
const pod_log_usage_1 = require("./pod/pod_log_usage");
const pod_memory_usage_1 = require("./pod/pod_memory_usage");
const pod_network_traffic_1 = require("./pod/pod_network_traffic");
const pod_overview_1 = require("./pod/pod_overview");
const container_cpu_kernel_1 = require("./container/container_cpu_kernel");
const container_cpu_usage_1 = require("./container/container_cpu_usage");
const container_disk_io_bytes_1 = require("./container/container_disk_io_bytes");
const container_diskio_ops_1 = require("./container/container_diskio_ops");
const container_memory_1 = require("./container/container_memory");
const container_network_traffic_1 = require("./container/container_network_traffic");
const container_overview_1 = require("./container/container_overview");
const nginx_active_connections_1 = require("./nginx/nginx_active_connections");
const nginx_hits_1 = require("./nginx/nginx_hits");
const nginx_request_rate_1 = require("./nginx/nginx_request_rate");
const nginx_requests_per_connection_1 = require("./nginx/nginx_requests_per_connection");
exports.metricModels = {
    [types_1.InfraMetric.hostSystemOverview]: host_system_overview_1.hostSystemOverview,
    [types_1.InfraMetric.hostCpuUsage]: host_cpu_usage_1.hostCpuUsage,
    [types_1.InfraMetric.hostFilesystem]: host_filesystem_1.hostFilesystem,
    [types_1.InfraMetric.hostK8sOverview]: host_k8s_overview_1.hostK8sOverview,
    [types_1.InfraMetric.hostK8sCpuCap]: host_k8s_cpu_cap_1.hostK8sCpuCap,
    [types_1.InfraMetric.hostK8sDiskCap]: host_k8s_disk_cap_1.hostK8sDiskCap,
    [types_1.InfraMetric.hostK8sMemoryCap]: host_k8s_memory_cap_1.hostK8sMemoryCap,
    [types_1.InfraMetric.hostK8sPodCap]: host_k8s_pod_cap_1.hostK8sPodCap,
    [types_1.InfraMetric.hostLoad]: host_load_1.hostLoad,
    [types_1.InfraMetric.hostMemoryUsage]: host_memory_usage_1.hostMemoryUsage,
    [types_1.InfraMetric.hostNetworkTraffic]: host_network_traffic_1.hostNetworkTraffic,
    [types_1.InfraMetric.podOverview]: pod_overview_1.podOverview,
    [types_1.InfraMetric.podCpuUsage]: pod_cpu_usage_1.podCpuUsage,
    [types_1.InfraMetric.podMemoryUsage]: pod_memory_usage_1.podMemoryUsage,
    [types_1.InfraMetric.podLogUsage]: pod_log_usage_1.podLogUsage,
    [types_1.InfraMetric.podNetworkTraffic]: pod_network_traffic_1.podNetworkTraffic,
    [types_1.InfraMetric.containerCpuKernel]: container_cpu_kernel_1.containerCpuKernel,
    [types_1.InfraMetric.containerCpuUsage]: container_cpu_usage_1.containerCpuUsage,
    [types_1.InfraMetric.containerDiskIOBytes]: container_disk_io_bytes_1.containerDiskIOBytes,
    [types_1.InfraMetric.containerDiskIOOps]: container_diskio_ops_1.containerDiskIOOps,
    [types_1.InfraMetric.containerNetworkTraffic]: container_network_traffic_1.containerNetworkTraffic,
    [types_1.InfraMetric.containerMemory]: container_memory_1.containerMemory,
    [types_1.InfraMetric.containerOverview]: container_overview_1.containerOverview,
    [types_1.InfraMetric.nginxHits]: nginx_hits_1.nginxHits,
    [types_1.InfraMetric.nginxRequestRate]: nginx_request_rate_1.nginxRequestRate,
    [types_1.InfraMetric.nginxActiveConnections]: nginx_active_connections_1.nginxActiveConnections,
    [types_1.InfraMetric.nginxRequestsPerConnection]: nginx_requests_per_connection_1.nginxRequestsPerConnection,
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvaW5mcmEvc2VydmVyL2xpYi9hZGFwdGVycy9tZXRyaWNzL21vZGVscy9pbmRleC50cyIsInNvdXJjZXMiOlsiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvaW5mcmEvc2VydmVyL2xpYi9hZGFwdGVycy9tZXRyaWNzL21vZGVscy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7R0FJRzs7QUFFSCxxREFBd0Q7QUFHeEQsMERBQXFEO0FBQ3JELDREQUF3RDtBQUN4RCw4REFBd0Q7QUFDeEQsZ0VBQTBEO0FBQzFELG9FQUE4RDtBQUM5RCxnRUFBMkQ7QUFDM0QsOERBQXdEO0FBQ3hELGdEQUE0QztBQUM1QyxnRUFBMkQ7QUFDM0Qsc0VBQWlFO0FBQ2pFLHNFQUFpRTtBQUVqRSx1REFBa0Q7QUFDbEQsdURBQWtEO0FBQ2xELDZEQUF3RDtBQUN4RCxtRUFBOEQ7QUFDOUQscURBQWlEO0FBRWpELDJFQUFzRTtBQUN0RSx5RUFBb0U7QUFDcEUsaUZBQTJFO0FBQzNFLDJFQUFzRTtBQUN0RSxtRUFBK0Q7QUFDL0QscUZBQWdGO0FBQ2hGLHVFQUFtRTtBQUNuRSwrRUFBMEU7QUFDMUUsbURBQStDO0FBQy9DLG1FQUE4RDtBQUM5RCx5RkFBbUY7QUFNdEUsUUFBQSxZQUFZLEdBQXNCO0lBQzdDLENBQUMsbUJBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLHlDQUFrQjtJQUNwRCxDQUFDLG1CQUFXLENBQUMsWUFBWSxDQUFDLEVBQUUsNkJBQVk7SUFDeEMsQ0FBQyxtQkFBVyxDQUFDLGNBQWMsQ0FBQyxFQUFFLGdDQUFjO0lBQzVDLENBQUMsbUJBQVcsQ0FBQyxlQUFlLENBQUMsRUFBRSxtQ0FBZTtJQUM5QyxDQUFDLG1CQUFXLENBQUMsYUFBYSxDQUFDLEVBQUUsZ0NBQWE7SUFDMUMsQ0FBQyxtQkFBVyxDQUFDLGNBQWMsQ0FBQyxFQUFFLGtDQUFjO0lBQzVDLENBQUMsbUJBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLHNDQUFnQjtJQUNoRCxDQUFDLG1CQUFXLENBQUMsYUFBYSxDQUFDLEVBQUUsZ0NBQWE7SUFDMUMsQ0FBQyxtQkFBVyxDQUFDLFFBQVEsQ0FBQyxFQUFFLG9CQUFRO0lBQ2hDLENBQUMsbUJBQVcsQ0FBQyxlQUFlLENBQUMsRUFBRSxtQ0FBZTtJQUM5QyxDQUFDLG1CQUFXLENBQUMsa0JBQWtCLENBQUMsRUFBRSx5Q0FBa0I7SUFFcEQsQ0FBQyxtQkFBVyxDQUFDLFdBQVcsQ0FBQyxFQUFFLDBCQUFXO0lBQ3RDLENBQUMsbUJBQVcsQ0FBQyxXQUFXLENBQUMsRUFBRSwyQkFBVztJQUN0QyxDQUFDLG1CQUFXLENBQUMsY0FBYyxDQUFDLEVBQUUsaUNBQWM7SUFDNUMsQ0FBQyxtQkFBVyxDQUFDLFdBQVcsQ0FBQyxFQUFFLDJCQUFXO0lBQ3RDLENBQUMsbUJBQVcsQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLHVDQUFpQjtJQUVsRCxDQUFDLG1CQUFXLENBQUMsa0JBQWtCLENBQUMsRUFBRSx5Q0FBa0I7SUFDcEQsQ0FBQyxtQkFBVyxDQUFDLGlCQUFpQixDQUFDLEVBQUUsdUNBQWlCO0lBQ2xELENBQUMsbUJBQVcsQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFLDhDQUFvQjtJQUN4RCxDQUFDLG1CQUFXLENBQUMsa0JBQWtCLENBQUMsRUFBRSx5Q0FBa0I7SUFDcEQsQ0FBQyxtQkFBVyxDQUFDLHVCQUF1QixDQUFDLEVBQUUsbURBQXVCO0lBQzlELENBQUMsbUJBQVcsQ0FBQyxlQUFlLENBQUMsRUFBRSxrQ0FBZTtJQUM5QyxDQUFDLG1CQUFXLENBQUMsaUJBQWlCLENBQUMsRUFBRSxzQ0FBaUI7SUFDbEQsQ0FBQyxtQkFBVyxDQUFDLFNBQVMsQ0FBQyxFQUFFLHNCQUFTO0lBQ2xDLENBQUMsbUJBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLHFDQUFnQjtJQUNoRCxDQUFDLG1CQUFXLENBQUMsc0JBQXNCLENBQUMsRUFBRSxpREFBc0I7SUFDNUQsQ0FBQyxtQkFBVyxDQUFDLDBCQUEwQixDQUFDLEVBQUUsMERBQTBCO0NBQ3JFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBJbmZyYU1ldHJpYyB9IGZyb20gJy4uLy4uLy4uLy4uL2dyYXBocWwvdHlwZXMnO1xuaW1wb3J0IHsgSW5mcmFNZXRyaWNNb2RlbENyZWF0b3IgfSBmcm9tICcuLi9hZGFwdGVyX3R5cGVzJztcblxuaW1wb3J0IHsgaG9zdENwdVVzYWdlIH0gZnJvbSAnLi9ob3N0L2hvc3RfY3B1X3VzYWdlJztcbmltcG9ydCB7IGhvc3RGaWxlc3lzdGVtIH0gZnJvbSAnLi9ob3N0L2hvc3RfZmlsZXN5c3RlbSc7XG5pbXBvcnQgeyBob3N0SzhzQ3B1Q2FwIH0gZnJvbSAnLi9ob3N0L2hvc3RfazhzX2NwdV9jYXAnO1xuaW1wb3J0IHsgaG9zdEs4c0Rpc2tDYXAgfSBmcm9tICcuL2hvc3QvaG9zdF9rOHNfZGlza19jYXAnO1xuaW1wb3J0IHsgaG9zdEs4c01lbW9yeUNhcCB9IGZyb20gJy4vaG9zdC9ob3N0X2s4c19tZW1vcnlfY2FwJztcbmltcG9ydCB7IGhvc3RLOHNPdmVydmlldyB9IGZyb20gJy4vaG9zdC9ob3N0X2s4c19vdmVydmlldyc7XG5pbXBvcnQgeyBob3N0SzhzUG9kQ2FwIH0gZnJvbSAnLi9ob3N0L2hvc3RfazhzX3BvZF9jYXAnO1xuaW1wb3J0IHsgaG9zdExvYWQgfSBmcm9tICcuL2hvc3QvaG9zdF9sb2FkJztcbmltcG9ydCB7IGhvc3RNZW1vcnlVc2FnZSB9IGZyb20gJy4vaG9zdC9ob3N0X21lbW9yeV91c2FnZSc7XG5pbXBvcnQgeyBob3N0TmV0d29ya1RyYWZmaWMgfSBmcm9tICcuL2hvc3QvaG9zdF9uZXR3b3JrX3RyYWZmaWMnO1xuaW1wb3J0IHsgaG9zdFN5c3RlbU92ZXJ2aWV3IH0gZnJvbSAnLi9ob3N0L2hvc3Rfc3lzdGVtX292ZXJ2aWV3JztcblxuaW1wb3J0IHsgcG9kQ3B1VXNhZ2UgfSBmcm9tICcuL3BvZC9wb2RfY3B1X3VzYWdlJztcbmltcG9ydCB7IHBvZExvZ1VzYWdlIH0gZnJvbSAnLi9wb2QvcG9kX2xvZ191c2FnZSc7XG5pbXBvcnQgeyBwb2RNZW1vcnlVc2FnZSB9IGZyb20gJy4vcG9kL3BvZF9tZW1vcnlfdXNhZ2UnO1xuaW1wb3J0IHsgcG9kTmV0d29ya1RyYWZmaWMgfSBmcm9tICcuL3BvZC9wb2RfbmV0d29ya190cmFmZmljJztcbmltcG9ydCB7IHBvZE92ZXJ2aWV3IH0gZnJvbSAnLi9wb2QvcG9kX292ZXJ2aWV3JztcblxuaW1wb3J0IHsgY29udGFpbmVyQ3B1S2VybmVsIH0gZnJvbSAnLi9jb250YWluZXIvY29udGFpbmVyX2NwdV9rZXJuZWwnO1xuaW1wb3J0IHsgY29udGFpbmVyQ3B1VXNhZ2UgfSBmcm9tICcuL2NvbnRhaW5lci9jb250YWluZXJfY3B1X3VzYWdlJztcbmltcG9ydCB7IGNvbnRhaW5lckRpc2tJT0J5dGVzIH0gZnJvbSAnLi9jb250YWluZXIvY29udGFpbmVyX2Rpc2tfaW9fYnl0ZXMnO1xuaW1wb3J0IHsgY29udGFpbmVyRGlza0lPT3BzIH0gZnJvbSAnLi9jb250YWluZXIvY29udGFpbmVyX2Rpc2tpb19vcHMnO1xuaW1wb3J0IHsgY29udGFpbmVyTWVtb3J5IH0gZnJvbSAnLi9jb250YWluZXIvY29udGFpbmVyX21lbW9yeSc7XG5pbXBvcnQgeyBjb250YWluZXJOZXR3b3JrVHJhZmZpYyB9IGZyb20gJy4vY29udGFpbmVyL2NvbnRhaW5lcl9uZXR3b3JrX3RyYWZmaWMnO1xuaW1wb3J0IHsgY29udGFpbmVyT3ZlcnZpZXcgfSBmcm9tICcuL2NvbnRhaW5lci9jb250YWluZXJfb3ZlcnZpZXcnO1xuaW1wb3J0IHsgbmdpbnhBY3RpdmVDb25uZWN0aW9ucyB9IGZyb20gJy4vbmdpbngvbmdpbnhfYWN0aXZlX2Nvbm5lY3Rpb25zJztcbmltcG9ydCB7IG5naW54SGl0cyB9IGZyb20gJy4vbmdpbngvbmdpbnhfaGl0cyc7XG5pbXBvcnQgeyBuZ2lueFJlcXVlc3RSYXRlIH0gZnJvbSAnLi9uZ2lueC9uZ2lueF9yZXF1ZXN0X3JhdGUnO1xuaW1wb3J0IHsgbmdpbnhSZXF1ZXN0c1BlckNvbm5lY3Rpb24gfSBmcm9tICcuL25naW54L25naW54X3JlcXVlc3RzX3Blcl9jb25uZWN0aW9uJztcblxuaW50ZXJmYWNlIEluZnJhTWV0cmljTW9kZWxzIHtcbiAgW2tleTogc3RyaW5nXTogSW5mcmFNZXRyaWNNb2RlbENyZWF0b3I7XG59XG5cbmV4cG9ydCBjb25zdCBtZXRyaWNNb2RlbHM6IEluZnJhTWV0cmljTW9kZWxzID0ge1xuICBbSW5mcmFNZXRyaWMuaG9zdFN5c3RlbU92ZXJ2aWV3XTogaG9zdFN5c3RlbU92ZXJ2aWV3LFxuICBbSW5mcmFNZXRyaWMuaG9zdENwdVVzYWdlXTogaG9zdENwdVVzYWdlLFxuICBbSW5mcmFNZXRyaWMuaG9zdEZpbGVzeXN0ZW1dOiBob3N0RmlsZXN5c3RlbSxcbiAgW0luZnJhTWV0cmljLmhvc3RLOHNPdmVydmlld106IGhvc3RLOHNPdmVydmlldyxcbiAgW0luZnJhTWV0cmljLmhvc3RLOHNDcHVDYXBdOiBob3N0SzhzQ3B1Q2FwLFxuICBbSW5mcmFNZXRyaWMuaG9zdEs4c0Rpc2tDYXBdOiBob3N0SzhzRGlza0NhcCxcbiAgW0luZnJhTWV0cmljLmhvc3RLOHNNZW1vcnlDYXBdOiBob3N0SzhzTWVtb3J5Q2FwLFxuICBbSW5mcmFNZXRyaWMuaG9zdEs4c1BvZENhcF06IGhvc3RLOHNQb2RDYXAsXG4gIFtJbmZyYU1ldHJpYy5ob3N0TG9hZF06IGhvc3RMb2FkLFxuICBbSW5mcmFNZXRyaWMuaG9zdE1lbW9yeVVzYWdlXTogaG9zdE1lbW9yeVVzYWdlLFxuICBbSW5mcmFNZXRyaWMuaG9zdE5ldHdvcmtUcmFmZmljXTogaG9zdE5ldHdvcmtUcmFmZmljLFxuXG4gIFtJbmZyYU1ldHJpYy5wb2RPdmVydmlld106IHBvZE92ZXJ2aWV3LFxuICBbSW5mcmFNZXRyaWMucG9kQ3B1VXNhZ2VdOiBwb2RDcHVVc2FnZSxcbiAgW0luZnJhTWV0cmljLnBvZE1lbW9yeVVzYWdlXTogcG9kTWVtb3J5VXNhZ2UsXG4gIFtJbmZyYU1ldHJpYy5wb2RMb2dVc2FnZV06IHBvZExvZ1VzYWdlLFxuICBbSW5mcmFNZXRyaWMucG9kTmV0d29ya1RyYWZmaWNdOiBwb2ROZXR3b3JrVHJhZmZpYyxcblxuICBbSW5mcmFNZXRyaWMuY29udGFpbmVyQ3B1S2VybmVsXTogY29udGFpbmVyQ3B1S2VybmVsLFxuICBbSW5mcmFNZXRyaWMuY29udGFpbmVyQ3B1VXNhZ2VdOiBjb250YWluZXJDcHVVc2FnZSxcbiAgW0luZnJhTWV0cmljLmNvbnRhaW5lckRpc2tJT0J5dGVzXTogY29udGFpbmVyRGlza0lPQnl0ZXMsXG4gIFtJbmZyYU1ldHJpYy5jb250YWluZXJEaXNrSU9PcHNdOiBjb250YWluZXJEaXNrSU9PcHMsXG4gIFtJbmZyYU1ldHJpYy5jb250YWluZXJOZXR3b3JrVHJhZmZpY106IGNvbnRhaW5lck5ldHdvcmtUcmFmZmljLFxuICBbSW5mcmFNZXRyaWMuY29udGFpbmVyTWVtb3J5XTogY29udGFpbmVyTWVtb3J5LFxuICBbSW5mcmFNZXRyaWMuY29udGFpbmVyT3ZlcnZpZXddOiBjb250YWluZXJPdmVydmlldyxcbiAgW0luZnJhTWV0cmljLm5naW54SGl0c106IG5naW54SGl0cyxcbiAgW0luZnJhTWV0cmljLm5naW54UmVxdWVzdFJhdGVdOiBuZ2lueFJlcXVlc3RSYXRlLFxuICBbSW5mcmFNZXRyaWMubmdpbnhBY3RpdmVDb25uZWN0aW9uc106IG5naW54QWN0aXZlQ29ubmVjdGlvbnMsXG4gIFtJbmZyYU1ldHJpYy5uZ2lueFJlcXVlc3RzUGVyQ29ubmVjdGlvbl06IG5naW54UmVxdWVzdHNQZXJDb25uZWN0aW9uLFxufTtcbiJdfQ==