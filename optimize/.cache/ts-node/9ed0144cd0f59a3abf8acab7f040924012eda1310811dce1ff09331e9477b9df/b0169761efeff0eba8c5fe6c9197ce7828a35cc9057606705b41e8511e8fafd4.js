"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const constants_1 = require("x-pack/plugins/beats_management/common/constants");
const plugin_1 = require("x-pack/plugins/beats_management/common/constants/plugin");
const elasticsearch_beats_adapter_1 = require("../adapters/beats/elasticsearch_beats_adapter");
const elasticsearch_configuration_block_adapter_1 = require("../adapters/configuration_blocks/elasticsearch_configuration_block_adapter");
const kibana_database_adapter_1 = require("../adapters/database/kibana_database_adapter");
const elasticsearch_beat_events_adapter_1 = require("../adapters/events/elasticsearch_beat_events_adapter");
const kibana_framework_adapter_1 = require("../adapters/framework/kibana_framework_adapter");
const elasticsearch_tags_adapter_1 = require("../adapters/tags/elasticsearch_tags_adapter");
const elasticsearch_tokens_adapter_1 = require("../adapters/tokens/elasticsearch_tokens_adapter");
const beat_events_1 = require("../beat_events");
const beats_1 = require("../beats");
const configuration_blocks_1 = require("../configuration_blocks");
const tags_1 = require("../tags");
const tokens_1 = require("../tokens");
const framework_1 = require("./../framework");
function compose(server) {
    const framework = new framework_1.BackendFrameworkLib(new kibana_framework_adapter_1.KibanaBackendFrameworkAdapter(lodash_1.camelCase(constants_1.PLUGIN.ID), server, plugin_1.CONFIG_PREFIX));
    const database = new kibana_database_adapter_1.KibanaDatabaseAdapter(server.plugins.elasticsearch);
    const beatsAdapter = new elasticsearch_beats_adapter_1.ElasticsearchBeatsAdapter(database);
    const configAdapter = new elasticsearch_configuration_block_adapter_1.ElasticsearchConfigurationBlockAdapter(database);
    const tags = new tags_1.CMTagsDomain(new elasticsearch_tags_adapter_1.ElasticsearchTagsAdapter(database), configAdapter, beatsAdapter);
    const configurationBlocks = new configuration_blocks_1.ConfigurationBlocksLib(configAdapter, tags);
    const tokens = new tokens_1.CMTokensDomain(new elasticsearch_tokens_adapter_1.ElasticsearchTokensAdapter(database), {
        framework,
    });
    const beats = new beats_1.CMBeatsDomain(beatsAdapter, {
        tags,
        tokens,
        framework,
    });
    const beatEvents = new beat_events_1.BeatEventsLib(new elasticsearch_beat_events_adapter_1.ElasticsearchBeatEventsAdapter(database), beats);
    const libs = {
        beatEvents,
        framework,
        database,
        beats,
        tags,
        tokens,
        configurationBlocks,
    };
    return libs;
}
exports.compose = compose;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvYmVhdHNfbWFuYWdlbWVudC9zZXJ2ZXIvbGliL2NvbXBvc2Uva2liYW5hLnRzIiwic291cmNlcyI6WyIvaG9tZS9hbnRob255L2dpdF93b3Jrc3BhY2VzL2tpYmFuYS94LXBhY2svcGx1Z2lucy9iZWF0c19tYW5hZ2VtZW50L3NlcnZlci9saWIvY29tcG9zZS9raWJhbmEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7O0dBSUc7O0FBRUgsbUNBQW1DO0FBQ25DLGdGQUEwRTtBQUMxRSxvRkFBd0Y7QUFDeEYsK0ZBQTBGO0FBQzFGLDBJQUFvSTtBQUVwSSwwRkFBcUY7QUFDckYsNEdBQXNHO0FBRXRHLDZGQUErRjtBQUMvRiw0RkFBdUY7QUFDdkYsa0dBQTZGO0FBQzdGLGdEQUErQztBQUMvQyxvQ0FBeUM7QUFDekMsa0VBQWlFO0FBQ2pFLGtDQUF1QztBQUN2QyxzQ0FBMkM7QUFFM0MsOENBQXFEO0FBRXJELFNBQWdCLE9BQU8sQ0FBQyxNQUEwQjtJQUNoRCxNQUFNLFNBQVMsR0FBRyxJQUFJLCtCQUFtQixDQUN2QyxJQUFJLHdEQUE2QixDQUFDLGtCQUFTLENBQUMsa0JBQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsc0JBQWEsQ0FBQyxDQUMvRSxDQUFDO0lBQ0YsTUFBTSxRQUFRLEdBQUcsSUFBSSwrQ0FBcUIsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQW9DLENBQUMsQ0FBQztJQUNoRyxNQUFNLFlBQVksR0FBRyxJQUFJLHVEQUF5QixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdELE1BQU0sYUFBYSxHQUFHLElBQUksa0ZBQXNDLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFM0UsTUFBTSxJQUFJLEdBQUcsSUFBSSxtQkFBWSxDQUMzQixJQUFJLHFEQUF3QixDQUFDLFFBQVEsQ0FBQyxFQUN0QyxhQUFhLEVBQ2IsWUFBWSxDQUNiLENBQUM7SUFDRixNQUFNLG1CQUFtQixHQUFHLElBQUksNkNBQXNCLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzVFLE1BQU0sTUFBTSxHQUFHLElBQUksdUJBQWMsQ0FBQyxJQUFJLHlEQUEwQixDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQzFFLFNBQVM7S0FDVixDQUFDLENBQUM7SUFDSCxNQUFNLEtBQUssR0FBRyxJQUFJLHFCQUFhLENBQUMsWUFBWSxFQUFFO1FBQzVDLElBQUk7UUFDSixNQUFNO1FBQ04sU0FBUztLQUNWLENBQUMsQ0FBQztJQUNILE1BQU0sVUFBVSxHQUFHLElBQUksMkJBQWEsQ0FBQyxJQUFJLGtFQUE4QixDQUFDLFFBQVEsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRTFGLE1BQU0sSUFBSSxHQUFpQjtRQUN6QixVQUFVO1FBQ1YsU0FBUztRQUNULFFBQVE7UUFDUixLQUFLO1FBQ0wsSUFBSTtRQUNKLE1BQU07UUFDTixtQkFBbUI7S0FDcEIsQ0FBQztJQUVGLE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQW5DRCwwQkFtQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBjYW1lbENhc2UgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgUExVR0lOIH0gZnJvbSAneC1wYWNrL3BsdWdpbnMvYmVhdHNfbWFuYWdlbWVudC9jb21tb24vY29uc3RhbnRzJztcbmltcG9ydCB7IENPTkZJR19QUkVGSVggfSBmcm9tICd4LXBhY2svcGx1Z2lucy9iZWF0c19tYW5hZ2VtZW50L2NvbW1vbi9jb25zdGFudHMvcGx1Z2luJztcbmltcG9ydCB7IEVsYXN0aWNzZWFyY2hCZWF0c0FkYXB0ZXIgfSBmcm9tICcuLi9hZGFwdGVycy9iZWF0cy9lbGFzdGljc2VhcmNoX2JlYXRzX2FkYXB0ZXInO1xuaW1wb3J0IHsgRWxhc3RpY3NlYXJjaENvbmZpZ3VyYXRpb25CbG9ja0FkYXB0ZXIgfSBmcm9tICcuLi9hZGFwdGVycy9jb25maWd1cmF0aW9uX2Jsb2Nrcy9lbGFzdGljc2VhcmNoX2NvbmZpZ3VyYXRpb25fYmxvY2tfYWRhcHRlcic7XG5pbXBvcnQgeyBEYXRhYmFzZUtibkVTUGx1Z2luIH0gZnJvbSAnLi4vYWRhcHRlcnMvZGF0YWJhc2UvYWRhcHRlcl90eXBlcyc7XG5pbXBvcnQgeyBLaWJhbmFEYXRhYmFzZUFkYXB0ZXIgfSBmcm9tICcuLi9hZGFwdGVycy9kYXRhYmFzZS9raWJhbmFfZGF0YWJhc2VfYWRhcHRlcic7XG5pbXBvcnQgeyBFbGFzdGljc2VhcmNoQmVhdEV2ZW50c0FkYXB0ZXIgfSBmcm9tICcuLi9hZGFwdGVycy9ldmVudHMvZWxhc3RpY3NlYXJjaF9iZWF0X2V2ZW50c19hZGFwdGVyJztcbmltcG9ydCB7IEtpYmFuYUxlZ2FjeVNlcnZlciB9IGZyb20gJy4uL2FkYXB0ZXJzL2ZyYW1ld29yay9hZGFwdGVyX3R5cGVzJztcbmltcG9ydCB7IEtpYmFuYUJhY2tlbmRGcmFtZXdvcmtBZGFwdGVyIH0gZnJvbSAnLi4vYWRhcHRlcnMvZnJhbWV3b3JrL2tpYmFuYV9mcmFtZXdvcmtfYWRhcHRlcic7XG5pbXBvcnQgeyBFbGFzdGljc2VhcmNoVGFnc0FkYXB0ZXIgfSBmcm9tICcuLi9hZGFwdGVycy90YWdzL2VsYXN0aWNzZWFyY2hfdGFnc19hZGFwdGVyJztcbmltcG9ydCB7IEVsYXN0aWNzZWFyY2hUb2tlbnNBZGFwdGVyIH0gZnJvbSAnLi4vYWRhcHRlcnMvdG9rZW5zL2VsYXN0aWNzZWFyY2hfdG9rZW5zX2FkYXB0ZXInO1xuaW1wb3J0IHsgQmVhdEV2ZW50c0xpYiB9IGZyb20gJy4uL2JlYXRfZXZlbnRzJztcbmltcG9ydCB7IENNQmVhdHNEb21haW4gfSBmcm9tICcuLi9iZWF0cyc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uQmxvY2tzTGliIH0gZnJvbSAnLi4vY29uZmlndXJhdGlvbl9ibG9ja3MnO1xuaW1wb3J0IHsgQ01UYWdzRG9tYWluIH0gZnJvbSAnLi4vdGFncyc7XG5pbXBvcnQgeyBDTVRva2Vuc0RvbWFpbiB9IGZyb20gJy4uL3Rva2Vucyc7XG5pbXBvcnQgeyBDTVNlcnZlckxpYnMgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBCYWNrZW5kRnJhbWV3b3JrTGliIH0gZnJvbSAnLi8uLi9mcmFtZXdvcmsnO1xuXG5leHBvcnQgZnVuY3Rpb24gY29tcG9zZShzZXJ2ZXI6IEtpYmFuYUxlZ2FjeVNlcnZlcik6IENNU2VydmVyTGlicyB7XG4gIGNvbnN0IGZyYW1ld29yayA9IG5ldyBCYWNrZW5kRnJhbWV3b3JrTGliKFxuICAgIG5ldyBLaWJhbmFCYWNrZW5kRnJhbWV3b3JrQWRhcHRlcihjYW1lbENhc2UoUExVR0lOLklEKSwgc2VydmVyLCBDT05GSUdfUFJFRklYKVxuICApO1xuICBjb25zdCBkYXRhYmFzZSA9IG5ldyBLaWJhbmFEYXRhYmFzZUFkYXB0ZXIoc2VydmVyLnBsdWdpbnMuZWxhc3RpY3NlYXJjaCBhcyBEYXRhYmFzZUtibkVTUGx1Z2luKTtcbiAgY29uc3QgYmVhdHNBZGFwdGVyID0gbmV3IEVsYXN0aWNzZWFyY2hCZWF0c0FkYXB0ZXIoZGF0YWJhc2UpO1xuICBjb25zdCBjb25maWdBZGFwdGVyID0gbmV3IEVsYXN0aWNzZWFyY2hDb25maWd1cmF0aW9uQmxvY2tBZGFwdGVyKGRhdGFiYXNlKTtcblxuICBjb25zdCB0YWdzID0gbmV3IENNVGFnc0RvbWFpbihcbiAgICBuZXcgRWxhc3RpY3NlYXJjaFRhZ3NBZGFwdGVyKGRhdGFiYXNlKSxcbiAgICBjb25maWdBZGFwdGVyLFxuICAgIGJlYXRzQWRhcHRlclxuICApO1xuICBjb25zdCBjb25maWd1cmF0aW9uQmxvY2tzID0gbmV3IENvbmZpZ3VyYXRpb25CbG9ja3NMaWIoY29uZmlnQWRhcHRlciwgdGFncyk7XG4gIGNvbnN0IHRva2VucyA9IG5ldyBDTVRva2Vuc0RvbWFpbihuZXcgRWxhc3RpY3NlYXJjaFRva2Vuc0FkYXB0ZXIoZGF0YWJhc2UpLCB7XG4gICAgZnJhbWV3b3JrLFxuICB9KTtcbiAgY29uc3QgYmVhdHMgPSBuZXcgQ01CZWF0c0RvbWFpbihiZWF0c0FkYXB0ZXIsIHtcbiAgICB0YWdzLFxuICAgIHRva2VucyxcbiAgICBmcmFtZXdvcmssXG4gIH0pO1xuICBjb25zdCBiZWF0RXZlbnRzID0gbmV3IEJlYXRFdmVudHNMaWIobmV3IEVsYXN0aWNzZWFyY2hCZWF0RXZlbnRzQWRhcHRlcihkYXRhYmFzZSksIGJlYXRzKTtcblxuICBjb25zdCBsaWJzOiBDTVNlcnZlckxpYnMgPSB7XG4gICAgYmVhdEV2ZW50cyxcbiAgICBmcmFtZXdvcmssXG4gICAgZGF0YWJhc2UsXG4gICAgYmVhdHMsXG4gICAgdGFncyxcbiAgICB0b2tlbnMsXG4gICAgY29uZmlndXJhdGlvbkJsb2NrcyxcbiAgfTtcblxuICByZXR1cm4gbGlicztcbn1cbiJdfQ==