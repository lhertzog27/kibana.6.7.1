"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const intervalUnits = ['y', 'M', 'w', 'd', 'h', 'm', 's', 'ms'];
const INTERVAL_STRING_RE = new RegExp('^([0-9\\.]*)\\s*(' + intervalUnits.join('|') + ')$');
const units = {
    ms: 0.001,
    s: 1,
    m: 60,
    h: 3600,
    d: 86400,
    w: 86400 * 7,
    M: 86400 * 30,
    y: 86400 * 356,
};
exports.getBucketSizeInSeconds = (interval) => {
    const matches = interval.match(INTERVAL_STRING_RE);
    if (matches) {
        return parseFloat(matches[1]) * units[matches[2]];
    }
    throw new Error('Invalid interval string format.');
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvaW5mcmEvc2VydmVyL2xpYi9hZGFwdGVycy9ub2Rlcy9saWIvZ2V0X2J1Y2tldF9zaXplX2luX3NlY29uZHMudHMiLCJzb3VyY2VzIjpbIi9ob21lL2FudGhvbnkvZ2l0X3dvcmtzcGFjZXMva2liYW5hL3gtcGFjay9wbHVnaW5zL2luZnJhL3NlcnZlci9saWIvYWRhcHRlcnMvbm9kZXMvbGliL2dldF9idWNrZXRfc2l6ZV9pbl9zZWNvbmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7OztHQUlHOztBQUVILE1BQU0sYUFBYSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2hFLE1BQU0sa0JBQWtCLEdBQUcsSUFBSSxNQUFNLENBQUMsbUJBQW1CLEdBQUcsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztBQU01RixNQUFNLEtBQUssR0FBbUI7SUFDNUIsRUFBRSxFQUFFLEtBQUs7SUFDVCxDQUFDLEVBQUUsQ0FBQztJQUNKLENBQUMsRUFBRSxFQUFFO0lBQ0wsQ0FBQyxFQUFFLElBQUk7SUFDUCxDQUFDLEVBQUUsS0FBSztJQUNSLENBQUMsRUFBRSxLQUFLLEdBQUcsQ0FBQztJQUNaLENBQUMsRUFBRSxLQUFLLEdBQUcsRUFBRTtJQUNiLENBQUMsRUFBRSxLQUFLLEdBQUcsR0FBRztDQUNmLENBQUM7QUFFVyxRQUFBLHNCQUFzQixHQUFHLENBQUMsUUFBZ0IsRUFBVSxFQUFFO0lBQ2pFLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUNuRCxJQUFJLE9BQU8sRUFBRTtRQUNYLE9BQU8sVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNuRDtJQUNELE1BQU0sSUFBSSxLQUFLLENBQUMsaUNBQWlDLENBQUMsQ0FBQztBQUNyRCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS5cbiAqL1xuXG5jb25zdCBpbnRlcnZhbFVuaXRzID0gWyd5JywgJ00nLCAndycsICdkJywgJ2gnLCAnbScsICdzJywgJ21zJ107XG5jb25zdCBJTlRFUlZBTF9TVFJJTkdfUkUgPSBuZXcgUmVnRXhwKCdeKFswLTlcXFxcLl0qKVxcXFxzKignICsgaW50ZXJ2YWxVbml0cy5qb2luKCd8JykgKyAnKSQnKTtcblxuaW50ZXJmYWNlIFVuaXRzVG9TZWNvbmRzIHtcbiAgW3VuaXQ6IHN0cmluZ106IG51bWJlcjtcbn1cblxuY29uc3QgdW5pdHM6IFVuaXRzVG9TZWNvbmRzID0ge1xuICBtczogMC4wMDEsXG4gIHM6IDEsXG4gIG06IDYwLFxuICBoOiAzNjAwLFxuICBkOiA4NjQwMCxcbiAgdzogODY0MDAgKiA3LFxuICBNOiA4NjQwMCAqIDMwLFxuICB5OiA4NjQwMCAqIDM1Nixcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRCdWNrZXRTaXplSW5TZWNvbmRzID0gKGludGVydmFsOiBzdHJpbmcpOiBudW1iZXIgPT4ge1xuICBjb25zdCBtYXRjaGVzID0gaW50ZXJ2YWwubWF0Y2goSU5URVJWQUxfU1RSSU5HX1JFKTtcbiAgaWYgKG1hdGNoZXMpIHtcbiAgICByZXR1cm4gcGFyc2VGbG9hdChtYXRjaGVzWzFdKSAqIHVuaXRzW21hdGNoZXNbMl1dO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBpbnRlcnZhbCBzdHJpbmcgZm9ybWF0LicpO1xufTtcbiJdfQ==