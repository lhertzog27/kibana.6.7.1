"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const t = tslib_1.__importStar(require("io-ts"));
exports.internalAuthData = Symbol('internalAuthData');
exports.internalUser = {
    kind: 'internal',
};
exports.RuntimeFrameworkInfo = t.interface({
    kibana: t.type({
        version: t.string,
    }),
    license: t.type({
        type: t.union(['oss', 'trial', 'standard', 'basic', 'gold', 'platinum'].map(s => t.literal(s))),
        expired: t.boolean,
        expiry_date_in_millis: t.number,
    }),
    security: t.type({
        enabled: t.boolean,
        available: t.boolean,
    }),
    watcher: t.type({
        enabled: t.boolean,
        available: t.boolean,
    }),
}, 'FrameworkInfo');
exports.RuntimeKibanaServerRequest = t.interface({
    params: t.object,
    payload: t.object,
    query: t.object,
    headers: t.type({
        authorization: t.union([t.string, t.null]),
    }),
    info: t.type({
        remoteAddress: t.string,
    }),
}, 'KibanaServerRequest');
exports.RuntimeKibanaUser = t.interface({
    username: t.string,
    roles: t.array(t.string),
    full_name: t.union([t.null, t.string]),
    email: t.union([t.null, t.string]),
    enabled: t.boolean,
}, 'KibanaUser');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvYmVhdHNfbWFuYWdlbWVudC9zZXJ2ZXIvbGliL2FkYXB0ZXJzL2ZyYW1ld29yay9hZGFwdGVyX3R5cGVzLnRzIiwic291cmNlcyI6WyIvaG9tZS9hbnRob255L2dpdF93b3Jrc3BhY2VzL2tpYmFuYS94LXBhY2svcGx1Z2lucy9iZWF0c19tYW5hZ2VtZW50L3NlcnZlci9saWIvYWRhcHRlcnMvZnJhbWV3b3JrL2FkYXB0ZXJfdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBTUEsaURBQTJCO0FBR2QsUUFBQSxnQkFBZ0IsR0FBRyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUM5QyxRQUFBLFlBQVksR0FBMEI7SUFDakQsSUFBSSxFQUFFLFVBQVU7Q0FDakIsQ0FBQztBQXdEVyxRQUFBLG9CQUFvQixHQUFHLENBQUMsQ0FBQyxTQUFTLENBQzdDO0lBQ0UsTUFBTSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDYixPQUFPLEVBQUUsQ0FBQyxDQUFDLE1BQU07S0FDbEIsQ0FBQztJQUNGLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2QsSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQ1gsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDakY7UUFDRCxPQUFPLEVBQUUsQ0FBQyxDQUFDLE9BQU87UUFDbEIscUJBQXFCLEVBQUUsQ0FBQyxDQUFDLE1BQU07S0FDaEMsQ0FBQztJQUNGLFFBQVEsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2YsT0FBTyxFQUFFLENBQUMsQ0FBQyxPQUFPO1FBQ2xCLFNBQVMsRUFBRSxDQUFDLENBQUMsT0FBTztLQUNyQixDQUFDO0lBQ0YsT0FBTyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDZCxPQUFPLEVBQUUsQ0FBQyxDQUFDLE9BQU87UUFDbEIsU0FBUyxFQUFFLENBQUMsQ0FBQyxPQUFPO0tBQ3JCLENBQUM7Q0FDSCxFQUNELGVBQWUsQ0FDaEIsQ0FBQztBQUdXLFFBQUEsMEJBQTBCLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FDbkQ7SUFDRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLE1BQU07SUFDaEIsT0FBTyxFQUFFLENBQUMsQ0FBQyxNQUFNO0lBQ2pCLEtBQUssRUFBRSxDQUFDLENBQUMsTUFBTTtJQUNmLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2QsYUFBYSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUMzQyxDQUFDO0lBQ0YsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDWCxhQUFhLEVBQUUsQ0FBQyxDQUFDLE1BQU07S0FDeEIsQ0FBQztDQUNILEVBQ0QscUJBQXFCLENBQ3RCLENBQUM7QUFHVyxRQUFBLGlCQUFpQixHQUFHLENBQUMsQ0FBQyxTQUFTLENBQzFDO0lBQ0UsUUFBUSxFQUFFLENBQUMsQ0FBQyxNQUFNO0lBQ2xCLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDeEIsU0FBUyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2xDLE9BQU8sRUFBRSxDQUFDLENBQUMsT0FBTztDQUNuQixFQUNELFlBQVksQ0FDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IExpZmVjeWNsZSwgUmVzcG9uc2VUb29sa2l0IH0gZnJvbSAnaGFwaSc7XG5pbXBvcnQgKiBhcyB0IGZyb20gJ2lvLXRzJztcbmltcG9ydCB7IExpY2Vuc2VUeXBlIH0gZnJvbSAnLi4vLi4vLi4vLi4vY29tbW9uL2NvbnN0YW50cy9zZWN1cml0eSc7XG5cbmV4cG9ydCBjb25zdCBpbnRlcm5hbEF1dGhEYXRhID0gU3ltYm9sKCdpbnRlcm5hbEF1dGhEYXRhJyk7XG5leHBvcnQgY29uc3QgaW50ZXJuYWxVc2VyOiBGcmFtZXdvcmtJbnRlcm5hbFVzZXIgPSB7XG4gIGtpbmQ6ICdpbnRlcm5hbCcsXG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIFhwYWNrSW5mbyB7XG4gIGxpY2Vuc2U6IHtcbiAgICBnZXRUeXBlOiAoKSA9PiBMaWNlbnNlVHlwZTtcbiAgICAvKiogSXMgdGhlIGxpY2Vuc2UgZXhwaXJlZCAqL1xuICAgIGlzQWN0aXZlOiAoKSA9PiBib29sZWFuO1xuICAgIGdldEV4cGlyeURhdGVJbk1pbGxpczogKCkgPT4gbnVtYmVyO1xuICB9O1xuICBmZWF0dXJlOiAocGx1Z2luSWQ6IHN0cmluZykgPT4gYW55O1xuICBpc0F2YWlsYWJsZTogKCkgPT4gYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCYWNrZW5kRnJhbWV3b3JrQWRhcHRlciB7XG4gIGludGVybmFsVXNlcjogRnJhbWV3b3JrSW50ZXJuYWxVc2VyO1xuICBpbmZvOiBudWxsIHwgRnJhbWV3b3JrSW5mbztcbiAgbG9nKHRleHQ6IHN0cmluZyk6IHZvaWQ7XG4gIG9uKGV2ZW50OiAneHBhY2suc3RhdHVzLmdyZWVuJyB8ICdlbGFzdGljc2VhcmNoLnN0YXR1cy5ncmVlbicsIGNiOiAoKSA9PiB2b2lkKTogdm9pZDtcbiAgZ2V0U2V0dGluZyhzZXR0aW5nUGF0aDogc3RyaW5nKTogYW55O1xuICBleHBvc2VTdGF0aWNEaXIodXJsUGF0aDogc3RyaW5nLCBkaXI6IHN0cmluZyk6IHZvaWQ7XG4gIHJlZ2lzdGVyUm91dGU8Um91dGVSZXF1ZXN0IGV4dGVuZHMgRnJhbWV3b3JrUmVxdWVzdCwgUm91dGVSZXNwb25zZSBleHRlbmRzIEZyYW1ld29ya1Jlc3BvbnNlPihcbiAgICByb3V0ZTogRnJhbWV3b3JrUm91dGVPcHRpb25zPFJvdXRlUmVxdWVzdCwgUm91dGVSZXNwb25zZT5cbiAgKTogdm9pZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBLaWJhbmFMZWdhY3lTZXJ2ZXIge1xuICBwbHVnaW5zOiB7XG4gICAgeHBhY2tfbWFpbjoge1xuICAgICAgc3RhdHVzOiB7XG4gICAgICAgIG9uOiAoc3RhdHVzOiAnZ3JlZW4nIHwgJ3llbGxvdycgfCAncmVkJywgY2FsbGJhY2s6ICgpID0+IHZvaWQpID0+IHZvaWQ7XG4gICAgICB9O1xuICAgICAgaW5mbzogWHBhY2tJbmZvO1xuICAgIH07XG4gICAga2liYW5hOiB7XG4gICAgICBzdGF0dXM6IHtcbiAgICAgICAgcGx1Z2luOiB7XG4gICAgICAgICAgdmVyc2lvbjogc3RyaW5nO1xuICAgICAgICB9O1xuICAgICAgfTtcbiAgICB9O1xuICAgIHNlY3VyaXR5OiB7XG4gICAgICBnZXRVc2VyOiAocmVxdWVzdDogS2liYW5hU2VydmVyUmVxdWVzdCkgPT4gYW55O1xuICAgIH07XG4gICAgZWxhc3RpY3NlYXJjaDoge1xuICAgICAgc3RhdHVzOiB7XG4gICAgICAgIG9uOiAoc3RhdHVzOiAnZ3JlZW4nIHwgJ3llbGxvdycgfCAncmVkJywgY2FsbGJhY2s6ICgpID0+IHZvaWQpID0+IHZvaWQ7XG4gICAgICB9O1xuICAgICAgZ2V0Q2x1c3RlcjogKCkgPT4gYW55O1xuICAgIH07XG4gICAgYmVhdHNfbWFuYWdlbWVudDoge307XG4gIH07XG4gIGNvbmZpZzogKCkgPT4gYW55O1xuICByb3V0ZTogKHJvdXRlQ29uZmlnOiBhbnkpID0+IHZvaWQ7XG4gIGxvZzogKG1lc3NhZ2U6IHN0cmluZykgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNvbnN0IFJ1bnRpbWVGcmFtZXdvcmtJbmZvID0gdC5pbnRlcmZhY2UoXG4gIHtcbiAgICBraWJhbmE6IHQudHlwZSh7XG4gICAgICB2ZXJzaW9uOiB0LnN0cmluZyxcbiAgICB9KSxcbiAgICBsaWNlbnNlOiB0LnR5cGUoe1xuICAgICAgdHlwZTogdC51bmlvbihcbiAgICAgICAgWydvc3MnLCAndHJpYWwnLCAnc3RhbmRhcmQnLCAnYmFzaWMnLCAnZ29sZCcsICdwbGF0aW51bSddLm1hcChzID0+IHQubGl0ZXJhbChzKSlcbiAgICAgICksXG4gICAgICBleHBpcmVkOiB0LmJvb2xlYW4sXG4gICAgICBleHBpcnlfZGF0ZV9pbl9taWxsaXM6IHQubnVtYmVyLFxuICAgIH0pLFxuICAgIHNlY3VyaXR5OiB0LnR5cGUoe1xuICAgICAgZW5hYmxlZDogdC5ib29sZWFuLFxuICAgICAgYXZhaWxhYmxlOiB0LmJvb2xlYW4sXG4gICAgfSksXG4gICAgd2F0Y2hlcjogdC50eXBlKHtcbiAgICAgIGVuYWJsZWQ6IHQuYm9vbGVhbixcbiAgICAgIGF2YWlsYWJsZTogdC5ib29sZWFuLFxuICAgIH0pLFxuICB9LFxuICAnRnJhbWV3b3JrSW5mbydcbik7XG5leHBvcnQgaW50ZXJmYWNlIEZyYW1ld29ya0luZm8gZXh0ZW5kcyB0LlR5cGVPZjx0eXBlb2YgUnVudGltZUZyYW1ld29ya0luZm8+IHt9XG5cbmV4cG9ydCBjb25zdCBSdW50aW1lS2liYW5hU2VydmVyUmVxdWVzdCA9IHQuaW50ZXJmYWNlKFxuICB7XG4gICAgcGFyYW1zOiB0Lm9iamVjdCxcbiAgICBwYXlsb2FkOiB0Lm9iamVjdCxcbiAgICBxdWVyeTogdC5vYmplY3QsXG4gICAgaGVhZGVyczogdC50eXBlKHtcbiAgICAgIGF1dGhvcml6YXRpb246IHQudW5pb24oW3Quc3RyaW5nLCB0Lm51bGxdKSxcbiAgICB9KSxcbiAgICBpbmZvOiB0LnR5cGUoe1xuICAgICAgcmVtb3RlQWRkcmVzczogdC5zdHJpbmcsXG4gICAgfSksXG4gIH0sXG4gICdLaWJhbmFTZXJ2ZXJSZXF1ZXN0J1xuKTtcbmV4cG9ydCBpbnRlcmZhY2UgS2liYW5hU2VydmVyUmVxdWVzdCBleHRlbmRzIHQuVHlwZU9mPHR5cGVvZiBSdW50aW1lS2liYW5hU2VydmVyUmVxdWVzdD4ge31cblxuZXhwb3J0IGNvbnN0IFJ1bnRpbWVLaWJhbmFVc2VyID0gdC5pbnRlcmZhY2UoXG4gIHtcbiAgICB1c2VybmFtZTogdC5zdHJpbmcsXG4gICAgcm9sZXM6IHQuYXJyYXkodC5zdHJpbmcpLFxuICAgIGZ1bGxfbmFtZTogdC51bmlvbihbdC5udWxsLCB0LnN0cmluZ10pLFxuICAgIGVtYWlsOiB0LnVuaW9uKFt0Lm51bGwsIHQuc3RyaW5nXSksXG4gICAgZW5hYmxlZDogdC5ib29sZWFuLFxuICB9LFxuICAnS2liYW5hVXNlcidcbik7XG5leHBvcnQgaW50ZXJmYWNlIEtpYmFuYVVzZXIgZXh0ZW5kcyB0LlR5cGVPZjx0eXBlb2YgUnVudGltZUtpYmFuYVVzZXI+IHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnJhbWV3b3JrQXV0aGVudGljYXRlZFVzZXI8QXV0aERhdGFUeXBlID0gYW55PiB7XG4gIGtpbmQ6ICdhdXRoZW50aWNhdGVkJztcbiAgW2ludGVybmFsQXV0aERhdGFdOiBBdXRoRGF0YVR5cGU7XG4gIHVzZXJuYW1lOiBzdHJpbmc7XG4gIHJvbGVzOiBzdHJpbmdbXTtcbiAgZnVsbF9uYW1lOiBzdHJpbmcgfCBudWxsO1xuICBlbWFpbDogc3RyaW5nIHwgbnVsbDtcbiAgZW5hYmxlZDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGcmFtZXdvcmtVbkF1dGhlbnRpY2F0ZWRVc2VyIHtcbiAga2luZDogJ3VuYXV0aGVudGljYXRlZCc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnJhbWV3b3JrSW50ZXJuYWxVc2VyIHtcbiAga2luZDogJ2ludGVybmFsJztcbn1cblxuZXhwb3J0IHR5cGUgRnJhbWV3b3JrVXNlcjxBdXRoRGF0YVR5cGUgPSBhbnk+ID1cbiAgfCBGcmFtZXdvcmtBdXRoZW50aWNhdGVkVXNlcjxBdXRoRGF0YVR5cGU+XG4gIHwgRnJhbWV3b3JrVW5BdXRoZW50aWNhdGVkVXNlclxuICB8IEZyYW1ld29ya0ludGVybmFsVXNlcjtcbmV4cG9ydCBpbnRlcmZhY2UgRnJhbWV3b3JrUmVxdWVzdDxcbiAgS2liYW5hU2VydmVyUmVxdWVzdEdlbmFyaWMgZXh0ZW5kcyBQYXJ0aWFsPEtpYmFuYVNlcnZlclJlcXVlc3Q+ID0gYW55XG4+IHtcbiAgdXNlcjogRnJhbWV3b3JrVXNlcjxLaWJhbmFTZXJ2ZXJSZXF1ZXN0R2VuYXJpY1snaGVhZGVycyddPjtcbiAgaGVhZGVyczogS2liYW5hU2VydmVyUmVxdWVzdEdlbmFyaWNbJ2hlYWRlcnMnXTtcbiAgaW5mbzogS2liYW5hU2VydmVyUmVxdWVzdFsnaW5mbyddO1xuICBwYXlsb2FkOiBLaWJhbmFTZXJ2ZXJSZXF1ZXN0R2VuYXJpY1sncGF5bG9hZCddO1xuICBwYXJhbXM6IEtpYmFuYVNlcnZlclJlcXVlc3RHZW5hcmljWydwYXJhbXMnXTtcbiAgcXVlcnk6IEtpYmFuYVNlcnZlclJlcXVlc3RHZW5hcmljWydxdWVyeSddO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZyYW1ld29ya1JvdXRlT3B0aW9uczxcbiAgUm91dGVSZXF1ZXN0IGV4dGVuZHMgRnJhbWV3b3JrUmVxdWVzdCA9IEZyYW1ld29ya1JlcXVlc3QsXG4gIFJvdXRlUmVzcG9uc2UgZXh0ZW5kcyBGcmFtZXdvcmtSZXNwb25zZSA9IGFueVxuPiB7XG4gIHBhdGg6IHN0cmluZztcbiAgbWV0aG9kOiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgdmhvc3Q/OiBzdHJpbmc7XG4gIGxpY2Vuc2VSZXF1aXJlZD86IHN0cmluZ1tdO1xuICByZXF1aXJlZFJvbGVzPzogc3RyaW5nW107XG4gIGhhbmRsZXI6IEZyYW1ld29ya1JvdXRlSGFuZGxlcjxSb3V0ZVJlcXVlc3QsIFJvdXRlUmVzcG9uc2U+O1xuICBjb25maWc/OiB7fTtcbn1cblxuZXhwb3J0IHR5cGUgRnJhbWV3b3JrUm91dGVIYW5kbGVyPFxuICBSb3V0ZVJlcXVlc3QgZXh0ZW5kcyBLaWJhbmFTZXJ2ZXJSZXF1ZXN0LFxuICBSb3V0ZVJlc3BvbnNlIGV4dGVuZHMgRnJhbWV3b3JrUmVzcG9uc2Vcbj4gPSAocmVxdWVzdDogRnJhbWV3b3JrUmVxdWVzdDxSb3V0ZVJlcXVlc3Q+LCBoOiBSZXNwb25zZVRvb2xraXQpID0+IHZvaWQ7XG5cbmV4cG9ydCB0eXBlIEZyYW1ld29ya1Jlc3BvbnNlID0gTGlmZWN5Y2xlLlJldHVyblZhbHVlO1xuIl19