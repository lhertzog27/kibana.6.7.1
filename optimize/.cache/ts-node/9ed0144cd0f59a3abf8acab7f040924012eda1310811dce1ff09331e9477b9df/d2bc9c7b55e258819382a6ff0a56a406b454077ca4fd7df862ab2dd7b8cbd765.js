"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
class FrameworkFieldsAdapter {
    constructor(framework) {
        this.framework = framework;
    }
    async getIndexFields(request, indices) {
        const indexPatternsService = this.framework.getIndexPatternsService(request);
        const response = await indexPatternsService.getFieldsForWildcard({
            pattern: indices,
        });
        return response;
    }
}
exports.FrameworkFieldsAdapter = FrameworkFieldsAdapter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYW50aG9ueS9naXRfd29ya3NwYWNlcy9raWJhbmEveC1wYWNrL3BsdWdpbnMvaW5mcmEvc2VydmVyL2xpYi9hZGFwdGVycy9maWVsZHMvZnJhbWV3b3JrX2ZpZWxkc19hZGFwdGVyLnRzIiwic291cmNlcyI6WyIvaG9tZS9hbnRob255L2dpdF93b3Jrc3BhY2VzL2tpYmFuYS94LXBhY2svcGx1Z2lucy9pbmZyYS9zZXJ2ZXIvbGliL2FkYXB0ZXJzL2ZpZWxkcy9mcmFtZXdvcmtfZmllbGRzX2FkYXB0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7O0dBSUc7O0FBS0gsTUFBYSxzQkFBc0I7SUFHakMsWUFBWSxTQUF1QztRQUNqRCxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUM3QixDQUFDO0lBRU0sS0FBSyxDQUFDLGNBQWMsQ0FDekIsT0FBOEIsRUFDOUIsT0FBZTtRQUVmLE1BQU0sb0JBQW9CLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3RSxNQUFNLFFBQVEsR0FBRyxNQUFNLG9CQUFvQixDQUFDLG9CQUFvQixDQUFDO1lBQy9ELE9BQU8sRUFBRSxPQUFPO1NBQ2pCLENBQUMsQ0FBQztRQUNILE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRjtBQWpCRCx3REFpQkMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBJbmZyYUJhY2tlbmRGcmFtZXdvcmtBZGFwdGVyLCBJbmZyYUZyYW1ld29ya1JlcXVlc3QgfSBmcm9tICcuLi9mcmFtZXdvcmsnO1xuaW1wb3J0IHsgRmllbGRzQWRhcHRlciwgSW5kZXhGaWVsZERlc2NyaXB0b3IgfSBmcm9tICcuL2FkYXB0ZXJfdHlwZXMnO1xuXG5leHBvcnQgY2xhc3MgRnJhbWV3b3JrRmllbGRzQWRhcHRlciBpbXBsZW1lbnRzIEZpZWxkc0FkYXB0ZXIge1xuICBwcml2YXRlIGZyYW1ld29yazogSW5mcmFCYWNrZW5kRnJhbWV3b3JrQWRhcHRlcjtcblxuICBjb25zdHJ1Y3RvcihmcmFtZXdvcms6IEluZnJhQmFja2VuZEZyYW1ld29ya0FkYXB0ZXIpIHtcbiAgICB0aGlzLmZyYW1ld29yayA9IGZyYW1ld29yaztcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBnZXRJbmRleEZpZWxkcyhcbiAgICByZXF1ZXN0OiBJbmZyYUZyYW1ld29ya1JlcXVlc3QsXG4gICAgaW5kaWNlczogc3RyaW5nXG4gICk6IFByb21pc2U8SW5kZXhGaWVsZERlc2NyaXB0b3JbXT4ge1xuICAgIGNvbnN0IGluZGV4UGF0dGVybnNTZXJ2aWNlID0gdGhpcy5mcmFtZXdvcmsuZ2V0SW5kZXhQYXR0ZXJuc1NlcnZpY2UocmVxdWVzdCk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBpbmRleFBhdHRlcm5zU2VydmljZS5nZXRGaWVsZHNGb3JXaWxkY2FyZCh7XG4gICAgICBwYXR0ZXJuOiBpbmRpY2VzLFxuICAgIH0pO1xuICAgIHJldHVybiByZXNwb25zZTtcbiAgfVxufVxuIl19