'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EuiInMemoryTable = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _basic_table = require('./basic_table');

var _pagination_bar = require('./pagination_bar');

var _predicate = require('../../services/predicate');

var _sort = require('../../services/sort');

var _search_bar = require('../search_bar');

var _spacer = require('../spacer/spacer');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InMemoryTablePropTypes = {
  columns: _propTypes2.default.arrayOf(_basic_table.ColumnType).isRequired,
  items: _propTypes2.default.array,
  loading: _propTypes2.default.bool,
  message: _propTypes2.default.string,
  error: _propTypes2.default.string,
  search: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.shape({
    defaultQuery: _search_bar.QueryType,
    box: _propTypes2.default.shape(_search_bar.SearchBoxConfigPropTypes),
    filters: _search_bar.SearchFiltersFiltersType
  })]),
  pagination: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.shape({
    pageSizeOptions: _propTypes2.default.arrayOf(_propTypes2.default.number)
  })]),
  sorting: _propTypes2.default.bool,
  selection: _basic_table.SelectionType
};

var initialQuery = function initialQuery(props) {
  var search = props.search;

  if (!search) {
    return undefined;
  }
  var query = search.defaultQuery || '';
  return (0, _predicate.isString)(query) ? _search_bar.Query.parse(query) : query;
};

var initialCriteria = function initialCriteria(props) {
  var pagination = props.pagination;

  return {
    page: !pagination ? undefined : {
      index: 0,
      size: pagination.pageSizeOptions ? pagination.pageSizeOptions[0] : _pagination_bar.defaults.pageSizeOptions[0]
    }
  };
};

var EuiInMemoryTable = exports.EuiInMemoryTable = function (_React$Component) {
  _inherits(EuiInMemoryTable, _React$Component);

  function EuiInMemoryTable(props) {
    _classCallCheck(this, EuiInMemoryTable);

    var _this = _possibleConstructorReturn(this, (EuiInMemoryTable.__proto__ || Object.getPrototypeOf(EuiInMemoryTable)).call(this, props));

    var criteria = initialCriteria(props);
    var query = initialQuery(props);
    _this.state = {
      data: _this.computeData(props.items, criteria, query),
      query: query,
      criteria: criteria
    };
    return _this;
  }

  _createClass(EuiInMemoryTable, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      this.setState(function (prevState) {
        var data = _this2.computeData(nextProps.items, prevState.criteria);
        return { data: data };
      });
    }
  }, {
    key: 'computeData',
    value: function computeData(items, criteria, query) {
      if (!items) {
        return { items: [], totalCount: 0 };
      }
      if (query) {
        items = _search_bar.Query.execute(query, items);
      }
      if (criteria.sort) {
        items = items.sort(_sort.Comparators.property(criteria.sort.field, _sort.Comparators.default(criteria.sort.direction)));
      }
      var totalCount = items.length;
      if (criteria.page) {
        var _criteria$page = criteria.page,
            index = _criteria$page.index,
            size = _criteria$page.size;

        var from = index * size;
        items = items.slice(from, Math.min(from + size, items.length));
      }
      return { items: items, totalCount: totalCount };
    }
  }, {
    key: 'onCriteriaChange',
    value: function onCriteriaChange(criteria) {
      var _this3 = this;

      this.setState(function (prevState) {
        return {
          criteria: criteria,
          data: _this3.computeData(_this3.props.items, criteria, prevState.query)
        };
      });
    }
  }, {
    key: 'onQueryChange',
    value: function onQueryChange(query) {
      var _this4 = this;

      this.setState(function (prevState) {
        return {
          query: query,
          data: _this4.computeData(_this4.props.items, prevState.criteria, query)
        };
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          criteria = _state.criteria,
          data = _state.data;
      var _props = this.props,
          loading = _props.loading,
          message = _props.message,
          error = _props.error,
          selection = _props.selection;
      var items = data.items,
          totalCount = data.totalCount;

      var pagination = !this.props.pagination ? undefined : _extends({
        pageIndex: criteria.page.index,
        pageSize: criteria.page.size,
        totalItemCount: totalCount
      }, (0, _predicate.isBoolean)(this.props.pagination) ? {} : this.props.pagination);
      var sorting = !this.props.sorting ? undefined : {
        sort: criteria.sort
      };
      var searchBar = this.resolveSearchBar();
      var table = _react2.default.createElement(_basic_table.EuiBasicTable, {
        items: message ? [] : items // if message is configured, we force showing it instead of the items
        , columns: this.props.columns,
        pagination: pagination,
        sorting: sorting,
        selection: selection,
        onChange: this.onCriteriaChange.bind(this),
        error: error,
        loading: loading,
        noItemsMessage: message
      });

      if (!searchBar) {
        return table;
      }

      return _react2.default.createElement(
        'div',
        null,
        searchBar,
        _react2.default.createElement(_spacer.EuiSpacer, { size: 'l' }),
        table
      );
    }
  }, {
    key: 'resolveSearchBar',
    value: function resolveSearchBar() {
      var search = this.props.search;

      if (search) {
        var searchBarProps = (0, _predicate.isBoolean)(search) ? {} : search;
        return _react2.default.createElement(_search_bar.EuiSearchBar, _extends({
          onChange: this.onQueryChange.bind(this)
        }, searchBarProps));
      }
    }
  }]);

  return EuiInMemoryTable;
}(_react2.default.Component);

EuiInMemoryTable.propTypes = InMemoryTablePropTypes;
EuiInMemoryTable.defaultProps = {
  pagination: false,
  sorting: false
};