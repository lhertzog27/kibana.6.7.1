'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.must = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _predicate = require('../../../services/predicate');

var _moment = require('moment/moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultOptions = {
  ignoreCase: true
};

var must = exports.must = function must(value, token) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  options = _extends({}, defaultOptions, options);
  if ((0, _predicate.isString)(value)) {
    return options.ignoreCase ? value.toLowerCase().includes(token.toLowerCase()) : value.includes(token);
  }
  if ((0, _predicate.isNumber)(value)) {
    token = Number(token);
    return value === token;
  }
  if ((0, _predicate.isBoolean)(value)) {
    return token === value.toString();
  }
  if (_moment2.default.isDate(value) || _moment2.default.isMoment(value)) {
    return (0, _moment2.default)(value).isSame(token);
  }
  if ((0, _predicate.isArray)(value)) {
    return value.some(function (item) {
      return must(item, token, options);
    });
  }
  return false; // unknown value type
};