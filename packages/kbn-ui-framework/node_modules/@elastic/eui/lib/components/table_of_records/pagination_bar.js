'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PaginationBar = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _spacer = require('../spacer');

var _table = require('../table');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaults = {
  pageSizeOptions: [5, 10, 20]
};

var PaginationBar = exports.PaginationBar = function PaginationBar(_ref) {
  var config = _ref.config,
      model = _ref.model,
      onPageSizeChange = _ref.onPageSizeChange,
      onPageChange = _ref.onPageChange;

  if (!model.criteria || !model.criteria.page) {
    throw new Error('The table of records is configured to show pagination but the provided\n        model is missing page criteria. Make sure the page criteria (index and size) is specified\n        under model.criteria.page');
  }
  if (!config.onDataCriteriaChange) {
    throw new Error('The table of records is provided with a paginated model but [onDataCriteriaChange] is\n        not configured. This callback must be implemented to handle pagination changes');
  }
  var pageSizeOptions = config.pagination.pageSizeOptions ? config.pagination.pageSizeOptions : defaults.pageSizeOptions;
  var totalRecordCount = model.data.totalRecordCount || model.data.records.length;
  var pageCount = Math.ceil(totalRecordCount / model.criteria.page.size);
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(_spacer.EuiSpacer, { size: 'm' }),
    _react2.default.createElement(_table.EuiTablePagination, {
      activePage: model.criteria.page.index,
      itemsPerPage: model.criteria.page.size,
      itemsPerPageOptions: pageSizeOptions,
      pageCount: pageCount,
      onChangeItemsPerPage: onPageSizeChange,
      onChangePage: onPageChange
    })
  );
};